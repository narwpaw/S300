###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           11/Sep/2013  19:44:47 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\Framework\ScreenMENU2.c                       #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\ScreenMENU2.c" -D AT91SAM7S256 -D   #
#                    AT91SAM7SEK -D iH -D _LCD_NEGATIV_OLD_ -D __ALARM -D     #
#                    __WIFI_MODULE -D _DEBUG_ -D S300iOld -D _ADMINISTRATOR_  #
#                    -lC "D:\Zeuron\Projekty\S300\S300-program v1.4 -         #
#                    12.06.2013\S300X (Old)\List\" --diag_suppress Pa082 -o   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\S300X (Old)\Obj\" --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian little --cpu ARM7TDMI   #
#                    -e --fpu None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 5.0\ARM\INC\DLib_Config_Norma #
#                    l.h" -I "D:\Zeuron\Projekty\S300\S300-program v1.4 -     #
#                    12.06.2013\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.4 - 12.06.2013\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v1.4 - 12.06.2013\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v1.4 - 12.06.2013\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\Configuration\" -I "C:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.0\ARM\INC\" --section .text=Debug.txt --interwork      #
#                    --cpu_mode thumb -Ol                                     #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300X (Old)\List\ScreenMENU2.lst              #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300X (Old)\Obj\ScreenMENU2.o                 #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                                 CEURON                                   *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : Prog.Screen.c                                 *//
      7          //*  Opis                         : Obsluga grafiki i ekranu dotykowego      *//
      8          //*  Autor                        : Pawe³ Narwojsz                           */F/
      9          //*  Data utrzorzenia             : 19.09.2007                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24          #include "ScreenMENU2.h"
     25          #include "Framework.h "
     26          #include "Language.h"
     27          #include "core/device.h"                                                        //³aduje bibliotreki dla odpowiedniego procesora
     28          #include "LCD.h"
     29          #include "Application_prog.h"
     30          #include <intrinsics.h>
     31          #include "Animation.c"
     32          #include "ScreenSorce.h"

   \                                 In section .rodata, align 4
   \   char const __data ProcSt_graf[3][8]
   \                     ProcSt_graf:
   \   00000000   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 96, 96, 96, 224, 224, 96, 96, 96, 0
   \              1818606060E0
   \              E060606000  
   \   00000011   000007070000       DC8 0, 0, 7, 7, 0, 0, 0
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data ProcSet_graf[3][9]
   \                     ProcSet_graf:
   \   00000000   10180C0F0F0C       DC8 16, 24, 12, 15, 15, 12, 24, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3
   \              181000000000
   \              000000000000
   \              0103        
   \   00000014   060606060301       DC8 6, 6, 6, 6, 3, 1, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   char const __data ProcWOUTS_graf[3][9]
   \                     ProcWOUTS_graf:
   \   00000000   D0188C4F4F4C       DC8 208, 24, 140, 79, 79, 76, 88, 144, 0, 31, 16, 23, 18, 20, 20, 20
   \              5890001F1017
   \              12141414    
   \   00000010   730001030606       DC8 115, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000

   \                                 In section .rodata, align 4
   \   char const __data ProcWOUTR_graf[3][9]
   \                     ProcWOUTR_graf:
   \   00000000   90584C4F4F8C       DC8 144, 88, 76, 79, 79, 140, 24, 208, 0, 119, 18, 20, 20, 20, 19, 16
   \              18D000771214
   \              14141310    
   \   00000010   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000

   \                                 In section .rodata, align 4
   \   char const __data ProcWOUTC_graf[3][9]
   \                     ProcWOUTC_graf:
   \   00000000   08CC26272726       DC8 8, 204, 38, 39, 39, 38, 204, 8, 0, 0, 115, 17, 82, 82, 66, 113, 0
   \              CC0800007311
   \              5252427100  
   \   00000011   000103060606       DC8 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              0603010000  

   \                                 In section .rodata, align 4
   \   char const __data ProcSPK_graf[3][9]
   \                     ProcSPK_graf:
   \   00000000   00C0407F7F40       DC8 0, 192, 64, 127, 127, 64, 192, 0, 0, 152, 85, 18, 81, 17, 82, 21
   \              C00000985512
   \              51115215    
   \   00000010   588000000001       DC8 88, 128, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0
   \              000100000000

   \                                 In section .rodata, align 4
   \   char const __data ProcTime_graf[3][8]
   \                     ProcTime_graf:
   \   00000000   D050509F1F90       DC8 208, 80, 80, 159, 31, 144, 80, 208, 23, 21, 20, 242, 241, 18, 20
   \              50D0171514F2
   \              F11214      
   \   0000000F   170000000707       DC8 23, 0, 0, 0, 7, 7, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \   char const __data ProcTMRS_graf[3][9]
   \                     ProcTMRS_graf:
   \   00000000   10180C0F0FCC       DC8 16, 24, 12, 15, 15, 204, 24, 208, 0, 113, 17, 17, 17, 17, 23, 16
   \              18D000711111
   \              11111710    
   \   00000010   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000

   \                                 In section .rodata, align 4
   \   char const __data ProcClock_graf[3][8]
   \                     ProcClock_graf:
   \   00000000   A848282F2F48       DC8 168, 72, 40, 47, 47, 72, 168, 200, 43, 36, 40, 235, 233, 36, 43, 38
   \              A8C82B2428EB
   \              E9242B26    
   \   00000010   000000070700       DC8 0, 0, 0, 7, 7, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   char const __data ProcDay_graf[3][8]
   \                     ProcDay_graf:
   \   00000000   FC0434575734       DC8 252, 4, 52, 87, 87, 52, 4, 252, 255, 0, 37, 39, 85, 82, 0, 255, 1
   \              04FCFF002527
   \              555200FF01  
   \   00000011   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          

   \                                 In section .rodata, align 4
   \   char const __data ProcToggleRS_graf[3][19]
   \                     ProcToggleRS_graf:
   \   00000000   00F808684F2F       DC8 0, 248, 8, 104, 79, 47, 104, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              680808080808
   \              080808F80000
   \              00          
   \   00000013   00FF80B89494       DC8 0, 255, 128, 184, 148, 148, 136, 128, 128, 128, 133, 131, 133, 131
   \              888080808583
   \              8583        
   \   00000021   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000070700
   \              000000000000
   \              000000      
   \   00000036   000000000000       DC8 0, 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcToggleT_graf[3][19]
   \                     ProcToggleT_graf:
   \   00000000   00F808484F4F       DC8 0, 248, 8, 72, 79, 79, 232, 8, 8, 104, 200, 8, 104, 200, 8, 248, 0
   \              E8080868C808
   \              68C808F800  
   \   00000011   000000FF80B8       DC8 0, 0, 0, 255, 128, 184, 148, 148, 136, 128, 128, 188, 135, 128, 183
   \              9494888080BC
   \              8780B7      
   \   00000020   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   00000035   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data ProcTLI1_graf[3][19]
   \                     ProcTLI1_graf:
   \   00000000   00F808080F8F       DC8 0, 248, 8, 8, 15, 143, 8, 8, 8, 168, 72, 8, 104, 200, 8, 248, 0, 0
   \              080808A84808
   \              68C808F80000
   \   00000012   0000FF808282       DC8 0, 0, 255, 128, 130, 130, 130, 131, 130, 128, 187, 132, 128, 183
   \              82838280BB84
   \              80B7        
   \   00000020   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   00000035   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data ProcLim_graf[3][18]
   \                     ProcLim_graf:
   \   00000000   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   00000013   80B894948881       DC8 128, 184, 148, 148, 136, 129, 130, 129, 140, 132, 136, 140, 128
   \              82818C84888C
   \              80          
   \   00000020   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   00000036   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcEven_graf[3][18]
   \                     ProcEven_graf:
   \   00000000   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   00000013   80B894948883       DC8 128, 184, 148, 148, 136, 131, 128, 131, 152, 136, 144, 152, 128
   \              808398889098
   \              80          
   \   00000020   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   00000036   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcPlus_graf[3][18]
   \                     ProcPlus_graf:
   \   00000000   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   00000012   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 129, 131, 129, 140, 132, 136, 140
   \              8183818C8488
   \              8C          
   \   0000001F   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000034   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcMinus_graf[3][18]
   \                     ProcMinus_graf:
   \   00000000   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   00000012   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 131, 128, 140, 132, 136, 140
   \              8083808C8488
   \              8C          
   \   0000001F   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000034   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcMul_graf[3][18]
   \                     ProcMul_graf:
   \   00000000   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 136, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808880808
   \              0808F8000000
   \   00000012   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 130, 129, 154, 136, 144, 152
   \              8082819A8890
   \              98          
   \   0000001F   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000034   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcDiv_graf[3][18]
   \                     ProcDiv_graf:
   \   00000000   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 72, 136, 8, 8, 8, 248, 0, 0, 0
   \              080808488808
   \              0808F8000000
   \   00000012   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 128, 128, 152, 136, 145, 154
   \              808080988891
   \              9A          
   \   0000001F   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000034   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcNot_graf[3][8]
   \                     ProcNot_graf:
   \   00000000   024A6A6B5B5A       DC8 2, 74, 106, 107, 91, 90, 74, 2, 0, 102, 41, 41, 41, 118, 32, 0, 1
   \              4A0200662929
   \              2976200001  
   \   00000011   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          

   \                                 In section .rodata, align 4
   \   char const __data ProcConstAnal_graf[3][18]
   \                     ProcConstAnal_graf:
   \   00000000   FE0202020202       DC8 254, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 254, 0, 255, 0, 0
   \              020202020202
   \              02020202FE00
   \              FF0000      
   \   00000015   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 3, 2, 6, 4, 4, 6, 2
   \              000000000000
   \              00FF00030206
   \              04040602    
   \   0000002B   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0
   \              020202030000
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data ProcGetAnal_graf[3][17]
   \                     ProcGetAnal_graf:
   \   00000000   FE0000000000       DC8 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 236, 42, 106, 34, 236, 255
   \              00000000FE00
   \              EC2A6A22ECFF
   \   00000012   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 6, 4
   \              000000FF0084
   \              8484848E0306
   \              04          
   \   00000025   040404040404       DC8 4, 4, 4, 4, 4, 4, 6, 3, 0, 2, 2, 1, 2, 1, 0
   \              060300020201
   \              020100      

   \                                 In section .rodata, align 4
   \   char const __data ProcSetAnal_graf[3][17]
   \                     ProcSetAnal_graf:
   \   00000000   FE0301010101       DC8 254, 3, 1, 1, 1, 1, 1, 1, 1, 3, 254, 0, 230, 40, 110, 34, 236, 255
   \              01010103FE00
   \              E6286E22ECFF
   \   00000012   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 0, 0
   \              000000FF0084
   \              8484848E0300
   \              00          
   \   00000025   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 1, 2, 1, 0
   \              000300020201
   \              020100      

   \                                 In section .rodata, align 4
   \   char const __data ProcSt_iko[2][8]
   \                     ProcSt_iko:
   \   00000000   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 6, 6, 6, 62, 62, 6, 6, 6
   \              18180606063E
   \              3E060606    

   \                                 In section .rodata, align 4
   \   char const __data ProcSet_iko[2][8]
   \                     ProcSet_iko:
   \   00000000   6030181F1F18       DC8 96, 48, 24, 31, 31, 24, 48, 96, 3, 6, 12, 12, 12, 12, 6, 3
   \              306003060C0C
   \              0C0C0603    

   \                                 In section .rodata, align 4
   \   char const __data ProcTime_iko[2][12]
   \                     ProcTime_iko:
   \   00000000   E018040202C1       DC8 224, 24, 4, 2, 2, 193, 65, 66, 66, 68, 24, 224, 0, 3, 4, 8, 8, 17
   \              4142424418E0
   \              000304080811
   \   00000012   100808040300       DC8 16, 8, 8, 4, 3, 0

   \                                 In section .rodata, align 4
   \   char const __data ProcLog_iko[2][8]
   \                     ProcLog_iko:
   \   00000000   00006F919191       DC8 0, 0, 111, 145, 145, 145, 97, 1, 12, 18, 92, 18, 18, 18, 28, 0
   \              61010C125C12
   \              12121C00    

   \                                 In section .rodata, align 4
   \   char const __data ProcAnl_iko[2][8]
   \                     ProcAnl_iko:
   \   00000000   0029292FE909       DC8 0, 41, 41, 47, 233, 9, 6, 0, 0, 93, 5, 5, 4, 4, 4, 0
   \              0600005D0505
   \              04040400    

   \                                 In section .rodata, align 4
   \   char const __data ProcSt_Button[3][6]
   \                     ProcSt_Button:
   \   00000000   3F3F00F8F0F0       DC8 63, 63, 0, 248, 240, 240, 240, 240, 0, 127, 63, 63, 7, 7, 0, 0, 0
   \              F0F0007F3F3F
   \              0707000000  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data BateriaWyladowana[1][9]
   \                     BateriaWyladowana:
   \   00000000   3F3131292925       DC8 63, 49, 49, 41, 41, 37, 37, 51, 30, 0, 0, 0
   \              25331E000000

   \                                 In section .data, align 4
   \   char __data BateriaWyladowanaDuza[3][8]
   \                     BateriaWyladowanaDuza:
   \   00000000   FC0407050507       DC8 252, 4, 7, 5, 5, 7, 4, 252, 255, 1, 226, 196, 136, 16, 32, 255, 7
   \              04FCFF01E2C4
   \              881020FF07  
   \   00000011   040505050504       DC8 4, 5, 5, 5, 5, 4, 7
   \              07          

   \                                 In section .rodata, align 4
   \   char const __data Frame[2][11]
   \                     Frame:
   \   00000000   FE0101010101       DC8 254, 1, 1, 1, 1, 1, 1, 1, 1, 1, 254, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4
   \              01010101FE03
   \              040404040404
   \              040404      
   \   00000015   030000             DC8 3, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data SPK_1[4][2][5]
   \                     SPK_1:
   \   00000000   3F202020E000       DC8 63, 32, 32, 32, 224, 0, 0, 0, 0, 255, 143, 136, 136, 136, 248, 143
   \              000000FF8F88
   \              8888F88F    
   \   00000010   888888F8E718       DC8 136, 136, 136, 248, 231, 24, 24, 24, 24, 207, 48, 48, 48, 48, 215
   \              181818CF3030
   \              3030D7      
   \   0000001F   28282828AF50       DC8 40, 40, 40, 40, 175, 80, 80, 80, 80
   \              505050      

   \                                 In section .rodata, align 4
   \   char const __data GraphTab[8][3][18]
   \                     GraphTab:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000017   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000002E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 64, 192, 72, 208, 194, 36, 144
   \              000080C040C0
   \              48D0C22490  
   \   0000003F   908B101024C2       DC8 144, 139, 16, 16, 36, 194, 16, 8, 0, 7, 9, 14, 9, 76, 43, 15, 147
   \              10080007090E
   \              094C2B0F93  
   \   00000050   222444202090       DC8 34, 36, 68, 32, 32, 144, 12, 35, 64, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0C2340010000
   \              000000000100
   \              00          
   \   00000063   000300000001       DC8 0, 3, 0, 0, 0, 1, 0, 0, 0, 252, 252, 252, 4, 252, 4, 252, 4, 252, 4
   \              000000FCFCFC
   \              04FC04FC04FC
   \              04          
   \   00000076   FC04FCFEFFFF       DC8 252, 4, 252, 254, 255, 255, 254, 252, 255, 255, 255, 0, 255, 0, 255
   \              FEFCFFFFFF00
   \              FF00FF      
   \   00000085   00FF00FF007F       DC8 0, 255, 0, 255, 0, 127, 159, 15, 15, 159, 127, 1, 1, 1, 1, 1, 1, 1
   \              9F0F0F9F7F01
   \              010101010101
   \   00000097   010101010101       DC8 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 240, 64, 128, 128, 28, 226, 193
   \              0101010000F0
   \              4080801CE2C1
   \   000000A9   E171CDC3C141       DC8 225, 113, 205, 195, 193, 65, 32, 32, 32, 64, 128, 7, 8, 16, 16, 17
   \              202020408007
   \              08101011    
   \   000000B9   0B0F0CC83C07       DC8 11, 15, 12, 200, 60, 7, 14, 18, 226, 4, 4, 8, 63, 0, 0, 0, 0, 0, 2
   \              0E12E2040408
   \              3F0000000000
   \              02          
   \   000000CC   020302020202       DC8 2, 3, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 240, 240, 48, 48, 48, 48, 48
   \              010000000000
   \              00F0F0303030
   \              3030        
   \   000000E0   FFFFAA54A850       DC8 255, 255, 170, 84, 168, 80, 176, 240, 240, 0, 0, 255, 255, 0, 0, 0
   \              B0F0F00000FF
   \              FF000000    
   \   000000F0   0000070F1A35       DC8 0, 0, 7, 15, 26, 53, 106, 213, 170, 255, 255, 0, 0, 3, 3, 3, 3, 3
   \              6AD5AAFFFF00
   \              000303030303
   \   00000102   030303030303       DC8 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 96, 224, 224, 184, 104, 168
   \              030303030300
   \              60E0E0B868A8
   \   00000114   68A868A868A8       DC8 104, 168, 104, 168, 104, 168, 104, 136, 8, 8, 8, 248, 0, 1, 7, 63
   \              6888080808F8
   \              0001073F    
   \   00000124   3E3926392639       DC8 62, 57, 38, 57, 38, 57, 38, 57, 38, 57, 38, 56, 32, 63, 0, 0, 0, 0
   \              263926392638
   \              203F00000000
   \   00000136   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 128, 128, 0, 128
   \              000000000000
   \              000080008080
   \              0080        
   \   0000014A   00E0A0A0A020       DC8 0, 224, 160, 160, 160, 32, 32, 64, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              204080000000
   \              000000000000
   \   0000015C   000101011BFF       DC8 0, 1, 1, 1, 27, 255, 254, 0, 231, 60, 24, 255, 0, 0, 0, 0, 0, 0, 0
   \              FE00E73C18FF
   \              000000000000
   \              00          
   \   0000016F   000000000303       DC8 0, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 128, 192, 192, 128, 128, 224, 128
   \              000300000080
   \              C0C08080E080
   \   00000181   E080E0808080       DC8 224, 128, 224, 128, 128, 128, 128, 128, 128, 128, 0, 3, 7, 7, 3, 3
   \              808080800003
   \              07070303    
   \   00000191   030303020202       DC8 3, 3, 3, 2, 2, 2, 14, 2, 14, 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0E020E020E02
   \              010000000000
   \              00000000    
   \   000001A7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \   struct <unnamed> const __data ScreenSetTab_0[11]
   \                     ScreenSetTab_0:
   \   00000000   1E6722160030       DC8 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0, 0, 22, 40, 42, 0
   \              16352A301635
   \              000016282A00
   \   00000012   162800000000       DC8 22, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18
   \              000000000000
   \              000000000000
   \              174B12      
   \   00000027   181732121817       DC8 24, 23, 50, 18, 24, 23, 8, 18, 24, 0, 0, 0, 0, 0, 102, 29, 11
   \              081218000000
   \              0000661D0B  
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 64, 1, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              002C40010000
   \              00000000    
   \   0000004E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 105, 34, 21, 0, 0, 22, 57, 42, 0
   \              000000001E69
   \              221500001639
   \              2A00        
   \   00000062   163900000000       DC8 22, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000078   00000000171D       DC8 0, 0, 0, 0, 23, 29, 18, 24, 23, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817041218
   \              000000000000
   \              0000        
   \   0000008C   000000000065       DC8 0, 0, 0, 0, 0, 101, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 64, 1
   \              1D0B00000000
   \              00000000003C
   \              4001        
   \   000000A0   00000000004A       DC8 0, 0, 0, 0, 0, 74, 64, 24, 30, 62, 35, 11, 0, 0, 0, 0, 30, 105, 34
   \              40181E3E230B
   \              000000001E69
   \              22          
   \   000000B3   15001A16312A       DC8 21, 0, 26, 22, 49, 42, 26, 22, 49, 0, 0, 22, 24, 42, 0, 22, 24, 0
   \              1A1631000016
   \              182A00161800
   \   000000C5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 51, 18, 23, 23, 27
   \              000000000000
   \              000000173312
   \              17171B      
   \   000000DA   121717001218       DC8 18, 23, 23, 0, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11
   \              000000000000
   \              000000661D0B
   \   000000EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 64, 23, 0, 0
   \              000000000000
   \              00000000004C
   \              40170000    
   \   00000102   000000000000       DC8 0, 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              1E6722160030
   \              16352A301635
   \              00          
   \   00000115   181E1522181E       DC8 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30, 21, 0, 0, 0, 0
   \              1500001E1522
   \              001E15000000
   \              00          
   \   00000128   00000000174B       DC8 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817321218
   \              000000000000
   \              0000        
   \   0000013C   00661D090000       DC8 0, 102, 29, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000150   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 22, 53, 42
   \              000000000000
   \              000000000030
   \              16352A      
   \   00000165   30163500181E       DC8 48, 22, 53, 0, 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30
   \              1522181E1500
   \              001E1522001E
   \   00000177   150000000000       DC8 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18
   \              000000000000
   \              00174B121817
   \              3212        
   \   0000018B   182D67121800       DC8 24, 45, 103, 18, 24, 0, 0, 0, 0, 15, 115, 29, 11, 15, 104, 29, 11
   \              0000000F731D
   \              0B0F681D0B  
   \   0000019C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001B3   00000000001E       DC8 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              672216003016
   \              352A30163500
   \   000001C5   181415161814       DC8 24, 20, 21, 22, 24, 20, 21, 44, 24, 20, 21, 0, 0, 20, 21, 22, 0, 20
   \              152C18141500
   \              001415160014
   \   000001D7   152C00141517       DC8 21, 44, 0, 20, 21, 23, 75, 18, 24, 23, 50, 18, 24
   \              4B1218173212
   \              18          
   \   000001E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000661D0B
   \              000000000000
   \              0000        
   \   000001F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000020F   00004E16232A       DC8 0, 0, 78, 22, 35, 42, 78, 22, 35, 0, 39, 22, 35, 42, 39, 22, 35, 0
   \              4E1623002716
   \              232A27162300
   \   00000221   0016232A0016       DC8 0, 22, 35, 42, 0, 22, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23
   \              230000000000
   \              000000000000
   \              0017        
   \   00000235   541218172B12       DC8 84, 18, 24, 23, 43, 18, 24, 23, 5, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              181705121800
   \              000000000000
   \              00          
   \   00000248   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000025F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 22, 26, 42, 84, 22, 26, 0, 56, 22
   \              000000005416
   \              1A2A54161A00
   \              3816        
   \   00000273   1A2A38161A00       DC8 26, 42, 56, 22, 26, 0, 28, 22, 26, 42, 28, 22, 26, 0, 0, 22, 26, 42
   \              1C161A2A1C16
   \              1A0000161A2A
   \   00000285   00161A000000       DC8 0, 22, 26, 0, 0, 0, 0, 23, 85, 18, 24, 23, 57, 18, 24, 23, 29, 18
   \              001755121817
   \              391218171D12
   \   00000297   181701121800       DC8 24, 23, 1, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000002AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103
   \              000000000000
   \              000000000000
   \              00001967    
   \   000002C2   271600000000       DC8 39, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000002EF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000306   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000031D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000334   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000034B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000360   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000377   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000038E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003A5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000

   \                                 In section .rodata, align 4
   \   int const __data abc
   \                     abc:
   \   00000000   02000000           DC32 2

   \                                 In section .rodata, align 4
   \   struct <unnamed> const __data ScreenSetTab_1[8]
   \                     ScreenSetTab_1:
   \   00000000   024A1320294A       DC8 2, 74, 19, 32, 41, 74, 19, 32, 2, 39, 19, 32, 41, 39, 19, 32, 2, 3
   \              132002271320
   \              292713200203
   \   00000012   132029031320       DC8 19, 32, 41, 3, 19, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 80
   \              000000000000
   \              000000000000
   \              1650        
   \   00000026   1218162B1218       DC8 18, 24, 22, 43, 18, 24, 22, 9, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              160912180000
   \              000000000000
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000004F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 82, 19, 24, 41, 82, 19, 24, 2, 55, 19
   \              000000025213
   \              182952131802
   \              3713        
   \   00000063   182937131802       DC8 24, 41, 55, 19, 24, 2, 29, 19, 24, 41, 29, 19, 24, 2, 3, 19, 24, 41
   \              1D1318291D13
   \              180203131829
   \   00000075   031318000000       DC8 3, 19, 24, 0, 0, 0, 0, 22, 83, 18, 24, 22, 56, 18, 24, 22, 30, 18
   \              001653121816
   \              381218161E12
   \   00000087   181604121800       DC8 24, 22, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000009C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 84
   \              000000000000
   \              000000000000
   \              00001654    
   \   000000B2   241616392416       DC8 36, 22, 22, 57, 36, 22, 22, 31, 36, 22, 22, 5, 36, 22, 0, 0, 0, 0
   \              161F24161605
   \              241600000000
   \   000000C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 83, 18, 24, 2
   \              000000000000
   \              000000000253
   \              121802      
   \   000000D9   381218021E12       DC8 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 0, 0, 0, 0
   \              180204121800
   \              000000      
   \   000000E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000FF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000116   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2
   \              000000000000
   \              000000000000
   \              0000000002  
   \   0000012D   531218023812       DC8 83, 18, 24, 2, 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 23, 89, 35
   \              18021E121802
   \              041218175923
   \   0000013F   0B173D230B17       DC8 11, 23, 61, 35, 11, 23, 36, 35, 11, 23, 10, 35, 11, 0, 0, 0, 0
   \              24230B170A23
   \              0B00000000  
   \   00000150   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 94, 57, 12, 3
   \              000000000000
   \              00000000035E
   \              390C03      
   \   00000165   4F390C034039       DC8 79, 57, 12, 3, 64, 57, 12, 3, 49, 57, 12, 3, 34, 57, 12, 3, 19, 57
   \              0C0331390C03
   \              22390C031339
   \   00000177   0C0304390C00       DC8 12, 3, 4, 57, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000000000  
   \   00000188   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000198   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001AF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103, 39, 22, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000196727
   \              160000000000
   \              000000      
   \   000001C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001DB   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000001F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000207   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000021E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000235   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000248   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000025F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000276   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000028D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   000002A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000002B7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \   char const __data ButtonName[99][4]
   \                     ButtonName:
   \   00000000   623100006232       DC8 98, 49, 0, 0, 98, 50, 0, 0, 98, 51, 0, 0, 98, 52, 0, 0, 98, 53, 0
   \              000062330000
   \              623400006235
   \              00          
   \   00000013   006236000062       DC8 0, 98, 54, 0, 0, 98, 55, 0, 0, 98, 56, 0, 0, 98, 57, 0, 0, 98, 49
   \              370000623800
   \              006239000062
   \              31          
   \   00000026   300062313100       DC8 48, 0, 98, 49, 49, 0, 98, 49, 50, 0, 98, 49, 51, 0, 98, 49, 52, 0
   \              623132006231
   \              330062313400
   \   00000038   623135006231       DC8 98, 49, 53, 0, 98, 49, 54, 0, 98, 49, 55, 0, 98, 49, 56, 0, 98, 49
   \              360062313700
   \              623138006231
   \   0000004A   390062323000       DC8 57, 0, 98, 50, 48, 0, 98, 50, 49, 0, 98, 50, 50, 0, 98, 50, 51, 0
   \              623231006232
   \              320062323300
   \   0000005C   623234006232       DC8 98, 50, 52, 0, 98, 50, 53, 0, 98, 50, 54, 0, 98, 50, 55, 0, 98, 50
   \              350062323600
   \              623237006232
   \   0000006E   380062323900       DC8 56, 0, 98, 50, 57, 0, 98, 51, 48, 0, 98, 51, 49, 0, 98, 51, 50, 0
   \              623330006233
   \              310062333200
   \   00000080   623333006233       DC8 98, 51, 51, 0, 98, 51, 52, 0, 98, 51, 53, 0, 98, 51, 54, 0, 98, 51
   \              340062333500
   \              623336006233
   \   00000092   370062333800       DC8 55, 0, 98, 51, 56, 0, 98, 51, 57, 0, 98, 52, 48, 0, 98, 52, 49, 0
   \              623339006234
   \              300062343100
   \   000000A4   623432006234       DC8 98, 52, 50, 0, 98, 52, 51, 0, 98, 52, 52, 0, 98, 52, 53, 0, 98, 52
   \              330062343400
   \              623435006234
   \   000000B6   360062343700       DC8 54, 0, 98, 52, 55, 0, 98, 52, 56, 0, 98, 52, 57, 0, 98, 53, 48, 0
   \              623438006234
   \              390062353000
   \   000000C8   623531006235       DC8 98, 53, 49, 0, 98, 53, 50, 0, 98, 53, 51, 0, 98, 53, 52, 0, 98, 53
   \              320062353300
   \              623534006235
   \   000000DA   350062353600       DC8 53, 0, 98, 53, 54, 0, 98, 53, 55, 0, 98, 53, 56, 0, 98, 53, 57, 0
   \              623537006235
   \              380062353900
   \   000000EC   623630006236       DC8 98, 54, 48, 0, 98, 54, 49, 0, 98, 54, 50, 0, 98, 54, 51, 0, 98, 54
   \              310062363200
   \              623633006236
   \   000000FE   340062363500       DC8 52, 0, 98, 54, 53, 0, 98, 54, 54, 0, 98, 54, 55, 0, 98, 54, 56, 0
   \              623636006236
   \              370062363800
   \   00000110   623639006237       DC8 98, 54, 57, 0, 98, 55, 48, 0, 98, 55, 49, 0, 98, 55, 50, 0, 98, 55
   \              300062373100
   \              623732006237
   \   00000122   330062373400       DC8 51, 0, 98, 55, 52, 0, 98, 55, 53, 0, 98, 55, 54, 0, 98, 55, 55, 0
   \              623735006237
   \              360062373700
   \   00000134   623738006237       DC8 98, 55, 56, 0, 98, 55, 57, 0, 98, 56, 48, 0, 98, 56, 49, 0, 98, 56
   \              390062383000
   \              623831006238
   \   00000146   320062383300       DC8 50, 0, 98, 56, 51, 0, 98, 56, 52, 0, 98, 56, 53, 0, 98, 56, 54, 0
   \              623834006238
   \              350062383600
   \   00000158   623837006238       DC8 98, 56, 55, 0, 98, 56, 56, 0, 98, 56, 57, 0, 98, 57, 48, 0, 98, 57
   \              380062383900
   \              623930006239
   \   0000016A   310062393200       DC8 49, 0, 98, 57, 50, 0, 98, 57, 51, 0, 98, 57, 52, 0, 98, 57, 53, 0
   \              623933006239
   \              340062393500
   \   0000017C   623936006239       DC8 98, 57, 54, 0, 98, 57, 55, 0, 98, 57, 56, 0, 98, 57, 57, 0
   \              370062393800
   \              62393900    

   \                                 In section .rodata, align 4
   \   char const __data DeyOfWeekStr[2][8][2]
   \                     DeyOfWeekStr:
   \   00000000   4572506E5774       DC8 69, 114, 80, 110, 87, 116, 83, 114, 67, 122, 80, 116, 83, 111, 78
   \              5372437A5074
   \              536F4E      
   \   0000000F   6445724D6F54       DC8 100, 69, 114, 77, 111, 84, 117, 87, 101, 84, 104, 70, 114, 83, 97
   \              755765546846
   \              725361      
   \   0000001E   5375               DC8 83, 117

   \                                 In section .rodata, align 4
   \   char const __data DeyOfWeekLongStr[2][8][12]
   \                     DeyOfWeekLongStr:
   \   00000000   457200000000       DC8 69, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 111, 110, 105, 101, 100
   \              000000000000
   \              506F6E696564
   \   00000012   7A69616C656B       DC8 122, 105, 97, 108, 101, 107, 87, 116, 111, 114, 101, 107, 0, 0, 0
   \              57746F72656B
   \              000000      
   \   00000021   00000053726F       DC8 0, 0, 0, 83, 114, 111, 100, 97, 0, 0, 0, 0, 0, 0, 0, 67, 122, 119
   \              646100000000
   \              000000437A77
   \   00000033   617274656B00       DC8 97, 114, 116, 101, 107, 0, 0, 0, 0, 80, 105, 97, 116, 101, 107, 0
   \              000000506961
   \              74656B00    
   \   00000043   000000000053       DC8 0, 0, 0, 0, 0, 83, 111, 98, 111, 116, 97, 0, 0, 0, 0, 0, 0, 78, 105
   \              6F626F746100
   \              00000000004E
   \              69          
   \   00000056   65647A69656C       DC8 101, 100, 122, 105, 101, 108, 97, 0, 0, 0, 69, 114, 0, 0, 0, 0, 0
   \              610000004572
   \              0000000000  
   \   00000067   00000000004D       DC8 0, 0, 0, 0, 0, 77, 111, 110, 100, 97, 121, 0, 0, 0, 0, 0, 0, 84
   \              6F6E64617900
   \              000000000054
   \   00000079   756573646179       DC8 117, 101, 115, 100, 97, 121, 0, 0, 0, 0, 0, 87, 101, 100, 110, 101
   \              000000000057
   \              65646E65    
   \   00000089   736461790000       DC8 115, 100, 97, 121, 0, 0, 0, 84, 104, 117, 114, 115, 100, 97, 121, 0
   \              005468757273
   \              64617900    
   \   00000099   000000467269       DC8 0, 0, 0, 70, 114, 105, 100, 97, 121, 0, 0, 0, 0, 0, 0, 83, 97, 116
   \              646179000000
   \              000000536174
   \   000000AB   757264617900       DC8 117, 114, 100, 97, 121, 0, 0, 0, 0, 83, 117, 110, 100, 97, 121, 0
   \              00000053756E
   \              64617900    
   \   000000BB   0000000000         DC8 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \   char const __data ShortDate[7][3]
   \                     ShortDate:
   \   00000000   4D3A00443A00       DC8 77, 58, 0, 68, 58, 0, 104, 58, 0, 109, 58, 0, 115, 58, 0
   \              683A006D3A00
   \              733A00      
   \   0000000F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \   char const __data Logo_Ceuron[8][16]
   \                     Logo_Ceuron:
   \   00000000   E0F87C1E0E0F       DC8 224, 248, 124, 30, 14, 15, 7, 7, 7, 7, 15, 14, 28, 124, 240, 224
   \              070707070F0E
   \              1C7CF0E0    
   \   00000010   83C3E0F07030       DC8 131, 195, 224, 240, 112, 48, 0, 254, 254, 0, 48, 112, 240, 224, 195
   \              00FEFE003070
   \              F0E0C3      
   \   0000001F   031F9FC3C0C0       DC8 3, 31, 159, 195, 192, 192, 192, 192, 199, 199, 192, 192, 192, 192
   \              C0C0C7C7C0C0
   \              C0C0        
   \   0000002D   C3DFDF1F3F71       DC8 195, 223, 223, 31, 63, 113, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96
   \              606060606060
   \              60606060    
   \   0000003D   60606080C0C0       DC8 96, 96, 96, 128, 192, 192, 192, 224, 112, 56, 252, 252, 192, 128
   \              C0E07038FCFC
   \              C080        
   \   0000004B   80C0E0FF3FF1       DC8 128, 192, 224, 255, 63, 241, 249, 29, 12, 12, 12, 12, 12, 13, 13
   \              F91D0C0C0C0C
   \              0C0D0D      
   \   0000005A   0D0D0D1DF8F0       DC8 13, 13, 13, 29, 248, 240, 97, 99, 103, 102, 102, 102, 102, 102, 102
   \              616367666666
   \              666666      
   \   00000069   66666666E7E3       DC8 102, 102, 102, 102, 231, 227, 193, 112, 248, 248, 220, 220, 204
   \              C170F8F8DCDC
   \              CC          
   \   00000076   CCCCCCCCCECE       DC8 204, 204, 204, 204, 206, 206, 198, 199, 199, 195
   \              C6C7C7C3    

   \                                 In section .rodata, align 4
   \   struct <unnamed> const __data TouchTestSor[4]
   \                     TouchTestSor:
   \   00000000   07073A070773       DC8 7, 7, 58, 7, 7, 115, 58, 115
   \              3A73        

   \                                 In section .rodata, align 4
   \   char const __data Klepsydra[1][8]
   \                     Klepsydra:
   \   00000000   1F15110A040A       DC8 31, 21, 17, 10, 4, 10, 17, 31
   \              111F        

   \                                 In section .rodata, align 4
   \   char const __data Siec[7][24]
   \                     Siec:
   \   00000000   0000FF01C101       DC8 0, 0, 255, 1, 193, 1, 241, 241, 241, 241, 241, 241, 241, 241, 241
   \              F1F1F1F1F1F1
   \              F1F1F1      
   \   0000000F   F1F1F1010101       DC8 241, 241, 241, 1, 1, 1, 255, 0, 0, 0, 0, 63, 32, 32, 32, 35, 35, 35
   \              FF000000003F
   \              202020232323
   \   00000021   232323232323       DC8 35, 35, 35, 35, 35, 35, 35, 35, 35, 32, 32, 32, 63, 0, 0, 0, 0, 0
   \              232323202020
   \              3F0000000000
   \   00000033   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000004A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0
   \              000080808080
   \              000000000000
   \              0000        
   \   0000005E   000000C030C8       DC8 0, 0, 0, 192, 48, 200, 124, 62, 126, 127, 255, 31, 6, 2, 4, 4, 15
   \              7C3E7E7FFF1F
   \              060204040F  
   \   0000006F   071F1E1E1C38       DC8 7, 31, 30, 30, 28, 56, 112, 192, 0, 62, 253, 112, 0, 0, 0, 128, 128
   \              70C0003EFD70
   \              0000008080  
   \   00000080   80C0F0F8F0E0       DC8 128, 192, 240, 248, 240, 224, 240, 176, 8, 56, 248, 224, 224, 240
   \              F0B00838F8E0
   \              E0F0        
   \   0000008E   FF3E00010608       DC8 255, 62, 0, 1, 6, 8, 16, 33, 33, 67, 67, 71, 135, 143, 143, 223, 71
   \              102121434347
   \              878F8FDF47  
   \   0000009F   737E3E3F1F0F       DC8 115, 126, 62, 63, 31, 15, 7, 1, 0
   \              070100      

   \                                 In section .rodata, align 4
   \   char const __data StrzalkaPrawo[2][5]
   \                     StrzalkaPrawo:
   \   00000000   0000FF000001       DC8 0, 0, 255, 0, 0, 1, 3, 7, 3, 1, 0, 0
   \              030703010000

   \                                 In section .rodata, align 4
   \   char const __data StrzalkaLewo[2][5]
   \                     StrzalkaLewo:
   \   00000000   0406FF060400       DC8 4, 6, 255, 6, 4, 0, 0, 7, 0, 0, 0, 0
   \              000700000000

   \                                 In section .rodata, align 4
   \   char const __data NodeModelName[14][10]
   \                     NodeModelName:
   \   00000000   5333303000         DC8 "S300"
   \   00000005   0000000000         DC8 0, 0, 0, 0, 0
   \   0000000A   533330306900       DC8 "S300i"
   \   00000010   00000000           DC8 0, 0, 0, 0
   \   00000014   53333030694D       DC8 "S300iMax"
   \              617800      
   \   0000001D   00                 DC8 0
   \   0000001E   4D473100           DC8 "MG1"
   \   00000022   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000028   4D523100           DC8 "MR1"
   \   0000002C   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000032   4D523100           DC8 "MR1"
   \   00000036   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   0000003C   4D523200           DC8 "MR2"
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000046   4D475A3100         DC8 "MGZ1"
   \   0000004B   0000000000         DC8 0, 0, 0, 0, 0
   \   00000050   57423100           DC8 "WB1"
   \   00000054   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   0000005A   57423200           DC8 "WB2"
   \   0000005E   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000064   5050315F3700       DC8 "PP1_7"
   \   0000006A   00000000           DC8 0, 0, 0, 0
   \   0000006E   5044523100         DC8 "PDR1"
   \   00000073   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000083   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
     33          #include "RF_Exe.h"
     34          #include "spi_main.h"
     35           #include "WizFi.h"                            

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFi.h",172  Warning[Pe001]: 
          last line of file ends without a newline
     36          
     37          
     38          
     39          extern _Correct korekta_Y;
     40          extern _Correct korekta_X;
     41          extern char Arial_7[100][10];
     42          
     43          extern char LCD_Canvas[8][128];
     44          extern unsigned int CyklPerSek;
     45          extern char g_level;
     46          extern char g_Password_1[8];
     47          extern char g_Password_2[8];
     48          extern int g_Message;
     49          extern char g_US0_Connect_OK;
     50          extern char g_US1_Connect_OK;
     51          extern char g_Stop_Program;
     52          extern RAM ram;
     53          extern _RF_Status RF_Status;
     54          extern _DateTime DateTime;
     55          extern volatile char SlaveMode;
     56          extern char g_SlaveConnect;
     57          extern unsigned long long  g_counter;
     58          extern volatile char Busy_program;
     59          extern char g_NeedPass;
     60          extern _TransQuality TransQuality; //tablica informacyjna jakoci po³¹czenia pola odpowiadaj¹ polom _ProgramTab.NeuronsIdTab
     61          extern const char identyfikacja;
     62          extern const char system;
     63          extern char AlarmOn;
     64          extern int g_info;

   \                                 In section .bss, align 1
     65          char MainSide_puls=0;
   \                     MainSide_puls:
   \   00000000                      DS8 1
     66          extern _RF_TaskTab  RF_TaskTab;
     67          extern signed char           RF_CurrentTask;

   \                                 In section .bss, align 4
     68          int volatile MenuLevel=0;      //poziom menu
   \                     MenuLevel:
   \   00000000                      DS8 4
     69          extern unsigned long long g_NextTimeProgram;
     70          extern char ekran_komunikacja[8][128];
     71          extern signed short X_down;
     72          extern signed short Y_down;
     73          extern signed short X_up;
     74          extern signed short Y_up;
     75          extern int  g_leng;
     76          extern LangTab Speech[2];
     77          extern char g_PC_Connected;
     78          extern _ProgramTab gProg;
     79          extern char NumberScene;
     80          extern _NeuronsListUnit NeuronsList[NumberNeurons];
     81          extern char Label (char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw);
     82          extern char FloToStr (float Value, char Vstring[8],char ill) ;
     83          extern _MainStage  MainStage; 
     84          extern _TransQuality TransQuality;
     85          extern _RF_NodeTest  RF_NodeTest; 
     86          extern char Variables[];    //zmienne
     87           extern _Net NET; 
     88          extern char WypMaxJasnosci;                                                        //jasnoc ekranu przy aktywnym ekranie
     89          extern char WypMinJasnosci;                                                        //jasnoc ekranu przy nieaktywnym ekranie
     90          extern char gWypMinJasnosciTest;
     91          extern short int VariablesAnal[]; 

   \                                 In section .bss, align 4
     92          float wartosc_tmp;
   \                     wartosc_tmp:
   \   00000000                      DS8 4
     93          extern unsigned char ChangeStageFlag; 

   \                                 In section .bss, align 4
     94          char text_label_tmp[10];
   \                     text_label_tmp:
   \   00000000                      DS8 12
     95          
     96          extern char SceneBefOff;
     97          extern char ChangeingIdMode;
     98          

   \                                 In section .bss, align 1
     99          char Label_move = 0;
   \                     Label_move:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    100          int Suw_poz_IO=0;
   \                     Suw_poz_IO:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    101          int Suw_poz_analog=0;
   \                     Suw_poz_analog:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    102          int Suw_poz_dwustan=0;
   \                     Suw_poz_dwustan:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    103          int Suw_poz_monit=0;
   \                     Suw_poz_monit:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    104          int ScrollMenu_poz=-1;
   \                     ScrollMenu_poz:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 4
    105          int ScrollMenu_Paint_exist=-1;
   \                     ScrollMenu_Paint_exist:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .bss, align 4
    106          int Rej_poz=0;
   \                     Rej_poz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    107          char CyklMonit=0;
   \                     CyklMonit:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    108          char *TextToChange=0;
   \                     TextToChange:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    109          char TextToChangeLength=0;
   \                     TextToChangeLength:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    110          char TextToChangeMaxPixSize=0;
   \                     TextToChangeMaxPixSize:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    111          volatile _ButtonGraph *ButtonToChange=0;
   \                     ButtonToChange:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    112          char CurentChartModyfi;
   \                     CurentChartModyfi:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    113          int NeuronIdToChange;
   \                     NeuronIdToChange:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    114          int NeuronIdAfterChange;
   \                     NeuronIdAfterChange:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    115          char NeuronNrChange=0;
   \                     NeuronNrChange:
   \   00000000                      DS8 1
    116          
    117          
    118          

   \                                 In section .bss, align 4
    119          signed short int *ValueChange=0;
   \                     ValueChange:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    120          int *NeuronIdChange=0;
   \                     NeuronIdChange:
   \   00000000                      DS8 4
    121          
    122          
    123          

   \                                 In section .bss, align 4
    124          _Analog *AnalogToChange;
   \                     AnalogToChange:
   \   00000000                      DS8 4
    125          

   \                                 In section .bss, align 1
    126          char CurrentSheet=0;
   \                     CurrentSheet:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    127          char CurModifSheet=0;
   \                     CurModifSheet:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    128          char NeuronsListLine=0;
   \                     NeuronsListLine:
   \   00000000                      DS8 1
    129          

   \                                 In section .bss, align 1
    130          char SheetHistoryIndex=0;
   \                     SheetHistoryIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    131          char SheetHistory[20];
   \                     SheetHistory:
   \   00000000                      DS8 20
    132          
    133          
    134          extern _ProgramTab gProg;
    135          extern int PtogTime;
    136          
    137          
    138          
    139          
    140          

   \                                 In section .bss, align 4
    141          int Monitoring_array[30][2]; //tablica monitoringu 1 kol - adres, 2 kol- typ (0 analog, 1 dwustan, 2 IO)
   \                     Monitoring_array:
   \   00000000                      DS8 240

   \                                 In section .bss, align 4
    142          int Monit_Size_scroll=0;
   \                     Monit_Size_scroll:
   \   00000000                      DS8 4

   \                                 In section .data, align 1
    143          char SetupTimeCarPoz=1; 
   \                     SetupTimeCarPoz:
   \   00000000   01                 DC8 1

   \                                 In section .bss, align 1
    144          extern char ProgramChange=0;      //Je¿eli 1 - zmiana programu przez u¿ytkownika 
   \                     ProgramChange:
   \   00000000                      DS8 1
    145          //*-----------------------------------------------------------------------------
    146          //* Nazwa funkcji :    ScreenEvent
    147          //* Funkcja wrysowania menu ekranowego
    148          //*-----------------------------------------------------------------------------
    149          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    150          //*-----------------------------------------------------------------------------
    151          
    152          
    153          
    154          
    155          

   \                                 In section .bss, align 1
    156          char TmpFlg=0;
   \                     TmpFlg:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    157          void MenuPaint(void)
    158          {
   \                     MenuPaint:
   \   00000000   10B5               PUSH     {R4,LR}
    159            
    160            
    161              if (TmpFlg==0)
   \   00000002   BD48               LDR      R0,??MenuPaint_0  ;; TmpFlg
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   02D1               BNE      ??MenuPaint_1
    162            {
    163              TmpFlg=1;
   \   0000000A   BB48               LDR      R0,??MenuPaint_0  ;; TmpFlg
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
    164          
    165            }
    166          
    167            if (g_Message==0) 
   \                     ??MenuPaint_1:
   \   00000010   BA48               LDR      R0,??MenuPaint_0+0x4  ;; g_Message
   \   00000012   0068               LDR      R0,[R0, #+0]
   \   00000014   0028               CMP      R0,#+0
   \   00000016   00D0               BEQ      .+4
   \   00000018   65E3               B        ??MenuPaint_2
    168            switch (MenuLevel)
   \   0000001A   B948               LDR      R0,??MenuPaint_0+0x8  ;; MenuLevel
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   00D1               BNE      .+4
   \   00000022   16E1               B        ??MenuPaint_3
   \   00000024   401E               SUBS     R0,R0,#+1
   \   00000026   00D1               BNE      .+4
   \   00000028   16E1               B        ??MenuPaint_4
   \   0000002A   801E               SUBS     R0,R0,#+2
   \   0000002C   00D1               BNE      .+4
   \   0000002E   1EE1               B        ??MenuPaint_5
   \   00000030   401E               SUBS     R0,R0,#+1
   \   00000032   00D1               BNE      .+4
   \   00000034   1EE1               B        ??MenuPaint_6
   \   00000036   401E               SUBS     R0,R0,#+1
   \   00000038   00D1               BNE      .+4
   \   0000003A   1EE1               B        ??MenuPaint_7
   \   0000003C   401F               SUBS     R0,R0,#+5
   \   0000003E   00D1               BNE      .+4
   \   00000040   34E1               B        ??MenuPaint_8
   \   00000042   401E               SUBS     R0,R0,#+1
   \   00000044   00D1               BNE      .+4
   \   00000046   35E1               B        ??MenuPaint_9
   \   00000048   401E               SUBS     R0,R0,#+1
   \   0000004A   00D1               BNE      .+4
   \   0000004C   FBE2               B        ??MenuPaint_10
   \   0000004E   401E               SUBS     R0,R0,#+1
   \   00000050   00D1               BNE      .+4
   \   00000052   3CE3               B        ??MenuPaint_11
   \   00000054   401E               SUBS     R0,R0,#+1
   \   00000056   00D1               BNE      .+4
   \   00000058   3CE3               B        ??MenuPaint_12
   \   0000005A   401E               SUBS     R0,R0,#+1
   \   0000005C   00D1               BNE      .+4
   \   0000005E   3EE3               B        ??MenuPaint_13
   \   00000060   2438               SUBS     R0,R0,#+36
   \   00000062   00D1               BNE      .+4
   \   00000064   0CE1               B        ??MenuPaint_14
   \   00000066   3C38               SUBS     R0,R0,#+60
   \   00000068   00D1               BNE      .+4
   \   0000006A   26E1               B        ??MenuPaint_15
   \   0000006C   401E               SUBS     R0,R0,#+1
   \   0000006E   00D1               BNE      .+4
   \   00000070   78E1               B        ??MenuPaint_16
   \   00000072   401E               SUBS     R0,R0,#+1
   \   00000074   00D1               BNE      .+4
   \   00000076   10E2               B        ??MenuPaint_17
   \   00000078   401E               SUBS     R0,R0,#+1
   \   0000007A   00D1               BNE      .+4
   \   0000007C   49E2               B        ??MenuPaint_18
   \   0000007E   401E               SUBS     R0,R0,#+1
   \   00000080   00D1               BNE      .+4
   \   00000082   70E2               B        ??MenuPaint_19
   \   00000084   401E               SUBS     R0,R0,#+1
   \   00000086   00D1               BNE      .+4
   \   00000088   ADE2               B        ??MenuPaint_20
   \   0000008A   401E               SUBS     R0,R0,#+1
   \   0000008C   00D1               BNE      .+4
   \   0000008E   ADE2               B        ??MenuPaint_21
   \   00000090   C01E               SUBS     R0,R0,#+3
   \   00000092   00D1               BNE      .+4
   \   00000094   E2E2               B        ??MenuPaint_22
   \   00000096   401E               SUBS     R0,R0,#+1
   \   00000098   00D1               BNE      .+4
   \   0000009A   0BE3               B        ??MenuPaint_23
   \   0000009C   9949               LDR      R1,??MenuPaint_0+0xC  ;; 0x3dd
   \   0000009E   401A               SUBS     R0,R0,R1
   \   000000A0   00D1               BNE      .+4
   \   000000A2   0DE1               B        ??MenuPaint_24
   \   000000A4   401E               SUBS     R0,R0,#+1
   \   000000A6   00D1               BNE      .+4
   \   000000A8   1EE1               B        ??MenuPaint_25
   \   000000AA   401E               SUBS     R0,R0,#+1
   \   000000AC   00D1               BNE      .+4
   \   000000AE   53E1               B        ??MenuPaint_26
   \   000000B0   0838               SUBS     R0,R0,#+8
   \   000000B2   00D1               BNE      .+4
   \   000000B4   61E1               B        ??MenuPaint_27
   \   000000B6   401E               SUBS     R0,R0,#+1
   \   000000B8   00D1               BNE      .+4
   \   000000BA   72E1               B        ??MenuPaint_28
   \   000000BC   401E               SUBS     R0,R0,#+1
   \   000000BE   00D1               BNE      .+4
   \   000000C0   BAE1               B        ??MenuPaint_29
   \   000000C2   401E               SUBS     R0,R0,#+1
   \   000000C4   00D1               BNE      .+4
   \   000000C6   D2E1               B        ??MenuPaint_30
   \   000000C8   401E               SUBS     R0,R0,#+1
   \   000000CA   00D1               BNE      .+4
   \   000000CC   DAE1               B        ??MenuPaint_31
   \   000000CE   C01F               SUBS     R0,R0,#+7
   \   000000D0   00D1               BNE      .+4
   \   000000D2   E5E1               B        ??MenuPaint_32
   \   000000D4   801E               SUBS     R0,R0,#+2
   \   000000D6   00D1               BNE      .+4
   \   000000D8   F0E1               B        ??MenuPaint_33
   \   000000DA   401E               SUBS     R0,R0,#+1
   \   000000DC   00D1               BNE      .+4
   \   000000DE   F6E1               B        ??MenuPaint_34
   \   000000E0   401E               SUBS     R0,R0,#+1
   \   000000E2   00D1               BNE      .+4
   \   000000E4   0BE2               B        ??MenuPaint_35
   \   000000E6   801F               SUBS     R0,R0,#+6
   \   000000E8   00D1               BNE      .+4
   \   000000EA   15E2               B        ??MenuPaint_36
   \   000000EC   401E               SUBS     R0,R0,#+1
   \   000000EE   00D1               BNE      .+4
   \   000000F0   15E2               B        ??MenuPaint_37
   \   000000F2   401E               SUBS     R0,R0,#+1
   \   000000F4   00D1               BNE      .+4
   \   000000F6   15E2               B        ??MenuPaint_38
   \   000000F8   401E               SUBS     R0,R0,#+1
   \   000000FA   00D1               BNE      .+4
   \   000000FC   21E2               B        ??MenuPaint_39
   \   000000FE   801E               SUBS     R0,R0,#+2
   \   00000100   00D1               BNE      .+4
   \   00000102   2AE2               B        ??MenuPaint_40
   \   00000104   401E               SUBS     R0,R0,#+1
   \   00000106   00D1               BNE      .+4
   \   00000108   2AE2               B        ??MenuPaint_41
   \   0000010A   C01E               SUBS     R0,R0,#+3
   \   0000010C   00D1               BNE      .+4
   \   0000010E   2DE2               B        ??MenuPaint_42
   \   00000110   401E               SUBS     R0,R0,#+1
   \   00000112   00D1               BNE      .+4
   \   00000114   3EE2               B        ??MenuPaint_43
   \   00000116   401E               SUBS     R0,R0,#+1
   \   00000118   00D1               BNE      .+4
   \   0000011A   40E2               B        ??MenuPaint_44
   \   0000011C   401E               SUBS     R0,R0,#+1
   \   0000011E   00D1               BNE      .+4
   \   00000120   43E2               B        ??MenuPaint_45
   \   00000122   1238               SUBS     R0,R0,#+18
   \   00000124   00D1               BNE      .+4
   \   00000126   64E2               B        ??MenuPaint_46
   \   00000128   401E               SUBS     R0,R0,#+1
   \   0000012A   00D1               BNE      .+4
   \   0000012C   7CE2               B        ??MenuPaint_47
   \   0000012E   401E               SUBS     R0,R0,#+1
   \   00000130   00D1               BNE      .+4
   \   00000132   82E2               B        ??MenuPaint_48
   \   00000134   401E               SUBS     R0,R0,#+1
   \   00000136   00D1               BNE      .+4
   \   00000138   82E2               B        ??MenuPaint_49
   \   0000013A   7349               LDR      R1,??MenuPaint_0+0x10  ;; 0x26d1
   \   0000013C   401A               SUBS     R0,R0,R1
   \   0000013E   00D1               BNE      .+4
   \   00000140   D5E0               B        ??MenuPaint_50
   \   00000142   0B38               SUBS     R0,R0,#+11
   \   00000144   00D1               BNE      .+4
   \   00000146   0AE1               B        ??MenuPaint_51
   \   00000148   5938               SUBS     R0,R0,#+89
   \   0000014A   00D1               BNE      .+4
   \   0000014C   34E1               B        ??MenuPaint_52
   \   0000014E   401E               SUBS     R0,R0,#+1
   \   00000150   00D1               BNE      .+4
   \   00000152   4DE1               B        ??MenuPaint_53
   \   00000154   401E               SUBS     R0,R0,#+1
   \   00000156   00D1               BNE      .+4
   \   00000158   50E1               B        ??MenuPaint_54
   \   0000015A   401E               SUBS     R0,R0,#+1
   \   0000015C   00D1               BNE      .+4
   \   0000015E   58E1               B        ??MenuPaint_55
   \   00000160   401E               SUBS     R0,R0,#+1
   \   00000162   00D1               BNE      .+4
   \   00000164   65E1               B        ??MenuPaint_56
   \   00000166   0938               SUBS     R0,R0,#+9
   \   00000168   00D1               BNE      .+4
   \   0000016A   70E1               B        ??MenuPaint_57
   \   0000016C   6B38               SUBS     R0,R0,#+107
   \   0000016E   00D1               BNE      .+4
   \   00000170   A7E1               B        ??MenuPaint_58
   \   00000172   401E               SUBS     R0,R0,#+1
   \   00000174   00D1               BNE      .+4
   \   00000176   A7E1               B        ??MenuPaint_59
   \   00000178   0938               SUBS     R0,R0,#+9
   \   0000017A   00D1               BNE      .+4
   \   0000017C   ABE1               B        ??MenuPaint_60
   \   0000017E   C01E               SUBS     R0,R0,#+3
   \   00000180   00D1               BNE      .+4
   \   00000182   B7E1               B        ??MenuPaint_61
   \   00000184   C01F               SUBS     R0,R0,#+7
   \   00000186   00D1               BNE      .+4
   \   00000188   BEE1               B        ??MenuPaint_62
   \   0000018A   5038               SUBS     R0,R0,#+80
   \   0000018C   00D1               BNE      .+4
   \   0000018E   CCE1               B        ??MenuPaint_63
   \   00000190   401E               SUBS     R0,R0,#+1
   \   00000192   00D1               BNE      .+4
   \   00000194   CFE1               B        ??MenuPaint_64
   \   00000196   0938               SUBS     R0,R0,#+9
   \   00000198   00D1               BNE      .+4
   \   0000019A   D5E1               B        ??MenuPaint_65
   \   0000019C   401E               SUBS     R0,R0,#+1
   \   0000019E   00D1               BNE      .+4
   \   000001A0   D5E1               B        ??MenuPaint_66
   \   000001A2   401E               SUBS     R0,R0,#+1
   \   000001A4   00D1               BNE      .+4
   \   000001A6   D5E1               B        ??MenuPaint_67
   \   000001A8   5838               SUBS     R0,R0,#+88
   \   000001AA   00D1               BNE      .+4
   \   000001AC   02E2               B        ??MenuPaint_68
   \   000001AE   C01E               SUBS     R0,R0,#+3
   \   000001B0   00D1               BNE      .+4
   \   000001B2   04E2               B        ??MenuPaint_69
   \   000001B4   401E               SUBS     R0,R0,#+1
   \   000001B6   00D1               BNE      .+4
   \   000001B8   06E2               B        ??MenuPaint_70
   \   000001BA   401E               SUBS     R0,R0,#+1
   \   000001BC   00D1               BNE      .+4
   \   000001BE   08E2               B        ??MenuPaint_71
   \   000001C0   401E               SUBS     R0,R0,#+1
   \   000001C2   00D1               BNE      .+4
   \   000001C4   0AE2               B        ??MenuPaint_72
   \   000001C6   AE38               SUBS     R0,R0,#+174
   \   000001C8   00D1               BNE      .+4
   \   000001CA   15E2               B        ??MenuPaint_73
   \   000001CC   401E               SUBS     R0,R0,#+1
   \   000001CE   00D1               BNE      .+4
   \   000001D0   1EE2               B        ??MenuPaint_74
   \   000001D2   0938               SUBS     R0,R0,#+9
   \   000001D4   00D1               BNE      .+4
   \   000001D6   2AE2               B        ??MenuPaint_75
   \   000001D8   4C49               LDR      R1,??MenuPaint_0+0x14  ;; 0x1843e
   \   000001DA   401A               SUBS     R0,R0,R1
   \   000001DC   00D1               BNE      .+4
   \   000001DE   B5E0               B        ??MenuPaint_76
   \   000001E0   FA21               MOVS     R1,#+250
   \   000001E2   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   000001E4   401A               SUBS     R0,R0,R1
   \   000001E6   00D1               BNE      .+4
   \   000001E8   F1E0               B        ??MenuPaint_77
   \   000001EA   401E               SUBS     R0,R0,#+1
   \   000001EC   00D1               BNE      .+4
   \   000001EE   F4E0               B        ??MenuPaint_78
   \   000001F0   1338               SUBS     R0,R0,#+19
   \   000001F2   00D1               BNE      .+4
   \   000001F4   07E1               B        ??MenuPaint_79
   \   000001F6   0A38               SUBS     R0,R0,#+10
   \   000001F8   00D1               BNE      .+4
   \   000001FA   0FE1               B        ??MenuPaint_80
   \   000001FC   401E               SUBS     R0,R0,#+1
   \   000001FE   00D1               BNE      .+4
   \   00000200   12E1               B        ??MenuPaint_81
   \   00000202   6338               SUBS     R0,R0,#+99
   \   00000204   00D1               BNE      .+4
   \   00000206   27E1               B        ??MenuPaint_82
   \   00000208   401E               SUBS     R0,R0,#+1
   \   0000020A   00D1               BNE      .+4
   \   0000020C   2AE1               B        ??MenuPaint_83
   \   0000020E   4049               LDR      R1,??MenuPaint_0+0x18  ;; 0x49b
   \   00000210   401A               SUBS     R0,R0,R1
   \   00000212   00D1               BNE      .+4
   \   00000214   64E1               B        ??MenuPaint_84
   \   00000216   0A38               SUBS     R0,R0,#+10
   \   00000218   00D1               BNE      .+4
   \   0000021A   66E1               B        ??MenuPaint_85
   \   0000021C   DC21               MOVS     R1,#+220
   \   0000021E   8900               LSLS     R1,R1,#+2        ;; #+880
   \   00000220   401A               SUBS     R0,R0,R1
   \   00000222   00D1               BNE      .+4
   \   00000224   84E1               B        ??MenuPaint_86
   \   00000226   0A38               SUBS     R0,R0,#+10
   \   00000228   00D1               BNE      .+4
   \   0000022A   87E1               B        ??MenuPaint_87
   \   0000022C   3949               LDR      R1,??MenuPaint_0+0x1C  ;; 0xae6
   \   0000022E   401A               SUBS     R0,R0,R1
   \   00000230   00D1               BNE      .+4
   \   00000232   E4E1               B        ??MenuPaint_88
   \   00000234   401E               SUBS     R0,R0,#+1
   \   00000236   00D1               BNE      .+4
   \   00000238   E7E1               B        ??MenuPaint_89
   \   0000023A   0A38               SUBS     R0,R0,#+10
   \   0000023C   00D1               BNE      .+4
   \   0000023E   EAE1               B        ??MenuPaint_90
   \   00000240   3549               LDR      R1,??MenuPaint_0+0x20  ;; 0xf51df
   \   00000242   401A               SUBS     R0,R0,R1
   \   00000244   00D1               BNE      .+4
   \   00000246   CDE0               B        ??MenuPaint_91
   \   00000248   3449               LDR      R1,??MenuPaint_0+0x24  ;; 0xc3b4
   \   0000024A   401A               SUBS     R0,R0,R1
   \   0000024C   00D1               BNE      .+4
   \   0000024E   E5E1               B        ??MenuPaint_92
   \   00000250   49E2               B        ??MenuPaint_2
    169            {
    170              case 0        : StartAnimation_Paint();         break;
   \                     ??MenuPaint_3:
   \   00000252   ........           BL       StartAnimation_Paint
   \   00000256   46E2               B        ??MenuPaint_2
    171              case 1        : MainSide_Paint(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuPaint_4:
   \   00000258   3148               LDR      R0,??MenuPaint_0+0x28  ;; 0xbb98
   \   0000025A   3249               LDR      R1,??MenuPaint_0+0x2C  ;; CurrentSheet
   \   0000025C   0978               LDRB     R1,[R1, #+0]
   \   0000025E   A022               MOVS     R2,#+160
   \   00000260   5143               MULS     R1,R2,R1
   \   00000262   314A               LDR      R2,??MenuPaint_0+0x30  ;; gProg
   \   00000264   5118               ADDS     R1,R2,R1
   \   00000266   0818               ADDS     R0,R1,R0
   \   00000268   ........           BL       MainSide_Paint
   \   0000026C   3BE2               B        ??MenuPaint_2
    172              case 3        : CheckChannel();         break;
   \                     ??MenuPaint_5:
   \   0000026E   ........           BL       CheckChannel
   \   00000272   38E2               B        ??MenuPaint_2
    173              case 4        : SetTouchScreen_Paint();  break;
   \                     ??MenuPaint_6:
   \   00000274   ........           BL       SetTouchScreen_Paint
   \   00000278   35E2               B        ??MenuPaint_2
    174              case 5        : AdvanceSet_Paint();  break;
   \                     ??MenuPaint_7:
   \   0000027A   ........           BL       AdvanceSet_Paint
   \   0000027E   32E2               B        ??MenuPaint_2
    175                case 51     : Ask_Paint(Speech[g_leng].Czysc_pamiec,Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_14:
   \   00000280   2AA2               ADR      R2,??MenuPaint_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   00000282   FF20               MOVS     R0,#+255
   \   00000284   F030               ADDS     R0,R0,#+240      ;; #+495
   \   00000286   2A49               LDR      R1,??MenuPaint_0+0x38  ;; g_leng
   \   00000288   0968               LDR      R1,[R1, #+0]
   \   0000028A   2A4B               LDR      R3,??MenuPaint_0+0x3C  ;; 0xa7d
   \   0000028C   5943               MULS     R1,R3,R1
   \   0000028E   2A4B               LDR      R3,??MenuPaint_0+0x40  ;; Speech
   \   00000290   5918               ADDS     R1,R3,R1
   \   00000292   0918               ADDS     R1,R1,R0
   \   00000294   F020               MOVS     R0,#+240
   \   00000296   C000               LSLS     R0,R0,#+3        ;; #+1920
   \   00000298   254B               LDR      R3,??MenuPaint_0+0x38  ;; g_leng
   \   0000029A   1B68               LDR      R3,[R3, #+0]
   \   0000029C   254C               LDR      R4,??MenuPaint_0+0x3C  ;; 0xa7d
   \   0000029E   6343               MULS     R3,R4,R3
   \   000002A0   254C               LDR      R4,??MenuPaint_0+0x40  ;; Speech
   \   000002A2   E318               ADDS     R3,R4,R3
   \   000002A4   1818               ADDS     R0,R3,R0
   \   000002A6   ........           BL       Ask_Paint
   \   000002AA   1CE2               B        ??MenuPaint_2
    176                
    177                case 10     : MenuAccessPass_Paint(1);  break; 
   \                     ??MenuPaint_8:
   \   000002AC   0120               MOVS     R0,#+1
   \   000002AE   ........           BL       MenuAccessPass_Paint
   \   000002B2   18E2               B        ??MenuPaint_2
    178                case 11     : MenuSide_Paint();         break; 
   \                     ??MenuPaint_9:
   \   000002B4   ........           BL       MenuSide_Paint
   \   000002B8   15E2               B        ??MenuPaint_2
    179                      case 111   : Lader_Paint();        break;
   \                     ??MenuPaint_15:
   \   000002BA   ........           BL       Lader_Paint
   \   000002BE   12E2               B        ??MenuPaint_2
    180                          case 1110 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_24:
   \   000002C0   1E48               LDR      R0,??MenuPaint_0+0x44  ;; 0x456
   \   000002C2   1B49               LDR      R1,??MenuPaint_0+0x38  ;; g_leng
   \   000002C4   0968               LDR      R1,[R1, #+0]
   \   000002C6   1B4A               LDR      R2,??MenuPaint_0+0x3C  ;; 0xa7d
   \   000002C8   5143               MULS     R1,R2,R1
   \   000002CA   1B4A               LDR      R2,??MenuPaint_0+0x40  ;; Speech
   \   000002CC   5118               ADDS     R1,R2,R1
   \   000002CE   0A18               ADDS     R2,R1,R0
   \   000002D0   1B48               LDR      R0,??MenuPaint_0+0x48  ;; 0x447
   \   000002D2   1749               LDR      R1,??MenuPaint_0+0x38  ;; g_leng
   \   000002D4   0968               LDR      R1,[R1, #+0]
   \   000002D6   174B               LDR      R3,??MenuPaint_0+0x3C  ;; 0xa7d
   \   000002D8   5943               MULS     R1,R3,R1
   \   000002DA   174B               LDR      R3,??MenuPaint_0+0x40  ;; Speech
   \   000002DC   5918               ADDS     R1,R3,R1
   \   000002DE   0918               ADDS     R1,R1,R0
   \   000002E0   1848               LDR      R0,??MenuPaint_0+0x4C  ;; `?<Constant "Info ">`
   \   000002E2   ........           BL       Ask_Paint
   \   000002E6   FEE1               B        ??MenuPaint_2
    181                          case 1111: Procedure_Paint();  break;
   \                     ??MenuPaint_25:
   \   000002E8   ........           BL       Procedure_Paint
   \   000002EC   FBE1               B        ??MenuPaint_2
    182                            case 11111: ValueChange_Paint(ValueChange);  break;
   \                     ??MenuPaint_50:
   \   000002EE   1648               LDR      R0,??MenuPaint_0+0x50  ;; ValueChange
   \   000002F0   0068               LDR      R0,[R0, #+0]
   \   000002F2   ........           BL       ValueChange_Paint
   \   000002F6   F6E1               B        ??MenuPaint_2
   \                     ??MenuPaint_0:
   \   000002F8   ........           DC32     TmpFlg
   \   000002FC   ........           DC32     g_Message
   \   00000300   ........           DC32     MenuLevel
   \   00000304   DD030000           DC32     0x3dd
   \   00000308   D1260000           DC32     0x26d1
   \   0000030C   3E840100           DC32     0x1843e
   \   00000310   9B040000           DC32     0x49b
   \   00000314   E60A0000           DC32     0xae6
   \   00000318   DF510F00           DC32     0xf51df
   \   0000031C   B4C30000           DC32     0xc3b4
   \   00000320   98BB0000           DC32     0xbb98
   \   00000324   ........           DC32     CurrentSheet
   \   00000328   ........           DC32     gProg
   \   0000032C   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000330   ........           DC32     g_leng
   \   00000334   7D0A0000           DC32     0xa7d
   \   00000338   ........           DC32     Speech
   \   0000033C   56040000           DC32     0x456
   \   00000340   47040000           DC32     0x447
   \   00000344   ........           DC32     `?<Constant "Info ">`
   \   00000348   ........           DC32     ValueChange
    183                            case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??MenuPaint_76:
   \   0000034C   CD4A               LDR      R2,??MenuPaint_93  ;; 0x2b67
   \   0000034E   CE49               LDR      R1,??MenuPaint_93+0x4  ;; `?<Constant "+/- 3000 ">`
   \   00000350   CE48               LDR      R0,??MenuPaint_93+0x8  ;; `?<Constant "Max=">`
   \   00000352   ........           BL       Message
   \   00000356   C6E1               B        ??MenuPaint_2
    184                          case 1112: LaderChange_Paint();  break;
   \                     ??MenuPaint_26:
   \   00000358   ........           BL       LaderChange_Paint
   \   0000035C   C3E1               B        ??MenuPaint_2
    185                            case 11122: RemRow_Paint();  break;         
   \                     ??MenuPaint_51:
   \   0000035E   ........           BL       RemRow_Paint
   \   00000362   C0E1               B        ??MenuPaint_2
    186                      case 112  : ScreenSet_Paint(&gProg.Screen[CurModifSheet]);        break;   
   \                     ??MenuPaint_16:
   \   00000364   CA48               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   00000366   CB49               LDR      R1,??MenuPaint_93+0x10  ;; CurModifSheet
   \   00000368   0978               LDRB     R1,[R1, #+0]
   \   0000036A   A022               MOVS     R2,#+160
   \   0000036C   5143               MULS     R1,R2,R1
   \   0000036E   CA4A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   00000370   5118               ADDS     R1,R2,R1
   \   00000372   0818               ADDS     R0,R1,R0
   \   00000374   ........           BL       ScreenSet_Paint
   \   00000378   B5E1               B        ??MenuPaint_2
    187                          case 1120 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_27:
   \   0000037A   C848               LDR      R0,??MenuPaint_93+0x18  ;; 0x456
   \   0000037C   C849               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   0000037E   0968               LDR      R1,[R1, #+0]
   \   00000380   C84A               LDR      R2,??MenuPaint_93+0x20  ;; 0xa7d
   \   00000382   5143               MULS     R1,R2,R1
   \   00000384   C84A               LDR      R2,??MenuPaint_93+0x24  ;; Speech
   \   00000386   5118               ADDS     R1,R2,R1
   \   00000388   0A18               ADDS     R2,R1,R0
   \   0000038A   C848               LDR      R0,??MenuPaint_93+0x28  ;; 0x447
   \   0000038C   C449               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   0000038E   0968               LDR      R1,[R1, #+0]
   \   00000390   C44B               LDR      R3,??MenuPaint_93+0x20  ;; 0xa7d
   \   00000392   5943               MULS     R1,R3,R1
   \   00000394   C44B               LDR      R3,??MenuPaint_93+0x24  ;; Speech
   \   00000396   5918               ADDS     R1,R3,R1
   \   00000398   0918               ADDS     R1,R1,R0
   \   0000039A   C548               LDR      R0,??MenuPaint_93+0x2C  ;; `?<Constant "Info ">`
   \   0000039C   ........           BL       Ask_Paint
   \   000003A0   A1E1               B        ??MenuPaint_2
    188                          case 1121  : ScreenDesign1_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_28:
   \   000003A2   BB48               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   000003A4   BB49               LDR      R1,??MenuPaint_93+0x10  ;; CurModifSheet
   \   000003A6   0978               LDRB     R1,[R1, #+0]
   \   000003A8   A022               MOVS     R2,#+160
   \   000003AA   5143               MULS     R1,R2,R1
   \   000003AC   BA4A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   000003AE   5118               ADDS     R1,R2,R1
   \   000003B0   0818               ADDS     R0,R1,R0
   \   000003B2   ........           BL       ScreenDesign1_Paint
   \   000003B6   96E1               B        ??MenuPaint_2
    189                              case 11211  : ZoneGraph_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_52:
   \   000003B8   B548               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   000003BA   B649               LDR      R1,??MenuPaint_93+0x10  ;; CurModifSheet
   \   000003BC   0978               LDRB     R1,[R1, #+0]
   \   000003BE   A022               MOVS     R2,#+160
   \   000003C0   5143               MULS     R1,R2,R1
   \   000003C2   B54A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   000003C4   5118               ADDS     R1,R2,R1
   \   000003C6   0818               ADDS     R0,R1,R0
   \   000003C8   ........           BL       ZoneGraph_Paint
   \   000003CC   8BE1               B        ??MenuPaint_2
    190                                  case 112111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_77:
   \   000003CE   C749               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   000003D0   C748               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   000003D2   0068               LDR      R0,[R0, #+0]
   \   000003D4   ........           BL       TextChange_Paint
   \   000003D8   85E1               B        ??MenuPaint_2
    191                                  case 112112  :  AnalogGraph_Paint(AnalogToChange);break;
   \                     ??MenuPaint_78:
   \   000003DA   C648               LDR      R0,??MenuPaint_94+0x8  ;; AnalogToChange
   \   000003DC   0068               LDR      R0,[R0, #+0]
   \   000003DE   ........           BL       AnalogGraph_Paint
   \   000003E2   80E1               B        ??MenuPaint_2
    192                                    case 1121121  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_91:
   \   000003E4   C149               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   000003E6   C248               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   000003E8   0068               LDR      R0,[R0, #+0]
   \   000003EA   ........           BL       TextChange_Paint
   \   000003EE   7AE1               B        ??MenuPaint_2
    193                              case 11212  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_53:
   \   000003F0   BE49               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   000003F2   BF48               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   000003F4   0068               LDR      R0,[R0, #+0]
   \   000003F6   ........           BL       TextChange_Paint
   \   000003FA   74E1               B        ??MenuPaint_2
    194                              case 11213  :  AnalogGraph_Paint(AnalogToChange);break;
   \                     ??MenuPaint_54:
   \   000003FC   BD48               LDR      R0,??MenuPaint_94+0x8  ;; AnalogToChange
   \   000003FE   0068               LDR      R0,[R0, #+0]
   \   00000400   ........           BL       AnalogGraph_Paint
   \   00000404   6FE1               B        ??MenuPaint_2
    195                                case 112131  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_79:
   \   00000406   B949               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   00000408   B948               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   0000040A   0068               LDR      R0,[R0, #+0]
   \   0000040C   ........           BL       TextChange_Paint
   \   00000410   69E1               B        ??MenuPaint_2
    196                              case 11214  :  ButtonOptions_Paint(ButtonToChange); break;
   \                     ??MenuPaint_55:
   \   00000412   B948               LDR      R0,??MenuPaint_94+0xC  ;; ButtonToChange
   \   00000414   0068               LDR      R0,[R0, #+0]
   \   00000416   ........           BL       ButtonOptions_Paint
   \   0000041A   64E1               B        ??MenuPaint_2
    197                                case 112141  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_80:
   \   0000041C   B349               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   0000041E   B448               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   00000420   0068               LDR      R0,[R0, #+0]
   \   00000422   ........           BL       TextChange_Paint
   \   00000426   5EE1               B        ??MenuPaint_2
    198                                case 112142  :  ButtonAction_Paint(ButtonToChange); break;
   \                     ??MenuPaint_81:
   \   00000428   B348               LDR      R0,??MenuPaint_94+0xC  ;; ButtonToChange
   \   0000042A   0068               LDR      R0,[R0, #+0]
   \   0000042C   ........           BL       ButtonAction_Paint
   \   00000430   59E1               B        ??MenuPaint_2
    199                              case 11215  :  BigTemperLabel_Paint(); break;
   \                     ??MenuPaint_56:
   \   00000432   ........           BL       BigTemperLabel_Paint
   \   00000436   56E1               B        ??MenuPaint_2
    200                          case 1122  :  ThermostatSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_29:
   \   00000438   9548               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   0000043A   9649               LDR      R1,??MenuPaint_93+0x10  ;; CurModifSheet
   \   0000043C   0978               LDRB     R1,[R1, #+0]
   \   0000043E   A022               MOVS     R2,#+160
   \   00000440   5143               MULS     R1,R2,R1
   \   00000442   954A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   00000444   5118               ADDS     R1,R2,R1
   \   00000446   0818               ADDS     R0,R1,R0
   \   00000448   ........           BL       ThermostatSet_Paint
   \   0000044C   4BE1               B        ??MenuPaint_2
    201                                case 11224   :  ButtonOptions_Paint(ButtonToChange); break;
   \                     ??MenuPaint_57:
   \   0000044E   AA48               LDR      R0,??MenuPaint_94+0xC  ;; ButtonToChange
   \   00000450   0068               LDR      R0,[R0, #+0]
   \   00000452   ........           BL       ButtonOptions_Paint
   \   00000456   46E1               B        ??MenuPaint_2
    202                                case 112241  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_82:
   \   00000458   A449               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   0000045A   A548               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   0000045C   0068               LDR      R0,[R0, #+0]
   \   0000045E   ........           BL       TextChange_Paint
   \   00000462   40E1               B        ??MenuPaint_2
    203                                case 112242  :  ButtonAction_Paint(ButtonToChange); break;
   \                     ??MenuPaint_83:
   \   00000464   A448               LDR      R0,??MenuPaint_94+0xC  ;; ButtonToChange
   \   00000466   0068               LDR      R0,[R0, #+0]
   \   00000468   ........           BL       ButtonAction_Paint
   \   0000046C   3BE1               B        ??MenuPaint_2
    204                          case 1123  :  ScreenTimetableSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_30:
   \   0000046E   8848               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   00000470   8849               LDR      R1,??MenuPaint_93+0x10  ;; CurModifSheet
   \   00000472   0978               LDRB     R1,[R1, #+0]
   \   00000474   A022               MOVS     R2,#+160
   \   00000476   5143               MULS     R1,R2,R1
   \   00000478   874A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   0000047A   5118               ADDS     R1,R2,R1
   \   0000047C   0818               ADDS     R0,R1,R0
   \   0000047E   ........           BL       ScreenTimetableSet_Paint
   \   00000482   30E1               B        ??MenuPaint_2
    205                          case 1124  :  ScreenAlarmSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_31:
   \   00000484   8248               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   00000486   8349               LDR      R1,??MenuPaint_93+0x10  ;; CurModifSheet
   \   00000488   0978               LDRB     R1,[R1, #+0]
   \   0000048A   A022               MOVS     R2,#+160
   \   0000048C   5143               MULS     R1,R2,R1
   \   0000048E   824A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   00000490   5118               ADDS     R1,R2,R1
   \   00000492   0818               ADDS     R0,R1,R0
   \   00000494   ........           BL       ScreenAlarmSet_Paint
   \   00000498   25E1               B        ??MenuPaint_2
    206                      case 113   : Options_Paint();          break;  
   \                     ??MenuPaint_17:
   \   0000049A   ........           BL       Options_Paint
   \   0000049E   22E1               B        ??MenuPaint_2
    207                          case 1131 : Ask_Paint("Restart",Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_32:
   \   000004A0   96A2               ADR      R2,??MenuPaint_94+0x10  ;; 0x00, 0x00, 0x00, 0x00
   \   000004A2   FF20               MOVS     R0,#+255
   \   000004A4   F030               ADDS     R0,R0,#+240      ;; #+495
   \   000004A6   7E49               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   000004A8   0968               LDR      R1,[R1, #+0]
   \   000004AA   7E4B               LDR      R3,??MenuPaint_93+0x20  ;; 0xa7d
   \   000004AC   5943               MULS     R1,R3,R1
   \   000004AE   7E4B               LDR      R3,??MenuPaint_93+0x24  ;; Speech
   \   000004B0   5918               ADDS     R1,R3,R1
   \   000004B2   0918               ADDS     R1,R1,R0
   \   000004B4   9248               LDR      R0,??MenuPaint_94+0x14  ;; `?<Constant "Restart">`
   \   000004B6   ........           BL       Ask_Paint
   \   000004BA   14E1               B        ??MenuPaint_2
    208                          case 1133 :  Zmienne_Paint();  break;
   \                     ??MenuPaint_33:
   \   000004BC   ........           BL       Zmienne_Paint
   \   000004C0   11E1               B        ??MenuPaint_2
    209                                  case 11331 :  ZmienneDwustanowe_Paint();  break;
   \                     ??MenuPaint_58:
   \   000004C2   ........           BL       ZmienneDwustanowe_Paint
   \   000004C6   0EE1               B        ??MenuPaint_2
    210                                  case 11332 :  ZmienneAnalogowe_Paint();  break;
   \                     ??MenuPaint_59:
   \   000004C8   ........           BL       ZmienneAnalogowe_Paint
   \   000004CC   0BE1               B        ??MenuPaint_2
    211                          case 1134 : CheckingModule_Paint(&NeuronIdToChange);  break;    //uwaga numer MenuLevel u¿ywany w Main jako startowy dla TESTERa
   \                     ??MenuPaint_34:
   \   000004CE   8D48               LDR      R0,??MenuPaint_94+0x18  ;; NeuronIdToChange
   \   000004D0   ........           BL       CheckingModule_Paint
   \   000004D4   07E1               B        ??MenuPaint_2
    212                                case 11341 : NeuronNrChange_Paint(NeuronIdChange);  break;  
   \                     ??MenuPaint_60:
   \   000004D6   8C48               LDR      R0,??MenuPaint_94+0x1C  ;; NeuronIdChange
   \   000004D8   0068               LDR      R0,[R0, #+0]
   \   000004DA   ........           BL       NeuronNrChange_Paint
   \   000004DE   02E1               B        ??MenuPaint_2
    213                                case 113421 : NodeStanIO_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_84:
   \   000004E0   8A48               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000004E2   0078               LDRB     R0,[R0, #+0]
   \   000004E4   ........           BL       NodeStanIO_Paint
   \   000004E8   FDE0               B        ??MenuPaint_2
    214                                case 113431 : NodeWeAnalog_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_85:
   \   000004EA   8848               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000004EC   0078               LDRB     R0,[R0, #+0]
   \   000004EE   ........           BL       NodeWeAnalog_Paint
   \   000004F2   F8E0               B        ??MenuPaint_2
    215                                case 11344 : Tester_MG1_Paint(NeuronNrChange);  break;    
   \                     ??MenuPaint_61:
   \   000004F4   8548               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000004F6   0078               LDRB     R0,[R0, #+0]
   \   000004F8   ........           BL       Tester_MG1_Paint
   \   000004FC   F3E0               B        ??MenuPaint_2
    216                          case 1135 : ChangeID_Paint(&NeuronIdToChange, &NeuronIdAfterChange);  break;
   \                     ??MenuPaint_35:
   \   000004FE   8449               LDR      R1,??MenuPaint_94+0x24  ;; NeuronIdAfterChange
   \   00000500   8048               LDR      R0,??MenuPaint_94+0x18  ;; NeuronIdToChange
   \   00000502   ........           BL       ChangeID_Paint
   \   00000506   EEE0               B        ??MenuPaint_2
    217                                case 11351 : NeuronNrChange_Paint(NeuronIdChange);  break;      
   \                     ??MenuPaint_62:
   \   00000508   7F48               LDR      R0,??MenuPaint_94+0x1C  ;; NeuronIdChange
   \   0000050A   0068               LDR      R0,[R0, #+0]
   \   0000050C   ........           BL       NeuronNrChange_Paint
   \   00000510   E9E0               B        ??MenuPaint_2
    218                      case 114   : Setup_Paint();            break;
   \                     ??MenuPaint_18:
   \   00000512   ........           BL       Setup_Paint
   \   00000516   E6E0               B        ??MenuPaint_2
    219                          case 1141 : SetupLang_Paint();         break;
   \                     ??MenuPaint_36:
   \   00000518   ........           BL       SetupLang_Paint
   \   0000051C   E3E0               B        ??MenuPaint_2
    220                          case 1142 : SetupTime_Paint();        break;  
   \                     ??MenuPaint_37:
   \   0000051E   ........           BL       SetupTime_Paint
   \   00000522   E0E0               B        ??MenuPaint_2
    221                          case 1143 : SetupPass_Paint();         break;
   \                     ??MenuPaint_38:
   \   00000524   ........           BL       SetupPass_Paint
   \   00000528   DDE0               B        ??MenuPaint_2
    222                              case 11431 : SetupOldPass_Paint();         break;
   \                     ??MenuPaint_63:
   \   0000052A   ........           BL       SetupOldPass_Paint
   \   0000052E   DAE0               B        ??MenuPaint_2
    223                                  case 114311 : SetupNewPass_Paint();         break;
   \                     ??MenuPaint_86:
   \   00000530   ........           BL       SetupNewPass_Paint
   \   00000534   D7E0               B        ??MenuPaint_2
    224                              case 11432 : SetupOldPass_Paint();         break;
   \                     ??MenuPaint_64:
   \   00000536   ........           BL       SetupOldPass_Paint
   \   0000053A   D4E0               B        ??MenuPaint_2
    225                                  case 114321 : SetupNewPass_Paint();         break; 
   \                     ??MenuPaint_87:
   \   0000053C   ........           BL       SetupNewPass_Paint
   \   00000540   D1E0               B        ??MenuPaint_2
    226                          case 1144 : ScreenSetup_Paint();  break;    
   \                     ??MenuPaint_39:
   \   00000542   ........           BL       ScreenSetup_Paint
   \   00000546   CEE0               B        ??MenuPaint_2
    227                              case 11441 : ScreenBrightness_Paint();  break;
   \                     ??MenuPaint_65:
   \   00000548   ........           BL       ScreenBrightness_Paint
   \   0000054C   CBE0               B        ??MenuPaint_2
    228                              case 11442 : ScreenSever_Paint();  break;
   \                     ??MenuPaint_66:
   \   0000054E   ........           BL       ScreenSever_Paint
   \   00000552   C8E0               B        ??MenuPaint_2
    229                              case 11443 : SetTouchScreen_Paint();  break;
   \                     ??MenuPaint_67:
   \   00000554   ........           BL       SetTouchScreen_Paint
   \   00000558   C5E0               B        ??MenuPaint_2
    230                          case 1146 : MasterSlave_Paint();  break;
   \                     ??MenuPaint_40:
   \   0000055A   ........           BL       MasterSlave_Paint
   \   0000055E   C2E0               B        ??MenuPaint_2
    231                          case 1147 : RF_Channel_Paint();  break;
   \                     ??MenuPaint_41:
   \   00000560   ........           BL       RF_Channel_Paint
   \   00000564   BFE0               B        ??MenuPaint_2
    232                      case 115  : NeuronsList_Paint();    break;
   \                     ??MenuPaint_19:
   \   00000566   ........           BL       NeuronsList_Paint
   \   0000056A   BCE0               B        ??MenuPaint_2
    233                         case 1150 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_42:
   \   0000056C   4B48               LDR      R0,??MenuPaint_93+0x18  ;; 0x456
   \   0000056E   4C49               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   00000570   0968               LDR      R1,[R1, #+0]
   \   00000572   4C4A               LDR      R2,??MenuPaint_93+0x20  ;; 0xa7d
   \   00000574   5143               MULS     R1,R2,R1
   \   00000576   4C4A               LDR      R2,??MenuPaint_93+0x24  ;; Speech
   \   00000578   5118               ADDS     R1,R2,R1
   \   0000057A   0A18               ADDS     R2,R1,R0
   \   0000057C   4B48               LDR      R0,??MenuPaint_93+0x28  ;; 0x447
   \   0000057E   4849               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   00000580   0968               LDR      R1,[R1, #+0]
   \   00000582   484B               LDR      R3,??MenuPaint_93+0x20  ;; 0xa7d
   \   00000584   5943               MULS     R1,R3,R1
   \   00000586   484B               LDR      R3,??MenuPaint_93+0x24  ;; Speech
   \   00000588   5918               ADDS     R1,R3,R1
   \   0000058A   0918               ADDS     R1,R1,R0
   \   0000058C   4848               LDR      R0,??MenuPaint_93+0x2C  ;; `?<Constant "Info ">`
   \   0000058E   ........           BL       Ask_Paint
   \   00000592   A8E0               B        ??MenuPaint_2
    234                         case 1151 : NeuronNrChange_Paint(NeuronIdChange);  break;
   \                     ??MenuPaint_43:
   \   00000594   5C48               LDR      R0,??MenuPaint_94+0x1C  ;; NeuronIdChange
   \   00000596   0068               LDR      R0,[R0, #+0]
   \   00000598   ........           BL       NeuronNrChange_Paint
   \   0000059C   A3E0               B        ??MenuPaint_2
    235                         case 1152 :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_44:
   \   0000059E   5349               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   000005A0   5348               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   000005A2   0068               LDR      R0,[R0, #+0]
   \   000005A4   ........           BL       TextChange_Paint
   \   000005A8   9DE0               B        ??MenuPaint_2
    236                         case 1153 :  Node_Paint(NeuronNrChange); break;
   \                     ??MenuPaint_45:
   \   000005AA   5848               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000005AC   0078               LDRB     R0,[R0, #+0]
   \   000005AE   ........           BL       Node_Paint
   \   000005B2   98E0               B        ??MenuPaint_2
    237                            case 11531 : NeuronNrChange_Paint(NeuronIdChange);  break;
   \                     ??MenuPaint_68:
   \   000005B4   5448               LDR      R0,??MenuPaint_94+0x1C  ;; NeuronIdChange
   \   000005B6   0068               LDR      R0,[R0, #+0]
   \   000005B8   ........           BL       NeuronNrChange_Paint
   \   000005BC   93E0               B        ??MenuPaint_2
    238                            case 11534 : NodeTestTrans_Paint(NeuronNrChange);  break;     
   \                     ??MenuPaint_69:
   \   000005BE   5348               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000005C0   0078               LDRB     R0,[R0, #+0]
   \   000005C2   ........           BL       NodeTestTrans_Paint
   \   000005C6   8EE0               B        ??MenuPaint_2
    239                            case 11535 : NodeStanIO_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_70:
   \   000005C8   5048               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000005CA   0078               LDRB     R0,[R0, #+0]
   \   000005CC   ........           BL       NodeStanIO_Paint
   \   000005D0   89E0               B        ??MenuPaint_2
    240                            case 11536 : NodeWeAnalog_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_71:
   \   000005D2   4E48               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000005D4   0078               LDRB     R0,[R0, #+0]
   \   000005D6   ........           BL       NodeWeAnalog_Paint
   \   000005DA   84E0               B        ??MenuPaint_2
    241                            case 11537 : NodeInfo_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_72:
   \   000005DC   4B48               LDR      R0,??MenuPaint_94+0x20  ;; NeuronNrChange
   \   000005DE   0078               LDRB     R0,[R0, #+0]
   \   000005E0   ........           BL       NodeInfo_Paint
   \   000005E4   7FE0               B        ??MenuPaint_2
    242                      case 116  : Info_Paint();    break;
   \                     ??MenuPaint_20:
   \   000005E6   ........           BL       Info_Paint
   \   000005EA   7CE0               B        ??MenuPaint_2
    243                      case 117  : Net_Paint();     break;
   \                     ??MenuPaint_21:
   \   000005EC   ........           BL       Net_Paint
   \   000005F0   79E0               B        ??MenuPaint_2
    244                         case 1171  : UstawSiec_Paint();     break;
   \                     ??MenuPaint_46:
   \   000005F2   ........           BL       UstawSiec_Paint
   \   000005F6   76E0               B        ??MenuPaint_2
    245                            case 11711  : Punkt_dostepuWiFi_Paint();     break;
   \                     ??MenuPaint_73:
   \   000005F8   ........           BL       Punkt_dostepuWiFi_Paint
   \   000005FC   73E0               B        ??MenuPaint_2
    246                              case 117111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_88:
   \   000005FE   3B49               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   00000600   3B48               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   00000602   0068               LDR      R0,[R0, #+0]
   \   00000604   ........           BL       TextChange_Paint
   \   00000608   6DE0               B        ??MenuPaint_2
    247                              case 117112 :  WiFiConecting_Paint(); break;
   \                     ??MenuPaint_89:
   \   0000060A   ........           BL       WiFiConecting_Paint
   \   0000060E   6AE0               B        ??MenuPaint_2
    248                            case 11712  : IpTCP_Paint(); break;
   \                     ??MenuPaint_74:
   \   00000610   ........           BL       IpTCP_Paint
   \   00000614   67E0               B        ??MenuPaint_2
    249                              case 117122 : IpConfig_Paint(); break;
   \                     ??MenuPaint_90:
   \   00000616   ........           BL       IpConfig_Paint
   \   0000061A   64E0               B        ??MenuPaint_2
    250                                case 1171221  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_92:
   \   0000061C   3349               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   0000061E   3448               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   00000620   0068               LDR      R0,[R0, #+0]
   \   00000622   ........           BL       TextChange_Paint
   \   00000626   5EE0               B        ??MenuPaint_2
    251                         case 1172 :  Host_WiFi_Paint(); break;
   \                     ??MenuPaint_47:
   \   00000628   ........           BL       Host_WiFi_Paint
   \   0000062C   5BE0               B        ??MenuPaint_2
    252                            case 11721  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_75:
   \   0000062E   2F49               LDR      R1,??MenuPaint_94  ;; TextToChangeLength
   \   00000630   2F48               LDR      R0,??MenuPaint_94+0x4  ;; TextToChange
   \   00000632   0068               LDR      R0,[R0, #+0]
   \   00000634   ........           BL       TextChange_Paint
   \   00000638   55E0               B        ??MenuPaint_2
    253                         case 1173 : NetPeriodicity_Paint(); break;  
   \                     ??MenuPaint_48:
   \   0000063A   ........           BL       NetPeriodicity_Paint
   \   0000063E   52E0               B        ??MenuPaint_2
    254                         case 1174 : NetInfo_Paint(); break; 
   \                     ??MenuPaint_49:
   \   00000640   ........           BL       NetInfo_Paint
   \   00000644   4FE0               B        ??MenuPaint_2
    255                case 12     : ThermostatAutoSet_Paint(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??MenuPaint_10:
   \   00000646   1248               LDR      R0,??MenuPaint_93+0xC  ;; 0xbb98
   \   00000648   3249               LDR      R1,??MenuPaint_94+0x28  ;; CurrentSheet
   \   0000064A   0978               LDRB     R1,[R1, #+0]
   \   0000064C   A022               MOVS     R2,#+160
   \   0000064E   5143               MULS     R1,R2,R1
   \   00000650   114A               LDR      R2,??MenuPaint_93+0x14  ;; gProg
   \   00000652   5118               ADDS     R1,R2,R1
   \   00000654   0818               ADDS     R0,R1,R0
   \   00000656   ........           BL       ThermostatAutoSet_Paint
   \   0000065A   44E0               B        ??MenuPaint_2
    256                      case 120 :   Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_22:
   \   0000065C   0F48               LDR      R0,??MenuPaint_93+0x18  ;; 0x456
   \   0000065E   1049               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   00000660   0968               LDR      R1,[R1, #+0]
   \   00000662   104A               LDR      R2,??MenuPaint_93+0x20  ;; 0xa7d
   \   00000664   5143               MULS     R1,R2,R1
   \   00000666   104A               LDR      R2,??MenuPaint_93+0x24  ;; Speech
   \   00000668   5118               ADDS     R1,R2,R1
   \   0000066A   0A18               ADDS     R2,R1,R0
   \   0000066C   0F48               LDR      R0,??MenuPaint_93+0x28  ;; 0x447
   \   0000066E   0C49               LDR      R1,??MenuPaint_93+0x1C  ;; g_leng
   \   00000670   0968               LDR      R1,[R1, #+0]
   \   00000672   0C4B               LDR      R3,??MenuPaint_93+0x20  ;; 0xa7d
   \   00000674   5943               MULS     R1,R3,R1
   \   00000676   0C4B               LDR      R3,??MenuPaint_93+0x24  ;; Speech
   \   00000678   5918               ADDS     R1,R3,R1
   \   0000067A   0918               ADDS     R1,R1,R0
   \   0000067C   0C48               LDR      R0,??MenuPaint_93+0x2C  ;; `?<Constant "Info ">`
   \   0000067E   ........           BL       Ask_Paint
   \   00000682   30E0               B        ??MenuPaint_2
   \                     ??MenuPaint_93:
   \   00000684   672B0000           DC32     0x2b67
   \   00000688   ........           DC32     `?<Constant "+/- 3000 ">`
   \   0000068C   ........           DC32     `?<Constant "Max=">`
   \   00000690   98BB0000           DC32     0xbb98
   \   00000694   ........           DC32     CurModifSheet
   \   00000698   ........           DC32     gProg
   \   0000069C   56040000           DC32     0x456
   \   000006A0   ........           DC32     g_leng
   \   000006A4   7D0A0000           DC32     0xa7d
   \   000006A8   ........           DC32     Speech
   \   000006AC   47040000           DC32     0x447
   \   000006B0   ........           DC32     `?<Constant "Info ">`
    257                      case 121     : ThermostatChartSet_Paint(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??MenuPaint_23:
   \   000006B4   1848               LDR      R0,??MenuPaint_94+0x2C  ;; CurentChartModyfi
   \   000006B6   0178               LDRB     R1,[R0, #+0]
   \   000006B8   1848               LDR      R0,??MenuPaint_94+0x30  ;; 0xbb98
   \   000006BA   164A               LDR      R2,??MenuPaint_94+0x28  ;; CurrentSheet
   \   000006BC   1278               LDRB     R2,[R2, #+0]
   \   000006BE   A023               MOVS     R3,#+160
   \   000006C0   5A43               MULS     R2,R3,R2
   \   000006C2   174B               LDR      R3,??MenuPaint_94+0x34  ;; gProg
   \   000006C4   9A18               ADDS     R2,R3,R2
   \   000006C6   1018               ADDS     R0,R2,R0
   \   000006C8   ........           BL       ThermostatChartSet_Paint
   \   000006CC   0BE0               B        ??MenuPaint_2
    258                case 13     : TimetableSet_Paint();         break;   
   \                     ??MenuPaint_11:
   \   000006CE   ........           BL       TimetableSet_Paint
   \   000006D2   08E0               B        ??MenuPaint_2
    259                case 14     : AlarmPass_Paint(CurrentSheet);         break;   
   \                     ??MenuPaint_12:
   \   000006D4   0F48               LDR      R0,??MenuPaint_94+0x28  ;; CurrentSheet
   \   000006D6   0078               LDRB     R0,[R0, #+0]
   \   000006D8   ........           BL       AlarmPass_Paint
   \   000006DC   03E0               B        ??MenuPaint_2
    260                case 15     : AlarmPassChange_Paint(CurrentSheet);         break;  
   \                     ??MenuPaint_13:
   \   000006DE   0D48               LDR      R0,??MenuPaint_94+0x28  ;; CurrentSheet
   \   000006E0   0078               LDRB     R0,[R0, #+0]
   \   000006E2   ........           BL       AlarmPassChange_Paint
    261          
    262                             
    263            }
    264             
    265          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuPaint_2:
   \   000006E6   10BC               POP      {R4}
   \   000006E8   01BC               POP      {R0}
   \   000006EA   0047               BX       R0               ;; return
   \                     ??MenuPaint_94:
   \   000006EC   ........           DC32     TextToChangeLength
   \   000006F0   ........           DC32     TextToChange
   \   000006F4   ........           DC32     AnalogToChange
   \   000006F8   ........           DC32     ButtonToChange
   \   000006FC   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000700   ........           DC32     `?<Constant "Restart">`
   \   00000704   ........           DC32     NeuronIdToChange
   \   00000708   ........           DC32     NeuronIdChange
   \   0000070C   ........           DC32     NeuronNrChange
   \   00000710   ........           DC32     NeuronIdAfterChange
   \   00000714   ........           DC32     CurrentSheet
   \   00000718   ........           DC32     CurentChartModyfi
   \   0000071C   98BB0000           DC32     0xbb98
   \   00000720   ........           DC32     gProg
    266          
    267          
    268          
    269          
    270          
    271          //*-----------------------------------------------------------------------------
    272          //* Nazwa funkcji :    ScreenEvent
    273          //* Funkcja obs³ugi zdarzenia menu ekranowego
    274          //*-----------------------------------------------------------------------------
    275          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    276          //*-----------------------------------------------------------------------------
    277          
    278          

   \                                 In section Debug.txt, align 4, keep-with-next
    279          void ScreenEvent(void)
    280          {
   \                     ScreenEvent:
   \   00000000   01B5               PUSH     {R0,LR}
    281            
    282          
    283            
    284            if (g_Message==0)
   \   00000002   BE48               LDR      R0,??ScreenEvent_0  ;; g_Message
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   E5E2               B        ??ScreenEvent_1
    285            {
    286            switch (MenuLevel)
   \   0000000C   BC48               LDR      R0,??ScreenEvent_0+0x4  ;; MenuLevel
   \   0000000E   0068               LDR      R0,[R0, #+0]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   00D1               BNE      .+4
   \   00000014   0FE1               B        ??ScreenEvent_2
   \   00000016   401E               SUBS     R0,R0,#+1
   \   00000018   00D1               BNE      .+4
   \   0000001A   0FE1               B        ??ScreenEvent_3
   \   0000001C   C01E               SUBS     R0,R0,#+3
   \   0000001E   00D1               BNE      .+4
   \   00000020   17E1               B        ??ScreenEvent_4
   \   00000022   401E               SUBS     R0,R0,#+1
   \   00000024   00D1               BNE      .+4
   \   00000026   17E1               B        ??ScreenEvent_5
   \   00000028   401F               SUBS     R0,R0,#+5
   \   0000002A   00D1               BNE      .+4
   \   0000002C   1AE1               B        ??ScreenEvent_6
   \   0000002E   401E               SUBS     R0,R0,#+1
   \   00000030   00D1               BNE      .+4
   \   00000032   1BE1               B        ??ScreenEvent_7
   \   00000034   401E               SUBS     R0,R0,#+1
   \   00000036   00D1               BNE      .+4
   \   00000038   A6E2               B        ??ScreenEvent_8
   \   0000003A   401E               SUBS     R0,R0,#+1
   \   0000003C   00D1               BNE      .+4
   \   0000003E   BEE2               B        ??ScreenEvent_9
   \   00000040   401E               SUBS     R0,R0,#+1
   \   00000042   00D1               BNE      .+4
   \   00000044   BEE2               B        ??ScreenEvent_10
   \   00000046   401E               SUBS     R0,R0,#+1
   \   00000048   00D1               BNE      .+4
   \   0000004A   C0E2               B        ??ScreenEvent_11
   \   0000004C   2438               SUBS     R0,R0,#+36
   \   0000004E   00D1               BNE      .+4
   \   00000050   05E1               B        ??ScreenEvent_12
   \   00000052   3C38               SUBS     R0,R0,#+60
   \   00000054   00D1               BNE      .+4
   \   00000056   0CE1               B        ??ScreenEvent_13
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   00D1               BNE      .+4
   \   0000005C   23E1               B        ??ScreenEvent_14
   \   0000005E   401E               SUBS     R0,R0,#+1
   \   00000060   00D1               BNE      .+4
   \   00000062   D2E1               B        ??ScreenEvent_15
   \   00000064   401E               SUBS     R0,R0,#+1
   \   00000066   00D1               BNE      .+4
   \   00000068   00E2               B        ??ScreenEvent_16
   \   0000006A   401E               SUBS     R0,R0,#+1
   \   0000006C   00D1               BNE      .+4
   \   0000006E   2BE2               B        ??ScreenEvent_17
   \   00000070   401E               SUBS     R0,R0,#+1
   \   00000072   00D1               BNE      .+4
   \   00000074   58E2               B        ??ScreenEvent_18
   \   00000076   401E               SUBS     R0,R0,#+1
   \   00000078   00D1               BNE      .+4
   \   0000007A   58E2               B        ??ScreenEvent_19
   \   0000007C   C01E               SUBS     R0,R0,#+3
   \   0000007E   00D1               BNE      .+4
   \   00000080   8DE2               B        ??ScreenEvent_20
   \   00000082   401E               SUBS     R0,R0,#+1
   \   00000084   00D1               BNE      .+4
   \   00000086   8DE2               B        ??ScreenEvent_21
   \   00000088   9E49               LDR      R1,??ScreenEvent_0+0x8  ;; 0x3dd
   \   0000008A   401A               SUBS     R0,R0,R1
   \   0000008C   00D1               BNE      .+4
   \   0000008E   F3E0               B        ??ScreenEvent_22
   \   00000090   401E               SUBS     R0,R0,#+1
   \   00000092   00D1               BNE      .+4
   \   00000094   F3E0               B        ??ScreenEvent_23
   \   00000096   401E               SUBS     R0,R0,#+1
   \   00000098   00D1               BNE      .+4
   \   0000009A   FEE0               B        ??ScreenEvent_24
   \   0000009C   0838               SUBS     R0,R0,#+8
   \   0000009E   00D1               BNE      .+4
   \   000000A0   0CE1               B        ??ScreenEvent_25
   \   000000A2   401E               SUBS     R0,R0,#+1
   \   000000A4   00D1               BNE      .+4
   \   000000A6   0CE1               B        ??ScreenEvent_26
   \   000000A8   401E               SUBS     R0,R0,#+1
   \   000000AA   00D1               BNE      .+4
   \   000000AC   7BE1               B        ??ScreenEvent_27
   \   000000AE   401E               SUBS     R0,R0,#+1
   \   000000B0   00D1               BNE      .+4
   \   000000B2   94E1               B        ??ScreenEvent_28
   \   000000B4   401E               SUBS     R0,R0,#+1
   \   000000B6   00D1               BNE      .+4
   \   000000B8   9CE1               B        ??ScreenEvent_29
   \   000000BA   C01F               SUBS     R0,R0,#+7
   \   000000BC   00D1               BNE      .+4
   \   000000BE   A7E1               B        ??ScreenEvent_30
   \   000000C0   801E               SUBS     R0,R0,#+2
   \   000000C2   00D1               BNE      .+4
   \   000000C4   A7E1               B        ??ScreenEvent_31
   \   000000C6   401E               SUBS     R0,R0,#+1
   \   000000C8   00D1               BNE      .+4
   \   000000CA   ADE1               B        ??ScreenEvent_32
   \   000000CC   401E               SUBS     R0,R0,#+1
   \   000000CE   00D1               BNE      .+4
   \   000000D0   C2E1               B        ??ScreenEvent_33
   \   000000D2   801F               SUBS     R0,R0,#+6
   \   000000D4   00D1               BNE      .+4
   \   000000D6   CCE1               B        ??ScreenEvent_34
   \   000000D8   401E               SUBS     R0,R0,#+1
   \   000000DA   00D1               BNE      .+4
   \   000000DC   CCE1               B        ??ScreenEvent_35
   \   000000DE   401E               SUBS     R0,R0,#+1
   \   000000E0   00D1               BNE      .+4
   \   000000E2   CCE1               B        ??ScreenEvent_36
   \   000000E4   401E               SUBS     R0,R0,#+1
   \   000000E6   00D1               BNE      .+4
   \   000000E8   DCE1               B        ??ScreenEvent_37
   \   000000EA   801E               SUBS     R0,R0,#+2
   \   000000EC   00D1               BNE      .+4
   \   000000EE   E5E1               B        ??ScreenEvent_38
   \   000000F0   401E               SUBS     R0,R0,#+1
   \   000000F2   00D1               BNE      .+4
   \   000000F4   E5E1               B        ??ScreenEvent_39
   \   000000F6   C01E               SUBS     R0,R0,#+3
   \   000000F8   00D1               BNE      .+4
   \   000000FA   E8E1               B        ??ScreenEvent_40
   \   000000FC   401E               SUBS     R0,R0,#+1
   \   000000FE   00D1               BNE      .+4
   \   00000100   E8E1               B        ??ScreenEvent_41
   \   00000102   401E               SUBS     R0,R0,#+1
   \   00000104   00D1               BNE      .+4
   \   00000106   EAE1               B        ??ScreenEvent_42
   \   00000108   401E               SUBS     R0,R0,#+1
   \   0000010A   00D1               BNE      .+4
   \   0000010C   EEE1               B        ??ScreenEvent_43
   \   0000010E   1238               SUBS     R0,R0,#+18
   \   00000110   00D1               BNE      .+4
   \   00000112   0FE2               B        ??ScreenEvent_44
   \   00000114   401E               SUBS     R0,R0,#+1
   \   00000116   00D1               BNE      .+4
   \   00000118   26E2               B        ??ScreenEvent_45
   \   0000011A   401E               SUBS     R0,R0,#+1
   \   0000011C   00D1               BNE      .+4
   \   0000011E   2DE2               B        ??ScreenEvent_46
   \   00000120   401E               SUBS     R0,R0,#+1
   \   00000122   00D1               BNE      .+4
   \   00000124   2DE2               B        ??ScreenEvent_47
   \   00000126   7849               LDR      R1,??ScreenEvent_0+0xC  ;; 0x26d1
   \   00000128   401A               SUBS     R0,R0,R1
   \   0000012A   00D1               BNE      .+4
   \   0000012C   AAE0               B        ??ScreenEvent_48
   \   0000012E   0B38               SUBS     R0,R0,#+11
   \   00000130   00D1               BNE      .+4
   \   00000132   B5E0               B        ??ScreenEvent_49
   \   00000134   5938               SUBS     R0,R0,#+89
   \   00000136   00D1               BNE      .+4
   \   00000138   CEE0               B        ??ScreenEvent_50
   \   0000013A   401E               SUBS     R0,R0,#+1
   \   0000013C   00D1               BNE      .+4
   \   0000013E   0BE1               B        ??ScreenEvent_51
   \   00000140   401E               SUBS     R0,R0,#+1
   \   00000142   00D1               BNE      .+4
   \   00000144   0FE1               B        ??ScreenEvent_52
   \   00000146   401E               SUBS     R0,R0,#+1
   \   00000148   00D1               BNE      .+4
   \   0000014A   18E1               B        ??ScreenEvent_53
   \   0000014C   401E               SUBS     R0,R0,#+1
   \   0000014E   00D1               BNE      .+4
   \   00000150   26E1               B        ??ScreenEvent_54
   \   00000152   0938               SUBS     R0,R0,#+9
   \   00000154   00D1               BNE      .+4
   \   00000156   31E1               B        ??ScreenEvent_55
   \   00000158   6B38               SUBS     R0,R0,#+107
   \   0000015A   00D1               BNE      .+4
   \   0000015C   5EE1               B        ??ScreenEvent_56
   \   0000015E   401E               SUBS     R0,R0,#+1
   \   00000160   00D1               BNE      .+4
   \   00000162   5EE1               B        ??ScreenEvent_57
   \   00000164   0938               SUBS     R0,R0,#+9
   \   00000166   00D1               BNE      .+4
   \   00000168   62E1               B        ??ScreenEvent_58
   \   0000016A   C01E               SUBS     R0,R0,#+3
   \   0000016C   00D1               BNE      .+4
   \   0000016E   6EE1               B        ??ScreenEvent_59
   \   00000170   C01F               SUBS     R0,R0,#+7
   \   00000172   00D1               BNE      .+4
   \   00000174   75E1               B        ??ScreenEvent_60
   \   00000176   5038               SUBS     R0,R0,#+80
   \   00000178   00D1               BNE      .+4
   \   0000017A   83E1               B        ??ScreenEvent_61
   \   0000017C   401E               SUBS     R0,R0,#+1
   \   0000017E   00D1               BNE      .+4
   \   00000180   88E1               B        ??ScreenEvent_62
   \   00000182   0938               SUBS     R0,R0,#+9
   \   00000184   00D1               BNE      .+4
   \   00000186   90E1               B        ??ScreenEvent_63
   \   00000188   401E               SUBS     R0,R0,#+1
   \   0000018A   00D1               BNE      .+4
   \   0000018C   90E1               B        ??ScreenEvent_64
   \   0000018E   401E               SUBS     R0,R0,#+1
   \   00000190   00D1               BNE      .+4
   \   00000192   90E1               B        ??ScreenEvent_65
   \   00000194   5838               SUBS     R0,R0,#+88
   \   00000196   00D1               BNE      .+4
   \   00000198   ADE1               B        ??ScreenEvent_66
   \   0000019A   C01E               SUBS     R0,R0,#+3
   \   0000019C   00D1               BNE      .+4
   \   0000019E   AFE1               B        ??ScreenEvent_67
   \   000001A0   401E               SUBS     R0,R0,#+1
   \   000001A2   00D1               BNE      .+4
   \   000001A4   B1E1               B        ??ScreenEvent_68
   \   000001A6   401E               SUBS     R0,R0,#+1
   \   000001A8   00D1               BNE      .+4
   \   000001AA   B3E1               B        ??ScreenEvent_69
   \   000001AC   401E               SUBS     R0,R0,#+1
   \   000001AE   00D1               BNE      .+4
   \   000001B0   B5E1               B        ??ScreenEvent_70
   \   000001B2   AE38               SUBS     R0,R0,#+174
   \   000001B4   00D1               BNE      .+4
   \   000001B6   C0E1               B        ??ScreenEvent_71
   \   000001B8   401E               SUBS     R0,R0,#+1
   \   000001BA   00D1               BNE      .+4
   \   000001BC   C7E1               B        ??ScreenEvent_72
   \   000001BE   0938               SUBS     R0,R0,#+9
   \   000001C0   00D1               BNE      .+4
   \   000001C2   D4E1               B        ??ScreenEvent_73
   \   000001C4   5149               LDR      R1,??ScreenEvent_0+0x10  ;; 0x1843e
   \   000001C6   401A               SUBS     R0,R0,R1
   \   000001C8   61D0               BEQ      ??ScreenEvent_74
   \   000001CA   FA21               MOVS     R1,#+250
   \   000001CC   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   000001CE   401A               SUBS     R0,R0,R1
   \   000001D0   00D1               BNE      .+4
   \   000001D2   8CE0               B        ??ScreenEvent_75
   \   000001D4   401E               SUBS     R0,R0,#+1
   \   000001D6   00D1               BNE      .+4
   \   000001D8   B2E0               B        ??ScreenEvent_76
   \   000001DA   1338               SUBS     R0,R0,#+19
   \   000001DC   00D1               BNE      .+4
   \   000001DE   C7E0               B        ??ScreenEvent_77
   \   000001E0   0A38               SUBS     R0,R0,#+10
   \   000001E2   00D1               BNE      .+4
   \   000001E4   D0E0               B        ??ScreenEvent_78
   \   000001E6   401E               SUBS     R0,R0,#+1
   \   000001E8   00D1               BNE      .+4
   \   000001EA   D4E0               B        ??ScreenEvent_79
   \   000001EC   6338               SUBS     R0,R0,#+99
   \   000001EE   00D1               BNE      .+4
   \   000001F0   E9E0               B        ??ScreenEvent_80
   \   000001F2   401E               SUBS     R0,R0,#+1
   \   000001F4   00D1               BNE      .+4
   \   000001F6   EDE0               B        ??ScreenEvent_81
   \   000001F8   4549               LDR      R1,??ScreenEvent_0+0x14  ;; 0x49b
   \   000001FA   401A               SUBS     R0,R0,R1
   \   000001FC   00D1               BNE      .+4
   \   000001FE   1CE1               B        ??ScreenEvent_82
   \   00000200   0A38               SUBS     R0,R0,#+10
   \   00000202   00D1               BNE      .+4
   \   00000204   1EE1               B        ??ScreenEvent_83
   \   00000206   DC21               MOVS     R1,#+220
   \   00000208   8900               LSLS     R1,R1,#+2        ;; #+880
   \   0000020A   401A               SUBS     R0,R0,R1
   \   0000020C   00D1               BNE      .+4
   \   0000020E   3DE1               B        ??ScreenEvent_84
   \   00000210   0A38               SUBS     R0,R0,#+10
   \   00000212   00D1               BNE      .+4
   \   00000214   42E1               B        ??ScreenEvent_85
   \   00000216   3F49               LDR      R1,??ScreenEvent_0+0x18  ;; 0xae6
   \   00000218   401A               SUBS     R0,R0,R1
   \   0000021A   00D1               BNE      .+4
   \   0000021C   90E1               B        ??ScreenEvent_86
   \   0000021E   0B38               SUBS     R0,R0,#+11
   \   00000220   00D1               BNE      .+4
   \   00000222   97E1               B        ??ScreenEvent_87
   \   00000224   3C49               LDR      R1,??ScreenEvent_0+0x1C  ;; 0xf51df
   \   00000226   401A               SUBS     R0,R0,R1
   \   00000228   00D1               BNE      .+4
   \   0000022A   8EE0               B        ??ScreenEvent_88
   \   0000022C   3B49               LDR      R1,??ScreenEvent_0+0x20  ;; 0xc3b4
   \   0000022E   401A               SUBS     R0,R0,R1
   \   00000230   00D1               BNE      .+4
   \   00000232   92E1               B        ??ScreenEvent_89
   \   00000234   E2E1               B        ??ScreenEvent_90
    287            {
    288              case 0     : StartAnimation_Event();  break;
   \                     ??ScreenEvent_2:
   \   00000236   ........           BL       StartAnimation_Event
   \   0000023A   DFE1               B        ??ScreenEvent_90
    289              case 1     : MainSide_Event(&gProg.Screen[CurrentSheet]);              break;
   \                     ??ScreenEvent_3:
   \   0000023C   3848               LDR      R0,??ScreenEvent_0+0x24  ;; 0xbb98
   \   0000023E   3949               LDR      R1,??ScreenEvent_0+0x28  ;; CurrentSheet
   \   00000240   0978               LDRB     R1,[R1, #+0]
   \   00000242   A022               MOVS     R2,#+160
   \   00000244   5143               MULS     R1,R2,R1
   \   00000246   384A               LDR      R2,??ScreenEvent_0+0x2C  ;; gProg
   \   00000248   5118               ADDS     R1,R2,R1
   \   0000024A   0818               ADDS     R0,R1,R0
   \   0000024C   ........           BL       MainSide_Event
   \   00000250   D4E1               B        ??ScreenEvent_90
    290              case 4     : SetTouchScreen_Event();  break; 
   \                     ??ScreenEvent_4:
   \   00000252   ........           BL       SetTouchScreen_Event
   \   00000256   D1E1               B        ??ScreenEvent_90
    291              case 5     : AdvanceSet_Event();  break;
   \                     ??ScreenEvent_5:
   \   00000258   ........           BL       AdvanceSet_Event
   \   0000025C   CEE1               B        ??ScreenEvent_90
    292              case 51    : CleanAll_Event();          break; 
   \                     ??ScreenEvent_12:
   \   0000025E   ........           BL       CleanAll_Event
   \   00000262   CBE1               B        ??ScreenEvent_90
    293              case 10: MenuAccessPass_Event(1);  break;
   \                     ??ScreenEvent_6:
   \   00000264   0120               MOVS     R0,#+1
   \   00000266   ........           BL       MenuAccessPass_Event
   \   0000026A   C7E1               B        ??ScreenEvent_90
    294                case 11: MenuSide_Event(); break;
   \                     ??ScreenEvent_7:
   \   0000026C   ........           BL       MenuSide_Event
   \   00000270   C4E1               B        ??ScreenEvent_90
    295                
    296                      case 111  : Lader_Event();        break;
   \                     ??ScreenEvent_13:
   \   00000272   ........           BL       Lader_Event
   \   00000276   C1E1               B        ??ScreenEvent_90
    297                            case 1110 : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_22:
   \   00000278   ........           BL       SaveChanges_Evant
   \   0000027C   BEE1               B        ??ScreenEvent_90
    298                            case 1111: Procedure_Event(); break;
   \                     ??ScreenEvent_23:
   \   0000027E   ........           BL       Procedure_Event
   \   00000282   BBE1               B        ??ScreenEvent_90
    299                              case 11111: ValueChange_Evant(ValueChange);  break;
   \                     ??ScreenEvent_48:
   \   00000284   2948               LDR      R0,??ScreenEvent_0+0x30  ;; ValueChange
   \   00000286   0068               LDR      R0,[R0, #+0]
   \   00000288   ........           BL       ValueChange_Evant
   \   0000028C   B6E1               B        ??ScreenEvent_90
    300                                case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??ScreenEvent_74:
   \   0000028E   284A               LDR      R2,??ScreenEvent_0+0x34  ;; 0x2b67
   \   00000290   2849               LDR      R1,??ScreenEvent_0+0x38  ;; `?<Constant "+/- 3000 ">`
   \   00000292   2948               LDR      R0,??ScreenEvent_0+0x3C  ;; `?<Constant "Max=">`
   \   00000294   ........           BL       Message
   \   00000298   B0E1               B        ??ScreenEvent_90
    301                            case 1112: LaderChange_Event();  break;
   \                     ??ScreenEvent_24:
   \   0000029A   ........           BL       LaderChange_Event
   \   0000029E   ADE1               B        ??ScreenEvent_90
    302                              case 11122: RemRow_Event();  break;
   \                     ??ScreenEvent_49:
   \   000002A0   ........           BL       RemRow_Event
   \   000002A4   AAE1               B        ??ScreenEvent_90
    303                            
    304                      case 112  : ScreenSet_Event(&gProg.Screen[CurModifSheet]);        break;
   \                     ??ScreenEvent_14:
   \   000002A6   1E48               LDR      R0,??ScreenEvent_0+0x24  ;; 0xbb98
   \   000002A8   2449               LDR      R1,??ScreenEvent_0+0x40  ;; CurModifSheet
   \   000002AA   0978               LDRB     R1,[R1, #+0]
   \   000002AC   A022               MOVS     R2,#+160
   \   000002AE   5143               MULS     R1,R2,R1
   \   000002B0   1D4A               LDR      R2,??ScreenEvent_0+0x2C  ;; gProg
   \   000002B2   5118               ADDS     R1,R2,R1
   \   000002B4   0818               ADDS     R0,R1,R0
   \   000002B6   ........           BL       ScreenSet_Event
   \   000002BA   9FE1               B        ??ScreenEvent_90
    305                            case 1120 : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_25:
   \   000002BC   ........           BL       SaveChanges_Evant
   \   000002C0   9CE1               B        ??ScreenEvent_90
    306                            case 1121  : ScreenDesign1_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_26:
   \   000002C2   1748               LDR      R0,??ScreenEvent_0+0x24  ;; 0xbb98
   \   000002C4   1D49               LDR      R1,??ScreenEvent_0+0x40  ;; CurModifSheet
   \   000002C6   0978               LDRB     R1,[R1, #+0]
   \   000002C8   A022               MOVS     R2,#+160
   \   000002CA   5143               MULS     R1,R2,R1
   \   000002CC   164A               LDR      R2,??ScreenEvent_0+0x2C  ;; gProg
   \   000002CE   5118               ADDS     R1,R2,R1
   \   000002D0   0818               ADDS     R0,R1,R0
   \   000002D2   ........           BL       ScreenDesign1_Event
   \   000002D6   91E1               B        ??ScreenEvent_90
    307                                case 11211  : ZoneGraph_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_50:
   \   000002D8   1148               LDR      R0,??ScreenEvent_0+0x24  ;; 0xbb98
   \   000002DA   1849               LDR      R1,??ScreenEvent_0+0x40  ;; CurModifSheet
   \   000002DC   0978               LDRB     R1,[R1, #+0]
   \   000002DE   A022               MOVS     R2,#+160
   \   000002E0   5143               MULS     R1,R2,R1
   \   000002E2   114A               LDR      R2,??ScreenEvent_0+0x2C  ;; gProg
   \   000002E4   5118               ADDS     R1,R2,R1
   \   000002E6   0818               ADDS     R0,R1,R0
   \   000002E8   ........           BL       ZoneGraph_Event
   \   000002EC   86E1               B        ??ScreenEvent_90
    308                                    case 112111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_75:
   \   000002EE   C94A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   000002F0   C949               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   000002F2   CA48               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   000002F4   0068               LDR      R0,[R0, #+0]
   \   000002F6   ........           BL       TextChange_Evant
   \   000002FA   7FE1               B        ??ScreenEvent_90
   \                     ??ScreenEvent_0:
   \   000002FC   ........           DC32     g_Message
   \   00000300   ........           DC32     MenuLevel
   \   00000304   DD030000           DC32     0x3dd
   \   00000308   D1260000           DC32     0x26d1
   \   0000030C   3E840100           DC32     0x1843e
   \   00000310   9B040000           DC32     0x49b
   \   00000314   E60A0000           DC32     0xae6
   \   00000318   DF510F00           DC32     0xf51df
   \   0000031C   B4C30000           DC32     0xc3b4
   \   00000320   98BB0000           DC32     0xbb98
   \   00000324   ........           DC32     CurrentSheet
   \   00000328   ........           DC32     gProg
   \   0000032C   ........           DC32     ValueChange
   \   00000330   672B0000           DC32     0x2b67
   \   00000334   ........           DC32     `?<Constant "+/- 3000 ">`
   \   00000338   ........           DC32     `?<Constant "Max=">`
   \   0000033C   ........           DC32     CurModifSheet
    309                                    case 112112  :  AnalogGraph_Event(AnalogToChange);break;
   \                     ??ScreenEvent_76:
   \   00000340   B748               LDR      R0,??ScreenEvent_91+0xC  ;; AnalogToChange
   \   00000342   0068               LDR      R0,[R0, #+0]
   \   00000344   ........           BL       AnalogGraph_Event
   \   00000348   58E1               B        ??ScreenEvent_90
    310                                      case 1121121  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_88:
   \   0000034A   B24A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   0000034C   B249               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   0000034E   B348               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   00000350   0068               LDR      R0,[R0, #+0]
   \   00000352   ........           BL       TextChange_Evant
   \   00000356   51E1               B        ??ScreenEvent_90
    311                                case 11212  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_51:
   \   00000358   AE4A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   0000035A   AF49               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   0000035C   AF48               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   0000035E   0068               LDR      R0,[R0, #+0]
   \   00000360   ........           BL       TextChange_Evant
   \   00000364   4AE1               B        ??ScreenEvent_90
    312                                case 11213  :  AnalogGraph_Event(AnalogToChange);break;
   \                     ??ScreenEvent_52:
   \   00000366   AE48               LDR      R0,??ScreenEvent_91+0xC  ;; AnalogToChange
   \   00000368   0068               LDR      R0,[R0, #+0]
   \   0000036A   ........           BL       AnalogGraph_Event
   \   0000036E   45E1               B        ??ScreenEvent_90
    313                                    case 112131  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_77:
   \   00000370   A84A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   00000372   A949               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   00000374   A948               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   00000376   0068               LDR      R0,[R0, #+0]
   \   00000378   ........           BL       TextChange_Evant
   \   0000037C   3EE1               B        ??ScreenEvent_90
    314                                case 11214   :  ButtonOptions_Event(ButtonToChange); break;
   \                     ??ScreenEvent_53:
   \   0000037E   A948               LDR      R0,??ScreenEvent_91+0x10  ;; ButtonToChange
   \   00000380   0068               LDR      R0,[R0, #+0]
   \   00000382   ........           BL       ButtonOptions_Event
   \   00000386   39E1               B        ??ScreenEvent_90
    315                                case 112141  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_78:
   \   00000388   A24A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   0000038A   A349               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   0000038C   A348               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   0000038E   0068               LDR      R0,[R0, #+0]
   \   00000390   ........           BL       TextChange_Evant
   \   00000394   32E1               B        ??ScreenEvent_90
    316                                case 112142  :  ButtonAction_Event(ButtonToChange); break;
   \                     ??ScreenEvent_79:
   \   00000396   A348               LDR      R0,??ScreenEvent_91+0x10  ;; ButtonToChange
   \   00000398   0068               LDR      R0,[R0, #+0]
   \   0000039A   ........           BL       ButtonAction_Event
   \   0000039E   2DE1               B        ??ScreenEvent_90
    317                                case 11215   :  BigTemperLabel_Event(); break;
   \                     ??ScreenEvent_54:
   \   000003A0   ........           BL       BigTemperLabel_Event
   \   000003A4   2AE1               B        ??ScreenEvent_90
    318                             case 1122  :  ThermostatSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_27:
   \   000003A6   A048               LDR      R0,??ScreenEvent_91+0x14  ;; 0xbb98
   \   000003A8   A049               LDR      R1,??ScreenEvent_91+0x18  ;; CurModifSheet
   \   000003AA   0978               LDRB     R1,[R1, #+0]
   \   000003AC   A022               MOVS     R2,#+160
   \   000003AE   5143               MULS     R1,R2,R1
   \   000003B0   9F4A               LDR      R2,??ScreenEvent_91+0x1C  ;; gProg
   \   000003B2   5118               ADDS     R1,R2,R1
   \   000003B4   0818               ADDS     R0,R1,R0
   \   000003B6   ........           BL       ThermostatSet_Event
   \   000003BA   1FE1               B        ??ScreenEvent_90
    319                                case 11224   :  ButtonOptions_Event(ButtonToChange); break;
   \                     ??ScreenEvent_55:
   \   000003BC   9948               LDR      R0,??ScreenEvent_91+0x10  ;; ButtonToChange
   \   000003BE   0068               LDR      R0,[R0, #+0]
   \   000003C0   ........           BL       ButtonOptions_Event
   \   000003C4   1AE1               B        ??ScreenEvent_90
    320                                case 112241  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_80:
   \   000003C6   934A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   000003C8   9349               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   000003CA   9448               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   000003CC   0068               LDR      R0,[R0, #+0]
   \   000003CE   ........           BL       TextChange_Evant
   \   000003D2   13E1               B        ??ScreenEvent_90
    321                                case 112242  :  ButtonAction_Event(ButtonToChange); break;
   \                     ??ScreenEvent_81:
   \   000003D4   9348               LDR      R0,??ScreenEvent_91+0x10  ;; ButtonToChange
   \   000003D6   0068               LDR      R0,[R0, #+0]
   \   000003D8   ........           BL       ButtonAction_Event
   \   000003DC   0EE1               B        ??ScreenEvent_90
    322                             case 1123  :  ScreenTimetableSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_28:
   \   000003DE   9248               LDR      R0,??ScreenEvent_91+0x14  ;; 0xbb98
   \   000003E0   9249               LDR      R1,??ScreenEvent_91+0x18  ;; CurModifSheet
   \   000003E2   0978               LDRB     R1,[R1, #+0]
   \   000003E4   A022               MOVS     R2,#+160
   \   000003E6   5143               MULS     R1,R2,R1
   \   000003E8   914A               LDR      R2,??ScreenEvent_91+0x1C  ;; gProg
   \   000003EA   5118               ADDS     R1,R2,R1
   \   000003EC   0818               ADDS     R0,R1,R0
   \   000003EE   ........           BL       ScreenTimetableSet_Event
   \   000003F2   03E1               B        ??ScreenEvent_90
    323                             case 1124  :  ScreenAlarmSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_29:
   \   000003F4   8C48               LDR      R0,??ScreenEvent_91+0x14  ;; 0xbb98
   \   000003F6   8D49               LDR      R1,??ScreenEvent_91+0x18  ;; CurModifSheet
   \   000003F8   0978               LDRB     R1,[R1, #+0]
   \   000003FA   A022               MOVS     R2,#+160
   \   000003FC   5143               MULS     R1,R2,R1
   \   000003FE   8C4A               LDR      R2,??ScreenEvent_91+0x1C  ;; gProg
   \   00000400   5118               ADDS     R1,R2,R1
   \   00000402   0818               ADDS     R0,R1,R0
   \   00000404   ........           BL       ScreenAlarmSet_Event
   \   00000408   F8E0               B        ??ScreenEvent_90
    324                      case 113  : Options_Event();          break; 
   \                     ??ScreenEvent_15:
   \   0000040A   ........           BL       Options_Event
   \   0000040E   F5E0               B        ??ScreenEvent_90
    325                            case 1131 : Restart_Event();          break; 
   \                     ??ScreenEvent_30:
   \   00000410   ........           BL       Restart_Event
   \   00000414   F2E0               B        ??ScreenEvent_90
    326                            case 1133 :  Zmienne_Event();  break;
   \                     ??ScreenEvent_31:
   \   00000416   ........           BL       Zmienne_Event
   \   0000041A   EFE0               B        ??ScreenEvent_90
    327                                  case 11331 :  ZmienneDwustanowe_Event();  break;
   \                     ??ScreenEvent_56:
   \   0000041C   ........           BL       ZmienneDwustanowe_Event
   \   00000420   ECE0               B        ??ScreenEvent_90
    328                                  case 11332 :  ZmienneAnalogowe_Event();  break;
   \                     ??ScreenEvent_57:
   \   00000422   ........           BL       ZmienneAnalogowe_Event
   \   00000426   E9E0               B        ??ScreenEvent_90
    329                            case 1134 : CheckingModule_Event(&NeuronIdToChange);  break;
   \                     ??ScreenEvent_32:
   \   00000428   8248               LDR      R0,??ScreenEvent_91+0x20  ;; NeuronIdToChange
   \   0000042A   ........           BL       CheckingModule_Event
   \   0000042E   E5E0               B        ??ScreenEvent_90
    330                                  case 11341: NeuronNrChange_Evant(NeuronIdChange);  break;
   \                     ??ScreenEvent_58:
   \   00000430   8148               LDR      R0,??ScreenEvent_91+0x24  ;; NeuronIdChange
   \   00000432   0068               LDR      R0,[R0, #+0]
   \   00000434   ........           BL       NeuronNrChange_Evant
   \   00000438   E0E0               B        ??ScreenEvent_90
    331                                  case 113421 : NodeStanIO_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_82:
   \   0000043A   8048               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   0000043C   0078               LDRB     R0,[R0, #+0]
   \   0000043E   ........           BL       NodeStanIO_Event
   \   00000442   DBE0               B        ??ScreenEvent_90
    332                                  case 113431 : NodeWeAnalog_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_83:
   \   00000444   7D48               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   00000446   0078               LDRB     R0,[R0, #+0]
   \   00000448   ........           BL       NodeWeAnalog_Event
   \   0000044C   D6E0               B        ??ScreenEvent_90
    333                                  case 11344 : Tester_MG1_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_59:
   \   0000044E   7B48               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   00000450   0078               LDRB     R0,[R0, #+0]
   \   00000452   ........           BL       Tester_MG1_Event
   \   00000456   D1E0               B        ??ScreenEvent_90
    334                            case 1135 : ChangeID_Event(&NeuronIdToChange, &NeuronIdAfterChange);  break;
   \                     ??ScreenEvent_33:
   \   00000458   7949               LDR      R1,??ScreenEvent_91+0x2C  ;; NeuronIdAfterChange
   \   0000045A   7648               LDR      R0,??ScreenEvent_91+0x20  ;; NeuronIdToChange
   \   0000045C   ........           BL       ChangeID_Event
   \   00000460   CCE0               B        ??ScreenEvent_90
    335                                  case 11351: NeuronNrChange_Evant(NeuronIdChange);  break;      
   \                     ??ScreenEvent_60:
   \   00000462   7548               LDR      R0,??ScreenEvent_91+0x24  ;; NeuronIdChange
   \   00000464   0068               LDR      R0,[R0, #+0]
   \   00000466   ........           BL       NeuronNrChange_Evant
   \   0000046A   C7E0               B        ??ScreenEvent_90
    336                      case 114  : Setup_Event();            break; 
   \                     ??ScreenEvent_16:
   \   0000046C   ........           BL       Setup_Event
   \   00000470   C4E0               B        ??ScreenEvent_90
    337                            case 1141 : SetupLang_Event();         break;
   \                     ??ScreenEvent_34:
   \   00000472   ........           BL       SetupLang_Event
   \   00000476   C1E0               B        ??ScreenEvent_90
    338                            case 1142 : SetupTime_Event();        break;
   \                     ??ScreenEvent_35:
   \   00000478   ........           BL       SetupTime_Event
   \   0000047C   BEE0               B        ??ScreenEvent_90
    339                            case 1143 : SetupPass_Event();         break;   
   \                     ??ScreenEvent_36:
   \   0000047E   ........           BL       SetupPass_Event
   \   00000482   BBE0               B        ??ScreenEvent_90
    340                                  case 11431 : SetupOldPass_Event(1);         break;
   \                     ??ScreenEvent_61:
   \   00000484   0120               MOVS     R0,#+1
   \   00000486   ........           BL       SetupOldPass_Event
   \   0000048A   B7E0               B        ??ScreenEvent_90
    341                                       case 114311 : SetupNewPass_Event(1);         break;
   \                     ??ScreenEvent_84:
   \   0000048C   0120               MOVS     R0,#+1
   \   0000048E   ........           BL       SetupNewPass_Event
   \   00000492   B3E0               B        ??ScreenEvent_90
    342                                  case 11432 : SetupOldPass_Event(2);         break;
   \                     ??ScreenEvent_62:
   \   00000494   0220               MOVS     R0,#+2
   \   00000496   ........           BL       SetupOldPass_Event
   \   0000049A   AFE0               B        ??ScreenEvent_90
    343                                       case 114321 : SetupNewPass_Event(2);         break;
   \                     ??ScreenEvent_85:
   \   0000049C   0220               MOVS     R0,#+2
   \   0000049E   ........           BL       SetupNewPass_Event
   \   000004A2   ABE0               B        ??ScreenEvent_90
    344                            case 1144 : ScreenSetup_Event();  break;           
   \                     ??ScreenEvent_37:
   \   000004A4   ........           BL       ScreenSetup_Event
   \   000004A8   A8E0               B        ??ScreenEvent_90
    345                              case 11441 : ScreenBrightness_Event();  break;
   \                     ??ScreenEvent_63:
   \   000004AA   ........           BL       ScreenBrightness_Event
   \   000004AE   A5E0               B        ??ScreenEvent_90
    346                              case 11442 : ScreenSever_Event();  break;
   \                     ??ScreenEvent_64:
   \   000004B0   ........           BL       ScreenSever_Event
   \   000004B4   A2E0               B        ??ScreenEvent_90
    347                              case 11443 : SetTouchScreen_Event();  break;
   \                     ??ScreenEvent_65:
   \   000004B6   ........           BL       SetTouchScreen_Event
   \   000004BA   9FE0               B        ??ScreenEvent_90
    348                            case 1146 : MasterSlave_Event();  break;
   \                     ??ScreenEvent_38:
   \   000004BC   ........           BL       MasterSlave_Event
   \   000004C0   9CE0               B        ??ScreenEvent_90
    349                            case 1147 : RF_Channel_Event();  break;
   \                     ??ScreenEvent_39:
   \   000004C2   ........           BL       RF_Channel_Event
   \   000004C6   99E0               B        ??ScreenEvent_90
    350                      case 115  : NeuronsList_Event();  break;
   \                     ??ScreenEvent_17:
   \   000004C8   ........           BL       NeuronsList_Event
   \   000004CC   96E0               B        ??ScreenEvent_90
    351                            case 1150 : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_40:
   \   000004CE   ........           BL       SaveChanges_Evant
   \   000004D2   93E0               B        ??ScreenEvent_90
    352                            case 1151: NeuronNrChange_Evant(NeuronIdChange);  break;
   \                     ??ScreenEvent_41:
   \   000004D4   5848               LDR      R0,??ScreenEvent_91+0x24  ;; NeuronIdChange
   \   000004D6   0068               LDR      R0,[R0, #+0]
   \   000004D8   ........           BL       NeuronNrChange_Evant
   \   000004DC   8EE0               B        ??ScreenEvent_90
    353                            case 1152  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_42:
   \   000004DE   4D4A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   000004E0   4D49               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   000004E2   4E48               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   000004E4   0068               LDR      R0,[R0, #+0]
   \   000004E6   ........           BL       TextChange_Evant
   \   000004EA   87E0               B        ??ScreenEvent_90
    354                            case 1153 :  Node_Event(NeuronNrChange); break;
   \                     ??ScreenEvent_43:
   \   000004EC   5348               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   000004EE   0078               LDRB     R0,[R0, #+0]
   \   000004F0   ........           BL       Node_Event
   \   000004F4   82E0               B        ??ScreenEvent_90
    355                                case 11531 : NeuronNrChange_Evant(NeuronIdChange);  break;
   \                     ??ScreenEvent_66:
   \   000004F6   5048               LDR      R0,??ScreenEvent_91+0x24  ;; NeuronIdChange
   \   000004F8   0068               LDR      R0,[R0, #+0]
   \   000004FA   ........           BL       NeuronNrChange_Evant
   \   000004FE   7DE0               B        ??ScreenEvent_90
    356                                case 11534 : NodeTestTrans_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_67:
   \   00000500   4E48               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   00000502   0078               LDRB     R0,[R0, #+0]
   \   00000504   ........           BL       NodeTestTrans_Event
   \   00000508   78E0               B        ??ScreenEvent_90
    357                                case 11535 : NodeStanIO_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_68:
   \   0000050A   4C48               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   0000050C   0078               LDRB     R0,[R0, #+0]
   \   0000050E   ........           BL       NodeStanIO_Event
   \   00000512   73E0               B        ??ScreenEvent_90
    358                                case 11536 : NodeWeAnalog_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_69:
   \   00000514   4948               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   00000516   0078               LDRB     R0,[R0, #+0]
   \   00000518   ........           BL       NodeWeAnalog_Event
   \   0000051C   6EE0               B        ??ScreenEvent_90
    359                                case 11537 : NodeInfo_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_70:
   \   0000051E   4748               LDR      R0,??ScreenEvent_91+0x28  ;; NeuronNrChange
   \   00000520   0078               LDRB     R0,[R0, #+0]
   \   00000522   ........           BL       NodeInfo_Event
   \   00000526   69E0               B        ??ScreenEvent_90
    360                      case 116  : Info_Event();    break;
   \                     ??ScreenEvent_18:
   \   00000528   ........           BL       Info_Event
   \   0000052C   66E0               B        ??ScreenEvent_90
    361                      case 117  : Net_Event();     break;
   \                     ??ScreenEvent_19:
   \   0000052E   ........           BL       Net_Event
   \   00000532   63E0               B        ??ScreenEvent_90
    362                            case 1171  : UstawSiec_Event();     break;
   \                     ??ScreenEvent_44:
   \   00000534   ........           BL       UstawSiec_Event
   \   00000538   60E0               B        ??ScreenEvent_90
    363                                case 11711  : Punkt_dostepuWiFi_Event();     break;
   \                     ??ScreenEvent_71:
   \   0000053A   ........           BL       Punkt_dostepuWiFi_Event
   \   0000053E   5DE0               B        ??ScreenEvent_90
    364                                  case 117111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_86:
   \   00000540   344A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   00000542   3549               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   00000544   3548               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   00000546   0068               LDR      R0,[R0, #+0]
   \   00000548   ........           BL       TextChange_Evant
   \   0000054C   56E0               B        ??ScreenEvent_90
    365                                case 11712  : IpTCP_Event(); break;
   \                     ??ScreenEvent_72:
   \   0000054E   ........           BL       IpTCP_Event
   \   00000552   53E0               B        ??ScreenEvent_90
    366                                  case 117122 : IpConfig_Event(); break;
   \                     ??ScreenEvent_87:
   \   00000554   ........           BL       IpConfig_Event
   \   00000558   50E0               B        ??ScreenEvent_90
    367                                    case 1171221  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_89:
   \   0000055A   2E4A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   0000055C   2E49               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   0000055E   2F48               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   00000560   0068               LDR      R0,[R0, #+0]
   \   00000562   ........           BL       TextChange_Evant
   \   00000566   49E0               B        ??ScreenEvent_90
    368                            case 1172 : Host_WiFi_Event(); break;  
   \                     ??ScreenEvent_45:
   \   00000568   ........           BL       Host_WiFi_Event
   \   0000056C   46E0               B        ??ScreenEvent_90
    369                                case 11721  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_73:
   \   0000056E   294A               LDR      R2,??ScreenEvent_91  ;; TextToChangeMaxPixSize
   \   00000570   2949               LDR      R1,??ScreenEvent_91+0x4  ;; TextToChangeLength
   \   00000572   2A48               LDR      R0,??ScreenEvent_91+0x8  ;; TextToChange
   \   00000574   0068               LDR      R0,[R0, #+0]
   \   00000576   ........           BL       TextChange_Evant
   \   0000057A   3FE0               B        ??ScreenEvent_90
    370                            case 1173 : NetPeriodicity_Event(); break; 
   \                     ??ScreenEvent_46:
   \   0000057C   ........           BL       NetPeriodicity_Event
   \   00000580   3CE0               B        ??ScreenEvent_90
    371                            case 1174 : NetInfo_Event(); break; 
   \                     ??ScreenEvent_47:
   \   00000582   ........           BL       NetInfo_Event
   \   00000586   39E0               B        ??ScreenEvent_90
    372                    case 12     : ThermostatAutoSet_Event(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??ScreenEvent_8:
   \   00000588   2748               LDR      R0,??ScreenEvent_91+0x14  ;; 0xbb98
   \   0000058A   2E49               LDR      R1,??ScreenEvent_91+0x30  ;; CurrentSheet
   \   0000058C   0978               LDRB     R1,[R1, #+0]
   \   0000058E   A022               MOVS     R2,#+160
   \   00000590   5143               MULS     R1,R2,R1
   \   00000592   274A               LDR      R2,??ScreenEvent_91+0x1C  ;; gProg
   \   00000594   5118               ADDS     R1,R2,R1
   \   00000596   0818               ADDS     R0,R1,R0
   \   00000598   ........           BL       ThermostatAutoSet_Event
   \   0000059C   2EE0               B        ??ScreenEvent_90
    373                      case 120      : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_20:
   \   0000059E   ........           BL       SaveChanges_Evant
   \   000005A2   2BE0               B        ??ScreenEvent_90
    374                      case 121      : ThermostatChartSet_Event(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??ScreenEvent_21:
   \   000005A4   2848               LDR      R0,??ScreenEvent_91+0x34  ;; CurentChartModyfi
   \   000005A6   0178               LDRB     R1,[R0, #+0]
   \   000005A8   1F48               LDR      R0,??ScreenEvent_91+0x14  ;; 0xbb98
   \   000005AA   264A               LDR      R2,??ScreenEvent_91+0x30  ;; CurrentSheet
   \   000005AC   1278               LDRB     R2,[R2, #+0]
   \   000005AE   A023               MOVS     R3,#+160
   \   000005B0   5A43               MULS     R2,R3,R2
   \   000005B2   1F4B               LDR      R3,??ScreenEvent_91+0x1C  ;; gProg
   \   000005B4   9A18               ADDS     R2,R3,R2
   \   000005B6   1018               ADDS     R0,R2,R0
   \   000005B8   ........           BL       ThermostatChartSet_Event
   \   000005BC   1EE0               B        ??ScreenEvent_90
    375                    case 13     : TimetableSet_Event();         break;   
   \                     ??ScreenEvent_9:
   \   000005BE   ........           BL       TimetableSet_Event
   \   000005C2   1BE0               B        ??ScreenEvent_90
    376                    case 14     : AlarmPass_Event(CurrentSheet);         break; 
   \                     ??ScreenEvent_10:
   \   000005C4   1F48               LDR      R0,??ScreenEvent_91+0x30  ;; CurrentSheet
   \   000005C6   0078               LDRB     R0,[R0, #+0]
   \   000005C8   ........           BL       AlarmPass_Event
   \   000005CC   16E0               B        ??ScreenEvent_90
    377                    case 15     : AlarmPassChange_Event(CurrentSheet);         break;  
   \                     ??ScreenEvent_11:
   \   000005CE   1D48               LDR      R0,??ScreenEvent_91+0x30  ;; CurrentSheet
   \   000005D0   0078               LDRB     R0,[R0, #+0]
   \   000005D2   ........           BL       AlarmPassChange_Event
   \   000005D6   11E0               B        ??ScreenEvent_90
    378            } 
    379            }
    380            else
    381            {
    382              if ((X_up>0) && (Y_up>0)  )
   \                     ??ScreenEvent_1:
   \   000005D8   1C48               LDR      R0,??ScreenEvent_91+0x38  ;; X_up
   \   000005DA   0021               MOVS     R1,#+0
   \   000005DC   405E               LDRSH    R0,[R0, R1]
   \   000005DE   0128               CMP      R0,#+1
   \   000005E0   0CDB               BLT      ??ScreenEvent_90
   \   000005E2   1B48               LDR      R0,??ScreenEvent_91+0x3C  ;; Y_up
   \   000005E4   0021               MOVS     R1,#+0
   \   000005E6   405E               LDRSH    R0,[R0, R1]
   \   000005E8   0128               CMP      R0,#+1
   \   000005EA   07DB               BLT      ??ScreenEvent_90
    383              {
    384                  g_Message=0;
   \   000005EC   1948               LDR      R0,??ScreenEvent_91+0x40  ;; g_Message
   \   000005EE   0021               MOVS     R1,#+0
   \   000005F0   0160               STR      R1,[R0, #+0]
    385                  g_info=0;
   \   000005F2   1948               LDR      R0,??ScreenEvent_91+0x44  ;; g_info
   \   000005F4   0021               MOVS     R1,#+0
   \   000005F6   0160               STR      R1,[R0, #+0]
    386                  MenuPaint();
   \   000005F8   ........           BL       MenuPaint
    387              }
    388            }
    389            
    390             X_up=-1;
   \                     ??ScreenEvent_90:
   \   000005FC   1348               LDR      R0,??ScreenEvent_91+0x38  ;; X_up
   \   000005FE   0021               MOVS     R1,#+0
   \   00000600   C943               MVNS     R1,R1            ;; #-1
   \   00000602   0180               STRH     R1,[R0, #+0]
    391           Y_up=-1;
   \   00000604   1248               LDR      R0,??ScreenEvent_91+0x3C  ;; Y_up
   \   00000606   0021               MOVS     R1,#+0
   \   00000608   C943               MVNS     R1,R1            ;; #-1
   \   0000060A   0180               STRH     R1,[R0, #+0]
    392          
    393          
    394          
    395          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \   0000060C   01B0               ADD      SP,SP,#+4
   \   0000060E   01BC               POP      {R0}
   \   00000610   0047               BX       R0               ;; return
   \   00000612   C046               Nop      
   \                     ??ScreenEvent_91:
   \   00000614   ........           DC32     TextToChangeMaxPixSize
   \   00000618   ........           DC32     TextToChangeLength
   \   0000061C   ........           DC32     TextToChange
   \   00000620   ........           DC32     AnalogToChange
   \   00000624   ........           DC32     ButtonToChange
   \   00000628   98BB0000           DC32     0xbb98
   \   0000062C   ........           DC32     CurModifSheet
   \   00000630   ........           DC32     gProg
   \   00000634   ........           DC32     NeuronIdToChange
   \   00000638   ........           DC32     NeuronIdChange
   \   0000063C   ........           DC32     NeuronNrChange
   \   00000640   ........           DC32     NeuronIdAfterChange
   \   00000644   ........           DC32     CurrentSheet
   \   00000648   ........           DC32     CurentChartModyfi
   \   0000064C   ........           DC32     X_up
   \   00000650   ........           DC32     Y_up
   \   00000654   ........           DC32     g_Message
   \   00000658   ........           DC32     g_info
    396          
    397          
    398          
    399          
    400          
    401          //*-----------------------------------------------------------------------------
    402          //* Nazwa funkcji :    ScreenEvent
    403          //* Funkcja wrysowania menu ekranowego
    404          //*-----------------------------------------------------------------------------
    405          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    406          //*-----------------------------------------------------------------------------

   \                                 In section .bss, align 1
    407          _DispWait DispWait=0; 
                                    ^
Warning[Pe188]: enumerated type mixed with another type
   \                     DispWait:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    408          void MenuRefresh(Void)
    409          {
   \                     MenuRefresh:
   \   00000000   01B5               PUSH     {R0,LR}
    410            
    411           if (g_info==0)
   \   00000002   B148               LDR      R0,??MenuRefresh_0  ;; g_info
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   5AE1               B        ??MenuRefresh_1
    412            {
    413            static char Message;
    414            
    415            if ((g_counter>g_Message) && (!Message)) 
   \   0000000C   AF48               LDR      R0,??MenuRefresh_0+0x4  ;; g_Message
   \   0000000E   0268               LDR      R2,[R0, #+0]
   \   00000010   D317               ASRS     R3,R2,#+31
   \   00000012   AF48               LDR      R0,??MenuRefresh_0+0x8  ;; g_counter
   \   00000014   03C8               LDM      R0!,{R0,R1}
   \   00000016   8B42               CMP      R3,R1
   \   00000018   00D9               BLS      .+4
   \   0000001A   1BE1               B        ??MenuRefresh_2
   \   0000001C   02D3               BCC      ??MenuRefresh_3
   \   0000001E   8242               CMP      R2,R0
   \   00000020   00D3               BCC      .+4
   \   00000022   17E1               B        ??MenuRefresh_2
   \                     ??MenuRefresh_3:
   \   00000024   AB48               LDR      R0,??MenuRefresh_0+0xC  ;; ??Message
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   00D0               BEQ      .+4
   \   0000002C   12E1               B        ??MenuRefresh_2
    416            {    
    417              if (DispWait==DispWaitNoActive)      //tryb wyswietlania menu
   \   0000002E   AA48               LDR      R0,??MenuRefresh_0+0x10  ;; DispWait
   \   00000030   0078               LDRB     R0,[R0, #+0]
   \   00000032   0028               CMP      R0,#+0
   \   00000034   00D0               BEQ      .+4
   \   00000036   F3E0               B        ??MenuRefresh_4
    418              {
    419                switch (MenuLevel)
   \   00000038   A848               LDR      R0,??MenuRefresh_0+0x14  ;; MenuLevel
   \   0000003A   0068               LDR      R0,[R0, #+0]
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   54D0               BEQ      ??MenuRefresh_5
   \   00000040   401E               SUBS     R0,R0,#+1
   \   00000042   55D0               BEQ      ??MenuRefresh_6
   \   00000044   801E               SUBS     R0,R0,#+2
   \   00000046   5ED0               BEQ      ??MenuRefresh_7
   \   00000048   0B38               SUBS     R0,R0,#+11
   \   0000004A   5FD0               BEQ      ??MenuRefresh_8
   \   0000004C   6538               SUBS     R0,R0,#+101
   \   0000004E   00D1               BNE      .+4
   \   00000050   A1E0               B        ??MenuRefresh_9
   \   00000052   401E               SUBS     R0,R0,#+1
   \   00000054   00D1               BNE      .+4
   \   00000056   BBE0               B        ??MenuRefresh_10
   \   00000058   401F               SUBS     R0,R0,#+5
   \   0000005A   00D1               BNE      .+4
   \   0000005C   D3E0               B        ??MenuRefresh_11
   \   0000005E   A049               LDR      R1,??MenuRefresh_0+0x18  ;; 0x3f5
   \   00000060   401A               SUBS     R0,R0,R1
   \   00000062   00D1               BNE      .+4
   \   00000064   7FE0               B        ??MenuRefresh_12
   \   00000066   401E               SUBS     R0,R0,#+1
   \   00000068   00D1               BNE      .+4
   \   0000006A   8FE0               B        ??MenuRefresh_13
   \   0000006C   C01F               SUBS     R0,R0,#+7
   \   0000006E   6ED0               BEQ      ??MenuRefresh_14
   \   00000070   801F               SUBS     R0,R0,#+6
   \   00000072   6FD0               BEQ      ??MenuRefresh_15
   \   00000074   001F               SUBS     R0,R0,#+4
   \   00000076   00D1               BNE      .+4
   \   00000078   90E0               B        ??MenuRefresh_16
   \   0000007A   1638               SUBS     R0,R0,#+22
   \   0000007C   00D1               BNE      .+4
   \   0000007E   AAE0               B        ??MenuRefresh_17
   \   00000080   9849               LDR      R1,??MenuRefresh_0+0x1C  ;; 0x2736
   \   00000082   401A               SUBS     R0,R0,R1
   \   00000084   51D0               BEQ      ??MenuRefresh_18
   \   00000086   7738               SUBS     R0,R0,#+119
   \   00000088   67D0               BEQ      ??MenuRefresh_19
   \   0000008A   401E               SUBS     R0,R0,#+1
   \   0000008C   68D0               BEQ      ??MenuRefresh_20
   \   0000008E   0C38               SUBS     R0,R0,#+12
   \   00000090   77D0               BEQ      ??MenuRefresh_21
   \   00000092   BE38               SUBS     R0,R0,#+190
   \   00000094   00D1               BNE      .+4
   \   00000096   87E0               B        ??MenuRefresh_22
   \   00000098   401E               SUBS     R0,R0,#+1
   \   0000009A   00D1               BNE      .+4
   \   0000009C   89E0               B        ??MenuRefresh_23
   \   0000009E   401E               SUBS     R0,R0,#+1
   \   000000A0   00D1               BNE      .+4
   \   000000A2   8BE0               B        ??MenuRefresh_24
   \   000000A4   401E               SUBS     R0,R0,#+1
   \   000000A6   00D1               BNE      .+4
   \   000000A8   8DE0               B        ??MenuRefresh_25
   \   000000AA   B838               SUBS     R0,R0,#+184
   \   000000AC   00D1               BNE      .+4
   \   000000AE   9EE0               B        ??MenuRefresh_26
   \   000000B0   8D49               LDR      R1,??MenuRefresh_0+0x20  ;; 0x18826
   \   000000B2   401A               SUBS     R0,R0,R1
   \   000000B4   2DD0               BEQ      ??MenuRefresh_27
   \   000000B6   1438               SUBS     R0,R0,#+20
   \   000000B8   3DD0               BEQ      ??MenuRefresh_28
   \   000000BA   0A38               SUBS     R0,R0,#+10
   \   000000BC   41D0               BEQ      ??MenuRefresh_29
   \   000000BE   A021               MOVS     R1,#+160
   \   000000C0   C900               LSLS     R1,R1,#+3        ;; #+1280
   \   000000C2   401A               SUBS     R0,R0,R1
   \   000000C4   53D0               BEQ      ??MenuRefresh_30
   \   000000C6   0A38               SUBS     R0,R0,#+10
   \   000000C8   56D0               BEQ      ??MenuRefresh_31
   \   000000CA   E621               MOVS     R1,#+230
   \   000000CC   0901               LSLS     R1,R1,#+4        ;; #+3680
   \   000000CE   401A               SUBS     R0,R0,R1
   \   000000D0   00D1               BNE      .+4
   \   000000D2   83E0               B        ??MenuRefresh_32
   \   000000D4   401E               SUBS     R0,R0,#+1
   \   000000D6   00D1               BNE      .+4
   \   000000D8   86E0               B        ??MenuRefresh_33
   \   000000DA   8449               LDR      R1,??MenuRefresh_0+0x24  ;; 0xf51e9
   \   000000DC   401A               SUBS     R0,R0,R1
   \   000000DE   1ED0               BEQ      ??MenuRefresh_34
   \   000000E0   8349               LDR      R1,??MenuRefresh_0+0x28  ;; 0xc3b4
   \   000000E2   401A               SUBS     R0,R0,R1
   \   000000E4   00D1               BNE      .+4
   \   000000E6   88E0               B        ??MenuRefresh_35
   \   000000E8   B4E0               B        ??MenuRefresh_2
    420                {
    421                  case 0        : StartAnimation_Paint();         break;
   \                     ??MenuRefresh_5:
   \   000000EA   ........           BL       StartAnimation_Paint
   \   000000EE   B1E0               B        ??MenuRefresh_2
    422                  case 1        : MainSide_Refresh(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuRefresh_6:
   \   000000F0   8048               LDR      R0,??MenuRefresh_0+0x2C  ;; 0xbb98
   \   000000F2   8149               LDR      R1,??MenuRefresh_0+0x30  ;; CurrentSheet
   \   000000F4   0978               LDRB     R1,[R1, #+0]
   \   000000F6   A022               MOVS     R2,#+160
   \   000000F8   5143               MULS     R1,R2,R1
   \   000000FA   804A               LDR      R2,??MenuRefresh_0+0x34  ;; gProg
   \   000000FC   5118               ADDS     R1,R2,R1
   \   000000FE   0818               ADDS     R0,R1,R0
   \   00000100   ........           BL       MainSide_Refresh
   \   00000104   A6E0               B        ??MenuRefresh_2
    423                  case 3        : CheckChannel();         break;
   \                     ??MenuRefresh_7:
   \   00000106   ........           BL       CheckChannel
   \   0000010A   A3E0               B        ??MenuRefresh_2
    424                  case 14       : AlarmPass_Refresh();break;
   \                     ??MenuRefresh_8:
   \   0000010C   ........           BL       AlarmPass_Refresh
   \   00000110   A0E0               B        ??MenuRefresh_2
    425                      case 112111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_27:
   \   00000112   7B49               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   00000114   7B48               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   00000116   0068               LDR      R0,[R0, #+0]
   \   00000118   ........           BL       TextChange_Refresh
   \   0000011C   9AE0               B        ??MenuRefresh_2
    426                      case 1121121  : TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_34:
   \   0000011E   7849               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   00000120   7848               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   00000122   0068               LDR      R0,[R0, #+0]
   \   00000124   ........           BL       TextChange_Refresh
   \   00000128   94E0               B        ??MenuRefresh_2
    427                      case 11212  :   TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_18:
   \   0000012A   7549               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   0000012C   7548               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   0000012E   0068               LDR      R0,[R0, #+0]
   \   00000130   ........           BL       TextChange_Refresh
   \   00000134   8EE0               B        ??MenuRefresh_2
    428                      case 112131  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_28:
   \   00000136   7249               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   00000138   7248               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   0000013A   0068               LDR      R0,[R0, #+0]
   \   0000013C   ........           BL       TextChange_Refresh
   \   00000140   88E0               B        ??MenuRefresh_2
    429                      case 112141  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_29:
   \   00000142   6F49               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   00000144   6F48               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   00000146   0068               LDR      R0,[R0, #+0]
   \   00000148   ........           BL       TextChange_Refresh
   \   0000014C   82E0               B        ??MenuRefresh_2
    430                      case 1142    : SetupTime_Refresh();        break;
   \                     ??MenuRefresh_14:
   \   0000014E   ........           BL       SetupTime_Refresh
   \   00000152   7FE0               B        ??MenuRefresh_2
    431                      case 1148    : RF_Channel_Refresh();  break;
   \                     ??MenuRefresh_15:
   \   00000154   ........           BL       RF_Channel_Refresh
   \   00000158   7CE0               B        ??MenuRefresh_2
    432                      
    433                      case 11331 :  ZmienneDwustanowe_Repaint();  break;
   \                     ??MenuRefresh_19:
   \   0000015A   ........           BL       ZmienneDwustanowe_Repaint
   \   0000015E   79E0               B        ??MenuRefresh_2
    434                      case 11332 :  ZmienneAnalogowe_Repaint();  break;
   \                     ??MenuRefresh_20:
   \   00000160   ........           BL       ZmienneAnalogowe_Repaint
   \   00000164   76E0               B        ??MenuRefresh_2
    435                      case 1134 : CheckingModule_Refresh(&NeuronIdToChange);  break;
   \                     ??MenuRefresh_12:
   \   00000166   6848               LDR      R0,??MenuRefresh_0+0x40  ;; NeuronIdToChange
   \   00000168   ........           BL       CheckingModule_Refresh
   \   0000016C   72E0               B        ??MenuRefresh_2
    436                        case 113421 : NodeStanIO_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_30:
   \   0000016E   6748               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   00000170   0078               LDRB     R0,[R0, #+0]
   \   00000172   ........           BL       NodeStanIO_Refresh
   \   00000176   6DE0               B        ??MenuRefresh_2
    437                        case 113431 : NodeWeAnalog_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_31:
   \   00000178   6448               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   0000017A   0078               LDRB     R0,[R0, #+0]
   \   0000017C   ........           BL       NodeWeAnalog_Refresh
   \   00000180   68E0               B        ??MenuRefresh_2
    438                        case 11344 : Tester_MG1_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_21:
   \   00000182   6248               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   00000184   0078               LDRB     R0,[R0, #+0]
   \   00000186   ........           BL       Tester_MG1_Refresh
   \   0000018A   63E0               B        ??MenuRefresh_2
    439                      case 1135 : ChangeID_Refresh(&NeuronIdToChange, &NeuronIdAfterChange);  break;
   \                     ??MenuRefresh_13:
   \   0000018C   6049               LDR      R1,??MenuRefresh_0+0x48  ;; NeuronIdAfterChange
   \   0000018E   5E48               LDR      R0,??MenuRefresh_0+0x40  ;; NeuronIdToChange
   \   00000190   ........           BL       ChangeID_Refresh
   \   00000194   5EE0               B        ??MenuRefresh_2
    440                        
    441                        
    442                   case 115  : NeuronsList_Refresh();  break;
   \                     ??MenuRefresh_9:
   \   00000196   ........           BL       NeuronsList_Refresh
   \   0000019A   5BE0               B        ??MenuRefresh_2
    443                        case 1152    : TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_16:
   \   0000019C   5849               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   0000019E   5948               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   000001A0   0068               LDR      R0,[R0, #+0]
   \   000001A2   ........           BL       TextChange_Refresh
   \   000001A6   55E0               B        ??MenuRefresh_2
    444                        case 11534   : NodeTestTrans_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_22:
   \   000001A8   5848               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   000001AA   0078               LDRB     R0,[R0, #+0]
   \   000001AC   ........           BL       NodeTestTrans_Refresh
   \   000001B0   50E0               B        ??MenuRefresh_2
    445                        case 11535   : NodeStanIO_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_23:
   \   000001B2   5648               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   000001B4   0078               LDRB     R0,[R0, #+0]
   \   000001B6   ........           BL       NodeStanIO_Refresh
   \   000001BA   4BE0               B        ??MenuRefresh_2
    446                        case 11536   : NodeWeAnalog_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_24:
   \   000001BC   5348               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   000001BE   0078               LDRB     R0,[R0, #+0]
   \   000001C0   ........           BL       NodeWeAnalog_Refresh
   \   000001C4   46E0               B        ??MenuRefresh_2
    447                        case 11537   : NodeInfo_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_25:
   \   000001C6   5148               LDR      R0,??MenuRefresh_0+0x44  ;; NeuronNrChange
   \   000001C8   0078               LDRB     R0,[R0, #+0]
   \   000001CA   ........           BL       NodeInfo_Refresh
   \   000001CE   41E0               B        ??MenuRefresh_2
    448                  
    449                      
    450                  case 116  : Info_Refresh();    break;
   \                     ??MenuRefresh_10:
   \   000001D0   ........           BL       Info_Refresh
   \   000001D4   3EE0               B        ??MenuRefresh_2
    451                       case 1174 : NetInfo_Refresh(); break; 
   \                     ??MenuRefresh_17:
   \   000001D6   ........           BL       NetInfo_Refresh
   \   000001DA   3BE0               B        ??MenuRefresh_2
    452                          
    453                       
    454                       case 117111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_32:
   \   000001DC   4849               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   000001DE   4948               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   000001E0   0068               LDR      R0,[R0, #+0]
   \   000001E2   ........           BL       TextChange_Refresh
   \   000001E6   35E0               B        ??MenuRefresh_2
    455                       case 117112 :  WiFiConecting_Refresh(); break;
   \                     ??MenuRefresh_33:
   \   000001E8   ........           BL       WiFiConecting_Refresh
   \   000001EC   32E0               B        ??MenuRefresh_2
    456                       case 11721  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_26:
   \   000001EE   4449               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   000001F0   4448               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   000001F2   0068               LDR      R0,[R0, #+0]
   \   000001F4   ........           BL       TextChange_Refresh
   \   000001F8   2CE0               B        ??MenuRefresh_2
    457                       case 1171221  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_35:
   \   000001FA   4149               LDR      R1,??MenuRefresh_0+0x38  ;; TextToChangeLength
   \   000001FC   4148               LDR      R0,??MenuRefresh_0+0x3C  ;; TextToChange
   \   000001FE   0068               LDR      R0,[R0, #+0]
   \   00000200   ........           BL       TextChange_Refresh
   \   00000204   26E0               B        ??MenuRefresh_2
    458                       
    459                       
    460                  
    461                  case 121     : ThermostatChartSet_Refresh(&gProg.Screen[CurrentSheet], CurentChartModyfi);  break;   
   \                     ??MenuRefresh_11:
   \   00000206   4348               LDR      R0,??MenuRefresh_0+0x4C  ;; CurentChartModyfi
   \   00000208   0178               LDRB     R1,[R0, #+0]
   \   0000020A   3A48               LDR      R0,??MenuRefresh_0+0x2C  ;; 0xbb98
   \   0000020C   3A4A               LDR      R2,??MenuRefresh_0+0x30  ;; CurrentSheet
   \   0000020E   1278               LDRB     R2,[R2, #+0]
   \   00000210   A023               MOVS     R3,#+160
   \   00000212   5A43               MULS     R2,R3,R2
   \   00000214   394B               LDR      R3,??MenuRefresh_0+0x34  ;; gProg
   \   00000216   9A18               ADDS     R2,R3,R2
   \   00000218   1018               ADDS     R0,R2,R0
   \   0000021A   ........           BL       ThermostatChartSet_Refresh
   \   0000021E   19E0               B        ??MenuRefresh_2
    462                  
    463                }
    464              }
    465              else if(DispWait==DispWaitOn)
   \                     ??MenuRefresh_4:
   \   00000220   2D48               LDR      R0,??MenuRefresh_0+0x10  ;; DispWait
   \   00000222   0078               LDRB     R0,[R0, #+0]
   \   00000224   0128               CMP      R0,#+1
   \   00000226   02D1               BNE      ??MenuRefresh_36
    466              {
    467                Wait_Paint();
   \   00000228   ........           BL       Wait_Paint
   \   0000022C   12E0               B        ??MenuRefresh_2
    468              }
    469              else if(DispWait==DispWaitOn2)
   \                     ??MenuRefresh_36:
   \   0000022E   2A48               LDR      R0,??MenuRefresh_0+0x10  ;; DispWait
   \   00000230   0078               LDRB     R0,[R0, #+0]
   \   00000232   0228               CMP      R0,#+2
   \   00000234   05D1               BNE      ??MenuRefresh_37
    470              {
    471                Wait_Paint();
   \   00000236   ........           BL       Wait_Paint
    472                DispWait=DispWaitActive;
   \   0000023A   2748               LDR      R0,??MenuRefresh_0+0x10  ;; DispWait
   \   0000023C   0321               MOVS     R1,#+3
   \   0000023E   0170               STRB     R1,[R0, #+0]
   \   00000240   08E0               B        ??MenuRefresh_2
    473              }
    474              else if(DispWait==DispWaitOff)
   \                     ??MenuRefresh_37:
   \   00000242   2548               LDR      R0,??MenuRefresh_0+0x10  ;; DispWait
   \   00000244   0078               LDRB     R0,[R0, #+0]
   \   00000246   0428               CMP      R0,#+4
   \   00000248   04D1               BNE      ??MenuRefresh_2
    475              {
    476                DispWait=DispWaitNoActive;
   \   0000024A   2348               LDR      R0,??MenuRefresh_0+0x10  ;; DispWait
   \   0000024C   0021               MOVS     R1,#+0
   \   0000024E   0170               STRB     R1,[R0, #+0]
    477                MenuPaint();
   \   00000250   ........           BL       MenuPaint
    478              }
    479              
    480          
    481              
    482              
    483            }
    484            
    485            
    486              if ((g_counter>g_Message) && (Message)){Message=0; g_Message=0; MenuPaint();}
   \                     ??MenuRefresh_2:
   \   00000254   1D48               LDR      R0,??MenuRefresh_0+0x4  ;; g_Message
   \   00000256   0268               LDR      R2,[R0, #+0]
   \   00000258   D317               ASRS     R3,R2,#+31
   \   0000025A   1D48               LDR      R0,??MenuRefresh_0+0x8  ;; g_counter
   \   0000025C   03C8               LDM      R0!,{R0,R1}
   \   0000025E   8B42               CMP      R3,R1
   \   00000260   0ED8               BHI      ??MenuRefresh_38
   \   00000262   01D3               BCC      ??MenuRefresh_39
   \   00000264   8242               CMP      R2,R0
   \   00000266   0BD2               BCS      ??MenuRefresh_38
   \                     ??MenuRefresh_39:
   \   00000268   1A48               LDR      R0,??MenuRefresh_0+0xC  ;; ??Message
   \   0000026A   0078               LDRB     R0,[R0, #+0]
   \   0000026C   0028               CMP      R0,#+0
   \   0000026E   07D0               BEQ      ??MenuRefresh_38
   \   00000270   1848               LDR      R0,??MenuRefresh_0+0xC  ;; ??Message
   \   00000272   0021               MOVS     R1,#+0
   \   00000274   0170               STRB     R1,[R0, #+0]
   \   00000276   1548               LDR      R0,??MenuRefresh_0+0x4  ;; g_Message
   \   00000278   0021               MOVS     R1,#+0
   \   0000027A   0160               STR      R1,[R0, #+0]
   \   0000027C   ........           BL       MenuPaint
    487            if ((g_counter<g_Message) && (!Message)){Message=1;}
   \                     ??MenuRefresh_38:
   \   00000280   1348               LDR      R0,??MenuRefresh_0+0x8  ;; g_counter
   \   00000282   03C8               LDM      R0!,{R0,R1}
   \   00000284   114A               LDR      R2,??MenuRefresh_0+0x4  ;; g_Message
   \   00000286   1268               LDR      R2,[R2, #+0]
   \   00000288   D317               ASRS     R3,R2,#+31
   \   0000028A   9942               CMP      R1,R3
   \   0000028C   09D8               BHI      ??MenuRefresh_40
   \   0000028E   01D3               BCC      ??MenuRefresh_41
   \   00000290   9042               CMP      R0,R2
   \   00000292   06D2               BCS      ??MenuRefresh_40
   \                     ??MenuRefresh_41:
   \   00000294   0F48               LDR      R0,??MenuRefresh_0+0xC  ;; ??Message
   \   00000296   0078               LDRB     R0,[R0, #+0]
   \   00000298   0028               CMP      R0,#+0
   \   0000029A   02D1               BNE      ??MenuRefresh_40
   \   0000029C   0D48               LDR      R0,??MenuRefresh_0+0xC  ;; ??Message
   \   0000029E   0121               MOVS     R1,#+1
   \   000002A0   0170               STRB     R1,[R0, #+0]
    488            if ((g_counter<g_Message) && (MenuLevel<2)) { MESSAGE_Refresh();}
   \                     ??MenuRefresh_40:
   \   000002A2   0B48               LDR      R0,??MenuRefresh_0+0x8  ;; g_counter
   \   000002A4   03C8               LDM      R0!,{R0,R1}
   \   000002A6   094A               LDR      R2,??MenuRefresh_0+0x4  ;; g_Message
   \   000002A8   1268               LDR      R2,[R2, #+0]
   \   000002AA   D317               ASRS     R3,R2,#+31
   \   000002AC   9942               CMP      R1,R3
   \   000002AE   08D8               BHI      ??MenuRefresh_1
   \   000002B0   01D3               BCC      ??MenuRefresh_42
   \   000002B2   9042               CMP      R0,R2
   \   000002B4   05D2               BCS      ??MenuRefresh_1
   \                     ??MenuRefresh_42:
   \   000002B6   0948               LDR      R0,??MenuRefresh_0+0x14  ;; MenuLevel
   \   000002B8   0068               LDR      R0,[R0, #+0]
   \   000002BA   0228               CMP      R0,#+2
   \   000002BC   01DA               BGE      ??MenuRefresh_1
   \   000002BE   ........           BL       MESSAGE_Refresh
    489            
    490            } 
    491          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuRefresh_1:
   \   000002C2   01B0               ADD      SP,SP,#+4
   \   000002C4   01BC               POP      {R0}
   \   000002C6   0047               BX       R0               ;; return
   \                     ??MenuRefresh_0:
   \   000002C8   ........           DC32     g_info
   \   000002CC   ........           DC32     g_Message
   \   000002D0   ........           DC32     g_counter
   \   000002D4   ........           DC32     ??Message
   \   000002D8   ........           DC32     DispWait
   \   000002DC   ........           DC32     MenuLevel
   \   000002E0   F5030000           DC32     0x3f5
   \   000002E4   36270000           DC32     0x2736
   \   000002E8   26880100           DC32     0x18826
   \   000002EC   E9510F00           DC32     0xf51e9
   \   000002F0   B4C30000           DC32     0xc3b4
   \   000002F4   98BB0000           DC32     0xbb98
   \   000002F8   ........           DC32     CurrentSheet
   \   000002FC   ........           DC32     gProg
   \   00000300   ........           DC32     TextToChangeLength
   \   00000304   ........           DC32     TextToChange
   \   00000308   ........           DC32     NeuronIdToChange
   \   0000030C   ........           DC32     NeuronNrChange
   \   00000310   ........           DC32     NeuronIdAfterChange
   \   00000314   ........           DC32     CurentChartModyfi

   \                                 In section .bss, align 1
   \                     ??Message:
   \   00000000                      DS8 1
    492          
    493          
    494          
    495          
    496          extern char Animation_tab[11][8][15];
    497          

   \                                 In section .bss, align 1
    498          char InitPointer=0;
   \                     InitPointer:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    499          char CCKier=0;
   \                     CCKier:
   \   00000000                      DS8 1
    500          
    501          //*-----------------------------------------------------------------------------
    502          //* Nazwa funkcji :    MainSide_Paint
    503          //* Funkcja strony g³ównej menu
    504          //*-----------------------------------------------------------------------------
    505          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    506          //*-----------------------------------------------------------------------------

   \                                 In section .bss, align 1
    507          char AnimationNr=0;
   \                     AnimationNr:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    508          void StartAnimation_Paint(void)
    509          {
   \                     StartAnimation_Paint:
   \   00000000   01B5               PUSH     {R0,LR}
    510            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    511            
    512            CopyToCanvasPoint((char*)Logo_Ceuron, 0, 70, 64,16);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000006   82B0               SUB      SP,SP,#+8
   \   00000008   1020               MOVS     R0,#+16
   \   0000000A   0090               STR      R0,[SP, #+0]
   \   0000000C   4023               MOVS     R3,#+64
   \   0000000E   4622               MOVS     R2,#+70
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   5D48               LDR      R0,??StartAnimation_Paint_0  ;; Logo_Ceuron
   \   00000014   ........           BL       CopyToCanvasPoint
   \   00000018   02B0               ADD      SP,SP,#+8
    513          
    514          
    515            
    516            Label((char*)&identyfikacja,2,0,52,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000001A   82B0               SUB      SP,SP,#+8
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   0090               STR      R0,[SP, #+0]
   \   00000020   7821               MOVS     R1,#+120
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3F21               MOVS     R1,#+63
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   3423               MOVS     R3,#+52
   \   0000002E   0022               MOVS     R2,#+0
   \   00000030   0221               MOVS     R1,#+2
   \   00000032   5648               LDR      R0,??StartAnimation_Paint_0+0x4  ;; identyfikacja
   \   00000034   ........           BL       Label
   \   00000038   06B0               ADD      SP,SP,#+24
    517            Label("Firmware: ",0,5,5,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003A   82B0               SUB      SP,SP,#+8
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   0090               STR      R0,[SP, #+0]
   \   00000040   7821               MOVS     R1,#+120
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   3F21               MOVS     R1,#+63
   \   00000048   0F20               MOVS     R0,#+15
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0523               MOVS     R3,#+5
   \   0000004E   0522               MOVS     R2,#+5
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   4F48               LDR      R0,??StartAnimation_Paint_0+0x8  ;; `?<Constant "Firmware: ">`
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
    518            Label((char*)&system,0,48,5,4,14,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7821               MOVS     R1,#+120
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   0E21               MOVS     R1,#+14
   \   00000068   0420               MOVS     R0,#+4
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   0523               MOVS     R3,#+5
   \   0000006E   3022               MOVS     R2,#+48
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   4848               LDR      R0,??StartAnimation_Paint_0+0xC  ;; system
   \   00000074   ........           BL       Label
   \   00000078   06B0               ADD      SP,SP,#+24
    519           
    520            //wskanik postêpu
    521            H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   0000007A   0123               MOVS     R3,#+1
   \   0000007C   1822               MOVS     R2,#+24
   \   0000007E   3021               MOVS     R1,#+48
   \   00000080   4548               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   00000082   0078               LDRB     R0,[R0, #+0]
   \   00000084   401D               ADDS     R0,R0,#+5
   \   00000086   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   ........           BL       H_line
    522            H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   0000008E   0123               MOVS     R3,#+1
   \   00000090   1A22               MOVS     R2,#+26
   \   00000092   3121               MOVS     R1,#+49
   \   00000094   4048               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   001D               ADDS     R0,R0,#+4
   \   0000009A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009C   000E               LSRS     R0,R0,#+24
   \   0000009E   ........           BL       H_line
    523            H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   000000A2   0123               MOVS     R3,#+1
   \   000000A4   1822               MOVS     R2,#+24
   \   000000A6   3221               MOVS     R1,#+50
   \   000000A8   3B48               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000AA   0078               LDRB     R0,[R0, #+0]
   \   000000AC   401D               ADDS     R0,R0,#+5
   \   000000AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B0   000E               LSRS     R0,R0,#+24
   \   000000B2   ........           BL       H_line
    524            if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   000000B6   3848               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000B8   0078               LDRB     R0,[R0, #+0]
   \   000000BA   1E28               CMP      R0,#+30
   \   000000BC   09D2               BCS      ??StartAnimation_Paint_1
   \   000000BE   3748               LDR      R0,??StartAnimation_Paint_0+0x14  ;; CCKier
   \   000000C0   0078               LDRB     R0,[R0, #+0]
   \   000000C2   0028               CMP      R0,#+0
   \   000000C4   05D1               BNE      ??StartAnimation_Paint_1
   \   000000C6   3448               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000C8   3349               LDR      R1,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000CA   0978               LDRB     R1,[R1, #+0]
   \   000000CC   891C               ADDS     R1,R1,#+2
   \   000000CE   0170               STRB     R1,[R0, #+0]
   \   000000D0   02E0               B        ??StartAnimation_Paint_2
   \                     ??StartAnimation_Paint_1:
   \   000000D2   3248               LDR      R0,??StartAnimation_Paint_0+0x14  ;; CCKier
   \   000000D4   0121               MOVS     R1,#+1
   \   000000D6   0170               STRB     R1,[R0, #+0]
    525            if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??StartAnimation_Paint_2:
   \   000000D8   2F48               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000DA   0078               LDRB     R0,[R0, #+0]
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   09D3               BCC      ??StartAnimation_Paint_3
   \   000000E0   2E48               LDR      R0,??StartAnimation_Paint_0+0x14  ;; CCKier
   \   000000E2   0078               LDRB     R0,[R0, #+0]
   \   000000E4   0128               CMP      R0,#+1
   \   000000E6   05D1               BNE      ??StartAnimation_Paint_3
   \   000000E8   2B48               LDR      R0,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000EA   2B49               LDR      R1,??StartAnimation_Paint_0+0x10  ;; InitPointer
   \   000000EC   0978               LDRB     R1,[R1, #+0]
   \   000000EE   891E               SUBS     R1,R1,#+2
   \   000000F0   0170               STRB     R1,[R0, #+0]
   \   000000F2   02E0               B        ??StartAnimation_Paint_4
   \                     ??StartAnimation_Paint_3:
   \   000000F4   2948               LDR      R0,??StartAnimation_Paint_0+0x14  ;; CCKier
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   0170               STRB     R1,[R0, #+0]
    526            
    527          
    528            
    529            
    530            #ifdef _ADMINISTRATOR_ 
    531              Label("Administrator",2,0,115,15,63,0,128,1);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??StartAnimation_Paint_4:
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0120               MOVS     R0,#+1
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   8021               MOVS     R1,#+128
   \   00000102   0020               MOVS     R0,#+0
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   3F21               MOVS     R1,#+63
   \   00000108   0F20               MOVS     R0,#+15
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   7323               MOVS     R3,#+115
   \   0000010E   0022               MOVS     R2,#+0
   \   00000110   0221               MOVS     R1,#+2
   \   00000112   2348               LDR      R0,??StartAnimation_Paint_0+0x18  ;; `?<Constant "Administrator">`
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
    532            #endif   
    533            
    534            #ifdef _TESTER_ 
    535              Label("TESTER",2,0,115,15,63,0,128,1);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
    536            #endif    
    537              
    538             
    539              
    540              
    541             #ifdef _TESTER_ 
    542                      NeuronIdToChange=9999999;
    543                      NeuronNrChange=1;
    544            #endif   
    545            
    546            if ((AnimationNr==14) || (SlaveMode))
   \   0000011A   2248               LDR      R0,??StartAnimation_Paint_0+0x1C  ;; AnimationNr
   \   0000011C   0078               LDRB     R0,[R0, #+0]
   \   0000011E   0E28               CMP      R0,#+14
   \   00000120   03D0               BEQ      ??StartAnimation_Paint_5
   \   00000122   2148               LDR      R0,??StartAnimation_Paint_0+0x20  ;; SlaveMode
   \   00000124   0078               LDRB     R0,[R0, #+0]
   \   00000126   0028               CMP      R0,#+0
   \   00000128   26D0               BEQ      ??StartAnimation_Paint_6
    547            {
    548                korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \                     ??StartAnimation_Paint_5:
   \   0000012A   2048               LDR      R0,??StartAnimation_Paint_0+0x24  ;; korekta_X
   \   0000012C   2049               LDR      R1,??StartAnimation_Paint_0+0x28  ;; 0x13d828
   \   0000012E   0968               LDR      R1,[R1, #+0]
   \   00000130   0160               STR      R1,[R0, #+0]
    549                korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   00000132   2048               LDR      R0,??StartAnimation_Paint_0+0x2C  ;; korekta_X + 4
   \   00000134   2049               LDR      R1,??StartAnimation_Paint_0+0x30  ;; 0x13d82c
   \   00000136   0968               LDR      R1,[R1, #+0]
   \   00000138   0160               STR      R1,[R0, #+0]
    550                korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   0000013A   2048               LDR      R0,??StartAnimation_Paint_0+0x34  ;; korekta_Y
   \   0000013C   2049               LDR      R1,??StartAnimation_Paint_0+0x38  ;; 0x13d820
   \   0000013E   0968               LDR      R1,[R1, #+0]
   \   00000140   0160               STR      R1,[R0, #+0]
    551                korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000142   2048               LDR      R0,??StartAnimation_Paint_0+0x3C  ;; korekta_Y + 4
   \   00000144   2049               LDR      R1,??StartAnimation_Paint_0+0x40  ;; 0x13d824
   \   00000146   0968               LDR      R1,[R1, #+0]
   \   00000148   0160               STR      R1,[R0, #+0]
    552                
    553                //je¿eli brak korekt to ustaw korekty
    554                if ((korekta_X.A==0)||(korekta_Y.A==0))
   \   0000014A   1848               LDR      R0,??StartAnimation_Paint_0+0x24  ;; korekta_X
   \   0000014C   0068               LDR      R0,[R0, #+0]
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   ........           BL       __aeabi_cfcmpeq
   \   00000154   05D0               BEQ      ??StartAnimation_Paint_7
   \   00000156   1948               LDR      R0,??StartAnimation_Paint_0+0x34  ;; korekta_Y
   \   00000158   0068               LDR      R0,[R0, #+0]
   \   0000015A   0021               MOVS     R1,#+0
   \   0000015C   ........           BL       __aeabi_cfcmpeq
   \   00000160   02D1               BNE      ??StartAnimation_Paint_8
    555                {
    556                  MenuLevel=4;
   \                     ??StartAnimation_Paint_7:
   \   00000162   1A48               LDR      R0,??StartAnimation_Paint_0+0x44  ;; MenuLevel
   \   00000164   0421               MOVS     R1,#+4
   \   00000166   0160               STR      R1,[R0, #+0]
    557                  
    558           
    559              
    560                }else{
    561                 // MenuLevel=1;
    562                }
    563                AnimationNr++;
   \                     ??StartAnimation_Paint_8:
   \   00000168   0E48               LDR      R0,??StartAnimation_Paint_0+0x1C  ;; AnimationNr
   \   0000016A   0E49               LDR      R1,??StartAnimation_Paint_0+0x1C  ;; AnimationNr
   \   0000016C   0978               LDRB     R1,[R1, #+0]
   \   0000016E   491C               ADDS     R1,R1,#+1
   \   00000170   0170               STRB     R1,[R0, #+0]
    564                MenuPaint();
   \   00000172   ........           BL       MenuPaint
   \   00000176   04E0               B        ??StartAnimation_Paint_9
    565            }else{
    566               AnimationNr++; 
   \                     ??StartAnimation_Paint_6:
   \   00000178   0A48               LDR      R0,??StartAnimation_Paint_0+0x1C  ;; AnimationNr
   \   0000017A   0A49               LDR      R1,??StartAnimation_Paint_0+0x1C  ;; AnimationNr
   \   0000017C   0978               LDRB     R1,[R1, #+0]
   \   0000017E   491C               ADDS     R1,R1,#+1
   \   00000180   0170               STRB     R1,[R0, #+0]
    567            }
    568              
    569          
    570          
    571          }
   \                     ??StartAnimation_Paint_9:
   \   00000182   01B0               ADD      SP,SP,#+4
   \   00000184   01BC               POP      {R0}
   \   00000186   0047               BX       R0               ;; return
   \                     ??StartAnimation_Paint_0:
   \   00000188   ........           DC32     Logo_Ceuron
   \   0000018C   ........           DC32     identyfikacja
   \   00000190   ........           DC32     `?<Constant "Firmware: ">`
   \   00000194   ........           DC32     system
   \   00000198   ........           DC32     InitPointer
   \   0000019C   ........           DC32     CCKier
   \   000001A0   ........           DC32     `?<Constant "Administrator">`
   \   000001A4   ........           DC32     AnimationNr
   \   000001A8   ........           DC32     SlaveMode
   \   000001AC   ........           DC32     korekta_X
   \   000001B0   28D81300           DC32     0x13d828
   \   000001B4   ........           DC32     korekta_X + 4
   \   000001B8   2CD81300           DC32     0x13d82c
   \   000001BC   ........           DC32     korekta_Y
   \   000001C0   20D81300           DC32     0x13d820
   \   000001C4   ........           DC32     korekta_Y + 4
   \   000001C8   24D81300           DC32     0x13d824
   \   000001CC   ........           DC32     MenuLevel
    572          
    573          
    574          //*-----------------------------------------------------------------------------
    575          //* Nazwa funkcji :    StartAnimation_Event
    576          //* Funkcja strony g³ównej menu
    577          //*-----------------------------------------------------------------------------
    578          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    579          //*-----------------------------------------------------------------------------

   \                                 In section .bss, align 1
    580          char StartAdvance=0;
   \                     StartAdvance:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    581          void StartAnimation_Event(void)
    582          {
   \                     StartAnimation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
    583          
    584              if ((X_up>0) && (Y_up>0))
   \   00000002   0A48               LDR      R0,??StartAnimation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   0CDB               BLT      ??StartAnimation_Event_1
   \   0000000C   0848               LDR      R0,??StartAnimation_Event_0+0x4  ;; Y_up
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   0128               CMP      R0,#+1
   \   00000014   07DB               BLT      ??StartAnimation_Event_1
    585              {
    586                MenuLevel=4;
   \   00000016   0748               LDR      R0,??StartAnimation_Event_0+0x8  ;; MenuLevel
   \   00000018   0421               MOVS     R1,#+4
   \   0000001A   0160               STR      R1,[R0, #+0]
    587                StartAdvance=1;
   \   0000001C   0648               LDR      R0,??StartAnimation_Event_0+0xC  ;; StartAdvance
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   0170               STRB     R1,[R0, #+0]
    588                MenuPaint();
   \   00000022   ........           BL       MenuPaint
    589              }
    590              
    591              
    592               
    593          }//_______________________ Koniec funkcji StartAnimation_Event __________________________
   \                     ??StartAnimation_Event_1:
   \   00000026   01B0               ADD      SP,SP,#+4
   \   00000028   01BC               POP      {R0}
   \   0000002A   0047               BX       R0               ;; return
   \                     ??StartAnimation_Event_0:
   \   0000002C   ........           DC32     X_up
   \   00000030   ........           DC32     Y_up
   \   00000034   ........           DC32     MenuLevel
   \   00000038   ........           DC32     StartAdvance
    594          
    595          
    596          
    597          
    598          
    599          //*-----------------------------------------------------------------------------
    600          //* Nazwa funkcji :    MainSide_Paint
    601          //* Funkcja strony g³ównej menu
    602          //*-----------------------------------------------------------------------------
    603          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    604          //*-----------------------------------------------------------------------------
    605          

   \                                 In section Debug.txt, align 4, keep-with-next
    606          void CheckChannel(void)
    607          {
   \                     CheckChannel:
   \   00000000   01B5               PUSH     {R0,LR}
    608          
    609            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    610          
    611               Label("Checking Wi-Fi",0,1,60,14,6,0,120,0);
   \   00000006   82B0               SUB      SP,SP,#+8
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   0090               STR      R0,[SP, #+0]
   \   0000000C   7821               MOVS     R1,#+120
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0621               MOVS     R1,#+6
   \   00000014   0E20               MOVS     R0,#+14
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   3C23               MOVS     R3,#+60
   \   0000001A   0122               MOVS     R2,#+1
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   2348               LDR      R0,??CheckChannel_0  ;; `?<Constant "Checking Wi-Fi">`
   \   00000020   ........           BL       Label
   \   00000024   06B0               ADD      SP,SP,#+24
    612          
    613                H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000026   0123               MOVS     R3,#+1
   \   00000028   1822               MOVS     R2,#+24
   \   0000002A   3021               MOVS     R1,#+48
   \   0000002C   2048               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   0000002E   0078               LDRB     R0,[R0, #+0]
   \   00000030   401D               ADDS     R0,R0,#+5
   \   00000032   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   ........           BL       H_line
    614                H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   0000003A   0123               MOVS     R3,#+1
   \   0000003C   1A22               MOVS     R2,#+26
   \   0000003E   3121               MOVS     R1,#+49
   \   00000040   1B48               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   00000042   0078               LDRB     R0,[R0, #+0]
   \   00000044   001D               ADDS     R0,R0,#+4
   \   00000046   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   ........           BL       H_line
    615                H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000004E   0123               MOVS     R3,#+1
   \   00000050   1822               MOVS     R2,#+24
   \   00000052   3221               MOVS     R1,#+50
   \   00000054   1648               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   00000056   0078               LDRB     R0,[R0, #+0]
   \   00000058   401D               ADDS     R0,R0,#+5
   \   0000005A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   ........           BL       H_line
    616                if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   00000062   1348               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   00000064   0078               LDRB     R0,[R0, #+0]
   \   00000066   1E28               CMP      R0,#+30
   \   00000068   09D2               BCS      ??CheckChannel_1
   \   0000006A   1248               LDR      R0,??CheckChannel_0+0x8  ;; CCKier
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   05D1               BNE      ??CheckChannel_1
   \   00000072   0F48               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   00000074   0E49               LDR      R1,??CheckChannel_0+0x4  ;; InitPointer
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   891C               ADDS     R1,R1,#+2
   \   0000007A   0170               STRB     R1,[R0, #+0]
   \   0000007C   02E0               B        ??CheckChannel_2
   \                     ??CheckChannel_1:
   \   0000007E   0D48               LDR      R0,??CheckChannel_0+0x8  ;; CCKier
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   0170               STRB     R1,[R0, #+0]
    617                if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??CheckChannel_2:
   \   00000084   0A48               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   00000086   0078               LDRB     R0,[R0, #+0]
   \   00000088   0128               CMP      R0,#+1
   \   0000008A   09D3               BCC      ??CheckChannel_3
   \   0000008C   0948               LDR      R0,??CheckChannel_0+0x8  ;; CCKier
   \   0000008E   0078               LDRB     R0,[R0, #+0]
   \   00000090   0128               CMP      R0,#+1
   \   00000092   05D1               BNE      ??CheckChannel_3
   \   00000094   0648               LDR      R0,??CheckChannel_0+0x4  ;; InitPointer
   \   00000096   0649               LDR      R1,??CheckChannel_0+0x4  ;; InitPointer
   \   00000098   0978               LDRB     R1,[R1, #+0]
   \   0000009A   891E               SUBS     R1,R1,#+2
   \   0000009C   0170               STRB     R1,[R0, #+0]
   \   0000009E   02E0               B        ??CheckChannel_4
   \                     ??CheckChannel_3:
   \   000000A0   0448               LDR      R0,??CheckChannel_0+0x8  ;; CCKier
   \   000000A2   0021               MOVS     R1,#+0
   \   000000A4   0170               STRB     R1,[R0, #+0]
    618                
    619          }
   \                     ??CheckChannel_4:
   \   000000A6   01B0               ADD      SP,SP,#+4
   \   000000A8   01BC               POP      {R0}
   \   000000AA   0047               BX       R0               ;; return
   \                     ??CheckChannel_0:
   \   000000AC   ........           DC32     `?<Constant "Checking Wi-Fi">`
   \   000000B0   ........           DC32     InitPointer
   \   000000B4   ........           DC32     CCKier
    620          
    621          
    622          
    623          
    624          

   \                                 In section .data, align 4
    625          char ekran_komunikacja[8][128] = {
   \                     ekran_komunikacja:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 34, 2, 2, 2, 34, 28, 0, 0, 0, 0
   \              000000001C22
   \              020202221C00
   \              000000      
   \   00000015   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000002C   0000F808E8E8       DC8 0, 0, 248, 8, 232, 232, 232, 104, 104, 104, 104, 104, 104, 104, 104
   \              E86868686868
   \              686868      
   \   0000003B   68686868E8E8       DC8 104, 104, 104, 104, 232, 232, 232, 8, 248, 0, 0, 0, 0, 0, 0, 0, 0
   \              E808F8000000
   \              0000000000  
   \   0000004C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000063   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 224, 248, 24, 6, 6, 6, 3, 3, 3, 3, 6, 6, 12
   \              0000E0F81806
   \              060603030303
   \              06060C      
   \   00000078   3CF0C0000000       DC8 60, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 33
   \              000000000000
   \              000000000000
   \              1E21        
   \   0000008C   212121211E00       DC8 33, 33, 33, 33, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000000A1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 255, 255, 255, 192
   \              000000000000
   \              00FF00FFFFFF
   \              C0          
   \   000000B4   C0C0C0C0C0C0       DC8 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              C0C0C0C0C0FF
   \              FF          
   \   000000C1   FF00FF000000       DC8 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000000D6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              000000000000
   \              000000000000
   \              000000C0    
   \   000000EC   E03018000000       DC8 224, 48, 24, 0, 0, 0, 255, 255, 0, 0, 24, 24, 96, 224, 128, 0, 0, 0
   \              FFFF00001818
   \              60E080000000
   \   000000FE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 153, 153, 149, 147, 147
   \              000000000000
   \              919999959393
   \   00000110   910000000000       DC8 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000126   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 10, 18, 34, 66, 66, 130, 130, 2
   \              000003020202
   \              0A1222424282
   \              8202        
   \   0000013A   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020202030000
   \              000000000000
   \              0000000000  
   \   00000151   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000168   000000C3E170       DC8 0, 0, 0, 195, 225, 112, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
   \              303030303030
   \              3030303030  
   \   00000179   330300000000       DC8 51, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 76, 76
   \              000000000000
   \              0000000000C8
   \              4C4C        
   \   0000018D   CA4949C80000       DC8 202, 73, 73, 200, 0, 0, 0, 4, 4, 4, 60, 68, 68, 60, 0, 0, 0, 0, 0
   \              000404043C44
   \              443C00000000
   \              00          
   \   000001A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128
   \              000000000000
   \              000000000000
   \              000080      
   \   000001B5   800000000101       DC8 128, 0, 0, 0, 1, 1, 1, 130, 194, 164, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0182C2A41800
   \              000000000000
   \              0000        
   \   000001C9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 14, 28, 24, 24, 24, 24, 24, 24
   \              000000000007
   \              0E1C18181818
   \              1818        
   \   000001F4   181818181898       DC8 24, 24, 24, 24, 24, 152, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              800000000000
   \              000000000000
   \              0000        
   \   00000208   0000C7202027       DC8 0, 0, 199, 32, 32, 39, 32, 32, 199, 0, 0, 0, 28, 34, 2, 2, 2, 34
   \              2020C7000000
   \              1C2202020222
   \   0000021A   1C0000000000       DC8 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000230   000000FFFFFF       DC8 0, 0, 0, 255, 255, 255, 1, 2, 84, 168, 80, 33, 206, 14, 206, 67, 64
   \              010254A85021
   \              CE0ECE4340  
   \   00000241   404040404040       DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 192, 0
   \              404040404040
   \              404040C000  
   \   00000252   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000269   000060303018       DC8 0, 0, 96, 48, 48, 24, 24, 12, 12, 28, 28, 96, 96, 96, 96, 48, 63
   \              180C0C1C1C60
   \              606060303F  
   \   0000027A   0F0000000000       DC8 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 66, 64, 64, 64
   \              000000000000
   \              000000004142
   \              404040      
   \   0000028F   42F100000000       DC8 66, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002A5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 62, 124
   \              000000000000
   \              0000FFFFFF3E
   \              7C          
   \   000002B8   55AA5500FF7E       DC8 85, 170, 85, 0, 255, 126, 255, 0, 255, 255, 255, 255, 255, 255, 255
   \              FF00FFFFFFFF
   \              FFFFFF      
   \   000002C7   FFFFFFFFFFFF       DC8 255, 255, 255, 255, 255, 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0
   \              FFFF00FF0000
   \              0000000000  
   \   000002D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 220
   \              000000000000
   \              000000000000
   \              00F8DC      
   \   000002ED   8E0606060606       DC8 142, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 140, 252, 112, 0, 0, 0, 0, 0, 0
   \              06060606068C
   \              FC7000000000
   \              0000        
   \   00000301   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 8, 8, 248, 8, 8, 249, 0, 0, 0, 0, 0
   \              000000F80808
   \              F80808F90000
   \              000000      
   \   00000316   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000032D   000000000000       DC8 0, 0, 0, 0, 0, 0, 63, 127, 255, 192, 128, 81, 162, 85, 0, 255, 248
   \              3F7FFFC08051
   \              A25500FFF8  
   \   0000033E   FF00FFFFFFFF       DC8 255, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              FFFFFFFFFFFF
   \              FFFF        
   \   0000034C   FFFFFF00FF00       DC8 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000360   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 51, 51, 51, 51, 51, 51, 51
   \              000000000030
   \              313333333333
   \              3333        
   \   00000374   333333333161       DC8 51, 51, 51, 51, 49, 97, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              C00000000000
   \              000000000000
   \              0000        
   \   00000388   00001C244444       DC8 0, 0, 28, 36, 68, 68, 68, 36, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              44241C000000
   \              000000000000
   \              0000        
   \   0000039C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003B3   000000010307       DC8 0, 0, 0, 1, 3, 7, 14, 29, 24, 31, 1, 31, 16, 23, 23, 23, 23, 23, 23
   \              0E1D181F011F
   \              101717171717
   \              17          
   \   000003C6   171717171717       DC8 23, 23, 23, 23, 23, 23, 23, 23, 23, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0
   \              171717101F00
   \              000000000000
   \              00          
   \   000003D9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 108, 198
   \              000000000000
   \              000000000000
   \              386CC6      
   \   000003EE   C6C6C6C6C6C6       DC8 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 195, 1, 0, 0
   \              C6C6C6C6C6C3
   \              010000      
   \   000003FD   000000             DC8 0, 0, 0
    626                            {0,0,0,0,0,0,0,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,8,232,232,232,104,104,104,104,104,104,104,104,104,104,104,104,232,232,232,8,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,248,24,6,6,6,3,3,3,3,6,6,12,60,240,192,0,0,0,0,0},
    627                            {0,0,0,0,0,0,0,0,0,0,30,33,33,33,33,33,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,255,192,192,192,192,192,192,192,192,192,192,192,192,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,48,24,0,0,0,255,255,0,0,24,24,96,224,128,0,0,0,0,0},
    628                            {0,0,0,0,0,0,0,0,0,0,145,153,153,149,147,147,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,10,18,34,66,66,130,130,2,2,2,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,225,112,48,48,48,48,48,48,48,48,48,48,48,51,3,0,0,0,0,0},
    629                            {0,0,0,0,0,0,0,0,0,0,200,76,76,202,73,73,200,0,0,0,4,4,4,60,68,68,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,0,1,1,1,130,194,164,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,14,28,24,24,24,24,24,24,24,24,24,24,24,152,128,0,0,0,0,0},
    630                            {0,0,0,0,0,0,0,0,0,0,199,32,32,39,32,32,199,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,1,2,84,168,80,33,206,14,206,67,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,48,48,24,24,12,12,28,28,96,96,96,96,48,63,15,0,0,0,0,0},
    631                            {0,0,0,0,0,0,0,0,0,0,65,66,64,64,64,66,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,62,124,85,170,85,0,255,126,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,220,142,6,6,6,6,6,6,6,6,6,6,140,252,112,0,0,0,0,0},
    632                            {0,0,0,0,0,0,0,0,0,0,248,8,8,248,8,8,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,127,255,192,128,81,162,85,0,255,248,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,51,51,51,51,51,51,51,51,51,51,51,49,97,192,0,0,0,0,0},
    633                            {0,0,0,0,0,0,0,0,0,0,28,36,68,68,68,36,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,14,29,24,31,1,31,16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,16,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,108,198,198,198,198,198,198,198,198,198,198,198,198,195,1,0,0,0,0,0},
    634                            };
    635          
    636          
    637          
    638          
    639          //*-----------------------------------------------------------------------------
    640          //* Nazwa funkcji :    MainSide_Paint
    641          //* Funkcja strony g³ównej menu
    642          //*-----------------------------------------------------------------------------
    643          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    644          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    645          void MainSide_Paint(_Screen* ScreenLokal)
    646          {
   \                     MainSide_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
    647            //Komunikacja z komputerem
    648            if (g_PC_Connected==1)
   \   00000004   D148               LDR      R0,??MainSide_Paint_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   03D1               BNE      ??MainSide_Paint_1
    649            {
    650              CopyToCanvas(ekran_komunikacja);
   \   0000000C   D048               LDR      R0,??MainSide_Paint_0+0x4  ;; ekran_komunikacja
   \   0000000E   ........           BL       CopyToCanvas
   \   00000012   B4E2               B        ??MainSide_Paint_2
    651            }
    652            else
    653            {
    654            
    655                  char PaternDesign=ScreenLokal->PaternDesign;
   \                     ??MainSide_Paint_1:
   \   00000014   0498               LDR      R0,[SP, #+16]
   \   00000016   0478               LDRB     R4,[R0, #+0]
    656                  
    657                  CleanCanvas();
   \   00000018   ........           BL       CleanCanvas
    658                   char txt[10];
    659                 
    660              
    661                //CleanCanvas(); 
    662                
    663                
    664                SheetHistory[0]=0;
   \   0000001C   CD48               LDR      R0,??MainSide_Paint_0+0x8  ;; SheetHistory
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   0170               STRB     R1,[R0, #+0]
    665                
    666                if ((SheetHistory[SheetHistoryIndex]!=CurrentSheet) && (CurrentSheet<sizeof(SheetHistory)-1))
   \   00000022   CD48               LDR      R0,??MainSide_Paint_0+0xC  ;; SheetHistoryIndex
   \   00000024   0078               LDRB     R0,[R0, #+0]
   \   00000026   CB49               LDR      R1,??MainSide_Paint_0+0x8  ;; SheetHistory
   \   00000028   085C               LDRB     R0,[R1, R0]
   \   0000002A   CC49               LDR      R1,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   0000002C   0978               LDRB     R1,[R1, #+0]
   \   0000002E   8842               CMP      R0,R1
   \   00000030   0ED0               BEQ      ??MainSide_Paint_3
   \   00000032   CA48               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   1328               CMP      R0,#+19
   \   00000038   0AD2               BCS      ??MainSide_Paint_3
    667                {
    668                    SheetHistory[++SheetHistoryIndex]=CurrentSheet;
   \   0000003A   C748               LDR      R0,??MainSide_Paint_0+0xC  ;; SheetHistoryIndex
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   401C               ADDS     R0,R0,#+1
   \   00000040   C549               LDR      R1,??MainSide_Paint_0+0xC  ;; SheetHistoryIndex
   \   00000042   0870               STRB     R0,[R1, #+0]
   \   00000044   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   C249               LDR      R1,??MainSide_Paint_0+0x8  ;; SheetHistory
   \   0000004A   C44A               LDR      R2,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   0000004C   1278               LDRB     R2,[R2, #+0]
   \   0000004E   0A54               STRB     R2,[R1, R0]
    669                }
    670                  
    671                
    672                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_3:
   \   00000050   C248               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   07D1               BNE      ??MainSide_Paint_4
   \   00000058   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000005A   240E               LSRS     R4,R4,#+24
   \   0000005C   082C               CMP      R4,#+8
   \   0000005E   03D1               BNE      ??MainSide_Paint_4
   \   00000060   0498               LDR      R0,[SP, #+16]
   \   00000062   ........           BL       Termostat_Paint
   \   00000066   8AE2               B        ??MainSide_Paint_2
    673                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_4:
   \   00000068   BC48               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   0000006A   0078               LDRB     R0,[R0, #+0]
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   07D3               BCC      ??MainSide_Paint_5
   \   00000070   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000072   240E               LSRS     R4,R4,#+24
   \   00000074   052C               CMP      R4,#+5
   \   00000076   03D1               BNE      ??MainSide_Paint_5
   \   00000078   0498               LDR      R0,[SP, #+16]
   \   0000007A   ........           BL       Termostat_Paint
   \   0000007E   7EE2               B        ??MainSide_Paint_2
    674                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_5:
   \   00000080   B648               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   00000082   0078               LDRB     R0,[R0, #+0]
   \   00000084   0028               CMP      R0,#+0
   \   00000086   08D1               BNE      ??MainSide_Paint_6
   \   00000088   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000008A   240E               LSRS     R4,R4,#+24
   \   0000008C   092C               CMP      R4,#+9
   \   0000008E   04D1               BNE      ??MainSide_Paint_6
   \   00000090   B248               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   00000092   0078               LDRB     R0,[R0, #+0]
   \   00000094   ........           BL       Timetable_Paint
   \   00000098   71E2               B        ??MainSide_Paint_2
    675                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Paint(CurrentSheet);}  
   \                     ??MainSide_Paint_6:
   \   0000009A   B048               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   0000009C   0078               LDRB     R0,[R0, #+0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   08D3               BCC      ??MainSide_Paint_7
   \   000000A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   062C               CMP      R4,#+6
   \   000000A8   04D1               BNE      ??MainSide_Paint_7
   \   000000AA   AC48               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   000000AC   0078               LDRB     R0,[R0, #+0]
   \   000000AE   ........           BL       Timetable_Paint
   \   000000B2   64E2               B        ??MainSide_Paint_2
    676                #ifdef __ALARM      
    677                      else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_7:
   \   000000B4   A948               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   000000B6   0078               LDRB     R0,[R0, #+0]
   \   000000B8   0028               CMP      R0,#+0
   \   000000BA   08D1               BNE      ??MainSide_Paint_8
   \   000000BC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000BE   240E               LSRS     R4,R4,#+24
   \   000000C0   0A2C               CMP      R4,#+10
   \   000000C2   04D1               BNE      ??MainSide_Paint_8
   \   000000C4   A548               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   000000C6   0078               LDRB     R0,[R0, #+0]
   \   000000C8   ........           BL       Alarm_Paint
   \   000000CC   57E2               B        ??MainSide_Paint_2
    678                      else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Paint(CurrentSheet);} 
   \                     ??MainSide_Paint_8:
   \   000000CE   A348               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   000000D0   0078               LDRB     R0,[R0, #+0]
   \   000000D2   0128               CMP      R0,#+1
   \   000000D4   08D3               BCC      ??MainSide_Paint_9
   \   000000D6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D8   240E               LSRS     R4,R4,#+24
   \   000000DA   072C               CMP      R4,#+7
   \   000000DC   04D1               BNE      ??MainSide_Paint_9
   \   000000DE   9F48               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   000000E0   0078               LDRB     R0,[R0, #+0]
   \   000000E2   ........           BL       Alarm_Paint
   \   000000E6   4AE2               B        ??MainSide_Paint_2
    679                #endif
    680                else  
    681                { 
    682                      
    683                      const _ScreenPaternDesign *ScreenPaternDesign;
    684                      if (CurrentSheet==0) 
   \                     ??MainSide_Paint_9:
   \   000000E8   9C48               LDR      R0,??MainSide_Paint_0+0x10  ;; CurrentSheet
   \   000000EA   0078               LDRB     R0,[R0, #+0]
   \   000000EC   0028               CMP      R0,#+0
   \   000000EE   01D1               BNE      ??MainSide_Paint_10
    685                      {
    686                        ScreenPaternDesign=ScreenSetTab_0;
   \   000000F0   9B4D               LDR      R5,??MainSide_Paint_0+0x14  ;; ScreenSetTab_0
   \   000000F2   17E0               B        ??MainSide_Paint_11
    687                      }else{
    688                        ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Paint_10:
   \   000000F4   9B4D               LDR      R5,??MainSide_Paint_0+0x18  ;; ScreenSetTab_1
    689                        List_Paint(ScreenLokal->Label,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   0020               MOVS     R0,#+0
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   0021               MOVS     R1,#+0
   \   000000FE   0020               MOVS     R0,#+0
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   03B4               PUSH     {R0,R1}
   \   00000108   0021               MOVS     R1,#+0
   \   0000010A   97A0               ADR      R0,??MainSide_Paint_0+0x1C  ;; 0x20, 0x00, 0x00, 0x00
   \   0000010C   03B4               PUSH     {R0,R1}
   \   0000010E   0321               MOVS     R1,#+3
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   03B4               PUSH     {R0,R1}
   \   00000114   0023               MOVS     R3,#+0
   \   00000116   6C22               MOVS     R2,#+108
   \   00000118   0121               MOVS     R1,#+1
   \   0000011A   0E98               LDR      R0,[SP, #+56]
   \   0000011C   401C               ADDS     R0,R0,#+1
   \   0000011E   ........           BL       List_Paint
   \   00000122   0AB0               ADD      SP,SP,#+40
    690                    
    691                      }  
    692                      
    693                      
    694                      
    695                      //grafika  i text
    696                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Paint_11:
   \   00000124   0026               MOVS     R6,#+0
   \   00000126   4AE0               B        ??MainSide_Paint_12
    697                      {
    698                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??MainSide_Paint_13:
   \   00000128   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012A   360E               LSRS     R6,R6,#+24
   \   0000012C   0420               MOVS     R0,#+4
   \   0000012E   7043               MULS     R0,R6,R0
   \   00000130   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000132   240E               LSRS     R4,R4,#+24
   \   00000134   5821               MOVS     R1,#+88
   \   00000136   6143               MULS     R1,R4,R1
   \   00000138   6918               ADDS     R1,R5,R1
   \   0000013A   0818               ADDS     R0,R1,R0
   \   0000013C   2630               ADDS     R0,R0,#+38
   \   0000013E   0078               LDRB     R0,[R0, #+0]
   \   00000140   0128               CMP      R0,#+1
   \   00000142   3BD3               BCC      ??MainSide_Paint_14
    699                        {
    700                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
    701                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
    702                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
    703                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
    704                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
    705                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000148   360E               LSRS     R6,R6,#+24
   \   0000014A   0720               MOVS     R0,#+7
   \   0000014C   7043               MULS     R0,R6,R0
   \   0000014E   0699               LDR      R1,[SP, #+24]
   \   00000150   0818               ADDS     R0,R1,R0
   \   00000152   5330               ADDS     R0,R0,#+83
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000158   360E               LSRS     R6,R6,#+24
   \   0000015A   0420               MOVS     R0,#+4
   \   0000015C   7043               MULS     R0,R6,R0
   \   0000015E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000160   240E               LSRS     R4,R4,#+24
   \   00000162   5821               MOVS     R1,#+88
   \   00000164   6143               MULS     R1,R4,R1
   \   00000166   6918               ADDS     R1,R5,R1
   \   00000168   0818               ADDS     R0,R1,R0
   \   0000016A   2730               ADDS     R0,R0,#+39
   \   0000016C   0378               LDRB     R3,[R0, #+0]
   \   0000016E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000170   360E               LSRS     R6,R6,#+24
   \   00000172   0420               MOVS     R0,#+4
   \   00000174   7043               MULS     R0,R6,R0
   \   00000176   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000178   240E               LSRS     R4,R4,#+24
   \   0000017A   5821               MOVS     R1,#+88
   \   0000017C   6143               MULS     R1,R4,R1
   \   0000017E   6918               ADDS     R1,R5,R1
   \   00000180   0818               ADDS     R0,R1,R0
   \   00000182   2630               ADDS     R0,R0,#+38
   \   00000184   0278               LDRB     R2,[R0, #+0]
   \   00000186   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000188   360E               LSRS     R6,R6,#+24
   \   0000018A   0420               MOVS     R0,#+4
   \   0000018C   7043               MULS     R0,R6,R0
   \   0000018E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000190   240E               LSRS     R4,R4,#+24
   \   00000192   5821               MOVS     R1,#+88
   \   00000194   6143               MULS     R1,R4,R1
   \   00000196   6918               ADDS     R1,R5,R1
   \   00000198   0818               ADDS     R0,R1,R0
   \   0000019A   2530               ADDS     R0,R0,#+37
   \   0000019C   0178               LDRB     R1,[R0, #+0]
   \   0000019E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001A0   360E               LSRS     R6,R6,#+24
   \   000001A2   0420               MOVS     R0,#+4
   \   000001A4   7043               MULS     R0,R6,R0
   \   000001A6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001A8   240E               LSRS     R4,R4,#+24
   \   000001AA   5827               MOVS     R7,#+88
   \   000001AC   6743               MULS     R7,R4,R7
   \   000001AE   EF19               ADDS     R7,R5,R7
   \   000001B0   3818               ADDS     R0,R7,R0
   \   000001B2   2430               ADDS     R0,R0,#+36
   \   000001B4   0078               LDRB     R0,[R0, #+0]
   \   000001B6   ........           BL       ScreenGraph
   \   000001BA   02B0               ADD      SP,SP,#+8
    706                        
    707                        }
    708                       }
   \                     ??MainSide_Paint_14:
   \   000001BC   761C               ADDS     R6,R6,#+1
   \                     ??MainSide_Paint_12:
   \   000001BE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001C0   360E               LSRS     R6,R6,#+24
   \   000001C2   042E               CMP      R6,#+4
   \   000001C4   B0D3               BCC      ??MainSide_Paint_13
    709                      
    710                      
    711          
    712                    
    713          
    714                      
    715                      
    716                        //Analogi
    717                      char IlLiter=0;
   \   000001C6   0026               MOVS     R6,#+0
    718                      signed short Value;
    719                      for (char i=0; i<ScrenAnalogNr; i++)
   \   000001C8   0027               MOVS     R7,#+0
   \   000001CA   61E0               B        ??MainSide_Paint_15
    720                      {
    721                        if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
    722                        {         
    723                               if ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0)))
    724                               {
    725                               IlLiter=0;
    726                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
    727          
    728                               if (Value&0x8000) //je¿eli sygna³ niewiarygodny
    729                               {
    730                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
    731                               }else{ //je¿eli sygna³ wiarygodny
    732                                   if (ScreenLokal->Analog[i].Flip)
    733                                   {
    734                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
    735                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
    736                                   }else{
    737                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Paint_16:
   \   000001CC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001CE   090E               LSRS     R1,R1,#+24
   \   000001D0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001D2   3F0E               LSRS     R7,R7,#+24
   \   000001D4   0722               MOVS     R2,#+7
   \   000001D6   7A43               MULS     R2,R7,R2
   \   000001D8   049B               LDR      R3,[SP, #+16]
   \   000001DA   9A18               ADDS     R2,R3,R2
   \   000001DC   5218               ADDS     R2,R2,R1
   \   000001DE   7032               ADDS     R2,R2,#+112
   \   000001E0   1278               LDRB     R2,[R2, #+0]
   \   000001E2   012A               CMP      R2,#+1
   \   000001E4   11D3               BCC      ??MainSide_Paint_17
   \   000001E6   761C               ADDS     R6,R6,#+1
   \   000001E8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001EA   090E               LSRS     R1,R1,#+24
   \   000001EC   6B46               MOV      R3,SP
   \   000001EE   9C46               MOV      R12,R3
   \   000001F0   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001F2   090E               LSRS     R1,R1,#+24
   \   000001F4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001F6   3F0E               LSRS     R7,R7,#+24
   \   000001F8   0723               MOVS     R3,#+7
   \   000001FA   7B43               MULS     R3,R7,R3
   \   000001FC   049A               LDR      R2,[SP, #+16]
   \   000001FE   D218               ADDS     R2,R2,R3
   \   00000200   5218               ADDS     R2,R2,R1
   \   00000202   7032               ADDS     R2,R2,#+112
   \   00000204   1278               LDRB     R2,[R2, #+0]
   \   00000206   6346               MOV      R3,R12
   \   00000208   5A54               STRB     R2,[R3, R1]
   \                     ??MainSide_Paint_17:
   \   0000020A   491C               ADDS     R1,R1,#+1
   \                     ??MainSide_Paint_18:
   \   0000020C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000020E   090E               LSRS     R1,R1,#+24
   \   00000210   0329               CMP      R1,#+3
   \   00000212   DBD3               BCC      ??MainSide_Paint_16
    738                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000214   3100               MOVS     R1,R6
   \   00000216   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000218   090E               LSRS     R1,R1,#+24
   \   0000021A   6A46               MOV      R2,SP
   \   0000021C   5118               ADDS     R1,R2,R1
   \   0000021E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000220   0014               ASRS     R0,R0,#+16
   \   00000222   ........           BL       sIntToStr
   \   00000226   3618               ADDS     R6,R6,R0
    739                                   }
    740                               }  
    741                                   Label(txt,0,
    742                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
    743                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
    744                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
    745                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Paint_19:
   \   00000228   82B0               SUB      SP,SP,#+8
   \   0000022A   0020               MOVS     R0,#+0
   \   0000022C   0090               STR      R0,[SP, #+0]
   \   0000022E   7821               MOVS     R1,#+120
   \   00000230   0020               MOVS     R0,#+0
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000236   3F0E               LSRS     R7,R7,#+24
   \   00000238   0420               MOVS     R0,#+4
   \   0000023A   7843               MULS     R0,R7,R0
   \   0000023C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000023E   240E               LSRS     R4,R4,#+24
   \   00000240   5821               MOVS     R1,#+88
   \   00000242   6143               MULS     R1,R4,R1
   \   00000244   6918               ADDS     R1,R5,R1
   \   00000246   0818               ADDS     R0,R1,R0
   \   00000248   3630               ADDS     R0,R0,#+54
   \   0000024A   0178               LDRB     R1,[R0, #+0]
   \   0000024C   3000               MOVS     R0,R6
   \   0000024E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000250   000E               LSRS     R0,R0,#+24
   \   00000252   03B4               PUSH     {R0,R1}
   \   00000254   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000256   3F0E               LSRS     R7,R7,#+24
   \   00000258   0420               MOVS     R0,#+4
   \   0000025A   7843               MULS     R0,R7,R0
   \   0000025C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000025E   240E               LSRS     R4,R4,#+24
   \   00000260   5821               MOVS     R1,#+88
   \   00000262   6143               MULS     R1,R4,R1
   \   00000264   6918               ADDS     R1,R5,R1
   \   00000266   0818               ADDS     R0,R1,R0
   \   00000268   3530               ADDS     R0,R0,#+53
   \   0000026A   0378               LDRB     R3,[R0, #+0]
   \   0000026C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000026E   3F0E               LSRS     R7,R7,#+24
   \   00000270   0420               MOVS     R0,#+4
   \   00000272   7843               MULS     R0,R7,R0
   \   00000274   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000276   240E               LSRS     R4,R4,#+24
   \   00000278   5821               MOVS     R1,#+88
   \   0000027A   6143               MULS     R1,R4,R1
   \   0000027C   6918               ADDS     R1,R5,R1
   \   0000027E   0818               ADDS     R0,R1,R0
   \   00000280   3430               ADDS     R0,R0,#+52
   \   00000282   0278               LDRB     R2,[R0, #+0]
   \   00000284   0021               MOVS     R1,#+0
   \   00000286   06A8               ADD      R0,SP,#+24
   \   00000288   ........           BL       Label
   \   0000028C   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Paint_20:
   \   0000028E   7F1C               ADDS     R7,R7,#+1
   \                     ??MainSide_Paint_15:
   \   00000290   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000292   3F0E               LSRS     R7,R7,#+24
   \   00000294   042F               CMP      R7,#+4
   \   00000296   00D3               BCC      .+4
   \   00000298   9FE0               B        ??MainSide_Paint_21
   \   0000029A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000029C   3F0E               LSRS     R7,R7,#+24
   \   0000029E   0420               MOVS     R0,#+4
   \   000002A0   7843               MULS     R0,R7,R0
   \   000002A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002A4   240E               LSRS     R4,R4,#+24
   \   000002A6   5821               MOVS     R1,#+88
   \   000002A8   6143               MULS     R1,R4,R1
   \   000002AA   6918               ADDS     R1,R5,R1
   \   000002AC   0818               ADDS     R0,R1,R0
   \   000002AE   3630               ADDS     R0,R0,#+54
   \   000002B0   0078               LDRB     R0,[R0, #+0]
   \   000002B2   0128               CMP      R0,#+1
   \   000002B4   EBD3               BCC      ??MainSide_Paint_20
   \   000002B6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002B8   3F0E               LSRS     R7,R7,#+24
   \   000002BA   0720               MOVS     R0,#+7
   \   000002BC   7843               MULS     R0,R7,R0
   \   000002BE   0499               LDR      R1,[SP, #+16]
   \   000002C0   0818               ADDS     R0,R1,R0
   \   000002C2   7330               ADDS     R0,R0,#+115
   \   000002C4   0078               LDRB     R0,[R0, #+0]
   \   000002C6   0128               CMP      R0,#+1
   \   000002C8   13D2               BCS      ??MainSide_Paint_22
   \   000002CA   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002CC   3F0E               LSRS     R7,R7,#+24
   \   000002CE   0720               MOVS     R0,#+7
   \   000002D0   7843               MULS     R0,R7,R0
   \   000002D2   0499               LDR      R1,[SP, #+16]
   \   000002D4   0818               ADDS     R0,R1,R0
   \   000002D6   7330               ADDS     R0,R0,#+115
   \   000002D8   0078               LDRB     R0,[R0, #+0]
   \   000002DA   0028               CMP      R0,#+0
   \   000002DC   D7D1               BNE      ??MainSide_Paint_20
   \   000002DE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002E0   3F0E               LSRS     R7,R7,#+24
   \   000002E2   0720               MOVS     R0,#+7
   \   000002E4   7843               MULS     R0,R7,R0
   \   000002E6   0499               LDR      R1,[SP, #+16]
   \   000002E8   0818               ADDS     R0,R1,R0
   \   000002EA   7430               ADDS     R0,R0,#+116
   \   000002EC   0078               LDRB     R0,[R0, #+0]
   \   000002EE   0128               CMP      R0,#+1
   \   000002F0   CDD3               BCC      ??MainSide_Paint_20
   \                     ??MainSide_Paint_22:
   \   000002F2   0026               MOVS     R6,#+0
   \   000002F4   A021               MOVS     R1,#+160
   \   000002F6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002F8   3F0E               LSRS     R7,R7,#+24
   \   000002FA   0720               MOVS     R0,#+7
   \   000002FC   7843               MULS     R0,R7,R0
   \   000002FE   049A               LDR      R2,[SP, #+16]
   \   00000300   1018               ADDS     R0,R2,R0
   \   00000302   7430               ADDS     R0,R0,#+116
   \   00000304   0078               LDRB     R0,[R0, #+0]
   \   00000306   0222               MOVS     R2,#+2
   \   00000308   5043               MULS     R0,R2,R0
   \   0000030A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000030C   3F0E               LSRS     R7,R7,#+24
   \   0000030E   0722               MOVS     R2,#+7
   \   00000310   7A43               MULS     R2,R7,R2
   \   00000312   049B               LDR      R3,[SP, #+16]
   \   00000314   9A18               ADDS     R2,R3,R2
   \   00000316   7332               ADDS     R2,R2,#+115
   \   00000318   1278               LDRB     R2,[R2, #+0]
   \   0000031A   1623               MOVS     R3,#+22
   \   0000031C   5A43               MULS     R2,R3,R2
   \   0000031E   9A4B               LDR      R3,??MainSide_Paint_23  ;; MainStage
   \   00000320   9A18               ADDS     R2,R3,R2
   \   00000322   1018               ADDS     R0,R2,R0
   \   00000324   405E               LDRSH    R0,[R0, R1]
   \   00000326   0104               LSLS     R1,R0,#+16
   \   00000328   20D5               BPL      ??MainSide_Paint_24
   \   0000032A   6846               MOV      R0,SP
   \   0000032C   2D21               MOVS     R1,#+45
   \   0000032E   0170               STRB     R1,[R0, #+0]
   \   00000330   6846               MOV      R0,SP
   \   00000332   3F21               MOVS     R1,#+63
   \   00000334   4170               STRB     R1,[R0, #+1]
   \   00000336   6846               MOV      R0,SP
   \   00000338   3F21               MOVS     R1,#+63
   \   0000033A   8170               STRB     R1,[R0, #+2]
   \   0000033C   6846               MOV      R0,SP
   \   0000033E   3F21               MOVS     R1,#+63
   \   00000340   C170               STRB     R1,[R0, #+3]
   \   00000342   6846               MOV      R0,SP
   \   00000344   2D21               MOVS     R1,#+45
   \   00000346   0171               STRB     R1,[R0, #+4]
   \   00000348   761D               ADDS     R6,R6,#+5
   \   0000034A   6DE7               B        ??MainSide_Paint_19
   \                     ??MainSide_Paint_0:
   \   0000034C   ........           DC32     g_PC_Connected
   \   00000350   ........           DC32     ekran_komunikacja
   \   00000354   ........           DC32     SheetHistory
   \   00000358   ........           DC32     SheetHistoryIndex
   \   0000035C   ........           DC32     CurrentSheet
   \   00000360   ........           DC32     ScreenSetTab_0
   \   00000364   ........           DC32     ScreenSetTab_1
   \   00000368   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \                     ??MainSide_Paint_24:
   \   0000036C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000036E   3F0E               LSRS     R7,R7,#+24
   \   00000370   0721               MOVS     R1,#+7
   \   00000372   7943               MULS     R1,R7,R1
   \   00000374   049A               LDR      R2,[SP, #+16]
   \   00000376   5118               ADDS     R1,R2,R1
   \   00000378   7531               ADDS     R1,R1,#+117
   \   0000037A   0978               LDRB     R1,[R1, #+0]
   \   0000037C   0029               CMP      R1,#+0
   \   0000037E   2AD0               BEQ      ??MainSide_Paint_25
   \   00000380   6946               MOV      R1,SP
   \   00000382   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000384   0014               ASRS     R0,R0,#+16
   \   00000386   ........           BL       sIntToStr
   \   0000038A   0600               MOVS     R6,R0
   \   0000038C   0020               MOVS     R0,#+0
   \                     ??MainSide_Paint_26:
   \   0000038E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000390   000E               LSRS     R0,R0,#+24
   \   00000392   0328               CMP      R0,#+3
   \   00000394   00D3               BCC      .+4
   \   00000396   47E7               B        ??MainSide_Paint_19
   \   00000398   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000039A   000E               LSRS     R0,R0,#+24
   \   0000039C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000039E   3F0E               LSRS     R7,R7,#+24
   \   000003A0   0721               MOVS     R1,#+7
   \   000003A2   7943               MULS     R1,R7,R1
   \   000003A4   049A               LDR      R2,[SP, #+16]
   \   000003A6   5118               ADDS     R1,R2,R1
   \   000003A8   0918               ADDS     R1,R1,R0
   \   000003AA   7031               ADDS     R1,R1,#+112
   \   000003AC   0978               LDRB     R1,[R1, #+0]
   \   000003AE   0129               CMP      R1,#+1
   \   000003B0   0FD3               BCC      ??MainSide_Paint_27
   \   000003B2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003B4   360E               LSRS     R6,R6,#+24
   \   000003B6   6946               MOV      R1,SP
   \   000003B8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003BA   000E               LSRS     R0,R0,#+24
   \   000003BC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000003BE   3F0E               LSRS     R7,R7,#+24
   \   000003C0   0722               MOVS     R2,#+7
   \   000003C2   7A43               MULS     R2,R7,R2
   \   000003C4   049B               LDR      R3,[SP, #+16]
   \   000003C6   9A18               ADDS     R2,R3,R2
   \   000003C8   1218               ADDS     R2,R2,R0
   \   000003CA   7032               ADDS     R2,R2,#+112
   \   000003CC   1278               LDRB     R2,[R2, #+0]
   \   000003CE   8A55               STRB     R2,[R1, R6]
   \   000003D0   761C               ADDS     R6,R6,#+1
   \                     ??MainSide_Paint_27:
   \   000003D2   401C               ADDS     R0,R0,#+1
   \   000003D4   DBE7               B        ??MainSide_Paint_26
   \                     ??MainSide_Paint_25:
   \   000003D6   0021               MOVS     R1,#+0
   \   000003D8   18E7               B        ??MainSide_Paint_18
    746                               
    747                               }
    748                       }
    749                      }
    750                    
    751                       //Linie
    752                       for (char i=0; i<ScrenLineNr; i++)
   \                     ??MainSide_Paint_21:
   \   000003DA   0026               MOVS     R6,#+0
   \   000003DC   27E0               B        ??MainSide_Paint_28
    753                       {
    754                        if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
    755                        {
    756                            if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
    757                            {
    758                                H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
    759                            }else{
    760                                V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??MainSide_Paint_29:
   \   000003DE   0123               MOVS     R3,#+1
   \   000003E0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003E2   360E               LSRS     R6,R6,#+24
   \   000003E4   0420               MOVS     R0,#+4
   \   000003E6   7043               MULS     R0,R6,R0
   \   000003E8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003EA   240E               LSRS     R4,R4,#+24
   \   000003EC   5821               MOVS     R1,#+88
   \   000003EE   6143               MULS     R1,R4,R1
   \   000003F0   6918               ADDS     R1,R5,R1
   \   000003F2   0818               ADDS     R0,R1,R0
   \   000003F4   4730               ADDS     R0,R0,#+71
   \   000003F6   0278               LDRB     R2,[R0, #+0]
   \   000003F8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003FA   360E               LSRS     R6,R6,#+24
   \   000003FC   0420               MOVS     R0,#+4
   \   000003FE   7043               MULS     R0,R6,R0
   \   00000400   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000402   240E               LSRS     R4,R4,#+24
   \   00000404   5821               MOVS     R1,#+88
   \   00000406   6143               MULS     R1,R4,R1
   \   00000408   6918               ADDS     R1,R5,R1
   \   0000040A   0818               ADDS     R0,R1,R0
   \   0000040C   4530               ADDS     R0,R0,#+69
   \   0000040E   0178               LDRB     R1,[R0, #+0]
   \   00000410   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000412   360E               LSRS     R6,R6,#+24
   \   00000414   0420               MOVS     R0,#+4
   \   00000416   7043               MULS     R0,R6,R0
   \   00000418   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000041A   240E               LSRS     R4,R4,#+24
   \   0000041C   5827               MOVS     R7,#+88
   \   0000041E   6743               MULS     R7,R4,R7
   \   00000420   EF19               ADDS     R7,R5,R7
   \   00000422   3818               ADDS     R0,R7,R0
   \   00000424   4430               ADDS     R0,R0,#+68
   \   00000426   0078               LDRB     R0,[R0, #+0]
   \   00000428   ........           BL       V_line
    761                        
    762                            }
   \                     ??MainSide_Paint_30:
   \   0000042C   761C               ADDS     R6,R6,#+1
   \                     ??MainSide_Paint_28:
   \   0000042E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000430   360E               LSRS     R6,R6,#+24
   \   00000432   022E               CMP      R6,#+2
   \   00000434   4FD2               BCS      ??MainSide_Paint_31
   \   00000436   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000438   360E               LSRS     R6,R6,#+24
   \   0000043A   0420               MOVS     R0,#+4
   \   0000043C   7043               MULS     R0,R6,R0
   \   0000043E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000440   240E               LSRS     R4,R4,#+24
   \   00000442   5821               MOVS     R1,#+88
   \   00000444   6143               MULS     R1,R4,R1
   \   00000446   6918               ADDS     R1,R5,R1
   \   00000448   0818               ADDS     R0,R1,R0
   \   0000044A   4630               ADDS     R0,R0,#+70
   \   0000044C   0078               LDRB     R0,[R0, #+0]
   \   0000044E   0128               CMP      R0,#+1
   \   00000450   ECD3               BCC      ??MainSide_Paint_30
   \   00000452   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000454   360E               LSRS     R6,R6,#+24
   \   00000456   0420               MOVS     R0,#+4
   \   00000458   7043               MULS     R0,R6,R0
   \   0000045A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000045C   240E               LSRS     R4,R4,#+24
   \   0000045E   5821               MOVS     R1,#+88
   \   00000460   6143               MULS     R1,R4,R1
   \   00000462   6918               ADDS     R1,R5,R1
   \   00000464   0818               ADDS     R0,R1,R0
   \   00000466   4730               ADDS     R0,R0,#+71
   \   00000468   0078               LDRB     R0,[R0, #+0]
   \   0000046A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000046C   360E               LSRS     R6,R6,#+24
   \   0000046E   0421               MOVS     R1,#+4
   \   00000470   7143               MULS     R1,R6,R1
   \   00000472   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000474   240E               LSRS     R4,R4,#+24
   \   00000476   5822               MOVS     R2,#+88
   \   00000478   6243               MULS     R2,R4,R2
   \   0000047A   AA18               ADDS     R2,R5,R2
   \   0000047C   5118               ADDS     R1,R2,R1
   \   0000047E   4631               ADDS     R1,R1,#+70
   \   00000480   0978               LDRB     R1,[R1, #+0]
   \   00000482   8842               CMP      R0,R1
   \   00000484   ABD2               BCS      ??MainSide_Paint_29
   \   00000486   0123               MOVS     R3,#+1
   \   00000488   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000048A   360E               LSRS     R6,R6,#+24
   \   0000048C   0420               MOVS     R0,#+4
   \   0000048E   7043               MULS     R0,R6,R0
   \   00000490   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000492   240E               LSRS     R4,R4,#+24
   \   00000494   5821               MOVS     R1,#+88
   \   00000496   6143               MULS     R1,R4,R1
   \   00000498   6918               ADDS     R1,R5,R1
   \   0000049A   0818               ADDS     R0,R1,R0
   \   0000049C   4630               ADDS     R0,R0,#+70
   \   0000049E   0278               LDRB     R2,[R0, #+0]
   \   000004A0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004A2   360E               LSRS     R6,R6,#+24
   \   000004A4   0420               MOVS     R0,#+4
   \   000004A6   7043               MULS     R0,R6,R0
   \   000004A8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004AA   240E               LSRS     R4,R4,#+24
   \   000004AC   5821               MOVS     R1,#+88
   \   000004AE   6143               MULS     R1,R4,R1
   \   000004B0   6918               ADDS     R1,R5,R1
   \   000004B2   0818               ADDS     R0,R1,R0
   \   000004B4   4530               ADDS     R0,R0,#+69
   \   000004B6   0178               LDRB     R1,[R0, #+0]
   \   000004B8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004BA   360E               LSRS     R6,R6,#+24
   \   000004BC   0420               MOVS     R0,#+4
   \   000004BE   7043               MULS     R0,R6,R0
   \   000004C0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004C2   240E               LSRS     R4,R4,#+24
   \   000004C4   5827               MOVS     R7,#+88
   \   000004C6   6743               MULS     R7,R4,R7
   \   000004C8   EF19               ADDS     R7,R5,R7
   \   000004CA   3818               ADDS     R0,R7,R0
   \   000004CC   4430               ADDS     R0,R0,#+68
   \   000004CE   0078               LDRB     R0,[R0, #+0]
   \   000004D0   ........           BL       H_line
   \   000004D4   AAE7               B        ??MainSide_Paint_30
    763                        }
    764                       }
    765                      
    766                                  
    767                         //przyciski
    768                      for (char i=0; i<ScrenButtonNr; i++)
   \                     ??MainSide_Paint_31:
   \   000004D6   0026               MOVS     R6,#+0
   \   000004D8   4DE0               B        ??MainSide_Paint_32
    769                      {
    770                        if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
   \                     ??MainSide_Paint_33:
   \   000004DA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004DC   360E               LSRS     R6,R6,#+24
   \   000004DE   0420               MOVS     R0,#+4
   \   000004E0   7043               MULS     R0,R6,R0
   \   000004E2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004E4   240E               LSRS     R4,R4,#+24
   \   000004E6   5821               MOVS     R1,#+88
   \   000004E8   6143               MULS     R1,R4,R1
   \   000004EA   6918               ADDS     R1,R5,R1
   \   000004EC   0818               ADDS     R0,R1,R0
   \   000004EE   8078               LDRB     R0,[R0, #+2]
   \   000004F0   0128               CMP      R0,#+1
   \   000004F2   3FD3               BCC      ??MainSide_Paint_34
   \   000004F4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004F6   360E               LSRS     R6,R6,#+24
   \   000004F8   0820               MOVS     R0,#+8
   \   000004FA   7043               MULS     R0,R6,R0
   \   000004FC   0499               LDR      R1,[SP, #+16]
   \   000004FE   0818               ADDS     R0,R1,R0
   \   00000500   807C               LDRB     R0,[R0, #+18]
   \   00000502   C006               LSLS     R0,R0,#+27
   \   00000504   36D4               BMI      ??MainSide_Paint_34
    771                        {
    772                                Button(ScreenLokal->Button[i].Text,
    773                                ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
    774                                ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
    775                                ScreenPaternDesign[PaternDesign].Button[i].Width,
    776                                ScreenPaternDesign[PaternDesign].Button[i].Height); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000506   82B0               SUB      SP,SP,#+8
   \   00000508   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000050A   360E               LSRS     R6,R6,#+24
   \   0000050C   0420               MOVS     R0,#+4
   \   0000050E   7043               MULS     R0,R6,R0
   \   00000510   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000512   240E               LSRS     R4,R4,#+24
   \   00000514   5821               MOVS     R1,#+88
   \   00000516   6143               MULS     R1,R4,R1
   \   00000518   6918               ADDS     R1,R5,R1
   \   0000051A   0818               ADDS     R0,R1,R0
   \   0000051C   C078               LDRB     R0,[R0, #+3]
   \   0000051E   0090               STR      R0,[SP, #+0]
   \   00000520   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000522   360E               LSRS     R6,R6,#+24
   \   00000524   0420               MOVS     R0,#+4
   \   00000526   7043               MULS     R0,R6,R0
   \   00000528   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000052A   240E               LSRS     R4,R4,#+24
   \   0000052C   5821               MOVS     R1,#+88
   \   0000052E   6143               MULS     R1,R4,R1
   \   00000530   6918               ADDS     R1,R5,R1
   \   00000532   0818               ADDS     R0,R1,R0
   \   00000534   8378               LDRB     R3,[R0, #+2]
   \   00000536   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000538   360E               LSRS     R6,R6,#+24
   \   0000053A   0420               MOVS     R0,#+4
   \   0000053C   7043               MULS     R0,R6,R0
   \   0000053E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000540   240E               LSRS     R4,R4,#+24
   \   00000542   5821               MOVS     R1,#+88
   \   00000544   6143               MULS     R1,R4,R1
   \   00000546   6918               ADDS     R1,R5,R1
   \   00000548   0818               ADDS     R0,R1,R0
   \   0000054A   4278               LDRB     R2,[R0, #+1]
   \   0000054C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000054E   360E               LSRS     R6,R6,#+24
   \   00000550   0420               MOVS     R0,#+4
   \   00000552   7043               MULS     R0,R6,R0
   \   00000554   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000556   240E               LSRS     R4,R4,#+24
   \   00000558   5821               MOVS     R1,#+88
   \   0000055A   6143               MULS     R1,R4,R1
   \   0000055C   6918               ADDS     R1,R5,R1
   \   0000055E   095C               LDRB     R1,[R1, R0]
   \   00000560   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000562   360E               LSRS     R6,R6,#+24
   \   00000564   0820               MOVS     R0,#+8
   \   00000566   7043               MULS     R0,R6,R0
   \   00000568   069F               LDR      R7,[SP, #+24]
   \   0000056A   3818               ADDS     R0,R7,R0
   \   0000056C   0B30               ADDS     R0,R0,#+11
   \   0000056E   ........           BL       Button
   \   00000572   02B0               ADD      SP,SP,#+8
    777                       
    778                        }
    779                       }
   \                     ??MainSide_Paint_34:
   \   00000574   761C               ADDS     R6,R6,#+1
   \                     ??MainSide_Paint_32:
   \   00000576   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000578   360E               LSRS     R6,R6,#+24
   \   0000057A   092E               CMP      R6,#+9
   \   0000057C   ADD3               BCC      ??MainSide_Paint_33
    780                      
    781                      
    782                      //Du¿a temperatura
    783          
    784                
    785                  
    786                }
    787            }
    788          }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MainSide_Paint_2:
   \   0000057E   05B0               ADD      SP,SP,#+20
   \   00000580   F0BC               POP      {R4-R7}
   \   00000582   01BC               POP      {R0}
   \   00000584   0047               BX       R0               ;; return
   \   00000586   C046               Nop      
   \                     ??MainSide_Paint_23:
   \   00000588   ........           DC32     MainStage
    789          
    790          
    791          
    792          
    793          //*-----------------------------------------------------------------------------
    794          //* Nazwa funkcji :    Message
    795          //* Funkcja wywietlenia wiadomoci   
    796          //*-----------------------------------------------------------------------------
    797          //*  String   - wskanik na tekst
    798          //*  StringLength - d³ugoæ tekstu
    799          //*-----------------------------------------------------------------------------
    800          #define MAX_LITER_W_LINI   14

   \                                 In section Debug.txt, align 4, keep-with-next
    801          void MESSAGE(char *String)
    802          {
   \                     MESSAGE:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   9FB0               SUB      SP,SP,#+124
    803            
    804               char StrTmp[8][15];
    805               char StringLength=0;
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   00E0               B        ??MESSAGE_0
    806               
    807               while ((String[StringLength]>0) && (StringLength<250)) StringLength++;                             //okrelenie d³ugoci stringu         
   \                     ??MESSAGE_1:
   \   00000008   491C               ADDS     R1,R1,#+1
   \                     ??MESSAGE_0:
   \   0000000A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000000C   090E               LSRS     R1,R1,#+24
   \   0000000E   425C               LDRB     R2,[R0, R1]
   \   00000010   012A               CMP      R2,#+1
   \   00000012   03D3               BCC      ??MESSAGE_2
   \   00000014   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000016   090E               LSRS     R1,R1,#+24
   \   00000018   FA29               CMP      R1,#+250
   \   0000001A   F5D3               BCC      ??MESSAGE_1
    808               if (StringLength>250) StringLength=250;
   \                     ??MESSAGE_2:
   \   0000001C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000001E   090E               LSRS     R1,R1,#+24
   \   00000020   FB29               CMP      R1,#+251
   \   00000022   00D3               BCC      ??MESSAGE_3
   \   00000024   FA21               MOVS     R1,#+250
    809              char znak=0;
   \                     ??MESSAGE_3:
   \   00000026   0022               MOVS     R2,#+0
    810              char ZWL=0; //znak w linii
   \   00000028   0026               MOVS     R6,#+0
    811              char SPC=0; //spacja
   \   0000002A   0023               MOVS     R3,#+0
    812              char Wiersz=0;
   \   0000002C   0024               MOVS     R4,#+0
   \   0000002E   3AE0               B        ??MESSAGE_4
    813              while (znak<StringLength)
    814              {
    815                 ZWL=0;
    816                 SPC=znak;
    817                 while ((ZWL<MAX_LITER_W_LINI+1) && (znak+ZWL<=StringLength))
    818                 {
    819                     if (String[znak+ZWL]=='\n')     //je¿eli nastêpna linia
    820                     {
    821                       SPC=znak+ZWL;
    822                       break; 
    823                     }else if((String[znak+ZWL]==0) || (String[znak+ZWL]==' ') || ((String[znak+ZWL]=='.') && (String[znak+ZWL+1]!=' ')))     //je¿eli spacja lub kropka bez spacji na koñcu linii
    824                     {  
    825                        SPC=znak+ZWL;
    826                     }  
    827                     ZWL++;
    828                 }
    829                 if(znak+ZWL>=StringLength) SPC=StringLength;
    830                 
    831                 ZWL=0;
    832                 char ZWL=0;
    833                 while ((znak<SPC) && (ZWL<MAX_LITER_W_LINI))  
    834                 {
    835                   StrTmp[Wiersz][ZWL++]=String[znak++];
   \                     ??MESSAGE_5:
   \   00000030   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000032   2D0E               LSRS     R5,R5,#+24
   \   00000034   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000036   240E               LSRS     R4,R4,#+24
   \   00000038   0F26               MOVS     R6,#+15
   \   0000003A   6643               MULS     R6,R4,R6
   \   0000003C   6F46               MOV      R7,SP
   \   0000003E   BE19               ADDS     R6,R7,R6
   \   00000040   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000042   120E               LSRS     R2,R2,#+24
   \   00000044   875C               LDRB     R7,[R0, R2]
   \   00000046   7755               STRB     R7,[R6, R5]
   \   00000048   521C               ADDS     R2,R2,#+1
   \   0000004A   6D1C               ADDS     R5,R5,#+1
    836                 }
   \                     ??MESSAGE_6:
   \   0000004C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000004E   120E               LSRS     R2,R2,#+24
   \   00000050   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000052   1B0E               LSRS     R3,R3,#+24
   \   00000054   9A42               CMP      R2,R3
   \   00000056   03D2               BCS      ??MESSAGE_7
   \   00000058   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000005A   2D0E               LSRS     R5,R5,#+24
   \   0000005C   0E2D               CMP      R5,#+14
   \   0000005E   E7D3               BCC      ??MESSAGE_5
    837                 StrTmp[Wiersz][ZWL]=0;
   \                     ??MESSAGE_7:
   \   00000060   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000062   2D0E               LSRS     R5,R5,#+24
   \   00000064   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000066   240E               LSRS     R4,R4,#+24
   \   00000068   0F23               MOVS     R3,#+15
   \   0000006A   6343               MULS     R3,R4,R3
   \   0000006C   6E46               MOV      R6,SP
   \   0000006E   F318               ADDS     R3,R6,R3
   \   00000070   0026               MOVS     R6,#+0
   \   00000072   5E55               STRB     R6,[R3, R5]
    838                 if (String[znak]==' ') znak++;
   \   00000074   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000076   120E               LSRS     R2,R2,#+24
   \   00000078   835C               LDRB     R3,[R0, R2]
   \   0000007A   202B               CMP      R3,#+32
   \   0000007C   00D1               BNE      ??MESSAGE_8
   \   0000007E   521C               ADDS     R2,R2,#+1
    839                 if (String[znak]=='\n') znak++;
   \                     ??MESSAGE_8:
   \   00000080   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000082   120E               LSRS     R2,R2,#+24
   \   00000084   835C               LDRB     R3,[R0, R2]
   \   00000086   0A2B               CMP      R3,#+10
   \   00000088   00D1               BNE      ??MESSAGE_9
   \   0000008A   521C               ADDS     R2,R2,#+1
    840                 if (String[znak]==' ') znak++;
   \                     ??MESSAGE_9:
   \   0000008C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000008E   120E               LSRS     R2,R2,#+24
   \   00000090   835C               LDRB     R3,[R0, R2]
   \   00000092   202B               CMP      R3,#+32
   \   00000094   00D1               BNE      ??MESSAGE_10
   \   00000096   521C               ADDS     R2,R2,#+1
    841                 
    842                 
    843                 
    844                 if (znak<StringLength)Wiersz++;
   \                     ??MESSAGE_10:
   \   00000098   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000009A   120E               LSRS     R2,R2,#+24
   \   0000009C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000009E   090E               LSRS     R1,R1,#+24
   \   000000A0   8A42               CMP      R2,R1
   \   000000A2   00D2               BCS      ??MESSAGE_4
   \   000000A4   641C               ADDS     R4,R4,#+1
   \                     ??MESSAGE_4:
   \   000000A6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000A8   120E               LSRS     R2,R2,#+24
   \   000000AA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000AC   090E               LSRS     R1,R1,#+24
   \   000000AE   8A42               CMP      R2,R1
   \   000000B0   48D2               BCS      ??MESSAGE_11
   \   000000B2   0026               MOVS     R6,#+0
   \   000000B4   1300               MOVS     R3,R2
   \   000000B6   22E0               B        ??MESSAGE_12
   \                     ??MESSAGE_13:
   \   000000B8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000BA   120E               LSRS     R2,R2,#+24
   \   000000BC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000BE   360E               LSRS     R6,R6,#+24
   \   000000C0   9519               ADDS     R5,R2,R6
   \   000000C2   455D               LDRB     R5,[R0, R5]
   \   000000C4   002D               CMP      R5,#+0
   \   000000C6   18D0               BEQ      ??MESSAGE_14
   \   000000C8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000CA   120E               LSRS     R2,R2,#+24
   \   000000CC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000CE   360E               LSRS     R6,R6,#+24
   \   000000D0   9519               ADDS     R5,R2,R6
   \   000000D2   455D               LDRB     R5,[R0, R5]
   \   000000D4   202D               CMP      R5,#+32
   \   000000D6   10D0               BEQ      ??MESSAGE_14
   \   000000D8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000DA   120E               LSRS     R2,R2,#+24
   \   000000DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \   000000E0   9519               ADDS     R5,R2,R6
   \   000000E2   455D               LDRB     R5,[R0, R5]
   \   000000E4   2E2D               CMP      R5,#+46
   \   000000E6   09D1               BNE      ??MESSAGE_15
   \   000000E8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000EA   120E               LSRS     R2,R2,#+24
   \   000000EC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000EE   360E               LSRS     R6,R6,#+24
   \   000000F0   9519               ADDS     R5,R2,R6
   \   000000F2   4519               ADDS     R5,R0,R5
   \   000000F4   6D78               LDRB     R5,[R5, #+1]
   \   000000F6   202D               CMP      R5,#+32
   \   000000F8   00D0               BEQ      ??MESSAGE_15
   \                     ??MESSAGE_14:
   \   000000FA   9319               ADDS     R3,R2,R6
   \                     ??MESSAGE_15:
   \   000000FC   761C               ADDS     R6,R6,#+1
   \                     ??MESSAGE_12:
   \   000000FE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000100   360E               LSRS     R6,R6,#+24
   \   00000102   0F2E               CMP      R6,#+15
   \   00000104   11D2               BCS      ??MESSAGE_16
   \   00000106   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000108   090E               LSRS     R1,R1,#+24
   \   0000010A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000010C   120E               LSRS     R2,R2,#+24
   \   0000010E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000110   360E               LSRS     R6,R6,#+24
   \   00000112   9519               ADDS     R5,R2,R6
   \   00000114   A942               CMP      R1,R5
   \   00000116   08DB               BLT      ??MESSAGE_16
   \   00000118   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000011A   120E               LSRS     R2,R2,#+24
   \   0000011C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000011E   360E               LSRS     R6,R6,#+24
   \   00000120   9519               ADDS     R5,R2,R6
   \   00000122   455D               LDRB     R5,[R0, R5]
   \   00000124   0A2D               CMP      R5,#+10
   \   00000126   C7D1               BNE      ??MESSAGE_13
   \   00000128   9319               ADDS     R3,R2,R6
   \                     ??MESSAGE_16:
   \   0000012A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000012C   120E               LSRS     R2,R2,#+24
   \   0000012E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000130   360E               LSRS     R6,R6,#+24
   \   00000132   9519               ADDS     R5,R2,R6
   \   00000134   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000136   090E               LSRS     R1,R1,#+24
   \   00000138   8D42               CMP      R5,R1
   \   0000013A   00DB               BLT      ??MESSAGE_17
   \   0000013C   0B00               MOVS     R3,R1
   \                     ??MESSAGE_17:
   \   0000013E   0026               MOVS     R6,#+0
   \   00000140   0025               MOVS     R5,#+0
   \   00000142   83E7               B        ??MESSAGE_6
    845              }
    846               
    847               
    848          
    849              CleanCanvas();
   \                     ??MESSAGE_11:
   \   00000144   ........           BL       CleanCanvas
    850              
    851              char BazeY=56+10*(Wiersz/2);
   \   00000148   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000014A   240E               LSRS     R4,R4,#+24
   \   0000014C   2000               MOVS     R0,R4
   \   0000014E   0221               MOVS     R1,#+2
   \   00000150   ........           BL       __aeabi_idivmod
   \   00000154   0500               MOVS     R5,R0
   \   00000156   0A20               MOVS     R0,#+10
   \   00000158   4543               MULS     R5,R0,R5
   \   0000015A   3835               ADDS     R5,R5,#+56
    852             
    853               Label(" INFO ",2,2,BazeY+17,15,59,0,127,1);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0120               MOVS     R0,#+1
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   7F21               MOVS     R1,#+127
   \   00000164   0020               MOVS     R0,#+0
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   3B21               MOVS     R1,#+59
   \   0000016A   0F20               MOVS     R0,#+15
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000170   2D0E               LSRS     R5,R5,#+24
   \   00000172   2B00               MOVS     R3,R5
   \   00000174   1133               ADDS     R3,R3,#+17
   \   00000176   0222               MOVS     R2,#+2
   \   00000178   0221               MOVS     R1,#+2
   \   0000017A   3848               LDR      R0,??MESSAGE_18  ;; `?<Constant " INFO ">`
   \   0000017C   ........           BL       Label
   \   00000180   06B0               ADD      SP,SP,#+24
    854              
    855               
    856               
    857              for (char i=0; i<=Wiersz; i++)
   \   00000182   0026               MOVS     R6,#+0
   \   00000184   18E0               B        ??MESSAGE_19
    858              {
    859                  Label(StrTmp[i],0,2,BazeY,15,56,0,127,0);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MESSAGE_20:
   \   00000186   82B0               SUB      SP,SP,#+8
   \   00000188   0020               MOVS     R0,#+0
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   7F21               MOVS     R1,#+127
   \   0000018E   0020               MOVS     R0,#+0
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   3821               MOVS     R1,#+56
   \   00000194   0F20               MOVS     R0,#+15
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000019A   2D0E               LSRS     R5,R5,#+24
   \   0000019C   2B00               MOVS     R3,R5
   \   0000019E   0222               MOVS     R2,#+2
   \   000001A0   0021               MOVS     R1,#+0
   \   000001A2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001A4   360E               LSRS     R6,R6,#+24
   \   000001A6   0F20               MOVS     R0,#+15
   \   000001A8   7043               MULS     R0,R6,R0
   \   000001AA   06AF               ADD      R7,SP,#+24
   \   000001AC   3818               ADDS     R0,R7,R0
   \   000001AE   ........           BL       Label
   \   000001B2   06B0               ADD      SP,SP,#+24
    860                  BazeY=BazeY-10;
   \   000001B4   0A3D               SUBS     R5,R5,#+10
    861              }
   \   000001B6   761C               ADDS     R6,R6,#+1
   \                     ??MESSAGE_19:
   \   000001B8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001BA   240E               LSRS     R4,R4,#+24
   \   000001BC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001BE   360E               LSRS     R6,R6,#+24
   \   000001C0   B442               CMP      R4,R6
   \   000001C2   E0D2               BCS      ??MESSAGE_20
    862             
    863              
    864              
    865              char PozD=BazeY+3; 
   \   000001C4   2E00               MOVS     R6,R5
   \   000001C6   F61C               ADDS     R6,R6,#+3
    866              char PozG=BazeY+10*(Wiersz+1)+15; 
   \   000001C8   0A20               MOVS     R0,#+10
   \   000001CA   6043               MULS     R0,R4,R0
   \   000001CC   2D18               ADDS     R5,R5,R0
   \   000001CE   1935               ADDS     R5,R5,#+25
    867              char Wys=PozG-PozD;
   \   000001D0   AF1B               SUBS     R7,R5,R6
    868              V_line(0,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001D2   0123               MOVS     R3,#+1
   \   000001D4   3A00               MOVS     R2,R7
   \   000001D6   0E32               ADDS     R2,R2,#+14
   \   000001D8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001DA   120E               LSRS     R2,R2,#+24
   \   000001DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001DE   360E               LSRS     R6,R6,#+24
   \   000001E0   B11E               SUBS     R1,R6,#+2
   \   000001E2   0020               MOVS     R0,#+0
   \   000001E4   ........           BL       V_line
    869              V_line(63,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001E8   0123               MOVS     R3,#+1
   \   000001EA   0E37               ADDS     R7,R7,#+14
   \   000001EC   3A00               MOVS     R2,R7
   \   000001EE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001F0   120E               LSRS     R2,R2,#+24
   \   000001F2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001F4   360E               LSRS     R6,R6,#+24
   \   000001F6   B11E               SUBS     R1,R6,#+2
   \   000001F8   3F20               MOVS     R0,#+63
   \   000001FA   ........           BL       V_line
    870              H_line(0,PozG+12,74,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001FE   0123               MOVS     R3,#+1
   \   00000200   4A22               MOVS     R2,#+74
   \   00000202   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000204   2D0E               LSRS     R5,R5,#+24
   \   00000206   2900               MOVS     R1,R5
   \   00000208   0C31               ADDS     R1,R1,#+12
   \   0000020A   0020               MOVS     R0,#+0
   \   0000020C   ........           BL       H_line
    871              H_line(2,PozG,60,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   00000210   0123               MOVS     R3,#+1
   \   00000212   3C22               MOVS     R2,#+60
   \   00000214   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000216   2D0E               LSRS     R5,R5,#+24
   \   00000218   2900               MOVS     R1,R5
   \   0000021A   0220               MOVS     R0,#+2
   \   0000021C   ........           BL       H_line
    872              H_line(0,PozD-2,64,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   00000220   0123               MOVS     R3,#+1
   \   00000222   4022               MOVS     R2,#+64
   \   00000224   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000226   360E               LSRS     R6,R6,#+24
   \   00000228   B61E               SUBS     R6,R6,#+2
   \   0000022A   3100               MOVS     R1,R6
   \   0000022C   0020               MOVS     R0,#+0
   \   0000022E   ........           BL       H_line
    873          
    874              
    875              g_Message=g_counter+(5+(Wiersz/2))*700;         //czas wywietlania wiadomoci (jednostka- ms)
   \   00000232   0B48               LDR      R0,??MESSAGE_18+0x4  ;; g_counter
   \   00000234   03C8               LDM      R0!,{R0,R1}
   \   00000236   0500               MOVS     R5,R0
   \   00000238   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000023A   240E               LSRS     R4,R4,#+24
   \   0000023C   2000               MOVS     R0,R4
   \   0000023E   0221               MOVS     R1,#+2
   \   00000240   ........           BL       __aeabi_idivmod
   \   00000244   401D               ADDS     R0,R0,#+5
   \   00000246   AF21               MOVS     R1,#+175
   \   00000248   8900               LSLS     R1,R1,#+2        ;; #+700
   \   0000024A   4843               MULS     R0,R1,R0
   \   0000024C   2818               ADDS     R0,R5,R0
   \   0000024E   0549               LDR      R1,??MESSAGE_18+0x8  ;; g_Message
   \   00000250   0860               STR      R0,[R1, #+0]
    876          }
   \   00000252   1FB0               ADD      SP,SP,#+124
   \   00000254   F0BC               POP      {R4-R7}
   \   00000256   01BC               POP      {R0}
   \   00000258   0047               BX       R0               ;; return
   \   0000025A   C046               Nop      
   \                     ??MESSAGE_18:
   \   0000025C   ........           DC32     `?<Constant " INFO ">`
   \   00000260   ........           DC32     g_counter
   \   00000264   ........           DC32     g_Message
    877          
    878          
    879          
    880          
    881          
    882          
    883          
    884          
    885          
    886          
    887          //*-----------------------------------------------------------------------------
    888          //* Nazwa funkcji :    MainSide_Refresh
    889          //* Funkcja strony g³ównej menu
    890          //*-----------------------------------------------------------------------------
    891          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    892          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    893          void MESSAGE_Refresh(void)
    894          {
   \                     MESSAGE_Refresh:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   87B0               SUB      SP,SP,#+28
    895          
    896             
    897             if ((MainSide_puls==0) || (MainSide_puls>1))
   \   00000004   2C48               LDR      R0,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   03D0               BEQ      ??MESSAGE_Refresh_1
   \   0000000C   2A48               LDR      R0,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   0000000E   0078               LDRB     R0,[R0, #+0]
   \   00000010   0228               CMP      R0,#+2
   \   00000012   1ED3               BCC      ??MESSAGE_Refresh_2
    898              { 
    899                char ekran1[2][13] = {
    900                           {0,0,224,24,232,244,244,244,232,24,224,0,0},
    901                            {0,0,0,3,2,5,5,5,2,3,0,0,0}
    902                            };
   \                     ??MESSAGE_Refresh_1:
   \   00000014   6846               MOV      R0,SP
   \   00000016   2949               LDR      R1,??MESSAGE_Refresh_0+0x4  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000018   1C22               MOVS     R2,#+28
   \   0000001A   ........           BL       __aeabi_memcpy4
    903                
    904                for (char i=0; i<=12; i++)
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   13E0               B        ??MESSAGE_Refresh_3
    905                {
    906                   
    907                    LCD_Canvas[0][i]=ekran1[0][i];
   \                     ??MESSAGE_Refresh_4:
   \   00000022   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000024   000E               LSRS     R0,R0,#+24
   \   00000026   2649               LDR      R1,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000028   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002A   000E               LSRS     R0,R0,#+24
   \   0000002C   6A46               MOV      R2,SP
   \   0000002E   125C               LDRB     R2,[R2, R0]
   \   00000030   0A54               STRB     R2,[R1, R0]
    908                    LCD_Canvas[1][i]=ekran1[1][i];
   \   00000032   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   2249               LDR      R1,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000038   0918               ADDS     R1,R1,R0
   \   0000003A   8031               ADDS     R1,R1,#+128
   \   0000003C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   6A46               MOV      R2,SP
   \   00000042   1218               ADDS     R2,R2,R0
   \   00000044   527B               LDRB     R2,[R2, #+13]
   \   00000046   0A70               STRB     R2,[R1, #+0]
    909                }
   \   00000048   401C               ADDS     R0,R0,#+1
   \                     ??MESSAGE_Refresh_3:
   \   0000004A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004C   000E               LSRS     R0,R0,#+24
   \   0000004E   0D28               CMP      R0,#+13
   \   00000050   E7D3               BCC      ??MESSAGE_Refresh_4
    910                
    911              }
    912              if ((MainSide_puls==1))
   \                     ??MESSAGE_Refresh_2:
   \   00000052   1948               LDR      R0,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0128               CMP      R0,#+1
   \   00000058   1ED1               BNE      ??MESSAGE_Refresh_5
    913              {
    914                
    915                
    916                char ekran2[2][13] = {
    917                            {240,28,230,250,251,253,253,253,251,250,230,28,240},
    918                            {1,7,12,11,27,23,23,23,27,11,12,7,1},
    919                            };
   \   0000005A   6846               MOV      R0,SP
   \   0000005C   1949               LDR      R1,??MESSAGE_Refresh_0+0xC  ;; `?<Constant {{240, 28, 230, 250, 251, 253, 253,`
   \   0000005E   1C22               MOVS     R2,#+28
   \   00000060   ........           BL       __aeabi_memcpy4
    920                
    921                for (char i=0; i<=12; i++)
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   13E0               B        ??MESSAGE_Refresh_6
    922                {
    923                   
    924                    LCD_Canvas[0][i]=ekran2[0][i];
   \                     ??MESSAGE_Refresh_7:
   \   00000068   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000006A   000E               LSRS     R0,R0,#+24
   \   0000006C   1449               LDR      R1,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   0000006E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000070   000E               LSRS     R0,R0,#+24
   \   00000072   6A46               MOV      R2,SP
   \   00000074   125C               LDRB     R2,[R2, R0]
   \   00000076   0A54               STRB     R2,[R1, R0]
    925                    LCD_Canvas[1][i]=ekran2[1][i];
   \   00000078   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000007A   000E               LSRS     R0,R0,#+24
   \   0000007C   1049               LDR      R1,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   0000007E   0918               ADDS     R1,R1,R0
   \   00000080   8031               ADDS     R1,R1,#+128
   \   00000082   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000084   000E               LSRS     R0,R0,#+24
   \   00000086   6A46               MOV      R2,SP
   \   00000088   1218               ADDS     R2,R2,R0
   \   0000008A   527B               LDRB     R2,[R2, #+13]
   \   0000008C   0A70               STRB     R2,[R1, #+0]
    926                }         
   \   0000008E   401C               ADDS     R0,R0,#+1
   \                     ??MESSAGE_Refresh_6:
   \   00000090   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000092   000E               LSRS     R0,R0,#+24
   \   00000094   0D28               CMP      R0,#+13
   \   00000096   E7D3               BCC      ??MESSAGE_Refresh_7
    927              }
    928               
    929              if (MainSide_puls>3) {MainSide_puls=0;} else {MainSide_puls++;} 
   \                     ??MESSAGE_Refresh_5:
   \   00000098   0748               LDR      R0,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   0000009A   0078               LDRB     R0,[R0, #+0]
   \   0000009C   0428               CMP      R0,#+4
   \   0000009E   03D3               BCC      ??MESSAGE_Refresh_8
   \   000000A0   0548               LDR      R0,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   000000A2   0021               MOVS     R1,#+0
   \   000000A4   0170               STRB     R1,[R0, #+0]
   \   000000A6   04E0               B        ??MESSAGE_Refresh_9
   \                     ??MESSAGE_Refresh_8:
   \   000000A8   0348               LDR      R0,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   000000AA   0349               LDR      R1,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   000000AC   0978               LDRB     R1,[R1, #+0]
   \   000000AE   491C               ADDS     R1,R1,#+1
   \   000000B0   0170               STRB     R1,[R0, #+0]
    930            
    931          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MESSAGE_Refresh_9:
   \   000000B2   07B0               ADD      SP,SP,#+28
   \   000000B4   01BC               POP      {R0}
   \   000000B6   0047               BX       R0               ;; return
   \                     ??MESSAGE_Refresh_0:
   \   000000B8   ........           DC32     MainSide_puls
   \   000000BC   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   000000C0   ........           DC32     LCD_Canvas
   \   000000C4   ........           DC32     `?<Constant {{240, 28, 230, 250, 251, 253, 253,`
    932          
    933          
    934          
    935          
    936          
    937          
    938          
    939          
    940          
    941          
    942          //*-----------------------------------------------------------------------------
    943          //* Nazwa funkcji :    MainSide_Paint
    944          //* Funkcja strony g³ównej menu
    945          //*-----------------------------------------------------------------------------
    946          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    947          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    948          void MainSide_Event(_Screen* ScreenLokal)
    949          {
   \                     MainSide_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
    950            signed char BODP=-1;
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   C043               MVNS     R0,R0            ;; #-1
    951            
    952            if (!g_PC_Connected)
   \   00000008   8049               LDR      R1,??MainSide_Event_0  ;; g_PC_Connected
   \   0000000A   0978               LDRB     R1,[R1, #+0]
   \   0000000C   0029               CMP      R1,#+0
   \   0000000E   7AD1               BNE      ??MainSide_Event_1
    953            {
    954            char ChangeSheet=0;
   \   00000010   0025               MOVS     R5,#+0
    955            char MenuPaintExecute=0;
   \   00000012   0026               MOVS     R6,#+0
    956            static char Xdown=0;
    957            
    958            char PaternDesign=(ScreenLokal->PaternDesign);
   \   00000014   3C78               LDRB     R4,[R7, #+0]
    959            
    960            const _ScreenPaternDesign *ScreenPaternDesign;
    961            if (CurrentSheet==0) 
   \   00000016   7E48               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   02D1               BNE      ??MainSide_Event_2
    962            {
    963              ScreenPaternDesign=ScreenSetTab_0;
   \   0000001E   7D48               LDR      R0,??MainSide_Event_0+0x8  ;; ScreenSetTab_0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   2DE0               B        ??MainSide_Event_3
    964            }else{
    965              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Event_2:
   \   00000024   7C48               LDR      R0,??MainSide_Event_0+0xC  ;; ScreenSetTab_1
   \   00000026   0090               STR      R0,[SP, #+0]
    966              if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1)
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0F21               MOVS     R1,#+15
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   CD48               LDR      R0,??MainSide_Event_4  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   CD48               LDR      R0,??MainSide_Event_4+0x4  ;; X_down
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   425E               LDRSH    R2,[R0, R1]
   \   00000040   CC48               LDR      R0,??MainSide_Event_4+0x8  ;; Y_up
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   415E               LDRSH    R1,[R0, R1]
   \   00000046   8C46               MOV      R12,R1
   \   00000048   CB48               LDR      R0,??MainSide_Event_4+0xC  ;; X_up
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   405E               LDRSH    R0,[R0, R1]
   \   0000004E   6146               MOV      R1,R12
   \   00000050   ........           BL       List_Event
   \   00000054   04B0               ADD      SP,SP,#+16
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   C943               MVNS     R1,R1            ;; #-1
   \   0000005A   8842               CMP      R0,R1
   \   0000005C   10D1               BNE      ??MainSide_Event_3
    967              {
    968                   if (SheetHistoryIndex>0)
   \   0000005E   C748               LDR      R0,??MainSide_Event_4+0x10  ;; SheetHistoryIndex
   \   00000060   0078               LDRB     R0,[R0, #+0]
   \   00000062   0128               CMP      R0,#+1
   \   00000064   0AD3               BCC      ??MainSide_Event_5
    969                    {
    970                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   00000066   C548               LDR      R0,??MainSide_Event_4+0x10  ;; SheetHistoryIndex
   \   00000068   0078               LDRB     R0,[R0, #+0]
   \   0000006A   401E               SUBS     R0,R0,#+1
   \   0000006C   C349               LDR      R1,??MainSide_Event_4+0x10  ;; SheetHistoryIndex
   \   0000006E   0870               STRB     R0,[R1, #+0]
   \   00000070   6749               LDR      R1,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   00000072   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000074   000E               LSRS     R0,R0,#+24
   \   00000076   C24A               LDR      R2,??MainSide_Event_4+0x14  ;; SheetHistory
   \   00000078   105C               LDRB     R0,[R2, R0]
   \   0000007A   0870               STRB     R0,[R1, #+0]
    971                    } 
    972                   ChangeSheet=1;
   \                     ??MainSide_Event_5:
   \   0000007C   0125               MOVS     R5,#+1
    973                   MenuPaintExecute=1;
   \   0000007E   0126               MOVS     R6,#+1
    974              }
    975            }  
    976            
    977            
    978            
    979            if (ChangeSheet==0)
   \                     ??MainSide_Event_3:
   \   00000080   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000082   2D0E               LSRS     R5,R5,#+24
   \   00000084   002D               CMP      R5,#+0
   \   00000086   38D1               BNE      ??MainSide_Event_6
    980            {
    981            
    982            
    983              //akcja przycisku menu
    984              if ((X_up>1) && (X_up<15) && (Y_up>115) && (Y_up<128))
   \   00000088   BB48               LDR      R0,??MainSide_Event_4+0xC  ;; X_up
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   405E               LDRSH    R0,[R0, R1]
   \   0000008E   0228               CMP      R0,#+2
   \   00000090   3DDB               BLT      ??MainSide_Event_7
   \   00000092   B948               LDR      R0,??MainSide_Event_4+0xC  ;; X_up
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   405E               LDRSH    R0,[R0, R1]
   \   00000098   0F28               CMP      R0,#+15
   \   0000009A   38DA               BGE      ??MainSide_Event_7
   \   0000009C   B548               LDR      R0,??MainSide_Event_4+0x8  ;; Y_up
   \   0000009E   0021               MOVS     R1,#+0
   \   000000A0   405E               LDRSH    R0,[R0, R1]
   \   000000A2   7428               CMP      R0,#+116
   \   000000A4   33DB               BLT      ??MainSide_Event_7
   \   000000A6   B348               LDR      R0,??MainSide_Event_4+0x8  ;; Y_up
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   405E               LDRSH    R0,[R0, R1]
   \   000000AC   8028               CMP      R0,#+128
   \   000000AE   2EDA               BGE      ??MainSide_Event_7
    985              {
    986                #ifdef  NOPASS
    987                  MenuLevel=11;
    988                #else
    989                  if ((g_level==0) && (g_NeedPass==1))
   \   000000B0   B448               LDR      R0,??MainSide_Event_4+0x18  ;; g_level
   \   000000B2   0078               LDRB     R0,[R0, #+0]
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   07D1               BNE      ??MainSide_Event_8
   \   000000B8   B348               LDR      R0,??MainSide_Event_4+0x1C  ;; g_NeedPass
   \   000000BA   0078               LDRB     R0,[R0, #+0]
   \   000000BC   0128               CMP      R0,#+1
   \   000000BE   03D1               BNE      ??MainSide_Event_8
    990                  {
    991                    MenuLevel=10;
   \   000000C0   B248               LDR      R0,??MainSide_Event_4+0x20  ;; MenuLevel
   \   000000C2   0A21               MOVS     R1,#+10
   \   000000C4   0160               STR      R1,[R0, #+0]
   \   000000C6   02E0               B        ??MainSide_Event_9
    992                  }else{
    993                    MenuLevel=11;
   \                     ??MainSide_Event_8:
   \   000000C8   B048               LDR      R0,??MainSide_Event_4+0x20  ;; MenuLevel
   \   000000CA   0B21               MOVS     R1,#+11
   \   000000CC   0160               STR      R1,[R0, #+0]
    994                  }
    995                #endif
    996                
    997                MenuPaintExecute=1;
   \                     ??MainSide_Event_9:
   \   000000CE   0126               MOVS     R6,#+1
    998                  
    999                if ((!(AT91C_IFLASH_MEM->Config.SoundOff))) {
   \   000000D0   AF48               LDR      R0,??MainSide_Event_4+0x24  ;; 0x13d7e9
   \   000000D2   0078               LDRB     R0,[R0, #+0]
   \   000000D4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D6   000E               LSRS     R0,R0,#+24
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   0BD1               BNE      ??MainSide_Event_10
   1000                  ButtonBipCounter=g_counter+8;
   \   000000DC   AD4A               LDR      R2,??MainSide_Event_4+0x28  ;; ButtonBipCounter
   \   000000DE   AE48               LDR      R0,??MainSide_Event_4+0x2C  ;; g_counter
   \   000000E0   03C8               LDM      R0!,{R0,R1}
   \   000000E2   0023               MOVS     R3,#+0
   \   000000E4   0830               ADDS     R0,R0,#+8
   \   000000E6   5941               ADCS     R1,R1,R3
   \   000000E8   03C2               STM      R2!,{R0,R1}
   \   000000EA   083A               SUBS     R2,R2,#+8
   1001                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000EC   AB48               LDR      R0,??MainSide_Event_4+0x30  ;; 0xfffff430
   \   000000EE   8021               MOVS     R1,#+128
   \   000000F0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000F2   0160               STR      R1,[R0, #+0]
   1002                  } 
   1003                Xdown=0;
   \                     ??MainSide_Event_10:
   \   000000F4   AA48               LDR      R0,??MainSide_Event_4+0x34  ;; ??Xdown
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   0170               STRB     R1,[R0, #+0]
   1004              }
   1005              else  if ((X_down>1) && (X_down<15) && (Y_down>115) && (Y_down<128))
   1006              {
   1007                 if ((!(AT91C_IFLASH_MEM->Config.SoundOff)) && (Xdown==0)) {
   1008                  ButtonBipCounter=g_counter+8;
   1009                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe068]: integer conversion resulted in a change of sign
   1010                  } 
   1011                 Xdown=1;
   1012              }
   1013              else
   1014              {
   1015          
   1016                Xdown=0;
   1017                
   1018              //STREFY przycisków
   1019                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Event(ScreenLokal);}
   1020                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Event(ScreenLokal);}
   1021                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Event(CurrentSheet);}
   1022                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Event(CurrentSheet);}    
   1023                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Event(CurrentSheet);}
   1024                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Event(CurrentSheet);}   
   1025                else {  
   1026                
   1027                
   1028                    for (char i=0; i<ScrenButtonNr; i++)
   1029                    {
   1030                      
   1031                      if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
   1032                      {
   1033                      
   1034                            BODP=Button(ScreenLokal->Button[i].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1035                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   1036                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   1037                            ScreenPaternDesign[PaternDesign].Button[i].Width,
   1038                            ScreenPaternDesign[PaternDesign].Button[i].Height
   1039                            );
   1040                         
   1041                          MenuPaintExecute=1;  
   1042                         if (BODP==1)
   1043                           {   
   1044                            //je¿eli ustawiona akcja otwarcia strony 
   1045                            if (ScreenLokal->Button[i].OpenPage) 
   1046                             {
   1047                               CurrentSheet=ScreenLokal->Button[i].OpenPage-1;
   1048                               
   1049                             }
   1050                           }
   1051                          if (BODP==2)
   1052                           {
   1053                             if (MainStage.StageButton[i+1+(10*CurrentSheet)]==0) 
   1054                             {
   1055                               MainStage.StageButton[i+1+(10*CurrentSheet)]=1;
   1056                               g_NextTimeProgram=g_counter+ProgramPeriod;
   1057                               Program(&gProg);
   1058                             }
   1059                            
   1060                             
   1061                           }else{
   1062                             MainStage.StageButton[i+1+(10*CurrentSheet)]=0;
   1063                             
   1064                           }
   1065                      }
   1066                    }
   1067                }
   1068              }
   1069          
   1070            
   1071            }
   1072            
   1073            if (MenuPaintExecute) MenuPaint();
   \                     ??MainSide_Event_6:
   \   000000FA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000FC   360E               LSRS     R6,R6,#+24
   \   000000FE   002E               CMP      R6,#+0
   \   00000100   01D0               BEQ      ??MainSide_Event_1
   \   00000102   ........           BL       MenuPaint
   1074              
   1075            }
   1076          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??MainSide_Event_1:
   \   00000106   01B0               ADD      SP,SP,#+4
   \   00000108   F0BC               POP      {R4-R7}
   \   0000010A   01BC               POP      {R0}
   \   0000010C   0047               BX       R0               ;; return
   \                     ??MainSide_Event_7:
   \   0000010E   9848               LDR      R0,??MainSide_Event_4+0x4  ;; X_down
   \   00000110   0021               MOVS     R1,#+0
   \   00000112   405E               LDRSH    R0,[R0, R1]
   \   00000114   0228               CMP      R0,#+2
   \   00000116   27DB               BLT      ??MainSide_Event_11
   \   00000118   9548               LDR      R0,??MainSide_Event_4+0x4  ;; X_down
   \   0000011A   0021               MOVS     R1,#+0
   \   0000011C   405E               LDRSH    R0,[R0, R1]
   \   0000011E   0F28               CMP      R0,#+15
   \   00000120   22DA               BGE      ??MainSide_Event_11
   \   00000122   9248               LDR      R0,??MainSide_Event_4  ;; Y_down
   \   00000124   0021               MOVS     R1,#+0
   \   00000126   405E               LDRSH    R0,[R0, R1]
   \   00000128   7428               CMP      R0,#+116
   \   0000012A   1DDB               BLT      ??MainSide_Event_11
   \   0000012C   8F48               LDR      R0,??MainSide_Event_4  ;; Y_down
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   405E               LDRSH    R0,[R0, R1]
   \   00000132   8028               CMP      R0,#+128
   \   00000134   18DA               BGE      ??MainSide_Event_11
   \   00000136   9648               LDR      R0,??MainSide_Event_4+0x24  ;; 0x13d7e9
   \   00000138   0078               LDRB     R0,[R0, #+0]
   \   0000013A   9949               LDR      R1,??MainSide_Event_4+0x34  ;; ??Xdown
   \   0000013C   0978               LDRB     R1,[R1, #+0]
   \   0000013E   0143               ORRS     R1,R1,R0
   \   00000140   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000142   090E               LSRS     R1,R1,#+24
   \   00000144   0029               CMP      R1,#+0
   \   00000146   0BD1               BNE      ??MainSide_Event_12
   \   00000148   924A               LDR      R2,??MainSide_Event_4+0x28  ;; ButtonBipCounter
   \   0000014A   9348               LDR      R0,??MainSide_Event_4+0x2C  ;; g_counter
   \   0000014C   03C8               LDM      R0!,{R0,R1}
   \   0000014E   0023               MOVS     R3,#+0
   \   00000150   0830               ADDS     R0,R0,#+8
   \   00000152   5941               ADCS     R1,R1,R3
   \   00000154   03C2               STM      R2!,{R0,R1}
   \   00000156   083A               SUBS     R2,R2,#+8
   \   00000158   9048               LDR      R0,??MainSide_Event_4+0x30  ;; 0xfffff430
   \   0000015A   8021               MOVS     R1,#+128
   \   0000015C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000015E   0160               STR      R1,[R0, #+0]
   \                     ??MainSide_Event_12:
   \   00000160   8F48               LDR      R0,??MainSide_Event_4+0x34  ;; ??Xdown
   \   00000162   0121               MOVS     R1,#+1
   \   00000164   0170               STRB     R1,[R0, #+0]
   \   00000166   C8E7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_11:
   \   00000168   8D48               LDR      R0,??MainSide_Event_4+0x34  ;; ??Xdown
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   0170               STRB     R1,[R0, #+0]
   \   0000016E   2848               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   00000170   0078               LDRB     R0,[R0, #+0]
   \   00000172   0028               CMP      R0,#+0
   \   00000174   07D1               BNE      ??MainSide_Event_13
   \   00000176   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000178   240E               LSRS     R4,R4,#+24
   \   0000017A   082C               CMP      R4,#+8
   \   0000017C   03D1               BNE      ??MainSide_Event_13
   \   0000017E   3800               MOVS     R0,R7
   \   00000180   ........           BL       Termostat_Event
   \   00000184   B9E7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_13:
   \   00000186   2248               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   00000188   0078               LDRB     R0,[R0, #+0]
   \   0000018A   0128               CMP      R0,#+1
   \   0000018C   07D3               BCC      ??MainSide_Event_14
   \   0000018E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000190   240E               LSRS     R4,R4,#+24
   \   00000192   052C               CMP      R4,#+5
   \   00000194   03D1               BNE      ??MainSide_Event_14
   \   00000196   3800               MOVS     R0,R7
   \   00000198   ........           BL       Termostat_Event
   \   0000019C   ADE7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_14:
   \   0000019E   1C48               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001A0   0078               LDRB     R0,[R0, #+0]
   \   000001A2   0028               CMP      R0,#+0
   \   000001A4   08D1               BNE      ??MainSide_Event_15
   \   000001A6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001A8   240E               LSRS     R4,R4,#+24
   \   000001AA   092C               CMP      R4,#+9
   \   000001AC   04D1               BNE      ??MainSide_Event_15
   \   000001AE   1848               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001B0   0078               LDRB     R0,[R0, #+0]
   \   000001B2   ........           BL       Timetable_Event
   \   000001B6   A0E7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_15:
   \   000001B8   1548               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001BA   0078               LDRB     R0,[R0, #+0]
   \   000001BC   0128               CMP      R0,#+1
   \   000001BE   08D3               BCC      ??MainSide_Event_16
   \   000001C0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001C2   240E               LSRS     R4,R4,#+24
   \   000001C4   062C               CMP      R4,#+6
   \   000001C6   04D1               BNE      ??MainSide_Event_16
   \   000001C8   1148               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001CA   0078               LDRB     R0,[R0, #+0]
   \   000001CC   ........           BL       Timetable_Event
   \   000001D0   93E7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_16:
   \   000001D2   0F48               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001D4   0078               LDRB     R0,[R0, #+0]
   \   000001D6   0028               CMP      R0,#+0
   \   000001D8   08D1               BNE      ??MainSide_Event_17
   \   000001DA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001DC   240E               LSRS     R4,R4,#+24
   \   000001DE   0A2C               CMP      R4,#+10
   \   000001E0   04D1               BNE      ??MainSide_Event_17
   \   000001E2   0B48               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001E4   0078               LDRB     R0,[R0, #+0]
   \   000001E6   ........           BL       Alarm_Event
   \   000001EA   86E7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_17:
   \   000001EC   0848               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001EE   0078               LDRB     R0,[R0, #+0]
   \   000001F0   0128               CMP      R0,#+1
   \   000001F2   08D3               BCC      ??MainSide_Event_18
   \   000001F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001F6   240E               LSRS     R4,R4,#+24
   \   000001F8   072C               CMP      R4,#+7
   \   000001FA   04D1               BNE      ??MainSide_Event_18
   \   000001FC   0448               LDR      R0,??MainSide_Event_0+0x4  ;; CurrentSheet
   \   000001FE   0078               LDRB     R0,[R0, #+0]
   \   00000200   ........           BL       Alarm_Event
   \   00000204   79E7               B        ??MainSide_Event_6
   \                     ??MainSide_Event_18:
   \   00000206   0025               MOVS     R5,#+0
   \   00000208   14E0               B        ??MainSide_Event_19
   \   0000020A   C046               Nop      
   \                     ??MainSide_Event_0:
   \   0000020C   ........           DC32     g_PC_Connected
   \   00000210   ........           DC32     CurrentSheet
   \   00000214   ........           DC32     ScreenSetTab_0
   \   00000218   ........           DC32     ScreenSetTab_1
   \                     ??MainSide_Event_20:
   \   0000021C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000021E   2D0E               LSRS     R5,R5,#+24
   \   00000220   6048               LDR      R0,??MainSide_Event_4+0x38  ;; CurrentSheet
   \   00000222   0078               LDRB     R0,[R0, #+0]
   \   00000224   0A21               MOVS     R1,#+10
   \   00000226   4843               MULS     R0,R1,R0
   \   00000228   2818               ADDS     R0,R5,R0
   \   0000022A   5F49               LDR      R1,??MainSide_Event_4+0x3C  ;; MainStage
   \   0000022C   0818               ADDS     R0,R1,R0
   \   0000022E   0021               MOVS     R1,#+0
   \   00000230   4170               STRB     R1,[R0, #+1]
   \                     ??MainSide_Event_21:
   \   00000232   6D1C               ADDS     R5,R5,#+1
   \                     ??MainSide_Event_19:
   \   00000234   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000236   2D0E               LSRS     R5,R5,#+24
   \   00000238   092D               CMP      R5,#+9
   \   0000023A   00D3               BCC      .+4
   \   0000023C   5DE7               B        ??MainSide_Event_6
   \   0000023E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000240   2D0E               LSRS     R5,R5,#+24
   \   00000242   0420               MOVS     R0,#+4
   \   00000244   6843               MULS     R0,R5,R0
   \   00000246   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000248   240E               LSRS     R4,R4,#+24
   \   0000024A   5821               MOVS     R1,#+88
   \   0000024C   6143               MULS     R1,R4,R1
   \   0000024E   009A               LDR      R2,[SP, #+0]
   \   00000250   5118               ADDS     R1,R2,R1
   \   00000252   0818               ADDS     R0,R1,R0
   \   00000254   8078               LDRB     R0,[R0, #+2]
   \   00000256   0128               CMP      R0,#+1
   \   00000258   EBD3               BCC      ??MainSide_Event_21
   \   0000025A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000025C   2D0E               LSRS     R5,R5,#+24
   \   0000025E   0820               MOVS     R0,#+8
   \   00000260   6843               MULS     R0,R5,R0
   \   00000262   3818               ADDS     R0,R7,R0
   \   00000264   807C               LDRB     R0,[R0, #+18]
   \   00000266   C006               LSLS     R0,R0,#+27
   \   00000268   E3D4               BMI      ??MainSide_Event_21
   \   0000026A   82B0               SUB      SP,SP,#+8
   \   0000026C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000026E   2D0E               LSRS     R5,R5,#+24
   \   00000270   0420               MOVS     R0,#+4
   \   00000272   6843               MULS     R0,R5,R0
   \   00000274   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000276   240E               LSRS     R4,R4,#+24
   \   00000278   5821               MOVS     R1,#+88
   \   0000027A   6143               MULS     R1,R4,R1
   \   0000027C   029A               LDR      R2,[SP, #+8]
   \   0000027E   5118               ADDS     R1,R2,R1
   \   00000280   0818               ADDS     R0,R1,R0
   \   00000282   C078               LDRB     R0,[R0, #+3]
   \   00000284   0090               STR      R0,[SP, #+0]
   \   00000286   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000288   2D0E               LSRS     R5,R5,#+24
   \   0000028A   0420               MOVS     R0,#+4
   \   0000028C   6843               MULS     R0,R5,R0
   \   0000028E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000290   240E               LSRS     R4,R4,#+24
   \   00000292   5821               MOVS     R1,#+88
   \   00000294   6143               MULS     R1,R4,R1
   \   00000296   029A               LDR      R2,[SP, #+8]
   \   00000298   5118               ADDS     R1,R2,R1
   \   0000029A   0818               ADDS     R0,R1,R0
   \   0000029C   8378               LDRB     R3,[R0, #+2]
   \   0000029E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002A0   2D0E               LSRS     R5,R5,#+24
   \   000002A2   0420               MOVS     R0,#+4
   \   000002A4   6843               MULS     R0,R5,R0
   \   000002A6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002A8   240E               LSRS     R4,R4,#+24
   \   000002AA   5821               MOVS     R1,#+88
   \   000002AC   6143               MULS     R1,R4,R1
   \   000002AE   029A               LDR      R2,[SP, #+8]
   \   000002B0   5118               ADDS     R1,R2,R1
   \   000002B2   0818               ADDS     R0,R1,R0
   \   000002B4   4278               LDRB     R2,[R0, #+1]
   \   000002B6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002B8   2D0E               LSRS     R5,R5,#+24
   \   000002BA   0420               MOVS     R0,#+4
   \   000002BC   6843               MULS     R0,R5,R0
   \   000002BE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002C0   240E               LSRS     R4,R4,#+24
   \   000002C2   5821               MOVS     R1,#+88
   \   000002C4   6143               MULS     R1,R4,R1
   \   000002C6   029E               LDR      R6,[SP, #+8]
   \   000002C8   7118               ADDS     R1,R6,R1
   \   000002CA   095C               LDRB     R1,[R1, R0]
   \   000002CC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002CE   2D0E               LSRS     R5,R5,#+24
   \   000002D0   0820               MOVS     R0,#+8
   \   000002D2   6843               MULS     R0,R5,R0
   \   000002D4   3818               ADDS     R0,R7,R0
   \   000002D6   0B30               ADDS     R0,R0,#+11
   \   000002D8   ........           BL       Button
   \   000002DC   02B0               ADD      SP,SP,#+8
   \   000002DE   0126               MOVS     R6,#+1
   \   000002E0   0006               LSLS     R0,R0,#+24       ;; SignExtS R0,R0,#+24,#+24
   \   000002E2   0016               ASRS     R0,R0,#+24
   \   000002E4   0128               CMP      R0,#+1
   \   000002E6   12D1               BNE      ??MainSide_Event_22
   \   000002E8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002EA   2D0E               LSRS     R5,R5,#+24
   \   000002EC   0821               MOVS     R1,#+8
   \   000002EE   6943               MULS     R1,R5,R1
   \   000002F0   7918               ADDS     R1,R7,R1
   \   000002F2   897C               LDRB     R1,[R1, #+18]
   \   000002F4   0907               LSLS     R1,R1,#+28
   \   000002F6   0AD0               BEQ      ??MainSide_Event_22
   \   000002F8   2A49               LDR      R1,??MainSide_Event_4+0x38  ;; CurrentSheet
   \   000002FA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002FC   2D0E               LSRS     R5,R5,#+24
   \   000002FE   0822               MOVS     R2,#+8
   \   00000300   6A43               MULS     R2,R5,R2
   \   00000302   BA18               ADDS     R2,R7,R2
   \   00000304   927C               LDRB     R2,[R2, #+18]
   \   00000306   1207               LSLS     R2,R2,#+28       ;; ZeroExtS R2,R2,#+28,#+28
   \   00000308   120F               LSRS     R2,R2,#+28
   \   0000030A   521E               SUBS     R2,R2,#+1
   \   0000030C   0A70               STRB     R2,[R1, #+0]
   \                     ??MainSide_Event_22:
   \   0000030E   0006               LSLS     R0,R0,#+24       ;; SignExtS R0,R0,#+24,#+24
   \   00000310   0016               ASRS     R0,R0,#+24
   \   00000312   0228               CMP      R0,#+2
   \   00000314   82D1               BNE      ??MainSide_Event_20
   \   00000316   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000318   2D0E               LSRS     R5,R5,#+24
   \   0000031A   2248               LDR      R0,??MainSide_Event_4+0x38  ;; CurrentSheet
   \   0000031C   0078               LDRB     R0,[R0, #+0]
   \   0000031E   0A21               MOVS     R1,#+10
   \   00000320   4843               MULS     R0,R1,R0
   \   00000322   2818               ADDS     R0,R5,R0
   \   00000324   2049               LDR      R1,??MainSide_Event_4+0x3C  ;; MainStage
   \   00000326   0818               ADDS     R0,R1,R0
   \   00000328   4078               LDRB     R0,[R0, #+1]
   \   0000032A   0028               CMP      R0,#+0
   \   0000032C   00D0               BEQ      .+4
   \   0000032E   80E7               B        ??MainSide_Event_21
   \   00000330   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000332   2D0E               LSRS     R5,R5,#+24
   \   00000334   1B48               LDR      R0,??MainSide_Event_4+0x38  ;; CurrentSheet
   \   00000336   0078               LDRB     R0,[R0, #+0]
   \   00000338   0A21               MOVS     R1,#+10
   \   0000033A   4843               MULS     R0,R1,R0
   \   0000033C   2818               ADDS     R0,R5,R0
   \   0000033E   1A49               LDR      R1,??MainSide_Event_4+0x3C  ;; MainStage
   \   00000340   0818               ADDS     R0,R1,R0
   \   00000342   0121               MOVS     R1,#+1
   \   00000344   4170               STRB     R1,[R0, #+1]
   \   00000346   194A               LDR      R2,??MainSide_Event_4+0x40  ;; g_NextTimeProgram
   \   00000348   9446               MOV      R12,R2
   \   0000034A   1348               LDR      R0,??MainSide_Event_4+0x2C  ;; g_counter
   \   0000034C   03C8               LDM      R0!,{R0,R1}
   \   0000034E   0200               MOVS     R2,R0
   \   00000350   0B00               MOVS     R3,R1
   \   00000352   AF20               MOVS     R0,#+175
   \   00000354   4000               LSLS     R0,R0,#+1        ;; #+350
   \   00000356   0021               MOVS     R1,#+0
   \   00000358   8018               ADDS     R0,R0,R2
   \   0000035A   5941               ADCS     R1,R1,R3
   \   0000035C   6246               MOV      R2,R12
   \   0000035E   03C2               STM      R2!,{R0,R1}
   \   00000360   083A               SUBS     R2,R2,#+8
   \   00000362   1348               LDR      R0,??MainSide_Event_4+0x44  ;; gProg
   \   00000364   ........           BL       Program
   \   00000368   63E7               B        ??MainSide_Event_21
   \   0000036A   C046               Nop      
   \                     ??MainSide_Event_4:
   \   0000036C   ........           DC32     Y_down
   \   00000370   ........           DC32     X_down
   \   00000374   ........           DC32     Y_up
   \   00000378   ........           DC32     X_up
   \   0000037C   ........           DC32     SheetHistoryIndex
   \   00000380   ........           DC32     SheetHistory
   \   00000384   ........           DC32     g_level
   \   00000388   ........           DC32     g_NeedPass
   \   0000038C   ........           DC32     MenuLevel
   \   00000390   E9D71300           DC32     0x13d7e9
   \   00000394   ........           DC32     ButtonBipCounter
   \   00000398   ........           DC32     g_counter
   \   0000039C   30F4FFFF           DC32     0xfffff430
   \   000003A0   ........           DC32     ??Xdown
   \   000003A4   ........           DC32     CurrentSheet
   \   000003A8   ........           DC32     MainStage
   \   000003AC   ........           DC32     g_NextTimeProgram
   \   000003B0   ........           DC32     gProg

   \                                 In section .bss, align 1
   \                     ??Xdown:
   \   00000000                      DS8 1
   1077          
   1078          
   1079          
   1080          
   1081          
   1082          //*-----------------------------------------------------------------------------
   1083          //* Nazwa funkcji :    MainSide_Refresh
   1084          //* Funkcja strony g³ównej menu
   1085          //*-----------------------------------------------------------------------------
   1086          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1087          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1088          void MainSide_Refresh(_Screen* ScreenLokal)
   1089          {
   \                     MainSide_Refresh:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   95B0               SUB      SP,SP,#+84
   \   00000004   0600               MOVS     R6,R0
   1090            if (!g_PC_Connected)
   \   00000006   E248               LDR      R0,??MainSide_Refresh_0  ;; g_PC_Connected
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D0               BEQ      .+6
   \   0000000E   00F077FD           BL       ??MainSide_Refresh_1
   1091            {
   1092            
   1093            char PaternDesign=(ScreenLokal->PaternDesign);
   \   00000012   3478               LDRB     R4,[R6, #+0]
   1094            
   1095            
   1096            const _ScreenPaternDesign *ScreenPaternDesign;
   1097            if (CurrentSheet==0) 
   \   00000014   DF48               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   0028               CMP      R0,#+0
   \   0000001A   01D1               BNE      ??MainSide_Refresh_2
   1098            {
   1099              ScreenPaternDesign=ScreenSetTab_0;
   \   0000001C   DE4F               LDR      R7,??MainSide_Refresh_0+0x8  ;; ScreenSetTab_0
   \   0000001E   00E0               B        ??MainSide_Refresh_3
   1100            }else{
   1101              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Refresh_2:
   \   00000020   DE4F               LDR      R7,??MainSide_Refresh_0+0xC  ;; ScreenSetTab_1
   1102            }  
   1103            
   1104          
   1105                   
   1106                
   1107            if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_3:
   \   00000022   DC48               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   00000024   0078               LDRB     R0,[R0, #+0]
   \   00000026   0028               CMP      R0,#+0
   \   00000028   08D1               BNE      ??MainSide_Refresh_4
   \   0000002A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000002C   240E               LSRS     R4,R4,#+24
   \   0000002E   082C               CMP      R4,#+8
   \   00000030   04D1               BNE      ??MainSide_Refresh_4
   \   00000032   3000               MOVS     R0,R6
   \   00000034   ........           BL       Termostat_Refresh
   \   00000038   00F0C7FC           BL       ??MainSide_Refresh_5
   1108            else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_4:
   \   0000003C   D548               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   0128               CMP      R0,#+1
   \   00000042   08D3               BCC      ??MainSide_Refresh_6
   \   00000044   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000046   240E               LSRS     R4,R4,#+24
   \   00000048   052C               CMP      R4,#+5
   \   0000004A   04D1               BNE      ??MainSide_Refresh_6
   \   0000004C   3000               MOVS     R0,R6
   \   0000004E   ........           BL       Termostat_Refresh
   \   00000052   00F0BAFC           BL       ??MainSide_Refresh_5
   1109                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {  }
   \                     ??MainSide_Refresh_6:
   \   00000056   CF48               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   05D1               BNE      ??MainSide_Refresh_7
   \   0000005E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000060   240E               LSRS     R4,R4,#+24
   \   00000062   092C               CMP      R4,#+9
   \   00000064   01D1               BNE      .+6
   \   00000066   00F0B0FC           BL       ??MainSide_Refresh_5
   1110                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {  }    
   \                     ??MainSide_Refresh_7:
   \   0000006A   CA48               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   0128               CMP      R0,#+1
   \   00000070   05D3               BCC      ??MainSide_Refresh_8
   \   00000072   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000074   240E               LSRS     R4,R4,#+24
   \   00000076   062C               CMP      R4,#+6
   \   00000078   01D1               BNE      .+6
   \   0000007A   00F0A6FC           BL       ??MainSide_Refresh_5
   1111                #ifdef __ALARM
   1112                  else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Refresh(CurrentSheet);}
   \                     ??MainSide_Refresh_8:
   \   0000007E   C548               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   00000080   0078               LDRB     R0,[R0, #+0]
   \   00000082   0028               CMP      R0,#+0
   \   00000084   09D1               BNE      ??MainSide_Refresh_9
   \   00000086   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000088   240E               LSRS     R4,R4,#+24
   \   0000008A   0A2C               CMP      R4,#+10
   \   0000008C   05D1               BNE      ??MainSide_Refresh_9
   \   0000008E   C148               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   00000090   0078               LDRB     R0,[R0, #+0]
   \   00000092   ........           BL       Alarm_Refresh
   \   00000096   00F098FC           BL       ??MainSide_Refresh_5
   1113                  else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Refresh(CurrentSheet);} 
   \                     ??MainSide_Refresh_9:
   \   0000009A   BE48               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   0000009C   0078               LDRB     R0,[R0, #+0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   09D3               BCC      ??MainSide_Refresh_10
   \   000000A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   072C               CMP      R4,#+7
   \   000000A8   05D1               BNE      ??MainSide_Refresh_10
   \   000000AA   BA48               LDR      R0,??MainSide_Refresh_0+0x4  ;; CurrentSheet
   \   000000AC   0078               LDRB     R0,[R0, #+0]
   \   000000AE   ........           BL       Alarm_Refresh
   \   000000B2   00F08AFC           BL       ??MainSide_Refresh_5
   1114                #endif
   1115                else   
   1116                {  
   1117            
   1118                       char val;
   1119                     
   1120                    //on/off
   1121                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Refresh_10:
   \   000000B6   0025               MOVS     R5,#+0
   \   000000B8   52E0               B        ??MainSide_Refresh_11
   1122                      {
   1123                          if ((ScreenLokal->Graph[i].Type==GraphOnOff)&& (ScreenLokal->Graph[i].PlusOnOff==0) && (ScreenPaternDesign[PaternDesign].Graph[i].Width>0))
   1124                          {
   1125                            //je¿eli wejcie
   1126                            if ((ScreenLokal->Graph[i].Nr>=0) && (ScreenLokal->Graph[i].Nr!=0xFF))
                                                                ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   1127                            {
   1128                               val=(PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port));
   1129                            }//je¿eli zmienna
   1130                            else
   1131                            {
   1132                               val=(Variables[ScreenLokal->Graph[i].Port/8]>>(ScreenLokal->Graph[i].Port%8)) & 0x1;
   1133                            }
   1134                            
   1135                            
   1136                            if (val)
   1137                             {
   1138                                Label(Speech[g_leng].Wl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1139                             }else{
   1140                                Label(Speech[g_leng].Wyl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1141                             }
   1142                          }else if ((((ScreenLokal->Graph[i].Type==GraphText)  && (ScreenLokal->Graph[i].PlusOnOff==1)) || (ScreenLokal->Graph[i].Type==GraphOnOff)) && (ScreenPaternDesign[PaternDesign].Graph[i].Width>0))
   1143                          {
   1144                             //je¿eli wejcie
   1145                            if ((ScreenLokal->Graph[i].Nr>=0) && (ScreenLokal->Graph[i].Nr!=0xFF))
                                                                ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   1146                            {
   1147                               val=(PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port));
   1148                            }//je¿eli zmienna
   1149                            else
   1150                            {
   1151                               val=(Variables[ScreenLokal->Graph[i].Port/8]>>(ScreenLokal->Graph[i].Port%8)) & 0x1;
   1152                            }
   1153                            
   1154                            
   1155                             if (val)
   1156                             {
   1157                                Label(Speech[g_leng].Wl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1158                             }else{
   1159                                Label(Speech[g_leng].Wyl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_12:
   \   000000BA   82B0               SUB      SP,SP,#+8
   \   000000BC   0020               MOVS     R0,#+0
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   7F21               MOVS     R1,#+127
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   03B4               PUSH     {R0,R1}
   \   000000C6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000C8   2D0E               LSRS     R5,R5,#+24
   \   000000CA   0420               MOVS     R0,#+4
   \   000000CC   6843               MULS     R0,R5,R0
   \   000000CE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D0   240E               LSRS     R4,R4,#+24
   \   000000D2   5821               MOVS     R1,#+88
   \   000000D4   6143               MULS     R1,R4,R1
   \   000000D6   7918               ADDS     R1,R7,R1
   \   000000D8   0818               ADDS     R0,R1,R0
   \   000000DA   2630               ADDS     R0,R0,#+38
   \   000000DC   0178               LDRB     R1,[R0, #+0]
   \   000000DE   0320               MOVS     R0,#+3
   \   000000E0   03B4               PUSH     {R0,R1}
   \   000000E2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E4   2D0E               LSRS     R5,R5,#+24
   \   000000E6   0420               MOVS     R0,#+4
   \   000000E8   6843               MULS     R0,R5,R0
   \   000000EA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000EC   240E               LSRS     R4,R4,#+24
   \   000000EE   5821               MOVS     R1,#+88
   \   000000F0   6143               MULS     R1,R4,R1
   \   000000F2   7918               ADDS     R1,R7,R1
   \   000000F4   0818               ADDS     R0,R1,R0
   \   000000F6   2530               ADDS     R0,R0,#+37
   \   000000F8   0178               LDRB     R1,[R0, #+0]
   \   000000FA   02B5               PUSH     {R1,LR}
   \   000000FC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000FE   2D0E               LSRS     R5,R5,#+24
   \   00000100   0420               MOVS     R0,#+4
   \   00000102   6843               MULS     R0,R5,R0
   \   00000104   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000106   240E               LSRS     R4,R4,#+24
   \   00000108   5821               MOVS     R1,#+88
   \   0000010A   6143               MULS     R1,R4,R1
   \   0000010C   7918               ADDS     R1,R7,R1
   \   0000010E   0818               ADDS     R0,R1,R0
   \   00000110   2730               ADDS     R0,R0,#+39
   \   00000112   0078               LDRB     R0,[R0, #+0]
   \   00000114   0221               MOVS     R1,#+2
   \   00000116   ........           BL       __aeabi_idivmod
   \   0000011A   0099               LDR      R1,[SP, #0]
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0B18               ADDS     R3,R1,R0
   \   00000120   DB1F               SUBS     R3,R3,#+7
   \   00000122   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000124   2D0E               LSRS     R5,R5,#+24
   \   00000126   0420               MOVS     R0,#+4
   \   00000128   6843               MULS     R0,R5,R0
   \   0000012A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000012C   240E               LSRS     R4,R4,#+24
   \   0000012E   5821               MOVS     R1,#+88
   \   00000130   6143               MULS     R1,R4,R1
   \   00000132   7918               ADDS     R1,R7,R1
   \   00000134   0818               ADDS     R0,R1,R0
   \   00000136   2430               ADDS     R0,R0,#+36
   \   00000138   0278               LDRB     R2,[R0, #+0]
   \   0000013A   0221               MOVS     R1,#+2
   \   0000013C   02B5               PUSH     {R1,LR}
   \   0000013E   9446               MOV      R12,R2
   \   00000140   C321               MOVS     R1,#+195
   \   00000142   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   00000144   9648               LDR      R0,??MainSide_Refresh_0+0x10  ;; g_leng
   \   00000146   0068               LDR      R0,[R0, #+0]
   \   00000148   964A               LDR      R2,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   0000014A   5043               MULS     R0,R2,R0
   \   0000014C   964A               LDR      R2,??MainSide_Refresh_0+0x18  ;; Speech
   \   0000014E   1018               ADDS     R0,R2,R0
   \   00000150   4018               ADDS     R0,R0,R1
   \   00000152   6246               MOV      R2,R12
   \   00000154   0099               LDR      R1,[SP, #0]
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   ........           BL       Label
   \   0000015C   06B0               ADD      SP,SP,#+24
   1160                             }
   \                     ??MainSide_Refresh_13:
   \   0000015E   6D1C               ADDS     R5,R5,#+1
   \                     ??MainSide_Refresh_11:
   \   00000160   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000162   2D0E               LSRS     R5,R5,#+24
   \   00000164   042D               CMP      R5,#+4
   \   00000166   00D3               BCC      .+4
   \   00000168   EFE1               B        ??MainSide_Refresh_14
   \   0000016A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000016C   2D0E               LSRS     R5,R5,#+24
   \   0000016E   0720               MOVS     R0,#+7
   \   00000170   6843               MULS     R0,R5,R0
   \   00000172   3018               ADDS     R0,R6,R0
   \   00000174   5330               ADDS     R0,R0,#+83
   \   00000176   0078               LDRB     R0,[R0, #+0]
   \   00000178   0B28               CMP      R0,#+11
   \   0000017A   00D0               BEQ      .+4
   \   0000017C   1CE1               B        ??MainSide_Refresh_15
   \   0000017E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000180   2D0E               LSRS     R5,R5,#+24
   \   00000182   0720               MOVS     R0,#+7
   \   00000184   6843               MULS     R0,R5,R0
   \   00000186   3018               ADDS     R0,R6,R0
   \   00000188   5930               ADDS     R0,R0,#+89
   \   0000018A   0078               LDRB     R0,[R0, #+0]
   \   0000018C   C007               LSLS     R0,R0,#+31
   \   0000018E   00D5               BPL      .+4
   \   00000190   12E1               B        ??MainSide_Refresh_15
   \   00000192   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000194   2D0E               LSRS     R5,R5,#+24
   \   00000196   0420               MOVS     R0,#+4
   \   00000198   6843               MULS     R0,R5,R0
   \   0000019A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000019C   240E               LSRS     R4,R4,#+24
   \   0000019E   5821               MOVS     R1,#+88
   \   000001A0   6143               MULS     R1,R4,R1
   \   000001A2   7918               ADDS     R1,R7,R1
   \   000001A4   0818               ADDS     R0,R1,R0
   \   000001A6   2630               ADDS     R0,R0,#+38
   \   000001A8   0078               LDRB     R0,[R0, #+0]
   \   000001AA   0128               CMP      R0,#+1
   \   000001AC   00D2               BCS      .+4
   \   000001AE   03E1               B        ??MainSide_Refresh_15
   \   000001B0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001B2   2D0E               LSRS     R5,R5,#+24
   \   000001B4   0720               MOVS     R0,#+7
   \   000001B6   6843               MULS     R0,R5,R0
   \   000001B8   3018               ADDS     R0,R6,R0
   \   000001BA   5730               ADDS     R0,R0,#+87
   \   000001BC   0078               LDRB     R0,[R0, #+0]
   \   000001BE   0028               CMP      R0,#+0
   \   000001C0   21D4               BMI      ??MainSide_Refresh_16
   \   000001C2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001C4   2D0E               LSRS     R5,R5,#+24
   \   000001C6   0720               MOVS     R0,#+7
   \   000001C8   6843               MULS     R0,R5,R0
   \   000001CA   3018               ADDS     R0,R6,R0
   \   000001CC   5730               ADDS     R0,R0,#+87
   \   000001CE   0078               LDRB     R0,[R0, #+0]
   \   000001D0   FF28               CMP      R0,#+255
   \   000001D2   18D0               BEQ      ??MainSide_Refresh_16
   \   000001D4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001D6   2D0E               LSRS     R5,R5,#+24
   \   000001D8   0720               MOVS     R0,#+7
   \   000001DA   6843               MULS     R0,R5,R0
   \   000001DC   3018               ADDS     R0,R6,R0
   \   000001DE   5830               ADDS     R0,R0,#+88
   \   000001E0   0178               LDRB     R1,[R0, #+0]
   \   000001E2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001E4   2D0E               LSRS     R5,R5,#+24
   \   000001E6   0720               MOVS     R0,#+7
   \   000001E8   6843               MULS     R0,R5,R0
   \   000001EA   3018               ADDS     R0,R6,R0
   \   000001EC   5730               ADDS     R0,R0,#+87
   \   000001EE   0078               LDRB     R0,[R0, #+0]
   \   000001F0   1622               MOVS     R2,#+22
   \   000001F2   5043               MULS     R0,R2,R0
   \   000001F4   6D4A               LDR      R2,??MainSide_Refresh_0+0x1C  ;; MainStage
   \   000001F6   1018               ADDS     R0,R2,R0
   \   000001F8   A030               ADDS     R0,R0,#+160
   \   000001FA   0088               LDRH     R0,[R0, #+0]
   \   000001FC   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000001FE   0014               ASRS     R0,R0,#+16
   \   00000200   ........           BL       PortStageRead
   \   00000204   1BE0               B        ??MainSide_Refresh_17
   \                     ??MainSide_Refresh_16:
   \   00000206   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000208   2D0E               LSRS     R5,R5,#+24
   \   0000020A   0720               MOVS     R0,#+7
   \   0000020C   6843               MULS     R0,R5,R0
   \   0000020E   3018               ADDS     R0,R6,R0
   \   00000210   5830               ADDS     R0,R0,#+88
   \   00000212   0078               LDRB     R0,[R0, #+0]
   \   00000214   0821               MOVS     R1,#+8
   \   00000216   ........           BL       __aeabi_idivmod
   \   0000021A   6549               LDR      R1,??MainSide_Refresh_0+0x20  ;; Variables
   \   0000021C   0A5C               LDRB     R2,[R1, R0]
   \   0000021E   04B5               PUSH     {R2,LR}
   \   00000220   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000222   2D0E               LSRS     R5,R5,#+24
   \   00000224   0720               MOVS     R0,#+7
   \   00000226   6843               MULS     R0,R5,R0
   \   00000228   3018               ADDS     R0,R6,R0
   \   0000022A   5830               ADDS     R0,R0,#+88
   \   0000022C   0078               LDRB     R0,[R0, #+0]
   \   0000022E   0821               MOVS     R1,#+8
   \   00000230   ........           BL       __aeabi_idivmod
   \   00000234   009A               LDR      R2,[SP, #0]
   \   00000236   02B0               ADD      SP,SP,#+8
   \   00000238   0A41               ASRS     R2,R2,R1
   \   0000023A   0120               MOVS     R0,#+1
   \   0000023C   1040               ANDS     R0,R0,R2
   \                     ??MainSide_Refresh_17:
   \   0000023E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000240   000E               LSRS     R0,R0,#+24
   \   00000242   0028               CMP      R0,#+0
   \   00000244   51D0               BEQ      ??MainSide_Refresh_18
   \   00000246   82B0               SUB      SP,SP,#+8
   \   00000248   0020               MOVS     R0,#+0
   \   0000024A   0090               STR      R0,[SP, #+0]
   \   0000024C   7F21               MOVS     R1,#+127
   \   0000024E   0120               MOVS     R0,#+1
   \   00000250   03B4               PUSH     {R0,R1}
   \   00000252   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000254   2D0E               LSRS     R5,R5,#+24
   \   00000256   0420               MOVS     R0,#+4
   \   00000258   6843               MULS     R0,R5,R0
   \   0000025A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000025C   240E               LSRS     R4,R4,#+24
   \   0000025E   5821               MOVS     R1,#+88
   \   00000260   6143               MULS     R1,R4,R1
   \   00000262   7918               ADDS     R1,R7,R1
   \   00000264   0818               ADDS     R0,R1,R0
   \   00000266   2630               ADDS     R0,R0,#+38
   \   00000268   0178               LDRB     R1,[R0, #+0]
   \   0000026A   0320               MOVS     R0,#+3
   \   0000026C   03B4               PUSH     {R0,R1}
   \   0000026E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000270   2D0E               LSRS     R5,R5,#+24
   \   00000272   0420               MOVS     R0,#+4
   \   00000274   6843               MULS     R0,R5,R0
   \   00000276   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000278   240E               LSRS     R4,R4,#+24
   \   0000027A   5821               MOVS     R1,#+88
   \   0000027C   6143               MULS     R1,R4,R1
   \   0000027E   7918               ADDS     R1,R7,R1
   \   00000280   0818               ADDS     R0,R1,R0
   \   00000282   2530               ADDS     R0,R0,#+37
   \   00000284   0178               LDRB     R1,[R0, #+0]
   \   00000286   02B5               PUSH     {R1,LR}
   \   00000288   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000028A   2D0E               LSRS     R5,R5,#+24
   \   0000028C   0420               MOVS     R0,#+4
   \   0000028E   6843               MULS     R0,R5,R0
   \   00000290   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000292   240E               LSRS     R4,R4,#+24
   \   00000294   5821               MOVS     R1,#+88
   \   00000296   6143               MULS     R1,R4,R1
   \   00000298   7918               ADDS     R1,R7,R1
   \   0000029A   0818               ADDS     R0,R1,R0
   \   0000029C   2730               ADDS     R0,R0,#+39
   \   0000029E   0078               LDRB     R0,[R0, #+0]
   \   000002A0   0221               MOVS     R1,#+2
   \   000002A2   ........           BL       __aeabi_idivmod
   \   000002A6   0099               LDR      R1,[SP, #0]
   \   000002A8   02B0               ADD      SP,SP,#+8
   \   000002AA   0B18               ADDS     R3,R1,R0
   \   000002AC   DB1E               SUBS     R3,R3,#+3
   \   000002AE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002B0   2D0E               LSRS     R5,R5,#+24
   \   000002B2   0420               MOVS     R0,#+4
   \   000002B4   6843               MULS     R0,R5,R0
   \   000002B6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002B8   240E               LSRS     R4,R4,#+24
   \   000002BA   5821               MOVS     R1,#+88
   \   000002BC   6143               MULS     R1,R4,R1
   \   000002BE   7918               ADDS     R1,R7,R1
   \   000002C0   0818               ADDS     R0,R1,R0
   \   000002C2   2430               ADDS     R0,R0,#+36
   \   000002C4   0278               LDRB     R2,[R0, #+0]
   \   000002C6   0221               MOVS     R1,#+2
   \   000002C8   02B5               PUSH     {R1,LR}
   \   000002CA   9446               MOV      R12,R2
   \   000002CC   3949               LDR      R1,??MainSide_Refresh_0+0x24  ;; 0x627
   \   000002CE   3448               LDR      R0,??MainSide_Refresh_0+0x10  ;; g_leng
   \   000002D0   0068               LDR      R0,[R0, #+0]
   \   000002D2   344A               LDR      R2,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   000002D4   5043               MULS     R0,R2,R0
   \   000002D6   344A               LDR      R2,??MainSide_Refresh_0+0x18  ;; Speech
   \   000002D8   1018               ADDS     R0,R2,R0
   \   000002DA   4018               ADDS     R0,R0,R1
   \   000002DC   6246               MOV      R2,R12
   \   000002DE   0099               LDR      R1,[SP, #0]
   \   000002E0   02B0               ADD      SP,SP,#+8
   \   000002E2   ........           BL       Label
   \   000002E6   06B0               ADD      SP,SP,#+24
   \   000002E8   39E7               B        ??MainSide_Refresh_13
   \                     ??MainSide_Refresh_18:
   \   000002EA   82B0               SUB      SP,SP,#+8
   \   000002EC   0020               MOVS     R0,#+0
   \   000002EE   0090               STR      R0,[SP, #+0]
   \   000002F0   7F21               MOVS     R1,#+127
   \   000002F2   0120               MOVS     R0,#+1
   \   000002F4   03B4               PUSH     {R0,R1}
   \   000002F6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002F8   2D0E               LSRS     R5,R5,#+24
   \   000002FA   0420               MOVS     R0,#+4
   \   000002FC   6843               MULS     R0,R5,R0
   \   000002FE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000300   240E               LSRS     R4,R4,#+24
   \   00000302   5821               MOVS     R1,#+88
   \   00000304   6143               MULS     R1,R4,R1
   \   00000306   7918               ADDS     R1,R7,R1
   \   00000308   0818               ADDS     R0,R1,R0
   \   0000030A   2630               ADDS     R0,R0,#+38
   \   0000030C   0178               LDRB     R1,[R0, #+0]
   \   0000030E   0320               MOVS     R0,#+3
   \   00000310   03B4               PUSH     {R0,R1}
   \   00000312   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000314   2D0E               LSRS     R5,R5,#+24
   \   00000316   0420               MOVS     R0,#+4
   \   00000318   6843               MULS     R0,R5,R0
   \   0000031A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000031C   240E               LSRS     R4,R4,#+24
   \   0000031E   5821               MOVS     R1,#+88
   \   00000320   6143               MULS     R1,R4,R1
   \   00000322   7918               ADDS     R1,R7,R1
   \   00000324   0818               ADDS     R0,R1,R0
   \   00000326   2530               ADDS     R0,R0,#+37
   \   00000328   0178               LDRB     R1,[R0, #+0]
   \   0000032A   02B5               PUSH     {R1,LR}
   \   0000032C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000032E   2D0E               LSRS     R5,R5,#+24
   \   00000330   0420               MOVS     R0,#+4
   \   00000332   6843               MULS     R0,R5,R0
   \   00000334   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000336   240E               LSRS     R4,R4,#+24
   \   00000338   5821               MOVS     R1,#+88
   \   0000033A   6143               MULS     R1,R4,R1
   \   0000033C   7918               ADDS     R1,R7,R1
   \   0000033E   0818               ADDS     R0,R1,R0
   \   00000340   2730               ADDS     R0,R0,#+39
   \   00000342   0078               LDRB     R0,[R0, #+0]
   \   00000344   0221               MOVS     R1,#+2
   \   00000346   ........           BL       __aeabi_idivmod
   \   0000034A   0099               LDR      R1,[SP, #0]
   \   0000034C   02B0               ADD      SP,SP,#+8
   \   0000034E   0B18               ADDS     R3,R1,R0
   \   00000350   DB1E               SUBS     R3,R3,#+3
   \   00000352   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000354   2D0E               LSRS     R5,R5,#+24
   \   00000356   0420               MOVS     R0,#+4
   \   00000358   6843               MULS     R0,R5,R0
   \   0000035A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000035C   240E               LSRS     R4,R4,#+24
   \   0000035E   5821               MOVS     R1,#+88
   \   00000360   6143               MULS     R1,R4,R1
   \   00000362   7918               ADDS     R1,R7,R1
   \   00000364   0818               ADDS     R0,R1,R0
   \   00000366   2430               ADDS     R0,R0,#+36
   \   00000368   0278               LDRB     R2,[R0, #+0]
   \   0000036A   0221               MOVS     R1,#+2
   \   0000036C   02B5               PUSH     {R1,LR}
   \   0000036E   9446               MOV      R12,R2
   \   00000370   C321               MOVS     R1,#+195
   \   00000372   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   00000374   0A48               LDR      R0,??MainSide_Refresh_0+0x10  ;; g_leng
   \   00000376   0068               LDR      R0,[R0, #+0]
   \   00000378   0A4A               LDR      R2,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   0000037A   5043               MULS     R0,R2,R0
   \   0000037C   0A4A               LDR      R2,??MainSide_Refresh_0+0x18  ;; Speech
   \   0000037E   1018               ADDS     R0,R2,R0
   \   00000380   4018               ADDS     R0,R0,R1
   \   00000382   6246               MOV      R2,R12
   \   00000384   0099               LDR      R1,[SP, #0]
   \   00000386   02B0               ADD      SP,SP,#+8
   \   00000388   ........           BL       Label
   \   0000038C   06B0               ADD      SP,SP,#+24
   \   0000038E   E6E6               B        ??MainSide_Refresh_13
   \                     ??MainSide_Refresh_0:
   \   00000390   ........           DC32     g_PC_Connected
   \   00000394   ........           DC32     CurrentSheet
   \   00000398   ........           DC32     ScreenSetTab_0
   \   0000039C   ........           DC32     ScreenSetTab_1
   \   000003A0   ........           DC32     g_leng
   \   000003A4   7D0A0000           DC32     0xa7d
   \   000003A8   ........           DC32     Speech
   \   000003AC   ........           DC32     MainStage
   \   000003B0   ........           DC32     Variables
   \   000003B4   27060000           DC32     0x627
   \                     ??MainSide_Refresh_15:
   \   000003B8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003BA   2D0E               LSRS     R5,R5,#+24
   \   000003BC   0720               MOVS     R0,#+7
   \   000003BE   6843               MULS     R0,R5,R0
   \   000003C0   3018               ADDS     R0,R6,R0
   \   000003C2   5330               ADDS     R0,R0,#+83
   \   000003C4   0078               LDRB     R0,[R0, #+0]
   \   000003C6   0828               CMP      R0,#+8
   \   000003C8   08D1               BNE      ??MainSide_Refresh_19
   \   000003CA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003CC   2D0E               LSRS     R5,R5,#+24
   \   000003CE   0720               MOVS     R0,#+7
   \   000003D0   6843               MULS     R0,R5,R0
   \   000003D2   3018               ADDS     R0,R6,R0
   \   000003D4   5930               ADDS     R0,R0,#+89
   \   000003D6   0078               LDRB     R0,[R0, #+0]
   \   000003D8   C007               LSLS     R0,R0,#+31
   \   000003DA   09D4               BMI      ??MainSide_Refresh_20
   \                     ??MainSide_Refresh_19:
   \   000003DC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003DE   2D0E               LSRS     R5,R5,#+24
   \   000003E0   0720               MOVS     R0,#+7
   \   000003E2   6843               MULS     R0,R5,R0
   \   000003E4   3018               ADDS     R0,R6,R0
   \   000003E6   5330               ADDS     R0,R0,#+83
   \   000003E8   0078               LDRB     R0,[R0, #+0]
   \   000003EA   0B28               CMP      R0,#+11
   \   000003EC   00D0               BEQ      .+4
   \   000003EE   B6E6               B        ??MainSide_Refresh_13
   \                     ??MainSide_Refresh_20:
   \   000003F0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003F2   2D0E               LSRS     R5,R5,#+24
   \   000003F4   0420               MOVS     R0,#+4
   \   000003F6   6843               MULS     R0,R5,R0
   \   000003F8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003FA   240E               LSRS     R4,R4,#+24
   \   000003FC   5821               MOVS     R1,#+88
   \   000003FE   6143               MULS     R1,R4,R1
   \   00000400   7918               ADDS     R1,R7,R1
   \   00000402   0818               ADDS     R0,R1,R0
   \   00000404   2630               ADDS     R0,R0,#+38
   \   00000406   0078               LDRB     R0,[R0, #+0]
   \   00000408   0128               CMP      R0,#+1
   \   0000040A   00D2               BCS      .+4
   \   0000040C   A7E6               B        ??MainSide_Refresh_13
   \   0000040E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000410   2D0E               LSRS     R5,R5,#+24
   \   00000412   0720               MOVS     R0,#+7
   \   00000414   6843               MULS     R0,R5,R0
   \   00000416   3018               ADDS     R0,R6,R0
   \   00000418   5730               ADDS     R0,R0,#+87
   \   0000041A   0078               LDRB     R0,[R0, #+0]
   \   0000041C   0028               CMP      R0,#+0
   \   0000041E   21D4               BMI      ??MainSide_Refresh_21
   \   00000420   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000422   2D0E               LSRS     R5,R5,#+24
   \   00000424   0720               MOVS     R0,#+7
   \   00000426   6843               MULS     R0,R5,R0
   \   00000428   3018               ADDS     R0,R6,R0
   \   0000042A   5730               ADDS     R0,R0,#+87
   \   0000042C   0078               LDRB     R0,[R0, #+0]
   \   0000042E   FF28               CMP      R0,#+255
   \   00000430   18D0               BEQ      ??MainSide_Refresh_21
   \   00000432   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000434   2D0E               LSRS     R5,R5,#+24
   \   00000436   0720               MOVS     R0,#+7
   \   00000438   6843               MULS     R0,R5,R0
   \   0000043A   3018               ADDS     R0,R6,R0
   \   0000043C   5830               ADDS     R0,R0,#+88
   \   0000043E   0178               LDRB     R1,[R0, #+0]
   \   00000440   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000442   2D0E               LSRS     R5,R5,#+24
   \   00000444   0720               MOVS     R0,#+7
   \   00000446   6843               MULS     R0,R5,R0
   \   00000448   3018               ADDS     R0,R6,R0
   \   0000044A   5730               ADDS     R0,R0,#+87
   \   0000044C   0078               LDRB     R0,[R0, #+0]
   \   0000044E   1622               MOVS     R2,#+22
   \   00000450   5043               MULS     R0,R2,R0
   \   00000452   C24A               LDR      R2,??MainSide_Refresh_22  ;; MainStage
   \   00000454   1018               ADDS     R0,R2,R0
   \   00000456   A030               ADDS     R0,R0,#+160
   \   00000458   0088               LDRH     R0,[R0, #+0]
   \   0000045A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000045C   0014               ASRS     R0,R0,#+16
   \   0000045E   ........           BL       PortStageRead
   \   00000462   1BE0               B        ??MainSide_Refresh_23
   \                     ??MainSide_Refresh_21:
   \   00000464   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000466   2D0E               LSRS     R5,R5,#+24
   \   00000468   0720               MOVS     R0,#+7
   \   0000046A   6843               MULS     R0,R5,R0
   \   0000046C   3018               ADDS     R0,R6,R0
   \   0000046E   5830               ADDS     R0,R0,#+88
   \   00000470   0078               LDRB     R0,[R0, #+0]
   \   00000472   0821               MOVS     R1,#+8
   \   00000474   ........           BL       __aeabi_idivmod
   \   00000478   B949               LDR      R1,??MainSide_Refresh_22+0x4  ;; Variables
   \   0000047A   0A5C               LDRB     R2,[R1, R0]
   \   0000047C   04B5               PUSH     {R2,LR}
   \   0000047E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000480   2D0E               LSRS     R5,R5,#+24
   \   00000482   0720               MOVS     R0,#+7
   \   00000484   6843               MULS     R0,R5,R0
   \   00000486   3018               ADDS     R0,R6,R0
   \   00000488   5830               ADDS     R0,R0,#+88
   \   0000048A   0078               LDRB     R0,[R0, #+0]
   \   0000048C   0821               MOVS     R1,#+8
   \   0000048E   ........           BL       __aeabi_idivmod
   \   00000492   009A               LDR      R2,[SP, #0]
   \   00000494   02B0               ADD      SP,SP,#+8
   \   00000496   0A41               ASRS     R2,R2,R1
   \   00000498   0120               MOVS     R0,#+1
   \   0000049A   1040               ANDS     R0,R0,R2
   \                     ??MainSide_Refresh_23:
   \   0000049C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000049E   000E               LSRS     R0,R0,#+24
   \   000004A0   0028               CMP      R0,#+0
   \   000004A2   00D1               BNE      .+4
   \   000004A4   09E6               B        ??MainSide_Refresh_12
   \   000004A6   82B0               SUB      SP,SP,#+8
   \   000004A8   0020               MOVS     R0,#+0
   \   000004AA   0090               STR      R0,[SP, #+0]
   \   000004AC   7F21               MOVS     R1,#+127
   \   000004AE   0120               MOVS     R0,#+1
   \   000004B0   03B4               PUSH     {R0,R1}
   \   000004B2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004B4   2D0E               LSRS     R5,R5,#+24
   \   000004B6   0420               MOVS     R0,#+4
   \   000004B8   6843               MULS     R0,R5,R0
   \   000004BA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004BC   240E               LSRS     R4,R4,#+24
   \   000004BE   5821               MOVS     R1,#+88
   \   000004C0   6143               MULS     R1,R4,R1
   \   000004C2   7918               ADDS     R1,R7,R1
   \   000004C4   0818               ADDS     R0,R1,R0
   \   000004C6   2630               ADDS     R0,R0,#+38
   \   000004C8   0178               LDRB     R1,[R0, #+0]
   \   000004CA   0320               MOVS     R0,#+3
   \   000004CC   03B4               PUSH     {R0,R1}
   \   000004CE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004D0   2D0E               LSRS     R5,R5,#+24
   \   000004D2   0420               MOVS     R0,#+4
   \   000004D4   6843               MULS     R0,R5,R0
   \   000004D6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004D8   240E               LSRS     R4,R4,#+24
   \   000004DA   5821               MOVS     R1,#+88
   \   000004DC   6143               MULS     R1,R4,R1
   \   000004DE   7918               ADDS     R1,R7,R1
   \   000004E0   0818               ADDS     R0,R1,R0
   \   000004E2   2530               ADDS     R0,R0,#+37
   \   000004E4   0178               LDRB     R1,[R0, #+0]
   \   000004E6   02B5               PUSH     {R1,LR}
   \   000004E8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004EA   2D0E               LSRS     R5,R5,#+24
   \   000004EC   0420               MOVS     R0,#+4
   \   000004EE   6843               MULS     R0,R5,R0
   \   000004F0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004F2   240E               LSRS     R4,R4,#+24
   \   000004F4   5821               MOVS     R1,#+88
   \   000004F6   6143               MULS     R1,R4,R1
   \   000004F8   7918               ADDS     R1,R7,R1
   \   000004FA   0818               ADDS     R0,R1,R0
   \   000004FC   2730               ADDS     R0,R0,#+39
   \   000004FE   0078               LDRB     R0,[R0, #+0]
   \   00000500   0221               MOVS     R1,#+2
   \   00000502   ........           BL       __aeabi_idivmod
   \   00000506   0099               LDR      R1,[SP, #0]
   \   00000508   02B0               ADD      SP,SP,#+8
   \   0000050A   0B18               ADDS     R3,R1,R0
   \   0000050C   DB1F               SUBS     R3,R3,#+7
   \   0000050E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000510   2D0E               LSRS     R5,R5,#+24
   \   00000512   0420               MOVS     R0,#+4
   \   00000514   6843               MULS     R0,R5,R0
   \   00000516   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000518   240E               LSRS     R4,R4,#+24
   \   0000051A   5821               MOVS     R1,#+88
   \   0000051C   6143               MULS     R1,R4,R1
   \   0000051E   7918               ADDS     R1,R7,R1
   \   00000520   0818               ADDS     R0,R1,R0
   \   00000522   2430               ADDS     R0,R0,#+36
   \   00000524   0278               LDRB     R2,[R0, #+0]
   \   00000526   0221               MOVS     R1,#+2
   \   00000528   02B5               PUSH     {R1,LR}
   \   0000052A   9446               MOV      R12,R2
   \   0000052C   8D49               LDR      R1,??MainSide_Refresh_22+0x8  ;; 0x627
   \   0000052E   8E48               LDR      R0,??MainSide_Refresh_22+0xC  ;; g_leng
   \   00000530   0068               LDR      R0,[R0, #+0]
   \   00000532   8E4A               LDR      R2,??MainSide_Refresh_22+0x10  ;; 0xa7d
   \   00000534   5043               MULS     R0,R2,R0
   \   00000536   8E4A               LDR      R2,??MainSide_Refresh_22+0x14  ;; Speech
   \   00000538   1018               ADDS     R0,R2,R0
   \   0000053A   4018               ADDS     R0,R0,R1
   \   0000053C   6246               MOV      R2,R12
   \   0000053E   0099               LDR      R1,[SP, #0]
   \   00000540   02B0               ADD      SP,SP,#+8
   \   00000542   ........           BL       Label
   \   00000546   06B0               ADD      SP,SP,#+24
   \   00000548   09E6               B        ??MainSide_Refresh_13
   1161                          }
   1162                       }
   1163                    
   1164                      
   1165           
   1166                            
   1167                  //analogi
   1168                    char IlLiter=0;
   \                     ??MainSide_Refresh_14:
   \   0000054A   0025               MOVS     R5,#+0
   1169                    char txt[10]={0,0,0,0,0,0,0,0,0,0};
   \   0000054C   01A8               ADD      R0,SP,#+4
   \   0000054E   0C21               MOVS     R1,#+12
   \   00000550   ........           BL       __aeabi_memclr4
   1170                    signed short Value;         
   1171                    for (char i=0; i<ScrenAnalogNr; i++)
   \   00000554   6846               MOV      R0,SP
   \   00000556   0021               MOVS     R1,#+0
   \   00000558   0170               STRB     R1,[R0, #+0]
   \   0000055A   63E0               B        ??MainSide_Refresh_24
   1172                    {
   1173                      if ((ScreenPaternDesign[PaternDesign].Value[i].Width>0)  & ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0))))
   1174                               {
   1175                               IlLiter=0;
   1176                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
   1177          
   1178                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   1179                               {
   1180                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
   1181                               }else{ //je¿eli sygna³ wiarygodny
   1182                                   if (ScreenLokal->Analog[i].Flip)
   1183                                   {
   1184                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   1185                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
   1186                                   }else{
   1187                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Refresh_25:
   \   0000055C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000055E   090E               LSRS     R1,R1,#+24
   \   00000560   6A46               MOV      R2,SP
   \   00000562   1278               LDRB     R2,[R2, #+0]
   \   00000564   0723               MOVS     R3,#+7
   \   00000566   5A43               MULS     R2,R3,R2
   \   00000568   B218               ADDS     R2,R6,R2
   \   0000056A   5218               ADDS     R2,R2,R1
   \   0000056C   7032               ADDS     R2,R2,#+112
   \   0000056E   1278               LDRB     R2,[R2, #+0]
   \   00000570   012A               CMP      R2,#+1
   \   00000572   10D3               BCC      ??MainSide_Refresh_26
   \   00000574   6D1C               ADDS     R5,R5,#+1
   \   00000576   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000578   090E               LSRS     R1,R1,#+24
   \   0000057A   01AB               ADD      R3,SP,#+4
   \   0000057C   9C46               MOV      R12,R3
   \   0000057E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000580   090E               LSRS     R1,R1,#+24
   \   00000582   6A46               MOV      R2,SP
   \   00000584   1378               LDRB     R3,[R2, #+0]
   \   00000586   0722               MOVS     R2,#+7
   \   00000588   5343               MULS     R3,R2,R3
   \   0000058A   F218               ADDS     R2,R6,R3
   \   0000058C   5218               ADDS     R2,R2,R1
   \   0000058E   7032               ADDS     R2,R2,#+112
   \   00000590   1278               LDRB     R2,[R2, #+0]
   \   00000592   6346               MOV      R3,R12
   \   00000594   5A54               STRB     R2,[R3, R1]
   \                     ??MainSide_Refresh_26:
   \   00000596   491C               ADDS     R1,R1,#+1
   \                     ??MainSide_Refresh_27:
   \   00000598   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000059A   090E               LSRS     R1,R1,#+24
   \   0000059C   0329               CMP      R1,#+3
   \   0000059E   DDD3               BCC      ??MainSide_Refresh_25
   1188                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   000005A0   2900               MOVS     R1,R5
   \   000005A2   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000005A4   090E               LSRS     R1,R1,#+24
   \   000005A6   01AA               ADD      R2,SP,#+4
   \   000005A8   5118               ADDS     R1,R2,R1
   \   000005AA   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000005AC   0014               ASRS     R0,R0,#+16
   \   000005AE   ........           BL       sIntToStr
   \   000005B2   2D18               ADDS     R5,R5,R0
   1189                                   }
   1190                               }   
   1191                                   Label(txt,0,
   1192                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
   1193                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
   1194                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
   1195                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_28:
   \   000005B4   82B0               SUB      SP,SP,#+8
   \   000005B6   0020               MOVS     R0,#+0
   \   000005B8   0090               STR      R0,[SP, #+0]
   \   000005BA   7821               MOVS     R1,#+120
   \   000005BC   0020               MOVS     R0,#+0
   \   000005BE   03B4               PUSH     {R0,R1}
   \   000005C0   04A8               ADD      R0,SP,#+16
   \   000005C2   0078               LDRB     R0,[R0, #+0]
   \   000005C4   0421               MOVS     R1,#+4
   \   000005C6   4843               MULS     R0,R1,R0
   \   000005C8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000005CA   240E               LSRS     R4,R4,#+24
   \   000005CC   5821               MOVS     R1,#+88
   \   000005CE   6143               MULS     R1,R4,R1
   \   000005D0   7918               ADDS     R1,R7,R1
   \   000005D2   0818               ADDS     R0,R1,R0
   \   000005D4   3630               ADDS     R0,R0,#+54
   \   000005D6   0178               LDRB     R1,[R0, #+0]
   \   000005D8   2800               MOVS     R0,R5
   \   000005DA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005DC   000E               LSRS     R0,R0,#+24
   \   000005DE   03B4               PUSH     {R0,R1}
   \   000005E0   06A8               ADD      R0,SP,#+24
   \   000005E2   0078               LDRB     R0,[R0, #+0]
   \   000005E4   0421               MOVS     R1,#+4
   \   000005E6   4843               MULS     R0,R1,R0
   \   000005E8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000005EA   240E               LSRS     R4,R4,#+24
   \   000005EC   5821               MOVS     R1,#+88
   \   000005EE   6143               MULS     R1,R4,R1
   \   000005F0   7918               ADDS     R1,R7,R1
   \   000005F2   0818               ADDS     R0,R1,R0
   \   000005F4   3530               ADDS     R0,R0,#+53
   \   000005F6   0378               LDRB     R3,[R0, #+0]
   \   000005F8   06A8               ADD      R0,SP,#+24
   \   000005FA   0078               LDRB     R0,[R0, #+0]
   \   000005FC   0421               MOVS     R1,#+4
   \   000005FE   4843               MULS     R0,R1,R0
   \   00000600   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000602   240E               LSRS     R4,R4,#+24
   \   00000604   5821               MOVS     R1,#+88
   \   00000606   6143               MULS     R1,R4,R1
   \   00000608   7918               ADDS     R1,R7,R1
   \   0000060A   0818               ADDS     R0,R1,R0
   \   0000060C   3430               ADDS     R0,R0,#+52
   \   0000060E   0278               LDRB     R2,[R0, #+0]
   \   00000610   0021               MOVS     R1,#+0
   \   00000612   07A8               ADD      R0,SP,#+28
   \   00000614   ........           BL       Label
   \   00000618   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Refresh_29:
   \   0000061A   6846               MOV      R0,SP
   \   0000061C   6946               MOV      R1,SP
   \   0000061E   0978               LDRB     R1,[R1, #+0]
   \   00000620   491C               ADDS     R1,R1,#+1
   \   00000622   0170               STRB     R1,[R0, #+0]
   \                     ??MainSide_Refresh_24:
   \   00000624   6846               MOV      R0,SP
   \   00000626   0078               LDRB     R0,[R0, #+0]
   \   00000628   0428               CMP      R0,#+4
   \   0000062A   00D3               BCC      .+4
   \   0000062C   94E0               B        ??MainSide_Refresh_30
   \   0000062E   6846               MOV      R0,SP
   \   00000630   0078               LDRB     R0,[R0, #+0]
   \   00000632   0421               MOVS     R1,#+4
   \   00000634   4843               MULS     R0,R1,R0
   \   00000636   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000638   240E               LSRS     R4,R4,#+24
   \   0000063A   5821               MOVS     R1,#+88
   \   0000063C   6143               MULS     R1,R4,R1
   \   0000063E   7918               ADDS     R1,R7,R1
   \   00000640   0818               ADDS     R0,R1,R0
   \   00000642   3630               ADDS     R0,R0,#+54
   \   00000644   0178               LDRB     R1,[R0, #+0]
   \   00000646   0129               CMP      R1,#+1
   \   00000648   8041               SBCS     R0,R0,R0
   \   0000064A   C043               MVNS     R0,R0
   \   0000064C   C00F               LSRS     R0,R0,#+31
   \   0000064E   6946               MOV      R1,SP
   \   00000650   0978               LDRB     R1,[R1, #+0]
   \   00000652   0722               MOVS     R2,#+7
   \   00000654   5143               MULS     R1,R2,R1
   \   00000656   7118               ADDS     R1,R6,R1
   \   00000658   7331               ADDS     R1,R1,#+115
   \   0000065A   0978               LDRB     R1,[R1, #+0]
   \   0000065C   0129               CMP      R1,#+1
   \   0000065E   14D2               BCS      ??MainSide_Refresh_31
   \   00000660   6946               MOV      R1,SP
   \   00000662   0978               LDRB     R1,[R1, #+0]
   \   00000664   0722               MOVS     R2,#+7
   \   00000666   5143               MULS     R1,R2,R1
   \   00000668   7118               ADDS     R1,R6,R1
   \   0000066A   7331               ADDS     R1,R1,#+115
   \   0000066C   0978               LDRB     R1,[R1, #+0]
   \   0000066E   0029               CMP      R1,#+0
   \   00000670   0DD1               BNE      ??MainSide_Refresh_32
   \   00000672   6946               MOV      R1,SP
   \   00000674   0978               LDRB     R1,[R1, #+0]
   \   00000676   0722               MOVS     R2,#+7
   \   00000678   5143               MULS     R1,R2,R1
   \   0000067A   7118               ADDS     R1,R6,R1
   \   0000067C   7431               ADDS     R1,R1,#+116
   \   0000067E   0A78               LDRB     R2,[R1, #+0]
   \   00000680   012A               CMP      R2,#+1
   \   00000682   8941               SBCS     R1,R1,R1
   \   00000684   C943               MVNS     R1,R1
   \   00000686   C90F               LSRS     R1,R1,#+31
   \   00000688   02E0               B        ??MainSide_Refresh_33
   \                     ??MainSide_Refresh_31:
   \   0000068A   0121               MOVS     R1,#+1
   \   0000068C   00E0               B        ??MainSide_Refresh_33
   \                     ??MainSide_Refresh_32:
   \   0000068E   0021               MOVS     R1,#+0
   \                     ??MainSide_Refresh_33:
   \   00000690   0842               TST      R0,R1
   \   00000692   C2D0               BEQ      ??MainSide_Refresh_29
   \   00000694   0025               MOVS     R5,#+0
   \   00000696   A021               MOVS     R1,#+160
   \   00000698   6846               MOV      R0,SP
   \   0000069A   0078               LDRB     R0,[R0, #+0]
   \   0000069C   0722               MOVS     R2,#+7
   \   0000069E   5043               MULS     R0,R2,R0
   \   000006A0   3018               ADDS     R0,R6,R0
   \   000006A2   7430               ADDS     R0,R0,#+116
   \   000006A4   0078               LDRB     R0,[R0, #+0]
   \   000006A6   0222               MOVS     R2,#+2
   \   000006A8   5043               MULS     R0,R2,R0
   \   000006AA   6A46               MOV      R2,SP
   \   000006AC   1278               LDRB     R2,[R2, #+0]
   \   000006AE   0723               MOVS     R3,#+7
   \   000006B0   5A43               MULS     R2,R3,R2
   \   000006B2   B218               ADDS     R2,R6,R2
   \   000006B4   7332               ADDS     R2,R2,#+115
   \   000006B6   1278               LDRB     R2,[R2, #+0]
   \   000006B8   1623               MOVS     R3,#+22
   \   000006BA   5A43               MULS     R2,R3,R2
   \   000006BC   274B               LDR      R3,??MainSide_Refresh_22  ;; MainStage
   \   000006BE   9A18               ADDS     R2,R3,R2
   \   000006C0   1018               ADDS     R0,R2,R0
   \   000006C2   405E               LDRSH    R0,[R0, R1]
   \   000006C4   2B49               LDR      R1,??MainSide_Refresh_22+0x18  ;; 0xffff8aaa
   \   000006C6   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000006C8   0014               ASRS     R0,R0,#+16
   \   000006CA   8842               CMP      R0,R1
   \   000006CC   10D1               BNE      ??MainSide_Refresh_34
   \   000006CE   6846               MOV      R0,SP
   \   000006D0   2D21               MOVS     R1,#+45
   \   000006D2   0171               STRB     R1,[R0, #+4]
   \   000006D4   01A8               ADD      R0,SP,#+4
   \   000006D6   3F21               MOVS     R1,#+63
   \   000006D8   4170               STRB     R1,[R0, #+1]
   \   000006DA   01A8               ADD      R0,SP,#+4
   \   000006DC   3F21               MOVS     R1,#+63
   \   000006DE   8170               STRB     R1,[R0, #+2]
   \   000006E0   01A8               ADD      R0,SP,#+4
   \   000006E2   3F21               MOVS     R1,#+63
   \   000006E4   C170               STRB     R1,[R0, #+3]
   \   000006E6   01A8               ADD      R0,SP,#+4
   \   000006E8   2D21               MOVS     R1,#+45
   \   000006EA   0171               STRB     R1,[R0, #+4]
   \   000006EC   6D1D               ADDS     R5,R5,#+5
   \   000006EE   61E7               B        ??MainSide_Refresh_28
   \                     ??MainSide_Refresh_34:
   \   000006F0   6946               MOV      R1,SP
   \   000006F2   0978               LDRB     R1,[R1, #+0]
   \   000006F4   0722               MOVS     R2,#+7
   \   000006F6   5143               MULS     R1,R2,R1
   \   000006F8   7118               ADDS     R1,R6,R1
   \   000006FA   7531               ADDS     R1,R1,#+117
   \   000006FC   0978               LDRB     R1,[R1, #+0]
   \   000006FE   0029               CMP      R1,#+0
   \   00000700   28D0               BEQ      ??MainSide_Refresh_35
   \   00000702   01A9               ADD      R1,SP,#+4
   \   00000704   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000706   0014               ASRS     R0,R0,#+16
   \   00000708   ........           BL       sIntToStr
   \   0000070C   0500               MOVS     R5,R0
   \   0000070E   0020               MOVS     R0,#+0
   \                     ??MainSide_Refresh_36:
   \   00000710   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000712   000E               LSRS     R0,R0,#+24
   \   00000714   0328               CMP      R0,#+3
   \   00000716   00D3               BCC      .+4
   \   00000718   4CE7               B        ??MainSide_Refresh_28
   \   0000071A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000071C   000E               LSRS     R0,R0,#+24
   \   0000071E   6946               MOV      R1,SP
   \   00000720   0978               LDRB     R1,[R1, #+0]
   \   00000722   0722               MOVS     R2,#+7
   \   00000724   5143               MULS     R1,R2,R1
   \   00000726   7118               ADDS     R1,R6,R1
   \   00000728   0918               ADDS     R1,R1,R0
   \   0000072A   7031               ADDS     R1,R1,#+112
   \   0000072C   0978               LDRB     R1,[R1, #+0]
   \   0000072E   0129               CMP      R1,#+1
   \   00000730   0ED3               BCC      ??MainSide_Refresh_37
   \   00000732   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000734   2D0E               LSRS     R5,R5,#+24
   \   00000736   01A9               ADD      R1,SP,#+4
   \   00000738   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000073A   000E               LSRS     R0,R0,#+24
   \   0000073C   6A46               MOV      R2,SP
   \   0000073E   1278               LDRB     R2,[R2, #+0]
   \   00000740   0723               MOVS     R3,#+7
   \   00000742   5A43               MULS     R2,R3,R2
   \   00000744   B218               ADDS     R2,R6,R2
   \   00000746   1218               ADDS     R2,R2,R0
   \   00000748   7032               ADDS     R2,R2,#+112
   \   0000074A   1278               LDRB     R2,[R2, #+0]
   \   0000074C   4A55               STRB     R2,[R1, R5]
   \   0000074E   6D1C               ADDS     R5,R5,#+1
   \                     ??MainSide_Refresh_37:
   \   00000750   401C               ADDS     R0,R0,#+1
   \   00000752   DDE7               B        ??MainSide_Refresh_36
   \                     ??MainSide_Refresh_35:
   \   00000754   0021               MOVS     R1,#+0
   \   00000756   1FE7               B        ??MainSide_Refresh_27
   1196                                   
   1197                               }
   1198                    }
   1199                    
   1200                     
   1201                    
   1202                    //grafika
   1203                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Refresh_30:
   \   00000758   0025               MOVS     R5,#+0
   \   0000075A   62E0               B        ??MainSide_Refresh_38
   \                     ??MainSide_Refresh_22:
   \   0000075C   ........           DC32     MainStage
   \   00000760   ........           DC32     Variables
   \   00000764   27060000           DC32     0x627
   \   00000768   ........           DC32     g_leng
   \   0000076C   7D0A0000           DC32     0xa7d
   \   00000770   ........           DC32     Speech
   \   00000774   AA8AFFFF           DC32     0xffff8aaa
   1204                      {
   1205                        if (ScreenLokal->Graph[i].Type==GraphWartosc)
   \                     ??MainSide_Refresh_39:
   \   00000778   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000077A   2D0E               LSRS     R5,R5,#+24
   \   0000077C   0720               MOVS     R0,#+7
   \   0000077E   6843               MULS     R0,R5,R0
   \   00000780   3018               ADDS     R0,R6,R0
   \   00000782   5330               ADDS     R0,R0,#+83
   \   00000784   0078               LDRB     R0,[R0, #+0]
   \   00000786   0A28               CMP      R0,#+10
   \   00000788   4AD1               BNE      ??MainSide_Refresh_40
   1206                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \   0000078A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000078C   2D0E               LSRS     R5,R5,#+24
   \   0000078E   0420               MOVS     R0,#+4
   \   00000790   6843               MULS     R0,R5,R0
   \   00000792   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000794   240E               LSRS     R4,R4,#+24
   \   00000796   5821               MOVS     R1,#+88
   \   00000798   6143               MULS     R1,R4,R1
   \   0000079A   7918               ADDS     R1,R7,R1
   \   0000079C   0818               ADDS     R0,R1,R0
   \   0000079E   2630               ADDS     R0,R0,#+38
   \   000007A0   0078               LDRB     R0,[R0, #+0]
   \   000007A2   0128               CMP      R0,#+1
   \   000007A4   3CD3               BCC      ??MainSide_Refresh_40
   1207                        {
   1208                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
   1209                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   1210                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   1211                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
   1212                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
   1213                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000007A6   82B0               SUB      SP,SP,#+8
   \   000007A8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000007AA   2D0E               LSRS     R5,R5,#+24
   \   000007AC   0720               MOVS     R0,#+7
   \   000007AE   6843               MULS     R0,R5,R0
   \   000007B0   3018               ADDS     R0,R6,R0
   \   000007B2   5330               ADDS     R0,R0,#+83
   \   000007B4   0090               STR      R0,[SP, #+0]
   \   000007B6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000007B8   2D0E               LSRS     R5,R5,#+24
   \   000007BA   0420               MOVS     R0,#+4
   \   000007BC   6843               MULS     R0,R5,R0
   \   000007BE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000007C0   240E               LSRS     R4,R4,#+24
   \   000007C2   5821               MOVS     R1,#+88
   \   000007C4   6143               MULS     R1,R4,R1
   \   000007C6   7918               ADDS     R1,R7,R1
   \   000007C8   0818               ADDS     R0,R1,R0
   \   000007CA   2730               ADDS     R0,R0,#+39
   \   000007CC   0378               LDRB     R3,[R0, #+0]
   \   000007CE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000007D0   2D0E               LSRS     R5,R5,#+24
   \   000007D2   0420               MOVS     R0,#+4
   \   000007D4   6843               MULS     R0,R5,R0
   \   000007D6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000007D8   240E               LSRS     R4,R4,#+24
   \   000007DA   5821               MOVS     R1,#+88
   \   000007DC   6143               MULS     R1,R4,R1
   \   000007DE   7918               ADDS     R1,R7,R1
   \   000007E0   0818               ADDS     R0,R1,R0
   \   000007E2   2630               ADDS     R0,R0,#+38
   \   000007E4   0278               LDRB     R2,[R0, #+0]
   \   000007E6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000007E8   2D0E               LSRS     R5,R5,#+24
   \   000007EA   0420               MOVS     R0,#+4
   \   000007EC   6843               MULS     R0,R5,R0
   \   000007EE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000007F0   240E               LSRS     R4,R4,#+24
   \   000007F2   5821               MOVS     R1,#+88
   \   000007F4   6143               MULS     R1,R4,R1
   \   000007F6   7918               ADDS     R1,R7,R1
   \   000007F8   0818               ADDS     R0,R1,R0
   \   000007FA   2530               ADDS     R0,R0,#+37
   \   000007FC   0178               LDRB     R1,[R0, #+0]
   \   000007FE   8C46               MOV      R12,R1
   \   00000800   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000802   2D0E               LSRS     R5,R5,#+24
   \   00000804   0421               MOVS     R1,#+4
   \   00000806   6943               MULS     R1,R5,R1
   \   00000808   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000080A   240E               LSRS     R4,R4,#+24
   \   0000080C   5820               MOVS     R0,#+88
   \   0000080E   6043               MULS     R0,R4,R0
   \   00000810   3818               ADDS     R0,R7,R0
   \   00000812   4018               ADDS     R0,R0,R1
   \   00000814   2430               ADDS     R0,R0,#+36
   \   00000816   0078               LDRB     R0,[R0, #+0]
   \   00000818   6146               MOV      R1,R12
   \   0000081A   ........           BL       ScreenGraph
   \   0000081E   02B0               ADD      SP,SP,#+8
   1214                        
   1215                        }
   1216                       }
   \                     ??MainSide_Refresh_40:
   \   00000820   6D1C               ADDS     R5,R5,#+1
   \                     ??MainSide_Refresh_38:
   \   00000822   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000824   2D0E               LSRS     R5,R5,#+24
   \   00000826   042D               CMP      R5,#+4
   \   00000828   A6D3               BCC      ??MainSide_Refresh_39
   1217                   
   1218                    
   1219                    
   1220                  
   1221                      //Du¿a temperatura
   1222                      if ((ScreenPaternDesign[PaternDesign].Temperature.Width>0))
   \   0000082A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000082C   240E               LSRS     R4,R4,#+24
   \   0000082E   5820               MOVS     R0,#+88
   \   00000830   6043               MULS     R0,R4,R0
   \   00000832   3818               ADDS     R0,R7,R0
   \   00000834   4E30               ADDS     R0,R0,#+78
   \   00000836   0078               LDRB     R0,[R0, #+0]
   \   00000838   0128               CMP      R0,#+1
   \   0000083A   64D3               BCC      ??MainSide_Refresh_41
   1223                        {
   1224                            char dl=0;
   \   0000083C   0022               MOVS     R2,#+0
   1225                            signed short Value=MainStage.StageI[ScreenLokal->Analog[0].Nr].Value[ScreenLokal->Analog[0].Reg];
   \   0000083E   A020               MOVS     R0,#+160
   \   00000840   7421               MOVS     R1,#+116
   \   00000842   715C               LDRB     R1,[R6, R1]
   \   00000844   0223               MOVS     R3,#+2
   \   00000846   5943               MULS     R1,R3,R1
   \   00000848   7336               ADDS     R6,R6,#+115
   \   0000084A   3378               LDRB     R3,[R6, #+0]
   \   0000084C   1625               MOVS     R5,#+22
   \   0000084E   6B43               MULS     R3,R5,R3
   \   00000850   AD4D               LDR      R5,??MainSide_Refresh_42  ;; MainStage
   \   00000852   EB18               ADDS     R3,R5,R3
   \   00000854   5918               ADDS     R1,R3,R1
   \   00000856   085E               LDRSH    R0,[R1, R0]
   1226                            
   1227                            //je¿eli sygna³ nie wiarygodny
   1228                            if  ((Value)==(signed short)0x8AAA)          
   \   00000858   AC49               LDR      R1,??MainSide_Refresh_42+0x4  ;; 0xffff8aaa
   \   0000085A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000085C   0014               ASRS     R0,R0,#+16
   \   0000085E   8842               CMP      R0,R1
   \   00000860   13D1               BNE      ??MainSide_Refresh_43
   1229                            { 
   1230                              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \   00000862   6846               MOV      R0,SP
   \   00000864   2D21               MOVS     R1,#+45
   \   00000866   0171               STRB     R1,[R0, #+4]
   \   00000868   01A8               ADD      R0,SP,#+4
   \   0000086A   2021               MOVS     R1,#+32
   \   0000086C   4170               STRB     R1,[R0, #+1]
   \   0000086E   01A8               ADD      R0,SP,#+4
   \   00000870   3F21               MOVS     R1,#+63
   \   00000872   8170               STRB     R1,[R0, #+2]
   \   00000874   01A8               ADD      R0,SP,#+4
   \   00000876   2021               MOVS     R1,#+32
   \   00000878   C170               STRB     R1,[R0, #+3]
   \   0000087A   01A8               ADD      R0,SP,#+4
   \   0000087C   2D21               MOVS     R1,#+45
   \   0000087E   0171               STRB     R1,[R0, #+4]
   \   00000880   01A8               ADD      R0,SP,#+4
   \   00000882   0021               MOVS     R1,#+0
   \   00000884   4171               STRB     R1,[R0, #+5]
   1231                              dl=5;                    
   \   00000886   0522               MOVS     R2,#+5
   \   00000888   25E0               B        ??MainSide_Refresh_44
   1232                            }//je¿eli s³aba bateria
   1233                            else if  ((Value)&(signed short)0x8000)          
   \                     ??MainSide_Refresh_43:
   \   0000088A   A149               LDR      R1,??MainSide_Refresh_42+0x8  ;; 0xffff8000
   \   0000088C   0842               TST      R0,R1
   \   0000088E   16D0               BEQ      ??MainSide_Refresh_45
   1234                            { 
   1235                              txt[0]='B';txt[1]='A';txt[2]='T'; txt[3]='E';txt[4]='R'; txt[5]='Y'; txt[5]=0;
   \   00000890   6846               MOV      R0,SP
   \   00000892   4221               MOVS     R1,#+66
   \   00000894   0171               STRB     R1,[R0, #+4]
   \   00000896   01A8               ADD      R0,SP,#+4
   \   00000898   4121               MOVS     R1,#+65
   \   0000089A   4170               STRB     R1,[R0, #+1]
   \   0000089C   01A8               ADD      R0,SP,#+4
   \   0000089E   5421               MOVS     R1,#+84
   \   000008A0   8170               STRB     R1,[R0, #+2]
   \   000008A2   01A8               ADD      R0,SP,#+4
   \   000008A4   4521               MOVS     R1,#+69
   \   000008A6   C170               STRB     R1,[R0, #+3]
   \   000008A8   01A8               ADD      R0,SP,#+4
   \   000008AA   5221               MOVS     R1,#+82
   \   000008AC   0171               STRB     R1,[R0, #+4]
   \   000008AE   01A8               ADD      R0,SP,#+4
   \   000008B0   5921               MOVS     R1,#+89
   \   000008B2   4171               STRB     R1,[R0, #+5]
   \   000008B4   01A8               ADD      R0,SP,#+4
   \   000008B6   0021               MOVS     R1,#+0
   \   000008B8   4171               STRB     R1,[R0, #+5]
   1236                              dl=6;    
   \   000008BA   0622               MOVS     R2,#+6
   \   000008BC   0BE0               B        ??MainSide_Refresh_44
   1237                            }else{
   1238                              
   1239                              dl=sIntToStr(Value,txt);
   \                     ??MainSide_Refresh_45:
   \   000008BE   01A9               ADD      R1,SP,#+4
   \   000008C0   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000008C2   0014               ASRS     R0,R0,#+16
   \   000008C4   ........           BL       sIntToStr
   \   000008C8   0200               MOVS     R2,R0
   1240                              txt[dl++]=127;
   \   000008CA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000008CC   120E               LSRS     R2,R2,#+24
   \   000008CE   01A8               ADD      R0,SP,#+4
   \   000008D0   7F21               MOVS     R1,#+127
   \   000008D2   8154               STRB     R1,[R0, R2]
   \   000008D4   521C               ADDS     R2,R2,#+1
   1241                            }
   1242                            Label20(txt,2,0,ScreenPaternDesign[PaternDesign].Temperature.Poz.y,dl,60,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                                   ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??MainSide_Refresh_44:
   \   000008D6   82B0               SUB      SP,SP,#+8
   \   000008D8   0020               MOVS     R0,#+0
   \   000008DA   0090               STR      R0,[SP, #+0]
   \   000008DC   6921               MOVS     R1,#+105
   \   000008DE   0020               MOVS     R0,#+0
   \   000008E0   03B4               PUSH     {R0,R1}
   \   000008E2   3C21               MOVS     R1,#+60
   \   000008E4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000008E6   120E               LSRS     R2,R2,#+24
   \   000008E8   1000               MOVS     R0,R2
   \   000008EA   03B4               PUSH     {R0,R1}
   \   000008EC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000008EE   240E               LSRS     R4,R4,#+24
   \   000008F0   5820               MOVS     R0,#+88
   \   000008F2   6043               MULS     R0,R4,R0
   \   000008F4   3818               ADDS     R0,R7,R0
   \   000008F6   4D30               ADDS     R0,R0,#+77
   \   000008F8   0378               LDRB     R3,[R0, #+0]
   \   000008FA   0022               MOVS     R2,#+0
   \   000008FC   0221               MOVS     R1,#+2
   \   000008FE   07A8               ADD      R0,SP,#+28
   \   00000900   ........           BL       Label20
   \   00000904   06B0               ADD      SP,SP,#+24
   1243          
   1244                        }
   1245                        
   1246                     char time_char[9];
   1247                      //Czas
   1248                      if ((ScreenPaternDesign[PaternDesign].Time.Width>0))
   \                     ??MainSide_Refresh_41:
   \   00000906   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000908   240E               LSRS     R4,R4,#+24
   \   0000090A   5820               MOVS     R0,#+88
   \   0000090C   6043               MULS     R0,R4,R0
   \   0000090E   3818               ADDS     R0,R7,R0
   \   00000910   5230               ADDS     R0,R0,#+82
   \   00000912   0078               LDRB     R0,[R0, #+0]
   \   00000914   0128               CMP      R0,#+1
   \   00000916   27D3               BCC      ??MainSide_Refresh_46
   1249                        {                  
   1250                            
   1251                            TimeToStr(DateTime.Hour,DateTime.Minute,DateTime.Second,time_char);
   \   00000918   04AB               ADD      R3,SP,#+16
   \   0000091A   7E48               LDR      R0,??MainSide_Refresh_42+0xC  ;; DateTime + 5
   \   0000091C   0278               LDRB     R2,[R0, #+0]
   \   0000091E   7E48               LDR      R0,??MainSide_Refresh_42+0x10  ;; DateTime + 4
   \   00000920   0178               LDRB     R1,[R0, #+0]
   \   00000922   7E48               LDR      R0,??MainSide_Refresh_42+0x14  ;; DateTime + 3
   \   00000924   0078               LDRB     R0,[R0, #+0]
   \   00000926   ........           BL       TimeToStr
   1252                            time_char[8]=0;
   \   0000092A   04A8               ADD      R0,SP,#+16
   \   0000092C   0021               MOVS     R1,#+0
   \   0000092E   0172               STRB     R1,[R0, #+8]
   1253                            Label(time_char,0,
   1254                                  ScreenPaternDesign[PaternDesign].Time.Poz.x,
   1255                                  ScreenPaternDesign[PaternDesign].Time.Poz.y,8,43,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000930   82B0               SUB      SP,SP,#+8
   \   00000932   0020               MOVS     R0,#+0
   \   00000934   0090               STR      R0,[SP, #+0]
   \   00000936   7F21               MOVS     R1,#+127
   \   00000938   0120               MOVS     R0,#+1
   \   0000093A   03B4               PUSH     {R0,R1}
   \   0000093C   2B21               MOVS     R1,#+43
   \   0000093E   0820               MOVS     R0,#+8
   \   00000940   03B4               PUSH     {R0,R1}
   \   00000942   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000944   240E               LSRS     R4,R4,#+24
   \   00000946   5820               MOVS     R0,#+88
   \   00000948   6043               MULS     R0,R4,R0
   \   0000094A   3818               ADDS     R0,R7,R0
   \   0000094C   5130               ADDS     R0,R0,#+81
   \   0000094E   0378               LDRB     R3,[R0, #+0]
   \   00000950   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000952   240E               LSRS     R4,R4,#+24
   \   00000954   5820               MOVS     R0,#+88
   \   00000956   6043               MULS     R0,R4,R0
   \   00000958   3818               ADDS     R0,R7,R0
   \   0000095A   5030               ADDS     R0,R0,#+80
   \   0000095C   0278               LDRB     R2,[R0, #+0]
   \   0000095E   0021               MOVS     R1,#+0
   \   00000960   0AA8               ADD      R0,SP,#+40
   \   00000962   ........           BL       Label
   \   00000966   06B0               ADD      SP,SP,#+24
   1256                        }
   1257                    
   1258                      //Date
   1259                      if ((ScreenPaternDesign[PaternDesign].Date.Width>0))
   \                     ??MainSide_Refresh_46:
   \   00000968   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000096A   240E               LSRS     R4,R4,#+24
   \   0000096C   5820               MOVS     R0,#+88
   \   0000096E   6043               MULS     R0,R4,R0
   \   00000970   3818               ADDS     R0,R7,R0
   \   00000972   5630               ADDS     R0,R0,#+86
   \   00000974   0078               LDRB     R0,[R0, #+0]
   \   00000976   0128               CMP      R0,#+1
   \   00000978   27D3               BCC      ??MainSide_Refresh_5
   1260                        {                  
   1261                            DateToStr(DateTime.Day,DateTime.Mounth,DateTime.Year,time_char);//(char dzin, char mies, char rok, char Vstring[8])
   \   0000097A   04AB               ADD      R3,SP,#+16
   \   0000097C   6848               LDR      R0,??MainSide_Refresh_42+0x18  ;; DateTime
   \   0000097E   0278               LDRB     R2,[R0, #+0]
   \   00000980   6848               LDR      R0,??MainSide_Refresh_42+0x1C  ;; DateTime + 1
   \   00000982   0178               LDRB     R1,[R0, #+0]
   \   00000984   6848               LDR      R0,??MainSide_Refresh_42+0x20  ;; DateTime + 2
   \   00000986   0078               LDRB     R0,[R0, #+0]
   \   00000988   ........           BL       DateToStr
   1262                            time_char[8]=0;
   \   0000098C   04A8               ADD      R0,SP,#+16
   \   0000098E   0021               MOVS     R1,#+0
   \   00000990   0172               STRB     R1,[R0, #+8]
   1263                            Label(time_char,0,
   1264                                  ScreenPaternDesign[PaternDesign].Date.Poz.x,
   1265                                  ScreenPaternDesign[PaternDesign].Date.Poz.y,
   1266                                  8,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000992   82B0               SUB      SP,SP,#+8
   \   00000994   0020               MOVS     R0,#+0
   \   00000996   0090               STR      R0,[SP, #+0]
   \   00000998   7F21               MOVS     R1,#+127
   \   0000099A   0120               MOVS     R0,#+1
   \   0000099C   03B4               PUSH     {R0,R1}
   \   0000099E   2121               MOVS     R1,#+33
   \   000009A0   0820               MOVS     R0,#+8
   \   000009A2   03B4               PUSH     {R0,R1}
   \   000009A4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000009A6   240E               LSRS     R4,R4,#+24
   \   000009A8   5820               MOVS     R0,#+88
   \   000009AA   6043               MULS     R0,R4,R0
   \   000009AC   3818               ADDS     R0,R7,R0
   \   000009AE   5530               ADDS     R0,R0,#+85
   \   000009B0   0378               LDRB     R3,[R0, #+0]
   \   000009B2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000009B4   240E               LSRS     R4,R4,#+24
   \   000009B6   5820               MOVS     R0,#+88
   \   000009B8   4443               MULS     R4,R0,R4
   \   000009BA   3819               ADDS     R0,R7,R4
   \   000009BC   5430               ADDS     R0,R0,#+84
   \   000009BE   0278               LDRB     R2,[R0, #+0]
   \   000009C0   0021               MOVS     R1,#+0
   \   000009C2   0AA8               ADD      R0,SP,#+40
   \   000009C4   ........           BL       Label
   \   000009C8   06B0               ADD      SP,SP,#+24
   1267                        }          
   1268              
   1269                } 
   1270                      //wskanik ¿ycia
   1271                    if (CurrentSheet==0) 
   \                     ??MainSide_Refresh_5:
   \   000009CA   5848               LDR      R0,??MainSide_Refresh_42+0x24  ;; CurrentSheet
   \   000009CC   0078               LDRB     R0,[R0, #+0]
   \   000009CE   0028               CMP      R0,#+0
   \   000009D0   00D0               BEQ      .+4
   \   000009D2   8FE0               B        ??MainSide_Refresh_47
   1272                    {
   1273                    
   1274                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   000009D4   5648               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   000009D6   0078               LDRB     R0,[R0, #+0]
   \   000009D8   0028               CMP      R0,#+0
   \   000009DA   03D0               BEQ      ??MainSide_Refresh_48
   \   000009DC   5448               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   000009DE   0078               LDRB     R0,[R0, #+0]
   \   000009E0   0428               CMP      R0,#+4
   \   000009E2   45D3               BCC      ??MainSide_Refresh_49
   1275                      { 
   1276                        
   1277                        char ekran1[2][13] = {
   1278                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   1279                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   1280                                    };
   \                     ??MainSide_Refresh_48:
   \   000009E4   07A8               ADD      R0,SP,#+28
   \   000009E6   5349               LDR      R1,??MainSide_Refresh_42+0x2C  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_1`
   \   000009E8   1C22               MOVS     R2,#+28
   \   000009EA   ........           BL       __aeabi_memcpy4
   1281                  
   1282                        char ekranSlave[2][13] = {
   1283                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   1284                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   1285                                    };
   \   000009EE   0EA8               ADD      R0,SP,#+56
   \   000009F0   5149               LDR      R1,??MainSide_Refresh_42+0x30  ;; `?<Constant {{0, 0, 224, 248, 152, 124, 180, 22`
   \   000009F2   1C22               MOVS     R2,#+28
   \   000009F4   ........           BL       __aeabi_memcpy4
   1286                        
   1287                        if ((SlaveMode) )//je¿eli tryb slave
   \   000009F8   5048               LDR      R0,??MainSide_Refresh_42+0x34  ;; SlaveMode
   \   000009FA   0078               LDRB     R0,[R0, #+0]
   \   000009FC   0028               CMP      R0,#+0
   \   000009FE   1BD0               BEQ      ??MainSide_Refresh_50
   1288                        {
   1289                              for (char i=0; i<=12; i++)
   \   00000A00   0020               MOVS     R0,#+0
   \                     ??MainSide_Refresh_51:
   \   00000A02   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A04   000E               LSRS     R0,R0,#+24
   \   00000A06   0D28               CMP      R0,#+13
   \   00000A08   32D2               BCS      ??MainSide_Refresh_49
   1290                              {
   1291                           
   1292                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   00000A0A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A0C   000E               LSRS     R0,R0,#+24
   \   00000A0E   4C49               LDR      R1,??MainSide_Refresh_42+0x38  ;; LCD_Canvas
   \   00000A10   0918               ADDS     R1,R1,R0
   \   00000A12   7331               ADDS     R1,R1,#+115
   \   00000A14   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A16   000E               LSRS     R0,R0,#+24
   \   00000A18   0EAA               ADD      R2,SP,#+56
   \   00000A1A   125C               LDRB     R2,[R2, R0]
   \   00000A1C   0A70               STRB     R2,[R1, #+0]
   1293                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   00000A1E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A20   000E               LSRS     R0,R0,#+24
   \   00000A22   4749               LDR      R1,??MainSide_Refresh_42+0x38  ;; LCD_Canvas
   \   00000A24   0918               ADDS     R1,R1,R0
   \   00000A26   F331               ADDS     R1,R1,#+243
   \   00000A28   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A2A   000E               LSRS     R0,R0,#+24
   \   00000A2C   0EAA               ADD      R2,SP,#+56
   \   00000A2E   1218               ADDS     R2,R2,R0
   \   00000A30   527B               LDRB     R2,[R2, #+13]
   \   00000A32   0A70               STRB     R2,[R1, #+0]
   1294                              }
   \   00000A34   401C               ADDS     R0,R0,#+1
   \   00000A36   E4E7               B        ??MainSide_Refresh_51
   1295                        }else{
   1296                          
   1297                            for (char i=0; i<=12; i++)
   \                     ??MainSide_Refresh_50:
   \   00000A38   0020               MOVS     R0,#+0
   \   00000A3A   15E0               B        ??MainSide_Refresh_52
   1298                            {
   1299                           
   1300                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??MainSide_Refresh_53:
   \   00000A3C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A3E   000E               LSRS     R0,R0,#+24
   \   00000A40   3F49               LDR      R1,??MainSide_Refresh_42+0x38  ;; LCD_Canvas
   \   00000A42   0918               ADDS     R1,R1,R0
   \   00000A44   7331               ADDS     R1,R1,#+115
   \   00000A46   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A48   000E               LSRS     R0,R0,#+24
   \   00000A4A   07AA               ADD      R2,SP,#+28
   \   00000A4C   125C               LDRB     R2,[R2, R0]
   \   00000A4E   0A70               STRB     R2,[R1, #+0]
   1301                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   00000A50   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A52   000E               LSRS     R0,R0,#+24
   \   00000A54   3A49               LDR      R1,??MainSide_Refresh_42+0x38  ;; LCD_Canvas
   \   00000A56   0918               ADDS     R1,R1,R0
   \   00000A58   F331               ADDS     R1,R1,#+243
   \   00000A5A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A5C   000E               LSRS     R0,R0,#+24
   \   00000A5E   07AA               ADD      R2,SP,#+28
   \   00000A60   1218               ADDS     R2,R2,R0
   \   00000A62   527B               LDRB     R2,[R2, #+13]
   \   00000A64   0A70               STRB     R2,[R1, #+0]
   1302                            }
   \   00000A66   401C               ADDS     R0,R0,#+1
   \                     ??MainSide_Refresh_52:
   \   00000A68   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A6A   000E               LSRS     R0,R0,#+24
   \   00000A6C   0D28               CMP      R0,#+13
   \   00000A6E   E5D3               BCC      ??MainSide_Refresh_53
   1303                          }
   1304                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   1305                      }
   1306                      if ((MainSide_puls==1) )
   \                     ??MainSide_Refresh_49:
   \   00000A70   2F48               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   00000A72   0078               LDRB     R0,[R0, #+0]
   \   00000A74   0128               CMP      R0,#+1
   \   00000A76   28D1               BNE      ??MainSide_Refresh_54
   1307                      {
   1308                        
   1309                        if ((g_SlaveConnect) || (!SlaveMode))
   \   00000A78   3248               LDR      R0,??MainSide_Refresh_42+0x3C  ;; g_SlaveConnect
   \   00000A7A   0078               LDRB     R0,[R0, #+0]
   \   00000A7C   0028               CMP      R0,#+0
   \   00000A7E   03D1               BNE      ??MainSide_Refresh_55
   \   00000A80   2E48               LDR      R0,??MainSide_Refresh_42+0x34  ;; SlaveMode
   \   00000A82   0078               LDRB     R0,[R0, #+0]
   \   00000A84   0028               CMP      R0,#+0
   \   00000A86   20D1               BNE      ??MainSide_Refresh_54
   1310                        {
   1311                          char ekran2[2][13] = {
   1312                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   1313                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   1314                                    };
   \                     ??MainSide_Refresh_55:
   \   00000A88   07A8               ADD      R0,SP,#+28
   \   00000A8A   2F49               LDR      R1,??MainSide_Refresh_42+0x40  ;; `?<Constant {{240, 28, 230, 250, 251, 253, 253,_1`
   \   00000A8C   1C22               MOVS     R2,#+28
   \   00000A8E   ........           BL       __aeabi_memcpy4
   1315                        
   1316                          for (char i=0; i<=12; i++)
   \   00000A92   0020               MOVS     R0,#+0
   \   00000A94   15E0               B        ??MainSide_Refresh_56
   1317                          {
   1318                           
   1319                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??MainSide_Refresh_57:
   \   00000A96   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A98   000E               LSRS     R0,R0,#+24
   \   00000A9A   2949               LDR      R1,??MainSide_Refresh_42+0x38  ;; LCD_Canvas
   \   00000A9C   0918               ADDS     R1,R1,R0
   \   00000A9E   7331               ADDS     R1,R1,#+115
   \   00000AA0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000AA2   000E               LSRS     R0,R0,#+24
   \   00000AA4   07AA               ADD      R2,SP,#+28
   \   00000AA6   125C               LDRB     R2,[R2, R0]
   \   00000AA8   0A70               STRB     R2,[R1, #+0]
   1320                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   00000AAA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000AAC   000E               LSRS     R0,R0,#+24
   \   00000AAE   2449               LDR      R1,??MainSide_Refresh_42+0x38  ;; LCD_Canvas
   \   00000AB0   0918               ADDS     R1,R1,R0
   \   00000AB2   F331               ADDS     R1,R1,#+243
   \   00000AB4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000AB6   000E               LSRS     R0,R0,#+24
   \   00000AB8   07AA               ADD      R2,SP,#+28
   \   00000ABA   1218               ADDS     R2,R2,R0
   \   00000ABC   527B               LDRB     R2,[R2, #+13]
   \   00000ABE   0A70               STRB     R2,[R1, #+0]
   1321                          }
   \   00000AC0   401C               ADDS     R0,R0,#+1
   \                     ??MainSide_Refresh_56:
   \   00000AC2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000AC4   000E               LSRS     R0,R0,#+24
   \   00000AC6   0D28               CMP      R0,#+13
   \   00000AC8   E5D3               BCC      ??MainSide_Refresh_57
   1322                        }
   1323                  
   1324                      }
   1325                       
   1326                  
   1327                    if (g_Stop_Program==0)
   \                     ??MainSide_Refresh_54:
   \   00000ACA   2048               LDR      R0,??MainSide_Refresh_42+0x44  ;; g_Stop_Program
   \   00000ACC   0078               LDRB     R0,[R0, #+0]
   \   00000ACE   0028               CMP      R0,#+0
   \   00000AD0   0DD1               BNE      ??MainSide_Refresh_58
   1328                    {  
   1329                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   00000AD2   1748               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   00000AD4   0078               LDRB     R0,[R0, #+0]
   \   00000AD6   0828               CMP      R0,#+8
   \   00000AD8   03D3               BCC      ??MainSide_Refresh_59
   \   00000ADA   1548               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   00000ADC   0021               MOVS     R1,#+0
   \   00000ADE   0170               STRB     R1,[R0, #+0]
   \   00000AE0   08E0               B        ??MainSide_Refresh_47
   \                     ??MainSide_Refresh_59:
   \   00000AE2   1348               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   00000AE4   1249               LDR      R1,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   00000AE6   0978               LDRB     R1,[R1, #+0]
   \   00000AE8   491C               ADDS     R1,R1,#+1
   \   00000AEA   0170               STRB     R1,[R0, #+0]
   \   00000AEC   02E0               B        ??MainSide_Refresh_47
   1330                    }else{
   1331                      MainSide_puls=7; 
   \                     ??MainSide_Refresh_58:
   \   00000AEE   1048               LDR      R0,??MainSide_Refresh_42+0x28  ;; MainSide_puls
   \   00000AF0   0721               MOVS     R1,#+7
   \   00000AF2   0170               STRB     R1,[R0, #+0]
   1332                    }
   1333                     
   1334                    }
   1335                    
   1336            
   1337            
   1338            /*
   1339                   char txt[5];
   1340                    sprintf(txt, "%d", RF_Status.Ch);
   1341                    Label(txt,0,3,70,8,33,1,127,0);
   1342                    sprintf(txt, "%d", RF_Status.ChSlave);
   1343                    Label(txt,0,3,60,8,33,1,127,0);
   1344              */  
   1345            
   1346              if (g_PC_Connected) MenuPaint();
   \                     ??MainSide_Refresh_47:
   \   00000AF4   1648               LDR      R0,??MainSide_Refresh_42+0x48  ;; g_PC_Connected
   \   00000AF6   0078               LDRB     R0,[R0, #+0]
   \   00000AF8   0028               CMP      R0,#+0
   \   00000AFA   01D0               BEQ      ??MainSide_Refresh_1
   \   00000AFC   ........           BL       MenuPaint
   1347            }  
   1348          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MainSide_Refresh_1:
   \   00000B00   15B0               ADD      SP,SP,#+84
   \   00000B02   F0BC               POP      {R4-R7}
   \   00000B04   01BC               POP      {R0}
   \   00000B06   0047               BX       R0               ;; return
   \                     ??MainSide_Refresh_42:
   \   00000B08   ........           DC32     MainStage
   \   00000B0C   AA8AFFFF           DC32     0xffff8aaa
   \   00000B10   0080FFFF           DC32     0xffff8000
   \   00000B14   ........           DC32     DateTime + 5
   \   00000B18   ........           DC32     DateTime + 4
   \   00000B1C   ........           DC32     DateTime + 3
   \   00000B20   ........           DC32     DateTime
   \   00000B24   ........           DC32     DateTime + 1
   \   00000B28   ........           DC32     DateTime + 2
   \   00000B2C   ........           DC32     CurrentSheet
   \   00000B30   ........           DC32     MainSide_puls
   \   00000B34   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_1`
   \   00000B38   ........           DC32     `?<Constant {{0, 0, 224, 248, 152, 124, 180, 22`
   \   00000B3C   ........           DC32     SlaveMode
   \   00000B40   ........           DC32     LCD_Canvas
   \   00000B44   ........           DC32     g_SlaveConnect
   \   00000B48   ........           DC32     `?<Constant {{240, 28, 230, 250, 251, 253, 253,_1`
   \   00000B4C   ........           DC32     g_Stop_Program
   \   00000B50   ........           DC32     g_PC_Connected
   1349          
   1350          
   1351          
   1352          
   1353          
   1354          
   1355          
   1356          
   1357          //*-----------------------------------------------------------------------------
   1358          //* Nazwa funkcji :    Termostat_Paint
   1359          //* Funkcja strony g³ównej menu
   1360          //*-----------------------------------------------------------------------------
   1361          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1362          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1363          void Termostat_Paint(_Screen* ScreenLokal)
   1364          {
   \                     Termostat_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   92B0               SUB      SP,SP,#+72
   \   00000004   0400               MOVS     R4,R0
   1365            if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   8648               LDR      R0,??Termostat_Paint_0  ;; CurrentSheet
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   1CD0               BEQ      ??Termostat_Paint_1
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   80A0               ADR      R0,??Termostat_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0321               MOVS     R1,#+3
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0023               MOVS     R3,#+0
   \   0000002E   6C22               MOVS     R2,#+108
   \   00000030   0121               MOVS     R1,#+1
   \   00000032   7D48               LDR      R0,??Termostat_Paint_0+0x8  ;; 0x744
   \   00000034   7D4D               LDR      R5,??Termostat_Paint_0+0xC  ;; g_leng
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   7D4E               LDR      R6,??Termostat_Paint_0+0x10  ;; 0xa7d
   \   0000003A   7543               MULS     R5,R6,R5
   \   0000003C   7D4E               LDR      R6,??Termostat_Paint_0+0x14  ;; Speech
   \   0000003E   7519               ADDS     R5,R6,R5
   \   00000040   2818               ADDS     R0,R5,R0
   \   00000042   ........           BL       List_Paint
   \   00000046   0AB0               ADD      SP,SP,#+40
   1366                    
   1367            char txt[7];
   1368          
   1369            H_line(0,70,65,1);
   \                     ??Termostat_Paint_1:
   \   00000048   0123               MOVS     R3,#+1
   \   0000004A   4122               MOVS     R2,#+65
   \   0000004C   4621               MOVS     R1,#+70
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   ........           BL       H_line
   1370            char GraphTermometr[3][18] = 
   1371                              { 
   1372                               {128,192,192,128,128,224,128,224,128,224,128,128,128,128,128,128,128,0},
   1373                               {3,7,7,3,3,3,3,3,2,2,2,14,2,14,2,14,2,1},
   1374                               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
   1375                            };
   \   00000054   03A8               ADD      R0,SP,#+12
   \   00000056   7849               LDR      R1,??Termostat_Paint_0+0x18  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000058   3822               MOVS     R2,#+56
   \   0000005A   ........           BL       __aeabi_memcpy4
   1376            
   1377            CopyToCanvasPoint(GraphTermometr[0], 1, 33, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   0000005E   82B0               SUB      SP,SP,#+8
   \   00000060   1220               MOVS     R0,#+18
   \   00000062   0090               STR      R0,[SP, #+0]
   \   00000064   1223               MOVS     R3,#+18
   \   00000066   2122               MOVS     R2,#+33
   \   00000068   0121               MOVS     R1,#+1
   \   0000006A   05A8               ADD      R0,SP,#+20
   \   0000006C   ........           BL       CopyToCanvasPoint
   \   00000070   02B0               ADD      SP,SP,#+8
   1378          
   1379            
   1380            if (ScreenLokal->Thermo.AutoOn==1)
   \   00000072   8E20               MOVS     R0,#+142
   \   00000074   205C               LDRB     R0,[R4, R0]
   \   00000076   0128               CMP      R0,#+1
   \   00000078   70D1               BNE      ??Termostat_Paint_2
   1381            {
   1382                      
   1383                Label("Auto",0,17,52,6,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   6921               MOVS     R1,#+105
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   1421               MOVS     R1,#+20
   \   00000088   0620               MOVS     R0,#+6
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   3423               MOVS     R3,#+52
   \   0000008E   1122               MOVS     R2,#+17
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   6A48               LDR      R0,??Termostat_Paint_0+0x1C  ;; `?<Constant "Auto">`
   \   00000094   ........           BL       Label
   \   00000098   06B0               ADD      SP,SP,#+24
   1384                
   1385                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   0000009A   6946               MOV      R1,SP
   \   0000009C   9620               MOVS     R0,#+150
   \   0000009E   205E               LDRSH    R0,[R4, R0]
   \   000000A0   ........           BL       sIntToStr
   \   000000A4   0200               MOVS     R2,R0
   1386                txt[dl++]=127;
   \   000000A6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000A8   120E               LSRS     R2,R2,#+24
   \   000000AA   6846               MOV      R0,SP
   \   000000AC   7F21               MOVS     R1,#+127
   \   000000AE   8154               STRB     R1,[R0, R2]
   \   000000B0   521C               ADDS     R2,R2,#+1
   1387                Label(txt,0,17,43,dl,30,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B2   82B0               SUB      SP,SP,#+8
   \   000000B4   0020               MOVS     R0,#+0
   \   000000B6   0090               STR      R0,[SP, #+0]
   \   000000B8   6921               MOVS     R1,#+105
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   1E21               MOVS     R1,#+30
   \   000000C0   1000               MOVS     R0,R2
   \   000000C2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C4   000E               LSRS     R0,R0,#+24
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   2B23               MOVS     R3,#+43
   \   000000CA   1122               MOVS     R2,#+17
   \   000000CC   0021               MOVS     R1,#+0
   \   000000CE   06A8               ADD      R0,SP,#+24
   \   000000D0   ........           BL       Label
   \   000000D4   06B0               ADD      SP,SP,#+24
   1388                char txt[2]; txt[1]=0; 
   \   000000D6   02A8               ADD      R0,SP,#+8
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   4170               STRB     R1,[R0, #+1]
   1389                
   1390                
   1391                char MaxTmp;
   1392                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   000000DC   9420               MOVS     R0,#+148
   \   000000DE   205E               LDRSH    R0,[R4, R0]
   \   000000E0   9221               MOVS     R1,#+146
   \   000000E2   615E               LDRSH    R1,[R4, R1]
   \   000000E4   8842               CMP      R0,R1
   \   000000E6   02DA               BGE      ??Termostat_Paint_3
   1393                {
   1394                  MaxTmp=ScreenLokal->Thermo.Temperature[0]; 
   \   000000E8   9220               MOVS     R0,#+146
   \   000000EA   205A               LDRH     R0,[R4, R0]
   \   000000EC   01E0               B        ??Termostat_Paint_4
   1395                }else{
   1396                  MaxTmp=ScreenLokal->Thermo.Temperature[1];
   \                     ??Termostat_Paint_3:
   \   000000EE   9420               MOVS     R0,#+148
   \   000000F0   205A               LDRH     R0,[R4, R0]
   1397                }
   1398                
   1399                if (ScreenLokal->Thermo.SetTemperature==MaxTmp)
   \                     ??Termostat_Paint_4:
   \   000000F2   9621               MOVS     R1,#+150
   \   000000F4   615E               LDRSH    R1,[R4, R1]
   \   000000F6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F8   000E               LSRS     R0,R0,#+24
   \   000000FA   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000FC   0014               ASRS     R0,R0,#+16
   \   000000FE   8142               CMP      R1,R0
   \   00000100   03D1               BNE      ??Termostat_Paint_5
   1400                {
   1401                 txt[0]=31; 
   \   00000102   6846               MOV      R0,SP
   \   00000104   1F21               MOVS     R1,#+31
   \   00000106   0172               STRB     R1,[R0, #+8]
   \   00000108   02E0               B        ??Termostat_Paint_6
   1402                }else{
   1403                 txt[0]=30;       
   \                     ??Termostat_Paint_5:
   \   0000010A   6846               MOV      R0,SP
   \   0000010C   1E21               MOVS     R1,#+30
   \   0000010E   0172               STRB     R1,[R0, #+8]
   1404                }
   1405                
   1406                Button(txt,45,44,15,17);
   \                     ??Termostat_Paint_6:
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   1120               MOVS     R0,#+17
   \   00000114   0090               STR      R0,[SP, #+0]
   \   00000116   0F23               MOVS     R3,#+15
   \   00000118   2C22               MOVS     R2,#+44
   \   0000011A   2D21               MOVS     R1,#+45
   \   0000011C   04A8               ADD      R0,SP,#+16
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   1407                Button(Speech[g_leng].Ustaw,17,26,43,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0D20               MOVS     R0,#+13
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   2B23               MOVS     R3,#+43
   \   0000012C   1A22               MOVS     R2,#+26
   \   0000012E   1121               MOVS     R1,#+17
   \   00000130   4348               LDR      R0,??Termostat_Paint_0+0x20  ;; 0x735
   \   00000132   3E4D               LDR      R5,??Termostat_Paint_0+0xC  ;; g_leng
   \   00000134   2D68               LDR      R5,[R5, #+0]
   \   00000136   3E4E               LDR      R6,??Termostat_Paint_0+0x10  ;; 0xa7d
   \   00000138   7543               MULS     R5,R6,R5
   \   0000013A   3E4E               LDR      R6,??Termostat_Paint_0+0x14  ;; Speech
   \   0000013C   7519               ADDS     R5,R6,R5
   \   0000013E   2818               ADDS     R0,R5,R0
   \   00000140   ........           BL       Button
   \   00000144   02B0               ADD      SP,SP,#+8
   1408                Button("Auto off",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   0D20               MOVS     R0,#+13
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   3823               MOVS     R3,#+56
   \   0000014E   0322               MOVS     R2,#+3
   \   00000150   0421               MOVS     R1,#+4
   \   00000152   3C48               LDR      R0,??Termostat_Paint_0+0x24  ;; `?<Constant "Auto off">`
   \   00000154   ........           BL       Button
   \   00000158   02B0               ADD      SP,SP,#+8
   \   0000015A   4AE0               B        ??Termostat_Paint_7
   1409          
   1410          }else{
   1411          
   1412                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \                     ??Termostat_Paint_2:
   \   0000015C   6946               MOV      R1,SP
   \   0000015E   9620               MOVS     R0,#+150
   \   00000160   205E               LDRSH    R0,[R4, R0]
   \   00000162   ........           BL       sIntToStr
   \   00000166   0200               MOVS     R2,R0
   1413                txt[dl++]=' ';
   \   00000168   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000016A   120E               LSRS     R2,R2,#+24
   \   0000016C   6846               MOV      R0,SP
   \   0000016E   2021               MOVS     R1,#+32
   \   00000170   8154               STRB     R1,[R0, R2]
   \   00000172   521C               ADDS     R2,R2,#+1
   1414                txt[dl++]=127;
   \   00000174   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000176   120E               LSRS     R2,R2,#+24
   \   00000178   6846               MOV      R0,SP
   \   0000017A   7F21               MOVS     R1,#+127
   \   0000017C   8154               STRB     R1,[R0, R2]
   \   0000017E   521C               ADDS     R2,R2,#+1
   1415                Label(txt,2,20,39,dl,40,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000180   82B0               SUB      SP,SP,#+8
   \   00000182   0020               MOVS     R0,#+0
   \   00000184   0090               STR      R0,[SP, #+0]
   \   00000186   6921               MOVS     R1,#+105
   \   00000188   0020               MOVS     R0,#+0
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   2821               MOVS     R1,#+40
   \   0000018E   1000               MOVS     R0,R2
   \   00000190   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000192   000E               LSRS     R0,R0,#+24
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   2723               MOVS     R3,#+39
   \   00000198   1422               MOVS     R2,#+20
   \   0000019A   0221               MOVS     R1,#+2
   \   0000019C   06A8               ADD      R0,SP,#+24
   \   0000019E   ........           BL       Label
   \   000001A2   06B0               ADD      SP,SP,#+24
   1416                txt[1]=0; txt[0]=30;
   \   000001A4   6846               MOV      R0,SP
   \   000001A6   0021               MOVS     R1,#+0
   \   000001A8   4170               STRB     R1,[R0, #+1]
   \   000001AA   6846               MOV      R0,SP
   \   000001AC   1E21               MOVS     R1,#+30
   \   000001AE   0170               STRB     R1,[R0, #+0]
   1417                Button(txt,19,48,41,18);
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   1220               MOVS     R0,#+18
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   2923               MOVS     R3,#+41
   \   000001B8   3022               MOVS     R2,#+48
   \   000001BA   1321               MOVS     R1,#+19
   \   000001BC   02A8               ADD      R0,SP,#+8
   \   000001BE   ........           BL       Button
   \   000001C2   02B0               ADD      SP,SP,#+8
   1418                txt[0]=31;
   \   000001C4   6846               MOV      R0,SP
   \   000001C6   1F21               MOVS     R1,#+31
   \   000001C8   0170               STRB     R1,[R0, #+0]
   1419                Button(txt,19,21,41,18);
   \   000001CA   82B0               SUB      SP,SP,#+8
   \   000001CC   1220               MOVS     R0,#+18
   \   000001CE   0090               STR      R0,[SP, #+0]
   \   000001D0   2923               MOVS     R3,#+41
   \   000001D2   1522               MOVS     R2,#+21
   \   000001D4   1321               MOVS     R1,#+19
   \   000001D6   02A8               ADD      R0,SP,#+8
   \   000001D8   ........           BL       Button
   \   000001DC   02B0               ADD      SP,SP,#+8
   1420                Button("Auto on",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \   000001DE   82B0               SUB      SP,SP,#+8
   \   000001E0   0D20               MOVS     R0,#+13
   \   000001E2   0090               STR      R0,[SP, #+0]
   \   000001E4   3823               MOVS     R3,#+56
   \   000001E6   0322               MOVS     R2,#+3
   \   000001E8   0421               MOVS     R1,#+4
   \   000001EA   1748               LDR      R0,??Termostat_Paint_0+0x28  ;; `?<Constant "Auto on">`
   \   000001EC   ........           BL       Button
   \   000001F0   02B0               ADD      SP,SP,#+8
   1421            }
   1422            
   1423            if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Paint_7:
   \   000001F2   A07C               LDRB     R0,[R4, #+18]
   \   000001F4   C006               LSLS     R0,R0,#+27
   \   000001F6   0ED4               BMI      ??Termostat_Paint_8
   \   000001F8   0948               LDR      R0,??Termostat_Paint_0  ;; CurrentSheet
   \   000001FA   0078               LDRB     R0,[R0, #+0]
   \   000001FC   0028               CMP      R0,#+0
   \   000001FE   0AD1               BNE      ??Termostat_Paint_8
   1424            {
   1425              Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1426                            25,103,39,22 // X,Y,Width,Height
   1427                            );
   \   00000200   82B0               SUB      SP,SP,#+8
   \   00000202   1620               MOVS     R0,#+22
   \   00000204   0090               STR      R0,[SP, #+0]
   \   00000206   2723               MOVS     R3,#+39
   \   00000208   6722               MOVS     R2,#+103
   \   0000020A   1921               MOVS     R1,#+25
   \   0000020C   0B34               ADDS     R4,R4,#+11
   \   0000020E   2000               MOVS     R0,R4
   \   00000210   ........           BL       Button
   \   00000214   02B0               ADD      SP,SP,#+8
   1428            }
   1429          }//_______________________ Koniec funkcji Termostat_Paint __________________________
   \                     ??Termostat_Paint_8:
   \   00000216   12B0               ADD      SP,SP,#+72
   \   00000218   70BC               POP      {R4-R6}
   \   0000021A   01BC               POP      {R0}
   \   0000021C   0047               BX       R0               ;; return
   \   0000021E   C046               Nop      
   \                     ??Termostat_Paint_0:
   \   00000220   ........           DC32     CurrentSheet
   \   00000224   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000228   44070000           DC32     0x744
   \   0000022C   ........           DC32     g_leng
   \   00000230   7D0A0000           DC32     0xa7d
   \   00000234   ........           DC32     Speech
   \   00000238   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   0000023C   ........           DC32     `?<Constant "Auto">`
   \   00000240   35070000           DC32     0x735
   \   00000244   ........           DC32     `?<Constant "Auto off">`
   \   00000248   ........           DC32     `?<Constant "Auto on">`
   1430            
   1431          
   1432          
   1433          //sprawdzenie czy zmienne specjalne termostatu s¹ odczytywane przez serwer. Je¿eli tak to przypieszenie wys³ania danych;

   \                                 In section Debug.txt, align 4, keep-with-next
   1434          void ExecuteSpecialThermVar(void)
   1435          {
   \                     ExecuteSpecialThermVar:
   \   00000000   01B5               PUSH     {R0,LR}
   1436             for (char IDX=0; IDX<NET.HTTP.VarSetCount; IDX++)
   \   00000002   0020               MOVS     R0,#+0
   \   00000004   00E0               B        ??ExecuteSpecialThermVar_0
   \                     ??ExecuteSpecialThermVar_1:
   \   00000006   401C               ADDS     R0,R0,#+1
   \                     ??ExecuteSpecialThermVar_0:
   \   00000008   0F49               LDR      R1,??ExecuteSpecialThermVar_2  ;; NET + 242
   \   0000000A   0978               LDRB     R1,[R1, #+0]
   \   0000000C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000E   000E               LSRS     R0,R0,#+24
   \   00000010   8842               CMP      R0,R1
   \   00000012   16D2               BCS      ??ExecuteSpecialThermVar_3
   1437               {  
   1438                 if ((NET.HTTP.NetNodeSet[IDX].NetDataType=='c') || (NET.HTTP.NetNodeSet[IDX].NetDataType=='d'))
   \   00000014   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000016   000E               LSRS     R0,R0,#+24
   \   00000018   0521               MOVS     R1,#+5
   \   0000001A   4143               MULS     R1,R0,R1
   \   0000001C   0B4A               LDR      R2,??ExecuteSpecialThermVar_2+0x4  ;; NET
   \   0000001E   5118               ADDS     R1,R2,R1
   \   00000020   F631               ADDS     R1,R1,#+246
   \   00000022   0978               LDRB     R1,[R1, #+0]
   \   00000024   6329               CMP      R1,#+99
   \   00000026   09D0               BEQ      ??ExecuteSpecialThermVar_4
   \   00000028   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002A   000E               LSRS     R0,R0,#+24
   \   0000002C   0521               MOVS     R1,#+5
   \   0000002E   4143               MULS     R1,R0,R1
   \   00000030   064A               LDR      R2,??ExecuteSpecialThermVar_2+0x4  ;; NET
   \   00000032   5118               ADDS     R1,R2,R1
   \   00000034   F631               ADDS     R1,R1,#+246
   \   00000036   0978               LDRB     R1,[R1, #+0]
   \   00000038   6429               CMP      R1,#+100
   \   0000003A   E4D1               BNE      ??ExecuteSpecialThermVar_1
   1439                 {
   1440                   NET.Status.NextHttpOrder=HTTP_POST;
   \                     ??ExecuteSpecialThermVar_4:
   \   0000003C   0448               LDR      R0,??ExecuteSpecialThermVar_2+0x8  ;; NET + 3
   \   0000003E   1221               MOVS     R1,#+18
   \   00000040   0170               STRB     R1,[R0, #+0]
   1441                   break;
   1442                 } 
   1443               }
   1444          }
   \                     ??ExecuteSpecialThermVar_3:
   \   00000042   01B0               ADD      SP,SP,#+4
   \   00000044   01BC               POP      {R0}
   \   00000046   0047               BX       R0               ;; return
   \                     ??ExecuteSpecialThermVar_2:
   \   00000048   ........           DC32     NET + 242
   \   0000004C   ........           DC32     NET
   \   00000050   ........           DC32     NET + 3
   1445          
   1446          
   1447          //*-----------------------------------------------------------------------------
   1448          //* Nazwa funkcji :    Termostat_Event
   1449          //* Funkcja strony g³ównej menu
   1450          //*-----------------------------------------------------------------------------
   1451          //*-----------------------------------------------------------------------------
   1452          
   1453          

   \                                 In section Debug.txt, align 4, keep-with-next
   1454          void Termostat_Event(_Screen* ScreenLokal)
   1455          {
   \                     Termostat_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0400               MOVS     R4,R0
   1456            char Repaint=0;
   \   00000006   0026               MOVS     R6,#+0
   1457            char WriteTmp;
   1458            char txt[5];
   1459            char txt2[5];
   1460          
   1461           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000008   9B48               LDR      R0,??Termostat_Event_0  ;; CurrentSheet
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0128               CMP      R0,#+1
   \   0000000E   29D3               BCC      ??Termostat_Event_1
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0F21               MOVS     R1,#+15
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   DB48               LDR      R0,??Termostat_Event_2  ;; Y_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   435E               LDRSH    R3,[R0, R1]
   \   00000022   DB48               LDR      R0,??Termostat_Event_2+0x4  ;; X_down
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   425E               LDRSH    R2,[R0, R1]
   \   00000028   DA48               LDR      R0,??Termostat_Event_2+0x8  ;; Y_up
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   415E               LDRSH    R1,[R0, R1]
   \   0000002E   DA48               LDR      R0,??Termostat_Event_2+0xC  ;; X_up
   \   00000030   0025               MOVS     R5,#+0
   \   00000032   405F               LDRSH    R0,[R0, R5]
   \   00000034   ........           BL       List_Event
   \   00000038   04B0               ADD      SP,SP,#+16
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   C943               MVNS     R1,R1            ;; #-1
   \   0000003E   8842               CMP      R0,R1
   \   00000040   10D1               BNE      ??Termostat_Event_1
   1462              {
   1463                 if (SheetHistoryIndex>0)
   \   00000042   D648               LDR      R0,??Termostat_Event_2+0x10  ;; SheetHistoryIndex
   \   00000044   0078               LDRB     R0,[R0, #+0]
   \   00000046   0128               CMP      R0,#+1
   \   00000048   0AD3               BCC      ??Termostat_Event_3
   1464                    {
   1465                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000004A   D448               LDR      R0,??Termostat_Event_2+0x10  ;; SheetHistoryIndex
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   401E               SUBS     R0,R0,#+1
   \   00000050   D249               LDR      R1,??Termostat_Event_2+0x10  ;; SheetHistoryIndex
   \   00000052   0870               STRB     R0,[R1, #+0]
   \   00000054   8849               LDR      R1,??Termostat_Event_0  ;; CurrentSheet
   \   00000056   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000058   000E               LSRS     R0,R0,#+24
   \   0000005A   D14A               LDR      R2,??Termostat_Event_2+0x14  ;; SheetHistory
   \   0000005C   105C               LDRB     R0,[R2, R0]
   \   0000005E   0870               STRB     R0,[R1, #+0]
   1466                    } 
   1467                   Repaint=1; 
   \                     ??Termostat_Event_3:
   \   00000060   0126               MOVS     R6,#+1
   \   00000062   83E1               B        ??Termostat_Event_4
   1468              }else{
   1469            
   1470                      //przycisk opcjonalny
   1471                          if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Event_1:
   \   00000064   A07C               LDRB     R0,[R4, #+18]
   \   00000066   C006               LSLS     R0,R0,#+27
   \   00000068   22D4               BMI      ??Termostat_Event_5
   \   0000006A   8348               LDR      R0,??Termostat_Event_0  ;; CurrentSheet
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   1ED1               BNE      ??Termostat_Event_5
   1472                          {
   1473                             if (Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1474                                      25,103,39,22 // X,Y,Width,Height
   1475                                      )==1)
   \   00000072   82B0               SUB      SP,SP,#+8
   \   00000074   1620               MOVS     R0,#+22
   \   00000076   0090               STR      R0,[SP, #+0]
   \   00000078   2723               MOVS     R3,#+39
   \   0000007A   6722               MOVS     R2,#+103
   \   0000007C   1921               MOVS     R1,#+25
   \   0000007E   2000               MOVS     R0,R4
   \   00000080   0B30               ADDS     R0,R0,#+11
   \   00000082   ........           BL       Button
   \   00000086   02B0               ADD      SP,SP,#+8
   \   00000088   0128               CMP      R0,#+1
   \   0000008A   11D1               BNE      ??Termostat_Event_5
   1476                                 {
   1477                                   MainStage.StageButton[1+(10*CurrentSheet)]=1;
   \   0000008C   7A48               LDR      R0,??Termostat_Event_0  ;; CurrentSheet
   \   0000008E   0078               LDRB     R0,[R0, #+0]
   \   00000090   0A21               MOVS     R1,#+10
   \   00000092   4843               MULS     R0,R1,R0
   \   00000094   C349               LDR      R1,??Termostat_Event_2+0x18  ;; MainStage
   \   00000096   0818               ADDS     R0,R1,R0
   \   00000098   0121               MOVS     R1,#+1
   \   0000009A   4170               STRB     R1,[R0, #+1]
   1478                                   
   1479                                   //je¿eli ustawiona akcja otwarcia strony
   1480                                   if (ScreenLokal->Button[0].OpenPage) 
   \   0000009C   A07C               LDRB     R0,[R4, #+18]
   \   0000009E   0007               LSLS     R0,R0,#+28
   \   000000A0   06D0               BEQ      ??Termostat_Event_5
   1481                                   {
   1482                                     CurrentSheet=ScreenLokal->Button[0].OpenPage-1;
   \   000000A2   7548               LDR      R0,??Termostat_Event_0  ;; CurrentSheet
   \   000000A4   A17C               LDRB     R1,[R4, #+18]
   \   000000A6   0907               LSLS     R1,R1,#+28       ;; ZeroExtS R1,R1,#+28,#+28
   \   000000A8   090F               LSRS     R1,R1,#+28
   \   000000AA   491E               SUBS     R1,R1,#+1
   \   000000AC   0170               STRB     R1,[R0, #+0]
   1483                                     Repaint=1;
   \   000000AE   0126               MOVS     R6,#+1
   1484                                   }
   1485                                   
   1486                                 }
   1487                          }
   1488                
   1489                          
   1490                          
   1491                
   1492                      _ProgramTab *pProgramTab=(_ProgramTab*)((AT91C_IFLASH_MEM->FlashProgram));
   \                     ??Termostat_Event_5:
   \   000000B0   BD4D               LDR      R5,??Termostat_Event_2+0x1C  ;; 0x130100
   1493                      
   1494                      
   1495                      //je¿eli AutoOn
   1496                      if (ScreenLokal->Thermo.AutoOn==1)
   \   000000B2   8E20               MOVS     R0,#+142
   \   000000B4   205C               LDRB     R0,[R4, R0]
   \   000000B6   0128               CMP      R0,#+1
   \   000000B8   00D0               BEQ      .+4
   \   000000BA   8EE0               B        ??Termostat_Event_6
   1497                      {
   1498                          txt[1]=0; txt[0]=31;
   \   000000BC   01A8               ADD      R0,SP,#+4
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   4170               STRB     R1,[R0, #+1]
   \   000000C2   6846               MOV      R0,SP
   \   000000C4   1F21               MOVS     R1,#+31
   \   000000C6   0171               STRB     R1,[R0, #+4]
   1499                      
   1500                          if (Button("Auto off",4,3,56,13)==1)  //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0D20               MOVS     R0,#+13
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   3823               MOVS     R3,#+56
   \   000000D0   0322               MOVS     R2,#+3
   \   000000D2   0421               MOVS     R1,#+4
   \   000000D4   B548               LDR      R0,??Termostat_Event_2+0x20  ;; `?<Constant "Auto off">`
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   2DD1               BNE      ??Termostat_Event_7
   1501                              {
   1502                              Repaint=1; 
   \   000000E0   0126               MOVS     R6,#+1
   1503                                          
   1504                                //zapis do flash
   1505                                  WriteTmp=0;
   \   000000E2   6846               MOV      R0,SP
   \   000000E4   0021               MOVS     R1,#+0
   \   000000E6   0170               STRB     R1,[R0, #+0]
   1506                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000000E8   8E20               MOVS     R0,#+142
   \   000000EA   6946               MOV      R1,SP
   \   000000EC   0978               LDRB     R1,[R1, #+0]
   \   000000EE   2154               STRB     R1,[R4, R0]
   1507                                  unsigned int Save = __get_interrupt_state();  
   \   000000F0   ........           BL       __iar_get_interrupt_state
   \   000000F4   0700               MOVS     R7,R0
   1508                                  __disable_interrupt();
   \   000000F6   ........           BL       __iar_disable_interrupt
   1509                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000FA   0122               MOVS     R2,#+1
   \   000000FC   6946               MOV      R1,SP
   \   000000FE   AC4B               LDR      R3,??Termostat_Event_2+0x24  ;; 0xbc26
   \   00000100   9C46               MOV      R12,R3
   \   00000102   5D48               LDR      R0,??Termostat_Event_0  ;; CurrentSheet
   \   00000104   0378               LDRB     R3,[R0, #+0]
   \   00000106   A020               MOVS     R0,#+160
   \   00000108   4343               MULS     R3,R0,R3
   \   0000010A   E818               ADDS     R0,R5,R3
   \   0000010C   6346               MOV      R3,R12
   \   0000010E   C018               ADDS     R0,R0,R3
   \   00000110   ........           BL       FlashWrite
   1510                                  __set_interrupt_state(Save);
   \   00000114   3800               MOVS     R0,R7
   \   00000116   ........           BL       __iar_set_interrupt_state
   1511                                  __enable_interrupt(); 
   \   0000011A   ........           BL       __iar_enable_interrupt
   1512                                  
   1513                                  //koniec zapisu do flash
   1514                                  
   1515                                  gProg.Screen[CurrentSheet].Thermo.SetTemperature=pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature;
   \   0000011E   A548               LDR      R0,??Termostat_Event_2+0x28  ;; 0xbc2e
   \   00000120   5549               LDR      R1,??Termostat_Event_0  ;; CurrentSheet
   \   00000122   0978               LDRB     R1,[R1, #+0]
   \   00000124   A022               MOVS     R2,#+160
   \   00000126   5143               MULS     R1,R2,R1
   \   00000128   A34A               LDR      R2,??Termostat_Event_2+0x2C  ;; gProg
   \   0000012A   5118               ADDS     R1,R2,R1
   \   0000012C   A14A               LDR      R2,??Termostat_Event_2+0x28  ;; 0xbc2e
   \   0000012E   524B               LDR      R3,??Termostat_Event_0  ;; CurrentSheet
   \   00000130   1B78               LDRB     R3,[R3, #+0]
   \   00000132   A027               MOVS     R7,#+160
   \   00000134   7B43               MULS     R3,R7,R3
   \   00000136   EB18               ADDS     R3,R5,R3
   \   00000138   9A5A               LDRH     R2,[R3, R2]
   \   0000013A   0A52               STRH     R2,[R1, R0]
   1516                             }
   1517                          
   1518                          if (Button(Speech[g_leng].Ustaw,17,26,43,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Termostat_Event_7:
   \   0000013C   82B0               SUB      SP,SP,#+8
   \   0000013E   0D20               MOVS     R0,#+13
   \   00000140   0090               STR      R0,[SP, #+0]
   \   00000142   2B23               MOVS     R3,#+43
   \   00000144   1A22               MOVS     R2,#+26
   \   00000146   1121               MOVS     R1,#+17
   \   00000148   9C48               LDR      R0,??Termostat_Event_2+0x30  ;; 0x735
   \   0000014A   9D4D               LDR      R5,??Termostat_Event_2+0x34  ;; g_leng
   \   0000014C   2D68               LDR      R5,[R5, #+0]
   \   0000014E   9D4F               LDR      R7,??Termostat_Event_2+0x38  ;; 0xa7d
   \   00000150   7D43               MULS     R5,R7,R5
   \   00000152   9D4F               LDR      R7,??Termostat_Event_2+0x3C  ;; Speech
   \   00000154   7D19               ADDS     R5,R7,R5
   \   00000156   2818               ADDS     R0,R5,R0
   \   00000158   ........           BL       Button
   \   0000015C   02B0               ADD      SP,SP,#+8
   \   0000015E   0128               CMP      R0,#+1
   \   00000160   03D1               BNE      ??Termostat_Event_8
   1519                          {
   1520                            MenuLevel=12;
   \   00000162   9A48               LDR      R0,??Termostat_Event_2+0x40  ;; MenuLevel
   \   00000164   0C21               MOVS     R1,#+12
   \   00000166   0160               STR      R1,[R0, #+0]
   1521                            Repaint=1; 
   \   00000168   0126               MOVS     R6,#+1
   1522                          }
   1523                          
   1524                          
   1525                          //prze³¹czenie temperatur w trybie auto
   1526                          signed   short H_Tmp;
   1527                          if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \                     ??Termostat_Event_8:
   \   0000016A   9420               MOVS     R0,#+148
   \   0000016C   205E               LDRSH    R0,[R4, R0]
   \   0000016E   9221               MOVS     R1,#+146
   \   00000170   615E               LDRSH    R1,[R4, R1]
   \   00000172   8842               CMP      R0,R1
   \   00000174   00DA               BGE      ??Termostat_Event_9
   \   00000176   0800               MOVS     R0,R1
   1528                          {
   1529                            H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1530                          }else{
   1531                            H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1532                          }
   1533                          
   1534                          
   1535                          if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \                     ??Termostat_Event_9:
   \   00000178   9621               MOVS     R1,#+150
   \   0000017A   615E               LDRSH    R1,[R4, R1]
   \   0000017C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000017E   0014               ASRS     R0,R0,#+16
   \   00000180   8142               CMP      R1,R0
   \   00000182   03D1               BNE      ??Termostat_Event_10
   1536                          {
   1537                           txt[0]=31; 
   \   00000184   6846               MOV      R0,SP
   \   00000186   1F21               MOVS     R1,#+31
   \   00000188   0171               STRB     R1,[R0, #+4]
   \   0000018A   02E0               B        ??Termostat_Event_11
   1538                          }else{
   1539                           txt[0]=30;
   \                     ??Termostat_Event_10:
   \   0000018C   6846               MOV      R0,SP
   \   0000018E   1E21               MOVS     R1,#+30
   \   00000190   0171               STRB     R1,[R0, #+4]
   1540                          }
   1541                          txt[1]=0;
   \                     ??Termostat_Event_11:
   \   00000192   01A8               ADD      R0,SP,#+4
   \   00000194   0021               MOVS     R1,#+0
   \   00000196   4170               STRB     R1,[R0, #+1]
   1542                          
   1543                          
   1544                          if (Button(txt,45,44,15,17)==1)
   \   00000198   82B0               SUB      SP,SP,#+8
   \   0000019A   1120               MOVS     R0,#+17
   \   0000019C   0090               STR      R0,[SP, #+0]
   \   0000019E   0F23               MOVS     R3,#+15
   \   000001A0   2C22               MOVS     R2,#+44
   \   000001A2   2D21               MOVS     R1,#+45
   \   000001A4   03A8               ADD      R0,SP,#+12
   \   000001A6   ........           BL       Button
   \   000001AA   02B0               ADD      SP,SP,#+8
   \   000001AC   0128               CMP      R0,#+1
   \   000001AE   00D0               BEQ      .+4
   \   000001B0   DCE0               B        ??Termostat_Event_4
   1545                            {
   1546                                if (ScreenLokal->Thermo.SetTemperature==ScreenLokal->Thermo.Temperature[0])
   \   000001B2   9620               MOVS     R0,#+150
   \   000001B4   205E               LDRSH    R0,[R4, R0]
   \   000001B6   9221               MOVS     R1,#+146
   \   000001B8   615E               LDRSH    R1,[R4, R1]
   \   000001BA   8842               CMP      R0,R1
   \   000001BC   06D1               BNE      ??Termostat_Event_12
   1547                                {      
   1548                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[1];
   \   000001BE   9620               MOVS     R0,#+150
   \   000001C0   2100               MOVS     R1,R4
   \   000001C2   9431               ADDS     R1,R1,#+148
   \   000001C4   0988               LDRH     R1,[R1, #+0]
   \   000001C6   2152               STRH     R1,[R4, R0]
   1549                                    Repaint=1;
   \   000001C8   0126               MOVS     R6,#+1
   \   000001CA   CFE0               B        ??Termostat_Event_4
   1550                                  
   1551                                }else{
   1552                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[0];
   \                     ??Termostat_Event_12:
   \   000001CC   9620               MOVS     R0,#+150
   \   000001CE   2100               MOVS     R1,R4
   \   000001D0   9231               ADDS     R1,R1,#+146
   \   000001D2   0988               LDRH     R1,[R1, #+0]
   \   000001D4   2152               STRH     R1,[R4, R0]
   1553                                    Repaint=1;
   \   000001D6   0126               MOVS     R6,#+1
   \   000001D8   C8E0               B        ??Termostat_Event_4
   1554                                }
   1555                                
   1556                            }
   1557                            
   1558                          
   1559                      }
   1560                      else
   1561                      {
   1562                   
   1563                          if (Button("Auto on",4,3,56,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \                     ??Termostat_Event_6:
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0D20               MOVS     R0,#+13
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   3823               MOVS     R3,#+56
   \   000001E2   0322               MOVS     R2,#+3
   \   000001E4   0421               MOVS     R1,#+4
   \   000001E6   7A48               LDR      R0,??Termostat_Event_2+0x44  ;; `?<Constant "Auto on">`
   \   000001E8   ........           BL       Button
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0128               CMP      R0,#+1
   \   000001F0   54D1               BNE      ??Termostat_Event_13
   1564                            {
   1565                              Repaint=1; 
   \   000001F2   0126               MOVS     R6,#+1
   1566                                          
   1567                                //zapis do flash
   1568                                  WriteTmp=1;
   \   000001F4   6846               MOV      R0,SP
   \   000001F6   0121               MOVS     R1,#+1
   \   000001F8   0170               STRB     R1,[R0, #+0]
   1569                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000001FA   8E20               MOVS     R0,#+142
   \   000001FC   6946               MOV      R1,SP
   \   000001FE   0978               LDRB     R1,[R1, #+0]
   \   00000200   2154               STRB     R1,[R4, R0]
   1570                                  unsigned int Save = __get_interrupt_state();  
   \   00000202   ........           BL       __iar_get_interrupt_state
   \   00000206   0700               MOVS     R7,R0
   1571                                  __disable_interrupt();
   \   00000208   ........           BL       __iar_disable_interrupt
   1572                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000020C   0122               MOVS     R2,#+1
   \   0000020E   6946               MOV      R1,SP
   \   00000210   674B               LDR      R3,??Termostat_Event_2+0x24  ;; 0xbc26
   \   00000212   9C46               MOV      R12,R3
   \   00000214   1848               LDR      R0,??Termostat_Event_0  ;; CurrentSheet
   \   00000216   0378               LDRB     R3,[R0, #+0]
   \   00000218   A020               MOVS     R0,#+160
   \   0000021A   4343               MULS     R3,R0,R3
   \   0000021C   E818               ADDS     R0,R5,R3
   \   0000021E   6346               MOV      R3,R12
   \   00000220   C018               ADDS     R0,R0,R3
   \   00000222   ........           BL       FlashWrite
   1573                                  __set_interrupt_state(Save);
   \   00000226   3800               MOVS     R0,R7
   \   00000228   ........           BL       __iar_set_interrupt_state
   1574                                  __enable_interrupt(); 
   \   0000022C   ........           BL       __iar_enable_interrupt
   1575                                  //koniec zapisu do flash
   1576                                  
   1577                                  if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   \   00000230   6848               LDR      R0,??Termostat_Event_2+0x48  ;; 0xbc30
   \   00000232   6949               LDR      R1,??Termostat_Event_2+0x4C  ;; DateTime + 6
   \   00000234   0978               LDRB     R1,[R1, #+0]
   \   00000236   0422               MOVS     R2,#+4
   \   00000238   5143               MULS     R1,R2,R1
   \   0000023A   0F4A               LDR      R2,??Termostat_Event_0  ;; CurrentSheet
   \   0000023C   1278               LDRB     R2,[R2, #+0]
   \   0000023E   A023               MOVS     R3,#+160
   \   00000240   5A43               MULS     R2,R3,R2
   \   00000242   5D4B               LDR      R3,??Termostat_Event_2+0x2C  ;; gProg
   \   00000244   9A18               ADDS     R2,R3,R2
   \   00000246   5118               ADDS     R1,R2,R1
   \   00000248   0858               LDR      R0,[R1, R0]
   \   0000024A   6449               LDR      R1,??Termostat_Event_2+0x50  ;; DateTime + 3
   \   0000024C   0978               LDRB     R1,[R1, #+0]
   \   0000024E   C840               LSRS     R0,R0,R1
   \   00000250   C007               LSLS     R0,R0,#+31
   \   00000252   13D5               BPL      ??Termostat_Event_14
   1578                                  {
   1579                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000254   5748               LDR      R0,??Termostat_Event_2+0x28  ;; 0xbc2e
   \   00000256   0849               LDR      R1,??Termostat_Event_0  ;; CurrentSheet
   \   00000258   0978               LDRB     R1,[R1, #+0]
   \   0000025A   A022               MOVS     R2,#+160
   \   0000025C   5143               MULS     R1,R2,R1
   \   0000025E   564A               LDR      R2,??Termostat_Event_2+0x2C  ;; gProg
   \   00000260   5118               ADDS     R1,R2,R1
   \   00000262   5F4A               LDR      R2,??Termostat_Event_2+0x54  ;; 0xbc2a
   \   00000264   044B               LDR      R3,??Termostat_Event_0  ;; CurrentSheet
   \   00000266   1B78               LDRB     R3,[R3, #+0]
   \   00000268   A027               MOVS     R7,#+160
   \   0000026A   7B43               MULS     R3,R7,R3
   \   0000026C   524F               LDR      R7,??Termostat_Event_2+0x2C  ;; gProg
   \   0000026E   FB18               ADDS     R3,R7,R3
   \   00000270   9A5A               LDRH     R2,[R3, R2]
   \   00000272   0A52               STRH     R2,[R1, R0]
   \   00000274   12E0               B        ??Termostat_Event_13
   \   00000276   C046               Nop      
   \                     ??Termostat_Event_0:
   \   00000278   ........           DC32     CurrentSheet
   1580                                  }else{
   1581                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??Termostat_Event_14:
   \   0000027C   4D48               LDR      R0,??Termostat_Event_2+0x28  ;; 0xbc2e
   \   0000027E   5949               LDR      R1,??Termostat_Event_2+0x58  ;; CurrentSheet
   \   00000280   0978               LDRB     R1,[R1, #+0]
   \   00000282   A022               MOVS     R2,#+160
   \   00000284   5143               MULS     R1,R2,R1
   \   00000286   4C4A               LDR      R2,??Termostat_Event_2+0x2C  ;; gProg
   \   00000288   5118               ADDS     R1,R2,R1
   \   0000028A   574A               LDR      R2,??Termostat_Event_2+0x5C  ;; 0xbc2c
   \   0000028C   554B               LDR      R3,??Termostat_Event_2+0x58  ;; CurrentSheet
   \   0000028E   1B78               LDRB     R3,[R3, #+0]
   \   00000290   A027               MOVS     R7,#+160
   \   00000292   7B43               MULS     R3,R7,R3
   \   00000294   484F               LDR      R7,??Termostat_Event_2+0x2C  ;; gProg
   \   00000296   FB18               ADDS     R3,R7,R3
   \   00000298   9A5A               LDRH     R2,[R3, R2]
   \   0000029A   0A52               STRH     R2,[R1, R0]
   1582                                  }
   1583          
   1584                             }
   1585                                  
   1586                      
   1587                          txt[1]=0; txt[0]=30;
   \                     ??Termostat_Event_13:
   \   0000029C   01A8               ADD      R0,SP,#+4
   \   0000029E   0021               MOVS     R1,#+0
   \   000002A0   4170               STRB     R1,[R0, #+1]
   \   000002A2   6846               MOV      R0,SP
   \   000002A4   1E21               MOVS     R1,#+30
   \   000002A6   0171               STRB     R1,[R0, #+4]
   1588                          if ((Button(txt,19,48,41,18)==2)  && ((ScreenLokal->Thermo.SetTemperature)<500)) {((ScreenLokal->Thermo.SetTemperature))++;  Repaint=1; }  //w górê
   \   000002A8   82B0               SUB      SP,SP,#+8
   \   000002AA   1220               MOVS     R0,#+18
   \   000002AC   0090               STR      R0,[SP, #+0]
   \   000002AE   2923               MOVS     R3,#+41
   \   000002B0   3022               MOVS     R2,#+48
   \   000002B2   1321               MOVS     R1,#+19
   \   000002B4   03A8               ADD      R0,SP,#+12
   \   000002B6   ........           BL       Button
   \   000002BA   02B0               ADD      SP,SP,#+8
   \   000002BC   0228               CMP      R0,#+2
   \   000002BE   0BD1               BNE      ??Termostat_Event_15
   \   000002C0   9620               MOVS     R0,#+150
   \   000002C2   205E               LDRSH    R0,[R4, R0]
   \   000002C4   FA21               MOVS     R1,#+250
   \   000002C6   4900               LSLS     R1,R1,#+1        ;; #+500
   \   000002C8   8842               CMP      R0,R1
   \   000002CA   05DA               BGE      ??Termostat_Event_15
   \   000002CC   9620               MOVS     R0,#+150
   \   000002CE   9621               MOVS     R1,#+150
   \   000002D0   615E               LDRSH    R1,[R4, R1]
   \   000002D2   491C               ADDS     R1,R1,#+1
   \   000002D4   2152               STRH     R1,[R4, R0]
   \   000002D6   0126               MOVS     R6,#+1
   1589                      
   1590                          txt2[0]=31; txt2[1]=0;
   \                     ??Termostat_Event_15:
   \   000002D8   6846               MOV      R0,SP
   \   000002DA   1F21               MOVS     R1,#+31
   \   000002DC   0173               STRB     R1,[R0, #+12]
   \   000002DE   03A8               ADD      R0,SP,#+12
   \   000002E0   0021               MOVS     R1,#+0
   \   000002E2   4170               STRB     R1,[R0, #+1]
   1591                          if ((Button(txt2,19,21,41,18)==2) && ((ScreenLokal->Thermo.SetTemperature)>0)) {((ScreenLokal->Thermo.SetTemperature))--; Repaint=1; }   //w dó³
   \   000002E4   82B0               SUB      SP,SP,#+8
   \   000002E6   1220               MOVS     R0,#+18
   \   000002E8   0090               STR      R0,[SP, #+0]
   \   000002EA   2923               MOVS     R3,#+41
   \   000002EC   1522               MOVS     R2,#+21
   \   000002EE   1321               MOVS     R1,#+19
   \   000002F0   05A8               ADD      R0,SP,#+20
   \   000002F2   ........           BL       Button
   \   000002F6   02B0               ADD      SP,SP,#+8
   \   000002F8   0228               CMP      R0,#+2
   \   000002FA   09D1               BNE      ??Termostat_Event_16
   \   000002FC   9620               MOVS     R0,#+150
   \   000002FE   205E               LDRSH    R0,[R4, R0]
   \   00000300   0128               CMP      R0,#+1
   \   00000302   05DB               BLT      ??Termostat_Event_16
   \   00000304   9620               MOVS     R0,#+150
   \   00000306   9621               MOVS     R1,#+150
   \   00000308   615E               LDRSH    R1,[R4, R1]
   \   0000030A   491E               SUBS     R1,R1,#+1
   \   0000030C   2152               STRH     R1,[R4, R0]
   \   0000030E   0126               MOVS     R6,#+1
   1592                      
   1593                           //zapis zmiany temperatury zadanej w trybie manualnym
   1594                           if ((Button(txt,19,48,41,18)==1) || (Button(txt2,19,21,41,18)==1))
   \                     ??Termostat_Event_16:
   \   00000310   82B0               SUB      SP,SP,#+8
   \   00000312   1220               MOVS     R0,#+18
   \   00000314   0090               STR      R0,[SP, #+0]
   \   00000316   2923               MOVS     R3,#+41
   \   00000318   3022               MOVS     R2,#+48
   \   0000031A   1321               MOVS     R1,#+19
   \   0000031C   03A8               ADD      R0,SP,#+12
   \   0000031E   ........           BL       Button
   \   00000322   02B0               ADD      SP,SP,#+8
   \   00000324   0128               CMP      R0,#+1
   \   00000326   0BD0               BEQ      ??Termostat_Event_17
   \   00000328   82B0               SUB      SP,SP,#+8
   \   0000032A   1220               MOVS     R0,#+18
   \   0000032C   0090               STR      R0,[SP, #+0]
   \   0000032E   2923               MOVS     R3,#+41
   \   00000330   1522               MOVS     R2,#+21
   \   00000332   1321               MOVS     R1,#+19
   \   00000334   05A8               ADD      R0,SP,#+20
   \   00000336   ........           BL       Button
   \   0000033A   02B0               ADD      SP,SP,#+8
   \   0000033C   0128               CMP      R0,#+1
   \   0000033E   15D1               BNE      ??Termostat_Event_4
   1595                           {
   1596                                //zapis do flash
   1597                                  unsigned int Save = __get_interrupt_state();  
   \                     ??Termostat_Event_17:
   \   00000340   ........           BL       __iar_get_interrupt_state
   \   00000344   0700               MOVS     R7,R0
   1598                                  __disable_interrupt();
   \   00000346   ........           BL       __iar_disable_interrupt
   1599                                    FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature),&ScreenLokal->Thermo.SetTemperature,1);
                                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000034A   0122               MOVS     R2,#+1
   \   0000034C   9634               ADDS     R4,R4,#+150
   \   0000034E   2100               MOVS     R1,R4
   \   00000350   1848               LDR      R0,??Termostat_Event_2+0x28  ;; 0xbc2e
   \   00000352   244B               LDR      R3,??Termostat_Event_2+0x58  ;; CurrentSheet
   \   00000354   1B78               LDRB     R3,[R3, #+0]
   \   00000356   A024               MOVS     R4,#+160
   \   00000358   6343               MULS     R3,R4,R3
   \   0000035A   EB18               ADDS     R3,R5,R3
   \   0000035C   1818               ADDS     R0,R3,R0
   \   0000035E   ........           BL       FlashWrite
   1600                                  __set_interrupt_state(Save);
   \   00000362   3800               MOVS     R0,R7
   \   00000364   ........           BL       __iar_set_interrupt_state
   1601                                  __enable_interrupt(); 
   \   00000368   ........           BL       __iar_enable_interrupt
   1602                                  //koniec zapisu do flash
   1603                           }
   1604          
   1605                      }
   1606                      
   1607                      
   1608          
   1609                      
   1610              }
   1611           
   1612           
   1613          
   1614           
   1615           if (Repaint==1) 
   \                     ??Termostat_Event_4:
   \   0000036C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000036E   360E               LSRS     R6,R6,#+24
   \   00000370   012E               CMP      R6,#+1
   \   00000372   07D1               BNE      ??Termostat_Event_18
   1616           {
   1617             ThermostatsTimeChartExecute(); 
   \   00000374   ........           BL       ThermostatsTimeChartExecute
   1618             ThermostatsExecute();
   \   00000378   ........           BL       ThermostatsExecute
   1619             MenuPaint();
   \   0000037C   ........           BL       MenuPaint
   1620             ExecuteSpecialThermVar();
   \   00000380   ........           BL       ExecuteSpecialThermVar
   1621           }
   1622          }//_______________________ Koniec funkcji Termostat_Event __________________________
   \                     ??Termostat_Event_18:
   \   00000384   05B0               ADD      SP,SP,#+20
   \   00000386   F0BC               POP      {R4-R7}
   \   00000388   01BC               POP      {R0}
   \   0000038A   0047               BX       R0               ;; return
   \                     ??Termostat_Event_2:
   \   0000038C   ........           DC32     Y_down
   \   00000390   ........           DC32     X_down
   \   00000394   ........           DC32     Y_up
   \   00000398   ........           DC32     X_up
   \   0000039C   ........           DC32     SheetHistoryIndex
   \   000003A0   ........           DC32     SheetHistory
   \   000003A4   ........           DC32     MainStage
   \   000003A8   00011300           DC32     0x130100
   \   000003AC   ........           DC32     `?<Constant "Auto off">`
   \   000003B0   26BC0000           DC32     0xbc26
   \   000003B4   2EBC0000           DC32     0xbc2e
   \   000003B8   ........           DC32     gProg
   \   000003BC   35070000           DC32     0x735
   \   000003C0   ........           DC32     g_leng
   \   000003C4   7D0A0000           DC32     0xa7d
   \   000003C8   ........           DC32     Speech
   \   000003CC   ........           DC32     MenuLevel
   \   000003D0   ........           DC32     `?<Constant "Auto on">`
   \   000003D4   30BC0000           DC32     0xbc30
   \   000003D8   ........           DC32     DateTime + 6
   \   000003DC   ........           DC32     DateTime + 3
   \   000003E0   2ABC0000           DC32     0xbc2a
   \   000003E4   ........           DC32     CurrentSheet
   \   000003E8   2CBC0000           DC32     0xbc2c
   1623            
   1624          
   1625          
   1626          
   1627          
   1628          //*-----------------------------------------------------------------------------
   1629          //* Nazwa funkcji :    Termostat_Refresh
   1630          //* Funkcja strony g³ównej menu
   1631          //*-----------------------------------------------------------------------------
   1632          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1633          void Termostat_Refresh(_Screen* ScreenLokal)
   1634          {
   \                     Termostat_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   1635          
   1636            char dl;
   1637            char txt[6];
   1638            signed short Value=MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg];
   \   00000004   A020               MOVS     R0,#+160
   \   00000006   9021               MOVS     R1,#+144
   \   00000008   615C               LDRB     R1,[R4, R1]
   \   0000000A   0222               MOVS     R2,#+2
   \   0000000C   5143               MULS     R1,R2,R1
   \   0000000E   8F22               MOVS     R2,#+143
   \   00000010   A256               LDRSB    R2,[R4, R2]
   \   00000012   1623               MOVS     R3,#+22
   \   00000014   5A43               MULS     R2,R3,R2
   \   00000016   964B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   5118               ADDS     R1,R2,R1
   \   0000001C   0D5E               LDRSH    R5,[R1, R0]
   1639            
   1640             if (ScreenLokal->Thermo.AutoOn==1)
   \   0000001E   8E20               MOVS     R0,#+142
   \   00000020   205C               LDRB     R0,[R4, R0]
   \   00000022   0128               CMP      R0,#+1
   \   00000024   1DD1               BNE      ??Termostat_Refresh_1
   1641            {
   1642                     
   1643                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000026   6946               MOV      R1,SP
   \   00000028   9620               MOVS     R0,#+150
   \   0000002A   205E               LDRSH    R0,[R4, R0]
   \   0000002C   ........           BL       sIntToStr
   \   00000030   0200               MOVS     R2,R0
   1644                txt[dl++]=127;
   \   00000032   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000034   120E               LSRS     R2,R2,#+24
   \   00000036   6846               MOV      R0,SP
   \   00000038   7F21               MOVS     R1,#+127
   \   0000003A   8154               STRB     R1,[R0, R2]
   \   0000003C   521C               ADDS     R2,R2,#+1
   1645                Label(txt,0,17,43,dl,27,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   6921               MOVS     R1,#+105
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   1B21               MOVS     R1,#+27
   \   0000004C   1000               MOVS     R0,R2
   \   0000004E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   2B23               MOVS     R3,#+43
   \   00000056   1122               MOVS     R2,#+17
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   06A8               ADD      R0,SP,#+24
   \   0000005C   ........           BL       Label
   \   00000060   06B0               ADD      SP,SP,#+24
   1646                
   1647            }
   1648            
   1649            
   1650             if  ((Value)!=(signed short)0x8AAA)          
   \                     ??Termostat_Refresh_1:
   \   00000062   8448               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   00000064   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000066   2D14               ASRS     R5,R5,#+16
   \   00000068   8542               CMP      R5,R0
   \   0000006A   17D0               BEQ      ??Termostat_Refresh_2
   1651            { 
   1652              
   1653              dl=sIntToStr((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg]),txt);
   \   0000006C   6946               MOV      R1,SP
   \   0000006E   A020               MOVS     R0,#+160
   \   00000070   9022               MOVS     R2,#+144
   \   00000072   A25C               LDRB     R2,[R4, R2]
   \   00000074   0223               MOVS     R3,#+2
   \   00000076   5A43               MULS     R2,R3,R2
   \   00000078   8F23               MOVS     R3,#+143
   \   0000007A   E356               LDRSB    R3,[R4, R3]
   \   0000007C   1626               MOVS     R6,#+22
   \   0000007E   7343               MULS     R3,R6,R3
   \   00000080   7B4E               LDR      R6,??Termostat_Refresh_0  ;; MainStage
   \   00000082   F318               ADDS     R3,R6,R3
   \   00000084   9A18               ADDS     R2,R3,R2
   \   00000086   105E               LDRSH    R0,[R2, R0]
   \   00000088   ........           BL       sIntToStr
   \   0000008C   0200               MOVS     R2,R0
   1654              txt[dl++]=127;
   \   0000008E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000090   120E               LSRS     R2,R2,#+24
   \   00000092   6846               MOV      R0,SP
   \   00000094   7F21               MOVS     R1,#+127
   \   00000096   8154               STRB     R1,[R0, R2]
   \   00000098   521C               ADDS     R2,R2,#+1
   \   0000009A   12E0               B        ??Termostat_Refresh_3
   1655            }else{
   1656              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \                     ??Termostat_Refresh_2:
   \   0000009C   6846               MOV      R0,SP
   \   0000009E   2D21               MOVS     R1,#+45
   \   000000A0   0170               STRB     R1,[R0, #+0]
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   2021               MOVS     R1,#+32
   \   000000A6   4170               STRB     R1,[R0, #+1]
   \   000000A8   6846               MOV      R0,SP
   \   000000AA   3F21               MOVS     R1,#+63
   \   000000AC   8170               STRB     R1,[R0, #+2]
   \   000000AE   6846               MOV      R0,SP
   \   000000B0   2021               MOVS     R1,#+32
   \   000000B2   C170               STRB     R1,[R0, #+3]
   \   000000B4   6846               MOV      R0,SP
   \   000000B6   2D21               MOVS     R1,#+45
   \   000000B8   0171               STRB     R1,[R0, #+4]
   \   000000BA   6846               MOV      R0,SP
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   4171               STRB     R1,[R0, #+5]
   1657              dl=5;
   \   000000C0   0522               MOVS     R2,#+5
   1658            }
   1659          
   1660            char Ypoz=81;
   \                     ??Termostat_Refresh_3:
   \   000000C2   5126               MOVS     R6,#+81
   1661            if ((ScreenLokal->Button[0].Hide==0) || (CurrentSheet>0))
   \   000000C4   A07C               LDRB     R0,[R4, #+18]
   \   000000C6   C006               LSLS     R0,R0,#+27
   \   000000C8   03D5               BPL      ??Termostat_Refresh_4
   \   000000CA   6B48               LDR      R0,??Termostat_Refresh_0+0x8  ;; CurrentSheet
   \   000000CC   0078               LDRB     R0,[R0, #+0]
   \   000000CE   0128               CMP      R0,#+1
   \   000000D0   00D3               BCC      ??Termostat_Refresh_5
   1662            {
   1663              Ypoz=73;
   \                     ??Termostat_Refresh_4:
   \   000000D2   4926               MOVS     R6,#+73
   1664            }
   1665            
   1666            
   1667            static DzielBat;
                          ^
Warning[Pe260]: explicit type is missing ("int" assumed)
   1668            
   1669            
   1670            if (DzielBat<20) {DzielBat++;} else {DzielBat=0;} 
   \                     ??Termostat_Refresh_5:
   \   000000D4   6948               LDR      R0,??Termostat_Refresh_0+0xC  ;; ??DzielBat
   \   000000D6   0068               LDR      R0,[R0, #+0]
   \   000000D8   1428               CMP      R0,#+20
   \   000000DA   05DA               BGE      ??Termostat_Refresh_6
   \   000000DC   6748               LDR      R0,??Termostat_Refresh_0+0xC  ;; ??DzielBat
   \   000000DE   6749               LDR      R1,??Termostat_Refresh_0+0xC  ;; ??DzielBat
   \   000000E0   0968               LDR      R1,[R1, #+0]
   \   000000E2   491C               ADDS     R1,R1,#+1
   \   000000E4   0160               STR      R1,[R0, #+0]
   \   000000E6   02E0               B        ??Termostat_Refresh_7
   \                     ??Termostat_Refresh_6:
   \   000000E8   6448               LDR      R0,??Termostat_Refresh_0+0xC  ;; ??DzielBat
   \   000000EA   0021               MOVS     R1,#+0
   \   000000EC   0160               STR      R1,[R0, #+0]
   1671            
   1672            if((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Port & 0x8000) && (DzielBat>12) && ((Value)!=(signed short)0x8AAA))
   \                     ??Termostat_Refresh_7:
   \   000000EE   8F20               MOVS     R0,#+143
   \   000000F0   2056               LDRSB    R0,[R4, R0]
   \   000000F2   1621               MOVS     R1,#+22
   \   000000F4   4843               MULS     R0,R1,R0
   \   000000F6   5E49               LDR      R1,??Termostat_Refresh_0  ;; MainStage
   \   000000F8   0818               ADDS     R0,R1,R0
   \   000000FA   A030               ADDS     R0,R0,#+160
   \   000000FC   0088               LDRH     R0,[R0, #+0]
   \   000000FE   0004               LSLS     R0,R0,#+16
   \   00000100   28D5               BPL      ??Termostat_Refresh_8
   \   00000102   5E48               LDR      R0,??Termostat_Refresh_0+0xC  ;; ??DzielBat
   \   00000104   0068               LDR      R0,[R0, #+0]
   \   00000106   0D28               CMP      R0,#+13
   \   00000108   24DB               BLT      ??Termostat_Refresh_8
   \   0000010A   5A48               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   0000010C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000010E   2D14               ASRS     R5,R5,#+16
   \   00000110   8542               CMP      R5,R0
   \   00000112   1FD0               BEQ      ??Termostat_Refresh_8
   1673            {
   1674              Label20(0,2,1,Ypoz,0,60,0,105,0);
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0020               MOVS     R0,#+0
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   6921               MOVS     R1,#+105
   \   0000011C   0020               MOVS     R0,#+0
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   3C21               MOVS     R1,#+60
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   03B4               PUSH     {R0,R1}
   \   00000126   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000128   360E               LSRS     R6,R6,#+24
   \   0000012A   3300               MOVS     R3,R6
   \   0000012C   0122               MOVS     R2,#+1
   \   0000012E   0221               MOVS     R1,#+2
   \   00000130   0020               MOVS     R0,#+0
   \   00000132   ........           BL       Label20
   \   00000136   06B0               ADD      SP,SP,#+24
   1675              CopyToCanvasPoint((char*)BateriaWyladowanaDuza, 24, Ypoz+10, 19,8);
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0820               MOVS     R0,#+8
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   1323               MOVS     R3,#+19
   \   00000140   0A36               ADDS     R6,R6,#+10
   \   00000142   3200               MOVS     R2,R6
   \   00000144   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000146   120E               LSRS     R2,R2,#+24
   \   00000148   1821               MOVS     R1,#+24
   \   0000014A   4D48               LDR      R0,??Termostat_Refresh_0+0x10  ;; BateriaWyladowanaDuza
   \   0000014C   ........           BL       CopyToCanvasPoint
   \   00000150   02B0               ADD      SP,SP,#+8
   \   00000152   13E0               B        ??Termostat_Refresh_9
   1676            }  
   1677            else
   1678            {  
   1679              Label20(txt,2,1,Ypoz,dl,60,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??Termostat_Refresh_8:
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   0020               MOVS     R0,#+0
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   6921               MOVS     R1,#+105
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3C21               MOVS     R1,#+60
   \   00000162   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000164   120E               LSRS     R2,R2,#+24
   \   00000166   1000               MOVS     R0,R2
   \   00000168   03B4               PUSH     {R0,R1}
   \   0000016A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000016C   360E               LSRS     R6,R6,#+24
   \   0000016E   3300               MOVS     R3,R6
   \   00000170   0122               MOVS     R2,#+1
   \   00000172   0221               MOVS     R1,#+2
   \   00000174   06A8               ADD      R0,SP,#+24
   \   00000176   ........           BL       Label20
   \   0000017A   06B0               ADD      SP,SP,#+24
   1680            }
   1681            
   1682            
   1683            
   1684            V_line(9,36,12,0);
   \                     ??Termostat_Refresh_9:
   \   0000017C   0023               MOVS     R3,#+0
   \   0000017E   0C22               MOVS     R2,#+12
   \   00000180   2421               MOVS     R1,#+36
   \   00000182   0920               MOVS     R0,#+9
   \   00000184   ........           BL       V_line
   1685            
   1686            static int TermAmionation;
   1687            
   1688            TermAmionation++;
   \   00000188   3E48               LDR      R0,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   0000018A   3E49               LDR      R1,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   0000018C   0968               LDR      R1,[R1, #+0]
   \   0000018E   491C               ADDS     R1,R1,#+1
   \   00000190   0160               STR      R1,[R0, #+0]
   1689            if (TermAmionation>12) TermAmionation=1;
   \   00000192   3C48               LDR      R0,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   00000194   0068               LDR      R0,[R0, #+0]
   \   00000196   0D28               CMP      R0,#+13
   \   00000198   02DB               BLT      ??Termostat_Refresh_10
   \   0000019A   3A48               LDR      R0,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   0000019C   0121               MOVS     R1,#+1
   \   0000019E   0160               STR      R1,[R0, #+0]
   1690            if ((ScreenLokal->Thermo.ActorNode<0xFF) && (ScreenLokal->Thermo.ActorNode>=0))   //je¿eli wêze³
   \                     ??Termostat_Refresh_10:
   \   000001A0   8C20               MOVS     R0,#+140
   \   000001A2   2056               LDRSB    R0,[R4, R0]
   \   000001A4   0028               CMP      R0,#+0
   \   000001A6   13D4               BMI      ??Termostat_Refresh_11
   1691            {
   1692              if ((PortStageRead(MainStage.StageQ[ScreenLokal->Thermo.ActorNode].Port , ScreenLokal->Thermo.ActorPort))==0) TermAmionation=4;
   \   000001A8   8D20               MOVS     R0,#+141
   \   000001AA   215C               LDRB     R1,[R4, R0]
   \   000001AC   3648               LDR      R0,??Termostat_Refresh_0+0x18  ;; 0x3a2
   \   000001AE   8C22               MOVS     R2,#+140
   \   000001B0   A256               LDRSB    R2,[R4, R2]
   \   000001B2   1623               MOVS     R3,#+22
   \   000001B4   5A43               MULS     R2,R3,R2
   \   000001B6   2E4B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   000001B8   9A18               ADDS     R2,R3,R2
   \   000001BA   105A               LDRH     R0,[R2, R0]
   \   000001BC   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000001BE   0014               ASRS     R0,R0,#+16
   \   000001C0   ........           BL       PortStageRead
   \   000001C4   0028               CMP      R0,#+0
   \   000001C6   15D1               BNE      ??Termostat_Refresh_12
   \   000001C8   2E48               LDR      R0,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   000001CA   0421               MOVS     R1,#+4
   \   000001CC   0160               STR      R1,[R0, #+0]
   \   000001CE   11E0               B        ??Termostat_Refresh_12
   1693            }else{  //Je¿eli zmienna
   1694              if(((Variables[ScreenLokal->Thermo.ActorPort/8]>> (ScreenLokal->Thermo.ActorPort%8))&0x1)==0) TermAmionation=4;
   \                     ??Termostat_Refresh_11:
   \   000001D0   8D20               MOVS     R0,#+141
   \   000001D2   205C               LDRB     R0,[R4, R0]
   \   000001D4   0821               MOVS     R1,#+8
   \   000001D6   ........           BL       __aeabi_idivmod
   \   000001DA   2C49               LDR      R1,??Termostat_Refresh_0+0x1C  ;; Variables
   \   000001DC   0D5C               LDRB     R5,[R1, R0]
   \   000001DE   8D20               MOVS     R0,#+141
   \   000001E0   205C               LDRB     R0,[R4, R0]
   \   000001E2   0821               MOVS     R1,#+8
   \   000001E4   ........           BL       __aeabi_idivmod
   \   000001E8   0D41               ASRS     R5,R5,R1
   \   000001EA   E807               LSLS     R0,R5,#+31
   \   000001EC   02D4               BMI      ??Termostat_Refresh_12
   \   000001EE   2548               LDR      R0,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   000001F0   0421               MOVS     R1,#+4
   \   000001F2   0160               STR      R1,[R0, #+0]
   1695            }
   1696            
   1697            V_line(9,36,TermAmionation,1);
   \                     ??Termostat_Refresh_12:
   \   000001F4   0123               MOVS     R3,#+1
   \   000001F6   2348               LDR      R0,??Termostat_Refresh_0+0x14  ;; ??TermAmionation
   \   000001F8   0268               LDR      R2,[R0, #+0]
   \   000001FA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001FC   120E               LSRS     R2,R2,#+24
   \   000001FE   2421               MOVS     R1,#+36
   \   00000200   0920               MOVS     R0,#+9
   \   00000202   ........           BL       V_line
   1698          
   1699            static short int LastTemp;
   1700            
   1701            if (LastTemp!=ScreenLokal->Thermo.SetTemperature)
   \   00000206   2248               LDR      R0,??Termostat_Refresh_0+0x20  ;; ??LastTemp
   \   00000208   0021               MOVS     R1,#+0
   \   0000020A   405E               LDRSH    R0,[R0, R1]
   \   0000020C   9621               MOVS     R1,#+150
   \   0000020E   615E               LDRSH    R1,[R4, R1]
   \   00000210   8842               CMP      R0,R1
   \   00000212   28D0               BEQ      ??Termostat_Refresh_13
   1702            {  
   1703          
   1704                  signed   short H_Tmp;
   1705                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   00000214   9420               MOVS     R0,#+148
   \   00000216   205E               LDRSH    R0,[R4, R0]
   \   00000218   9221               MOVS     R1,#+146
   \   0000021A   615E               LDRSH    R1,[R4, R1]
   \   0000021C   8842               CMP      R0,R1
   \   0000021E   00DA               BGE      ??Termostat_Refresh_14
   \   00000220   0800               MOVS     R0,R1
   1706                {
   1707                  H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1708                }else{
   1709                  H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1710                }
   1711                
   1712                if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Refresh_14:
   \   00000222   8E21               MOVS     R1,#+142
   \   00000224   615C               LDRB     R1,[R4, R1]
   \   00000226   0129               CMP      R1,#+1
   \   00000228   19D1               BNE      ??Termostat_Refresh_15
   1713                {
   1714                  if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \   0000022A   9621               MOVS     R1,#+150
   \   0000022C   615E               LDRSH    R1,[R4, R1]
   \   0000022E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000230   0014               ASRS     R0,R0,#+16
   \   00000232   8142               CMP      R1,R0
   \   00000234   03D1               BNE      ??Termostat_Refresh_16
   1715                  {
   1716                   txt[0]=31; 
   \   00000236   6846               MOV      R0,SP
   \   00000238   1F21               MOVS     R1,#+31
   \   0000023A   0170               STRB     R1,[R0, #+0]
   \   0000023C   02E0               B        ??Termostat_Refresh_17
   1717                  }else{
   1718                   txt[0]=30;       
   \                     ??Termostat_Refresh_16:
   \   0000023E   6846               MOV      R0,SP
   \   00000240   1E21               MOVS     R1,#+30
   \   00000242   0170               STRB     R1,[R0, #+0]
   1719                  }
   1720                  txt[1]=0; 
   \                     ??Termostat_Refresh_17:
   \   00000244   6846               MOV      R0,SP
   \   00000246   0021               MOVS     R1,#+0
   \   00000248   4170               STRB     R1,[R0, #+1]
   1721                  
   1722                  Button(txt,45,44,15,17);
   \   0000024A   82B0               SUB      SP,SP,#+8
   \   0000024C   1120               MOVS     R0,#+17
   \   0000024E   0090               STR      R0,[SP, #+0]
   \   00000250   0F23               MOVS     R3,#+15
   \   00000252   2C22               MOVS     R2,#+44
   \   00000254   2D21               MOVS     R1,#+45
   \   00000256   02A8               ADD      R0,SP,#+8
   \   00000258   ........           BL       Button
   \   0000025C   02B0               ADD      SP,SP,#+8
   1723                }
   1724                LastTemp=ScreenLokal->Thermo.SetTemperature;
   \                     ??Termostat_Refresh_15:
   \   0000025E   0C48               LDR      R0,??Termostat_Refresh_0+0x20  ;; ??LastTemp
   \   00000260   9634               ADDS     R4,R4,#+150
   \   00000262   2188               LDRH     R1,[R4, #+0]
   \   00000264   0180               STRH     R1,[R0, #+0]
   1725            }
   1726          
   1727            
   1728          }//_______________________ Koniec funkcji Termostat_Refresh __________________________
   \                     ??Termostat_Refresh_13:
   \   00000266   02B0               ADD      SP,SP,#+8
   \   00000268   70BC               POP      {R4-R6}
   \   0000026A   01BC               POP      {R0}
   \   0000026C   0047               BX       R0               ;; return
   \   0000026E   C046               Nop      
   \                     ??Termostat_Refresh_0:
   \   00000270   ........           DC32     MainStage
   \   00000274   AA8AFFFF           DC32     0xffff8aaa
   \   00000278   ........           DC32     CurrentSheet
   \   0000027C   ........           DC32     ??DzielBat
   \   00000280   ........           DC32     BateriaWyladowanaDuza
   \   00000284   ........           DC32     ??TermAmionation
   \   00000288   A2030000           DC32     0x3a2
   \   0000028C   ........           DC32     Variables
   \   00000290   ........           DC32     ??LastTemp

   \                                 In section .bss, align 4
   \                     ??DzielBat:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??TermAmionation:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
   \                     ??LastTemp:
   \   00000000                      DS8 2
   1729            
   1730          
   1731          
   1732          
   1733          
   1734          
   1735          

   \                                 In section Debug.txt, align 4, keep-with-next
   1736          void Timetable_Paint(char Screen)
   1737          {         
   \                     Timetable_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
   \   00000004   0400               MOVS     R4,R0
   1738            
   1739               if(Screen) List_Paint(Speech[g_leng].Terminarz,0,1,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000008   240E               LSRS     R4,R4,#+24
   \   0000000A   002C               CMP      R4,#+0
   \   0000000C   1CD0               BEQ      ??Timetable_Paint_0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   A9A0               ADR      R0,??Timetable_Paint_1  ;; 0x20, 0x00, 0x00, 0x00
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0321               MOVS     R1,#+3
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0023               MOVS     R3,#+0
   \   0000002E   0122               MOVS     R2,#+1
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   A648               LDR      R0,??Timetable_Paint_1+0x4  ;; 0x762
   \   00000034   A64D               LDR      R5,??Timetable_Paint_1+0x8  ;; g_leng
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   A64E               LDR      R6,??Timetable_Paint_1+0xC  ;; 0xa7d
   \   0000003A   7543               MULS     R5,R6,R5
   \   0000003C   A64E               LDR      R6,??Timetable_Paint_1+0x10  ;; Speech
   \   0000003E   7519               ADDS     R5,R6,R5
   \   00000040   2818               ADDS     R0,R5,R0
   \   00000042   ........           BL       List_Paint
   \   00000046   0AB0               ADD      SP,SP,#+40
   1740          
   1741          
   1742              char L_TaskAmount;
   1743            
   1744              L_TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \                     ??Timetable_Paint_0:
   \   00000048   6846               MOV      R0,SP
   \   0000004A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000004C   240E               LSRS     R4,R4,#+24
   \   0000004E   1121               MOVS     R1,#+17
   \   00000050   6143               MULS     R1,R4,R1
   \   00000052   A24A               LDR      R2,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   00000054   515C               LDRB     R1,[R2, R1]
   \   00000056   0170               STRB     R1,[R0, #+0]
   1745              if (L_TaskAmount>4) L_TaskAmount=4;
   \   00000058   6846               MOV      R0,SP
   \   0000005A   0078               LDRB     R0,[R0, #+0]
   \   0000005C   0528               CMP      R0,#+5
   \   0000005E   02D3               BCC      ??Timetable_Paint_2
   \   00000060   6846               MOV      R0,SP
   \   00000062   0421               MOVS     R1,#+4
   \   00000064   0170               STRB     R1,[R0, #+0]
   1746              char *ptTaskAmount=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount);
   \                     ??Timetable_Paint_2:
   \   00000066   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000068   240E               LSRS     R4,R4,#+24
   \   0000006A   1120               MOVS     R0,#+17
   \   0000006C   6043               MULS     R0,R4,R0
   \   0000006E   9B49               LDR      R1,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   00000070   0B18               ADDS     R3,R1,R0
   1747              if (L_TaskAmount==0)
   \   00000072   6846               MOV      R0,SP
   \   00000074   0078               LDRB     R0,[R0, #+0]
   \   00000076   0028               CMP      R0,#+0
   \   00000078   11D1               BNE      ??Timetable_Paint_3
   1748              {
   1749                L_TaskAmount=1;
   \   0000007A   6846               MOV      R0,SP
   \   0000007C   0121               MOVS     R1,#+1
   \   0000007E   0170               STRB     R1,[R0, #+0]
   1750                
   1751                        //zapis do flash
   1752                    unsigned int Save = __get_interrupt_state();  
   \   00000080   ........           BL       __iar_get_interrupt_state
   \   00000084   0500               MOVS     R5,R0
   1753                    __disable_interrupt();
   \   00000086   ........           BL       __iar_disable_interrupt
   1754                    //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)),0, &L_TaskAmount,1);
   1755                    FlashWrite(ptTaskAmount, &L_TaskAmount, 1);
                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000008A   0122               MOVS     R2,#+1
   \   0000008C   6946               MOV      R1,SP
   \   0000008E   1800               MOVS     R0,R3
   \   00000090   ........           BL       FlashWrite
   1756                    __set_interrupt_state(Save);
   \   00000094   2800               MOVS     R0,R5
   \   00000096   ........           BL       __iar_set_interrupt_state
   1757                    __enable_interrupt();
   \   0000009A   ........           BL       __iar_enable_interrupt
   1758                    //koniec zapisu do flash
   1759            
   1760              }
   1761             
   1762                
   1763                
   1764                char Ychart=108;
   \                     ??Timetable_Paint_3:
   \   0000009E   6C25               MOVS     R5,#+108
   1765                char CharOnOff[]={130,0};
   \   000000A0   03A8               ADD      R0,SP,#+12
   \   000000A2   8F49               LDR      R1,??Timetable_Paint_1+0x18  ;; `?<Constant {130, 0}>`
   \   000000A4   0A68               LDR      R2,[R1, #0]
   \   000000A6   0260               STR      R2,[R0, #0]
   1766                char TimeString[6];
   1767                TimeString[5]=0;
   \   000000A8   01A8               ADD      R0,SP,#+4
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   4171               STRB     R1,[R0, #+5]
   1768                for (char TN=0; TN<L_TaskAmount; TN++)
   \   000000AE   0026               MOVS     R6,#+0
   \   000000B0   54E0               B        ??Timetable_Paint_4
   1769                {
   1770                    
   1771                    H_line(1,Ychart,62,1);  
   1772                    H_line(1,Ychart-1,62,1);  
   1773                    H_line(1,Ychart-27,62,1);   
   1774                    V_line(0,Ychart-26,26,1); 
   1775                    V_line(63,Ychart-26,26,1); 
   1776                    
   1777                    
   1778                    Button(CharOnOff,2,Ychart-15,13,13);
   1779                    if ((TN>0) && (TN==L_TaskAmount-1)) Button("-",53,Ychart-13,11,14);
   1780                    
   1781                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   1782                    char LabelNeg=0;
   1783                    if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1784                    {
   1785                     CopyToCanvasPoint((char *)ekran_tab,44,Ychart-13,8,10);   
   1786                     LabelNeg=1;
   1787                    }
   1788                    
   1789                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour, TimeString); //(char Value, char *Vstring, char ill);
                           ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   1790                    TimeString[2]=':';
   1791                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute, &(TimeString[3])); //(char Value, char *Vstring, char ill);
   1792                    Label(TimeString,2,17,Ychart-13,5,25,0,128,LabelNeg);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   1793                 
   1794                          
   1795                    for (char i=0; i<7; i++)
   1796                    {
   1797                      Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart-25,1,6,0,128,((AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??Timetable_Paint_5:
   \   000000B2   82B0               SUB      SP,SP,#+8
   \   000000B4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000B6   360E               LSRS     R6,R6,#+24
   \   000000B8   0420               MOVS     R0,#+4
   \   000000BA   7043               MULS     R0,R6,R0
   \   000000BC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000BE   240E               LSRS     R4,R4,#+24
   \   000000C0   1121               MOVS     R1,#+17
   \   000000C2   6143               MULS     R1,R4,R1
   \   000000C4   854A               LDR      R2,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   000000C6   5118               ADDS     R1,R2,R1
   \   000000C8   0818               ADDS     R0,R1,R0
   \   000000CA   8078               LDRB     R0,[R0, #+2]
   \   000000CC   3841               ASRS     R0,R0,R7
   \   000000CE   0121               MOVS     R1,#+1
   \   000000D0   0140               ANDS     R1,R1,R0
   \   000000D2   0091               STR      R1,[SP, #+0]
   \   000000D4   8021               MOVS     R1,#+128
   \   000000D6   0020               MOVS     R0,#+0
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   0621               MOVS     R1,#+6
   \   000000DC   0120               MOVS     R0,#+1
   \   000000DE   03B4               PUSH     {R0,R1}
   \   000000E0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E2   2D0E               LSRS     R5,R5,#+24
   \   000000E4   2B00               MOVS     R3,R5
   \   000000E6   193B               SUBS     R3,R3,#+25
   \   000000E8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000EA   3F0E               LSRS     R7,R7,#+24
   \   000000EC   0822               MOVS     R2,#+8
   \   000000EE   7A43               MULS     R2,R7,R2
   \   000000F0   121D               ADDS     R2,R2,#+4
   \   000000F2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000F4   120E               LSRS     R2,R2,#+24
   \   000000F6   0221               MOVS     R1,#+2
   \   000000F8   02B5               PUSH     {R1,LR}
   \   000000FA   9446               MOV      R12,R2
   \   000000FC   7949               LDR      R1,??Timetable_Paint_1+0x1C  ;; 0x6ea
   \   000000FE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000100   3F0E               LSRS     R7,R7,#+24
   \   00000102   7348               LDR      R0,??Timetable_Paint_1+0x8  ;; g_leng
   \   00000104   0068               LDR      R0,[R0, #+0]
   \   00000106   734A               LDR      R2,??Timetable_Paint_1+0xC  ;; 0xa7d
   \   00000108   5043               MULS     R0,R2,R0
   \   0000010A   734A               LDR      R2,??Timetable_Paint_1+0x10  ;; Speech
   \   0000010C   1018               ADDS     R0,R2,R0
   \   0000010E   C019               ADDS     R0,R0,R7
   \   00000110   4018               ADDS     R0,R0,R1
   \   00000112   6246               MOV      R2,R12
   \   00000114   0099               LDR      R1,[SP, #0]
   \   00000116   02B0               ADD      SP,SP,#+8
   \   00000118   ........           BL       Label
   \   0000011C   06B0               ADD      SP,SP,#+24
   1798                    }
   \   0000011E   7F1C               ADDS     R7,R7,#+1
   \                     ??Timetable_Paint_6:
   \   00000120   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000122   3F0E               LSRS     R7,R7,#+24
   \   00000124   072F               CMP      R7,#+7
   \   00000126   C4D3               BCC      ??Timetable_Paint_5
   1799                    
   1800          
   1801                    
   1802                    Ychart=Ychart-27;
   \   00000128   1B3D               SUBS     R5,R5,#+27
   1803                    
   1804                    if ((TN==L_TaskAmount-1)&& (TN<3)) Button("+",53,Ychart-13,11,14);
   \   0000012A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012C   360E               LSRS     R6,R6,#+24
   \   0000012E   6846               MOV      R0,SP
   \   00000130   0078               LDRB     R0,[R0, #+0]
   \   00000132   401E               SUBS     R0,R0,#+1
   \   00000134   8642               CMP      R6,R0
   \   00000136   10D1               BNE      ??Timetable_Paint_7
   \   00000138   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000013A   360E               LSRS     R6,R6,#+24
   \   0000013C   032E               CMP      R6,#+3
   \   0000013E   0CD2               BCS      ??Timetable_Paint_7
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0E20               MOVS     R0,#+14
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   0B23               MOVS     R3,#+11
   \   00000148   2A00               MOVS     R2,R5
   \   0000014A   0D3A               SUBS     R2,R2,#+13
   \   0000014C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000014E   120E               LSRS     R2,R2,#+24
   \   00000150   3521               MOVS     R1,#+53
   \   00000152   65A0               ADR      R0,??Timetable_Paint_1+0x20  ;; 0x2B, 0x00, 0x00, 0x00
   \   00000154   ........           BL       Button
   \   00000158   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_7:
   \   0000015A   761C               ADDS     R6,R6,#+1
   \                     ??Timetable_Paint_4:
   \   0000015C   6846               MOV      R0,SP
   \   0000015E   0078               LDRB     R0,[R0, #+0]
   \   00000160   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000162   360E               LSRS     R6,R6,#+24
   \   00000164   8642               CMP      R6,R0
   \   00000166   00D3               BCC      .+4
   \   00000168   AAE0               B        ??Timetable_Paint_8
   \   0000016A   0123               MOVS     R3,#+1
   \   0000016C   3E22               MOVS     R2,#+62
   \   0000016E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000170   2D0E               LSRS     R5,R5,#+24
   \   00000172   2900               MOVS     R1,R5
   \   00000174   0120               MOVS     R0,#+1
   \   00000176   ........           BL       H_line
   \   0000017A   0123               MOVS     R3,#+1
   \   0000017C   3E22               MOVS     R2,#+62
   \   0000017E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000180   2D0E               LSRS     R5,R5,#+24
   \   00000182   691E               SUBS     R1,R5,#+1
   \   00000184   0120               MOVS     R0,#+1
   \   00000186   ........           BL       H_line
   \   0000018A   0123               MOVS     R3,#+1
   \   0000018C   3E22               MOVS     R2,#+62
   \   0000018E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000190   2D0E               LSRS     R5,R5,#+24
   \   00000192   2900               MOVS     R1,R5
   \   00000194   1B39               SUBS     R1,R1,#+27
   \   00000196   0120               MOVS     R0,#+1
   \   00000198   ........           BL       H_line
   \   0000019C   0123               MOVS     R3,#+1
   \   0000019E   1A22               MOVS     R2,#+26
   \   000001A0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001A2   2D0E               LSRS     R5,R5,#+24
   \   000001A4   2900               MOVS     R1,R5
   \   000001A6   1A39               SUBS     R1,R1,#+26
   \   000001A8   0020               MOVS     R0,#+0
   \   000001AA   ........           BL       V_line
   \   000001AE   0123               MOVS     R3,#+1
   \   000001B0   1A22               MOVS     R2,#+26
   \   000001B2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001B4   2D0E               LSRS     R5,R5,#+24
   \   000001B6   2900               MOVS     R1,R5
   \   000001B8   1A39               SUBS     R1,R1,#+26
   \   000001BA   3F20               MOVS     R0,#+63
   \   000001BC   ........           BL       V_line
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   0D20               MOVS     R0,#+13
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   0D23               MOVS     R3,#+13
   \   000001C8   2A00               MOVS     R2,R5
   \   000001CA   0F3A               SUBS     R2,R2,#+15
   \   000001CC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001CE   120E               LSRS     R2,R2,#+24
   \   000001D0   0221               MOVS     R1,#+2
   \   000001D2   05A8               ADD      R0,SP,#+20
   \   000001D4   ........           BL       Button
   \   000001D8   02B0               ADD      SP,SP,#+8
   \   000001DA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001DC   360E               LSRS     R6,R6,#+24
   \   000001DE   012E               CMP      R6,#+1
   \   000001E0   13D3               BCC      ??Timetable_Paint_9
   \   000001E2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001E4   360E               LSRS     R6,R6,#+24
   \   000001E6   6846               MOV      R0,SP
   \   000001E8   0078               LDRB     R0,[R0, #+0]
   \   000001EA   401E               SUBS     R0,R0,#+1
   \   000001EC   8642               CMP      R6,R0
   \   000001EE   0CD1               BNE      ??Timetable_Paint_9
   \   000001F0   82B0               SUB      SP,SP,#+8
   \   000001F2   0E20               MOVS     R0,#+14
   \   000001F4   0090               STR      R0,[SP, #+0]
   \   000001F6   0B23               MOVS     R3,#+11
   \   000001F8   2A00               MOVS     R2,R5
   \   000001FA   0D3A               SUBS     R2,R2,#+13
   \   000001FC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001FE   120E               LSRS     R2,R2,#+24
   \   00000200   3521               MOVS     R1,#+53
   \   00000202   3AA0               ADR      R0,??Timetable_Paint_1+0x24  ;; 0x2D, 0x00, 0x00, 0x00
   \   00000204   ........           BL       Button
   \   00000208   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_9:
   \   0000020A   04A8               ADD      R0,SP,#+16
   \   0000020C   3849               LDR      R1,??Timetable_Paint_1+0x28  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0`
   \   0000020E   8CC9               LDM      R1!,{R2,R3,R7}
   \   00000210   8CC0               STM      R0!,{R2,R3,R7}
   \   00000212   0C39               SUBS     R1,R1,#+12
   \   00000214   0C38               SUBS     R0,R0,#+12
   \   00000216   0027               MOVS     R7,#+0
   \   00000218   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000021A   360E               LSRS     R6,R6,#+24
   \   0000021C   0420               MOVS     R0,#+4
   \   0000021E   7043               MULS     R0,R6,R0
   \   00000220   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000222   240E               LSRS     R4,R4,#+24
   \   00000224   1121               MOVS     R1,#+17
   \   00000226   6143               MULS     R1,R4,R1
   \   00000228   2C4A               LDR      R2,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   0000022A   5118               ADDS     R1,R2,R1
   \   0000022C   0818               ADDS     R0,R1,R0
   \   0000022E   4078               LDRB     R0,[R0, #+1]
   \   00000230   0028               CMP      R0,#+0
   \   00000232   0DD0               BEQ      ??Timetable_Paint_10
   \   00000234   82B0               SUB      SP,SP,#+8
   \   00000236   0A20               MOVS     R0,#+10
   \   00000238   0090               STR      R0,[SP, #+0]
   \   0000023A   0823               MOVS     R3,#+8
   \   0000023C   2A00               MOVS     R2,R5
   \   0000023E   0D3A               SUBS     R2,R2,#+13
   \   00000240   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000242   120E               LSRS     R2,R2,#+24
   \   00000244   2C21               MOVS     R1,#+44
   \   00000246   06A8               ADD      R0,SP,#+24
   \   00000248   ........           BL       CopyToCanvasPoint
   \   0000024C   02B0               ADD      SP,SP,#+8
   \   0000024E   0127               MOVS     R7,#+1
   \                     ??Timetable_Paint_10:
   \   00000250   01A9               ADD      R1,SP,#+4
   \   00000252   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000254   360E               LSRS     R6,R6,#+24
   \   00000256   0420               MOVS     R0,#+4
   \   00000258   7043               MULS     R0,R6,R0
   \   0000025A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000025C   240E               LSRS     R4,R4,#+24
   \   0000025E   1122               MOVS     R2,#+17
   \   00000260   6243               MULS     R2,R4,R2
   \   00000262   1E4B               LDR      R3,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   00000264   9A18               ADDS     R2,R3,R2
   \   00000266   1018               ADDS     R0,R2,R0
   \   00000268   C078               LDRB     R0,[R0, #+3]
   \   0000026A   ........           BL       CharToStr2
   \   0000026E   01A8               ADD      R0,SP,#+4
   \   00000270   3A21               MOVS     R1,#+58
   \   00000272   8170               STRB     R1,[R0, #+2]
   \   00000274   01A9               ADD      R1,SP,#+4
   \   00000276   C91C               ADDS     R1,R1,#+3
   \   00000278   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000027A   360E               LSRS     R6,R6,#+24
   \   0000027C   0420               MOVS     R0,#+4
   \   0000027E   7043               MULS     R0,R6,R0
   \   00000280   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000282   240E               LSRS     R4,R4,#+24
   \   00000284   1122               MOVS     R2,#+17
   \   00000286   6243               MULS     R2,R4,R2
   \   00000288   144B               LDR      R3,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   0000028A   9A18               ADDS     R2,R3,R2
   \   0000028C   1018               ADDS     R0,R2,R0
   \   0000028E   0079               LDRB     R0,[R0, #+4]
   \   00000290   ........           BL       CharToStr2
   \   00000294   82B0               SUB      SP,SP,#+8
   \   00000296   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000298   3F0E               LSRS     R7,R7,#+24
   \   0000029A   0097               STR      R7,[SP, #+0]
   \   0000029C   8021               MOVS     R1,#+128
   \   0000029E   0020               MOVS     R0,#+0
   \   000002A0   03B4               PUSH     {R0,R1}
   \   000002A2   1921               MOVS     R1,#+25
   \   000002A4   0520               MOVS     R0,#+5
   \   000002A6   03B4               PUSH     {R0,R1}
   \   000002A8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002AA   2D0E               LSRS     R5,R5,#+24
   \   000002AC   2B00               MOVS     R3,R5
   \   000002AE   0D3B               SUBS     R3,R3,#+13
   \   000002B0   1122               MOVS     R2,#+17
   \   000002B2   0221               MOVS     R1,#+2
   \   000002B4   07A8               ADD      R0,SP,#+28
   \   000002B6   ........           BL       Label
   \   000002BA   06B0               ADD      SP,SP,#+24
   \   000002BC   0027               MOVS     R7,#+0
   \   000002BE   2FE7               B        ??Timetable_Paint_6
   1805           
   1806                }
   1807                
   1808              
   1809          
   1810                
   1811          
   1812          }//________________________________________________________________________
   \                     ??Timetable_Paint_8:
   \   000002C0   07B0               ADD      SP,SP,#+28
   \   000002C2   F0BC               POP      {R4-R7}
   \   000002C4   01BC               POP      {R0}
   \   000002C6   0047               BX       R0               ;; return
   \                     ??Timetable_Paint_1:
   \   000002C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002CC   62070000           DC32     0x762
   \   000002D0   ........           DC32     g_leng
   \   000002D4   7D0A0000           DC32     0xa7d
   \   000002D8   ........           DC32     Speech
   \   000002DC   30D81300           DC32     0x13d830
   \   000002E0   ........           DC32     `?<Constant {130, 0}>`
   \   000002E4   EA060000           DC32     0x6ea
   \   000002E8   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   000002EC   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   000002F0   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0`
   1813          
   1814          
   1815          

   \                                 In section .bss, align 4
   1816          __Task *TaskToChange;
   \                     TaskToChange:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   1817          char TimetableSet_Hour;
   \                     TimetableSet_Hour:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1818          char TimetableSet_Minute;
   \                     TimetableSet_Minute:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1819          char TimetableSet_Week;
   \                     TimetableSet_Week:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   1820          void Timetable_Event(char Screen)
   1821          {      
   \                     Timetable_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   1822             char Repaint=0;
   \   00000004   0027               MOVS     R7,#+0
   1823             char CharToSave=0;
   \   00000006   6846               MOV      R0,SP
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   8170               STRB     R1,[R0, #+2]
   1824             char TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \   0000000C   6846               MOV      R0,SP
   \   0000000E   6946               MOV      R1,SP
   \   00000010   097A               LDRB     R1,[R1, #+8]
   \   00000012   1122               MOVS     R2,#+17
   \   00000014   5143               MULS     R1,R2,R1
   \   00000016   2E4A               LDR      R2,??Timetable_Event_0  ;; 0x13d830
   \   00000018   515C               LDRB     R1,[R2, R1]
   \   0000001A   0170               STRB     R1,[R0, #+0]
   1825          
   1826             if (TaskAmount>4) TaskAmount=4;
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   0078               LDRB     R0,[R0, #+0]
   \   00000020   0528               CMP      R0,#+5
   \   00000022   02D3               BCC      ??Timetable_Event_1
   \   00000024   6846               MOV      R0,SP
   \   00000026   0421               MOVS     R1,#+4
   \   00000028   0170               STRB     R1,[R0, #+0]
   1827             
   1828             if ((ScreenNr>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \                     ??Timetable_Event_1:
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   0020               MOVS     R0,#+0
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   2748               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   435E               LDRSH    R3,[R0, R1]
   \   0000003C   2648               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   425E               LDRSH    R2,[R0, R1]
   \   00000042   2648               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   415E               LDRSH    R1,[R0, R1]
   \   00000048   2548               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   0000004A   0024               MOVS     R4,#+0
   \   0000004C   005F               LDRSH    R0,[R0, R4]
   \   0000004E   ........           BL       List_Event
   \   00000052   04B0               ADD      SP,SP,#+16
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   C943               MVNS     R1,R1            ;; #-1
   \   00000058   8842               CMP      R0,R1
   \   0000005A   19D1               BNE      ??Timetable_Event_2
   1829              {
   1830                 if (SheetHistoryIndex>0)
   \   0000005C   2148               LDR      R0,??Timetable_Event_0+0x14  ;; SheetHistoryIndex
   \   0000005E   0078               LDRB     R0,[R0, #+0]
   \   00000060   0128               CMP      R0,#+1
   \   00000062   0AD3               BCC      ??Timetable_Event_3
   1831                    {
   1832                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   00000064   1F48               LDR      R0,??Timetable_Event_0+0x14  ;; SheetHistoryIndex
   \   00000066   0078               LDRB     R0,[R0, #+0]
   \   00000068   401E               SUBS     R0,R0,#+1
   \   0000006A   1E49               LDR      R1,??Timetable_Event_0+0x14  ;; SheetHistoryIndex
   \   0000006C   0870               STRB     R0,[R1, #+0]
   \   0000006E   1E49               LDR      R1,??Timetable_Event_0+0x18  ;; CurrentSheet
   \   00000070   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000072   000E               LSRS     R0,R0,#+24
   \   00000074   1D4A               LDR      R2,??Timetable_Event_0+0x1C  ;; SheetHistory
   \   00000076   105C               LDRB     R0,[R2, R0]
   \   00000078   0870               STRB     R0,[R1, #+0]
   1833                    } 
   1834                   Repaint=1; 
   \                     ??Timetable_Event_3:
   \   0000007A   0127               MOVS     R7,#+1
   1835              }else{
   1836                      
   1837                char Ychart=108;
   1838               
   1839                if ((X_down>1) && (X_down<63) && (Y_down>108)&& (Y_down<128)) Repaint=1;
   1840                
   1841               char PlusMinButton=0;  
   1842                
   1843                char CharOnOff[]={130,0};
   1844                char ButtonRes;
   1845                for (char TN=0; TN<TaskAmount; TN++)
   1846                {
   1847                  if ((TN==TaskAmount-1)&& (TN<3)) 
   1848                  {
   1849                      ButtonRes=Button("+",53,Ychart-13-27,11,14);
   1850                      if (ButtonRes==1)
   1851                      {
   1852                        TaskAmount++;
   1853                        //zapis do flash
   1854                        unsigned int Save = __get_interrupt_state();  
   1855                        __disable_interrupt();
   1856                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1857                        __set_interrupt_state(Save);
   1858                        __enable_interrupt();
   1859                        //koniec zapisu do flash
   1860                        Repaint=1; 
   1861                        PlusMinButton=1;
   1862                      }
   1863                      if (ButtonRes==2)
   1864                      {
   1865                        PlusMinButton=1;
   1866                      }
   1867                  }
   1868                  
   1869                  if ((PlusMinButton==0) && (TN>0) && (TN==TaskAmount-1)) 
   1870                  {
   1871                    ButtonRes=Button("-",53,Ychart-13,11,14);
   1872                    if (ButtonRes==1)
   1873                    {
   1874                        TaskAmount--;
   1875                        //zapis do flash
   1876                        unsigned int Save = __get_interrupt_state();  
   1877                        __disable_interrupt();
   1878                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1879                        __set_interrupt_state(Save);
   1880                        __enable_interrupt();
   1881                        //koniec zapisu do flash
   1882                        Repaint=1; 
   1883                        PlusMinButton=1;
   1884                    }
   1885                    if (ButtonRes==2)
   1886                    {
   1887                        PlusMinButton=1;
   1888                    }
   1889                     
   1890                  }
   1891                  
   1892                  if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1893                  {
   1894                      if (Button(CharOnOff,2,Ychart-15,13,13)==1)
   1895                      {
   1896                         CharToSave=0;
   1897                        //zapis do flash
   1898                          unsigned int Save = __get_interrupt_state();  
   1899                          __disable_interrupt();
   1900                          FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                 ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1901                          __set_interrupt_state(Save);
   1902                          __enable_interrupt();
   1903                          //koniec zapisu do flash
   1904                          Repaint=1; 
   1905                      } 
   1906                   }else{
   1907                        if(Button(CharOnOff,2,Ychart-15,13,13)==1)
   1908                        {
   1909                           CharToSave=1;
   1910                          //zapis do flash
   1911                            unsigned int Save = __get_interrupt_state();  
   1912                            __disable_interrupt();
   1913                            FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1914                            __set_interrupt_state(Save);
   1915                            __enable_interrupt();
   1916                            //koniec zapisu do flash
   1917                            Repaint=1; 
   1918                        }
   1919                      }
   1920                      
   1921                      //wybór strefy 
   1922                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_down>1) && (X_down<63) && (Y_down>Ychart-27)&& (Y_down<Ychart))
   1923                      {
   1924                        MenuPaint();
   1925                        H_line(1,Ychart-2,62,1);  
   1926                        H_line(1,Ychart-26,62,1);   
   1927                        V_line(1,Ychart-26,24,1); 
   1928                        V_line(62,Ychart-26,26,1); 
   1929                      }
   1930                  
   1931                      //edycja strefy 
   1932                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_up>1) && (X_up<63) && (Y_up>Ychart-27)&& (Y_up<Ychart))
   1933                      {
   1934                          TaskToChange=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN]);
   1935                          TimetableSet_Hour=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour;
   1936                          TimetableSet_Minute=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute;
   1937                          TimetableSet_Week=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week;
   1938                          MenuLevel=13;
   1939                          Repaint=1; 
   1940                      }
   1941                  
   1942                      
   1943                  
   1944                    Ychart=Ychart-27;
   1945          
   1946                  }//koniec for (TN)
   1947                
   1948                
   1949            
   1950              }
   1951             if (Repaint) MenuPaint();
   \                     ??Timetable_Event_4:
   \   0000007C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000007E   3F0E               LSRS     R7,R7,#+24
   \   00000080   002F               CMP      R7,#+0
   \   00000082   01D0               BEQ      ??Timetable_Event_5
   \   00000084   ........           BL       MenuPaint
   1952          }
   \                     ??Timetable_Event_5:
   \   00000088   03B0               ADD      SP,SP,#+12
   \   0000008A   F0BC               POP      {R4-R7}
   \   0000008C   01BC               POP      {R0}
   \   0000008E   0047               BX       R0               ;; return
   \                     ??Timetable_Event_2:
   \   00000090   6C24               MOVS     R4,#+108
   \   00000092   1148               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   405E               LDRSH    R0,[R0, R1]
   \   00000098   0228               CMP      R0,#+2
   \   0000009A   0FDB               BLT      ??Timetable_Event_6
   \   0000009C   0E48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   0000009E   0021               MOVS     R1,#+0
   \   000000A0   405E               LDRSH    R0,[R0, R1]
   \   000000A2   3F28               CMP      R0,#+63
   \   000000A4   0ADA               BGE      ??Timetable_Event_6
   \   000000A6   0B48               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   405E               LDRSH    R0,[R0, R1]
   \   000000AC   6D28               CMP      R0,#+109
   \   000000AE   05DB               BLT      ??Timetable_Event_6
   \   000000B0   0848               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   405E               LDRSH    R0,[R0, R1]
   \   000000B6   8028               CMP      R0,#+128
   \   000000B8   00DA               BGE      ??Timetable_Event_6
   \   000000BA   0127               MOVS     R7,#+1
   \                     ??Timetable_Event_6:
   \   000000BC   6846               MOV      R0,SP
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   4170               STRB     R1,[R0, #+1]
   \   000000C2   01A8               ADD      R0,SP,#+4
   \   000000C4   0A49               LDR      R1,??Timetable_Event_0+0x20  ;; `?<Constant {130, 0}>_1`
   \   000000C6   0A68               LDR      R2,[R1, #0]
   \   000000C8   0260               STR      R2,[R0, #0]
   \   000000CA   0025               MOVS     R5,#+0
   \   000000CC   05E1               B        ??Timetable_Event_7
   \   000000CE   C046               Nop      
   \                     ??Timetable_Event_0:
   \   000000D0   30D81300           DC32     0x13d830
   \   000000D4   ........           DC32     Y_down
   \   000000D8   ........           DC32     X_down
   \   000000DC   ........           DC32     Y_up
   \   000000E0   ........           DC32     X_up
   \   000000E4   ........           DC32     SheetHistoryIndex
   \   000000E8   ........           DC32     CurrentSheet
   \   000000EC   ........           DC32     SheetHistory
   \   000000F0   ........           DC32     `?<Constant {130, 0}>_1`
   \                     ??Timetable_Event_8:
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   0D20               MOVS     R0,#+13
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   0D23               MOVS     R3,#+13
   \   000000FC   2200               MOVS     R2,R4
   \   000000FE   0F3A               SUBS     R2,R2,#+15
   \   00000100   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000102   120E               LSRS     R2,R2,#+24
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   03A8               ADD      R0,SP,#+12
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   \   0000010E   0128               CMP      R0,#+1
   \   00000110   1ED1               BNE      ??Timetable_Event_9
   \   00000112   6846               MOV      R0,SP
   \   00000114   0121               MOVS     R1,#+1
   \   00000116   8170               STRB     R1,[R0, #+2]
   \   00000118   ........           BL       __iar_get_interrupt_state
   \   0000011C   0600               MOVS     R6,R0
   \   0000011E   ........           BL       __iar_disable_interrupt
   \   00000122   0122               MOVS     R2,#+1
   \   00000124   00A9               ADD      R1,SP,#+0
   \   00000126   891C               ADDS     R1,R1,#+2
   \   00000128   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000012A   2D0E               LSRS     R5,R5,#+24
   \   0000012C   0420               MOVS     R0,#+4
   \   0000012E   6843               MULS     R0,R5,R0
   \   00000130   6B46               MOV      R3,SP
   \   00000132   1B7A               LDRB     R3,[R3, #+8]
   \   00000134   1127               MOVS     R7,#+17
   \   00000136   7B43               MULS     R3,R7,R3
   \   00000138   CE4F               LDR      R7,??Timetable_Event_10  ;; 0x13d830
   \   0000013A   FB18               ADDS     R3,R7,R3
   \   0000013C   1818               ADDS     R0,R3,R0
   \   0000013E   401C               ADDS     R0,R0,#+1
   \   00000140   ........           BL       FlashWrite
   \   00000144   3000               MOVS     R0,R6
   \   00000146   ........           BL       __iar_set_interrupt_state
   \   0000014A   ........           BL       __iar_enable_interrupt
   \   0000014E   0127               MOVS     R7,#+1
   \                     ??Timetable_Event_9:
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0D20               MOVS     R0,#+13
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   0D23               MOVS     R3,#+13
   \   00000158   2200               MOVS     R2,R4
   \   0000015A   0F3A               SUBS     R2,R2,#+15
   \   0000015C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000015E   120E               LSRS     R2,R2,#+24
   \   00000160   0221               MOVS     R1,#+2
   \   00000162   03A8               ADD      R0,SP,#+12
   \   00000164   ........           BL       Button
   \   00000168   02B0               ADD      SP,SP,#+8
   \   0000016A   6946               MOV      R1,SP
   \   0000016C   4978               LDRB     R1,[R1, #+1]
   \   0000016E   0143               ORRS     R1,R1,R0
   \   00000170   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000172   090E               LSRS     R1,R1,#+24
   \   00000174   0029               CMP      R1,#+0
   \   00000176   41D1               BNE      ??Timetable_Event_11
   \   00000178   BF48               LDR      R0,??Timetable_Event_10+0x4  ;; X_down
   \   0000017A   0021               MOVS     R1,#+0
   \   0000017C   405E               LDRSH    R0,[R0, R1]
   \   0000017E   0228               CMP      R0,#+2
   \   00000180   3CDB               BLT      ??Timetable_Event_11
   \   00000182   BD48               LDR      R0,??Timetable_Event_10+0x4  ;; X_down
   \   00000184   0021               MOVS     R1,#+0
   \   00000186   405E               LDRSH    R0,[R0, R1]
   \   00000188   3F28               CMP      R0,#+63
   \   0000018A   37DA               BGE      ??Timetable_Event_11
   \   0000018C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000018E   240E               LSRS     R4,R4,#+24
   \   00000190   2000               MOVS     R0,R4
   \   00000192   1B38               SUBS     R0,R0,#+27
   \   00000194   B949               LDR      R1,??Timetable_Event_10+0x8  ;; Y_down
   \   00000196   0022               MOVS     R2,#+0
   \   00000198   895E               LDRSH    R1,[R1, R2]
   \   0000019A   8842               CMP      R0,R1
   \   0000019C   2EDA               BGE      ??Timetable_Event_11
   \   0000019E   B748               LDR      R0,??Timetable_Event_10+0x8  ;; Y_down
   \   000001A0   0021               MOVS     R1,#+0
   \   000001A2   405E               LDRSH    R0,[R0, R1]
   \   000001A4   2100               MOVS     R1,R4
   \   000001A6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001A8   090E               LSRS     R1,R1,#+24
   \   000001AA   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   000001AC   0914               ASRS     R1,R1,#+16
   \   000001AE   8842               CMP      R0,R1
   \   000001B0   24DA               BGE      ??Timetable_Event_11
   \   000001B2   ........           BL       MenuPaint
   \   000001B6   0123               MOVS     R3,#+1
   \   000001B8   3E22               MOVS     R2,#+62
   \   000001BA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001BC   240E               LSRS     R4,R4,#+24
   \   000001BE   A11E               SUBS     R1,R4,#+2
   \   000001C0   0120               MOVS     R0,#+1
   \   000001C2   ........           BL       H_line
   \   000001C6   0123               MOVS     R3,#+1
   \   000001C8   3E22               MOVS     R2,#+62
   \   000001CA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001CC   240E               LSRS     R4,R4,#+24
   \   000001CE   2100               MOVS     R1,R4
   \   000001D0   1A39               SUBS     R1,R1,#+26
   \   000001D2   0120               MOVS     R0,#+1
   \   000001D4   ........           BL       H_line
   \   000001D8   0123               MOVS     R3,#+1
   \   000001DA   1822               MOVS     R2,#+24
   \   000001DC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001DE   240E               LSRS     R4,R4,#+24
   \   000001E0   2100               MOVS     R1,R4
   \   000001E2   1A39               SUBS     R1,R1,#+26
   \   000001E4   0120               MOVS     R0,#+1
   \   000001E6   ........           BL       V_line
   \   000001EA   0123               MOVS     R3,#+1
   \   000001EC   1A22               MOVS     R2,#+26
   \   000001EE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001F0   240E               LSRS     R4,R4,#+24
   \   000001F2   2100               MOVS     R1,R4
   \   000001F4   1A39               SUBS     R1,R1,#+26
   \   000001F6   3E20               MOVS     R0,#+62
   \   000001F8   ........           BL       V_line
   \                     ??Timetable_Event_11:
   \   000001FC   82B0               SUB      SP,SP,#+8
   \   000001FE   0D20               MOVS     R0,#+13
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   0D23               MOVS     R3,#+13
   \   00000204   2200               MOVS     R2,R4
   \   00000206   0F3A               SUBS     R2,R2,#+15
   \   00000208   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000020A   120E               LSRS     R2,R2,#+24
   \   0000020C   0221               MOVS     R1,#+2
   \   0000020E   03A8               ADD      R0,SP,#+12
   \   00000210   ........           BL       Button
   \   00000214   02B0               ADD      SP,SP,#+8
   \   00000216   6946               MOV      R1,SP
   \   00000218   4978               LDRB     R1,[R1, #+1]
   \   0000021A   0143               ORRS     R1,R1,R0
   \   0000021C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000021E   090E               LSRS     R1,R1,#+24
   \   00000220   0029               CMP      R1,#+0
   \   00000222   58D1               BNE      ??Timetable_Event_12
   \   00000224   9648               LDR      R0,??Timetable_Event_10+0xC  ;; X_up
   \   00000226   0021               MOVS     R1,#+0
   \   00000228   405E               LDRSH    R0,[R0, R1]
   \   0000022A   0228               CMP      R0,#+2
   \   0000022C   53DB               BLT      ??Timetable_Event_12
   \   0000022E   9448               LDR      R0,??Timetable_Event_10+0xC  ;; X_up
   \   00000230   0021               MOVS     R1,#+0
   \   00000232   405E               LDRSH    R0,[R0, R1]
   \   00000234   3F28               CMP      R0,#+63
   \   00000236   4EDA               BGE      ??Timetable_Event_12
   \   00000238   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000023A   240E               LSRS     R4,R4,#+24
   \   0000023C   2000               MOVS     R0,R4
   \   0000023E   1B38               SUBS     R0,R0,#+27
   \   00000240   9049               LDR      R1,??Timetable_Event_10+0x10  ;; Y_up
   \   00000242   0022               MOVS     R2,#+0
   \   00000244   895E               LDRSH    R1,[R1, R2]
   \   00000246   8842               CMP      R0,R1
   \   00000248   45DA               BGE      ??Timetable_Event_12
   \   0000024A   8E48               LDR      R0,??Timetable_Event_10+0x10  ;; Y_up
   \   0000024C   0021               MOVS     R1,#+0
   \   0000024E   405E               LDRSH    R0,[R0, R1]
   \   00000250   2100               MOVS     R1,R4
   \   00000252   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000254   090E               LSRS     R1,R1,#+24
   \   00000256   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000258   0914               ASRS     R1,R1,#+16
   \   0000025A   8842               CMP      R0,R1
   \   0000025C   3BDA               BGE      ??Timetable_Event_12
   \   0000025E   8A49               LDR      R1,??Timetable_Event_10+0x14  ;; TaskToChange
   \   00000260   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000262   2D0E               LSRS     R5,R5,#+24
   \   00000264   0420               MOVS     R0,#+4
   \   00000266   6843               MULS     R0,R5,R0
   \   00000268   6A46               MOV      R2,SP
   \   0000026A   127A               LDRB     R2,[R2, #+8]
   \   0000026C   1123               MOVS     R3,#+17
   \   0000026E   5A43               MULS     R2,R3,R2
   \   00000270   804B               LDR      R3,??Timetable_Event_10  ;; 0x13d830
   \   00000272   9A18               ADDS     R2,R3,R2
   \   00000274   1018               ADDS     R0,R2,R0
   \   00000276   401C               ADDS     R0,R0,#+1
   \   00000278   0860               STR      R0,[R1, #+0]
   \   0000027A   8449               LDR      R1,??Timetable_Event_10+0x18  ;; TimetableSet_Hour
   \   0000027C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000027E   2D0E               LSRS     R5,R5,#+24
   \   00000280   0420               MOVS     R0,#+4
   \   00000282   6843               MULS     R0,R5,R0
   \   00000284   6A46               MOV      R2,SP
   \   00000286   127A               LDRB     R2,[R2, #+8]
   \   00000288   1123               MOVS     R3,#+17
   \   0000028A   5A43               MULS     R2,R3,R2
   \   0000028C   794B               LDR      R3,??Timetable_Event_10  ;; 0x13d830
   \   0000028E   9A18               ADDS     R2,R3,R2
   \   00000290   1018               ADDS     R0,R2,R0
   \   00000292   C078               LDRB     R0,[R0, #+3]
   \   00000294   0870               STRB     R0,[R1, #+0]
   \   00000296   7E49               LDR      R1,??Timetable_Event_10+0x1C  ;; TimetableSet_Minute
   \   00000298   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000029A   2D0E               LSRS     R5,R5,#+24
   \   0000029C   0420               MOVS     R0,#+4
   \   0000029E   6843               MULS     R0,R5,R0
   \   000002A0   6A46               MOV      R2,SP
   \   000002A2   127A               LDRB     R2,[R2, #+8]
   \   000002A4   1123               MOVS     R3,#+17
   \   000002A6   5A43               MULS     R2,R3,R2
   \   000002A8   724B               LDR      R3,??Timetable_Event_10  ;; 0x13d830
   \   000002AA   9A18               ADDS     R2,R3,R2
   \   000002AC   1018               ADDS     R0,R2,R0
   \   000002AE   0079               LDRB     R0,[R0, #+4]
   \   000002B0   0870               STRB     R0,[R1, #+0]
   \   000002B2   7849               LDR      R1,??Timetable_Event_10+0x20  ;; TimetableSet_Week
   \   000002B4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002B6   2D0E               LSRS     R5,R5,#+24
   \   000002B8   0420               MOVS     R0,#+4
   \   000002BA   6843               MULS     R0,R5,R0
   \   000002BC   6A46               MOV      R2,SP
   \   000002BE   127A               LDRB     R2,[R2, #+8]
   \   000002C0   1123               MOVS     R3,#+17
   \   000002C2   5A43               MULS     R2,R3,R2
   \   000002C4   6B4B               LDR      R3,??Timetable_Event_10  ;; 0x13d830
   \   000002C6   9A18               ADDS     R2,R3,R2
   \   000002C8   1018               ADDS     R0,R2,R0
   \   000002CA   8078               LDRB     R0,[R0, #+2]
   \   000002CC   0870               STRB     R0,[R1, #+0]
   \   000002CE   7248               LDR      R0,??Timetable_Event_10+0x24  ;; MenuLevel
   \   000002D0   0D21               MOVS     R1,#+13
   \   000002D2   0160               STR      R1,[R0, #+0]
   \   000002D4   0127               MOVS     R7,#+1
   \                     ??Timetable_Event_12:
   \   000002D6   1B3C               SUBS     R4,R4,#+27
   \   000002D8   6D1C               ADDS     R5,R5,#+1
   \                     ??Timetable_Event_7:
   \   000002DA   6846               MOV      R0,SP
   \   000002DC   0078               LDRB     R0,[R0, #+0]
   \   000002DE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002E0   2D0E               LSRS     R5,R5,#+24
   \   000002E2   8542               CMP      R5,R0
   \   000002E4   00D3               BCC      .+4
   \   000002E6   C9E6               B        ??Timetable_Event_4
   \   000002E8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002EA   2D0E               LSRS     R5,R5,#+24
   \   000002EC   6846               MOV      R0,SP
   \   000002EE   0078               LDRB     R0,[R0, #+0]
   \   000002F0   401E               SUBS     R0,R0,#+1
   \   000002F2   8542               CMP      R5,R0
   \   000002F4   39D1               BNE      ??Timetable_Event_13
   \   000002F6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002F8   2D0E               LSRS     R5,R5,#+24
   \   000002FA   032D               CMP      R5,#+3
   \   000002FC   35D2               BCS      ??Timetable_Event_13
   \   000002FE   82B0               SUB      SP,SP,#+8
   \   00000300   0E20               MOVS     R0,#+14
   \   00000302   0090               STR      R0,[SP, #+0]
   \   00000304   0B23               MOVS     R3,#+11
   \   00000306   2200               MOVS     R2,R4
   \   00000308   283A               SUBS     R2,R2,#+40
   \   0000030A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000030C   120E               LSRS     R2,R2,#+24
   \   0000030E   3521               MOVS     R1,#+53
   \   00000310   62A0               ADR      R0,??Timetable_Event_10+0x28  ;; 0x2B, 0x00, 0x00, 0x00
   \   00000312   ........           BL       Button
   \   00000316   02B0               ADD      SP,SP,#+8
   \   00000318   0600               MOVS     R6,R0
   \   0000031A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000031C   360E               LSRS     R6,R6,#+24
   \   0000031E   012E               CMP      R6,#+1
   \   00000320   1CD1               BNE      ??Timetable_Event_14
   \   00000322   6846               MOV      R0,SP
   \   00000324   6946               MOV      R1,SP
   \   00000326   0978               LDRB     R1,[R1, #+0]
   \   00000328   491C               ADDS     R1,R1,#+1
   \   0000032A   0170               STRB     R1,[R0, #+0]
   \   0000032C   ........           BL       __iar_get_interrupt_state
   \   00000330   0700               MOVS     R7,R0
   \   00000332   ........           BL       __iar_disable_interrupt
   \   00000336   0122               MOVS     R2,#+1
   \   00000338   6946               MOV      R1,SP
   \   0000033A   6846               MOV      R0,SP
   \   0000033C   007A               LDRB     R0,[R0, #+8]
   \   0000033E   1123               MOVS     R3,#+17
   \   00000340   5843               MULS     R0,R3,R0
   \   00000342   4C4B               LDR      R3,??Timetable_Event_10  ;; 0x13d830
   \   00000344   1818               ADDS     R0,R3,R0
   \   00000346   ........           BL       FlashWrite
   \   0000034A   3800               MOVS     R0,R7
   \   0000034C   ........           BL       __iar_set_interrupt_state
   \   00000350   ........           BL       __iar_enable_interrupt
   \   00000354   0127               MOVS     R7,#+1
   \   00000356   6846               MOV      R0,SP
   \   00000358   0121               MOVS     R1,#+1
   \   0000035A   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_14:
   \   0000035C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000035E   360E               LSRS     R6,R6,#+24
   \   00000360   022E               CMP      R6,#+2
   \   00000362   02D1               BNE      ??Timetable_Event_13
   \   00000364   6846               MOV      R0,SP
   \   00000366   0121               MOVS     R1,#+1
   \   00000368   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_13:
   \   0000036A   6846               MOV      R0,SP
   \   0000036C   4078               LDRB     R0,[R0, #+1]
   \   0000036E   0028               CMP      R0,#+0
   \   00000370   40D1               BNE      ??Timetable_Event_15
   \   00000372   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000374   2D0E               LSRS     R5,R5,#+24
   \   00000376   012D               CMP      R5,#+1
   \   00000378   3CD3               BCC      ??Timetable_Event_15
   \   0000037A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000037C   2D0E               LSRS     R5,R5,#+24
   \   0000037E   6846               MOV      R0,SP
   \   00000380   0078               LDRB     R0,[R0, #+0]
   \   00000382   401E               SUBS     R0,R0,#+1
   \   00000384   8542               CMP      R5,R0
   \   00000386   35D1               BNE      ??Timetable_Event_15
   \   00000388   82B0               SUB      SP,SP,#+8
   \   0000038A   0E20               MOVS     R0,#+14
   \   0000038C   0090               STR      R0,[SP, #+0]
   \   0000038E   0B23               MOVS     R3,#+11
   \   00000390   2200               MOVS     R2,R4
   \   00000392   0D3A               SUBS     R2,R2,#+13
   \   00000394   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000396   120E               LSRS     R2,R2,#+24
   \   00000398   3521               MOVS     R1,#+53
   \   0000039A   41A0               ADR      R0,??Timetable_Event_10+0x2C  ;; 0x2D, 0x00, 0x00, 0x00
   \   0000039C   ........           BL       Button
   \   000003A0   02B0               ADD      SP,SP,#+8
   \   000003A2   0600               MOVS     R6,R0
   \   000003A4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003A6   360E               LSRS     R6,R6,#+24
   \   000003A8   012E               CMP      R6,#+1
   \   000003AA   1CD1               BNE      ??Timetable_Event_16
   \   000003AC   6846               MOV      R0,SP
   \   000003AE   6946               MOV      R1,SP
   \   000003B0   0978               LDRB     R1,[R1, #+0]
   \   000003B2   491E               SUBS     R1,R1,#+1
   \   000003B4   0170               STRB     R1,[R0, #+0]
   \   000003B6   ........           BL       __iar_get_interrupt_state
   \   000003BA   0700               MOVS     R7,R0
   \   000003BC   ........           BL       __iar_disable_interrupt
   \   000003C0   0122               MOVS     R2,#+1
   \   000003C2   6946               MOV      R1,SP
   \   000003C4   6846               MOV      R0,SP
   \   000003C6   007A               LDRB     R0,[R0, #+8]
   \   000003C8   1123               MOVS     R3,#+17
   \   000003CA   5843               MULS     R0,R3,R0
   \   000003CC   294B               LDR      R3,??Timetable_Event_10  ;; 0x13d830
   \   000003CE   1818               ADDS     R0,R3,R0
   \   000003D0   ........           BL       FlashWrite
   \   000003D4   3800               MOVS     R0,R7
   \   000003D6   ........           BL       __iar_set_interrupt_state
   \   000003DA   ........           BL       __iar_enable_interrupt
   \   000003DE   0127               MOVS     R7,#+1
   \   000003E0   6846               MOV      R0,SP
   \   000003E2   0121               MOVS     R1,#+1
   \   000003E4   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_16:
   \   000003E6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003E8   360E               LSRS     R6,R6,#+24
   \   000003EA   022E               CMP      R6,#+2
   \   000003EC   02D1               BNE      ??Timetable_Event_15
   \   000003EE   6846               MOV      R0,SP
   \   000003F0   0121               MOVS     R1,#+1
   \   000003F2   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_15:
   \   000003F4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003F6   2D0E               LSRS     R5,R5,#+24
   \   000003F8   0420               MOVS     R0,#+4
   \   000003FA   6843               MULS     R0,R5,R0
   \   000003FC   6946               MOV      R1,SP
   \   000003FE   097A               LDRB     R1,[R1, #+8]
   \   00000400   1122               MOVS     R2,#+17
   \   00000402   5143               MULS     R1,R2,R1
   \   00000404   1B4A               LDR      R2,??Timetable_Event_10  ;; 0x13d830
   \   00000406   5118               ADDS     R1,R2,R1
   \   00000408   0818               ADDS     R0,R1,R0
   \   0000040A   4078               LDRB     R0,[R0, #+1]
   \   0000040C   0028               CMP      R0,#+0
   \   0000040E   00D1               BNE      .+4
   \   00000410   70E6               B        ??Timetable_Event_8
   \   00000412   82B0               SUB      SP,SP,#+8
   \   00000414   0D20               MOVS     R0,#+13
   \   00000416   0090               STR      R0,[SP, #+0]
   \   00000418   0D23               MOVS     R3,#+13
   \   0000041A   2200               MOVS     R2,R4
   \   0000041C   0F3A               SUBS     R2,R2,#+15
   \   0000041E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000420   120E               LSRS     R2,R2,#+24
   \   00000422   0221               MOVS     R1,#+2
   \   00000424   03A8               ADD      R0,SP,#+12
   \   00000426   ........           BL       Button
   \   0000042A   02B0               ADD      SP,SP,#+8
   \   0000042C   0128               CMP      R0,#+1
   \   0000042E   00D0               BEQ      .+4
   \   00000430   8EE6               B        ??Timetable_Event_9
   \   00000432   6846               MOV      R0,SP
   \   00000434   0021               MOVS     R1,#+0
   \   00000436   8170               STRB     R1,[R0, #+2]
   \   00000438   ........           BL       __iar_get_interrupt_state
   \   0000043C   0600               MOVS     R6,R0
   \   0000043E   ........           BL       __iar_disable_interrupt
   \   00000442   0122               MOVS     R2,#+1
   \   00000444   00A9               ADD      R1,SP,#+0
   \   00000446   891C               ADDS     R1,R1,#+2
   \   00000448   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000044A   2D0E               LSRS     R5,R5,#+24
   \   0000044C   0420               MOVS     R0,#+4
   \   0000044E   6843               MULS     R0,R5,R0
   \   00000450   6B46               MOV      R3,SP
   \   00000452   1B7A               LDRB     R3,[R3, #+8]
   \   00000454   1127               MOVS     R7,#+17
   \   00000456   7B43               MULS     R3,R7,R3
   \   00000458   064F               LDR      R7,??Timetable_Event_10  ;; 0x13d830
   \   0000045A   FB18               ADDS     R3,R7,R3
   \   0000045C   1818               ADDS     R0,R3,R0
   \   0000045E   401C               ADDS     R0,R0,#+1
   \   00000460   ........           BL       FlashWrite
   \   00000464   3000               MOVS     R0,R6
   \   00000466   ........           BL       __iar_set_interrupt_state
   \   0000046A   ........           BL       __iar_enable_interrupt
   \   0000046E   0127               MOVS     R7,#+1
   \   00000470   6EE6               B        ??Timetable_Event_9
   \   00000472   C046               Nop      
   \                     ??Timetable_Event_10:
   \   00000474   30D81300           DC32     0x13d830
   \   00000478   ........           DC32     X_down
   \   0000047C   ........           DC32     Y_down
   \   00000480   ........           DC32     X_up
   \   00000484   ........           DC32     Y_up
   \   00000488   ........           DC32     TaskToChange
   \   0000048C   ........           DC32     TimetableSet_Hour
   \   00000490   ........           DC32     TimetableSet_Minute
   \   00000494   ........           DC32     TimetableSet_Week
   \   00000498   ........           DC32     MenuLevel
   \   0000049C   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   000004A0   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   1953          
   1954          
   1955          
   1956          
   1957          
   1958          

   \                                 In section Debug.txt, align 4, keep-with-next
   1959          void TimetableSet_Paint(void)
   1960          {          
   \                     TimetableSet_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   1961                 List_Paint(Speech[g_leng].Terminarz,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   99A0               ADR      R0,??TimetableSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   9648               LDR      R0,??TimetableSet_Paint_0+0x4  ;; 0x762
   \   00000028   964C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   964D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   964D               LDR      R5,??TimetableSet_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   1962                
   1963                char day=0;
   \   0000003C   0026               MOVS     R6,#+0
   1964                char hlight=0;
   \   0000003E   0020               MOVS     R0,#+0
   1965          
   1966                for (char row=0; row<3; row++)
   \   00000040   0024               MOVS     R4,#+0
   \   00000042   87E0               B        ??TimetableSet_Paint_1
   1967                for (char col=0; col<3; col++)
   1968                { 
   1969                  if (++day<8)
   \                     ??TimetableSet_Paint_2:
   \   00000044   761C               ADDS     R6,R6,#+1
   \   00000046   3000               MOVS     R0,R6
   \   00000048   0600               MOVS     R6,R0
   \   0000004A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004C   000E               LSRS     R0,R0,#+24
   \   0000004E   0828               CMP      R0,#+8
   \   00000050   79D2               BCS      ??TimetableSet_Paint_3
   1970                  {
   1971                      H_line(4+col*18,105-row*14,19,1);
   \   00000052   0123               MOVS     R3,#+1
   \   00000054   1322               MOVS     R2,#+19
   \   00000056   6920               MOVS     R0,#+105
   \   00000058   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000005A   240E               LSRS     R4,R4,#+24
   \   0000005C   0E21               MOVS     R1,#+14
   \   0000005E   6143               MULS     R1,R4,R1
   \   00000060   411A               SUBS     R1,R0,R1
   \   00000062   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000064   2D0E               LSRS     R5,R5,#+24
   \   00000066   1220               MOVS     R0,#+18
   \   00000068   6843               MULS     R0,R5,R0
   \   0000006A   001D               ADDS     R0,R0,#+4
   \   0000006C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \   00000070   ........           BL       H_line
   1972                      H_line(4+col*18,105-(row+1)*14,19,1);
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   1322               MOVS     R2,#+19
   \   00000078   6920               MOVS     R0,#+105
   \   0000007A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000007C   240E               LSRS     R4,R4,#+24
   \   0000007E   2100               MOVS     R1,R4
   \   00000080   491C               ADDS     R1,R1,#+1
   \   00000082   0E27               MOVS     R7,#+14
   \   00000084   7943               MULS     R1,R7,R1
   \   00000086   411A               SUBS     R1,R0,R1
   \   00000088   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000008A   2D0E               LSRS     R5,R5,#+24
   \   0000008C   1220               MOVS     R0,#+18
   \   0000008E   6843               MULS     R0,R5,R0
   \   00000090   001D               ADDS     R0,R0,#+4
   \   00000092   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000094   000E               LSRS     R0,R0,#+24
   \   00000096   ........           BL       H_line
   1973                      V_line(4+col*18,105-(row+1)*14,14,1);
   \   0000009A   0123               MOVS     R3,#+1
   \   0000009C   0E22               MOVS     R2,#+14
   \   0000009E   6920               MOVS     R0,#+105
   \   000000A0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A2   240E               LSRS     R4,R4,#+24
   \   000000A4   2100               MOVS     R1,R4
   \   000000A6   491C               ADDS     R1,R1,#+1
   \   000000A8   0E27               MOVS     R7,#+14
   \   000000AA   7943               MULS     R1,R7,R1
   \   000000AC   411A               SUBS     R1,R0,R1
   \   000000AE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B0   2D0E               LSRS     R5,R5,#+24
   \   000000B2   1220               MOVS     R0,#+18
   \   000000B4   6843               MULS     R0,R5,R0
   \   000000B6   001D               ADDS     R0,R0,#+4
   \   000000B8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BA   000E               LSRS     R0,R0,#+24
   \   000000BC   ........           BL       V_line
   1974                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   \   000000C0   0123               MOVS     R3,#+1
   \   000000C2   0E22               MOVS     R2,#+14
   \   000000C4   6920               MOVS     R0,#+105
   \   000000C6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C8   240E               LSRS     R4,R4,#+24
   \   000000CA   2100               MOVS     R1,R4
   \   000000CC   491C               ADDS     R1,R1,#+1
   \   000000CE   0E27               MOVS     R7,#+14
   \   000000D0   7943               MULS     R1,R7,R1
   \   000000D2   411A               SUBS     R1,R0,R1
   \   000000D4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000D6   2D0E               LSRS     R5,R5,#+24
   \   000000D8   1220               MOVS     R0,#+18
   \   000000DA   6843               MULS     R0,R5,R0
   \   000000DC   1630               ADDS     R0,R0,#+22
   \   000000DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E0   000E               LSRS     R0,R0,#+24
   \   000000E2   ........           BL       V_line
   1975                      
   1976                      hlight=(((TimetableSet_Week>>(day-1))) &0x1);
   \   000000E6   6A48               LDR      R0,??TimetableSet_Paint_0+0x14  ;; TimetableSet_Week
   \   000000E8   0178               LDRB     R1,[R0, #+0]
   \   000000EA   701E               SUBS     R0,R6,#+1
   \   000000EC   0141               ASRS     R1,R1,R0
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   0840               ANDS     R0,R0,R1
   1977                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F6   000E               LSRS     R0,R0,#+24
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   8021               MOVS     R1,#+128
   \   000000FC   0020               MOVS     R0,#+0
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   0E21               MOVS     R1,#+14
   \   00000102   0220               MOVS     R0,#+2
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   6C20               MOVS     R0,#+108
   \   00000108   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000010A   240E               LSRS     R4,R4,#+24
   \   0000010C   2100               MOVS     R1,R4
   \   0000010E   491C               ADDS     R1,R1,#+1
   \   00000110   0E22               MOVS     R2,#+14
   \   00000112   5143               MULS     R1,R2,R1
   \   00000114   431A               SUBS     R3,R0,R1
   \   00000116   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000118   2D0E               LSRS     R5,R5,#+24
   \   0000011A   1222               MOVS     R2,#+18
   \   0000011C   6A43               MULS     R2,R5,R2
   \   0000011E   921D               ADDS     R2,R2,#+6
   \   00000120   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000122   120E               LSRS     R2,R2,#+24
   \   00000124   0221               MOVS     R1,#+2
   \   00000126   8C46               MOV      R12,R1
   \   00000128   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012A   360E               LSRS     R6,R6,#+24
   \   0000012C   0221               MOVS     R1,#+2
   \   0000012E   7143               MULS     R1,R6,R1
   \   00000130   5448               LDR      R0,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000132   0068               LDR      R0,[R0, #+0]
   \   00000134   1027               MOVS     R7,#+16
   \   00000136   7843               MULS     R0,R7,R0
   \   00000138   564F               LDR      R7,??TimetableSet_Paint_0+0x18  ;; DeyOfWeekStr
   \   0000013A   3818               ADDS     R0,R7,R0
   \   0000013C   4018               ADDS     R0,R0,R1
   \   0000013E   6146               MOV      R1,R12
   \   00000140   ........           BL       Label
   \   00000144   06B0               ADD      SP,SP,#+24
   1978          
   1979                  }
   1980                }
   \                     ??TimetableSet_Paint_3:
   \   00000146   6D1C               ADDS     R5,R5,#+1
   \                     ??TimetableSet_Paint_4:
   \   00000148   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000014A   2D0E               LSRS     R5,R5,#+24
   \   0000014C   032D               CMP      R5,#+3
   \   0000014E   00D2               BCS      .+4
   \   00000150   78E7               B        ??TimetableSet_Paint_2
   \   00000152   641C               ADDS     R4,R4,#+1
   \                     ??TimetableSet_Paint_1:
   \   00000154   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000156   240E               LSRS     R4,R4,#+24
   \   00000158   032C               CMP      R4,#+3
   \   0000015A   01D2               BCS      ??TimetableSet_Paint_5
   \   0000015C   0025               MOVS     R5,#+0
   \   0000015E   F3E7               B        ??TimetableSet_Paint_4
   1981                
   1982                 Label(Speech[g_leng].Godzina,0,5,51,12,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??TimetableSet_Paint_5:
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   0020               MOVS     R0,#+0
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   7F21               MOVS     R1,#+127
   \   00000168   0120               MOVS     R0,#+1
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   2821               MOVS     R1,#+40
   \   0000016E   0C20               MOVS     R0,#+12
   \   00000170   03B4               PUSH     {R0,R1}
   \   00000172   3323               MOVS     R3,#+51
   \   00000174   0522               MOVS     R2,#+5
   \   00000176   0021               MOVS     R1,#+0
   \   00000178   B420               MOVS     R0,#+180
   \   0000017A   C000               LSLS     R0,R0,#+3        ;; #+1440
   \   0000017C   414C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   0000017E   2468               LDR      R4,[R4, #+0]
   \   00000180   414D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; 0xa7d
   \   00000182   6C43               MULS     R4,R5,R4
   \   00000184   414D               LDR      R5,??TimetableSet_Paint_0+0x10  ;; Speech
   \   00000186   2C19               ADDS     R4,R5,R4
   \   00000188   2018               ADDS     R0,R4,R0
   \   0000018A   ........           BL       Label
   \   0000018E   06B0               ADD      SP,SP,#+24
   1983                        
   1984                char LabelButt[2];
   1985                  
   1986                LabelButt[1]=0;
   \   00000190   6846               MOV      R0,SP
   \   00000192   0021               MOVS     R1,#+0
   \   00000194   4170               STRB     R1,[R0, #+1]
   1987                LabelButt[0]=30; //góra - godzina
   \   00000196   6846               MOV      R0,SP
   \   00000198   1E21               MOVS     R1,#+30
   \   0000019A   0170               STRB     R1,[R0, #+0]
   1988                Button(LabelButt,5,35,26,15);
   \   0000019C   82B0               SUB      SP,SP,#+8
   \   0000019E   0F20               MOVS     R0,#+15
   \   000001A0   0090               STR      R0,[SP, #+0]
   \   000001A2   1A23               MOVS     R3,#+26
   \   000001A4   2322               MOVS     R2,#+35
   \   000001A6   0521               MOVS     R1,#+5
   \   000001A8   02A8               ADD      R0,SP,#+8
   \   000001AA   ........           BL       Button
   \   000001AE   02B0               ADD      SP,SP,#+8
   1989                LabelButt[0]=30; //góra- minuta
   \   000001B0   6846               MOV      R0,SP
   \   000001B2   1E21               MOVS     R1,#+30
   \   000001B4   0170               STRB     R1,[R0, #+0]
   1990                Button(LabelButt,34,35,26,15);
   \   000001B6   82B0               SUB      SP,SP,#+8
   \   000001B8   0F20               MOVS     R0,#+15
   \   000001BA   0090               STR      R0,[SP, #+0]
   \   000001BC   1A23               MOVS     R3,#+26
   \   000001BE   2322               MOVS     R2,#+35
   \   000001C0   2221               MOVS     R1,#+34
   \   000001C2   02A8               ADD      R0,SP,#+8
   \   000001C4   ........           BL       Button
   \   000001C8   02B0               ADD      SP,SP,#+8
   1991                
   1992                char time_char[2];
   1993                
   1994                 CharToStr2(TimetableSet_Hour, time_char); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   000001CA   01A9               ADD      R1,SP,#+4
   \   000001CC   3248               LDR      R0,??TimetableSet_Paint_0+0x1C  ;; TimetableSet_Hour
   \   000001CE   0078               LDRB     R0,[R0, #+0]
   \   000001D0   ........           BL       CharToStr2
   1995                 Label(time_char,1,29,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0020               MOVS     R0,#+0
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   7F21               MOVS     R1,#+127
   \   000001DC   0120               MOVS     R0,#+1
   \   000001DE   03B4               PUSH     {R0,R1}
   \   000001E0   0F21               MOVS     R1,#+15
   \   000001E2   0220               MOVS     R0,#+2
   \   000001E4   03B4               PUSH     {R0,R1}
   \   000001E6   1923               MOVS     R3,#+25
   \   000001E8   1D22               MOVS     R2,#+29
   \   000001EA   0121               MOVS     R1,#+1
   \   000001EC   07A8               ADD      R0,SP,#+28
   \   000001EE   ........           BL       Label
   \   000001F2   06B0               ADD      SP,SP,#+24
   1996                 
   1997                 Label(":",0,32,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001F4   82B0               SUB      SP,SP,#+8
   \   000001F6   0020               MOVS     R0,#+0
   \   000001F8   0090               STR      R0,[SP, #+0]
   \   000001FA   7F21               MOVS     R1,#+127
   \   000001FC   0120               MOVS     R0,#+1
   \   000001FE   03B4               PUSH     {R0,R1}
   \   00000200   0F21               MOVS     R1,#+15
   \   00000202   0220               MOVS     R0,#+2
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   1923               MOVS     R3,#+25
   \   00000208   2022               MOVS     R2,#+32
   \   0000020A   0021               MOVS     R1,#+0
   \   0000020C   23A0               ADR      R0,??TimetableSet_Paint_0+0x20  ;; 0x3A, 0x00, 0x00, 0x00
   \   0000020E   ........           BL       Label
   \   00000212   06B0               ADD      SP,SP,#+24
   1998                 
   1999                 CharToStr2(TimetableSet_Minute, time_char); //(char Value, char *Vstring, char ill);
   \   00000214   01A9               ADD      R1,SP,#+4
   \   00000216   2248               LDR      R0,??TimetableSet_Paint_0+0x24  ;; TimetableSet_Minute
   \   00000218   0078               LDRB     R0,[R0, #+0]
   \   0000021A   ........           BL       CharToStr2
   2000                 Label(time_char,0,36,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000021E   82B0               SUB      SP,SP,#+8
   \   00000220   0020               MOVS     R0,#+0
   \   00000222   0090               STR      R0,[SP, #+0]
   \   00000224   7F21               MOVS     R1,#+127
   \   00000226   0120               MOVS     R0,#+1
   \   00000228   03B4               PUSH     {R0,R1}
   \   0000022A   0F21               MOVS     R1,#+15
   \   0000022C   0220               MOVS     R0,#+2
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   1923               MOVS     R3,#+25
   \   00000232   2422               MOVS     R2,#+36
   \   00000234   0021               MOVS     R1,#+0
   \   00000236   07A8               ADD      R0,SP,#+28
   \   00000238   ........           BL       Label
   \   0000023C   06B0               ADD      SP,SP,#+24
   2001                        
   2002                
   2003          
   2004                LabelButt[0]=31; //dó³ godzina
   \   0000023E   6846               MOV      R0,SP
   \   00000240   1F21               MOVS     R1,#+31
   \   00000242   0170               STRB     R1,[R0, #+0]
   2005                Button(LabelButt,5, 9,26,15);
   \   00000244   82B0               SUB      SP,SP,#+8
   \   00000246   0F20               MOVS     R0,#+15
   \   00000248   0090               STR      R0,[SP, #+0]
   \   0000024A   1A23               MOVS     R3,#+26
   \   0000024C   0922               MOVS     R2,#+9
   \   0000024E   0521               MOVS     R1,#+5
   \   00000250   02A8               ADD      R0,SP,#+8
   \   00000252   ........           BL       Button
   \   00000256   02B0               ADD      SP,SP,#+8
   2006                LabelButt[0]=31; //dó³ minuta
   \   00000258   6846               MOV      R0,SP
   \   0000025A   1F21               MOVS     R1,#+31
   \   0000025C   0170               STRB     R1,[R0, #+0]
   2007                Button(LabelButt,34, 9,26,15);
   \   0000025E   82B0               SUB      SP,SP,#+8
   \   00000260   0F20               MOVS     R0,#+15
   \   00000262   0090               STR      R0,[SP, #+0]
   \   00000264   1A23               MOVS     R3,#+26
   \   00000266   0922               MOVS     R2,#+9
   \   00000268   2221               MOVS     R1,#+34
   \   0000026A   02A8               ADD      R0,SP,#+8
   \   0000026C   ........           BL       Button
   \   00000270   02B0               ADD      SP,SP,#+8
   2008                 
   2009          
   2010                 
   2011          }//________________________________________________________________________
   \   00000272   03B0               ADD      SP,SP,#+12
   \   00000274   F0BC               POP      {R4-R7}
   \   00000276   01BC               POP      {R0}
   \   00000278   0047               BX       R0               ;; return
   \   0000027A   C046               Nop      
   \                     ??TimetableSet_Paint_0:
   \   0000027C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000280   62070000           DC32     0x762
   \   00000284   ........           DC32     g_leng
   \   00000288   7D0A0000           DC32     0xa7d
   \   0000028C   ........           DC32     Speech
   \   00000290   ........           DC32     TimetableSet_Week
   \   00000294   ........           DC32     DeyOfWeekStr
   \   00000298   ........           DC32     TimetableSet_Hour
   \   0000029C   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   \   000002A0   ........           DC32     TimetableSet_Minute
   2012          
   2013              
   2014          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2015          void TimetableSet_Event(void)
   2016                {
   \                     TimetableSet_Event:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   2017          
   2018                   char Repaint=0;
   \   00000002   0025               MOVS     R5,#+0
   2019                  
   2020            
   2021                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   9848               LDR      R0,??TimetableSet_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   9848               LDR      R0,??TimetableSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   9748               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   9748               LDR      R0,??TimetableSet_Event_0+0xC  ;; X_up
   \   00000024   0024               MOVS     R4,#+0
   \   00000026   005F               LDRSH    R0,[R0, R4]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   28D5               BPL      ??TimetableSet_Event_1
   2022                  {
   2023                     //zapis do flash
   2024                            unsigned int Save = __get_interrupt_state();  
   \   00000032   ........           BL       __iar_get_interrupt_state
   \   00000036   0400               MOVS     R4,R0
   2025                            __disable_interrupt();
   \   00000038   ........           BL       __iar_disable_interrupt
   2026                            FlashWrite((char*)(&(TaskToChange->Hour)), (char*) (&(TimetableSet_Hour)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000003C   0122               MOVS     R2,#+1
   \   0000003E   9149               LDR      R1,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   00000040   9148               LDR      R0,??TimetableSet_Event_0+0x14  ;; TaskToChange
   \   00000042   0068               LDR      R0,[R0, #+0]
   \   00000044   801C               ADDS     R0,R0,#+2
   \   00000046   ........           BL       FlashWrite
   2027                            FlashWrite((char*)(&(TaskToChange->Minute)), (char*) (&(TimetableSet_Minute)), 1);
   \   0000004A   0122               MOVS     R2,#+1
   \   0000004C   8F49               LDR      R1,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   0000004E   8E48               LDR      R0,??TimetableSet_Event_0+0x14  ;; TaskToChange
   \   00000050   0068               LDR      R0,[R0, #+0]
   \   00000052   C01C               ADDS     R0,R0,#+3
   \   00000054   ........           BL       FlashWrite
   2028                            FlashWrite((char*)(&(TaskToChange->Week)), (char*) (&(TimetableSet_Week)), 1);
   \   00000058   0122               MOVS     R2,#+1
   \   0000005A   8D49               LDR      R1,??TimetableSet_Event_0+0x1C  ;; TimetableSet_Week
   \   0000005C   8A48               LDR      R0,??TimetableSet_Event_0+0x14  ;; TaskToChange
   \   0000005E   0068               LDR      R0,[R0, #+0]
   \   00000060   401C               ADDS     R0,R0,#+1
   \   00000062   ........           BL       FlashWrite
   2029                            __set_interrupt_state(Save);
   \   00000066   2000               MOVS     R0,R4
   \   00000068   ........           BL       __iar_set_interrupt_state
   2030                            __enable_interrupt();
   \   0000006C   ........           BL       __iar_enable_interrupt
   2031                            //koniec zapisu do flash
   2032                    
   2033                    
   2034                    MenuLevel=(MenuLevel/10);
   \   00000070   8848               LDR      R0,??TimetableSet_Event_0+0x20  ;; MenuLevel
   \   00000072   0068               LDR      R0,[R0, #+0]
   \   00000074   0A21               MOVS     R1,#+10
   \   00000076   ........           BL       __aeabi_idivmod
   \   0000007A   8649               LDR      R1,??TimetableSet_Event_0+0x20  ;; MenuLevel
   \   0000007C   0860               STR      R0,[R1, #+0]
   2035                    MenuPaint();
   \   0000007E   ........           BL       MenuPaint
   \   00000082   F3E0               B        ??TimetableSet_Event_2
   2036                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??TimetableSet_Event_1:
   \   00000084   7B48               LDR      R0,??TimetableSet_Event_0  ;; Y_down
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   05DB               BLT      ??TimetableSet_Event_3
   \   0000008E   7B48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   7028               CMP      R0,#+112
   \   00000096   00DB               BLT      .+4
   \   00000098   E8E0               B        ??TimetableSet_Event_2
   2037                  {  
   2038                      char day;
   2039                      day=0;
   \                     ??TimetableSet_Event_3:
   \   0000009A   0024               MOVS     R4,#+0
   2040                      for (char row=0; row<3; row++)
   \   0000009C   0022               MOVS     R2,#+0
   \   0000009E   00E0               B        ??TimetableSet_Event_4
   \                     ??TimetableSet_Event_5:
   \   000000A0   521C               ADDS     R2,R2,#+1
   \                     ??TimetableSet_Event_4:
   \   000000A2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000A4   120E               LSRS     R2,R2,#+24
   \   000000A6   032A               CMP      R2,#+3
   \   000000A8   63D2               BCS      ??TimetableSet_Event_6
   2041                      for (char col=0; col<3; col++)
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   09E0               B        ??TimetableSet_Event_7
   2042                      { 
   2043                        if (++day<8)
   2044                        {
   2045                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   2046                            {
   2047                              if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                           ^
Warning[Pe068]: integer conversion resulted in a change of sign
   2048                              if ((TimetableSet_Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   2049                              {
   2050                                 TimetableSet_Week &= ~(1<<(day-1));
   2051                              }else{
   2052                                 TimetableSet_Week |= (1<<(day-1));
   \                     ??TimetableSet_Event_8:
   \   000000AE   7848               LDR      R0,??TimetableSet_Event_0+0x1C  ;; TimetableSet_Week
   \   000000B0   7749               LDR      R1,??TimetableSet_Event_0+0x1C  ;; TimetableSet_Week
   \   000000B2   0978               LDRB     R1,[R1, #+0]
   \   000000B4   0125               MOVS     R5,#+1
   \   000000B6   661E               SUBS     R6,R4,#+1
   \   000000B8   B540               LSLS     R5,R5,R6
   \   000000BA   0D43               ORRS     R5,R5,R1
   \   000000BC   0570               STRB     R5,[R0, #+0]
   2053                              }
   2054          
   2055                              Repaint=1;
   \                     ??TimetableSet_Event_9:
   \   000000BE   0125               MOVS     R5,#+1
   \                     ??TimetableSet_Event_10:
   \   000000C0   5B1C               ADDS     R3,R3,#+1
   \                     ??TimetableSet_Event_7:
   \   000000C2   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000C4   1B0E               LSRS     R3,R3,#+24
   \   000000C6   032B               CMP      R3,#+3
   \   000000C8   EAD2               BCS      ??TimetableSet_Event_5
   \   000000CA   641C               ADDS     R4,R4,#+1
   \   000000CC   2000               MOVS     R0,R4
   \   000000CE   0400               MOVS     R4,R0
   \   000000D0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D2   000E               LSRS     R0,R0,#+24
   \   000000D4   0828               CMP      R0,#+8
   \   000000D6   F3D2               BCS      ??TimetableSet_Event_10
   \   000000D8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000DA   1B0E               LSRS     R3,R3,#+24
   \   000000DC   1220               MOVS     R0,#+18
   \   000000DE   5843               MULS     R0,R3,R0
   \   000000E0   001D               ADDS     R0,R0,#+4
   \   000000E2   6749               LDR      R1,??TimetableSet_Event_0+0xC  ;; X_up
   \   000000E4   0026               MOVS     R6,#+0
   \   000000E6   895F               LDRSH    R1,[R1, R6]
   \   000000E8   8842               CMP      R0,R1
   \   000000EA   E9DA               BGE      ??TimetableSet_Event_10
   \   000000EC   6448               LDR      R0,??TimetableSet_Event_0+0xC  ;; X_up
   \   000000EE   0021               MOVS     R1,#+0
   \   000000F0   405E               LDRSH    R0,[R0, R1]
   \   000000F2   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000F4   1B0E               LSRS     R3,R3,#+24
   \   000000F6   1221               MOVS     R1,#+18
   \   000000F8   5943               MULS     R1,R3,R1
   \   000000FA   1631               ADDS     R1,R1,#+22
   \   000000FC   8842               CMP      R0,R1
   \   000000FE   DFDA               BGE      ??TimetableSet_Event_10
   \   00000100   5E48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   405E               LDRSH    R0,[R0, R1]
   \   00000106   6921               MOVS     R1,#+105
   \   00000108   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000010A   120E               LSRS     R2,R2,#+24
   \   0000010C   0E26               MOVS     R6,#+14
   \   0000010E   5643               MULS     R6,R2,R6
   \   00000110   891B               SUBS     R1,R1,R6
   \   00000112   8842               CMP      R0,R1
   \   00000114   D4DA               BGE      ??TimetableSet_Event_10
   \   00000116   6920               MOVS     R0,#+105
   \   00000118   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000011A   120E               LSRS     R2,R2,#+24
   \   0000011C   1100               MOVS     R1,R2
   \   0000011E   491C               ADDS     R1,R1,#+1
   \   00000120   0E26               MOVS     R6,#+14
   \   00000122   7143               MULS     R1,R6,R1
   \   00000124   401A               SUBS     R0,R0,R1
   \   00000126   5549               LDR      R1,??TimetableSet_Event_0+0x8  ;; Y_up
   \   00000128   0026               MOVS     R6,#+0
   \   0000012A   895F               LDRSH    R1,[R1, R6]
   \   0000012C   8842               CMP      R0,R1
   \   0000012E   C7DA               BGE      ??TimetableSet_Event_10
   \   00000130   5948               LDR      R0,??TimetableSet_Event_0+0x24  ;; 0x13d7e9
   \   00000132   0078               LDRB     R0,[R0, #+0]
   \   00000134   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   0028               CMP      R0,#+0
   \   0000013A   0BD1               BNE      ??TimetableSet_Event_11
   \   0000013C   5748               LDR      R0,??TimetableSet_Event_0+0x28  ;; 0xfffff430
   \   0000013E   8021               MOVS     R1,#+128
   \   00000140   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000142   0160               STR      R1,[R0, #+0]
   \   00000144   564D               LDR      R5,??TimetableSet_Event_0+0x2C  ;; ButtonBipCounter
   \   00000146   5748               LDR      R0,??TimetableSet_Event_0+0x30  ;; g_counter
   \   00000148   03C8               LDM      R0!,{R0,R1}
   \   0000014A   0026               MOVS     R6,#+0
   \   0000014C   0830               ADDS     R0,R0,#+8
   \   0000014E   7141               ADCS     R1,R1,R6
   \   00000150   03C5               STM      R5!,{R0,R1}
   \   00000152   083D               SUBS     R5,R5,#+8
   \                     ??TimetableSet_Event_11:
   \   00000154   4E48               LDR      R0,??TimetableSet_Event_0+0x1C  ;; TimetableSet_Week
   \   00000156   0078               LDRB     R0,[R0, #+0]
   \   00000158   611E               SUBS     R1,R4,#+1
   \   0000015A   0841               ASRS     R0,R0,R1
   \   0000015C   C007               LSLS     R0,R0,#+31
   \   0000015E   A6D5               BPL      ??TimetableSet_Event_8
   \   00000160   4B48               LDR      R0,??TimetableSet_Event_0+0x1C  ;; TimetableSet_Week
   \   00000162   4B49               LDR      R1,??TimetableSet_Event_0+0x1C  ;; TimetableSet_Week
   \   00000164   0978               LDRB     R1,[R1, #+0]
   \   00000166   0125               MOVS     R5,#+1
   \   00000168   661E               SUBS     R6,R4,#+1
   \   0000016A   B540               LSLS     R5,R5,R6
   \   0000016C   A943               BICS     R1,R1,R5
   \   0000016E   0170               STRB     R1,[R0, #+0]
   \   00000170   A5E7               B        ??TimetableSet_Event_9
   2056                  
   2057                            }
   2058          
   2059                        }
   2060                      }
   2061                      
   2062                      
   2063                            char LabelButt[2];
   2064                  
   2065                      
   2066                      LabelButt[1]=0;
   \                     ??TimetableSet_Event_6:
   \   00000172   6846               MOV      R0,SP
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   4170               STRB     R1,[R0, #+1]
   2067                      LabelButt[0]=30; //góra - godzina
   \   00000178   6846               MOV      R0,SP
   \   0000017A   1E21               MOVS     R1,#+30
   \   0000017C   0170               STRB     R1,[R0, #+0]
   2068                      if (Button(LabelButt,5,35,26,15)==2){Repaint=1; if (TimetableSet_Hour<23) TimetableSet_Hour++; else TimetableSet_Hour=0; }
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0F20               MOVS     R0,#+15
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   1A23               MOVS     R3,#+26
   \   00000186   2322               MOVS     R2,#+35
   \   00000188   0521               MOVS     R1,#+5
   \   0000018A   02A8               ADD      R0,SP,#+8
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   \   00000192   0228               CMP      R0,#+2
   \   00000194   0DD1               BNE      ??TimetableSet_Event_12
   \   00000196   0125               MOVS     R5,#+1
   \   00000198   3A48               LDR      R0,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   0000019A   0078               LDRB     R0,[R0, #+0]
   \   0000019C   1728               CMP      R0,#+23
   \   0000019E   05D2               BCS      ??TimetableSet_Event_13
   \   000001A0   3848               LDR      R0,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   000001A2   3849               LDR      R1,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   000001A4   0978               LDRB     R1,[R1, #+0]
   \   000001A6   491C               ADDS     R1,R1,#+1
   \   000001A8   0170               STRB     R1,[R0, #+0]
   \   000001AA   02E0               B        ??TimetableSet_Event_12
   \                     ??TimetableSet_Event_13:
   \   000001AC   3548               LDR      R0,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   000001AE   0021               MOVS     R1,#+0
   \   000001B0   0170               STRB     R1,[R0, #+0]
   2069                      LabelButt[0]=30; //góra- minuta
   \                     ??TimetableSet_Event_12:
   \   000001B2   6846               MOV      R0,SP
   \   000001B4   1E21               MOVS     R1,#+30
   \   000001B6   0170               STRB     R1,[R0, #+0]
   2070                      if (Button(LabelButt,34,35,26,15)==2){Repaint=1; if (TimetableSet_Minute<59) TimetableSet_Minute++; else TimetableSet_Minute=0;}
   \   000001B8   82B0               SUB      SP,SP,#+8
   \   000001BA   0F20               MOVS     R0,#+15
   \   000001BC   0090               STR      R0,[SP, #+0]
   \   000001BE   1A23               MOVS     R3,#+26
   \   000001C0   2322               MOVS     R2,#+35
   \   000001C2   2221               MOVS     R1,#+34
   \   000001C4   02A8               ADD      R0,SP,#+8
   \   000001C6   ........           BL       Button
   \   000001CA   02B0               ADD      SP,SP,#+8
   \   000001CC   0228               CMP      R0,#+2
   \   000001CE   0DD1               BNE      ??TimetableSet_Event_14
   \   000001D0   0125               MOVS     R5,#+1
   \   000001D2   2E48               LDR      R0,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   000001D4   0078               LDRB     R0,[R0, #+0]
   \   000001D6   3B28               CMP      R0,#+59
   \   000001D8   05D2               BCS      ??TimetableSet_Event_15
   \   000001DA   2C48               LDR      R0,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   000001DC   2B49               LDR      R1,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   000001DE   0978               LDRB     R1,[R1, #+0]
   \   000001E0   491C               ADDS     R1,R1,#+1
   \   000001E2   0170               STRB     R1,[R0, #+0]
   \   000001E4   02E0               B        ??TimetableSet_Event_14
   \                     ??TimetableSet_Event_15:
   \   000001E6   2948               LDR      R0,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   000001E8   0021               MOVS     R1,#+0
   \   000001EA   0170               STRB     R1,[R0, #+0]
   2071                      
   2072                
   2073                      LabelButt[0]=31; //dó³ godzina
   \                     ??TimetableSet_Event_14:
   \   000001EC   6846               MOV      R0,SP
   \   000001EE   1F21               MOVS     R1,#+31
   \   000001F0   0170               STRB     R1,[R0, #+0]
   2074                      if (Button(LabelButt,5, 9,26,15)==2){Repaint=1; if (TimetableSet_Hour>0) TimetableSet_Hour--; else TimetableSet_Hour=23;}
   \   000001F2   82B0               SUB      SP,SP,#+8
   \   000001F4   0F20               MOVS     R0,#+15
   \   000001F6   0090               STR      R0,[SP, #+0]
   \   000001F8   1A23               MOVS     R3,#+26
   \   000001FA   0922               MOVS     R2,#+9
   \   000001FC   0521               MOVS     R1,#+5
   \   000001FE   02A8               ADD      R0,SP,#+8
   \   00000200   ........           BL       Button
   \   00000204   02B0               ADD      SP,SP,#+8
   \   00000206   0228               CMP      R0,#+2
   \   00000208   0DD1               BNE      ??TimetableSet_Event_16
   \   0000020A   0125               MOVS     R5,#+1
   \   0000020C   1D48               LDR      R0,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   0000020E   0078               LDRB     R0,[R0, #+0]
   \   00000210   0128               CMP      R0,#+1
   \   00000212   05D3               BCC      ??TimetableSet_Event_17
   \   00000214   1B48               LDR      R0,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   00000216   1B49               LDR      R1,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   00000218   0978               LDRB     R1,[R1, #+0]
   \   0000021A   491E               SUBS     R1,R1,#+1
   \   0000021C   0170               STRB     R1,[R0, #+0]
   \   0000021E   02E0               B        ??TimetableSet_Event_16
   \                     ??TimetableSet_Event_17:
   \   00000220   1848               LDR      R0,??TimetableSet_Event_0+0x10  ;; TimetableSet_Hour
   \   00000222   1721               MOVS     R1,#+23
   \   00000224   0170               STRB     R1,[R0, #+0]
   2075                      LabelButt[0]=31; //dó³ minuta
   \                     ??TimetableSet_Event_16:
   \   00000226   6846               MOV      R0,SP
   \   00000228   1F21               MOVS     R1,#+31
   \   0000022A   0170               STRB     R1,[R0, #+0]
   2076                      if (Button(LabelButt,34, 9,26,15)==2){Repaint=1; if (TimetableSet_Minute>0) TimetableSet_Minute--; else TimetableSet_Minute=59;}
   \   0000022C   82B0               SUB      SP,SP,#+8
   \   0000022E   0F20               MOVS     R0,#+15
   \   00000230   0090               STR      R0,[SP, #+0]
   \   00000232   1A23               MOVS     R3,#+26
   \   00000234   0922               MOVS     R2,#+9
   \   00000236   2221               MOVS     R1,#+34
   \   00000238   02A8               ADD      R0,SP,#+8
   \   0000023A   ........           BL       Button
   \   0000023E   02B0               ADD      SP,SP,#+8
   \   00000240   0228               CMP      R0,#+2
   \   00000242   0DD1               BNE      ??TimetableSet_Event_18
   \   00000244   0125               MOVS     R5,#+1
   \   00000246   1148               LDR      R0,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   00000248   0078               LDRB     R0,[R0, #+0]
   \   0000024A   0128               CMP      R0,#+1
   \   0000024C   05D3               BCC      ??TimetableSet_Event_19
   \   0000024E   0F48               LDR      R0,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   00000250   0E49               LDR      R1,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   00000252   0978               LDRB     R1,[R1, #+0]
   \   00000254   491E               SUBS     R1,R1,#+1
   \   00000256   0170               STRB     R1,[R0, #+0]
   \   00000258   02E0               B        ??TimetableSet_Event_18
   \                     ??TimetableSet_Event_19:
   \   0000025A   0C48               LDR      R0,??TimetableSet_Event_0+0x18  ;; TimetableSet_Minute
   \   0000025C   3B21               MOVS     R1,#+59
   \   0000025E   0170               STRB     R1,[R0, #+0]
   2077                          
   2078                     
   2079                     
   2080                     if (Repaint==1) MenuPaint();      
   \                     ??TimetableSet_Event_18:
   \   00000260   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000262   2D0E               LSRS     R5,R5,#+24
   \   00000264   012D               CMP      R5,#+1
   \   00000266   01D1               BNE      ??TimetableSet_Event_2
   \   00000268   ........           BL       MenuPaint
   2081                    
   2082                  }
   2083          }//________________________________________________________________________
   \                     ??TimetableSet_Event_2:
   \   0000026C   02B0               ADD      SP,SP,#+8
   \   0000026E   70BC               POP      {R4-R6}
   \   00000270   01BC               POP      {R0}
   \   00000272   0047               BX       R0               ;; return
   \                     ??TimetableSet_Event_0:
   \   00000274   ........           DC32     Y_down
   \   00000278   ........           DC32     X_down
   \   0000027C   ........           DC32     Y_up
   \   00000280   ........           DC32     X_up
   \   00000284   ........           DC32     TimetableSet_Hour
   \   00000288   ........           DC32     TaskToChange
   \   0000028C   ........           DC32     TimetableSet_Minute
   \   00000290   ........           DC32     TimetableSet_Week
   \   00000294   ........           DC32     MenuLevel
   \   00000298   E9D71300           DC32     0x13d7e9
   \   0000029C   30F4FFFF           DC32     0xfffff430
   \   000002A0   ........           DC32     ButtonBipCounter
   \   000002A4   ........           DC32     g_counter
   2084              
   2085          
   2086          
   2087          
   2088          
   2089          
   2090          
   2091          
   2092          
   2093          
   2094          
   2095          
   2096          
   2097          
   2098          
   2099          //*-----------------------------------------------------------------------------
   2100          //* Nazwa funkcji :    Wait_Paint
   2101          //* Funkcja strony g³ównej menu
   2102          //*-----------------------------------------------------------------------------
   2103          //* Efekt widoczny po odwierzeniu LCD (Wait_Paint)
   2104          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2105          void Wait_Paint(void)
   2106          {
   \                     Wait_Paint:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   AFB0               SUB      SP,SP,#+188
   2107              CleanCanvas(); 
   \   00000004   ........           BL       CleanCanvas
   2108              
   2109              char ekran_tab[4][46] = {
   2110                            {0,240,252,127,143,243,251,251,251,227,131,3,7,15,14,30,60,120,240,224,192,128,0,0,0,128,192,224,240,112,56,156,206,239,119,3,3,3,227,255,255,31,7,31,254,252},
   2111                            {252,255,255,0,255,255,255,255,255,255,255,254,248,48,48,0,0,0,0,1,3,39,183,182,183,183,123,253,254,254,255,255,255,1,0,0,0,0,255,255,0,0,0,0,255,255},
   2112                            {1,63,255,248,199,63,127,127,127,31,7,1,128,128,192,224,240,120,60,30,15,7,3,3,3,7,15,30,61,123,247,239,223,158,176,0,0,0,31,255,252,192,128,224,255,255},
   2113                            {0,0,1,3,3,7,7,7,7,7,7,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,7,7,7,7,7,7,3,1,0},
   2114                            };
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0A49               LDR      R1,??Wait_Paint_0  ;; `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   \   0000000C   B822               MOVS     R2,#+184
   \   0000000E   ........           BL       __aeabi_memcpy4
   2115              
   2116          
   2117              CopyToCanvasPoint((char*)ekran_tab, 20, 40, 32,46);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2E20               MOVS     R0,#+46
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   2023               MOVS     R3,#+32
   \   0000001A   2822               MOVS     R2,#+40
   \   0000001C   1421               MOVS     R1,#+20
   \   0000001E   02A8               ADD      R0,SP,#+8
   \   00000020   ........           BL       CopyToCanvasPoint
   \   00000024   02B0               ADD      SP,SP,#+8
   2118          
   2119           
   2120              RepaintLCD();
   \   00000026   ........           BL       RepaintLCD
   2121              RepaintLCD();
   \   0000002A   ........           BL       RepaintLCD
   2122          }//_______________________ Koniec funkcji Wait_Paint __________________________
   \   0000002E   2FB0               ADD      SP,SP,#+188
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??Wait_Paint_0:
   \   00000034   ........           DC32     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   2123          
   2124          
   2125          
   2126          
   2127          
   2128          
   2129          
   2130          
   2131          
   2132          //******************************************************************************************************************************
   2133          //******************************************************************************************************************************
   2134          //******************************************************************************************************************************
   2135          //******************************************************************************************************************************
   2136          //******************************************************************************************************************************
   2137          
   2138          
   2139          
   2140          
   2141          
   2142          //*-----------------------------------------------------------------------------
   2143          //* Nazwa funkcji :    MainSide_Paint
   2144          //* Funkcja strony g³ównej menu
   2145          //*-----------------------------------------------------------------------------
   2146          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   2147          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2148          void Animation_Event(void)
   2149          {
   \                     Animation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
   2150            
   2151              //akcja przycisku menu
   2152              if ((X_up>1) && (X_up<60) && (Y_up>1) && (Y_up<128))
   \   00000002   0E48               LDR      R0,??Animation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0228               CMP      R0,#+2
   \   0000000A   13DB               BLT      ??Animation_Event_1
   \   0000000C   0B48               LDR      R0,??Animation_Event_0  ;; X_up
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   3C28               CMP      R0,#+60
   \   00000014   0EDA               BGE      ??Animation_Event_1
   \   00000016   0A48               LDR      R0,??Animation_Event_0+0x4  ;; Y_up
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   405E               LDRSH    R0,[R0, R1]
   \   0000001C   0228               CMP      R0,#+2
   \   0000001E   09DB               BLT      ??Animation_Event_1
   \   00000020   0748               LDR      R0,??Animation_Event_0+0x4  ;; Y_up
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   405E               LDRSH    R0,[R0, R1]
   \   00000026   8028               CMP      R0,#+128
   \   00000028   04DA               BGE      ??Animation_Event_1
   2153              {
   2154                MenuLevel=4;
   \   0000002A   0648               LDR      R0,??Animation_Event_0+0x8  ;; MenuLevel
   \   0000002C   0421               MOVS     R1,#+4
   \   0000002E   0160               STR      R1,[R0, #+0]
   2155                MenuPaint();
   \   00000030   ........           BL       MenuPaint
   2156              }
   2157          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??Animation_Event_1:
   \   00000034   01B0               ADD      SP,SP,#+4
   \   00000036   01BC               POP      {R0}
   \   00000038   0047               BX       R0               ;; return
   \   0000003A   C046               Nop      
   \                     ??Animation_Event_0:
   \   0000003C   ........           DC32     X_up
   \   00000040   ........           DC32     Y_up
   \   00000044   ........           DC32     MenuLevel
   2158          
   2159          
   2160          
   2161          
   2162          
   2163          
   2164          
   2165          
   2166                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2167                void AdvanceSet_Paint(void)
   2168                {
   \                     AdvanceSet_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   2169                  
   2170                  List_Paint(Speech[g_leng].Serwis,3,15,15,0,3, "Restart", Speech[g_leng].Czysc_pamiec, Speech[g_leng].Wyjdz , 0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   1448               LDR      R0,??AdvanceSet_Paint_0  ;; 0x78f
   \   00000012   154A               LDR      R2,??AdvanceSet_Paint_0+0x4  ;; g_leng
   \   00000014   1268               LDR      R2,[R2, #+0]
   \   00000016   154B               LDR      R3,??AdvanceSet_Paint_0+0x8  ;; 0xa7d
   \   00000018   5A43               MULS     R2,R3,R2
   \   0000001A   154B               LDR      R3,??AdvanceSet_Paint_0+0xC  ;; Speech
   \   0000001C   9A18               ADDS     R2,R3,R2
   \   0000001E   1018               ADDS     R0,R2,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   F020               MOVS     R0,#+240
   \   00000024   C000               LSLS     R0,R0,#+3        ;; #+1920
   \   00000026   1049               LDR      R1,??AdvanceSet_Paint_0+0x4  ;; g_leng
   \   00000028   0968               LDR      R1,[R1, #+0]
   \   0000002A   104A               LDR      R2,??AdvanceSet_Paint_0+0x8  ;; 0xa7d
   \   0000002C   5143               MULS     R1,R2,R1
   \   0000002E   104A               LDR      R2,??AdvanceSet_Paint_0+0xC  ;; Speech
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   0918               ADDS     R1,R1,R0
   \   00000034   0F48               LDR      R0,??AdvanceSet_Paint_0+0x10  ;; `?<Constant "Restart">`
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0321               MOVS     R1,#+3
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   0F23               MOVS     R3,#+15
   \   00000040   0F22               MOVS     R2,#+15
   \   00000042   0321               MOVS     R1,#+3
   \   00000044   0C48               LDR      R0,??AdvanceSet_Paint_0+0x14  ;; 0x771
   \   00000046   084C               LDR      R4,??AdvanceSet_Paint_0+0x4  ;; g_leng
   \   00000048   2468               LDR      R4,[R4, #+0]
   \   0000004A   084D               LDR      R5,??AdvanceSet_Paint_0+0x8  ;; 0xa7d
   \   0000004C   6C43               MULS     R4,R5,R4
   \   0000004E   084D               LDR      R5,??AdvanceSet_Paint_0+0xC  ;; Speech
   \   00000050   2C19               ADDS     R4,R5,R4
   \   00000052   2018               ADDS     R0,R4,R0
   \   00000054   ........           BL       List_Paint
   \   00000058   0AB0               ADD      SP,SP,#+40
   2171          
   2172                  
   2173                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000005A   01B0               ADD      SP,SP,#+4
   \   0000005C   30BC               POP      {R4,R5}
   \   0000005E   01BC               POP      {R0}
   \   00000060   0047               BX       R0               ;; return
   \   00000062   C046               Nop      
   \                     ??AdvanceSet_Paint_0:
   \   00000064   8F070000           DC32     0x78f
   \   00000068   ........           DC32     g_leng
   \   0000006C   7D0A0000           DC32     0xa7d
   \   00000070   ........           DC32     Speech
   \   00000074   ........           DC32     `?<Constant "Restart">`
   \   00000078   71070000           DC32     0x771
   2174          
   2175          
   2176                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2177                void AdvanceSet_Event(void)
   2178                {
   \                     AdvanceSet_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2179                  //char podswietl=0;
   2180                  int ans;
   2181                  
   2182                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,15); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0F21               MOVS     R1,#+15
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0320               MOVS     R0,#+3
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1548               LDR      R0,??AdvanceSet_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1448               LDR      R0,??AdvanceSet_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1448               LDR      R0,??AdvanceSet_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1348               LDR      R0,??AdvanceSet_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   2183            
   2184                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   16D0               BEQ      ??AdvanceSet_Event_1
   2185                    {
   2186                      if (ans==1) 
   \   00000030   0128               CMP      R0,#+1
   \   00000032   02D1               BNE      ??AdvanceSet_Event_2
   2187                      {
   2188                        //restart
   2189                        
   2190                        AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000034   0F49               LDR      R1,??AdvanceSet_Event_0+0x10  ;; 0xfffffd00
   \   00000036   104A               LDR      R2,??AdvanceSet_Event_0+0x14  ;; 0xa5000005
   \   00000038   0A60               STR      R2,[R1, #+0]
   2191                      }
   2192                      if (ans==2) 
   \                     ??AdvanceSet_Event_2:
   \   0000003A   0228               CMP      R0,#+2
   \   0000003C   06D1               BNE      ??AdvanceSet_Event_3
   2193                      {
   2194                        MenuLevel=(MenuLevel*10+1);
   \   0000003E   0F49               LDR      R1,??AdvanceSet_Event_0+0x18  ;; MenuLevel
   \   00000040   0E4A               LDR      R2,??AdvanceSet_Event_0+0x18  ;; MenuLevel
   \   00000042   1268               LDR      R2,[R2, #+0]
   \   00000044   0A23               MOVS     R3,#+10
   \   00000046   5A43               MULS     R2,R3,R2
   \   00000048   521C               ADDS     R2,R2,#+1
   \   0000004A   0A60               STR      R2,[R1, #+0]
   2195                        //czyæ wczystko
   2196                        
   2197                      }
   2198                      
   2199                    if ((ans<0) || (ans==3)) MenuLevel=1;
   \                     ??AdvanceSet_Event_3:
   \   0000004C   0028               CMP      R0,#+0
   \   0000004E   01D4               BMI      ??AdvanceSet_Event_4
   \   00000050   0328               CMP      R0,#+3
   \   00000052   02D1               BNE      ??AdvanceSet_Event_5
   \                     ??AdvanceSet_Event_4:
   \   00000054   0948               LDR      R0,??AdvanceSet_Event_0+0x18  ;; MenuLevel
   \   00000056   0121               MOVS     R1,#+1
   \   00000058   0160               STR      R1,[R0, #+0]
   2200                    MenuPaint();
   \                     ??AdvanceSet_Event_5:
   \   0000005A   ........           BL       MenuPaint
   2201                    } 
   2202                }//_______________________________________________________________________
   \                     ??AdvanceSet_Event_1:
   \   0000005E   10BC               POP      {R4}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??AdvanceSet_Event_0:
   \   00000064   ........           DC32     Y_down
   \   00000068   ........           DC32     X_down
   \   0000006C   ........           DC32     Y_up
   \   00000070   ........           DC32     X_up
   \   00000074   00FDFFFF           DC32     0xfffffd00
   \   00000078   050000A5           DC32     0xa5000005
   \   0000007C   ........           DC32     MenuLevel
   2203          
   2204          
   2205             
   2206              //Wyczyæ wsyzstko
   2207                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2208                void CleanAll_Event(void)
   2209                {
   \                     CleanAll_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   2210                  AT91S_RSTC  g_AT91S_RSTC;
   2211                  int ans;
   2212           
   2213                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2948               LDR      R0,??CleanAll_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   2848               LDR      R0,??CleanAll_Event_0+0x4  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   2848               LDR      R0,??CleanAll_Event_0+0x8  ;; Y_up
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   415E               LDRSH    R1,[R0, R1]
   \   00000014   2748               LDR      R0,??CleanAll_Event_0+0xC  ;; X_up
   \   00000016   0024               MOVS     R4,#+0
   \   00000018   005F               LDRSH    R0,[R0, R4]
   \   0000001A   ........           BL       Ask_Event
   \   0000001E   0400               MOVS     R4,R0
   2214            
   2215                  if (ans)
   \   00000020   002C               CMP      R4,#+0
   \   00000022   3DD0               BEQ      ??CleanAll_Event_1
   2216                    {
   2217                    if (ans==2) 
   \   00000024   022C               CMP      R4,#+2
   \   00000026   2ED1               BNE      ??CleanAll_Event_2
   2218                    {
   2219                            korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \   00000028   2348               LDR      R0,??CleanAll_Event_0+0x10  ;; korekta_X
   \   0000002A   2449               LDR      R1,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   0000002C   0968               LDR      R1,[R1, #+0]
   \   0000002E   0160               STR      R1,[R0, #+0]
   2220                            korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   00000030   2348               LDR      R0,??CleanAll_Event_0+0x18  ;; korekta_X + 4
   \   00000032   2449               LDR      R1,??CleanAll_Event_0+0x1C  ;; 0x13d82c
   \   00000034   0968               LDR      R1,[R1, #+0]
   \   00000036   0160               STR      R1,[R0, #+0]
   2221                            korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   00000038   2348               LDR      R0,??CleanAll_Event_0+0x20  ;; korekta_Y
   \   0000003A   2449               LDR      R1,??CleanAll_Event_0+0x24  ;; 0x13d820
   \   0000003C   0968               LDR      R1,[R1, #+0]
   \   0000003E   0160               STR      R1,[R0, #+0]
   2222                            korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000040   2348               LDR      R0,??CleanAll_Event_0+0x28  ;; korekta_Y + 4
   \   00000042   2449               LDR      R1,??CleanAll_Event_0+0x2C  ;; 0x13d824
   \   00000044   0968               LDR      R1,[R1, #+0]
   \   00000046   0160               STR      R1,[R0, #+0]
   2223                      
   2224                      //czyæ wszystko 
   2225                            unsigned int Save = __get_interrupt_state();  
   \   00000048   ........           BL       __iar_get_interrupt_state
   \   0000004C   0500               MOVS     R5,R0
   2226                            __disable_interrupt();
   \   0000004E   ........           BL       __iar_disable_interrupt
   2227                             CleanFlash((char*)(AT91C_IFLASH_MEM),64+sizeof(AT91S_MEM)+sizeof(_Config));
                                    ^
Warning[Pe223]: function "CleanFlash" declared implicitly
   \   00000052   2149               LDR      R1,??CleanAll_Event_0+0x30  ;; 0xdb24
   \   00000054   9820               MOVS     R0,#+152
   \   00000056   4003               LSLS     R0,R0,#+13       ;; #+1245184
   \   00000058   ........           BL       CleanFlash
   2228                                               
   2229                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000005C   0822               MOVS     R2,#+8
   \   0000005E   1649               LDR      R1,??CleanAll_Event_0+0x10  ;; korekta_X
   \   00000060   1648               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000062   ........           BL       FlashWrite
   2230                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   00000066   0822               MOVS     R2,#+8
   \   00000068   1749               LDR      R1,??CleanAll_Event_0+0x20  ;; korekta_Y
   \   0000006A   1848               LDR      R0,??CleanAll_Event_0+0x24  ;; 0x13d820
   \   0000006C   ........           BL       FlashWrite
   2231                            __set_interrupt_state(Save);
   \   00000070   2800               MOVS     R0,R5
   \   00000072   ........           BL       __iar_set_interrupt_state
   2232                            __enable_interrupt();
   \   00000076   ........           BL       __iar_enable_interrupt
   2233                            
   2234                                //restar
   2235                            AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   0000007A   1848               LDR      R0,??CleanAll_Event_0+0x34  ;; 0xfffffd00
   \   0000007C   1849               LDR      R1,??CleanAll_Event_0+0x38  ;; 0xa5000005
   \   0000007E   0160               STR      R1,[R0, #+0]
   2236          
   2237          
   2238                          __set_interrupt_state(Save);
   \   00000080   2800               MOVS     R0,R5
   \   00000082   ........           BL       __iar_set_interrupt_state
   2239                          //koniec zapisu do flash
   2240                          
   2241                    }
   2242                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanAll_Event_2:
   \   00000086   002C               CMP      R4,#+0
   \   00000088   01D4               BMI      ??CleanAll_Event_3
   \   0000008A   012C               CMP      R4,#+1
   \   0000008C   06D1               BNE      ??CleanAll_Event_4
   \                     ??CleanAll_Event_3:
   \   0000008E   1548               LDR      R0,??CleanAll_Event_0+0x3C  ;; MenuLevel
   \   00000090   0068               LDR      R0,[R0, #+0]
   \   00000092   0A21               MOVS     R1,#+10
   \   00000094   ........           BL       __aeabi_idivmod
   \   00000098   1249               LDR      R1,??CleanAll_Event_0+0x3C  ;; MenuLevel
   \   0000009A   0860               STR      R0,[R1, #+0]
   2243                    MenuPaint();
   \                     ??CleanAll_Event_4:
   \   0000009C   ........           BL       MenuPaint
   2244                    } 
   2245                }//_______________________________________________________________________
   \                     ??CleanAll_Event_1:
   \   000000A0   01B0               ADD      SP,SP,#+4
   \   000000A2   30BC               POP      {R4,R5}
   \   000000A4   01BC               POP      {R0}
   \   000000A6   0047               BX       R0               ;; return
   \                     ??CleanAll_Event_0:
   \   000000A8   ........           DC32     Y_down
   \   000000AC   ........           DC32     X_down
   \   000000B0   ........           DC32     Y_up
   \   000000B4   ........           DC32     X_up
   \   000000B8   ........           DC32     korekta_X
   \   000000BC   28D81300           DC32     0x13d828
   \   000000C0   ........           DC32     korekta_X + 4
   \   000000C4   2CD81300           DC32     0x13d82c
   \   000000C8   ........           DC32     korekta_Y
   \   000000CC   20D81300           DC32     0x13d820
   \   000000D0   ........           DC32     korekta_Y + 4
   \   000000D4   24D81300           DC32     0x13d824
   \   000000D8   24DB0000           DC32     0xdb24
   \   000000DC   00FDFFFF           DC32     0xfffffd00
   \   000000E0   050000A5           DC32     0xa5000005
   \   000000E4   ........           DC32     MenuLevel
   2246              
   2247              
   2248          
   2249          
   2250          //Lista MENU ******************************************************************************************************************
   2251          
   2252          
   2253                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2254                void MenuSide_Paint(void)
   2255                {
   \                     MenuSide_Paint:
   \   00000000   01B5               PUSH     {R0,LR}
   2256                  
   2257                  #ifdef __WIFI_MODULE   
   2258                    List_Paint("MENU",7,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",Speech[g_leng].Siec,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   1D48               LDR      R0,??MenuSide_Paint_0  ;; 0x8ca
   \   00000006   1E4A               LDR      R2,??MenuSide_Paint_0+0x4  ;; g_leng
   \   00000008   1268               LDR      R2,[R2, #+0]
   \   0000000A   1E4B               LDR      R3,??MenuSide_Paint_0+0x8  ;; 0xa7d
   \   0000000C   5A43               MULS     R2,R3,R2
   \   0000000E   1E4B               LDR      R3,??MenuSide_Paint_0+0xC  ;; Speech
   \   00000010   9A18               ADDS     R2,R3,R2
   \   00000012   1018               ADDS     R0,R2,R0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   1D49               LDR      R1,??MenuSide_Paint_0+0x10  ;; `?<Constant "Info ">`
   \   00000018   1D48               LDR      R0,??MenuSide_Paint_0+0x14  ;; 0x636
   \   0000001A   194A               LDR      R2,??MenuSide_Paint_0+0x4  ;; g_leng
   \   0000001C   1268               LDR      R2,[R2, #+0]
   \   0000001E   194B               LDR      R3,??MenuSide_Paint_0+0x8  ;; 0xa7d
   \   00000020   5A43               MULS     R2,R3,R2
   \   00000022   194B               LDR      R3,??MenuSide_Paint_0+0xC  ;; Speech
   \   00000024   9A18               ADDS     R2,R3,R2
   \   00000026   1018               ADDS     R0,R2,R0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   1548               LDR      R0,??MenuSide_Paint_0+0x4  ;; g_leng
   \   0000002C   0068               LDR      R0,[R0, #+0]
   \   0000002E   1549               LDR      R1,??MenuSide_Paint_0+0x8  ;; 0xa7d
   \   00000030   4843               MULS     R0,R1,R0
   \   00000032   1549               LDR      R1,??MenuSide_Paint_0+0xC  ;; Speech
   \   00000034   0918               ADDS     R1,R1,R0
   \   00000036   3C31               ADDS     R1,R1,#+60
   \   00000038   8720               MOVS     R0,#+135
   \   0000003A   8000               LSLS     R0,R0,#+2        ;; #+540
   \   0000003C   104A               LDR      R2,??MenuSide_Paint_0+0x4  ;; g_leng
   \   0000003E   1268               LDR      R2,[R2, #+0]
   \   00000040   104B               LDR      R3,??MenuSide_Paint_0+0x8  ;; 0xa7d
   \   00000042   5A43               MULS     R2,R3,R2
   \   00000044   104B               LDR      R3,??MenuSide_Paint_0+0xC  ;; Speech
   \   00000046   9A18               ADDS     R2,R3,R2
   \   00000048   1018               ADDS     R0,R2,R0
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   1148               LDR      R0,??MenuSide_Paint_0+0x18  ;; 0x4dd
   \   0000004E   0C49               LDR      R1,??MenuSide_Paint_0+0x4  ;; g_leng
   \   00000050   0968               LDR      R1,[R1, #+0]
   \   00000052   0C4A               LDR      R2,??MenuSide_Paint_0+0x8  ;; 0xa7d
   \   00000054   5143               MULS     R1,R2,R1
   \   00000056   0C4A               LDR      R2,??MenuSide_Paint_0+0xC  ;; Speech
   \   00000058   5118               ADDS     R1,R2,R1
   \   0000005A   0918               ADDS     R1,R1,R0
   \   0000005C   0E48               LDR      R0,??MenuSide_Paint_0+0x1C  ;; `?<Constant "Program ">`
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   0321               MOVS     R1,#+3
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   0F22               MOVS     R2,#+15
   \   0000006A   0721               MOVS     R1,#+7
   \   0000006C   0B48               LDR      R0,??MenuSide_Paint_0+0x20  ;; `?<Constant "MENU">`
   \   0000006E   ........           BL       List_Paint
   \   00000072   0AB0               ADD      SP,SP,#+40
   2259                  #else
   2260                    List_Paint("MENU",6,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   2261                  #endif
   2262                                                                                                                                                              
   2263                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000074   01B0               ADD      SP,SP,#+4
   \   00000076   01BC               POP      {R0}
   \   00000078   0047               BX       R0               ;; return
   \   0000007A   C046               Nop      
   \                     ??MenuSide_Paint_0:
   \   0000007C   CA080000           DC32     0x8ca
   \   00000080   ........           DC32     g_leng
   \   00000084   7D0A0000           DC32     0xa7d
   \   00000088   ........           DC32     Speech
   \   0000008C   ........           DC32     `?<Constant "Info ">`
   \   00000090   36060000           DC32     0x636
   \   00000094   DD040000           DC32     0x4dd
   \   00000098   ........           DC32     `?<Constant "Program ">`
   \   0000009C   ........           DC32     `?<Constant "MENU">`
   2264          
   2265          
   2266          
   2267                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2268                void MenuSide_Event(void)
   2269                {
   \                     MenuSide_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   2270                  //char podswietl=0;
   2271                  int ans;
   2272                  
   2273                  #ifdef __WIFI_MODULE  
   2274                    char il=7;
   \   00000002   0724               MOVS     R4,#+7
   2275                  #else
   2276                    char il=6;
   2277                  #endif
   2278          
   2279           
   2280                  ans=List_Event(X_up, Y_up, X_down, Y_down, il , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   2000               MOVS     R0,R4
   \   0000000E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000010   000E               LSRS     R0,R0,#+24
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   1748               LDR      R0,??MenuSide_Event_0  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   1748               LDR      R0,??MenuSide_Event_0+0x4  ;; X_down
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   1648               LDR      R0,??MenuSide_Event_0+0x8  ;; Y_up
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   415E               LDRSH    R1,[R0, R1]
   \   00000026   1648               LDR      R0,??MenuSide_Event_0+0xC  ;; X_up
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   405F               LDRSH    R0,[R0, R5]
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   2281            
   2282                  if (ans)
   \   00000032   0028               CMP      R0,#+0
   \   00000034   1AD0               BEQ      ??MenuSide_Event_1
   2283                    {
   2284                    if ((ans>0) && (ans<=il)) MenuLevel=(MenuLevel*10+ans);
   \   00000036   0128               CMP      R0,#+1
   \   00000038   0ADB               BLT      ??MenuSide_Event_2
   \   0000003A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000003C   240E               LSRS     R4,R4,#+24
   \   0000003E   8442               CMP      R4,R0
   \   00000040   06DB               BLT      ??MenuSide_Event_2
   \   00000042   1049               LDR      R1,??MenuSide_Event_0+0x10  ;; MenuLevel
   \   00000044   0F4A               LDR      R2,??MenuSide_Event_0+0x10  ;; MenuLevel
   \   00000046   1268               LDR      R2,[R2, #+0]
   \   00000048   0A23               MOVS     R3,#+10
   \   0000004A   5A43               MULS     R2,R3,R2
   \   0000004C   1218               ADDS     R2,R2,R0
   \   0000004E   0A60               STR      R2,[R1, #+0]
   2285                    if (ans<0) {
   \                     ??MenuSide_Event_2:
   \   00000050   0028               CMP      R0,#+0
   \   00000052   09D5               BPL      ??MenuSide_Event_3
   2286                      MenuLevel=(MenuLevel/10);
   \   00000054   0B48               LDR      R0,??MenuSide_Event_0+0x10  ;; MenuLevel
   \   00000056   0068               LDR      R0,[R0, #+0]
   \   00000058   0A21               MOVS     R1,#+10
   \   0000005A   ........           BL       __aeabi_idivmod
   \   0000005E   0949               LDR      R1,??MenuSide_Event_0+0x10  ;; MenuLevel
   \   00000060   0860               STR      R0,[R1, #+0]
   2287                     CurModifSheet=0; 
   \   00000062   0948               LDR      R0,??MenuSide_Event_0+0x14  ;; CurModifSheet
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   0170               STRB     R1,[R0, #+0]
   2288                    }
   2289                    MenuPaint();
   \                     ??MenuSide_Event_3:
   \   00000068   ........           BL       MenuPaint
   2290                    } 
   2291                }//_______________________________________________________________________
   \                     ??MenuSide_Event_1:
   \   0000006C   01B0               ADD      SP,SP,#+4
   \   0000006E   30BC               POP      {R4,R5}
   \   00000070   01BC               POP      {R0}
   \   00000072   0047               BX       R0               ;; return
   \                     ??MenuSide_Event_0:
   \   00000074   ........           DC32     Y_down
   \   00000078   ........           DC32     X_down
   \   0000007C   ........           DC32     Y_up
   \   00000080   ........           DC32     X_up
   \   00000084   ........           DC32     MenuLevel
   \   00000088   ........           DC32     CurModifSheet
   2292          
   2293          
   2294          
   2295          
   2296          
   2297          //Wybór poziomu dostêpu *************************************************************************************************************
   2298                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2299                void MenuAccess_Paint(void)
   2300                {
   \                     MenuAccess_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   2301                    #define  Y   4   //przesuniêcie w dó³
   2302                    List_Paint("X",3,15,Y,5,0,Speech[g_leng].Poziom1, Speech[g_leng].Poziom2,  Speech[g_leng].Poziom3,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   A520               MOVS     R0,#+165
   \   00000012   4000               LSLS     R0,R0,#+1        ;; #+330
   \   00000014   1F4A               LDR      R2,??MenuAccess_Paint_0  ;; g_leng
   \   00000016   1268               LDR      R2,[R2, #+0]
   \   00000018   1F4B               LDR      R3,??MenuAccess_Paint_0+0x4  ;; 0xa7d
   \   0000001A   5A43               MULS     R2,R3,R2
   \   0000001C   1F4B               LDR      R3,??MenuAccess_Paint_0+0x8  ;; Speech
   \   0000001E   9A18               ADDS     R2,R3,R2
   \   00000020   1018               ADDS     R0,R2,R0
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   FF20               MOVS     R0,#+255
   \   00000026   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   00000028   1A49               LDR      R1,??MenuAccess_Paint_0  ;; g_leng
   \   0000002A   0968               LDR      R1,[R1, #+0]
   \   0000002C   1A4A               LDR      R2,??MenuAccess_Paint_0+0x4  ;; 0xa7d
   \   0000002E   5143               MULS     R1,R2,R1
   \   00000030   1A4A               LDR      R2,??MenuAccess_Paint_0+0x8  ;; Speech
   \   00000032   5118               ADDS     R1,R2,R1
   \   00000034   0918               ADDS     R1,R1,R0
   \   00000036   9620               MOVS     R0,#+150
   \   00000038   4000               LSLS     R0,R0,#+1        ;; #+300
   \   0000003A   164A               LDR      R2,??MenuAccess_Paint_0  ;; g_leng
   \   0000003C   1268               LDR      R2,[R2, #+0]
   \   0000003E   164B               LDR      R3,??MenuAccess_Paint_0+0x4  ;; 0xa7d
   \   00000040   5A43               MULS     R2,R3,R2
   \   00000042   164B               LDR      R3,??MenuAccess_Paint_0+0x8  ;; Speech
   \   00000044   9A18               ADDS     R2,R3,R2
   \   00000046   1018               ADDS     R0,R2,R0
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   0520               MOVS     R0,#+5
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   0423               MOVS     R3,#+4
   \   00000052   0F22               MOVS     R2,#+15
   \   00000054   0321               MOVS     R1,#+3
   \   00000056   12A0               ADR      R0,??MenuAccess_Paint_0+0xC  ;; 0x58, 0x00, 0x00, 0x00
   \   00000058   ........           BL       List_Paint
   \   0000005C   0AB0               ADD      SP,SP,#+40
   2303                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000005E   6846               MOV      R0,SP
   \   00000060   1049               LDR      R1,??MenuAccess_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000062   1CC9               LDM      R1!,{R2-R4}
   \   00000064   1CC0               STM      R0!,{R2-R4}
   \   00000066   0C39               SUBS     R1,R1,#+12
   \   00000068   0C38               SUBS     R0,R0,#+12
   2304                    CopyToCanvasPoint((char *)ekran_tab,49,97-Y-(15*(g_level)),8,10); 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0A20               MOVS     R0,#+10
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   0823               MOVS     R3,#+8
   \   00000072   5D20               MOVS     R0,#+93
   \   00000074   0C49               LDR      R1,??MenuAccess_Paint_0+0x14  ;; g_level
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   0F22               MOVS     R2,#+15
   \   0000007A   5143               MULS     R1,R2,R1
   \   0000007C   421A               SUBS     R2,R0,R1
   \   0000007E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000080   120E               LSRS     R2,R2,#+24
   \   00000082   3121               MOVS     R1,#+49
   \   00000084   02A8               ADD      R0,SP,#+8
   \   00000086   ........           BL       CopyToCanvasPoint
   \   0000008A   02B0               ADD      SP,SP,#+8
   2305                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000008C   04B0               ADD      SP,SP,#+16
   \   0000008E   10BC               POP      {R4}
   \   00000090   01BC               POP      {R0}
   \   00000092   0047               BX       R0               ;; return
   \                     ??MenuAccess_Paint_0:
   \   00000094   ........           DC32     g_leng
   \   00000098   7D0A0000           DC32     0xa7d
   \   0000009C   ........           DC32     Speech
   \   000000A0   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   000000A4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   000000A8   ........           DC32     g_level
   2306          
   2307          

   \                                 In section .bss, align 4
   2308                  char pass_tmp[9]={0,0,0,0,0,0,0,0,0};
   \                     pass_tmp:
   \   00000000                      DS8 12
   2309                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2310                void MenuAccess_Event(void)
   2311                {
   \                     MenuAccess_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2312                  #define  Y   4   //przesuniêcie w dó³
   2313                  int ans;
   2314           
   2315                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 5,Y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0421               MOVS     R1,#+4
   \   00000004   0520               MOVS     R0,#+5
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0320               MOVS     R0,#+3
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   3048               LDR      R0,??MenuAccess_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   2F48               LDR      R0,??MenuAccess_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   2F48               LDR      R0,??MenuAccess_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   2E48               LDR      R0,??MenuAccess_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0400               MOVS     R4,R0
   2316            
   2317                  if (ans)
   \   0000002E   002C               CMP      R4,#+0
   \   00000030   38D0               BEQ      ??MenuAccess_Event_1
   2318                    {
   2319                      if ((ans>0) && (ans<4))
   \   00000032   012C               CMP      R4,#+1
   \   00000034   49DB               BLT      ??MenuAccess_Event_2
   \   00000036   042C               CMP      R4,#+4
   \   00000038   47DA               BGE      ??MenuAccess_Event_2
   2320                      {
   2321                        if (ans>1)
   \   0000003A   022C               CMP      R4,#+2
   \   0000003C   15DB               BLT      ??MenuAccess_Event_3
   2322                        {
   2323                          for (char i=0; i<8; i++) pass_tmp[i]=0;
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   05E0               B        ??MenuAccess_Event_4
   \                     ??MenuAccess_Event_5:
   \   00000042   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000044   000E               LSRS     R0,R0,#+24
   \   00000046   2649               LDR      R1,??MenuAccess_Event_0+0x10  ;; pass_tmp
   \   00000048   0022               MOVS     R2,#+0
   \   0000004A   0A54               STRB     R2,[R1, R0]
   \   0000004C   401C               ADDS     R0,R0,#+1
   \                     ??MenuAccess_Event_4:
   \   0000004E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   0828               CMP      R0,#+8
   \   00000054   F5D3               BCC      ??MenuAccess_Event_5
   2324                          MenuLevel=(MenuLevel*10+ans);
   \   00000056   2348               LDR      R0,??MenuAccess_Event_0+0x14  ;; MenuLevel
   \   00000058   2249               LDR      R1,??MenuAccess_Event_0+0x14  ;; MenuLevel
   \   0000005A   0968               LDR      R1,[R1, #+0]
   \   0000005C   0A22               MOVS     R2,#+10
   \   0000005E   5143               MULS     R1,R2,R1
   \   00000060   0919               ADDS     R1,R1,R4
   \   00000062   0160               STR      R1,[R0, #+0]
   2325                          MenuPaint();
   \   00000064   ........           BL       MenuPaint
   \   00000068   2FE0               B        ??MenuAccess_Event_2
   2326                         
   2327                        }
   2328                        else
   2329                        {
   2330                           MenuLevel=(MenuLevel/10);
   \                     ??MenuAccess_Event_3:
   \   0000006A   1E48               LDR      R0,??MenuAccess_Event_0+0x14  ;; MenuLevel
   \   0000006C   0068               LDR      R0,[R0, #+0]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   1B49               LDR      R1,??MenuAccess_Event_0+0x14  ;; MenuLevel
   \   00000076   0860               STR      R0,[R1, #+0]
   2331                           g_level=ans-1;
   \   00000078   1B48               LDR      R0,??MenuAccess_Event_0+0x18  ;; g_level
   \   0000007A   611E               SUBS     R1,R4,#+1
   \   0000007C   0170               STRB     R1,[R0, #+0]
   2332                           Message_Paint(2,"","",Speech[g_leng].Poziom1,"","");
   \   0000007E   1BA1               ADR      R1,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000080   1AA0               ADR      R0,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   9620               MOVS     R0,#+150
   \   00000086   4000               LSLS     R0,R0,#+1        ;; #+300
   \   00000088   1949               LDR      R1,??MenuAccess_Event_0+0x20  ;; g_leng
   \   0000008A   0968               LDR      R1,[R1, #+0]
   \   0000008C   194A               LDR      R2,??MenuAccess_Event_0+0x24  ;; 0xa7d
   \   0000008E   5143               MULS     R1,R2,R1
   \   00000090   194A               LDR      R2,??MenuAccess_Event_0+0x28  ;; Speech
   \   00000092   5118               ADDS     R1,R2,R1
   \   00000094   0B18               ADDS     R3,R1,R0
   \   00000096   15A2               ADR      R2,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000098   14A1               ADR      R1,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   0000009A   0220               MOVS     R0,#+2
   \   0000009C   ........           BL       Message_Paint
   \   000000A0   02B0               ADD      SP,SP,#+8
   \   000000A2   12E0               B        ??MenuAccess_Event_2
   2333                        }
   2334                      }
   2335                      
   2336                    }
   2337                  else
   2338                    {
   2339                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MenuAccess_Event_1:
   \   000000A4   0D48               LDR      R0,??MenuAccess_Event_0+0xC  ;; X_up
   \   000000A6   0021               MOVS     R1,#+0
   \   000000A8   405E               LDRSH    R0,[R0, R1]
   \   000000AA   0128               CMP      R0,#+1
   \   000000AC   0DDB               BLT      ??MenuAccess_Event_2
   \   000000AE   0A48               LDR      R0,??MenuAccess_Event_0+0x8  ;; Y_up
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   405E               LDRSH    R0,[R0, R1]
   \   000000B4   0128               CMP      R0,#+1
   \   000000B6   08DB               BLT      ??MenuAccess_Event_2
   2340                      {
   2341                        MenuLevel=(MenuLevel/10);
   \   000000B8   0A48               LDR      R0,??MenuAccess_Event_0+0x14  ;; MenuLevel
   \   000000BA   0068               LDR      R0,[R0, #+0]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   ........           BL       __aeabi_idivmod
   \   000000C2   0849               LDR      R1,??MenuAccess_Event_0+0x14  ;; MenuLevel
   \   000000C4   0860               STR      R0,[R1, #+0]
   2342                        MenuPaint();
   \   000000C6   ........           BL       MenuPaint
   2343                      }
   2344                    }
   2345                }//_______________________________________________________________________
   \                     ??MenuAccess_Event_2:
   \   000000CA   10BC               POP      {R4}
   \   000000CC   01BC               POP      {R0}
   \   000000CE   0047               BX       R0               ;; return
   \                     ??MenuAccess_Event_0:
   \   000000D0   ........           DC32     Y_down
   \   000000D4   ........           DC32     X_down
   \   000000D8   ........           DC32     Y_up
   \   000000DC   ........           DC32     X_up
   \   000000E0   ........           DC32     pass_tmp
   \   000000E4   ........           DC32     MenuLevel
   \   000000E8   ........           DC32     g_level
   \   000000EC   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000000F0   ........           DC32     g_leng
   \   000000F4   7D0A0000           DC32     0xa7d
   \   000000F8   ........           DC32     Speech
   2346          
   2347          
   2348          
   2349          
   2350          
   2351          //has³o poziomu 1/2*************************************************************************************************************

   \                                 In section .bss, align 4
   2352          char InsertPass1[9]= {0,0,0,0,0,0,0,0,0};
   \                     InsertPass1:
   \   00000000                      DS8 12
   2353          
   2354                //*-----------------------------------------------------------------------
   2355          

   \                                 In section Debug.txt, align 4, keep-with-next
   2356                void MenuAccessPass_Paint(char level)
   2357                {
   \                     MenuAccessPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   2358                   Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000004   23A2               ADR      R2,??MenuAccessPass_Paint_0  ;; 0x45, 0x00, 0x00, 0x00
   \   00000006   24A1               ADR      R1,??MenuAccessPass_Paint_0+0x4  ;; 0x43, 0x00, 0x00, 0x00
   \   00000008   FF20               MOVS     R0,#+255
   \   0000000A   9630               ADDS     R0,R0,#+150      ;; #+405
   \   0000000C   234B               LDR      R3,??MenuAccessPass_Paint_0+0x8  ;; g_leng
   \   0000000E   1B68               LDR      R3,[R3, #+0]
   \   00000010   234D               LDR      R5,??MenuAccessPass_Paint_0+0xC  ;; 0xa7d
   \   00000012   6B43               MULS     R3,R5,R3
   \   00000014   234D               LDR      R5,??MenuAccessPass_Paint_0+0x10  ;; Speech
   \   00000016   EB18               ADDS     R3,R5,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   2359                    
   2360                   if (level==1) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000020   240E               LSRS     R4,R4,#+24
   \   00000022   012C               CMP      R4,#+1
   \   00000024   17D1               BNE      ??MenuAccessPass_Paint_1
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   7F21               MOVS     R1,#+127
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   3A21               MOVS     R1,#+58
   \   00000034   0F20               MOVS     R0,#+15
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   6623               MOVS     R3,#+102
   \   0000003A   0322               MOVS     R2,#+3
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   FF20               MOVS     R0,#+255
   \   00000040   D230               ADDS     R0,R0,#+210      ;; #+465
   \   00000042   164D               LDR      R5,??MenuAccessPass_Paint_0+0x8  ;; g_leng
   \   00000044   2D68               LDR      R5,[R5, #+0]
   \   00000046   164E               LDR      R6,??MenuAccessPass_Paint_0+0xC  ;; 0xa7d
   \   00000048   7543               MULS     R5,R6,R5
   \   0000004A   164E               LDR      R6,??MenuAccessPass_Paint_0+0x10  ;; Speech
   \   0000004C   7519               ADDS     R5,R6,R5
   \   0000004E   2818               ADDS     R0,R5,R0
   \   00000050   ........           BL       Label
   \   00000054   06B0               ADD      SP,SP,#+24
   2361                   if (level==2) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MenuAccessPass_Paint_1:
   \   00000056   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000058   240E               LSRS     R4,R4,#+24
   \   0000005A   022C               CMP      R4,#+2
   \   0000005C   17D1               BNE      ??MenuAccessPass_Paint_2
   \   0000005E   82B0               SUB      SP,SP,#+8
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   0090               STR      R0,[SP, #+0]
   \   00000064   7F21               MOVS     R1,#+127
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   3A21               MOVS     R1,#+58
   \   0000006C   0F20               MOVS     R0,#+15
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   6623               MOVS     R3,#+102
   \   00000072   0322               MOVS     R2,#+3
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   FF20               MOVS     R0,#+255
   \   00000078   D230               ADDS     R0,R0,#+210      ;; #+465
   \   0000007A   084C               LDR      R4,??MenuAccessPass_Paint_0+0x8  ;; g_leng
   \   0000007C   2468               LDR      R4,[R4, #+0]
   \   0000007E   084D               LDR      R5,??MenuAccessPass_Paint_0+0xC  ;; 0xa7d
   \   00000080   6C43               MULS     R4,R5,R4
   \   00000082   084D               LDR      R5,??MenuAccessPass_Paint_0+0x10  ;; Speech
   \   00000084   2C19               ADDS     R4,R5,R4
   \   00000086   2018               ADDS     R0,R4,R0
   \   00000088   ........           BL       Label
   \   0000008C   06B0               ADD      SP,SP,#+24
   2362                   
   2363                   
   2364                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MenuAccessPass_Paint_2:
   \   0000008E   70BC               POP      {R4-R6}
   \   00000090   01BC               POP      {R0}
   \   00000092   0047               BX       R0               ;; return
   \                     ??MenuAccessPass_Paint_0:
   \   00000094   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000098   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   0000009C   ........           DC32     g_leng
   \   000000A0   7D0A0000           DC32     0xa7d
   \   000000A4   ........           DC32     Speech
   2365          
   2366          
   2367          
   2368          
   2369                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2370                void MenuAccessPass_Event(char level)
   2371                {
   \                     MenuAccessPass_Event:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
   2372                  int ans;
   2373                  char roz=0;
   \   00000004   0026               MOVS     R6,#+0
   2374           
   2375                  
   2376                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000006   A748               LDR      R0,??MenuAccessPass_Event_0  ;; Y_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   435E               LDRSH    R3,[R0, R1]
   \   0000000C   A648               LDR      R0,??MenuAccessPass_Event_0+0x4  ;; X_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   425E               LDRSH    R2,[R0, R1]
   \   00000012   A648               LDR      R0,??MenuAccessPass_Event_0+0x8  ;; Y_up
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   A548               LDR      R0,??MenuAccessPass_Event_0+0xC  ;; X_up
   \   0000001A   0024               MOVS     R4,#+0
   \   0000001C   005F               LDRSH    R0,[R0, R4]
   \   0000001E   ........           BL       Number_Event
   \   00000022   0400               MOVS     R4,R0
   2377            
   2378                  if (ans>0)          {
   \   00000024   012C               CMP      R4,#+1
   \   00000026   00DA               BGE      .+4
   \   00000028   0CE1               B        ??MenuAccessPass_Event_1
   2379                      
   2380                      if (InsertPass1[8]<=7) 
   \   0000002A   A248               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000002C   0078               LDRB     R0,[R0, #+0]
   \   0000002E   0828               CMP      R0,#+8
   \   00000030   18D2               BCS      ??MenuAccessPass_Event_2
   2381                      { 
   2382                          if ((ans<10) || (ans==11)) 
   \   00000032   0A2C               CMP      R4,#+10
   \   00000034   01DB               BLT      ??MenuAccessPass_Event_3
   \   00000036   0B2C               CMP      R4,#+11
   \   00000038   14D1               BNE      ??MenuAccessPass_Event_2
   2383                          {
   2384                            if (ans<10) InsertPass1[InsertPass1[8]]=ans+48;
   \                     ??MenuAccessPass_Event_3:
   \   0000003A   0A2C               CMP      R4,#+10
   \   0000003C   05DA               BGE      ??MenuAccessPass_Event_4
   \   0000003E   9D48               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   9D49               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   00000044   2200               MOVS     R2,R4
   \   00000046   3032               ADDS     R2,R2,#+48
   \   00000048   0A54               STRB     R2,[R1, R0]
   2385                            if (ans==11) InsertPass1[InsertPass1[8]]=ans+37;
   \                     ??MenuAccessPass_Event_4:
   \   0000004A   0B2C               CMP      R4,#+11
   \   0000004C   05D1               BNE      ??MenuAccessPass_Event_5
   \   0000004E   9948               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   9949               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   00000054   2200               MOVS     R2,R4
   \   00000056   2532               ADDS     R2,R2,#+37
   \   00000058   0A54               STRB     R2,[R1, R0]
   2386                            InsertPass1[8]++;
   \                     ??MenuAccessPass_Event_5:
   \   0000005A   9648               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000005C   9549               LDR      R1,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000005E   0978               LDRB     R1,[R1, #+0]
   \   00000060   491C               ADDS     R1,R1,#+1
   \   00000062   0170               STRB     R1,[R0, #+0]
   2387                          }
   2388                          
   2389                      }
   2390                      if ((ans==10) && (InsertPass1[8]>0) ) {InsertPass1[8]--; InsertPass1[InsertPass1[8]]=0;}
   \                     ??MenuAccessPass_Event_2:
   \   00000064   0A2C               CMP      R4,#+10
   \   00000066   0DD1               BNE      ??MenuAccessPass_Event_6
   \   00000068   9248               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000006A   0078               LDRB     R0,[R0, #+0]
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   09D3               BCC      ??MenuAccessPass_Event_6
   \   00000070   9048               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   00000072   9049               LDR      R1,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   00000074   0978               LDRB     R1,[R1, #+0]
   \   00000076   491E               SUBS     R1,R1,#+1
   \   00000078   0170               STRB     R1,[R0, #+0]
   \   0000007A   8E48               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000007C   0078               LDRB     R0,[R0, #+0]
   \   0000007E   8E49               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   00000080   0022               MOVS     R2,#+0
   \   00000082   0A54               STRB     R2,[R1, R0]
   2391                      
   2392                      
   2393                     char InsertPassVar=0;
   \                     ??MenuAccessPass_Event_6:
   \   00000084   0020               MOVS     R0,#+0
   2394                     for (char i=0; i<=8; i++)  pass_tmp[i]=0;
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   05E0               B        ??MenuAccessPass_Event_7
   \                     ??MenuAccessPass_Event_8:
   \   0000008A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000008C   090E               LSRS     R1,R1,#+24
   \   0000008E   8B4A               LDR      R2,??MenuAccessPass_Event_0+0x18  ;; pass_tmp
   \   00000090   0023               MOVS     R3,#+0
   \   00000092   5354               STRB     R3,[R2, R1]
   \   00000094   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_7:
   \   00000096   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000098   090E               LSRS     R1,R1,#+24
   \   0000009A   0929               CMP      R1,#+9
   \   0000009C   F5D3               BCC      ??MenuAccessPass_Event_8
   2395                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<8))
   \                     ??MenuAccessPass_Event_9:
   \   0000009E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A0   000E               LSRS     R0,R0,#+24
   \   000000A2   8549               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   000000A4   095C               LDRB     R1,[R1, R0]
   \   000000A6   0029               CMP      R1,#+0
   \   000000A8   0AD0               BEQ      ??MenuAccessPass_Event_10
   \   000000AA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AC   000E               LSRS     R0,R0,#+24
   \   000000AE   0828               CMP      R0,#+8
   \   000000B0   06D2               BCS      ??MenuAccessPass_Event_10
   2396                     {
   2397                       pass_tmp[InsertPassVar]=42; //42="*"
   \   000000B2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B4   000E               LSRS     R0,R0,#+24
   \   000000B6   8149               LDR      R1,??MenuAccessPass_Event_0+0x18  ;; pass_tmp
   \   000000B8   2A22               MOVS     R2,#+42
   \   000000BA   0A54               STRB     R2,[R1, R0]
   2398                       InsertPassVar++;
   \   000000BC   401C               ADDS     R0,R0,#+1
   \   000000BE   EEE7               B        ??MenuAccessPass_Event_9
   2399                     }
   2400          
   2401                      
   2402                      //Sprawdzenie has³a
   2403                      if (ans==12)
   \                     ??MenuAccessPass_Event_10:
   \   000000C0   0C2C               CMP      R4,#+12
   \   000000C2   00D0               BEQ      .+4
   \   000000C4   A6E0               B        ??MenuAccessPass_Event_11
   2404                      {
   2405                        roz=0;
   \   000000C6   0026               MOVS     R6,#+0
   2406                        for (int i=0; i<=7; i++)
   \   000000C8   0020               MOVS     R0,#+0
   \   000000CA   16E0               B        ??MenuAccessPass_Event_12
   2407                        {
   2408                            if ((g_Password_1[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_13:
   \   000000CC   7C49               LDR      R1,??MenuAccessPass_Event_0+0x1C  ;; g_Password_1
   \   000000CE   095C               LDRB     R1,[R1, R0]
   \   000000D0   794A               LDR      R2,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   000000D2   125C               LDRB     R2,[R2, R0]
   \   000000D4   9142               CMP      R1,R2
   \   000000D6   04D0               BEQ      ??MenuAccessPass_Event_14
   \   000000D8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000DA   2D0E               LSRS     R5,R5,#+24
   \   000000DC   012D               CMP      R5,#+1
   \   000000DE   00D1               BNE      ??MenuAccessPass_Event_14
   \   000000E0   0126               MOVS     R6,#+1
   2409                            if ((g_Password_2[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_14:
   \   000000E2   7849               LDR      R1,??MenuAccessPass_Event_0+0x20  ;; g_Password_2
   \   000000E4   095C               LDRB     R1,[R1, R0]
   \   000000E6   744A               LDR      R2,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   000000E8   125C               LDRB     R2,[R2, R0]
   \   000000EA   9142               CMP      R1,R2
   \   000000EC   04D0               BEQ      ??MenuAccessPass_Event_15
   \   000000EE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000F0   2D0E               LSRS     R5,R5,#+24
   \   000000F2   022D               CMP      R5,#+2
   \   000000F4   00D1               BNE      ??MenuAccessPass_Event_15
   \   000000F6   0126               MOVS     R6,#+1
   2410                        }
   \                     ??MenuAccessPass_Event_15:
   \   000000F8   401C               ADDS     R0,R0,#+1
   \                     ??MenuAccessPass_Event_12:
   \   000000FA   0828               CMP      R0,#+8
   \   000000FC   E6DB               BLT      ??MenuAccessPass_Event_13
   2411                        //has³o programisty
   2412                        if (roz)
   \   000000FE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000100   360E               LSRS     R6,R6,#+24
   \   00000102   002E               CMP      R6,#+0
   \   00000104   20D0               BEQ      ??MenuAccessPass_Event_16
   2413                        {
   2414                          char MHS[]="060480";
   \   00000106   6846               MOV      R0,SP
   \   00000108   6F49               LDR      R1,??MenuAccessPass_Event_0+0x24  ;; `?<Constant "060480">`
   \   0000010A   0CC9               LDM      R1!,{R2,R3}
   \   0000010C   0CC0               STM      R0!,{R2,R3}
   \   0000010E   0839               SUBS     R1,R1,#+8
   \   00000110   0838               SUBS     R0,R0,#+8
   2415                            for (int i=0; i<6; i++)
   \   00000112   0020               MOVS     R0,#+0
   \   00000114   16E0               B        ??MenuAccessPass_Event_17
   2416                            {
   2417                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_18:
   \   00000116   6946               MOV      R1,SP
   \   00000118   095C               LDRB     R1,[R1, R0]
   \   0000011A   674A               LDR      R2,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   0000011C   125C               LDRB     R2,[R2, R0]
   \   0000011E   9142               CMP      R1,R2
   \   00000120   04D0               BEQ      ??MenuAccessPass_Event_19
   \   00000122   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000124   2D0E               LSRS     R5,R5,#+24
   \   00000126   012D               CMP      R5,#+1
   \   00000128   00D1               BNE      ??MenuAccessPass_Event_19
   \   0000012A   0126               MOVS     R6,#+1
   2418                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_19:
   \   0000012C   6946               MOV      R1,SP
   \   0000012E   095C               LDRB     R1,[R1, R0]
   \   00000130   614A               LDR      R2,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   00000132   125C               LDRB     R2,[R2, R0]
   \   00000134   9142               CMP      R1,R2
   \   00000136   04D0               BEQ      ??MenuAccessPass_Event_20
   \   00000138   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000013A   2D0E               LSRS     R5,R5,#+24
   \   0000013C   022D               CMP      R5,#+2
   \   0000013E   00D1               BNE      ??MenuAccessPass_Event_20
   \   00000140   0126               MOVS     R6,#+1
   2419                            }              
   \                     ??MenuAccessPass_Event_20:
   \   00000142   401C               ADDS     R0,R0,#+1
   \                     ??MenuAccessPass_Event_17:
   \   00000144   0628               CMP      R0,#+6
   \   00000146   E6DB               BLT      ??MenuAccessPass_Event_18
   2420                        }
   2421                        
   2422                        
   2423                        if (roz==0)                                 //je¿eli poprawne haslo
   \                     ??MenuAccessPass_Event_16:
   \   00000148   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000014A   360E               LSRS     R6,R6,#+24
   \   0000014C   002E               CMP      R6,#+0
   \   0000014E   3CD1               BNE      ??MenuAccessPass_Event_21
   2424                        {
   2425                           MenuLevel=11;
   \   00000150   5E48               LDR      R0,??MenuAccessPass_Event_0+0x28  ;; MenuLevel
   \   00000152   0B21               MOVS     R1,#+11
   \   00000154   0160               STR      R1,[R0, #+0]
   2426                           g_level=level;         //poziom dostêpu 1
   \   00000156   5E48               LDR      R0,??MenuAccessPass_Event_0+0x2C  ;; g_level
   \   00000158   0570               STRB     R5,[R0, #+0]
   2427                           for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   0000015A   0020               MOVS     R0,#+0
   \   0000015C   03E0               B        ??MenuAccessPass_Event_22
   \                     ??MenuAccessPass_Event_23:
   \   0000015E   5649               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   00000160   0022               MOVS     R2,#+0
   \   00000162   0A54               STRB     R2,[R1, R0]
   \   00000164   401C               ADDS     R0,R0,#+1
   \                     ??MenuAccessPass_Event_22:
   \   00000166   0828               CMP      R0,#+8
   \   00000168   F9DB               BLT      ??MenuAccessPass_Event_23
   2428                           InsertPass1[8]=0;
   \   0000016A   5248               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000016C   0021               MOVS     R1,#+0
   \   0000016E   0170               STRB     R1,[R0, #+0]
   2429                           if (level==1)  Message_Paint(2,"","",Speech[g_leng].Poziom2,"","");
   \   00000170   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000172   2D0E               LSRS     R5,R5,#+24
   \   00000174   012D               CMP      R5,#+1
   \   00000176   11D1               BNE      ??MenuAccessPass_Event_24
   \   00000178   56A1               ADR      R1,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   0000017A   56A0               ADR      R0,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   0000017C   03B4               PUSH     {R0,R1}
   \   0000017E   FF20               MOVS     R0,#+255
   \   00000180   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   00000182   5549               LDR      R1,??MenuAccessPass_Event_0+0x34  ;; g_leng
   \   00000184   0968               LDR      R1,[R1, #+0]
   \   00000186   554A               LDR      R2,??MenuAccessPass_Event_0+0x38  ;; 0xa7d
   \   00000188   5143               MULS     R1,R2,R1
   \   0000018A   554A               LDR      R2,??MenuAccessPass_Event_0+0x3C  ;; Speech
   \   0000018C   5118               ADDS     R1,R2,R1
   \   0000018E   0B18               ADDS     R3,R1,R0
   \   00000190   50A2               ADR      R2,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   00000192   50A1               ADR      R1,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   00000194   0220               MOVS     R0,#+2
   \   00000196   ........           BL       Message_Paint
   \   0000019A   02B0               ADD      SP,SP,#+8
   2430                           if (level==2)  Message_Paint(2,"","",Speech[g_leng].Poziom3,"","");
   \                     ??MenuAccessPass_Event_24:
   \   0000019C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000019E   2D0E               LSRS     R5,R5,#+24
   \   000001A0   022D               CMP      R5,#+2
   \   000001A2   37D1               BNE      ??MenuAccessPass_Event_11
   \   000001A4   4BA1               ADR      R1,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000001A6   4BA0               ADR      R0,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000001A8   03B4               PUSH     {R0,R1}
   \   000001AA   A520               MOVS     R0,#+165
   \   000001AC   4000               LSLS     R0,R0,#+1        ;; #+330
   \   000001AE   4A49               LDR      R1,??MenuAccessPass_Event_0+0x34  ;; g_leng
   \   000001B0   0968               LDR      R1,[R1, #+0]
   \   000001B2   4A4A               LDR      R2,??MenuAccessPass_Event_0+0x38  ;; 0xa7d
   \   000001B4   5143               MULS     R1,R2,R1
   \   000001B6   4A4A               LDR      R2,??MenuAccessPass_Event_0+0x3C  ;; Speech
   \   000001B8   5118               ADDS     R1,R2,R1
   \   000001BA   0B18               ADDS     R3,R1,R0
   \   000001BC   45A2               ADR      R2,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000001BE   45A1               ADR      R1,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000001C0   0220               MOVS     R0,#+2
   \   000001C2   ........           BL       Message_Paint
   \   000001C6   02B0               ADD      SP,SP,#+8
   \   000001C8   24E0               B        ??MenuAccessPass_Event_11
   2431                        } 
   2432                        else
   2433                        {
   2434                           //informacja o b³ednym hale
   2435                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??MenuAccessPass_Event_21:
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   03E0               B        ??MenuAccessPass_Event_25
   \                     ??MenuAccessPass_Event_26:
   \   000001CE   3A49               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   000001D0   0022               MOVS     R2,#+0
   \   000001D2   0A54               STRB     R2,[R1, R0]
   \   000001D4   401C               ADDS     R0,R0,#+1
   \                     ??MenuAccessPass_Event_25:
   \   000001D6   0828               CMP      R0,#+8
   \   000001D8   F9DB               BLT      ??MenuAccessPass_Event_26
   2436                           InsertPass1[8]=0;
   \   000001DA   3648               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   000001DC   0021               MOVS     R1,#+0
   \   000001DE   0170               STRB     R1,[R0, #+0]
   2437                        
   2438                           Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \   000001E0   3CA1               ADR      R1,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000001E2   3CA0               ADR      R0,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000001E4   03B4               PUSH     {R0,R1}
   \   000001E6   FF20               MOVS     R0,#+255
   \   000001E8   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000001EA   3B49               LDR      R1,??MenuAccessPass_Event_0+0x34  ;; g_leng
   \   000001EC   0968               LDR      R1,[R1, #+0]
   \   000001EE   3B4A               LDR      R2,??MenuAccessPass_Event_0+0x38  ;; 0xa7d
   \   000001F0   5143               MULS     R1,R2,R1
   \   000001F2   3B4A               LDR      R2,??MenuAccessPass_Event_0+0x3C  ;; Speech
   \   000001F4   5118               ADDS     R1,R2,R1
   \   000001F6   0B18               ADDS     R3,R1,R0
   \   000001F8   D220               MOVS     R0,#+210
   \   000001FA   4000               LSLS     R0,R0,#+1        ;; #+420
   \   000001FC   3649               LDR      R1,??MenuAccessPass_Event_0+0x34  ;; g_leng
   \   000001FE   0968               LDR      R1,[R1, #+0]
   \   00000200   364A               LDR      R2,??MenuAccessPass_Event_0+0x38  ;; 0xa7d
   \   00000202   5143               MULS     R1,R2,R1
   \   00000204   364A               LDR      R2,??MenuAccessPass_Event_0+0x3C  ;; Speech
   \   00000206   5118               ADDS     R1,R2,R1
   \   00000208   0A18               ADDS     R2,R1,R0
   \   0000020A   32A1               ADR      R1,??MenuAccessPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   0000020C   0220               MOVS     R0,#+2
   \   0000020E   ........           BL       Message_Paint
   \   00000212   02B0               ADD      SP,SP,#+8
   2439                        }
   2440                        //MenuPaint();
   2441                      }
   2442                     
   2443                     
   2444                      
   2445                      //MenuPaint();
   2446                      //Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2447            
   2448                      if ((ans>=1) && (ans<=11)) 
   \                     ??MenuAccessPass_Event_11:
   \   00000214   012C               CMP      R4,#+1
   \   00000216   41DB               BLT      ??MenuAccessPass_Event_27
   \   00000218   0C2C               CMP      R4,#+12
   \   0000021A   3FDA               BGE      ??MenuAccessPass_Event_27
   2449                      {
   2450                        MenuPaint();
   \   0000021C   ........           BL       MenuPaint
   2451                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000220   82B0               SUB      SP,SP,#+8
   \   00000222   0020               MOVS     R0,#+0
   \   00000224   0090               STR      R0,[SP, #+0]
   \   00000226   7F21               MOVS     R1,#+127
   \   00000228   0020               MOVS     R0,#+0
   \   0000022A   03B4               PUSH     {R0,R1}
   \   0000022C   3721               MOVS     R1,#+55
   \   0000022E   2148               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   00000230   0078               LDRB     R0,[R0, #+0]
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   5A23               MOVS     R3,#+90
   \   00000236   0422               MOVS     R2,#+4
   \   00000238   0221               MOVS     R1,#+2
   \   0000023A   2048               LDR      R0,??MenuAccessPass_Event_0+0x18  ;; pass_tmp
   \   0000023C   ........           BL       Label
   \   00000240   06B0               ADD      SP,SP,#+24
   \   00000242   2BE0               B        ??MenuAccessPass_Event_27
   2452                      }
   2453                      
   2454                    }  
   2455                    else if (ans==0) 
   \                     ??MenuAccessPass_Event_1:
   \   00000244   002C               CMP      R4,#+0
   \   00000246   13D1               BNE      ??MenuAccessPass_Event_28
   2456                      {
   2457                        MenuPaint();
   \   00000248   ........           BL       MenuPaint
   2458                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000024C   82B0               SUB      SP,SP,#+8
   \   0000024E   0020               MOVS     R0,#+0
   \   00000250   0090               STR      R0,[SP, #+0]
   \   00000252   7F21               MOVS     R1,#+127
   \   00000254   0020               MOVS     R0,#+0
   \   00000256   03B4               PUSH     {R0,R1}
   \   00000258   3721               MOVS     R1,#+55
   \   0000025A   1648               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   0000025C   0078               LDRB     R0,[R0, #+0]
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   5A23               MOVS     R3,#+90
   \   00000262   0422               MOVS     R2,#+4
   \   00000264   0221               MOVS     R1,#+2
   \   00000266   1548               LDR      R0,??MenuAccessPass_Event_0+0x18  ;; pass_tmp
   \   00000268   ........           BL       Label
   \   0000026C   06B0               ADD      SP,SP,#+24
   \   0000026E   15E0               B        ??MenuAccessPass_Event_27
   2459                      }
   2460                  
   2461                   else if (ans<0)
   \                     ??MenuAccessPass_Event_28:
   \   00000270   002C               CMP      R4,#+0
   \   00000272   13D5               BPL      ??MenuAccessPass_Event_27
   2462                    {
   2463                        MenuLevel=(MenuLevel/100);
   \   00000274   1548               LDR      R0,??MenuAccessPass_Event_0+0x28  ;; MenuLevel
   \   00000276   0068               LDR      R0,[R0, #+0]
   \   00000278   6421               MOVS     R1,#+100
   \   0000027A   ........           BL       __aeabi_idivmod
   \   0000027E   1349               LDR      R1,??MenuAccessPass_Event_0+0x28  ;; MenuLevel
   \   00000280   0860               STR      R0,[R1, #+0]
   2464                        MenuPaint();
   \   00000282   ........           BL       MenuPaint
   2465                        for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   00000286   0020               MOVS     R0,#+0
   \   00000288   03E0               B        ??MenuAccessPass_Event_29
   \                     ??MenuAccessPass_Event_30:
   \   0000028A   0B49               LDR      R1,??MenuAccessPass_Event_0+0x14  ;; InsertPass1
   \   0000028C   0022               MOVS     R2,#+0
   \   0000028E   0A54               STRB     R2,[R1, R0]
   \   00000290   401C               ADDS     R0,R0,#+1
   \                     ??MenuAccessPass_Event_29:
   \   00000292   0828               CMP      R0,#+8
   \   00000294   F9DB               BLT      ??MenuAccessPass_Event_30
   2466                        InsertPass1[8]=0;
   \   00000296   0748               LDR      R0,??MenuAccessPass_Event_0+0x10  ;; InsertPass1 + 8
   \   00000298   0021               MOVS     R1,#+0
   \   0000029A   0170               STRB     R1,[R0, #+0]
   2467                    }
   2468                 
   2469                }//_______________________________________________________________________
   \                     ??MenuAccessPass_Event_27:
   \   0000029C   02B0               ADD      SP,SP,#+8
   \   0000029E   70BC               POP      {R4-R6}
   \   000002A0   01BC               POP      {R0}
   \   000002A2   0047               BX       R0               ;; return
   \                     ??MenuAccessPass_Event_0:
   \   000002A4   ........           DC32     Y_down
   \   000002A8   ........           DC32     X_down
   \   000002AC   ........           DC32     Y_up
   \   000002B0   ........           DC32     X_up
   \   000002B4   ........           DC32     InsertPass1 + 8
   \   000002B8   ........           DC32     InsertPass1
   \   000002BC   ........           DC32     pass_tmp
   \   000002C0   ........           DC32     g_Password_1
   \   000002C4   ........           DC32     g_Password_2
   \   000002C8   ........           DC32     `?<Constant "060480">`
   \   000002CC   ........           DC32     MenuLevel
   \   000002D0   ........           DC32     g_level
   \   000002D4   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000002D8   ........           DC32     g_leng
   \   000002DC   7D0A0000           DC32     0xa7d
   \   000002E0   ........           DC32     Speech
   2470          
   2471          
   2472                
   2473                
   2474          //Odrysuj procedurê **************************************************************************************************************
   2475          //*  x,y          - wspó³¿êdna lewego dolnego rogu boksu procedury
   2476          

   \                                 In section Debug.txt, align 4, keep-with-next
   2477                void PaintProc(char x, char y, _Procedure *Proc)
   2478                {   
   \                     PaintProc:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1600               MOVS     R6,R2
   2479                    char PixPlab;
   2480                    char txt[7]={0,0,0,0,0,0,0};
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0022               MOVS     R2,#+0
   \   0000000E   06C0               STM      R0!,{R1,R2}
   \   00000010   0838               SUBS     R0,R0,#+8
   2481                    char ind;
   2482                    switch (Proc->Type)
   \   00000012   3078               LDRB     R0,[R6, #+0]
   \   00000014   0228               CMP      R0,#+2
   \   00000016   00D1               BNE      .+4
   \   00000018   89E0               B        ??PaintProc_0
   \   0000001A   0328               CMP      R0,#+3
   \   0000001C   00D1               BNE      .+4
   \   0000001E   9EE0               B        ??PaintProc_1
   \   00000020   0428               CMP      R0,#+4
   \   00000022   00D1               BNE      .+4
   \   00000024   C9E0               B        ??PaintProc_2
   \   00000026   0528               CMP      R0,#+5
   \   00000028   00D1               BNE      .+4
   \   0000002A   F4E0               B        ??PaintProc_3
   \   0000002C   0628               CMP      R0,#+6
   \   0000002E   00D1               BNE      .+4
   \   00000030   1FE1               B        ??PaintProc_4
   \   00000032   0728               CMP      R0,#+7
   \   00000034   00D1               BNE      .+4
   \   00000036   4CE1               B        ??PaintProc_5
   \   00000038   0828               CMP      R0,#+8
   \   0000003A   00D1               BNE      .+4
   \   0000003C   7BE1               B        ??PaintProc_6
   \   0000003E   0928               CMP      R0,#+9
   \   00000040   63D0               BEQ      ??PaintProc_7
   \   00000042   0A28               CMP      R0,#+10
   \   00000044   00D1               BNE      .+4
   \   00000046   A6E1               B        ??PaintProc_8
   \   00000048   0B28               CMP      R0,#+11
   \   0000004A   00D1               BNE      .+4
   \   0000004C   B5E1               B        ??PaintProc_9
   \   0000004E   0C28               CMP      R0,#+12
   \   00000050   00D1               BNE      .+4
   \   00000052   C4E1               B        ??PaintProc_10
   \   00000054   1428               CMP      R0,#+20
   \   00000056   00D1               BNE      .+4
   \   00000058   54E2               B        ??PaintProc_11
   \   0000005A   1528               CMP      R0,#+21
   \   0000005C   00D1               BNE      .+4
   \   0000005E   BAE2               B        ??PaintProc_12
   \   00000060   1628               CMP      R0,#+22
   \   00000062   00D1               BNE      .+4
   \   00000064   2CE3               B        ??PaintProc_13
   \   00000066   1728               CMP      R0,#+23
   \   00000068   00D1               BNE      .+4
   \   0000006A   DFE3               B        ??PaintProc_14
   \   0000006C   1828               CMP      R0,#+24
   \   0000006E   00D1               BNE      .+4
   \   00000070   8FE3               B        ??PaintProc_15
   \   00000072   2028               CMP      R0,#+32
   \   00000074   01D1               BNE      .+6
   \   00000076   00F00FFC           BL       ??PaintProc_16
   \   0000007A   2128               CMP      R0,#+33
   \   0000007C   01D1               BNE      .+6
   \   0000007E   00F073FC           BL       ??PaintProc_17
   \   00000082   2228               CMP      R0,#+34
   \   00000084   01D1               BNE      .+6
   \   00000086   00F0BBFC           BL       ??PaintProc_18
   \   0000008A   2328               CMP      R0,#+35
   \   0000008C   01D1               BNE      .+6
   \   0000008E   00F003FD           BL       ??PaintProc_19
   \   00000092   2428               CMP      R0,#+36
   \   00000094   01D1               BNE      .+6
   \   00000096   00F070FD           BL       ??PaintProc_20
   \   0000009A   2528               CMP      R0,#+37
   \   0000009C   01D1               BNE      .+6
   \   0000009E   00F0EBFD           BL       ??PaintProc_21
   \   000000A2   2628               CMP      R0,#+38
   \   000000A4   01D1               BNE      .+6
   \   000000A6   00F036FE           BL       ??PaintProc_22
   \   000000AA   2728               CMP      R0,#+39
   \   000000AC   01D1               BNE      .+6
   \   000000AE   00F03FFD           BL       ??PaintProc_23
   \   000000B2   2D28               CMP      R0,#+45
   \   000000B4   01D1               BNE      .+6
   \   000000B6   00F07DFE           BL       ??PaintProc_24
   \   000000BA   2E28               CMP      R0,#+46
   \   000000BC   01D1               BNE      .+6
   \   000000BE   00F0C9FE           BL       ??PaintProc_25
   \   000000C2   2F28               CMP      R0,#+47
   \   000000C4   01D1               BNE      .+6
   \   000000C6   00F00BFF           BL       ??PaintProc_26
   \   000000CA   3728               CMP      R0,#+55
   \   000000CC   01D1               BNE      .+6
   \   000000CE   00F037FF           BL       ??PaintProc_27
   \   000000D2   3828               CMP      R0,#+56
   \   000000D4   01D1               BNE      .+6
   \   000000D6   00F0A3FF           BL       ??PaintProc_28
   \   000000DA   3928               CMP      R0,#+57
   \   000000DC   01D1               BNE      .+6
   \   000000DE   00F0EBFF           BL       ??PaintProc_29
   \   000000E2   3A28               CMP      R0,#+58
   \   000000E4   00D1               BNE      .+4
   \   000000E6   8CE1               B        ??PaintProc_30
   \   000000E8   3B28               CMP      R0,#+59
   \   000000EA   00D1               BNE      .+4
   \   000000EC   9BE1               B        ??PaintProc_31
   \   000000EE   3C28               CMP      R0,#+60
   \   000000F0   00D1               BNE      .+4
   \   000000F2   AAE1               B        ??PaintProc_32
   \   000000F4   3D28               CMP      R0,#+61
   \   000000F6   00D1               BNE      .+4
   \   000000F8   B9E1               B        ??PaintProc_33
   \   000000FA   3E28               CMP      R0,#+62
   \   000000FC   00D1               BNE      .+4
   \   000000FE   C8E1               B        ??PaintProc_34
   \   00000100   3F28               CMP      R0,#+63
   \   00000102   00D1               BNE      .+4
   \   00000104   D7E1               B        ??PaintProc_35
   \   00000106   01F022F8           BL       ??PaintProc_36
   2483                    {
   2484                      
   2485                    case ProcNOT:
   2486                        CopyToCanvasPoint((char*)ProcNot_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_7:
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0820               MOVS     R0,#+8
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   1323               MOVS     R3,#+19
   \   00000112   ED1C               ADDS     R5,R5,#+3
   \   00000114   2A00               MOVS     R2,R5
   \   00000116   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000118   120E               LSRS     R2,R2,#+24
   \   0000011A   641C               ADDS     R4,R4,#+1
   \   0000011C   2100               MOVS     R1,R4
   \   0000011E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000120   090E               LSRS     R1,R1,#+24
   \   00000122   EE48               LDR      R0,??PaintProc_37  ;; ProcNot_graf
   \   00000124   ........           BL       CopyToCanvasPoint
   \   00000128   02B0               ADD      SP,SP,#+8
   \   0000012A   01F010F8           BL       ??PaintProc_36
   2487                    break;  
   2488                    
   2489                    case ProcConect:
   2490                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_0:
   \   0000012E   0123               MOVS     R3,#+1
   \   00000130   1522               MOVS     R2,#+21
   \   00000132   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000134   2D0E               LSRS     R5,R5,#+24
   \   00000136   2900               MOVS     R1,R5
   \   00000138   891D               ADDS     R1,R1,#+6
   \   0000013A   2000               MOVS     R0,R4
   \   0000013C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000013E   000E               LSRS     R0,R0,#+24
   \   00000140   ........           BL       H_line
   2491                        H_line(x,y+7,21,1); 
   \   00000144   0123               MOVS     R3,#+1
   \   00000146   1522               MOVS     R2,#+21
   \   00000148   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000014A   2D0E               LSRS     R5,R5,#+24
   \   0000014C   ED1D               ADDS     R5,R5,#+7
   \   0000014E   2900               MOVS     R1,R5
   \   00000150   2000               MOVS     R0,R4
   \   00000152   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000154   000E               LSRS     R0,R0,#+24
   \   00000156   ........           BL       H_line
   \   0000015A   00F0F8FF           BL       ??PaintProc_36
   2492                    break;  
   2493                      
   2494                    case ProcDown:
   2495                        H_line(x,y+6,11,1); 
   \                     ??PaintProc_1:
   \   0000015E   0123               MOVS     R3,#+1
   \   00000160   0B22               MOVS     R2,#+11
   \   00000162   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000164   2D0E               LSRS     R5,R5,#+24
   \   00000166   2900               MOVS     R1,R5
   \   00000168   891D               ADDS     R1,R1,#+6
   \   0000016A   2000               MOVS     R0,R4
   \   0000016C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000016E   000E               LSRS     R0,R0,#+24
   \   00000170   ........           BL       H_line
   2496                        H_line(x,y+7,11,1);
   \   00000174   0123               MOVS     R3,#+1
   \   00000176   0B22               MOVS     R2,#+11
   \   00000178   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000017A   2D0E               LSRS     R5,R5,#+24
   \   0000017C   2900               MOVS     R1,R5
   \   0000017E   C91D               ADDS     R1,R1,#+7
   \   00000180   2000               MOVS     R0,R4
   \   00000182   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000184   000E               LSRS     R0,R0,#+24
   \   00000186   ........           BL       H_line
   2497                        V_line(x+9,y,6,1);
   \   0000018A   0123               MOVS     R3,#+1
   \   0000018C   0622               MOVS     R2,#+6
   \   0000018E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000190   2D0E               LSRS     R5,R5,#+24
   \   00000192   2900               MOVS     R1,R5
   \   00000194   2000               MOVS     R0,R4
   \   00000196   0930               ADDS     R0,R0,#+9
   \   00000198   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000019A   000E               LSRS     R0,R0,#+24
   \   0000019C   ........           BL       V_line
   2498                        V_line(x+10,y,6,1); 
   \   000001A0   0123               MOVS     R3,#+1
   \   000001A2   0622               MOVS     R2,#+6
   \   000001A4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001A6   2D0E               LSRS     R5,R5,#+24
   \   000001A8   2900               MOVS     R1,R5
   \   000001AA   0A34               ADDS     R4,R4,#+10
   \   000001AC   2000               MOVS     R0,R4
   \   000001AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001B0   000E               LSRS     R0,R0,#+24
   \   000001B2   ........           BL       V_line
   \   000001B6   00F0CAFF           BL       ??PaintProc_36
   2499                    break;  
   2500                    
   2501                    case ProcDownRight:
   2502                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_2:
   \   000001BA   0123               MOVS     R3,#+1
   \   000001BC   1522               MOVS     R2,#+21
   \   000001BE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001C0   2D0E               LSRS     R5,R5,#+24
   \   000001C2   2900               MOVS     R1,R5
   \   000001C4   891D               ADDS     R1,R1,#+6
   \   000001C6   2000               MOVS     R0,R4
   \   000001C8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001CA   000E               LSRS     R0,R0,#+24
   \   000001CC   ........           BL       H_line
   2503                        H_line(x,y+7,21,1);
   \   000001D0   0123               MOVS     R3,#+1
   \   000001D2   1522               MOVS     R2,#+21
   \   000001D4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001D6   2D0E               LSRS     R5,R5,#+24
   \   000001D8   2900               MOVS     R1,R5
   \   000001DA   C91D               ADDS     R1,R1,#+7
   \   000001DC   2000               MOVS     R0,R4
   \   000001DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001E0   000E               LSRS     R0,R0,#+24
   \   000001E2   ........           BL       H_line
   2504                        V_line(x+9,y,6,1);
   \   000001E6   0123               MOVS     R3,#+1
   \   000001E8   0622               MOVS     R2,#+6
   \   000001EA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001EC   2D0E               LSRS     R5,R5,#+24
   \   000001EE   2900               MOVS     R1,R5
   \   000001F0   2000               MOVS     R0,R4
   \   000001F2   0930               ADDS     R0,R0,#+9
   \   000001F4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001F6   000E               LSRS     R0,R0,#+24
   \   000001F8   ........           BL       V_line
   2505                        V_line(x+10,y,6,1); 
   \   000001FC   0123               MOVS     R3,#+1
   \   000001FE   0622               MOVS     R2,#+6
   \   00000200   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000202   2D0E               LSRS     R5,R5,#+24
   \   00000204   2900               MOVS     R1,R5
   \   00000206   0A34               ADDS     R4,R4,#+10
   \   00000208   2000               MOVS     R0,R4
   \   0000020A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000020C   000E               LSRS     R0,R0,#+24
   \   0000020E   ........           BL       V_line
   \   00000212   00F09CFF           BL       ??PaintProc_36
   2506                    break;  
   2507          
   2508                    case ProcSumLogDown:
   2509                        H_line(x,y+6,9,1); 
   \                     ??PaintProc_3:
   \   00000216   0123               MOVS     R3,#+1
   \   00000218   0922               MOVS     R2,#+9
   \   0000021A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000021C   2D0E               LSRS     R5,R5,#+24
   \   0000021E   2900               MOVS     R1,R5
   \   00000220   891D               ADDS     R1,R1,#+6
   \   00000222   2000               MOVS     R0,R4
   \   00000224   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000226   000E               LSRS     R0,R0,#+24
   \   00000228   ........           BL       H_line
   2510                        H_line(x,y+7,9,1);
   \   0000022C   0123               MOVS     R3,#+1
   \   0000022E   0922               MOVS     R2,#+9
   \   00000230   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000232   2D0E               LSRS     R5,R5,#+24
   \   00000234   2900               MOVS     R1,R5
   \   00000236   C91D               ADDS     R1,R1,#+7
   \   00000238   2000               MOVS     R0,R4
   \   0000023A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000023C   000E               LSRS     R0,R0,#+24
   \   0000023E   ........           BL       H_line
   2511                        V_line(x+9,y,21,1);
   \   00000242   0123               MOVS     R3,#+1
   \   00000244   1522               MOVS     R2,#+21
   \   00000246   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000248   2D0E               LSRS     R5,R5,#+24
   \   0000024A   2900               MOVS     R1,R5
   \   0000024C   2000               MOVS     R0,R4
   \   0000024E   0930               ADDS     R0,R0,#+9
   \   00000250   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000252   000E               LSRS     R0,R0,#+24
   \   00000254   ........           BL       V_line
   2512                        V_line(x+10,y,21,1); 
   \   00000258   0123               MOVS     R3,#+1
   \   0000025A   1522               MOVS     R2,#+21
   \   0000025C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000025E   2D0E               LSRS     R5,R5,#+24
   \   00000260   2900               MOVS     R1,R5
   \   00000262   0A34               ADDS     R4,R4,#+10
   \   00000264   2000               MOVS     R0,R4
   \   00000266   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000268   000E               LSRS     R0,R0,#+24
   \   0000026A   ........           BL       V_line
   \   0000026E   00F06EFF           BL       ??PaintProc_36
   2513                    break;  
   2514                    
   2515                    case ProcSumLogRight:
   2516                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_4:
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   1522               MOVS     R2,#+21
   \   00000276   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000278   2D0E               LSRS     R5,R5,#+24
   \   0000027A   2900               MOVS     R1,R5
   \   0000027C   891D               ADDS     R1,R1,#+6
   \   0000027E   2000               MOVS     R0,R4
   \   00000280   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000282   000E               LSRS     R0,R0,#+24
   \   00000284   ........           BL       H_line
   2517                        H_line(x,y+7,21,1);
   \   00000288   0123               MOVS     R3,#+1
   \   0000028A   1522               MOVS     R2,#+21
   \   0000028C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000028E   2D0E               LSRS     R5,R5,#+24
   \   00000290   2900               MOVS     R1,R5
   \   00000292   C91D               ADDS     R1,R1,#+7
   \   00000294   2000               MOVS     R0,R4
   \   00000296   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000298   000E               LSRS     R0,R0,#+24
   \   0000029A   ........           BL       H_line
   2518                        V_line(x+9,y+7,14,1);
   \   0000029E   0123               MOVS     R3,#+1
   \   000002A0   0E22               MOVS     R2,#+14
   \   000002A2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002A4   2D0E               LSRS     R5,R5,#+24
   \   000002A6   2900               MOVS     R1,R5
   \   000002A8   C91D               ADDS     R1,R1,#+7
   \   000002AA   2000               MOVS     R0,R4
   \   000002AC   0930               ADDS     R0,R0,#+9
   \   000002AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002B0   000E               LSRS     R0,R0,#+24
   \   000002B2   ........           BL       V_line
   2519                        V_line(x+10,y+7,14,1); 
   \   000002B6   0123               MOVS     R3,#+1
   \   000002B8   0E22               MOVS     R2,#+14
   \   000002BA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002BC   2D0E               LSRS     R5,R5,#+24
   \   000002BE   ED1D               ADDS     R5,R5,#+7
   \   000002C0   2900               MOVS     R1,R5
   \   000002C2   0A34               ADDS     R4,R4,#+10
   \   000002C4   2000               MOVS     R0,R4
   \   000002C6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002C8   000E               LSRS     R0,R0,#+24
   \   000002CA   ........           BL       V_line
   \   000002CE   00F03EFF           BL       ??PaintProc_36
   2520                    break;  
   2521                    
   2522                    case ProcUpToRight:
   2523                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_5:
   \   000002D2   0123               MOVS     R3,#+1
   \   000002D4   0C22               MOVS     R2,#+12
   \   000002D6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002D8   2D0E               LSRS     R5,R5,#+24
   \   000002DA   2900               MOVS     R1,R5
   \   000002DC   891D               ADDS     R1,R1,#+6
   \   000002DE   2000               MOVS     R0,R4
   \   000002E0   0930               ADDS     R0,R0,#+9
   \   000002E2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002E4   000E               LSRS     R0,R0,#+24
   \   000002E6   ........           BL       H_line
   2524                        H_line(x+9,y+7,12,1);
   \   000002EA   0123               MOVS     R3,#+1
   \   000002EC   0C22               MOVS     R2,#+12
   \   000002EE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002F0   2D0E               LSRS     R5,R5,#+24
   \   000002F2   2900               MOVS     R1,R5
   \   000002F4   C91D               ADDS     R1,R1,#+7
   \   000002F6   2000               MOVS     R0,R4
   \   000002F8   0930               ADDS     R0,R0,#+9
   \   000002FA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002FC   000E               LSRS     R0,R0,#+24
   \   000002FE   ........           BL       H_line
   2525                        V_line(x+9,y+7,15,1);
   \   00000302   0123               MOVS     R3,#+1
   \   00000304   0F22               MOVS     R2,#+15
   \   00000306   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000308   2D0E               LSRS     R5,R5,#+24
   \   0000030A   2900               MOVS     R1,R5
   \   0000030C   C91D               ADDS     R1,R1,#+7
   \   0000030E   2000               MOVS     R0,R4
   \   00000310   0930               ADDS     R0,R0,#+9
   \   00000312   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000314   000E               LSRS     R0,R0,#+24
   \   00000316   ........           BL       V_line
   2526                        V_line(x+10,y+7,15,1); 
   \   0000031A   0123               MOVS     R3,#+1
   \   0000031C   0F22               MOVS     R2,#+15
   \   0000031E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000320   2D0E               LSRS     R5,R5,#+24
   \   00000322   ED1D               ADDS     R5,R5,#+7
   \   00000324   2900               MOVS     R1,R5
   \   00000326   0A34               ADDS     R4,R4,#+10
   \   00000328   2000               MOVS     R0,R4
   \   0000032A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000032C   000E               LSRS     R0,R0,#+24
   \   0000032E   ........           BL       V_line
   \   00000332   00F00CFF           BL       ??PaintProc_36
   2527                    break;  
   2528          
   2529                    
   2530                    case ProcUpToRightDown:
   2531                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_6:
   \   00000336   0123               MOVS     R3,#+1
   \   00000338   0C22               MOVS     R2,#+12
   \   0000033A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000033C   2D0E               LSRS     R5,R5,#+24
   \   0000033E   2900               MOVS     R1,R5
   \   00000340   891D               ADDS     R1,R1,#+6
   \   00000342   2000               MOVS     R0,R4
   \   00000344   0930               ADDS     R0,R0,#+9
   \   00000346   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000348   000E               LSRS     R0,R0,#+24
   \   0000034A   ........           BL       H_line
   2532                        H_line(x+9,y+7,12,1);
   \   0000034E   0123               MOVS     R3,#+1
   \   00000350   0C22               MOVS     R2,#+12
   \   00000352   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000354   2D0E               LSRS     R5,R5,#+24
   \   00000356   2900               MOVS     R1,R5
   \   00000358   C91D               ADDS     R1,R1,#+7
   \   0000035A   2000               MOVS     R0,R4
   \   0000035C   0930               ADDS     R0,R0,#+9
   \   0000035E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000360   000E               LSRS     R0,R0,#+24
   \   00000362   ........           BL       H_line
   2533                        V_line(x+9,y,21,1);
   \   00000366   0123               MOVS     R3,#+1
   \   00000368   1522               MOVS     R2,#+21
   \   0000036A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000036C   2D0E               LSRS     R5,R5,#+24
   \   0000036E   2900               MOVS     R1,R5
   \   00000370   2000               MOVS     R0,R4
   \   00000372   0930               ADDS     R0,R0,#+9
   \   00000374   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000376   000E               LSRS     R0,R0,#+24
   \   00000378   ........           BL       V_line
   2534                        V_line(x+10,y,21,1); 
   \   0000037C   0123               MOVS     R3,#+1
   \   0000037E   1522               MOVS     R2,#+21
   \   00000380   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000382   2D0E               LSRS     R5,R5,#+24
   \   00000384   2900               MOVS     R1,R5
   \   00000386   0A34               ADDS     R4,R4,#+10
   \   00000388   2000               MOVS     R0,R4
   \   0000038A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000038C   000E               LSRS     R0,R0,#+24
   \   0000038E   ........           BL       V_line
   \   00000392   00F0DCFE           BL       ??PaintProc_36
   2535                    break;  
   2536                    
   2537                    
   2538                    case ProcToggleRS:
   2539                        CopyToCanvasPoint((char*)ProcToggleRS_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_8:
   \   00000396   82B0               SUB      SP,SP,#+8
   \   00000398   1320               MOVS     R0,#+19
   \   0000039A   0090               STR      R0,[SP, #+0]
   \   0000039C   1323               MOVS     R3,#+19
   \   0000039E   AD1C               ADDS     R5,R5,#+2
   \   000003A0   2A00               MOVS     R2,R5
   \   000003A2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000003A4   120E               LSRS     R2,R2,#+24
   \   000003A6   641C               ADDS     R4,R4,#+1
   \   000003A8   2100               MOVS     R1,R4
   \   000003AA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003AC   090E               LSRS     R1,R1,#+24
   \   000003AE   4C48               LDR      R0,??PaintProc_37+0x4  ;; ProcToggleRS_graf
   \   000003B0   ........           BL       CopyToCanvasPoint
   \   000003B4   02B0               ADD      SP,SP,#+8
   \   000003B6   00F0CAFE           BL       ??PaintProc_36
   2540                    break;   
   2541          
   2542                    case ProcToggleT:
   2543                        CopyToCanvasPoint((char*)ProcToggleT_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_9:
   \   000003BA   82B0               SUB      SP,SP,#+8
   \   000003BC   1320               MOVS     R0,#+19
   \   000003BE   0090               STR      R0,[SP, #+0]
   \   000003C0   1323               MOVS     R3,#+19
   \   000003C2   AD1C               ADDS     R5,R5,#+2
   \   000003C4   2A00               MOVS     R2,R5
   \   000003C6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000003C8   120E               LSRS     R2,R2,#+24
   \   000003CA   641C               ADDS     R4,R4,#+1
   \   000003CC   2100               MOVS     R1,R4
   \   000003CE   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003D0   090E               LSRS     R1,R1,#+24
   \   000003D2   4448               LDR      R0,??PaintProc_37+0x8  ;; ProcToggleT_graf
   \   000003D4   ........           BL       CopyToCanvasPoint
   \   000003D8   02B0               ADD      SP,SP,#+8
   \   000003DA   00F0B8FE           BL       ??PaintProc_36
   2544                    break;             
   2545                    
   2546                    case ProcTLI1:
   2547                        CopyToCanvasPoint((char*)ProcTLI1_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_10:
   \   000003DE   82B0               SUB      SP,SP,#+8
   \   000003E0   1320               MOVS     R0,#+19
   \   000003E2   0090               STR      R0,[SP, #+0]
   \   000003E4   1323               MOVS     R3,#+19
   \   000003E6   AD1C               ADDS     R5,R5,#+2
   \   000003E8   2A00               MOVS     R2,R5
   \   000003EA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000003EC   120E               LSRS     R2,R2,#+24
   \   000003EE   641C               ADDS     R4,R4,#+1
   \   000003F0   2100               MOVS     R1,R4
   \   000003F2   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003F4   090E               LSRS     R1,R1,#+24
   \   000003F6   3C48               LDR      R0,??PaintProc_37+0xC  ;; ProcTLI1_graf
   \   000003F8   ........           BL       CopyToCanvasPoint
   \   000003FC   02B0               ADD      SP,SP,#+8
   \   000003FE   00F0A6FE           BL       ??PaintProc_36
   2548                    break;      
   2549          
   2550                    case ProcLim:
   2551                        CopyToCanvasPoint((char*)ProcLim_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_30:
   \   00000402   82B0               SUB      SP,SP,#+8
   \   00000404   1220               MOVS     R0,#+18
   \   00000406   0090               STR      R0,[SP, #+0]
   \   00000408   1323               MOVS     R3,#+19
   \   0000040A   ED1C               ADDS     R5,R5,#+3
   \   0000040C   2A00               MOVS     R2,R5
   \   0000040E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000410   120E               LSRS     R2,R2,#+24
   \   00000412   641C               ADDS     R4,R4,#+1
   \   00000414   2100               MOVS     R1,R4
   \   00000416   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000418   090E               LSRS     R1,R1,#+24
   \   0000041A   3448               LDR      R0,??PaintProc_37+0x10  ;; ProcLim_graf
   \   0000041C   ........           BL       CopyToCanvasPoint
   \   00000420   02B0               ADD      SP,SP,#+8
   \   00000422   00F094FE           BL       ??PaintProc_36
   2552                    break;  
   2553                    
   2554                    
   2555                    case ProcEven:
   2556                        CopyToCanvasPoint((char*)ProcEven_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_31:
   \   00000426   82B0               SUB      SP,SP,#+8
   \   00000428   1220               MOVS     R0,#+18
   \   0000042A   0090               STR      R0,[SP, #+0]
   \   0000042C   1323               MOVS     R3,#+19
   \   0000042E   ED1C               ADDS     R5,R5,#+3
   \   00000430   2A00               MOVS     R2,R5
   \   00000432   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000434   120E               LSRS     R2,R2,#+24
   \   00000436   641C               ADDS     R4,R4,#+1
   \   00000438   2100               MOVS     R1,R4
   \   0000043A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000043C   090E               LSRS     R1,R1,#+24
   \   0000043E   2C48               LDR      R0,??PaintProc_37+0x14  ;; ProcEven_graf
   \   00000440   ........           BL       CopyToCanvasPoint
   \   00000444   02B0               ADD      SP,SP,#+8
   \   00000446   00F082FE           BL       ??PaintProc_36
   2557                    break;  
   2558                    
   2559          
   2560                    case ProcPlus:
   2561                        CopyToCanvasPoint((char*)ProcPlus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_32:
   \   0000044A   82B0               SUB      SP,SP,#+8
   \   0000044C   1220               MOVS     R0,#+18
   \   0000044E   0090               STR      R0,[SP, #+0]
   \   00000450   1323               MOVS     R3,#+19
   \   00000452   ED1C               ADDS     R5,R5,#+3
   \   00000454   2A00               MOVS     R2,R5
   \   00000456   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000458   120E               LSRS     R2,R2,#+24
   \   0000045A   641C               ADDS     R4,R4,#+1
   \   0000045C   2100               MOVS     R1,R4
   \   0000045E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000460   090E               LSRS     R1,R1,#+24
   \   00000462   2448               LDR      R0,??PaintProc_37+0x18  ;; ProcPlus_graf
   \   00000464   ........           BL       CopyToCanvasPoint
   \   00000468   02B0               ADD      SP,SP,#+8
   \   0000046A   00F070FE           BL       ??PaintProc_36
   2562                    break;  
   2563                    
   2564                    case ProcMinus:
   2565                        CopyToCanvasPoint((char*)ProcMinus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_33:
   \   0000046E   82B0               SUB      SP,SP,#+8
   \   00000470   1220               MOVS     R0,#+18
   \   00000472   0090               STR      R0,[SP, #+0]
   \   00000474   1323               MOVS     R3,#+19
   \   00000476   ED1C               ADDS     R5,R5,#+3
   \   00000478   2A00               MOVS     R2,R5
   \   0000047A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000047C   120E               LSRS     R2,R2,#+24
   \   0000047E   641C               ADDS     R4,R4,#+1
   \   00000480   2100               MOVS     R1,R4
   \   00000482   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000484   090E               LSRS     R1,R1,#+24
   \   00000486   1C48               LDR      R0,??PaintProc_37+0x1C  ;; ProcMinus_graf
   \   00000488   ........           BL       CopyToCanvasPoint
   \   0000048C   02B0               ADD      SP,SP,#+8
   \   0000048E   00F05EFE           BL       ??PaintProc_36
   2566                    break;  
   2567          
   2568                    case ProcMul:
   2569                        CopyToCanvasPoint((char*)ProcMul_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_34:
   \   00000492   82B0               SUB      SP,SP,#+8
   \   00000494   1220               MOVS     R0,#+18
   \   00000496   0090               STR      R0,[SP, #+0]
   \   00000498   1323               MOVS     R3,#+19
   \   0000049A   ED1C               ADDS     R5,R5,#+3
   \   0000049C   2A00               MOVS     R2,R5
   \   0000049E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000004A0   120E               LSRS     R2,R2,#+24
   \   000004A2   641C               ADDS     R4,R4,#+1
   \   000004A4   2100               MOVS     R1,R4
   \   000004A6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000004A8   090E               LSRS     R1,R1,#+24
   \   000004AA   1448               LDR      R0,??PaintProc_37+0x20  ;; ProcMul_graf
   \   000004AC   ........           BL       CopyToCanvasPoint
   \   000004B0   02B0               ADD      SP,SP,#+8
   \   000004B2   00F04CFE           BL       ??PaintProc_36
   2570                    break;  
   2571          
   2572                    case ProcDiv:
   2573                        CopyToCanvasPoint((char*)ProcDiv_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_35:
   \   000004B6   82B0               SUB      SP,SP,#+8
   \   000004B8   1220               MOVS     R0,#+18
   \   000004BA   0090               STR      R0,[SP, #+0]
   \   000004BC   1323               MOVS     R3,#+19
   \   000004BE   ED1C               ADDS     R5,R5,#+3
   \   000004C0   2A00               MOVS     R2,R5
   \   000004C2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000004C4   120E               LSRS     R2,R2,#+24
   \   000004C6   641C               ADDS     R4,R4,#+1
   \   000004C8   2100               MOVS     R1,R4
   \   000004CA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000004CC   090E               LSRS     R1,R1,#+24
   \   000004CE   0C48               LDR      R0,??PaintProc_37+0x24  ;; ProcDiv_graf
   \   000004D0   ........           BL       CopyToCanvasPoint
   \   000004D4   02B0               ADD      SP,SP,#+8
   \   000004D6   00F03AFE           BL       ??PaintProc_36
   \   000004DA   C046               Nop      
   \                     ??PaintProc_37:
   \   000004DC   ........           DC32     ProcNot_graf
   \   000004E0   ........           DC32     ProcToggleRS_graf
   \   000004E4   ........           DC32     ProcToggleT_graf
   \   000004E8   ........           DC32     ProcTLI1_graf
   \   000004EC   ........           DC32     ProcLim_graf
   \   000004F0   ........           DC32     ProcEven_graf
   \   000004F4   ........           DC32     ProcPlus_graf
   \   000004F8   ........           DC32     ProcMinus_graf
   \   000004FC   ........           DC32     ProcMul_graf
   \   00000500   ........           DC32     ProcDiv_graf
   2574                    break;  
   2575          
   2576                    
   2577                    case ProcStI:
   2578                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_11:
   \   00000504   82B0               SUB      SP,SP,#+8
   \   00000506   0820               MOVS     R0,#+8
   \   00000508   0090               STR      R0,[SP, #+0]
   \   0000050A   1323               MOVS     R3,#+19
   \   0000050C   2A00               MOVS     R2,R5
   \   0000050E   D21C               ADDS     R2,R2,#+3
   \   00000510   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000512   120E               LSRS     R2,R2,#+24
   \   00000514   2100               MOVS     R1,R4
   \   00000516   491C               ADDS     R1,R1,#+1
   \   00000518   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000051A   090E               LSRS     R1,R1,#+24
   \   0000051C   DC48               LDR      R0,??PaintProc_38  ;; ProcSt_graf
   \   0000051E   ........           BL       CopyToCanvasPoint
   \   00000522   02B0               ADD      SP,SP,#+8
   2579                        
   2580                        if (Proc->Nr>=0)
   \   00000524   0120               MOVS     R0,#+1
   \   00000526   3056               LDRSB    R0,[R6, R0]
   \   00000528   0028               CMP      R0,#+0
   \   0000052A   17D4               BMI      ??PaintProc_39
   2581                        {
   2582                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000052C   0222               MOVS     R2,#+2
   \   0000052E   6946               MOV      R1,SP
   \   00000530   0120               MOVS     R0,#+1
   \   00000532   3056               LDRSB    R0,[R6, R0]
   \   00000534   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000536   000E               LSRS     R0,R0,#+24
   \   00000538   ........           BL       CharToStr
   \   0000053C   0700               MOVS     R7,R0
   2583                          txt[ind]='.';
   \   0000053E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000540   3F0E               LSRS     R7,R7,#+24
   \   00000542   6846               MOV      R0,SP
   \   00000544   2E21               MOVS     R1,#+46
   \   00000546   C155               STRB     R1,[R0, R7]
   2584                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000548   0222               MOVS     R2,#+2
   \   0000054A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000054C   3F0E               LSRS     R7,R7,#+24
   \   0000054E   6846               MOV      R0,SP
   \   00000550   C119               ADDS     R1,R0,R7
   \   00000552   491C               ADDS     R1,R1,#+1
   \   00000554   307A               LDRB     R0,[R6, #+8]
   \   00000556   ........           BL       CharToStr
   \   0000055A   08E0               B        ??PaintProc_40
   2585                        }else{
   2586                          txt[0]='b';
   \                     ??PaintProc_39:
   \   0000055C   6846               MOV      R0,SP
   \   0000055E   6221               MOVS     R1,#+98
   \   00000560   0170               STRB     R1,[R0, #+0]
   2587                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000562   0222               MOVS     R2,#+2
   \   00000564   6946               MOV      R1,SP
   \   00000566   491C               ADDS     R1,R1,#+1
   \   00000568   307A               LDRB     R0,[R6, #+8]
   \   0000056A   ........           BL       CharToStr
   2588                        }     
   2589                        
   2590                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_40:
   \   0000056E   82B0               SUB      SP,SP,#+8
   \   00000570   0020               MOVS     R0,#+0
   \   00000572   0090               STR      R0,[SP, #+0]
   \   00000574   7821               MOVS     R1,#+120
   \   00000576   0020               MOVS     R0,#+0
   \   00000578   03B4               PUSH     {R0,R1}
   \   0000057A   0C21               MOVS     R1,#+12
   \   0000057C   0520               MOVS     R0,#+5
   \   0000057E   03B4               PUSH     {R0,R1}
   \   00000580   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000582   2D0E               LSRS     R5,R5,#+24
   \   00000584   2B00               MOVS     R3,R5
   \   00000586   0B33               ADDS     R3,R3,#+11
   \   00000588   2200               MOVS     R2,R4
   \   0000058A   121D               ADDS     R2,R2,#+4
   \   0000058C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000058E   120E               LSRS     R2,R2,#+24
   \   00000590   0221               MOVS     R1,#+2
   \   00000592   06A8               ADD      R0,SP,#+24
   \   00000594   ........           BL       Label
   \   00000598   06B0               ADD      SP,SP,#+24
   2591                        txt[0]='I'; txt[1]=0;
   \   0000059A   6846               MOV      R0,SP
   \   0000059C   4921               MOVS     R1,#+73
   \   0000059E   0170               STRB     R1,[R0, #+0]
   \   000005A0   6846               MOV      R0,SP
   \   000005A2   0021               MOVS     R1,#+0
   \   000005A4   4170               STRB     R1,[R0, #+1]
   2592                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000005A6   82B0               SUB      SP,SP,#+8
   \   000005A8   0020               MOVS     R0,#+0
   \   000005AA   0090               STR      R0,[SP, #+0]
   \   000005AC   7821               MOVS     R1,#+120
   \   000005AE   0020               MOVS     R0,#+0
   \   000005B0   03B4               PUSH     {R0,R1}
   \   000005B2   0621               MOVS     R1,#+6
   \   000005B4   0120               MOVS     R0,#+1
   \   000005B6   03B4               PUSH     {R0,R1}
   \   000005B8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000005BA   2D0E               LSRS     R5,R5,#+24
   \   000005BC   AD1C               ADDS     R5,R5,#+2
   \   000005BE   2B00               MOVS     R3,R5
   \   000005C0   A41D               ADDS     R4,R4,#+6
   \   000005C2   2200               MOVS     R2,R4
   \   000005C4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000005C6   120E               LSRS     R2,R2,#+24
   \   000005C8   0221               MOVS     R1,#+2
   \   000005CA   06A8               ADD      R0,SP,#+24
   \   000005CC   ........           BL       Label
   \   000005D0   06B0               ADD      SP,SP,#+24
   \   000005D2   00F0BCFD           BL       ??PaintProc_36
   2593                    break;
   2594          
   2595                    case ProcStNI:
   2596                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_12:
   \   000005D6   82B0               SUB      SP,SP,#+8
   \   000005D8   0820               MOVS     R0,#+8
   \   000005DA   0090               STR      R0,[SP, #+0]
   \   000005DC   1323               MOVS     R3,#+19
   \   000005DE   2A00               MOVS     R2,R5
   \   000005E0   D21C               ADDS     R2,R2,#+3
   \   000005E2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000005E4   120E               LSRS     R2,R2,#+24
   \   000005E6   2100               MOVS     R1,R4
   \   000005E8   491C               ADDS     R1,R1,#+1
   \   000005EA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000005EC   090E               LSRS     R1,R1,#+24
   \   000005EE   A848               LDR      R0,??PaintProc_38  ;; ProcSt_graf
   \   000005F0   ........           BL       CopyToCanvasPoint
   \   000005F4   02B0               ADD      SP,SP,#+8
   2597                        H_line(x+7,y+11,6,1);
   \   000005F6   0123               MOVS     R3,#+1
   \   000005F8   0622               MOVS     R2,#+6
   \   000005FA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000005FC   2D0E               LSRS     R5,R5,#+24
   \   000005FE   2900               MOVS     R1,R5
   \   00000600   0B31               ADDS     R1,R1,#+11
   \   00000602   2000               MOVS     R0,R4
   \   00000604   C01D               ADDS     R0,R0,#+7
   \   00000606   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000608   000E               LSRS     R0,R0,#+24
   \   0000060A   ........           BL       H_line
   2598                        
   2599                        if (Proc->Nr>=0)
   \   0000060E   0120               MOVS     R0,#+1
   \   00000610   3056               LDRSB    R0,[R6, R0]
   \   00000612   0028               CMP      R0,#+0
   \   00000614   17D4               BMI      ??PaintProc_41
   2600                        {
   2601                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000616   0222               MOVS     R2,#+2
   \   00000618   6946               MOV      R1,SP
   \   0000061A   0120               MOVS     R0,#+1
   \   0000061C   3056               LDRSB    R0,[R6, R0]
   \   0000061E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000620   000E               LSRS     R0,R0,#+24
   \   00000622   ........           BL       CharToStr
   \   00000626   0700               MOVS     R7,R0
   2602                          txt[ind]='.';
   \   00000628   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000062A   3F0E               LSRS     R7,R7,#+24
   \   0000062C   6846               MOV      R0,SP
   \   0000062E   2E21               MOVS     R1,#+46
   \   00000630   C155               STRB     R1,[R0, R7]
   2603                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000632   0222               MOVS     R2,#+2
   \   00000634   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000636   3F0E               LSRS     R7,R7,#+24
   \   00000638   6846               MOV      R0,SP
   \   0000063A   C119               ADDS     R1,R0,R7
   \   0000063C   491C               ADDS     R1,R1,#+1
   \   0000063E   307A               LDRB     R0,[R6, #+8]
   \   00000640   ........           BL       CharToStr
   \   00000644   08E0               B        ??PaintProc_42
   2604                        }else{
   2605                          txt[0]='b';
   \                     ??PaintProc_41:
   \   00000646   6846               MOV      R0,SP
   \   00000648   6221               MOVS     R1,#+98
   \   0000064A   0170               STRB     R1,[R0, #+0]
   2606                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000064C   0222               MOVS     R2,#+2
   \   0000064E   6946               MOV      R1,SP
   \   00000650   491C               ADDS     R1,R1,#+1
   \   00000652   307A               LDRB     R0,[R6, #+8]
   \   00000654   ........           BL       CharToStr
   2607                        }   
   2608                        Label(txt,2,x+4,y+12,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_42:
   \   00000658   82B0               SUB      SP,SP,#+8
   \   0000065A   0020               MOVS     R0,#+0
   \   0000065C   0090               STR      R0,[SP, #+0]
   \   0000065E   7821               MOVS     R1,#+120
   \   00000660   0020               MOVS     R0,#+0
   \   00000662   03B4               PUSH     {R0,R1}
   \   00000664   0C21               MOVS     R1,#+12
   \   00000666   0520               MOVS     R0,#+5
   \   00000668   03B4               PUSH     {R0,R1}
   \   0000066A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000066C   2D0E               LSRS     R5,R5,#+24
   \   0000066E   2B00               MOVS     R3,R5
   \   00000670   0C33               ADDS     R3,R3,#+12
   \   00000672   2200               MOVS     R2,R4
   \   00000674   121D               ADDS     R2,R2,#+4
   \   00000676   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000678   120E               LSRS     R2,R2,#+24
   \   0000067A   0221               MOVS     R1,#+2
   \   0000067C   06A8               ADD      R0,SP,#+24
   \   0000067E   ........           BL       Label
   \   00000682   06B0               ADD      SP,SP,#+24
   2609                        txt[0]='I'; txt[1]=0;
   \   00000684   6846               MOV      R0,SP
   \   00000686   4921               MOVS     R1,#+73
   \   00000688   0170               STRB     R1,[R0, #+0]
   \   0000068A   6846               MOV      R0,SP
   \   0000068C   0021               MOVS     R1,#+0
   \   0000068E   4170               STRB     R1,[R0, #+1]
   2610                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000690   82B0               SUB      SP,SP,#+8
   \   00000692   0020               MOVS     R0,#+0
   \   00000694   0090               STR      R0,[SP, #+0]
   \   00000696   7821               MOVS     R1,#+120
   \   00000698   0020               MOVS     R0,#+0
   \   0000069A   03B4               PUSH     {R0,R1}
   \   0000069C   0621               MOVS     R1,#+6
   \   0000069E   0120               MOVS     R0,#+1
   \   000006A0   03B4               PUSH     {R0,R1}
   \   000006A2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000006A4   2D0E               LSRS     R5,R5,#+24
   \   000006A6   AD1C               ADDS     R5,R5,#+2
   \   000006A8   2B00               MOVS     R3,R5
   \   000006AA   A41D               ADDS     R4,R4,#+6
   \   000006AC   2200               MOVS     R2,R4
   \   000006AE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000006B0   120E               LSRS     R2,R2,#+24
   \   000006B2   0221               MOVS     R1,#+2
   \   000006B4   06A8               ADD      R0,SP,#+24
   \   000006B6   ........           BL       Label
   \   000006BA   06B0               ADD      SP,SP,#+24
   \   000006BC   00F047FD           BL       ??PaintProc_36
   2611                    break;
   2612                    
   2613                    
   2614                    case ProcStQ:
   2615                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_13:
   \   000006C0   82B0               SUB      SP,SP,#+8
   \   000006C2   0820               MOVS     R0,#+8
   \   000006C4   0090               STR      R0,[SP, #+0]
   \   000006C6   1323               MOVS     R3,#+19
   \   000006C8   2A00               MOVS     R2,R5
   \   000006CA   D21C               ADDS     R2,R2,#+3
   \   000006CC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000006CE   120E               LSRS     R2,R2,#+24
   \   000006D0   2100               MOVS     R1,R4
   \   000006D2   491C               ADDS     R1,R1,#+1
   \   000006D4   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000006D6   090E               LSRS     R1,R1,#+24
   \   000006D8   6D48               LDR      R0,??PaintProc_38  ;; ProcSt_graf
   \   000006DA   ........           BL       CopyToCanvasPoint
   \   000006DE   02B0               ADD      SP,SP,#+8
   2616                        if (Proc->Nr>=0)
   \   000006E0   0120               MOVS     R0,#+1
   \   000006E2   3056               LDRSB    R0,[R6, R0]
   \   000006E4   0028               CMP      R0,#+0
   \   000006E6   17D4               BMI      ??PaintProc_43
   2617                        {
   2618                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000006E8   0222               MOVS     R2,#+2
   \   000006EA   6946               MOV      R1,SP
   \   000006EC   0120               MOVS     R0,#+1
   \   000006EE   3056               LDRSB    R0,[R6, R0]
   \   000006F0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006F2   000E               LSRS     R0,R0,#+24
   \   000006F4   ........           BL       CharToStr
   \   000006F8   0700               MOVS     R7,R0
   2619                          txt[ind]='.';
   \   000006FA   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000006FC   3F0E               LSRS     R7,R7,#+24
   \   000006FE   6846               MOV      R0,SP
   \   00000700   2E21               MOVS     R1,#+46
   \   00000702   C155               STRB     R1,[R0, R7]
   2620                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000704   0222               MOVS     R2,#+2
   \   00000706   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000708   3F0E               LSRS     R7,R7,#+24
   \   0000070A   6846               MOV      R0,SP
   \   0000070C   C119               ADDS     R1,R0,R7
   \   0000070E   491C               ADDS     R1,R1,#+1
   \   00000710   307A               LDRB     R0,[R6, #+8]
   \   00000712   ........           BL       CharToStr
   \   00000716   08E0               B        ??PaintProc_44
   2621                        }else{
   2622                          txt[0]='b';
   \                     ??PaintProc_43:
   \   00000718   6846               MOV      R0,SP
   \   0000071A   6221               MOVS     R1,#+98
   \   0000071C   0170               STRB     R1,[R0, #+0]
   2623                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000071E   0222               MOVS     R2,#+2
   \   00000720   6946               MOV      R1,SP
   \   00000722   491C               ADDS     R1,R1,#+1
   \   00000724   307A               LDRB     R0,[R6, #+8]
   \   00000726   ........           BL       CharToStr
   2624                        } 
   2625                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_44:
   \   0000072A   82B0               SUB      SP,SP,#+8
   \   0000072C   0020               MOVS     R0,#+0
   \   0000072E   0090               STR      R0,[SP, #+0]
   \   00000730   7821               MOVS     R1,#+120
   \   00000732   0020               MOVS     R0,#+0
   \   00000734   03B4               PUSH     {R0,R1}
   \   00000736   0C21               MOVS     R1,#+12
   \   00000738   0520               MOVS     R0,#+5
   \   0000073A   03B4               PUSH     {R0,R1}
   \   0000073C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000073E   2D0E               LSRS     R5,R5,#+24
   \   00000740   2B00               MOVS     R3,R5
   \   00000742   0B33               ADDS     R3,R3,#+11
   \   00000744   2200               MOVS     R2,R4
   \   00000746   121D               ADDS     R2,R2,#+4
   \   00000748   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000074A   120E               LSRS     R2,R2,#+24
   \   0000074C   0221               MOVS     R1,#+2
   \   0000074E   06A8               ADD      R0,SP,#+24
   \   00000750   ........           BL       Label
   \   00000754   06B0               ADD      SP,SP,#+24
   2626                        txt[0]='Q'; txt[1]=0;
   \   00000756   6846               MOV      R0,SP
   \   00000758   5121               MOVS     R1,#+81
   \   0000075A   0170               STRB     R1,[R0, #+0]
   \   0000075C   6846               MOV      R0,SP
   \   0000075E   0021               MOVS     R1,#+0
   \   00000760   4170               STRB     R1,[R0, #+1]
   2627                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000762   82B0               SUB      SP,SP,#+8
   \   00000764   0020               MOVS     R0,#+0
   \   00000766   0090               STR      R0,[SP, #+0]
   \   00000768   7821               MOVS     R1,#+120
   \   0000076A   0020               MOVS     R0,#+0
   \   0000076C   03B4               PUSH     {R0,R1}
   \   0000076E   0621               MOVS     R1,#+6
   \   00000770   0120               MOVS     R0,#+1
   \   00000772   03B4               PUSH     {R0,R1}
   \   00000774   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000776   2D0E               LSRS     R5,R5,#+24
   \   00000778   AD1C               ADDS     R5,R5,#+2
   \   0000077A   2B00               MOVS     R3,R5
   \   0000077C   E41D               ADDS     R4,R4,#+7
   \   0000077E   2200               MOVS     R2,R4
   \   00000780   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000782   120E               LSRS     R2,R2,#+24
   \   00000784   0221               MOVS     R1,#+2
   \   00000786   06A8               ADD      R0,SP,#+24
   \   00000788   ........           BL       Label
   \   0000078C   06B0               ADD      SP,SP,#+24
   \   0000078E   00F0DEFC           BL       ??PaintProc_36
   2628                    break;
   2629          
   2630                    case ProcStS:
   2631                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_15:
   \   00000792   82B0               SUB      SP,SP,#+8
   \   00000794   0820               MOVS     R0,#+8
   \   00000796   0090               STR      R0,[SP, #+0]
   \   00000798   1323               MOVS     R3,#+19
   \   0000079A   2A00               MOVS     R2,R5
   \   0000079C   D21C               ADDS     R2,R2,#+3
   \   0000079E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000007A0   120E               LSRS     R2,R2,#+24
   \   000007A2   2100               MOVS     R1,R4
   \   000007A4   491C               ADDS     R1,R1,#+1
   \   000007A6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000007A8   090E               LSRS     R1,R1,#+24
   \   000007AA   3948               LDR      R0,??PaintProc_38  ;; ProcSt_graf
   \   000007AC   ........           BL       CopyToCanvasPoint
   \   000007B0   02B0               ADD      SP,SP,#+8
   2632                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000007B2   0222               MOVS     R2,#+2
   \   000007B4   6946               MOV      R1,SP
   \   000007B6   0120               MOVS     R0,#+1
   \   000007B8   3056               LDRSB    R0,[R6, R0]
   \   000007BA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000007BC   000E               LSRS     R0,R0,#+24
   \   000007BE   ........           BL       CharToStr
   \   000007C2   0700               MOVS     R7,R0
   2633          
   2634                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000007C4   82B0               SUB      SP,SP,#+8
   \   000007C6   0020               MOVS     R0,#+0
   \   000007C8   0090               STR      R0,[SP, #+0]
   \   000007CA   7821               MOVS     R1,#+120
   \   000007CC   0020               MOVS     R0,#+0
   \   000007CE   03B4               PUSH     {R0,R1}
   \   000007D0   0C21               MOVS     R1,#+12
   \   000007D2   0220               MOVS     R0,#+2
   \   000007D4   03B4               PUSH     {R0,R1}
   \   000007D6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000007D8   2D0E               LSRS     R5,R5,#+24
   \   000007DA   2B00               MOVS     R3,R5
   \   000007DC   0B33               ADDS     R3,R3,#+11
   \   000007DE   2200               MOVS     R2,R4
   \   000007E0   121D               ADDS     R2,R2,#+4
   \   000007E2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000007E4   120E               LSRS     R2,R2,#+24
   \   000007E6   0221               MOVS     R1,#+2
   \   000007E8   06A8               ADD      R0,SP,#+24
   \   000007EA   ........           BL       Label
   \   000007EE   06B0               ADD      SP,SP,#+24
   2635                        txt[0]='S'; txt[1]=0;
   \   000007F0   6846               MOV      R0,SP
   \   000007F2   5321               MOVS     R1,#+83
   \   000007F4   0170               STRB     R1,[R0, #+0]
   \   000007F6   6846               MOV      R0,SP
   \   000007F8   0021               MOVS     R1,#+0
   \   000007FA   4170               STRB     R1,[R0, #+1]
   2636                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000007FC   82B0               SUB      SP,SP,#+8
   \   000007FE   0020               MOVS     R0,#+0
   \   00000800   0090               STR      R0,[SP, #+0]
   \   00000802   7821               MOVS     R1,#+120
   \   00000804   0020               MOVS     R0,#+0
   \   00000806   03B4               PUSH     {R0,R1}
   \   00000808   0621               MOVS     R1,#+6
   \   0000080A   0120               MOVS     R0,#+1
   \   0000080C   03B4               PUSH     {R0,R1}
   \   0000080E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000810   2D0E               LSRS     R5,R5,#+24
   \   00000812   AD1C               ADDS     R5,R5,#+2
   \   00000814   2B00               MOVS     R3,R5
   \   00000816   E41D               ADDS     R4,R4,#+7
   \   00000818   2200               MOVS     R2,R4
   \   0000081A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000081C   120E               LSRS     R2,R2,#+24
   \   0000081E   0221               MOVS     R1,#+2
   \   00000820   06A8               ADD      R0,SP,#+24
   \   00000822   ........           BL       Label
   \   00000826   06B0               ADD      SP,SP,#+24
   \   00000828   00F091FC           BL       ??PaintProc_36
   2637                    break;      
   2638                    
   2639                    
   2640                    case ProcStB:
   2641                        CopyToCanvasPoint((char*)ProcSt_Button, x+1, y+6, 19,6);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_14:
   \   0000082C   82B0               SUB      SP,SP,#+8
   \   0000082E   0620               MOVS     R0,#+6
   \   00000830   0090               STR      R0,[SP, #+0]
   \   00000832   1323               MOVS     R3,#+19
   \   00000834   2A00               MOVS     R2,R5
   \   00000836   921D               ADDS     R2,R2,#+6
   \   00000838   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000083A   120E               LSRS     R2,R2,#+24
   \   0000083C   2100               MOVS     R1,R4
   \   0000083E   491C               ADDS     R1,R1,#+1
   \   00000840   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000842   090E               LSRS     R1,R1,#+24
   \   00000844   1348               LDR      R0,??PaintProc_38+0x4  ;; ProcSt_Button
   \   00000846   ........           BL       CopyToCanvasPoint
   \   0000084A   02B0               ADD      SP,SP,#+8
   2642                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000084C   0222               MOVS     R2,#+2
   \   0000084E   6946               MOV      R1,SP
   \   00000850   0120               MOVS     R0,#+1
   \   00000852   3056               LDRSB    R0,[R6, R0]
   \   00000854   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000856   000E               LSRS     R0,R0,#+24
   \   00000858   ........           BL       CharToStr
   \   0000085C   0700               MOVS     R7,R0
   2643          
   2644                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000085E   82B0               SUB      SP,SP,#+8
   \   00000860   0020               MOVS     R0,#+0
   \   00000862   0090               STR      R0,[SP, #+0]
   \   00000864   7821               MOVS     R1,#+120
   \   00000866   0020               MOVS     R0,#+0
   \   00000868   03B4               PUSH     {R0,R1}
   \   0000086A   0C21               MOVS     R1,#+12
   \   0000086C   0220               MOVS     R0,#+2
   \   0000086E   03B4               PUSH     {R0,R1}
   \   00000870   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000872   2D0E               LSRS     R5,R5,#+24
   \   00000874   0B35               ADDS     R5,R5,#+11
   \   00000876   2B00               MOVS     R3,R5
   \   00000878   241D               ADDS     R4,R4,#+4
   \   0000087A   2200               MOVS     R2,R4
   \   0000087C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000087E   120E               LSRS     R2,R2,#+24
   \   00000880   0221               MOVS     R1,#+2
   \   00000882   06A8               ADD      R0,SP,#+24
   \   00000884   ........           BL       Label
   \   00000888   06B0               ADD      SP,SP,#+24
   \   0000088A   00F060FC           BL       ??PaintProc_36
   \   0000088E   C046               Nop      
   \                     ??PaintProc_38:
   \   00000890   ........           DC32     ProcSt_graf
   \   00000894   ........           DC32     ProcSt_Button
   2645                    break;   
   2646                    
   2647                    
   2648          
   2649                    
   2650                    case ProcWOUT:
   2651                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_16:
   \   00000898   82B0               SUB      SP,SP,#+8
   \   0000089A   0920               MOVS     R0,#+9
   \   0000089C   0090               STR      R0,[SP, #+0]
   \   0000089E   1323               MOVS     R3,#+19
   \   000008A0   2A00               MOVS     R2,R5
   \   000008A2   D21C               ADDS     R2,R2,#+3
   \   000008A4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000008A6   120E               LSRS     R2,R2,#+24
   \   000008A8   2100               MOVS     R1,R4
   \   000008AA   491C               ADDS     R1,R1,#+1
   \   000008AC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000008AE   090E               LSRS     R1,R1,#+24
   \   000008B0   CD48               LDR      R0,??PaintProc_45  ;; ProcSet_graf
   \   000008B2   ........           BL       CopyToCanvasPoint
   \   000008B6   02B0               ADD      SP,SP,#+8
   2652                        if (Proc->Nr>=0)
   \   000008B8   0120               MOVS     R0,#+1
   \   000008BA   3056               LDRSB    R0,[R6, R0]
   \   000008BC   0028               CMP      R0,#+0
   \   000008BE   17D4               BMI      ??PaintProc_46
   2653                        {
   2654                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008C0   0222               MOVS     R2,#+2
   \   000008C2   6946               MOV      R1,SP
   \   000008C4   0120               MOVS     R0,#+1
   \   000008C6   3056               LDRSB    R0,[R6, R0]
   \   000008C8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000008CA   000E               LSRS     R0,R0,#+24
   \   000008CC   ........           BL       CharToStr
   \   000008D0   0700               MOVS     R7,R0
   2655                          txt[ind]='.';
   \   000008D2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000008D4   3F0E               LSRS     R7,R7,#+24
   \   000008D6   6846               MOV      R0,SP
   \   000008D8   2E21               MOVS     R1,#+46
   \   000008DA   C155               STRB     R1,[R0, R7]
   2656                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000008DC   0222               MOVS     R2,#+2
   \   000008DE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000008E0   3F0E               LSRS     R7,R7,#+24
   \   000008E2   6846               MOV      R0,SP
   \   000008E4   C119               ADDS     R1,R0,R7
   \   000008E6   491C               ADDS     R1,R1,#+1
   \   000008E8   307A               LDRB     R0,[R6, #+8]
   \   000008EA   ........           BL       CharToStr
   \   000008EE   08E0               B        ??PaintProc_47
   2657                        }else{
   2658                          txt[0]='b';
   \                     ??PaintProc_46:
   \   000008F0   6846               MOV      R0,SP
   \   000008F2   6221               MOVS     R1,#+98
   \   000008F4   0170               STRB     R1,[R0, #+0]
   2659                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   000008F6   0222               MOVS     R2,#+2
   \   000008F8   6946               MOV      R1,SP
   \   000008FA   491C               ADDS     R1,R1,#+1
   \   000008FC   307A               LDRB     R0,[R6, #+8]
   \   000008FE   ........           BL       CharToStr
   2660                        } 
   2661                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_47:
   \   00000902   82B0               SUB      SP,SP,#+8
   \   00000904   0020               MOVS     R0,#+0
   \   00000906   0090               STR      R0,[SP, #+0]
   \   00000908   7821               MOVS     R1,#+120
   \   0000090A   0020               MOVS     R0,#+0
   \   0000090C   03B4               PUSH     {R0,R1}
   \   0000090E   0C21               MOVS     R1,#+12
   \   00000910   0520               MOVS     R0,#+5
   \   00000912   03B4               PUSH     {R0,R1}
   \   00000914   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000916   2D0E               LSRS     R5,R5,#+24
   \   00000918   2B00               MOVS     R3,R5
   \   0000091A   0B33               ADDS     R3,R3,#+11
   \   0000091C   2200               MOVS     R2,R4
   \   0000091E   121D               ADDS     R2,R2,#+4
   \   00000920   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000922   120E               LSRS     R2,R2,#+24
   \   00000924   0221               MOVS     R1,#+2
   \   00000926   06A8               ADD      R0,SP,#+24
   \   00000928   ........           BL       Label
   \   0000092C   06B0               ADD      SP,SP,#+24
   2662                        txt[0]='Q'; txt[1]=0;
   \   0000092E   6846               MOV      R0,SP
   \   00000930   5121               MOVS     R1,#+81
   \   00000932   0170               STRB     R1,[R0, #+0]
   \   00000934   6846               MOV      R0,SP
   \   00000936   0021               MOVS     R1,#+0
   \   00000938   4170               STRB     R1,[R0, #+1]
   2663                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000093A   82B0               SUB      SP,SP,#+8
   \   0000093C   0020               MOVS     R0,#+0
   \   0000093E   0090               STR      R0,[SP, #+0]
   \   00000940   7821               MOVS     R1,#+120
   \   00000942   0020               MOVS     R0,#+0
   \   00000944   03B4               PUSH     {R0,R1}
   \   00000946   0621               MOVS     R1,#+6
   \   00000948   0120               MOVS     R0,#+1
   \   0000094A   03B4               PUSH     {R0,R1}
   \   0000094C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000094E   2D0E               LSRS     R5,R5,#+24
   \   00000950   AD1C               ADDS     R5,R5,#+2
   \   00000952   2B00               MOVS     R3,R5
   \   00000954   0834               ADDS     R4,R4,#+8
   \   00000956   2200               MOVS     R2,R4
   \   00000958   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000095A   120E               LSRS     R2,R2,#+24
   \   0000095C   0221               MOVS     R1,#+2
   \   0000095E   06A8               ADD      R0,SP,#+24
   \   00000960   ........           BL       Label
   \   00000964   06B0               ADD      SP,SP,#+24
   \   00000966   F2E3               B        ??PaintProc_36
   2664                    break;
   2665                    
   2666                    
   2667                    
   2668                    case ProcWOUTS:
   2669                        CopyToCanvasPoint((char*)ProcWOUTS_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_17:
   \   00000968   82B0               SUB      SP,SP,#+8
   \   0000096A   0920               MOVS     R0,#+9
   \   0000096C   0090               STR      R0,[SP, #+0]
   \   0000096E   1323               MOVS     R3,#+19
   \   00000970   2A00               MOVS     R2,R5
   \   00000972   D21C               ADDS     R2,R2,#+3
   \   00000974   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000976   120E               LSRS     R2,R2,#+24
   \   00000978   2100               MOVS     R1,R4
   \   0000097A   491C               ADDS     R1,R1,#+1
   \   0000097C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000097E   090E               LSRS     R1,R1,#+24
   \   00000980   9A48               LDR      R0,??PaintProc_45+0x4  ;; ProcWOUTS_graf
   \   00000982   ........           BL       CopyToCanvasPoint
   \   00000986   02B0               ADD      SP,SP,#+8
   2670                        if (Proc->Nr>=0)
   \   00000988   0120               MOVS     R0,#+1
   \   0000098A   3056               LDRSB    R0,[R6, R0]
   \   0000098C   0028               CMP      R0,#+0
   \   0000098E   17D4               BMI      ??PaintProc_48
   2671                        {
   2672                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000990   0222               MOVS     R2,#+2
   \   00000992   6946               MOV      R1,SP
   \   00000994   0120               MOVS     R0,#+1
   \   00000996   3056               LDRSB    R0,[R6, R0]
   \   00000998   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000099A   000E               LSRS     R0,R0,#+24
   \   0000099C   ........           BL       CharToStr
   \   000009A0   0700               MOVS     R7,R0
   2673                          txt[ind]='.';
   \   000009A2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000009A4   3F0E               LSRS     R7,R7,#+24
   \   000009A6   6846               MOV      R0,SP
   \   000009A8   2E21               MOVS     R1,#+46
   \   000009AA   C155               STRB     R1,[R0, R7]
   2674                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000009AC   0222               MOVS     R2,#+2
   \   000009AE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000009B0   3F0E               LSRS     R7,R7,#+24
   \   000009B2   6846               MOV      R0,SP
   \   000009B4   C119               ADDS     R1,R0,R7
   \   000009B6   491C               ADDS     R1,R1,#+1
   \   000009B8   307A               LDRB     R0,[R6, #+8]
   \   000009BA   ........           BL       CharToStr
   \   000009BE   08E0               B        ??PaintProc_49
   2675                        }else{
   2676                          txt[0]='b';
   \                     ??PaintProc_48:
   \   000009C0   6846               MOV      R0,SP
   \   000009C2   6221               MOVS     R1,#+98
   \   000009C4   0170               STRB     R1,[R0, #+0]
   2677                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   000009C6   0222               MOVS     R2,#+2
   \   000009C8   6946               MOV      R1,SP
   \   000009CA   491C               ADDS     R1,R1,#+1
   \   000009CC   307A               LDRB     R0,[R6, #+8]
   \   000009CE   ........           BL       CharToStr
   2678                        } 
   2679                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_49:
   \   000009D2   82B0               SUB      SP,SP,#+8
   \   000009D4   0020               MOVS     R0,#+0
   \   000009D6   0090               STR      R0,[SP, #+0]
   \   000009D8   7821               MOVS     R1,#+120
   \   000009DA   0020               MOVS     R0,#+0
   \   000009DC   03B4               PUSH     {R0,R1}
   \   000009DE   0C21               MOVS     R1,#+12
   \   000009E0   0520               MOVS     R0,#+5
   \   000009E2   03B4               PUSH     {R0,R1}
   \   000009E4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000009E6   2D0E               LSRS     R5,R5,#+24
   \   000009E8   0B35               ADDS     R5,R5,#+11
   \   000009EA   2B00               MOVS     R3,R5
   \   000009EC   241D               ADDS     R4,R4,#+4
   \   000009EE   2200               MOVS     R2,R4
   \   000009F0   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000009F2   120E               LSRS     R2,R2,#+24
   \   000009F4   0221               MOVS     R1,#+2
   \   000009F6   06A8               ADD      R0,SP,#+24
   \   000009F8   ........           BL       Label
   \   000009FC   06B0               ADD      SP,SP,#+24
   \   000009FE   A6E3               B        ??PaintProc_36
   2680                        //txt[0]='Q'; txt[1]=0;
   2681                        //Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2682                    break;
   2683                    
   2684                    case ProcWOUTR:
   2685                        CopyToCanvasPoint((char*)ProcWOUTR_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_18:
   \   00000A00   82B0               SUB      SP,SP,#+8
   \   00000A02   0920               MOVS     R0,#+9
   \   00000A04   0090               STR      R0,[SP, #+0]
   \   00000A06   1323               MOVS     R3,#+19
   \   00000A08   2A00               MOVS     R2,R5
   \   00000A0A   D21C               ADDS     R2,R2,#+3
   \   00000A0C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000A0E   120E               LSRS     R2,R2,#+24
   \   00000A10   2100               MOVS     R1,R4
   \   00000A12   491C               ADDS     R1,R1,#+1
   \   00000A14   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000A16   090E               LSRS     R1,R1,#+24
   \   00000A18   7548               LDR      R0,??PaintProc_45+0x8  ;; ProcWOUTR_graf
   \   00000A1A   ........           BL       CopyToCanvasPoint
   \   00000A1E   02B0               ADD      SP,SP,#+8
   2686                        if (Proc->Nr>=0)
   \   00000A20   0120               MOVS     R0,#+1
   \   00000A22   3056               LDRSB    R0,[R6, R0]
   \   00000A24   0028               CMP      R0,#+0
   \   00000A26   17D4               BMI      ??PaintProc_50
   2687                        {
   2688                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000A28   0222               MOVS     R2,#+2
   \   00000A2A   6946               MOV      R1,SP
   \   00000A2C   0120               MOVS     R0,#+1
   \   00000A2E   3056               LDRSB    R0,[R6, R0]
   \   00000A30   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000A32   000E               LSRS     R0,R0,#+24
   \   00000A34   ........           BL       CharToStr
   \   00000A38   0700               MOVS     R7,R0
   2689                          txt[ind]='.';
   \   00000A3A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000A3C   3F0E               LSRS     R7,R7,#+24
   \   00000A3E   6846               MOV      R0,SP
   \   00000A40   2E21               MOVS     R1,#+46
   \   00000A42   C155               STRB     R1,[R0, R7]
   2690                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000A44   0222               MOVS     R2,#+2
   \   00000A46   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000A48   3F0E               LSRS     R7,R7,#+24
   \   00000A4A   6846               MOV      R0,SP
   \   00000A4C   C119               ADDS     R1,R0,R7
   \   00000A4E   491C               ADDS     R1,R1,#+1
   \   00000A50   307A               LDRB     R0,[R6, #+8]
   \   00000A52   ........           BL       CharToStr
   \   00000A56   08E0               B        ??PaintProc_51
   2691                        }else{
   2692                          txt[0]='b';
   \                     ??PaintProc_50:
   \   00000A58   6846               MOV      R0,SP
   \   00000A5A   6221               MOVS     R1,#+98
   \   00000A5C   0170               STRB     R1,[R0, #+0]
   2693                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000A5E   0222               MOVS     R2,#+2
   \   00000A60   6946               MOV      R1,SP
   \   00000A62   491C               ADDS     R1,R1,#+1
   \   00000A64   307A               LDRB     R0,[R6, #+8]
   \   00000A66   ........           BL       CharToStr
   2694                        } 
   2695                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_51:
   \   00000A6A   82B0               SUB      SP,SP,#+8
   \   00000A6C   0020               MOVS     R0,#+0
   \   00000A6E   0090               STR      R0,[SP, #+0]
   \   00000A70   7821               MOVS     R1,#+120
   \   00000A72   0020               MOVS     R0,#+0
   \   00000A74   03B4               PUSH     {R0,R1}
   \   00000A76   0C21               MOVS     R1,#+12
   \   00000A78   0520               MOVS     R0,#+5
   \   00000A7A   03B4               PUSH     {R0,R1}
   \   00000A7C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000A7E   2D0E               LSRS     R5,R5,#+24
   \   00000A80   0B35               ADDS     R5,R5,#+11
   \   00000A82   2B00               MOVS     R3,R5
   \   00000A84   241D               ADDS     R4,R4,#+4
   \   00000A86   2200               MOVS     R2,R4
   \   00000A88   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000A8A   120E               LSRS     R2,R2,#+24
   \   00000A8C   0221               MOVS     R1,#+2
   \   00000A8E   06A8               ADD      R0,SP,#+24
   \   00000A90   ........           BL       Label
   \   00000A94   06B0               ADD      SP,SP,#+24
   \   00000A96   5AE3               B        ??PaintProc_36
   2696                    break;  
   2697                    
   2698                    
   2699                    case ProcWOUTC:
   2700                        CopyToCanvasPoint((char*)ProcWOUTC_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_19:
   \   00000A98   82B0               SUB      SP,SP,#+8
   \   00000A9A   0920               MOVS     R0,#+9
   \   00000A9C   0090               STR      R0,[SP, #+0]
   \   00000A9E   1323               MOVS     R3,#+19
   \   00000AA0   2A00               MOVS     R2,R5
   \   00000AA2   D21C               ADDS     R2,R2,#+3
   \   00000AA4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000AA6   120E               LSRS     R2,R2,#+24
   \   00000AA8   2100               MOVS     R1,R4
   \   00000AAA   491C               ADDS     R1,R1,#+1
   \   00000AAC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000AAE   090E               LSRS     R1,R1,#+24
   \   00000AB0   5048               LDR      R0,??PaintProc_45+0xC  ;; ProcWOUTC_graf
   \   00000AB2   ........           BL       CopyToCanvasPoint
   \   00000AB6   02B0               ADD      SP,SP,#+8
   2701                        if (Proc->Nr>=0)
   \   00000AB8   0120               MOVS     R0,#+1
   \   00000ABA   3056               LDRSB    R0,[R6, R0]
   \   00000ABC   0028               CMP      R0,#+0
   \   00000ABE   17D4               BMI      ??PaintProc_52
   2702                        {
   2703                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000AC0   0222               MOVS     R2,#+2
   \   00000AC2   6946               MOV      R1,SP
   \   00000AC4   0120               MOVS     R0,#+1
   \   00000AC6   3056               LDRSB    R0,[R6, R0]
   \   00000AC8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000ACA   000E               LSRS     R0,R0,#+24
   \   00000ACC   ........           BL       CharToStr
   \   00000AD0   0700               MOVS     R7,R0
   2704                          txt[ind]='.';
   \   00000AD2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000AD4   3F0E               LSRS     R7,R7,#+24
   \   00000AD6   6846               MOV      R0,SP
   \   00000AD8   2E21               MOVS     R1,#+46
   \   00000ADA   C155               STRB     R1,[R0, R7]
   2705                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000ADC   0222               MOVS     R2,#+2
   \   00000ADE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000AE0   3F0E               LSRS     R7,R7,#+24
   \   00000AE2   6846               MOV      R0,SP
   \   00000AE4   C119               ADDS     R1,R0,R7
   \   00000AE6   491C               ADDS     R1,R1,#+1
   \   00000AE8   307A               LDRB     R0,[R6, #+8]
   \   00000AEA   ........           BL       CharToStr
   \   00000AEE   08E0               B        ??PaintProc_53
   2706                        }else{
   2707                          txt[0]='b';
   \                     ??PaintProc_52:
   \   00000AF0   6846               MOV      R0,SP
   \   00000AF2   6221               MOVS     R1,#+98
   \   00000AF4   0170               STRB     R1,[R0, #+0]
   2708                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000AF6   0222               MOVS     R2,#+2
   \   00000AF8   6946               MOV      R1,SP
   \   00000AFA   491C               ADDS     R1,R1,#+1
   \   00000AFC   307A               LDRB     R0,[R6, #+8]
   \   00000AFE   ........           BL       CharToStr
   2709                        } 
   2710                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_53:
   \   00000B02   82B0               SUB      SP,SP,#+8
   \   00000B04   0020               MOVS     R0,#+0
   \   00000B06   0090               STR      R0,[SP, #+0]
   \   00000B08   7821               MOVS     R1,#+120
   \   00000B0A   0020               MOVS     R0,#+0
   \   00000B0C   03B4               PUSH     {R0,R1}
   \   00000B0E   0C21               MOVS     R1,#+12
   \   00000B10   0520               MOVS     R0,#+5
   \   00000B12   03B4               PUSH     {R0,R1}
   \   00000B14   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000B16   2D0E               LSRS     R5,R5,#+24
   \   00000B18   0B35               ADDS     R5,R5,#+11
   \   00000B1A   2B00               MOVS     R3,R5
   \   00000B1C   241D               ADDS     R4,R4,#+4
   \   00000B1E   2200               MOVS     R2,R4
   \   00000B20   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000B22   120E               LSRS     R2,R2,#+24
   \   00000B24   0221               MOVS     R1,#+2
   \   00000B26   06A8               ADD      R0,SP,#+24
   \   00000B28   ........           BL       Label
   \   00000B2C   06B0               ADD      SP,SP,#+24
   \   00000B2E   0EE3               B        ??PaintProc_36
   2711                    break; 
   2712                    
   2713                    case ProcSPK:
   2714                        CopyToCanvasPoint((char*)ProcSPK_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_23:
   \   00000B30   82B0               SUB      SP,SP,#+8
   \   00000B32   0920               MOVS     R0,#+9
   \   00000B34   0090               STR      R0,[SP, #+0]
   \   00000B36   1323               MOVS     R3,#+19
   \   00000B38   2A00               MOVS     R2,R5
   \   00000B3A   D21C               ADDS     R2,R2,#+3
   \   00000B3C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000B3E   120E               LSRS     R2,R2,#+24
   \   00000B40   2100               MOVS     R1,R4
   \   00000B42   491C               ADDS     R1,R1,#+1
   \   00000B44   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000B46   090E               LSRS     R1,R1,#+24
   \   00000B48   2B48               LDR      R0,??PaintProc_45+0x10  ;; ProcSPK_graf
   \   00000B4A   ........           BL       CopyToCanvasPoint
   \   00000B4E   02B0               ADD      SP,SP,#+8
   2715                        CopyToCanvasPoint((char*)SPK_1[Proc->Tag.SpeakerType], x+3,y+13, 16,5); 
   \   00000B50   82B0               SUB      SP,SP,#+8
   \   00000B52   0520               MOVS     R0,#+5
   \   00000B54   0090               STR      R0,[SP, #+0]
   \   00000B56   1023               MOVS     R3,#+16
   \   00000B58   0D35               ADDS     R5,R5,#+13
   \   00000B5A   2A00               MOVS     R2,R5
   \   00000B5C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000B5E   120E               LSRS     R2,R2,#+24
   \   00000B60   E41C               ADDS     R4,R4,#+3
   \   00000B62   2100               MOVS     R1,R4
   \   00000B64   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000B66   090E               LSRS     R1,R1,#+24
   \   00000B68   307A               LDRB     R0,[R6, #+8]
   \   00000B6A   0A24               MOVS     R4,#+10
   \   00000B6C   6043               MULS     R0,R4,R0
   \   00000B6E   234C               LDR      R4,??PaintProc_45+0x14  ;; SPK_1
   \   00000B70   2018               ADDS     R0,R4,R0
   \   00000B72   ........           BL       CopyToCanvasPoint
   \   00000B76   02B0               ADD      SP,SP,#+8
   \   00000B78   E9E2               B        ??PaintProc_36
   2716          
   2717                    break;  
   2718          
   2719          
   2720                    
   2721                    
   2722                    case ProcSetScn:
   2723                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_20:
   \   00000B7A   82B0               SUB      SP,SP,#+8
   \   00000B7C   0920               MOVS     R0,#+9
   \   00000B7E   0090               STR      R0,[SP, #+0]
   \   00000B80   1323               MOVS     R3,#+19
   \   00000B82   2A00               MOVS     R2,R5
   \   00000B84   D21C               ADDS     R2,R2,#+3
   \   00000B86   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000B88   120E               LSRS     R2,R2,#+24
   \   00000B8A   2100               MOVS     R1,R4
   \   00000B8C   491C               ADDS     R1,R1,#+1
   \   00000B8E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000B90   090E               LSRS     R1,R1,#+24
   \   00000B92   1548               LDR      R0,??PaintProc_45  ;; ProcSet_graf
   \   00000B94   ........           BL       CopyToCanvasPoint
   \   00000B98   02B0               ADD      SP,SP,#+8
   2724                       if (Proc->Nr==0)
   \   00000B9A   0120               MOVS     R0,#+1
   \   00000B9C   3056               LDRSB    R0,[R6, R0]
   \   00000B9E   0028               CMP      R0,#+0
   \   00000BA0   2ED1               BNE      ??PaintProc_54
   2725                        {
   2726                          txt[0]='0'; txt[1]='/'; txt[2]='1'; txt[3]=0; //(char Value, char *Vstring, char ill);
   \   00000BA2   6846               MOV      R0,SP
   \   00000BA4   3021               MOVS     R1,#+48
   \   00000BA6   0170               STRB     R1,[R0, #+0]
   \   00000BA8   6846               MOV      R0,SP
   \   00000BAA   2F21               MOVS     R1,#+47
   \   00000BAC   4170               STRB     R1,[R0, #+1]
   \   00000BAE   6846               MOV      R0,SP
   \   00000BB0   3121               MOVS     R1,#+49
   \   00000BB2   8170               STRB     R1,[R0, #+2]
   \   00000BB4   6846               MOV      R0,SP
   \   00000BB6   0021               MOVS     R1,#+0
   \   00000BB8   C170               STRB     R1,[R0, #+3]
   2727                          Label(txt,2,x+3,y+11,3,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000BBA   82B0               SUB      SP,SP,#+8
   \   00000BBC   0020               MOVS     R0,#+0
   \   00000BBE   0090               STR      R0,[SP, #+0]
   \   00000BC0   7821               MOVS     R1,#+120
   \   00000BC2   0020               MOVS     R0,#+0
   \   00000BC4   03B4               PUSH     {R0,R1}
   \   00000BC6   0C21               MOVS     R1,#+12
   \   00000BC8   0320               MOVS     R0,#+3
   \   00000BCA   03B4               PUSH     {R0,R1}
   \   00000BCC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000BCE   2D0E               LSRS     R5,R5,#+24
   \   00000BD0   2B00               MOVS     R3,R5
   \   00000BD2   0B33               ADDS     R3,R3,#+11
   \   00000BD4   2200               MOVS     R2,R4
   \   00000BD6   D21C               ADDS     R2,R2,#+3
   \   00000BD8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000BDA   120E               LSRS     R2,R2,#+24
   \   00000BDC   0221               MOVS     R1,#+2
   \   00000BDE   06A8               ADD      R0,SP,#+24
   \   00000BE0   ........           BL       Label
   \   00000BE4   06B0               ADD      SP,SP,#+24
   \   00000BE6   2AE0               B        ??PaintProc_55
   \                     ??PaintProc_45:
   \   00000BE8   ........           DC32     ProcSet_graf
   \   00000BEC   ........           DC32     ProcWOUTS_graf
   \   00000BF0   ........           DC32     ProcWOUTR_graf
   \   00000BF4   ........           DC32     ProcWOUTC_graf
   \   00000BF8   ........           DC32     ProcSPK_graf
   \   00000BFC   ........           DC32     SPK_1
   2728                        }else{
   2729                          ind=CharToStr(Proc->Nr, txt, 3); //(char Value, char *Vstring, char ill);
   \                     ??PaintProc_54:
   \   00000C00   0322               MOVS     R2,#+3
   \   00000C02   6946               MOV      R1,SP
   \   00000C04   0120               MOVS     R0,#+1
   \   00000C06   3056               LDRSB    R0,[R6, R0]
   \   00000C08   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000C0A   000E               LSRS     R0,R0,#+24
   \   00000C0C   ........           BL       CharToStr
   \   00000C10   0700               MOVS     R7,R0
   2730                          Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C12   82B0               SUB      SP,SP,#+8
   \   00000C14   0020               MOVS     R0,#+0
   \   00000C16   0090               STR      R0,[SP, #+0]
   \   00000C18   7821               MOVS     R1,#+120
   \   00000C1A   0020               MOVS     R0,#+0
   \   00000C1C   03B4               PUSH     {R0,R1}
   \   00000C1E   0C21               MOVS     R1,#+12
   \   00000C20   0220               MOVS     R0,#+2
   \   00000C22   03B4               PUSH     {R0,R1}
   \   00000C24   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000C26   2D0E               LSRS     R5,R5,#+24
   \   00000C28   2B00               MOVS     R3,R5
   \   00000C2A   0B33               ADDS     R3,R3,#+11
   \   00000C2C   2200               MOVS     R2,R4
   \   00000C2E   121D               ADDS     R2,R2,#+4
   \   00000C30   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000C32   120E               LSRS     R2,R2,#+24
   \   00000C34   0221               MOVS     R1,#+2
   \   00000C36   06A8               ADD      R0,SP,#+24
   \   00000C38   ........           BL       Label
   \   00000C3C   06B0               ADD      SP,SP,#+24
   2731                        }
   2732                        
   2733                        txt[0]='S'; txt[1]=0;
   \                     ??PaintProc_55:
   \   00000C3E   6846               MOV      R0,SP
   \   00000C40   5321               MOVS     R1,#+83
   \   00000C42   0170               STRB     R1,[R0, #+0]
   \   00000C44   6846               MOV      R0,SP
   \   00000C46   0021               MOVS     R1,#+0
   \   00000C48   4170               STRB     R1,[R0, #+1]
   2734                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C4A   82B0               SUB      SP,SP,#+8
   \   00000C4C   0020               MOVS     R0,#+0
   \   00000C4E   0090               STR      R0,[SP, #+0]
   \   00000C50   7821               MOVS     R1,#+120
   \   00000C52   0020               MOVS     R0,#+0
   \   00000C54   03B4               PUSH     {R0,R1}
   \   00000C56   0621               MOVS     R1,#+6
   \   00000C58   0120               MOVS     R0,#+1
   \   00000C5A   03B4               PUSH     {R0,R1}
   \   00000C5C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000C5E   2D0E               LSRS     R5,R5,#+24
   \   00000C60   AD1C               ADDS     R5,R5,#+2
   \   00000C62   2B00               MOVS     R3,R5
   \   00000C64   0834               ADDS     R4,R4,#+8
   \   00000C66   2200               MOVS     R2,R4
   \   00000C68   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000C6A   120E               LSRS     R2,R2,#+24
   \   00000C6C   0221               MOVS     R1,#+2
   \   00000C6E   06A8               ADD      R0,SP,#+24
   \   00000C70   ........           BL       Label
   \   00000C74   06B0               ADD      SP,SP,#+24
   \   00000C76   6AE2               B        ??PaintProc_36
   2735                    break;             
   2736            
   2737                    case ProcInc:
   2738                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_21:
   \   00000C78   82B0               SUB      SP,SP,#+8
   \   00000C7A   0920               MOVS     R0,#+9
   \   00000C7C   0090               STR      R0,[SP, #+0]
   \   00000C7E   1323               MOVS     R3,#+19
   \   00000C80   2A00               MOVS     R2,R5
   \   00000C82   D21C               ADDS     R2,R2,#+3
   \   00000C84   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000C86   120E               LSRS     R2,R2,#+24
   \   00000C88   2100               MOVS     R1,R4
   \   00000C8A   491C               ADDS     R1,R1,#+1
   \   00000C8C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000C8E   090E               LSRS     R1,R1,#+24
   \   00000C90   E248               LDR      R0,??PaintProc_56  ;; ProcSet_graf
   \   00000C92   ........           BL       CopyToCanvasPoint
   \   00000C96   02B0               ADD      SP,SP,#+8
   2739                        txt[0]='+'; txt[1]=0; txt[2]=0;
   \   00000C98   6846               MOV      R0,SP
   \   00000C9A   2B21               MOVS     R1,#+43
   \   00000C9C   0170               STRB     R1,[R0, #+0]
   \   00000C9E   6846               MOV      R0,SP
   \   00000CA0   0021               MOVS     R1,#+0
   \   00000CA2   4170               STRB     R1,[R0, #+1]
   \   00000CA4   6846               MOV      R0,SP
   \   00000CA6   0021               MOVS     R1,#+0
   \   00000CA8   8170               STRB     R1,[R0, #+2]
   2740                        Label(txt,2,x+7,y+4,1,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000CAA   82B0               SUB      SP,SP,#+8
   \   00000CAC   0020               MOVS     R0,#+0
   \   00000CAE   0090               STR      R0,[SP, #+0]
   \   00000CB0   7821               MOVS     R1,#+120
   \   00000CB2   0020               MOVS     R0,#+0
   \   00000CB4   03B4               PUSH     {R0,R1}
   \   00000CB6   0921               MOVS     R1,#+9
   \   00000CB8   0120               MOVS     R0,#+1
   \   00000CBA   03B4               PUSH     {R0,R1}
   \   00000CBC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000CBE   2D0E               LSRS     R5,R5,#+24
   \   00000CC0   2B00               MOVS     R3,R5
   \   00000CC2   1B1D               ADDS     R3,R3,#+4
   \   00000CC4   2200               MOVS     R2,R4
   \   00000CC6   D21D               ADDS     R2,R2,#+7
   \   00000CC8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000CCA   120E               LSRS     R2,R2,#+24
   \   00000CCC   0221               MOVS     R1,#+2
   \   00000CCE   06A8               ADD      R0,SP,#+24
   \   00000CD0   ........           BL       Label
   \   00000CD4   06B0               ADD      SP,SP,#+24
   2741                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000CD6   6846               MOV      R0,SP
   \   00000CD8   5321               MOVS     R1,#+83
   \   00000CDA   0170               STRB     R1,[R0, #+0]
   \   00000CDC   6846               MOV      R0,SP
   \   00000CDE   6321               MOVS     R1,#+99
   \   00000CE0   4170               STRB     R1,[R0, #+1]
   \   00000CE2   6846               MOV      R0,SP
   \   00000CE4   6E21               MOVS     R1,#+110
   \   00000CE6   8170               STRB     R1,[R0, #+2]
   2742                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000CE8   82B0               SUB      SP,SP,#+8
   \   00000CEA   0020               MOVS     R0,#+0
   \   00000CEC   0090               STR      R0,[SP, #+0]
   \   00000CEE   7821               MOVS     R1,#+120
   \   00000CF0   0020               MOVS     R0,#+0
   \   00000CF2   03B4               PUSH     {R0,R1}
   \   00000CF4   0B21               MOVS     R1,#+11
   \   00000CF6   0320               MOVS     R0,#+3
   \   00000CF8   03B4               PUSH     {R0,R1}
   \   00000CFA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000CFC   2D0E               LSRS     R5,R5,#+24
   \   00000CFE   0B35               ADDS     R5,R5,#+11
   \   00000D00   2B00               MOVS     R3,R5
   \   00000D02   241D               ADDS     R4,R4,#+4
   \   00000D04   2200               MOVS     R2,R4
   \   00000D06   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000D08   120E               LSRS     R2,R2,#+24
   \   00000D0A   0221               MOVS     R1,#+2
   \   00000D0C   06A8               ADD      R0,SP,#+24
   \   00000D0E   ........           BL       Label
   \   00000D12   06B0               ADD      SP,SP,#+24
   \   00000D14   1BE2               B        ??PaintProc_36
   2743                         
   2744                   break;               
   2745            
   2746                    case ProcDec:
   2747                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_22:
   \   00000D16   82B0               SUB      SP,SP,#+8
   \   00000D18   0920               MOVS     R0,#+9
   \   00000D1A   0090               STR      R0,[SP, #+0]
   \   00000D1C   1323               MOVS     R3,#+19
   \   00000D1E   2A00               MOVS     R2,R5
   \   00000D20   D21C               ADDS     R2,R2,#+3
   \   00000D22   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000D24   120E               LSRS     R2,R2,#+24
   \   00000D26   2100               MOVS     R1,R4
   \   00000D28   491C               ADDS     R1,R1,#+1
   \   00000D2A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000D2C   090E               LSRS     R1,R1,#+24
   \   00000D2E   BB48               LDR      R0,??PaintProc_56  ;; ProcSet_graf
   \   00000D30   ........           BL       CopyToCanvasPoint
   \   00000D34   02B0               ADD      SP,SP,#+8
   2748                      
   2749                        txt[0]='-'; txt[1]='-'; txt[2]=0;
   \   00000D36   6846               MOV      R0,SP
   \   00000D38   2D21               MOVS     R1,#+45
   \   00000D3A   0170               STRB     R1,[R0, #+0]
   \   00000D3C   6846               MOV      R0,SP
   \   00000D3E   2D21               MOVS     R1,#+45
   \   00000D40   4170               STRB     R1,[R0, #+1]
   \   00000D42   6846               MOV      R0,SP
   \   00000D44   0021               MOVS     R1,#+0
   \   00000D46   8170               STRB     R1,[R0, #+2]
   2750                        Label(txt,2,x+7,y+4,2,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D48   82B0               SUB      SP,SP,#+8
   \   00000D4A   0020               MOVS     R0,#+0
   \   00000D4C   0090               STR      R0,[SP, #+0]
   \   00000D4E   7821               MOVS     R1,#+120
   \   00000D50   0020               MOVS     R0,#+0
   \   00000D52   03B4               PUSH     {R0,R1}
   \   00000D54   0621               MOVS     R1,#+6
   \   00000D56   0220               MOVS     R0,#+2
   \   00000D58   03B4               PUSH     {R0,R1}
   \   00000D5A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000D5C   2D0E               LSRS     R5,R5,#+24
   \   00000D5E   2B00               MOVS     R3,R5
   \   00000D60   1B1D               ADDS     R3,R3,#+4
   \   00000D62   2200               MOVS     R2,R4
   \   00000D64   D21D               ADDS     R2,R2,#+7
   \   00000D66   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000D68   120E               LSRS     R2,R2,#+24
   \   00000D6A   0221               MOVS     R1,#+2
   \   00000D6C   06A8               ADD      R0,SP,#+24
   \   00000D6E   ........           BL       Label
   \   00000D72   06B0               ADD      SP,SP,#+24
   2751                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000D74   6846               MOV      R0,SP
   \   00000D76   5321               MOVS     R1,#+83
   \   00000D78   0170               STRB     R1,[R0, #+0]
   \   00000D7A   6846               MOV      R0,SP
   \   00000D7C   6321               MOVS     R1,#+99
   \   00000D7E   4170               STRB     R1,[R0, #+1]
   \   00000D80   6846               MOV      R0,SP
   \   00000D82   6E21               MOVS     R1,#+110
   \   00000D84   8170               STRB     R1,[R0, #+2]
   2752                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D86   82B0               SUB      SP,SP,#+8
   \   00000D88   0020               MOVS     R0,#+0
   \   00000D8A   0090               STR      R0,[SP, #+0]
   \   00000D8C   7821               MOVS     R1,#+120
   \   00000D8E   0020               MOVS     R0,#+0
   \   00000D90   03B4               PUSH     {R0,R1}
   \   00000D92   0B21               MOVS     R1,#+11
   \   00000D94   0320               MOVS     R0,#+3
   \   00000D96   03B4               PUSH     {R0,R1}
   \   00000D98   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000D9A   2D0E               LSRS     R5,R5,#+24
   \   00000D9C   0B35               ADDS     R5,R5,#+11
   \   00000D9E   2B00               MOVS     R3,R5
   \   00000DA0   241D               ADDS     R4,R4,#+4
   \   00000DA2   2200               MOVS     R2,R4
   \   00000DA4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000DA6   120E               LSRS     R2,R2,#+24
   \   00000DA8   0221               MOVS     R1,#+2
   \   00000DAA   06A8               ADD      R0,SP,#+24
   \   00000DAC   ........           BL       Label
   \   00000DB0   06B0               ADD      SP,SP,#+24
   \   00000DB2   CCE1               B        ??PaintProc_36
   2753                       
   2754                    break;    
   2755                    
   2756                    case ProcTimerSet:
   2757                        
   2758                        CopyToCanvasPoint((char*)ProcTime_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_24:
   \   00000DB4   82B0               SUB      SP,SP,#+8
   \   00000DB6   0820               MOVS     R0,#+8
   \   00000DB8   0090               STR      R0,[SP, #+0]
   \   00000DBA   1323               MOVS     R3,#+19
   \   00000DBC   2A00               MOVS     R2,R5
   \   00000DBE   D21C               ADDS     R2,R2,#+3
   \   00000DC0   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000DC2   120E               LSRS     R2,R2,#+24
   \   00000DC4   2100               MOVS     R1,R4
   \   00000DC6   491C               ADDS     R1,R1,#+1
   \   00000DC8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000DCA   090E               LSRS     R1,R1,#+24
   \   00000DCC   E248               LDR      R0,??PaintProc_57  ;; ProcTime_graf
   \   00000DCE   ........           BL       CopyToCanvasPoint
   \   00000DD2   02B0               ADD      SP,SP,#+8
   2759                      
   2760                        ind=FloToStr(Proc->Tag.SetCounter, txt, 5); //(char Value, char *Vstring, char ill);
   \   00000DD4   0522               MOVS     R2,#+5
   \   00000DD6   6946               MOV      R1,SP
   \   00000DD8   02B5               PUSH     {R1,LR}
   \   00000DDA   1700               MOVS     R7,R2
   \   00000DDC   B068               LDR      R0,[R6, #+8]
   \   00000DDE   ........           BL       __aeabi_ui2f
   \   00000DE2   3A00               MOVS     R2,R7
   \   00000DE4   0099               LDR      R1,[SP, #0]
   \   00000DE6   02B0               ADD      SP,SP,#+8
   \   00000DE8   ........           BL       FloToStr
   \   00000DEC   0700               MOVS     R7,R0
   2761                        PixPlab=Label(txt,0,x+2,y+11,4,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000DEE   82B0               SUB      SP,SP,#+8
   \   00000DF0   0020               MOVS     R0,#+0
   \   00000DF2   0090               STR      R0,[SP, #+0]
   \   00000DF4   7821               MOVS     R1,#+120
   \   00000DF6   0020               MOVS     R0,#+0
   \   00000DF8   03B4               PUSH     {R0,R1}
   \   00000DFA   1121               MOVS     R1,#+17
   \   00000DFC   0420               MOVS     R0,#+4
   \   00000DFE   03B4               PUSH     {R0,R1}
   \   00000E00   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000E02   2D0E               LSRS     R5,R5,#+24
   \   00000E04   2B00               MOVS     R3,R5
   \   00000E06   0B33               ADDS     R3,R3,#+11
   \   00000E08   2200               MOVS     R2,R4
   \   00000E0A   921C               ADDS     R2,R2,#+2
   \   00000E0C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000E0E   120E               LSRS     R2,R2,#+24
   \   00000E10   0021               MOVS     R1,#+0
   \   00000E12   06A8               ADD      R0,SP,#+24
   \   00000E14   ........           BL       Label
   \   00000E18   06B0               ADD      SP,SP,#+24
   \   00000E1A   0200               MOVS     R2,R0
   2762                        if(PixPlab<14) Label("s",0,x+3+PixPlab,y+11,1,4,0,120,0);
   \   00000E1C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000E1E   120E               LSRS     R2,R2,#+24
   \   00000E20   0E2A               CMP      R2,#+14
   \   00000E22   00D3               BCC      .+4
   \   00000E24   93E1               B        ??PaintProc_36
   \   00000E26   82B0               SUB      SP,SP,#+8
   \   00000E28   0020               MOVS     R0,#+0
   \   00000E2A   0090               STR      R0,[SP, #+0]
   \   00000E2C   7821               MOVS     R1,#+120
   \   00000E2E   0020               MOVS     R0,#+0
   \   00000E30   03B4               PUSH     {R0,R1}
   \   00000E32   0421               MOVS     R1,#+4
   \   00000E34   0120               MOVS     R0,#+1
   \   00000E36   03B4               PUSH     {R0,R1}
   \   00000E38   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000E3A   2D0E               LSRS     R5,R5,#+24
   \   00000E3C   0B35               ADDS     R5,R5,#+11
   \   00000E3E   2B00               MOVS     R3,R5
   \   00000E40   A218               ADDS     R2,R4,R2
   \   00000E42   D21C               ADDS     R2,R2,#+3
   \   00000E44   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000E46   120E               LSRS     R2,R2,#+24
   \   00000E48   0021               MOVS     R1,#+0
   \   00000E4A   C4A0               ADR      R0,??PaintProc_57+0x4  ;; 0x73, 0x00, 0x00, 0x00
   \   00000E4C   ........           BL       Label
   \   00000E50   06B0               ADD      SP,SP,#+24
   \   00000E52   7CE1               B        ??PaintProc_36
   2763                    break;   
   2764                    
   2765          
   2766                      
   2767                    case ProcClock:
   2768                      
   2769                        CopyToCanvasPoint((char*)ProcClock_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_25:
   \   00000E54   82B0               SUB      SP,SP,#+8
   \   00000E56   0820               MOVS     R0,#+8
   \   00000E58   0090               STR      R0,[SP, #+0]
   \   00000E5A   1323               MOVS     R3,#+19
   \   00000E5C   2A00               MOVS     R2,R5
   \   00000E5E   D21C               ADDS     R2,R2,#+3
   \   00000E60   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000E62   120E               LSRS     R2,R2,#+24
   \   00000E64   2100               MOVS     R1,R4
   \   00000E66   491C               ADDS     R1,R1,#+1
   \   00000E68   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000E6A   090E               LSRS     R1,R1,#+24
   \   00000E6C   BC48               LDR      R0,??PaintProc_57+0x8  ;; ProcClock_graf
   \   00000E6E   ........           BL       CopyToCanvasPoint
   \   00000E72   02B0               ADD      SP,SP,#+8
   2770          
   2771                        Label((char*)ShortDate[Proc->Tag.ClkPrcType],0,x+2,y+11,1,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000E74   82B0               SUB      SP,SP,#+8
   \   00000E76   0020               MOVS     R0,#+0
   \   00000E78   0090               STR      R0,[SP, #+0]
   \   00000E7A   7821               MOVS     R1,#+120
   \   00000E7C   0020               MOVS     R0,#+0
   \   00000E7E   03B4               PUSH     {R0,R1}
   \   00000E80   1121               MOVS     R1,#+17
   \   00000E82   0120               MOVS     R0,#+1
   \   00000E84   03B4               PUSH     {R0,R1}
   \   00000E86   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000E88   2D0E               LSRS     R5,R5,#+24
   \   00000E8A   2B00               MOVS     R3,R5
   \   00000E8C   0B33               ADDS     R3,R3,#+11
   \   00000E8E   2200               MOVS     R2,R4
   \   00000E90   921C               ADDS     R2,R2,#+2
   \   00000E92   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000E94   120E               LSRS     R2,R2,#+24
   \   00000E96   0021               MOVS     R1,#+0
   \   00000E98   307A               LDRB     R0,[R6, #+8]
   \   00000E9A   0327               MOVS     R7,#+3
   \   00000E9C   7843               MULS     R0,R7,R0
   \   00000E9E   B14F               LDR      R7,??PaintProc_57+0xC  ;; ShortDate
   \   00000EA0   3818               ADDS     R0,R7,R0
   \   00000EA2   ........           BL       Label
   \   00000EA6   06B0               ADD      SP,SP,#+24
   2772                        CharToStr(Proc->Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000EA8   0222               MOVS     R2,#+2
   \   00000EAA   6946               MOV      R1,SP
   \   00000EAC   707A               LDRB     R0,[R6, #+9]
   \   00000EAE   ........           BL       CharToStr
   2773                        Label(txt,0,x+10,y+11,5,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000EB2   82B0               SUB      SP,SP,#+8
   \   00000EB4   0020               MOVS     R0,#+0
   \   00000EB6   0090               STR      R0,[SP, #+0]
   \   00000EB8   7821               MOVS     R1,#+120
   \   00000EBA   0020               MOVS     R0,#+0
   \   00000EBC   03B4               PUSH     {R0,R1}
   \   00000EBE   0921               MOVS     R1,#+9
   \   00000EC0   0520               MOVS     R0,#+5
   \   00000EC2   03B4               PUSH     {R0,R1}
   \   00000EC4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000EC6   2D0E               LSRS     R5,R5,#+24
   \   00000EC8   0B35               ADDS     R5,R5,#+11
   \   00000ECA   2B00               MOVS     R3,R5
   \   00000ECC   0A34               ADDS     R4,R4,#+10
   \   00000ECE   2200               MOVS     R2,R4
   \   00000ED0   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000ED2   120E               LSRS     R2,R2,#+24
   \   00000ED4   0021               MOVS     R1,#+0
   \   00000ED6   06A8               ADD      R0,SP,#+24
   \   00000ED8   ........           BL       Label
   \   00000EDC   06B0               ADD      SP,SP,#+24
   \   00000EDE   36E1               B        ??PaintProc_36
   2774                                
   2775                      break;         
   2776                    
   2777          
   2778                    case ProcDay:
   2779                      
   2780                        CopyToCanvasPoint((char*)ProcDay_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_26:
   \   00000EE0   82B0               SUB      SP,SP,#+8
   \   00000EE2   0820               MOVS     R0,#+8
   \   00000EE4   0090               STR      R0,[SP, #+0]
   \   00000EE6   1323               MOVS     R3,#+19
   \   00000EE8   2A00               MOVS     R2,R5
   \   00000EEA   D21C               ADDS     R2,R2,#+3
   \   00000EEC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000EEE   120E               LSRS     R2,R2,#+24
   \   00000EF0   2100               MOVS     R1,R4
   \   00000EF2   491C               ADDS     R1,R1,#+1
   \   00000EF4   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000EF6   090E               LSRS     R1,R1,#+24
   \   00000EF8   9B48               LDR      R0,??PaintProc_57+0x10  ;; ProcDay_graf
   \   00000EFA   ........           BL       CopyToCanvasPoint
   \   00000EFE   02B0               ADD      SP,SP,#+8
   2781                        Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000F00   82B0               SUB      SP,SP,#+8
   \   00000F02   0020               MOVS     R0,#+0
   \   00000F04   0090               STR      R0,[SP, #+0]
   \   00000F06   7821               MOVS     R1,#+120
   \   00000F08   0020               MOVS     R0,#+0
   \   00000F0A   03B4               PUSH     {R0,R1}
   \   00000F0C   0F21               MOVS     R1,#+15
   \   00000F0E   0220               MOVS     R0,#+2
   \   00000F10   03B4               PUSH     {R0,R1}
   \   00000F12   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000F14   2D0E               LSRS     R5,R5,#+24
   \   00000F16   0B35               ADDS     R5,R5,#+11
   \   00000F18   2B00               MOVS     R3,R5
   \   00000F1A   241D               ADDS     R4,R4,#+4
   \   00000F1C   2200               MOVS     R2,R4
   \   00000F1E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000F20   120E               LSRS     R2,R2,#+24
   \   00000F22   0021               MOVS     R1,#+0
   \   00000F24   307A               LDRB     R0,[R6, #+8]
   \   00000F26   0224               MOVS     R4,#+2
   \   00000F28   6043               MULS     R0,R4,R0
   \   00000F2A   904C               LDR      R4,??PaintProc_57+0x14  ;; g_leng
   \   00000F2C   2468               LDR      R4,[R4, #+0]
   \   00000F2E   1025               MOVS     R5,#+16
   \   00000F30   6C43               MULS     R4,R5,R4
   \   00000F32   8F4D               LDR      R5,??PaintProc_57+0x18  ;; DeyOfWeekStr
   \   00000F34   2C19               ADDS     R4,R5,R4
   \   00000F36   2018               ADDS     R0,R4,R0
   \   00000F38   ........           BL       Label
   \   00000F3C   06B0               ADD      SP,SP,#+24
   \   00000F3E   06E1               B        ??PaintProc_36
   2782                     
   2783                      break;         
   2784                    
   2785                    
   2786                    case ProcConstAnal:
   2787                      
   2788                        //CopyToCanvasPoint((char*)ProcConstAnal_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   2789                        
   2790          
   2791                        H_line(x+2 ,y+2,19,1);
   \                     ??PaintProc_27:
   \   00000F40   0123               MOVS     R3,#+1
   \   00000F42   1322               MOVS     R2,#+19
   \   00000F44   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000F46   2D0E               LSRS     R5,R5,#+24
   \   00000F48   2900               MOVS     R1,R5
   \   00000F4A   891C               ADDS     R1,R1,#+2
   \   00000F4C   2000               MOVS     R0,R4
   \   00000F4E   801C               ADDS     R0,R0,#+2
   \   00000F50   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000F52   000E               LSRS     R0,R0,#+24
   \   00000F54   ........           BL       H_line
   2792                        V_line(x+20 ,y+3,6,1);
   \   00000F58   0123               MOVS     R3,#+1
   \   00000F5A   0622               MOVS     R2,#+6
   \   00000F5C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000F5E   2D0E               LSRS     R5,R5,#+24
   \   00000F60   2900               MOVS     R1,R5
   \   00000F62   C91C               ADDS     R1,R1,#+3
   \   00000F64   2000               MOVS     R0,R4
   \   00000F66   1430               ADDS     R0,R0,#+20
   \   00000F68   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000F6A   000E               LSRS     R0,R0,#+24
   \   00000F6C   ........           BL       V_line
   2793                        
   2794                        ind=sIntToStr(Proc->Tag.ConstAnValue, txt);
   \   00000F70   6946               MOV      R1,SP
   \   00000F72   0820               MOVS     R0,#+8
   \   00000F74   305E               LDRSH    R0,[R6, R0]
   \   00000F76   ........           BL       sIntToStr
   \   00000F7A   0700               MOVS     R7,R0
   2795                        
   2796                        if (ind>4)
   \   00000F7C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000F7E   3F0E               LSRS     R7,R7,#+24
   \   00000F80   052F               CMP      R7,#+5
   \   00000F82   32D3               BCC      ??PaintProc_58
   2797                        { 
   2798                          Label(txt,1,x+18,y+11,ind-4 ,4,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000F84   82B0               SUB      SP,SP,#+8
   \   00000F86   0020               MOVS     R0,#+0
   \   00000F88   0090               STR      R0,[SP, #+0]
   \   00000F8A   7821               MOVS     R1,#+120
   \   00000F8C   0020               MOVS     R0,#+0
   \   00000F8E   03B4               PUSH     {R0,R1}
   \   00000F90   0421               MOVS     R1,#+4
   \   00000F92   381F               SUBS     R0,R7,#+4
   \   00000F94   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000F96   000E               LSRS     R0,R0,#+24
   \   00000F98   03B4               PUSH     {R0,R1}
   \   00000F9A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000F9C   2D0E               LSRS     R5,R5,#+24
   \   00000F9E   2B00               MOVS     R3,R5
   \   00000FA0   0B33               ADDS     R3,R3,#+11
   \   00000FA2   2200               MOVS     R2,R4
   \   00000FA4   1232               ADDS     R2,R2,#+18
   \   00000FA6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000FA8   120E               LSRS     R2,R2,#+24
   \   00000FAA   0121               MOVS     R1,#+1
   \   00000FAC   06A8               ADD      R0,SP,#+24
   \   00000FAE   ........           BL       Label
   \   00000FB2   06B0               ADD      SP,SP,#+24
   2799                          Label(&(txt[ind-4]),1,x+18,y+3,4 ,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000FB4   82B0               SUB      SP,SP,#+8
   \   00000FB6   0020               MOVS     R0,#+0
   \   00000FB8   0090               STR      R0,[SP, #+0]
   \   00000FBA   7821               MOVS     R1,#+120
   \   00000FBC   0020               MOVS     R0,#+0
   \   00000FBE   03B4               PUSH     {R0,R1}
   \   00000FC0   1021               MOVS     R1,#+16
   \   00000FC2   0420               MOVS     R0,#+4
   \   00000FC4   03B4               PUSH     {R0,R1}
   \   00000FC6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000FC8   2D0E               LSRS     R5,R5,#+24
   \   00000FCA   ED1C               ADDS     R5,R5,#+3
   \   00000FCC   2B00               MOVS     R3,R5
   \   00000FCE   1234               ADDS     R4,R4,#+18
   \   00000FD0   2200               MOVS     R2,R4
   \   00000FD2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000FD4   120E               LSRS     R2,R2,#+24
   \   00000FD6   0121               MOVS     R1,#+1
   \   00000FD8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000FDA   3F0E               LSRS     R7,R7,#+24
   \   00000FDC   06A8               ADD      R0,SP,#+24
   \   00000FDE   C019               ADDS     R0,R0,R7
   \   00000FE0   001F               SUBS     R0,R0,#+4
   \   00000FE2   ........           BL       Label
   \   00000FE6   06B0               ADD      SP,SP,#+24
   \   00000FE8   B1E0               B        ??PaintProc_36
   2800                        }else{
   2801                          Label(txt,1,x+19,y+3,ind,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_58:
   \   00000FEA   82B0               SUB      SP,SP,#+8
   \   00000FEC   0020               MOVS     R0,#+0
   \   00000FEE   0090               STR      R0,[SP, #+0]
   \   00000FF0   7821               MOVS     R1,#+120
   \   00000FF2   0020               MOVS     R0,#+0
   \   00000FF4   03B4               PUSH     {R0,R1}
   \   00000FF6   1021               MOVS     R1,#+16
   \   00000FF8   3800               MOVS     R0,R7
   \   00000FFA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000FFC   000E               LSRS     R0,R0,#+24
   \   00000FFE   03B4               PUSH     {R0,R1}
   \   00001000   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00001002   2D0E               LSRS     R5,R5,#+24
   \   00001004   ED1C               ADDS     R5,R5,#+3
   \   00001006   2B00               MOVS     R3,R5
   \   00001008   1334               ADDS     R4,R4,#+19
   \   0000100A   2200               MOVS     R2,R4
   \   0000100C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000100E   120E               LSRS     R2,R2,#+24
   \   00001010   0121               MOVS     R1,#+1
   \   00001012   06A8               ADD      R0,SP,#+24
   \   00001014   ........           BL       Label
   \   00001018   06B0               ADD      SP,SP,#+24
   \   0000101A   98E0               B        ??PaintProc_36
   \                     ??PaintProc_56:
   \   0000101C   ........           DC32     ProcSet_graf
   2802                         
   2803                        }
   2804                        //Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2805                         
   2806                       
   2807                        
   2808                        
   2809                      break;   
   2810                      
   2811                     case ProcGetReg:
   2812                        CopyToCanvasPoint((char*)ProcGetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_28:
   \   00001020   82B0               SUB      SP,SP,#+8
   \   00001022   1120               MOVS     R0,#+17
   \   00001024   0090               STR      R0,[SP, #+0]
   \   00001026   1323               MOVS     R3,#+19
   \   00001028   2A00               MOVS     R2,R5
   \   0000102A   D21C               ADDS     R2,R2,#+3
   \   0000102C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000102E   120E               LSRS     R2,R2,#+24
   \   00001030   2100               MOVS     R1,R4
   \   00001032   491C               ADDS     R1,R1,#+1
   \   00001034   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00001036   090E               LSRS     R1,R1,#+24
   \   00001038   4E48               LDR      R0,??PaintProc_57+0x1C  ;; ProcGetAnal_graf
   \   0000103A   ........           BL       CopyToCanvasPoint
   \   0000103E   02B0               ADD      SP,SP,#+8
   2813                        if (Proc->Nr>=0)
   \   00001040   0120               MOVS     R0,#+1
   \   00001042   3056               LDRSB    R0,[R6, R0]
   \   00001044   0028               CMP      R0,#+0
   \   00001046   17D4               BMI      ??PaintProc_59
   2814                        {
   2815                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00001048   0222               MOVS     R2,#+2
   \   0000104A   6946               MOV      R1,SP
   \   0000104C   0120               MOVS     R0,#+1
   \   0000104E   3056               LDRSB    R0,[R6, R0]
   \   00001050   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00001052   000E               LSRS     R0,R0,#+24
   \   00001054   ........           BL       CharToStr
   \   00001058   0700               MOVS     R7,R0
   2816                          txt[ind]='.';
   \   0000105A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000105C   3F0E               LSRS     R7,R7,#+24
   \   0000105E   6846               MOV      R0,SP
   \   00001060   2E21               MOVS     R1,#+46
   \   00001062   C155               STRB     R1,[R0, R7]
   2817                          CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00001064   0222               MOVS     R2,#+2
   \   00001066   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00001068   3F0E               LSRS     R7,R7,#+24
   \   0000106A   6846               MOV      R0,SP
   \   0000106C   C119               ADDS     R1,R0,R7
   \   0000106E   491C               ADDS     R1,R1,#+1
   \   00001070   307A               LDRB     R0,[R6, #+8]
   \   00001072   ........           BL       CharToStr
   \   00001076   08E0               B        ??PaintProc_60
   2818                        }else{
   2819                          txt[0]='a';
   \                     ??PaintProc_59:
   \   00001078   6846               MOV      R0,SP
   \   0000107A   6121               MOVS     R1,#+97
   \   0000107C   0170               STRB     R1,[R0, #+0]
   2820                          CharToStr(Proc->Tag.RegNr, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000107E   0222               MOVS     R2,#+2
   \   00001080   6946               MOV      R1,SP
   \   00001082   491C               ADDS     R1,R1,#+1
   \   00001084   307A               LDRB     R0,[R6, #+8]
   \   00001086   ........           BL       CharToStr
   2821                        }
   2822                        
   2823                        Label(txt,2,x+2, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_60:
   \   0000108A   82B0               SUB      SP,SP,#+8
   \   0000108C   0020               MOVS     R0,#+0
   \   0000108E   0090               STR      R0,[SP, #+0]
   \   00001090   7821               MOVS     R1,#+120
   \   00001092   0020               MOVS     R0,#+0
   \   00001094   03B4               PUSH     {R0,R1}
   \   00001096   0F21               MOVS     R1,#+15
   \   00001098   0520               MOVS     R0,#+5
   \   0000109A   03B4               PUSH     {R0,R1}
   \   0000109C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000109E   2D0E               LSRS     R5,R5,#+24
   \   000010A0   2D1D               ADDS     R5,R5,#+4
   \   000010A2   2B00               MOVS     R3,R5
   \   000010A4   A41C               ADDS     R4,R4,#+2
   \   000010A6   2200               MOVS     R2,R4
   \   000010A8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000010AA   120E               LSRS     R2,R2,#+24
   \   000010AC   0221               MOVS     R1,#+2
   \   000010AE   06A8               ADD      R0,SP,#+24
   \   000010B0   ........           BL       Label
   \   000010B4   06B0               ADD      SP,SP,#+24
   \   000010B6   4AE0               B        ??PaintProc_36
   2824          
   2825                      break;   
   2826                      
   2827                      case ProcSetReg:
   2828                        CopyToCanvasPoint((char*)ProcSetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_29:
   \   000010B8   82B0               SUB      SP,SP,#+8
   \   000010BA   1120               MOVS     R0,#+17
   \   000010BC   0090               STR      R0,[SP, #+0]
   \   000010BE   1323               MOVS     R3,#+19
   \   000010C0   2A00               MOVS     R2,R5
   \   000010C2   D21C               ADDS     R2,R2,#+3
   \   000010C4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000010C6   120E               LSRS     R2,R2,#+24
   \   000010C8   2100               MOVS     R1,R4
   \   000010CA   491C               ADDS     R1,R1,#+1
   \   000010CC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000010CE   090E               LSRS     R1,R1,#+24
   \   000010D0   2948               LDR      R0,??PaintProc_57+0x20  ;; ProcSetAnal_graf
   \   000010D2   ........           BL       CopyToCanvasPoint
   \   000010D6   02B0               ADD      SP,SP,#+8
   2829                        if (Proc->Nr>=0)
   \   000010D8   0120               MOVS     R0,#+1
   \   000010DA   3056               LDRSB    R0,[R6, R0]
   \   000010DC   0028               CMP      R0,#+0
   \   000010DE   17D4               BMI      ??PaintProc_61
   2830                        {
   2831                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000010E0   0222               MOVS     R2,#+2
   \   000010E2   6946               MOV      R1,SP
   \   000010E4   0120               MOVS     R0,#+1
   \   000010E6   3056               LDRSB    R0,[R6, R0]
   \   000010E8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000010EA   000E               LSRS     R0,R0,#+24
   \   000010EC   ........           BL       CharToStr
   \   000010F0   0700               MOVS     R7,R0
   2832                          txt[ind]='.';
   \   000010F2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000010F4   3F0E               LSRS     R7,R7,#+24
   \   000010F6   6846               MOV      R0,SP
   \   000010F8   2E21               MOVS     R1,#+46
   \   000010FA   C155               STRB     R1,[R0, R7]
   2833                          CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000010FC   0222               MOVS     R2,#+2
   \   000010FE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00001100   3F0E               LSRS     R7,R7,#+24
   \   00001102   6846               MOV      R0,SP
   \   00001104   C119               ADDS     R1,R0,R7
   \   00001106   491C               ADDS     R1,R1,#+1
   \   00001108   307A               LDRB     R0,[R6, #+8]
   \   0000110A   ........           BL       CharToStr
   \   0000110E   08E0               B        ??PaintProc_62
   2834                        }else{
   2835                          txt[0]='a';
   \                     ??PaintProc_61:
   \   00001110   6846               MOV      R0,SP
   \   00001112   6121               MOVS     R1,#+97
   \   00001114   0170               STRB     R1,[R0, #+0]
   2836                          CharToStr(Proc->Tag.RegNr, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00001116   0222               MOVS     R2,#+2
   \   00001118   6946               MOV      R1,SP
   \   0000111A   491C               ADDS     R1,R1,#+1
   \   0000111C   307A               LDRB     R0,[R6, #+8]
   \   0000111E   ........           BL       CharToStr
   2837                        }
   2838                        Label(txt,2,x+3, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_62:
   \   00001122   82B0               SUB      SP,SP,#+8
   \   00001124   0020               MOVS     R0,#+0
   \   00001126   0090               STR      R0,[SP, #+0]
   \   00001128   7821               MOVS     R1,#+120
   \   0000112A   0020               MOVS     R0,#+0
   \   0000112C   03B4               PUSH     {R0,R1}
   \   0000112E   0F21               MOVS     R1,#+15
   \   00001130   0520               MOVS     R0,#+5
   \   00001132   03B4               PUSH     {R0,R1}
   \   00001134   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00001136   2D0E               LSRS     R5,R5,#+24
   \   00001138   2D1D               ADDS     R5,R5,#+4
   \   0000113A   2B00               MOVS     R3,R5
   \   0000113C   E41C               ADDS     R4,R4,#+3
   \   0000113E   2200               MOVS     R2,R4
   \   00001140   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00001142   120E               LSRS     R2,R2,#+24
   \   00001144   0221               MOVS     R1,#+2
   \   00001146   06A8               ADD      R0,SP,#+24
   \   00001148   ........           BL       Label
   \   0000114C   06B0               ADD      SP,SP,#+24
   2839          
   2840                      break;   
   2841                      
   2842                      
   2843                    }
   2844                    
   2845                    
   2846                    
   2847                }//_______________________________________________________________________
   \                     ??PaintProc_36:
   \   0000114E   03B0               ADD      SP,SP,#+12
   \   00001150   F0BC               POP      {R4-R7}
   \   00001152   01BC               POP      {R0}
   \   00001154   0047               BX       R0               ;; return
   \   00001156   C046               Nop      
   \                     ??PaintProc_57:
   \   00001158   ........           DC32     ProcTime_graf
   \   0000115C   73000000           DC8      0x73, 0x00, 0x00, 0x00
   \   00001160   ........           DC32     ProcClock_graf
   \   00001164   ........           DC32     ShortDate
   \   00001168   ........           DC32     ProcDay_graf
   \   0000116C   ........           DC32     g_leng
   \   00001170   ........           DC32     DeyOfWeekStr
   \   00001174   ........           DC32     ProcGetAnal_graf
   \   00001178   ........           DC32     ProcSetAnal_graf
   2848                
   2849                
   2850                
   2851          
   2852          //lader **************************************************************************************************************

   \                                 In section .bss, align 1
   2853                char LaderLine=0;
   \                     LaderLine:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   2854                char LaderCol=0;
   \                     LaderCol:
   \   00000000                      DS8 1
   2855                //*----------------------------------------------------------------------------
   2856                #define MaxRow 3
   2857                #define MaxCol 3
   2858                

   \                                 In section Debug.txt, align 4, keep-with-next
   2859                void Lader_Paint(void)
   2860                {  
   \                     Lader_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   2861                  
   2862                char txt[5];
   2863                 
   2864                
   2865                 List_Paint("Program ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   81A0               ADR      R0,??Lader_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   7E48               LDR      R0,??Lader_Paint_0+0x4  ;; `?<Constant "Program ">`
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   2866          
   2867                //siatka
   2868                
   2869                for (char i=0; i<4; i++)
   \   0000002E   0024               MOVS     R4,#+0
   \   00000030   44E0               B        ??Lader_Paint_1
   2870                {
   2871                    H_line(3,44+i*21,58,2);   
   \                     ??Lader_Paint_2:
   \   00000032   0223               MOVS     R3,#+2
   \   00000034   3A22               MOVS     R2,#+58
   \   00000036   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000038   240E               LSRS     R4,R4,#+24
   \   0000003A   1521               MOVS     R1,#+21
   \   0000003C   6143               MULS     R1,R4,R1
   \   0000003E   2C31               ADDS     R1,R1,#+44
   \   00000040   0320               MOVS     R0,#+3
   \   00000042   ........           BL       H_line
   2872                    if ((LaderCol==0) && (i<3))
   \   00000046   7748               LDR      R0,??Lader_Paint_0+0x8  ;; LaderCol
   \   00000048   0078               LDRB     R0,[R0, #+0]
   \   0000004A   0028               CMP      R0,#+0
   \   0000004C   35D1               BNE      ??Lader_Paint_3
   \   0000004E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000050   240E               LSRS     R4,R4,#+24
   \   00000052   032C               CMP      R4,#+3
   \   00000054   31D2               BCS      ??Lader_Paint_3
   2873                    { 
   2874                       CharToStr(LaderLine+3-i, txt, 3); //(char Value, char *Vstring, char ill);
   \   00000056   0322               MOVS     R2,#+3
   \   00000058   01A9               ADD      R1,SP,#+4
   \   0000005A   7348               LDR      R0,??Lader_Paint_0+0xC  ;; LaderLine
   \   0000005C   0078               LDRB     R0,[R0, #+0]
   \   0000005E   C01C               ADDS     R0,R0,#+3
   \   00000060   001B               SUBS     R0,R0,R4
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   ........           BL       CharToStr
   2875                       Label(txt,0,3,51+i*21,4,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   6921               MOVS     R1,#+105
   \   00000072   1020               MOVS     R0,#+16
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   1721               MOVS     R1,#+23
   \   00000078   0420               MOVS     R0,#+4
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000007E   240E               LSRS     R4,R4,#+24
   \   00000080   1523               MOVS     R3,#+21
   \   00000082   6343               MULS     R3,R4,R3
   \   00000084   3333               ADDS     R3,R3,#+51
   \   00000086   0322               MOVS     R2,#+3
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   07A8               ADD      R0,SP,#+28
   \   0000008C   ........           BL       Label
   \   00000090   06B0               ADD      SP,SP,#+24
   2876          
   2877                       H_line(17,50+i*21,5,1); 
   \   00000092   0123               MOVS     R3,#+1
   \   00000094   0522               MOVS     R2,#+5
   \   00000096   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000098   240E               LSRS     R4,R4,#+24
   \   0000009A   1521               MOVS     R1,#+21
   \   0000009C   6143               MULS     R1,R4,R1
   \   0000009E   3231               ADDS     R1,R1,#+50
   \   000000A0   1120               MOVS     R0,#+17
   \   000000A2   ........           BL       H_line
   2878                       H_line(17,51+i*21,5,1); 
   \   000000A6   0123               MOVS     R3,#+1
   \   000000A8   0522               MOVS     R2,#+5
   \   000000AA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000AC   240E               LSRS     R4,R4,#+24
   \   000000AE   1521               MOVS     R1,#+21
   \   000000B0   6143               MULS     R1,R4,R1
   \   000000B2   3331               ADDS     R1,R1,#+51
   \   000000B4   1120               MOVS     R0,#+17
   \   000000B6   ........           BL       H_line
   2879                    }
   2880                }
   \                     ??Lader_Paint_3:
   \   000000BA   641C               ADDS     R4,R4,#+1
   \                     ??Lader_Paint_1:
   \   000000BC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000BE   240E               LSRS     R4,R4,#+24
   \   000000C0   042C               CMP      R4,#+4
   \   000000C2   B6D3               BCC      ??Lader_Paint_2
   2881                for (char i=0; i<4; i++)
   \   000000C4   0024               MOVS     R4,#+0
   \   000000C6   0CE0               B        ??Lader_Paint_4
   2882                {
   2883                    V_line(1+i*20,44,64,2);         
   \                     ??Lader_Paint_5:
   \   000000C8   0223               MOVS     R3,#+2
   \   000000CA   4022               MOVS     R2,#+64
   \   000000CC   2C21               MOVS     R1,#+44
   \   000000CE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D0   240E               LSRS     R4,R4,#+24
   \   000000D2   1420               MOVS     R0,#+20
   \   000000D4   6043               MULS     R0,R4,R0
   \   000000D6   401C               ADDS     R0,R0,#+1
   \   000000D8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000DA   000E               LSRS     R0,R0,#+24
   \   000000DC   ........           BL       V_line
   2884                }
   \   000000E0   641C               ADDS     R4,R4,#+1
   \                     ??Lader_Paint_4:
   \   000000E2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000E4   240E               LSRS     R4,R4,#+24
   \   000000E6   042C               CMP      R4,#+4
   \   000000E8   EED3               BCC      ??Lader_Paint_5
   2885                //------koniec siatki
   2886                
   2887                
   2888                if (LaderCol==0)
   \   000000EA   4E48               LDR      R0,??Lader_Paint_0+0x8  ;; LaderCol
   \   000000EC   0078               LDRB     R0,[R0, #+0]
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   11D1               BNE      ??Lader_Paint_6
   2889                {
   2890                   V_line(16,44,64,1);
   \   000000F2   0123               MOVS     R3,#+1
   \   000000F4   4022               MOVS     R2,#+64
   \   000000F6   2C21               MOVS     R1,#+44
   \   000000F8   1020               MOVS     R0,#+16
   \   000000FA   ........           BL       V_line
   2891                   V_line(17,44,64,1);  
   \   000000FE   0123               MOVS     R3,#+1
   \   00000100   4022               MOVS     R2,#+64
   \   00000102   2C21               MOVS     R1,#+44
   \   00000104   1120               MOVS     R0,#+17
   \   00000106   ........           BL       V_line
   2892                   V_line(18,44,64,1); 
   \   0000010A   0123               MOVS     R3,#+1
   \   0000010C   4022               MOVS     R2,#+64
   \   0000010E   2C21               MOVS     R1,#+44
   \   00000110   1220               MOVS     R0,#+18
   \   00000112   ........           BL       V_line
   2893                }
   2894                
   2895                CharToStr(LaderCol, txt, 2); //(char Value, char *Vstring, char ill);
   \                     ??Lader_Paint_6:
   \   00000116   0222               MOVS     R2,#+2
   \   00000118   01A9               ADD      R1,SP,#+4
   \   0000011A   4248               LDR      R0,??Lader_Paint_0+0x8  ;; LaderCol
   \   0000011C   0078               LDRB     R0,[R0, #+0]
   \   0000011E   ........           BL       CharToStr
   2896                Label(txt,0,8,35,8,23,16,105,0);
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   6921               MOVS     R1,#+105
   \   0000012A   1020               MOVS     R0,#+16
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   1721               MOVS     R1,#+23
   \   00000130   0820               MOVS     R0,#+8
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   2323               MOVS     R3,#+35
   \   00000136   0822               MOVS     R2,#+8
   \   00000138   0021               MOVS     R1,#+0
   \   0000013A   07A8               ADD      R0,SP,#+28
   \   0000013C   ........           BL       Label
   \   00000140   06B0               ADD      SP,SP,#+24
   2897                  
   2898                
   2899                  //Label(Speech[g_leng].UruchomienieSter,0,2,j+(Label_move*2)-8,15,8,16,96,0); break;
   2900                   
   2901                      char LabelButt[2];
   2902                      LabelButt[1]=0;
   \   00000142   6846               MOV      R0,SP
   \   00000144   0021               MOVS     R1,#+0
   \   00000146   4170               STRB     R1,[R0, #+1]
   2903                      LabelButt[0]=30;
   \   00000148   6846               MOV      R0,SP
   \   0000014A   1E21               MOVS     R1,#+30
   \   0000014C   0170               STRB     R1,[R0, #+0]
   2904                      Button(LabelButt,22,23,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000014E   82B0               SUB      SP,SP,#+8
   \   00000150   1220               MOVS     R0,#+18
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   1423               MOVS     R3,#+20
   \   00000156   1722               MOVS     R2,#+23
   \   00000158   1621               MOVS     R1,#+22
   \   0000015A   02A8               ADD      R0,SP,#+8
   \   0000015C   ........           BL       Button
   \   00000160   02B0               ADD      SP,SP,#+8
   2905                      LabelButt[0]=31;
   \   00000162   6846               MOV      R0,SP
   \   00000164   1F21               MOVS     R1,#+31
   \   00000166   0170               STRB     R1,[R0, #+0]
   2906                      Button(LabelButt,22,3,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000168   82B0               SUB      SP,SP,#+8
   \   0000016A   1220               MOVS     R0,#+18
   \   0000016C   0090               STR      R0,[SP, #+0]
   \   0000016E   1423               MOVS     R3,#+20
   \   00000170   0322               MOVS     R2,#+3
   \   00000172   1621               MOVS     R1,#+22
   \   00000174   02A8               ADD      R0,SP,#+8
   \   00000176   ........           BL       Button
   \   0000017A   02B0               ADD      SP,SP,#+8
   2907                      LabelButt[0]='>';
   \   0000017C   6846               MOV      R0,SP
   \   0000017E   3E21               MOVS     R1,#+62
   \   00000180   0170               STRB     R1,[R0, #+0]
   2908                      Button(LabelButt,42,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   1220               MOVS     R0,#+18
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   1423               MOVS     R3,#+20
   \   0000018A   0D22               MOVS     R2,#+13
   \   0000018C   2A21               MOVS     R1,#+42
   \   0000018E   02A8               ADD      R0,SP,#+8
   \   00000190   ........           BL       Button
   \   00000194   02B0               ADD      SP,SP,#+8
   2909                      LabelButt[0]='<';
   \   00000196   6846               MOV      R0,SP
   \   00000198   3C21               MOVS     R1,#+60
   \   0000019A   0170               STRB     R1,[R0, #+0]
   2910                      Button(LabelButt,2,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000019C   82B0               SUB      SP,SP,#+8
   \   0000019E   1220               MOVS     R0,#+18
   \   000001A0   0090               STR      R0,[SP, #+0]
   \   000001A2   1423               MOVS     R3,#+20
   \   000001A4   0D22               MOVS     R2,#+13
   \   000001A6   0221               MOVS     R1,#+2
   \   000001A8   02A8               ADD      R0,SP,#+8
   \   000001AA   ........           BL       Button
   \   000001AE   02B0               ADD      SP,SP,#+8
   2911                     
   2912                  char row, col;
   2913          
   2914          
   2915              
   2916                  row=LaderLine; 
   \   000001B0   1D48               LDR      R0,??Lader_Paint_0+0xC  ;; LaderLine
   \   000001B2   0478               LDRB     R4,[R0, #+0]
   2917                  for (int j=(MaxRow-1); j>=0; j--)
   \   000001B4   0225               MOVS     R5,#+2
   \   000001B6   26E0               B        ??Lader_Paint_7
   2918                  {
   2919                    
   2920                    col=LaderCol;
   2921                    for (int i=0; i<MaxCol; i++)
   2922                    {
   2923                      
   2924                      //if (LaderCol) PaintProc(21+j*20,44+i*21,&gProg.Line[row].Proc[col-1]);
   2925                      if ((LaderCol) || ((LaderCol==0)&&(i!=0)))  PaintProc(1+i*20,44+j*21,&gProg.Line[row].Proc[col-1]);
   \                     ??Lader_Paint_8:
   \   000001B8   1A48               LDR      R0,??Lader_Paint_0+0x8  ;; LaderCol
   \   000001BA   0078               LDRB     R0,[R0, #+0]
   \   000001BC   0028               CMP      R0,#+0
   \   000001BE   05D1               BNE      ??Lader_Paint_9
   \   000001C0   1848               LDR      R0,??Lader_Paint_0+0x8  ;; LaderCol
   \   000001C2   0078               LDRB     R0,[R0, #+0]
   \   000001C4   0028               CMP      R0,#+0
   \   000001C6   18D1               BNE      ??Lader_Paint_10
   \   000001C8   002F               CMP      R7,#+0
   \   000001CA   16D0               BEQ      ??Lader_Paint_10
   \                     ??Lader_Paint_9:
   \   000001CC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001CE   360E               LSRS     R6,R6,#+24
   \   000001D0   1820               MOVS     R0,#+24
   \   000001D2   7043               MULS     R0,R6,R0
   \   000001D4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001D6   240E               LSRS     R4,R4,#+24
   \   000001D8   F021               MOVS     R1,#+240
   \   000001DA   6143               MULS     R1,R4,R1
   \   000001DC   134A               LDR      R2,??Lader_Paint_0+0x10  ;; gProg
   \   000001DE   5118               ADDS     R1,R2,R1
   \   000001E0   0A18               ADDS     R2,R1,R0
   \   000001E2   1521               MOVS     R1,#+21
   \   000001E4   6943               MULS     R1,R5,R1
   \   000001E6   2C31               ADDS     R1,R1,#+44
   \   000001E8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001EA   090E               LSRS     R1,R1,#+24
   \   000001EC   1420               MOVS     R0,#+20
   \   000001EE   7843               MULS     R0,R7,R0
   \   000001F0   401C               ADDS     R0,R0,#+1
   \   000001F2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001F4   000E               LSRS     R0,R0,#+24
   \   000001F6   ........           BL       PaintProc
   2926                      col++;
   \                     ??Lader_Paint_10:
   \   000001FA   761C               ADDS     R6,R6,#+1
   2927                    }
   \   000001FC   7F1C               ADDS     R7,R7,#+1
   \                     ??Lader_Paint_11:
   \   000001FE   032F               CMP      R7,#+3
   \   00000200   DADB               BLT      ??Lader_Paint_8
   2928                    row++;
   \   00000202   641C               ADDS     R4,R4,#+1
   \   00000204   6D1E               SUBS     R5,R5,#+1
   \                     ??Lader_Paint_7:
   \   00000206   002D               CMP      R5,#+0
   \   00000208   03D4               BMI      ??Lader_Paint_12
   \   0000020A   0648               LDR      R0,??Lader_Paint_0+0x8  ;; LaderCol
   \   0000020C   0678               LDRB     R6,[R0, #+0]
   \   0000020E   0027               MOVS     R7,#+0
   \   00000210   F5E7               B        ??Lader_Paint_11
   2929                  }
   2930                  
   2931                }//________________________________________________________________________
   \                     ??Lader_Paint_12:
   \   00000212   03B0               ADD      SP,SP,#+12
   \   00000214   F0BC               POP      {R4-R7}
   \   00000216   01BC               POP      {R0}
   \   00000218   0047               BX       R0               ;; return
   \   0000021A   C046               Nop      
   \                     ??Lader_Paint_0:
   \   0000021C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000220   ........           DC32     `?<Constant "Program ">`
   \   00000224   ........           DC32     LaderCol
   \   00000228   ........           DC32     LaderLine
   \   0000022C   ........           DC32     gProg
   2932          
   2933              
   2934                //*-----------------------------------------------------------------------------

   \                                 In section .bss, align 8
   2935                long long int Touch_EventTime;
   \                     Touch_EventTime:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
   2936                char ChoseRow, ChoseCol;
   \                     ChoseRow:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ChoseCol:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   2937                void Lader_Event(void)
   2938                {
   \                     Lader_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   2939                 char LabelButt[2];
   2940                      LabelButt[1]=0;
   \   00000002   6846               MOV      R0,SP
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   4170               STRB     R1,[R0, #+1]
   2941                      LabelButt[0]='>';
   \   00000008   6846               MOV      R0,SP
   \   0000000A   3E21               MOVS     R1,#+62
   \   0000000C   0170               STRB     R1,[R0, #+0]
   2942                      if ((Button(LabelButt,42,13,20,18)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol<=MaxPrcInLine-MaxCol))
   \   0000000E   82B0               SUB      SP,SP,#+8
   \   00000010   1220               MOVS     R0,#+18
   \   00000012   0090               STR      R0,[SP, #+0]
   \   00000014   1423               MOVS     R3,#+20
   \   00000016   0D22               MOVS     R2,#+13
   \   00000018   2A21               MOVS     R1,#+42
   \   0000001A   02A8               ADD      R0,SP,#+8
   \   0000001C   ........           BL       Button
   \   00000020   02B0               ADD      SP,SP,#+8
   \   00000022   0028               CMP      R0,#+0
   \   00000024   26D0               BEQ      ??Lader_Event_0
   \   00000026   C248               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   00000028   0CC8               LDM      R0!,{R2,R3}
   \   0000002A   0838               SUBS     R0,R0,#+8
   \   0000002C   0020               MOVS     R0,#+0
   \   0000002E   C832               ADDS     R2,R2,#+200
   \   00000030   4341               ADCS     R3,R3,R0
   \   00000032   C048               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   8B42               CMP      R3,R1
   \   00000038   0CD3               BCC      ??Lader_Event_2
   \   0000003A   01D8               BHI      ??Lader_Event_3
   \   0000003C   8242               CMP      R2,R0
   \   0000003E   09D3               BCC      ??Lader_Event_2
   \                     ??Lader_Event_3:
   \   00000040   BC48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000042   0CC8               LDM      R0!,{R2,R3}
   \   00000044   0838               SUBS     R0,R0,#+8
   \   00000046   BA48               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   00000048   03C8               LDM      R0!,{R0,R1}
   \   0000004A   8B42               CMP      R3,R1
   \   0000004C   12D8               BHI      ??Lader_Event_0
   \   0000004E   01D3               BCC      ??Lader_Event_4
   \   00000050   8242               CMP      R2,R0
   \   00000052   0FD2               BCS      ??Lader_Event_0
   \                     ??Lader_Event_4:
   \                     ??Lader_Event_2:
   \   00000054   B848               LDR      R0,??Lader_Event_1+0x8  ;; LaderCol
   \   00000056   0078               LDRB     R0,[R0, #+0]
   \   00000058   0828               CMP      R0,#+8
   \   0000005A   0BD2               BCS      ??Lader_Event_0
   2943                      {
   2944                        Touch_EventTime=g_counter;
   \   0000005C   B44A               LDR      R2,??Lader_Event_1  ;; Touch_EventTime
   \   0000005E   B548               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000060   03C8               LDM      R0!,{R0,R1}
   \   00000062   03C2               STM      R2!,{R0,R1}
   \   00000064   083A               SUBS     R2,R2,#+8
   2945                        LaderCol++;    //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000066   B448               LDR      R0,??Lader_Event_1+0x8  ;; LaderCol
   \   00000068   B349               LDR      R1,??Lader_Event_1+0x8  ;; LaderCol
   \   0000006A   0978               LDRB     R1,[R1, #+0]
   \   0000006C   491C               ADDS     R1,R1,#+1
   \   0000006E   0170               STRB     R1,[R0, #+0]
   2946                        MenuPaint();
   \   00000070   ........           BL       MenuPaint
   2947                      }
   2948                      LabelButt[0]='<';
   \                     ??Lader_Event_0:
   \   00000074   6846               MOV      R0,SP
   \   00000076   3C21               MOVS     R1,#+60
   \   00000078   0170               STRB     R1,[R0, #+0]
   2949                      if ((Button(LabelButt,2,13,20,18))  && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol>0))            
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   1220               MOVS     R0,#+18
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   1423               MOVS     R3,#+20
   \   00000082   0D22               MOVS     R2,#+13
   \   00000084   0221               MOVS     R1,#+2
   \   00000086   02A8               ADD      R0,SP,#+8
   \   00000088   ........           BL       Button
   \   0000008C   02B0               ADD      SP,SP,#+8
   \   0000008E   0028               CMP      R0,#+0
   \   00000090   26D0               BEQ      ??Lader_Event_5
   \   00000092   A748               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   00000094   0CC8               LDM      R0!,{R2,R3}
   \   00000096   0838               SUBS     R0,R0,#+8
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   C832               ADDS     R2,R2,#+200
   \   0000009C   4341               ADCS     R3,R3,R0
   \   0000009E   A548               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000000A0   03C8               LDM      R0!,{R0,R1}
   \   000000A2   8B42               CMP      R3,R1
   \   000000A4   0CD3               BCC      ??Lader_Event_6
   \   000000A6   01D8               BHI      ??Lader_Event_7
   \   000000A8   8242               CMP      R2,R0
   \   000000AA   09D3               BCC      ??Lader_Event_6
   \                     ??Lader_Event_7:
   \   000000AC   A148               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000000AE   0CC8               LDM      R0!,{R2,R3}
   \   000000B0   0838               SUBS     R0,R0,#+8
   \   000000B2   9F48               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   000000B4   03C8               LDM      R0!,{R0,R1}
   \   000000B6   8B42               CMP      R3,R1
   \   000000B8   12D8               BHI      ??Lader_Event_5
   \   000000BA   01D3               BCC      ??Lader_Event_8
   \   000000BC   8242               CMP      R2,R0
   \   000000BE   0FD2               BCS      ??Lader_Event_5
   \                     ??Lader_Event_8:
   \                     ??Lader_Event_6:
   \   000000C0   9D48               LDR      R0,??Lader_Event_1+0x8  ;; LaderCol
   \   000000C2   0078               LDRB     R0,[R0, #+0]
   \   000000C4   0128               CMP      R0,#+1
   \   000000C6   0BD3               BCC      ??Lader_Event_5
   2950                      {
   2951                        Touch_EventTime=g_counter;
   \   000000C8   994A               LDR      R2,??Lader_Event_1  ;; Touch_EventTime
   \   000000CA   9A48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000000CC   03C8               LDM      R0!,{R0,R1}
   \   000000CE   03C2               STM      R2!,{R0,R1}
   \   000000D0   083A               SUBS     R2,R2,#+8
   2952                        LaderCol--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000D2   9948               LDR      R0,??Lader_Event_1+0x8  ;; LaderCol
   \   000000D4   9849               LDR      R1,??Lader_Event_1+0x8  ;; LaderCol
   \   000000D6   0978               LDRB     R1,[R1, #+0]
   \   000000D8   491E               SUBS     R1,R1,#+1
   \   000000DA   0170               STRB     R1,[R0, #+0]
   2953                        MenuPaint();
   \   000000DC   ........           BL       MenuPaint
   2954                      } 
   2955                      
   2956                      LabelButt[0]=30;
   \                     ??Lader_Event_5:
   \   000000E0   6846               MOV      R0,SP
   \   000000E2   1E21               MOVS     R1,#+30
   \   000000E4   0170               STRB     R1,[R0, #+0]
   2957                      if ((Button(LabelButt,22,23,20,18))  && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine>0))            
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   1220               MOVS     R0,#+18
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   1423               MOVS     R3,#+20
   \   000000EE   1722               MOVS     R2,#+23
   \   000000F0   1621               MOVS     R1,#+22
   \   000000F2   02A8               ADD      R0,SP,#+8
   \   000000F4   ........           BL       Button
   \   000000F8   02B0               ADD      SP,SP,#+8
   \   000000FA   0028               CMP      R0,#+0
   \   000000FC   26D0               BEQ      ??Lader_Event_9
   \   000000FE   8C48               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   00000100   0CC8               LDM      R0!,{R2,R3}
   \   00000102   0838               SUBS     R0,R0,#+8
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   3232               ADDS     R2,R2,#+50
   \   00000108   4341               ADCS     R3,R3,R0
   \   0000010A   8A48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000010C   03C8               LDM      R0!,{R0,R1}
   \   0000010E   8B42               CMP      R3,R1
   \   00000110   0CD3               BCC      ??Lader_Event_10
   \   00000112   01D8               BHI      ??Lader_Event_11
   \   00000114   8242               CMP      R2,R0
   \   00000116   09D3               BCC      ??Lader_Event_10
   \                     ??Lader_Event_11:
   \   00000118   8648               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000011A   0CC8               LDM      R0!,{R2,R3}
   \   0000011C   0838               SUBS     R0,R0,#+8
   \   0000011E   8448               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   00000120   03C8               LDM      R0!,{R0,R1}
   \   00000122   8B42               CMP      R3,R1
   \   00000124   12D8               BHI      ??Lader_Event_9
   \   00000126   01D3               BCC      ??Lader_Event_12
   \   00000128   8242               CMP      R2,R0
   \   0000012A   0FD2               BCS      ??Lader_Event_9
   \                     ??Lader_Event_12:
   \                     ??Lader_Event_10:
   \   0000012C   9348               LDR      R0,??Lader_Event_13  ;; LaderLine
   \   0000012E   0078               LDRB     R0,[R0, #+0]
   \   00000130   0128               CMP      R0,#+1
   \   00000132   0BD3               BCC      ??Lader_Event_9
   2958                      {
   2959                        Touch_EventTime=g_counter;
   \   00000134   7E4A               LDR      R2,??Lader_Event_1  ;; Touch_EventTime
   \   00000136   7F48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000138   03C8               LDM      R0!,{R0,R1}
   \   0000013A   03C2               STM      R2!,{R0,R1}
   \   0000013C   083A               SUBS     R2,R2,#+8
   2960                        LaderLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000013E   8F48               LDR      R0,??Lader_Event_13  ;; LaderLine
   \   00000140   8E49               LDR      R1,??Lader_Event_13  ;; LaderLine
   \   00000142   0978               LDRB     R1,[R1, #+0]
   \   00000144   491E               SUBS     R1,R1,#+1
   \   00000146   0170               STRB     R1,[R0, #+0]
   2961                        MenuPaint();
   \   00000148   ........           BL       MenuPaint
   2962                      } 
   2963                      
   2964                      LabelButt[0]=31;
   \                     ??Lader_Event_9:
   \   0000014C   6846               MOV      R0,SP
   \   0000014E   1F21               MOVS     R1,#+31
   \   00000150   0170               STRB     R1,[R0, #+0]
   2965                      if ((Button(LabelButt,22,3,20,18)) && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine<MaxPrcLines-MaxRow))
   \   00000152   82B0               SUB      SP,SP,#+8
   \   00000154   1220               MOVS     R0,#+18
   \   00000156   0090               STR      R0,[SP, #+0]
   \   00000158   1423               MOVS     R3,#+20
   \   0000015A   0322               MOVS     R2,#+3
   \   0000015C   1621               MOVS     R1,#+22
   \   0000015E   02A8               ADD      R0,SP,#+8
   \   00000160   ........           BL       Button
   \   00000164   02B0               ADD      SP,SP,#+8
   \   00000166   0028               CMP      R0,#+0
   \   00000168   26D0               BEQ      ??Lader_Event_14
   \   0000016A   7148               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   0000016C   0CC8               LDM      R0!,{R2,R3}
   \   0000016E   0838               SUBS     R0,R0,#+8
   \   00000170   0020               MOVS     R0,#+0
   \   00000172   3232               ADDS     R2,R2,#+50
   \   00000174   4341               ADCS     R3,R3,R0
   \   00000176   6F48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000178   03C8               LDM      R0!,{R0,R1}
   \   0000017A   8B42               CMP      R3,R1
   \   0000017C   0CD3               BCC      ??Lader_Event_15
   \   0000017E   01D8               BHI      ??Lader_Event_16
   \   00000180   8242               CMP      R2,R0
   \   00000182   09D3               BCC      ??Lader_Event_15
   \                     ??Lader_Event_16:
   \   00000184   6B48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000186   0CC8               LDM      R0!,{R2,R3}
   \   00000188   0838               SUBS     R0,R0,#+8
   \   0000018A   6948               LDR      R0,??Lader_Event_1  ;; Touch_EventTime
   \   0000018C   03C8               LDM      R0!,{R0,R1}
   \   0000018E   8B42               CMP      R3,R1
   \   00000190   12D8               BHI      ??Lader_Event_14
   \   00000192   01D3               BCC      ??Lader_Event_17
   \   00000194   8242               CMP      R2,R0
   \   00000196   0FD2               BCS      ??Lader_Event_14
   \                     ??Lader_Event_17:
   \                     ??Lader_Event_15:
   \   00000198   7848               LDR      R0,??Lader_Event_13  ;; LaderLine
   \   0000019A   0078               LDRB     R0,[R0, #+0]
   \   0000019C   C528               CMP      R0,#+197
   \   0000019E   0BD2               BCS      ??Lader_Event_14
   2966                      {
   2967                        Touch_EventTime=g_counter;
   \   000001A0   634A               LDR      R2,??Lader_Event_1  ;; Touch_EventTime
   \   000001A2   6448               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000001A4   03C8               LDM      R0!,{R0,R1}
   \   000001A6   03C2               STM      R2!,{R0,R1}
   \   000001A8   083A               SUBS     R2,R2,#+8
   2968                        LaderLine++;    
   \   000001AA   7448               LDR      R0,??Lader_Event_13  ;; LaderLine
   \   000001AC   7349               LDR      R1,??Lader_Event_13  ;; LaderLine
   \   000001AE   0978               LDRB     R1,[R1, #+0]
   \   000001B0   491C               ADDS     R1,R1,#+1
   \   000001B2   0170               STRB     R1,[R0, #+0]
   2969                        MenuPaint();
   \   000001B4   ........           BL       MenuPaint
   2970                      }
   2971                      
   2972          
   2973                  //zdarzenie typu down "X"
   2974                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??Lader_Event_14:
   \   000001B8   7148               LDR      R0,??Lader_Event_13+0x4  ;; X_down
   \   000001BA   0021               MOVS     R1,#+0
   \   000001BC   405E               LDRSH    R0,[R0, R1]
   \   000001BE   2F28               CMP      R0,#+47
   \   000001C0   38DB               BLT      ??Lader_Event_18
   \   000001C2   6F48               LDR      R0,??Lader_Event_13+0x4  ;; X_down
   \   000001C4   0021               MOVS     R1,#+0
   \   000001C6   405E               LDRSH    R0,[R0, R1]
   \   000001C8   3F28               CMP      R0,#+63
   \   000001CA   33DA               BGE      ??Lader_Event_18
   \   000001CC   6D48               LDR      R0,??Lader_Event_13+0x8  ;; Y_down
   \   000001CE   0021               MOVS     R1,#+0
   \   000001D0   405E               LDRSH    R0,[R0, R1]
   \   000001D2   7128               CMP      R0,#+113
   \   000001D4   2EDB               BLT      ??Lader_Event_18
   \   000001D6   6B48               LDR      R0,??Lader_Event_13+0x8  ;; Y_down
   \   000001D8   0021               MOVS     R1,#+0
   \   000001DA   405E               LDRSH    R0,[R0, R1]
   \   000001DC   7F28               CMP      R0,#+127
   \   000001DE   29DA               BGE      ??Lader_Event_18
   2975                  {
   2976                    //MenuPaint();
   2977                    H_line(49,114,10,0);
   \   000001E0   0023               MOVS     R3,#+0
   \   000001E2   0A22               MOVS     R2,#+10
   \   000001E4   7221               MOVS     R1,#+114
   \   000001E6   3120               MOVS     R0,#+49
   \   000001E8   ........           BL       H_line
   2978                    H_line(49,123,10,0); 
   \   000001EC   0023               MOVS     R3,#+0
   \   000001EE   0A22               MOVS     R2,#+10
   \   000001F0   7B21               MOVS     R1,#+123
   \   000001F2   3120               MOVS     R0,#+49
   \   000001F4   ........           BL       H_line
   2979                    V_line(49,114,10,0); 
   \   000001F8   0023               MOVS     R3,#+0
   \   000001FA   0A22               MOVS     R2,#+10
   \   000001FC   7221               MOVS     R1,#+114
   \   000001FE   3120               MOVS     R0,#+49
   \   00000200   ........           BL       V_line
   2980                    V_line(58,114,10,0); 
   \   00000204   0023               MOVS     R3,#+0
   \   00000206   0A22               MOVS     R2,#+10
   \   00000208   7221               MOVS     R1,#+114
   \   0000020A   3A20               MOVS     R0,#+58
   \   0000020C   ........           BL       V_line
   2981                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000210   5D48               LDR      R0,??Lader_Event_13+0xC  ;; 0x13d7e9
   \   00000212   0078               LDRB     R0,[R0, #+0]
   \   00000214   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000216   000E               LSRS     R0,R0,#+24
   \   00000218   0028               CMP      R0,#+0
   \   0000021A   0BD1               BNE      ??Lader_Event_18
   \   0000021C   5B48               LDR      R0,??Lader_Event_13+0x10  ;; 0xfffff430
   \   0000021E   8021               MOVS     R1,#+128
   \   00000220   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000222   0160               STR      R1,[R0, #+0]
   \   00000224   5A4A               LDR      R2,??Lader_Event_13+0x14  ;; ButtonBipCounter
   \   00000226   4348               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000228   03C8               LDM      R0!,{R0,R1}
   \   0000022A   0023               MOVS     R3,#+0
   \   0000022C   0830               ADDS     R0,R0,#+8
   \   0000022E   5941               ADCS     R1,R1,R3
   \   00000230   03C2               STM      R2!,{R0,R1}
   \   00000232   083A               SUBS     R2,R2,#+8
   2982                    
   2983                  }
   2984            
   2985                  
   2986          
   2987                  
   2988                  //edycja procedury
   2989                  char row, col;
   2990                  
   2991                  row=LaderLine; 
   \                     ??Lader_Event_18:
   \   00000234   5148               LDR      R0,??Lader_Event_13  ;; LaderLine
   \   00000236   0778               LDRB     R7,[R0, #+0]
   2992                  for (int j=(MaxRow-1); j>=0; j--)
   \   00000238   0224               MOVS     R4,#+2
   \   0000023A   01E0               B        ??Lader_Event_19
   2993                  {          
   2994                    col=LaderCol;
   2995                    for (int i=0; i<MaxCol; i++)
   2996                    {
   2997                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>44+j*21) && (Y_up<44+(j+1)*21))                    //"X"
   2998                        {
   2999                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   3000                          
   3001                          ChoseRow=row;
   3002                          ChoseCol=col-1;
   3003                          if (ChoseCol!=0xff)  //je¿eli nie zerowa kolumna
   3004                          {
   3005                          MenuLevel=MenuLevel*10+1;
   3006                          }else{
   3007                          MenuLevel=MenuLevel*10+2;  
   3008                          }
   3009                          
   3010                          MenuPaint();
   3011                         
   3012                        }  
   3013                      col++;
   3014                    }
   3015                    row++;
   \                     ??Lader_Event_20:
   \   0000023C   7F1C               ADDS     R7,R7,#+1
   \   0000023E   641E               SUBS     R4,R4,#+1
   \                     ??Lader_Event_19:
   \   00000240   002C               CMP      R4,#+0
   \   00000242   53D4               BMI      ??Lader_Event_21
   \   00000244   3C48               LDR      R0,??Lader_Event_1+0x8  ;; LaderCol
   \   00000246   0578               LDRB     R5,[R0, #+0]
   \   00000248   0026               MOVS     R6,#+0
   \   0000024A   0AE0               B        ??Lader_Event_22
   \                     ??Lader_Event_23:
   \   0000024C   5148               LDR      R0,??Lader_Event_13+0x18  ;; MenuLevel
   \   0000024E   5149               LDR      R1,??Lader_Event_13+0x18  ;; MenuLevel
   \   00000250   0968               LDR      R1,[R1, #+0]
   \   00000252   0A22               MOVS     R2,#+10
   \   00000254   5143               MULS     R1,R2,R1
   \   00000256   891C               ADDS     R1,R1,#+2
   \   00000258   0160               STR      R1,[R0, #+0]
   \                     ??Lader_Event_24:
   \   0000025A   ........           BL       MenuPaint
   \                     ??Lader_Event_25:
   \   0000025E   6D1C               ADDS     R5,R5,#+1
   \   00000260   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Event_22:
   \   00000262   032E               CMP      R6,#+3
   \   00000264   EADA               BGE      ??Lader_Event_20
   \   00000266   1420               MOVS     R0,#+20
   \   00000268   7043               MULS     R0,R6,R0
   \   0000026A   401C               ADDS     R0,R0,#+1
   \   0000026C   4A49               LDR      R1,??Lader_Event_13+0x1C  ;; X_up
   \   0000026E   0022               MOVS     R2,#+0
   \   00000270   895E               LDRSH    R1,[R1, R2]
   \   00000272   8842               CMP      R0,R1
   \   00000274   F3DA               BGE      ??Lader_Event_25
   \   00000276   4848               LDR      R0,??Lader_Event_13+0x1C  ;; X_up
   \   00000278   0021               MOVS     R1,#+0
   \   0000027A   405E               LDRSH    R0,[R0, R1]
   \   0000027C   1421               MOVS     R1,#+20
   \   0000027E   7143               MULS     R1,R6,R1
   \   00000280   1531               ADDS     R1,R1,#+21
   \   00000282   8842               CMP      R0,R1
   \   00000284   EBDA               BGE      ??Lader_Event_25
   \   00000286   1520               MOVS     R0,#+21
   \   00000288   6043               MULS     R0,R4,R0
   \   0000028A   2C30               ADDS     R0,R0,#+44
   \   0000028C   4349               LDR      R1,??Lader_Event_13+0x20  ;; Y_up
   \   0000028E   0022               MOVS     R2,#+0
   \   00000290   895E               LDRSH    R1,[R1, R2]
   \   00000292   8842               CMP      R0,R1
   \   00000294   E3DA               BGE      ??Lader_Event_25
   \   00000296   4148               LDR      R0,??Lader_Event_13+0x20  ;; Y_up
   \   00000298   0021               MOVS     R1,#+0
   \   0000029A   405E               LDRSH    R0,[R0, R1]
   \   0000029C   1521               MOVS     R1,#+21
   \   0000029E   6143               MULS     R1,R4,R1
   \   000002A0   4131               ADDS     R1,R1,#+65
   \   000002A2   8842               CMP      R0,R1
   \   000002A4   DBDA               BGE      ??Lader_Event_25
   \   000002A6   3848               LDR      R0,??Lader_Event_13+0xC  ;; 0x13d7e9
   \   000002A8   0078               LDRB     R0,[R0, #+0]
   \   000002AA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002AC   000E               LSRS     R0,R0,#+24
   \   000002AE   0028               CMP      R0,#+0
   \   000002B0   0BD1               BNE      ??Lader_Event_26
   \   000002B2   3648               LDR      R0,??Lader_Event_13+0x10  ;; 0xfffff430
   \   000002B4   8021               MOVS     R1,#+128
   \   000002B6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000002B8   0160               STR      R1,[R0, #+0]
   \   000002BA   354A               LDR      R2,??Lader_Event_13+0x14  ;; ButtonBipCounter
   \   000002BC   1D48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000002BE   03C8               LDM      R0!,{R0,R1}
   \   000002C0   0023               MOVS     R3,#+0
   \   000002C2   0830               ADDS     R0,R0,#+8
   \   000002C4   5941               ADCS     R1,R1,R3
   \   000002C6   03C2               STM      R2!,{R0,R1}
   \   000002C8   083A               SUBS     R2,R2,#+8
   \                     ??Lader_Event_26:
   \   000002CA   3548               LDR      R0,??Lader_Event_13+0x24  ;; ChoseRow
   \   000002CC   0770               STRB     R7,[R0, #+0]
   \   000002CE   3548               LDR      R0,??Lader_Event_13+0x28  ;; ChoseCol
   \   000002D0   691E               SUBS     R1,R5,#+1
   \   000002D2   0170               STRB     R1,[R0, #+0]
   \   000002D4   3348               LDR      R0,??Lader_Event_13+0x28  ;; ChoseCol
   \   000002D6   0078               LDRB     R0,[R0, #+0]
   \   000002D8   FF28               CMP      R0,#+255
   \   000002DA   B7D0               BEQ      ??Lader_Event_23
   \   000002DC   2D48               LDR      R0,??Lader_Event_13+0x18  ;; MenuLevel
   \   000002DE   2D49               LDR      R1,??Lader_Event_13+0x18  ;; MenuLevel
   \   000002E0   0968               LDR      R1,[R1, #+0]
   \   000002E2   0A22               MOVS     R2,#+10
   \   000002E4   5143               MULS     R1,R2,R1
   \   000002E6   491C               ADDS     R1,R1,#+1
   \   000002E8   0160               STR      R1,[R0, #+0]
   \   000002EA   B6E7               B        ??Lader_Event_24
   3016                  }
   3017                  
   3018                   
   3019          
   3020          
   3021              
   3022                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??Lader_Event_21:
   \   000002EC   2A48               LDR      R0,??Lader_Event_13+0x1C  ;; X_up
   \   000002EE   0021               MOVS     R1,#+0
   \   000002F0   405E               LDRSH    R0,[R0, R1]
   \   000002F2   2F28               CMP      R0,#+47
   \   000002F4   3DDB               BLT      ??Lader_Event_27
   \   000002F6   2848               LDR      R0,??Lader_Event_13+0x1C  ;; X_up
   \   000002F8   0021               MOVS     R1,#+0
   \   000002FA   405E               LDRSH    R0,[R0, R1]
   \   000002FC   3F28               CMP      R0,#+63
   \   000002FE   38DA               BGE      ??Lader_Event_27
   \   00000300   2648               LDR      R0,??Lader_Event_13+0x20  ;; Y_up
   \   00000302   0021               MOVS     R1,#+0
   \   00000304   405E               LDRSH    R0,[R0, R1]
   \   00000306   7128               CMP      R0,#+113
   \   00000308   33DB               BLT      ??Lader_Event_27
   \   0000030A   2448               LDR      R0,??Lader_Event_13+0x20  ;; Y_up
   \   0000030C   0021               MOVS     R1,#+0
   \   0000030E   405E               LDRSH    R0,[R0, R1]
   \   00000310   7F28               CMP      R0,#+127
   \   00000312   2EDA               BGE      ??Lader_Event_27
   3023                  {
   3024                    Rej_poz=0;
   \   00000314   2448               LDR      R0,??Lader_Event_13+0x2C  ;; Rej_poz
   \   00000316   0021               MOVS     R1,#+0
   \   00000318   0160               STR      R1,[R0, #+0]
   3025                    if (ProgramChange) 
   \   0000031A   2448               LDR      R0,??Lader_Event_13+0x30  ;; ProgramChange
   \   0000031C   0078               LDRB     R0,[R0, #+0]
   \   0000031E   0028               CMP      R0,#+0
   \   00000320   0CD0               BEQ      ??Lader_Event_28
   3026                    {
   3027                     
   3028                      MenuLevel=(MenuLevel*10+0);
   \   00000322   1C48               LDR      R0,??Lader_Event_13+0x18  ;; MenuLevel
   \   00000324   1B49               LDR      R1,??Lader_Event_13+0x18  ;; MenuLevel
   \   00000326   0968               LDR      R1,[R1, #+0]
   \   00000328   0A22               MOVS     R2,#+10
   \   0000032A   5143               MULS     R1,R2,R1
   \   0000032C   0160               STR      R1,[R0, #+0]
   \   0000032E   0CE0               B        ??Lader_Event_29
   \                     ??Lader_Event_1:
   \   00000330   ........           DC32     Touch_EventTime
   \   00000334   ........           DC32     g_counter
   \   00000338   ........           DC32     LaderCol
   3029                       
   3030                      
   3031                    }else{
   3032                      MenuLevel=(MenuLevel/10);
   \                     ??Lader_Event_28:
   \   0000033C   1548               LDR      R0,??Lader_Event_13+0x18  ;; MenuLevel
   \   0000033E   0068               LDR      R0,[R0, #+0]
   \   00000340   0A21               MOVS     R1,#+10
   \   00000342   ........           BL       __aeabi_idivmod
   \   00000346   1349               LDR      R1,??Lader_Event_13+0x18  ;; MenuLevel
   \   00000348   0860               STR      R0,[R1, #+0]
   3033                    }
   3034                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \                     ??Lader_Event_29:
   \   0000034A   0F48               LDR      R0,??Lader_Event_13+0xC  ;; 0x13d7e9
   \   0000034C   0078               LDRB     R0,[R0, #+0]
   \   0000034E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000350   000E               LSRS     R0,R0,#+24
   \   00000352   0028               CMP      R0,#+0
   \   00000354   0BD1               BNE      ??Lader_Event_30
   \   00000356   0D48               LDR      R0,??Lader_Event_13+0x10  ;; 0xfffff430
   \   00000358   8021               MOVS     R1,#+128
   \   0000035A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000035C   0160               STR      R1,[R0, #+0]
   \   0000035E   0C4A               LDR      R2,??Lader_Event_13+0x14  ;; ButtonBipCounter
   \   00000360   1348               LDR      R0,??Lader_Event_13+0x34  ;; g_counter
   \   00000362   03C8               LDM      R0!,{R0,R1}
   \   00000364   0023               MOVS     R3,#+0
   \   00000366   0830               ADDS     R0,R0,#+8
   \   00000368   5941               ADCS     R1,R1,R3
   \   0000036A   03C2               STM      R2!,{R0,R1}
   \   0000036C   083A               SUBS     R2,R2,#+8
   3035                    MenuPaint();
   \                     ??Lader_Event_30:
   \   0000036E   ........           BL       MenuPaint
   3036                  }  
   3037            
   3038               
   3039          
   3040                }//________________________________________________________________________
   \                     ??Lader_Event_27:
   \   00000372   01B0               ADD      SP,SP,#+4
   \   00000374   F0BC               POP      {R4-R7}
   \   00000376   01BC               POP      {R0}
   \   00000378   0047               BX       R0               ;; return
   \   0000037A   C046               Nop      
   \                     ??Lader_Event_13:
   \   0000037C   ........           DC32     LaderLine
   \   00000380   ........           DC32     X_down
   \   00000384   ........           DC32     Y_down
   \   00000388   E9D71300           DC32     0x13d7e9
   \   0000038C   30F4FFFF           DC32     0xfffff430
   \   00000390   ........           DC32     ButtonBipCounter
   \   00000394   ........           DC32     MenuLevel
   \   00000398   ........           DC32     X_up
   \   0000039C   ........           DC32     Y_up
   \   000003A0   ........           DC32     ChoseRow
   \   000003A4   ........           DC32     ChoseCol
   \   000003A8   ........           DC32     Rej_poz
   \   000003AC   ........           DC32     ProgramChange
   \   000003B0   ........           DC32     g_counter
   3041              

   \                                 In section Debug.txt, align 4, keep-with-next
   3042          void WybProc(char col, char row)
   3043          {
   \                     WybProc:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   3044             row=2-row;
   \   00000006   0220               MOVS     R0,#+2
   \   00000008   451B               SUBS     R5,R0,R5
   3045             H_line(4+col*19,50+row*19,17,1);  
   \   0000000A   0123               MOVS     R3,#+1
   \   0000000C   1122               MOVS     R2,#+17
   \   0000000E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000010   2D0E               LSRS     R5,R5,#+24
   \   00000012   1321               MOVS     R1,#+19
   \   00000014   6943               MULS     R1,R5,R1
   \   00000016   3231               ADDS     R1,R1,#+50
   \   00000018   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000001A   240E               LSRS     R4,R4,#+24
   \   0000001C   1320               MOVS     R0,#+19
   \   0000001E   6043               MULS     R0,R4,R0
   \   00000020   001D               ADDS     R0,R0,#+4
   \   00000022   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000024   000E               LSRS     R0,R0,#+24
   \   00000026   ........           BL       H_line
   3046             H_line(3+col*19,50+17+row*19,17,1); 
   \   0000002A   0123               MOVS     R3,#+1
   \   0000002C   1122               MOVS     R2,#+17
   \   0000002E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000030   2D0E               LSRS     R5,R5,#+24
   \   00000032   1321               MOVS     R1,#+19
   \   00000034   6943               MULS     R1,R5,R1
   \   00000036   4331               ADDS     R1,R1,#+67
   \   00000038   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000003A   240E               LSRS     R4,R4,#+24
   \   0000003C   1320               MOVS     R0,#+19
   \   0000003E   6043               MULS     R0,R4,R0
   \   00000040   C01C               ADDS     R0,R0,#+3
   \   00000042   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000044   000E               LSRS     R0,R0,#+24
   \   00000046   ........           BL       H_line
   3047             V_line(3+col*19,50+row*19,18,1); 
   \   0000004A   0123               MOVS     R3,#+1
   \   0000004C   1222               MOVS     R2,#+18
   \   0000004E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000050   2D0E               LSRS     R5,R5,#+24
   \   00000052   1321               MOVS     R1,#+19
   \   00000054   6943               MULS     R1,R5,R1
   \   00000056   3231               ADDS     R1,R1,#+50
   \   00000058   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000005A   240E               LSRS     R4,R4,#+24
   \   0000005C   1320               MOVS     R0,#+19
   \   0000005E   6043               MULS     R0,R4,R0
   \   00000060   C01C               ADDS     R0,R0,#+3
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   ........           BL       V_line
   3048             V_line(3+17+col*19,50+row*19,18,1); 
   \   0000006A   0123               MOVS     R3,#+1
   \   0000006C   1222               MOVS     R2,#+18
   \   0000006E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000070   2D0E               LSRS     R5,R5,#+24
   \   00000072   1320               MOVS     R0,#+19
   \   00000074   4543               MULS     R5,R0,R5
   \   00000076   3235               ADDS     R5,R5,#+50
   \   00000078   2900               MOVS     R1,R5
   \   0000007A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000007C   240E               LSRS     R4,R4,#+24
   \   0000007E   1320               MOVS     R0,#+19
   \   00000080   4443               MULS     R4,R0,R4
   \   00000082   1434               ADDS     R4,R4,#+20
   \   00000084   2000               MOVS     R0,R4
   \   00000086   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   ........           BL       V_line
   3049          }
   \   0000008E   01B0               ADD      SP,SP,#+4
   \   00000090   30BC               POP      {R4,R5}
   \   00000092   01BC               POP      {R0}
   \   00000094   0047               BX       R0               ;; return
   3050          

   \                                 In section .data, align 1
   3051          char SetTimeCell=1;
   \                     SetTimeCell:
   \   00000000   01                 DC8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   3052          void Procedure_Paint(void)
   3053                { 
   \                     Procedure_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   88B0               SUB      SP,SP,#+32
   3054                  
   3055                  
   3056                  List_Paint(Speech[g_leng].Procedura,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   A3A0               ADR      R0,??Procedure_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   A048               LDR      R0,??Procedure_Paint_0+0x4  ;; 0x2ee
   \   0000002A   A14C               LDR      R4,??Procedure_Paint_0+0x8  ;; g_leng
   \   0000002C   2468               LDR      R4,[R4, #+0]
   \   0000002E   A14D               LDR      R5,??Procedure_Paint_0+0xC  ;; 0xa7d
   \   00000030   6C43               MULS     R4,R5,R4
   \   00000032   A14D               LDR      R5,??Procedure_Paint_0+0x10  ;; Speech
   \   00000034   2C19               ADDS     R4,R5,R4
   \   00000036   2018               ADDS     R0,R4,R0
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   3057                
   3058                   char txt[5];
   3059                   //CharToStr(LaderLine+3-i, txt, 2); //(char Value, char *Vstring, char ill);
   3060          
   3061                   
   3062                   for (char i=1; i<4; i++)
   \   0000003E   0124               MOVS     R4,#+1
   \   00000040   1EE0               B        ??Procedure_Paint_1
   3063                   {
   3064                    H_line(3,49+i*19,18,3);  
   \                     ??Procedure_Paint_2:
   \   00000042   0323               MOVS     R3,#+3
   \   00000044   1222               MOVS     R2,#+18
   \   00000046   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000048   240E               LSRS     R4,R4,#+24
   \   0000004A   1321               MOVS     R1,#+19
   \   0000004C   6143               MULS     R1,R4,R1
   \   0000004E   3131               ADDS     R1,R1,#+49
   \   00000050   0320               MOVS     R0,#+3
   \   00000052   ........           BL       H_line
   3065                    H_line(22,49+i*19,18,3);  
   \   00000056   0323               MOVS     R3,#+3
   \   00000058   1222               MOVS     R2,#+18
   \   0000005A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000005C   240E               LSRS     R4,R4,#+24
   \   0000005E   1321               MOVS     R1,#+19
   \   00000060   6143               MULS     R1,R4,R1
   \   00000062   3131               ADDS     R1,R1,#+49
   \   00000064   1620               MOVS     R0,#+22
   \   00000066   ........           BL       H_line
   3066                    H_line(41,49+i*19,18,3);  
   \   0000006A   0323               MOVS     R3,#+3
   \   0000006C   1222               MOVS     R2,#+18
   \   0000006E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000070   240E               LSRS     R4,R4,#+24
   \   00000072   1321               MOVS     R1,#+19
   \   00000074   6143               MULS     R1,R4,R1
   \   00000076   3131               ADDS     R1,R1,#+49
   \   00000078   2920               MOVS     R0,#+41
   \   0000007A   ........           BL       H_line
   3067                    }
   \   0000007E   641C               ADDS     R4,R4,#+1
   \                     ??Procedure_Paint_1:
   \   00000080   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000082   240E               LSRS     R4,R4,#+24
   \   00000084   042C               CMP      R4,#+4
   \   00000086   DCD3               BCC      ??Procedure_Paint_2
   3068                    for (char i=0; i<4; i++)
   \   00000088   0024               MOVS     R4,#+0
   \   0000008A   18E0               B        ??Procedure_Paint_3
   3069                    {
   3070                    V_line(2+i*19,69,18,3);  
   \                     ??Procedure_Paint_4:
   \   0000008C   0323               MOVS     R3,#+3
   \   0000008E   1222               MOVS     R2,#+18
   \   00000090   4521               MOVS     R1,#+69
   \   00000092   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000094   240E               LSRS     R4,R4,#+24
   \   00000096   1320               MOVS     R0,#+19
   \   00000098   6043               MULS     R0,R4,R0
   \   0000009A   801C               ADDS     R0,R0,#+2
   \   0000009C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009E   000E               LSRS     R0,R0,#+24
   \   000000A0   ........           BL       V_line
   3071                    V_line(2+i*19,88,18,3);  
   \   000000A4   0323               MOVS     R3,#+3
   \   000000A6   1222               MOVS     R2,#+18
   \   000000A8   5821               MOVS     R1,#+88
   \   000000AA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000AC   240E               LSRS     R4,R4,#+24
   \   000000AE   1320               MOVS     R0,#+19
   \   000000B0   6043               MULS     R0,R4,R0
   \   000000B2   801C               ADDS     R0,R0,#+2
   \   000000B4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B6   000E               LSRS     R0,R0,#+24
   \   000000B8   ........           BL       V_line
   3072                    }
   \   000000BC   641C               ADDS     R4,R4,#+1
   \                     ??Procedure_Paint_3:
   \   000000BE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C0   240E               LSRS     R4,R4,#+24
   \   000000C2   042C               CMP      R4,#+4
   \   000000C4   E2D3               BCC      ??Procedure_Paint_4
   3073                   
   3074                   CopyToCanvasPoint((char*)ProcSt_iko, 24, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0820               MOVS     R0,#+8
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   1023               MOVS     R3,#+16
   \   000000CE   5D22               MOVS     R2,#+93
   \   000000D0   1821               MOVS     R1,#+24
   \   000000D2   7A48               LDR      R0,??Procedure_Paint_0+0x14  ;; ProcSt_iko
   \   000000D4   ........           BL       CopyToCanvasPoint
   \   000000D8   02B0               ADD      SP,SP,#+8
   3075                   CopyToCanvasPoint((char*)ProcSet_iko, 43, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0820               MOVS     R0,#+8
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   1023               MOVS     R3,#+16
   \   000000E2   5D22               MOVS     R2,#+93
   \   000000E4   2B21               MOVS     R1,#+43
   \   000000E6   7648               LDR      R0,??Procedure_Paint_0+0x18  ;; ProcSet_iko
   \   000000E8   ........           BL       CopyToCanvasPoint
   \   000000EC   02B0               ADD      SP,SP,#+8
   3076                   CopyToCanvasPoint((char*)ProcLog_iko, 5, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0820               MOVS     R0,#+8
   \   000000F2   0090               STR      R0,[SP, #+0]
   \   000000F4   0F23               MOVS     R3,#+15
   \   000000F6   4922               MOVS     R2,#+73
   \   000000F8   0521               MOVS     R1,#+5
   \   000000FA   7248               LDR      R0,??Procedure_Paint_0+0x1C  ;; ProcLog_iko
   \   000000FC   ........           BL       CopyToCanvasPoint
   \   00000100   02B0               ADD      SP,SP,#+8
   3077                   CopyToCanvasPoint((char*)ProcTime_iko, 25, 72,13,12);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000102   82B0               SUB      SP,SP,#+8
   \   00000104   0C20               MOVS     R0,#+12
   \   00000106   0090               STR      R0,[SP, #+0]
   \   00000108   0D23               MOVS     R3,#+13
   \   0000010A   4822               MOVS     R2,#+72
   \   0000010C   1921               MOVS     R1,#+25
   \   0000010E   6E48               LDR      R0,??Procedure_Paint_0+0x20  ;; ProcTime_iko
   \   00000110   ........           BL       CopyToCanvasPoint
   \   00000114   02B0               ADD      SP,SP,#+8
   3078                   CopyToCanvasPoint((char*)ProcAnl_iko, 43, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000116   82B0               SUB      SP,SP,#+8
   \   00000118   0820               MOVS     R0,#+8
   \   0000011A   0090               STR      R0,[SP, #+0]
   \   0000011C   0F23               MOVS     R3,#+15
   \   0000011E   4922               MOVS     R2,#+73
   \   00000120   2B21               MOVS     R1,#+43
   \   00000122   6A48               LDR      R0,??Procedure_Paint_0+0x24  ;; ProcAnl_iko
   \   00000124   ........           BL       CopyToCanvasPoint
   \   00000128   02B0               ADD      SP,SP,#+8
   3079                   
   3080          
   3081                           
   3082                   
   3083                   //jaka procedura
   3084                   
   3085                   _Procedure Prc=(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   0000012A   02A8               ADD      R0,SP,#+8
   \   0000012C   6849               LDR      R1,??Procedure_Paint_0+0x28  ;; ChoseCol
   \   0000012E   0978               LDRB     R1,[R1, #+0]
   \   00000130   1822               MOVS     R2,#+24
   \   00000132   5143               MULS     R1,R2,R1
   \   00000134   674A               LDR      R2,??Procedure_Paint_0+0x2C  ;; ChoseRow
   \   00000136   1278               LDRB     R2,[R2, #+0]
   \   00000138   F023               MOVS     R3,#+240
   \   0000013A   5A43               MULS     R2,R3,R2
   \   0000013C   664B               LDR      R3,??Procedure_Paint_0+0x30  ;; gProg
   \   0000013E   9A18               ADDS     R2,R3,R2
   \   00000140   5118               ADDS     R1,R2,R1
   \   00000142   1831               ADDS     R1,R1,#+24
   \   00000144   1822               MOVS     R2,#+24
   \   00000146   ........           BL       __aeabi_memcpy4
   3086                   
   3087                   
   3088                      if  (Prc.Type==None)
   \   0000014A   6846               MOV      R0,SP
   \   0000014C   007A               LDRB     R0,[R0, #+8]
   \   0000014E   0028               CMP      R0,#+0
   \   00000150   03D1               BNE      ??Procedure_Paint_5
   3089                      {
   3090                        WybProc(0,0);
   \   00000152   0021               MOVS     R1,#+0
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   ........           BL       WybProc
   3091                      }
   3092          
   3093                      
   3094                      if  ((Prc.Type>ProcLogStart) && (Prc.Type<ProcLogStop))
   \                     ??Procedure_Paint_5:
   \   0000015A   6846               MOV      R0,SP
   \   0000015C   007A               LDRB     R0,[R0, #+8]
   \   0000015E   0228               CMP      R0,#+2
   \   00000160   29D3               BCC      ??Procedure_Paint_6
   \   00000162   6846               MOV      R0,SP
   \   00000164   007A               LDRB     R0,[R0, #+8]
   \   00000166   0D28               CMP      R0,#+13
   \   00000168   25D2               BCS      ??Procedure_Paint_6
   3095                      { 
   3096                        WybProc(0,1);
   \   0000016A   0121               MOVS     R1,#+1
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   ........           BL       WybProc
   3097                        txt[1]=0;
   \   00000172   6846               MOV      R0,SP
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   4170               STRB     R1,[R0, #+1]
   3098                        txt[0]='>';
   \   00000178   6846               MOV      R0,SP
   \   0000017A   3E21               MOVS     R1,#+62
   \   0000017C   0170               STRB     R1,[R0, #+0]
   3099                        Button(txt,43,39,18,18);
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   1220               MOVS     R0,#+18
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   1223               MOVS     R3,#+18
   \   00000186   2722               MOVS     R2,#+39
   \   00000188   2B21               MOVS     R1,#+43
   \   0000018A   02A8               ADD      R0,SP,#+8
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   3100                        txt[0]='<';
   \   00000192   6846               MOV      R0,SP
   \   00000194   3C21               MOVS     R1,#+60
   \   00000196   0170               STRB     R1,[R0, #+0]
   3101                        Button(txt,2,39,18,18);
   \   00000198   82B0               SUB      SP,SP,#+8
   \   0000019A   1220               MOVS     R0,#+18
   \   0000019C   0090               STR      R0,[SP, #+0]
   \   0000019E   1223               MOVS     R3,#+18
   \   000001A0   2722               MOVS     R2,#+39
   \   000001A2   0221               MOVS     R1,#+2
   \   000001A4   02A8               ADD      R0,SP,#+8
   \   000001A6   ........           BL       Button
   \   000001AA   02B0               ADD      SP,SP,#+8
   3102                        PaintProc(21, 40, &Prc);
   \   000001AC   02AA               ADD      R2,SP,#+8
   \   000001AE   2821               MOVS     R1,#+40
   \   000001B0   1520               MOVS     R0,#+21
   \   000001B2   ........           BL       PaintProc
   3103                      }
   3104                      
   3105                      
   3106                      
   3107                      if  (((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) || 
   3108                           ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))||
   3109                           ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))||
   3110                           ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   3111                           ) 
   \                     ??Procedure_Paint_6:
   \   000001B6   6846               MOV      R0,SP
   \   000001B8   007A               LDRB     R0,[R0, #+8]
   \   000001BA   1428               CMP      R0,#+20
   \   000001BC   03D3               BCC      ??Procedure_Paint_7
   \   000001BE   6846               MOV      R0,SP
   \   000001C0   007A               LDRB     R0,[R0, #+8]
   \   000001C2   1928               CMP      R0,#+25
   \   000001C4   1BD3               BCC      ??Procedure_Paint_8
   \                     ??Procedure_Paint_7:
   \   000001C6   6846               MOV      R0,SP
   \   000001C8   007A               LDRB     R0,[R0, #+8]
   \   000001CA   2028               CMP      R0,#+32
   \   000001CC   03D3               BCC      ??Procedure_Paint_9
   \   000001CE   6846               MOV      R0,SP
   \   000001D0   007A               LDRB     R0,[R0, #+8]
   \   000001D2   2828               CMP      R0,#+40
   \   000001D4   13D3               BCC      ??Procedure_Paint_8
   \                     ??Procedure_Paint_9:
   \   000001D6   6846               MOV      R0,SP
   \   000001D8   007A               LDRB     R0,[R0, #+8]
   \   000001DA   2D28               CMP      R0,#+45
   \   000001DC   03D3               BCC      ??Procedure_Paint_10
   \   000001DE   6846               MOV      R0,SP
   \   000001E0   007A               LDRB     R0,[R0, #+8]
   \   000001E2   3028               CMP      R0,#+48
   \   000001E4   0BD3               BCC      ??Procedure_Paint_8
   \                     ??Procedure_Paint_10:
   \   000001E6   6846               MOV      R0,SP
   \   000001E8   007A               LDRB     R0,[R0, #+8]
   \   000001EA   3728               CMP      R0,#+55
   \   000001EC   01D2               BCS      .+6
   \   000001EE   00F03DFC           BL       ??Procedure_Paint_11
   \   000001F2   6846               MOV      R0,SP
   \   000001F4   007A               LDRB     R0,[R0, #+8]
   \   000001F6   4028               CMP      R0,#+64
   \   000001F8   01D3               BCC      .+6
   \   000001FA   00F037FC           BL       ??Procedure_Paint_11
   3112                          
   3113                      { 
   3114                        txt[1]=0;
   \                     ??Procedure_Paint_8:
   \   000001FE   6846               MOV      R0,SP
   \   00000200   0021               MOVS     R1,#+0
   \   00000202   4170               STRB     R1,[R0, #+1]
   3115                        txt[0]='>';
   \   00000204   6846               MOV      R0,SP
   \   00000206   3E21               MOVS     R1,#+62
   \   00000208   0170               STRB     R1,[R0, #+0]
   3116                        if (Prc.Type>ProcStStart) Button(txt,43,46,18,18);
   \   0000020A   6846               MOV      R0,SP
   \   0000020C   007A               LDRB     R0,[R0, #+8]
   \   0000020E   1428               CMP      R0,#+20
   \   00000210   09D3               BCC      ??Procedure_Paint_12
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   1220               MOVS     R0,#+18
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   1223               MOVS     R3,#+18
   \   0000021A   2E22               MOVS     R2,#+46
   \   0000021C   2B21               MOVS     R1,#+43
   \   0000021E   02A8               ADD      R0,SP,#+8
   \   00000220   ........           BL       Button
   \   00000224   02B0               ADD      SP,SP,#+8
   3117                        
   3118                        
   3119                        if (
   3120                           (Prc.Type==ProcConstAnal) ||
   3121                           (Prc.Type==ProcLim) ||
   3122                           (Prc.Type==ProcEven) || 
   3123                           (Prc.Type==ProcPlus) || 
   3124                           (Prc.Type==ProcMinus) || 
   3125                           (Prc.Type==ProcMul) ||
   3126                           (Prc.Type==ProcDiv)
   3127                           )
   \                     ??Procedure_Paint_12:
   \   00000226   6846               MOV      R0,SP
   \   00000228   007A               LDRB     R0,[R0, #+8]
   \   0000022A   3728               CMP      R0,#+55
   \   0000022C   17D0               BEQ      ??Procedure_Paint_13
   \   0000022E   6846               MOV      R0,SP
   \   00000230   007A               LDRB     R0,[R0, #+8]
   \   00000232   3A28               CMP      R0,#+58
   \   00000234   13D0               BEQ      ??Procedure_Paint_13
   \   00000236   6846               MOV      R0,SP
   \   00000238   007A               LDRB     R0,[R0, #+8]
   \   0000023A   3B28               CMP      R0,#+59
   \   0000023C   0FD0               BEQ      ??Procedure_Paint_13
   \   0000023E   6846               MOV      R0,SP
   \   00000240   007A               LDRB     R0,[R0, #+8]
   \   00000242   3C28               CMP      R0,#+60
   \   00000244   0BD0               BEQ      ??Procedure_Paint_13
   \   00000246   6846               MOV      R0,SP
   \   00000248   007A               LDRB     R0,[R0, #+8]
   \   0000024A   3D28               CMP      R0,#+61
   \   0000024C   07D0               BEQ      ??Procedure_Paint_13
   \   0000024E   6846               MOV      R0,SP
   \   00000250   007A               LDRB     R0,[R0, #+8]
   \   00000252   3E28               CMP      R0,#+62
   \   00000254   03D0               BEQ      ??Procedure_Paint_13
   \   00000256   6846               MOV      R0,SP
   \   00000258   007A               LDRB     R0,[R0, #+8]
   \   0000025A   3F28               CMP      R0,#+63
   \   0000025C   05D1               BNE      ??Procedure_Paint_14
   3128                        {
   3129                          PaintProc(20, 38, &Prc);
   \                     ??Procedure_Paint_13:
   \   0000025E   02AA               ADD      R2,SP,#+8
   \   00000260   2621               MOVS     R1,#+38
   \   00000262   1420               MOVS     R0,#+20
   \   00000264   ........           BL       PaintProc
   \   00000268   4DE0               B        ??Procedure_Paint_15
   3130                        }else if 
   3131                          (
   3132                           (Prc.Type==ProcGetReg) || 
   3133                           (Prc.Type==ProcSetReg)  
   3134                          )
   \                     ??Procedure_Paint_14:
   \   0000026A   6846               MOV      R0,SP
   \   0000026C   007A               LDRB     R0,[R0, #+8]
   \   0000026E   3828               CMP      R0,#+56
   \   00000270   03D0               BEQ      ??Procedure_Paint_16
   \   00000272   6846               MOV      R0,SP
   \   00000274   007A               LDRB     R0,[R0, #+8]
   \   00000276   3928               CMP      R0,#+57
   \   00000278   30D1               BNE      ??Procedure_Paint_17
   3135                          
   3136                        {  
   3137                          PaintProc(20, 41, &Prc);
   \                     ??Procedure_Paint_16:
   \   0000027A   02AA               ADD      R2,SP,#+8
   \   0000027C   2921               MOVS     R1,#+41
   \   0000027E   1420               MOVS     R0,#+20
   \   00000280   ........           BL       PaintProc
   3138                          Label(" ",0,3,55,15,39,16,105,0);
   \   00000284   82B0               SUB      SP,SP,#+8
   \   00000286   0020               MOVS     R0,#+0
   \   00000288   0090               STR      R0,[SP, #+0]
   \   0000028A   6921               MOVS     R1,#+105
   \   0000028C   1020               MOVS     R0,#+16
   \   0000028E   03B4               PUSH     {R0,R1}
   \   00000290   2721               MOVS     R1,#+39
   \   00000292   0F20               MOVS     R0,#+15
   \   00000294   03B4               PUSH     {R0,R1}
   \   00000296   3723               MOVS     R3,#+55
   \   00000298   0322               MOVS     R2,#+3
   \   0000029A   0021               MOVS     R1,#+0
   \   0000029C   02A0               ADR      R0,??Procedure_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000029E   ........           BL       Label
   \   000002A2   06B0               ADD      SP,SP,#+24
   \   000002A4   2FE0               B        ??Procedure_Paint_15
   \   000002A6   C046               Nop      
   \                     ??Procedure_Paint_0:
   \   000002A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002AC   EE020000           DC32     0x2ee
   \   000002B0   ........           DC32     g_leng
   \   000002B4   7D0A0000           DC32     0xa7d
   \   000002B8   ........           DC32     Speech
   \   000002BC   ........           DC32     ProcSt_iko
   \   000002C0   ........           DC32     ProcSet_iko
   \   000002C4   ........           DC32     ProcLog_iko
   \   000002C8   ........           DC32     ProcTime_iko
   \   000002CC   ........           DC32     ProcAnl_iko
   \   000002D0   ........           DC32     ChoseCol
   \   000002D4   ........           DC32     ChoseRow
   \   000002D8   ........           DC32     gProg
   3139                        }else{
   3140                          PaintProc(20, 43, &Prc);
   \                     ??Procedure_Paint_17:
   \   000002DC   02AA               ADD      R2,SP,#+8
   \   000002DE   2B21               MOVS     R1,#+43
   \   000002E0   1420               MOVS     R0,#+20
   \   000002E2   ........           BL       PaintProc
   3141                          Label(" ",0,3,55,15,39,16,105,0);
   \   000002E6   82B0               SUB      SP,SP,#+8
   \   000002E8   0020               MOVS     R0,#+0
   \   000002EA   0090               STR      R0,[SP, #+0]
   \   000002EC   6921               MOVS     R1,#+105
   \   000002EE   1020               MOVS     R0,#+16
   \   000002F0   03B4               PUSH     {R0,R1}
   \   000002F2   2721               MOVS     R1,#+39
   \   000002F4   0F20               MOVS     R0,#+15
   \   000002F6   03B4               PUSH     {R0,R1}
   \   000002F8   3723               MOVS     R3,#+55
   \   000002FA   0322               MOVS     R2,#+3
   \   000002FC   0021               MOVS     R1,#+0
   \   000002FE   D7A0               ADR      R0,??Procedure_Paint_18  ;; 0x20, 0x00, 0x00, 0x00
   \   00000300   ........           BL       Label
   \   00000304   06B0               ADD      SP,SP,#+24
   3142                        }
   3143                        char Htmp=58;  //po³o¿enie napisu
   \                     ??Procedure_Paint_15:
   \   00000306   3A23               MOVS     R3,#+58
   3144                        
   3145                        switch (Prc.Type)
   \   00000308   6846               MOV      R0,SP
   \   0000030A   007A               LDRB     R0,[R0, #+8]
   \   0000030C   1428               CMP      R0,#+20
   \   0000030E   43D0               BEQ      ??Procedure_Paint_19
   \   00000310   1528               CMP      R0,#+21
   \   00000312   5AD0               BEQ      ??Procedure_Paint_20
   \   00000314   1628               CMP      R0,#+22
   \   00000316   72D0               BEQ      ??Procedure_Paint_21
   \   00000318   1828               CMP      R0,#+24
   \   0000031A   00D1               BNE      .+4
   \   0000031C   88E0               B        ??Procedure_Paint_22
   \   0000031E   2028               CMP      R0,#+32
   \   00000320   00D1               BNE      .+4
   \   00000322   9FE0               B        ??Procedure_Paint_23
   \   00000324   2128               CMP      R0,#+33
   \   00000326   00D1               BNE      .+4
   \   00000328   B5E0               B        ??Procedure_Paint_24
   \   0000032A   2228               CMP      R0,#+34
   \   0000032C   00D1               BNE      .+4
   \   0000032E   CBE0               B        ??Procedure_Paint_25
   \   00000330   2328               CMP      R0,#+35
   \   00000332   00D1               BNE      .+4
   \   00000334   E1E0               B        ??Procedure_Paint_26
   \   00000336   2428               CMP      R0,#+36
   \   00000338   00D1               BNE      .+4
   \   0000033A   F7E0               B        ??Procedure_Paint_27
   \   0000033C   2528               CMP      R0,#+37
   \   0000033E   00D1               BNE      .+4
   \   00000340   0DE1               B        ??Procedure_Paint_28
   \   00000342   2628               CMP      R0,#+38
   \   00000344   00D1               BNE      .+4
   \   00000346   23E1               B        ??Procedure_Paint_29
   \   00000348   2728               CMP      R0,#+39
   \   0000034A   00D1               BNE      .+4
   \   0000034C   3AE1               B        ??Procedure_Paint_30
   \   0000034E   2D28               CMP      R0,#+45
   \   00000350   00D1               BNE      .+4
   \   00000352   50E1               B        ??Procedure_Paint_31
   \   00000354   2E28               CMP      R0,#+46
   \   00000356   00D1               BNE      .+4
   \   00000358   66E1               B        ??Procedure_Paint_32
   \   0000035A   2F28               CMP      R0,#+47
   \   0000035C   00D1               BNE      .+4
   \   0000035E   99E1               B        ??Procedure_Paint_33
   \   00000360   3728               CMP      R0,#+55
   \   00000362   00D1               BNE      .+4
   \   00000364   AFE1               B        ??Procedure_Paint_34
   \   00000366   3828               CMP      R0,#+56
   \   00000368   00D1               BNE      .+4
   \   0000036A   BEE1               B        ??Procedure_Paint_35
   \   0000036C   3928               CMP      R0,#+57
   \   0000036E   00D1               BNE      .+4
   \   00000370   CDE1               B        ??Procedure_Paint_36
   \   00000372   3A28               CMP      R0,#+58
   \   00000374   00D1               BNE      .+4
   \   00000376   DCE1               B        ??Procedure_Paint_37
   \   00000378   3B28               CMP      R0,#+59
   \   0000037A   00D1               BNE      .+4
   \   0000037C   EBE1               B        ??Procedure_Paint_38
   \   0000037E   3C28               CMP      R0,#+60
   \   00000380   00D1               BNE      .+4
   \   00000382   FAE1               B        ??Procedure_Paint_39
   \   00000384   3D28               CMP      R0,#+61
   \   00000386   00D1               BNE      .+4
   \   00000388   09E2               B        ??Procedure_Paint_40
   \   0000038A   3E28               CMP      R0,#+62
   \   0000038C   00D1               BNE      .+4
   \   0000038E   18E2               B        ??Procedure_Paint_41
   \   00000390   3F28               CMP      R0,#+63
   \   00000392   00D1               BNE      .+4
   \   00000394   27E2               B        ??Procedure_Paint_42
   \   00000396   37E2               B        ??Procedure_Paint_43
   3146                        {
   3147                          case ProcStI: Label(Speech[g_leng].StanWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_19:
   \   00000398   82B0               SUB      SP,SP,#+8
   \   0000039A   0020               MOVS     R0,#+0
   \   0000039C   0090               STR      R0,[SP, #+0]
   \   0000039E   6921               MOVS     R1,#+105
   \   000003A0   1020               MOVS     R0,#+16
   \   000003A2   03B4               PUSH     {R0,R1}
   \   000003A4   2721               MOVS     R1,#+39
   \   000003A6   0F20               MOVS     R0,#+15
   \   000003A8   03B4               PUSH     {R0,R1}
   \   000003AA   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000003AC   1B0E               LSRS     R3,R3,#+24
   \   000003AE   0322               MOVS     R2,#+3
   \   000003B0   0021               MOVS     R1,#+0
   \   000003B2   AB48               LDR      R0,??Procedure_Paint_18+0x4  ;; 0x2fd
   \   000003B4   AB4C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   000003B6   2468               LDR      R4,[R4, #+0]
   \   000003B8   AB4D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   000003BA   6C43               MULS     R4,R5,R4
   \   000003BC   AB4D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   000003BE   2C19               ADDS     R4,R5,R4
   \   000003C0   2018               ADDS     R0,R4,R0
   \   000003C2   ........           BL       Label
   \   000003C6   06B0               ADD      SP,SP,#+24
   \   000003C8   1EE2               B        ??Procedure_Paint_43
   3148                          case ProcStNI: Label(Speech[g_leng].NegWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_20:
   \   000003CA   82B0               SUB      SP,SP,#+8
   \   000003CC   0020               MOVS     R0,#+0
   \   000003CE   0090               STR      R0,[SP, #+0]
   \   000003D0   6921               MOVS     R1,#+105
   \   000003D2   1020               MOVS     R0,#+16
   \   000003D4   03B4               PUSH     {R0,R1}
   \   000003D6   2721               MOVS     R1,#+39
   \   000003D8   0F20               MOVS     R0,#+15
   \   000003DA   03B4               PUSH     {R0,R1}
   \   000003DC   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000003DE   1B0E               LSRS     R3,R3,#+24
   \   000003E0   0322               MOVS     R2,#+3
   \   000003E2   0021               MOVS     R1,#+0
   \   000003E4   C320               MOVS     R0,#+195
   \   000003E6   8000               LSLS     R0,R0,#+2        ;; #+780
   \   000003E8   9E4C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   000003EA   2468               LDR      R4,[R4, #+0]
   \   000003EC   9E4D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   000003EE   6C43               MULS     R4,R5,R4
   \   000003F0   9E4D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   000003F2   2C19               ADDS     R4,R5,R4
   \   000003F4   2018               ADDS     R0,R4,R0
   \   000003F6   ........           BL       Label
   \   000003FA   06B0               ADD      SP,SP,#+24
   \   000003FC   04E2               B        ??Procedure_Paint_43
   3149                          case ProcStQ: Label(Speech[g_leng].StanWyjscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_21:
   \   000003FE   82B0               SUB      SP,SP,#+8
   \   00000400   0020               MOVS     R0,#+0
   \   00000402   0090               STR      R0,[SP, #+0]
   \   00000404   6921               MOVS     R1,#+105
   \   00000406   1020               MOVS     R0,#+16
   \   00000408   03B4               PUSH     {R0,R1}
   \   0000040A   2721               MOVS     R1,#+39
   \   0000040C   0F20               MOVS     R0,#+15
   \   0000040E   03B4               PUSH     {R0,R1}
   \   00000410   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000412   1B0E               LSRS     R3,R3,#+24
   \   00000414   0322               MOVS     R2,#+3
   \   00000416   0021               MOVS     R1,#+0
   \   00000418   9548               LDR      R0,??Procedure_Paint_18+0x14  ;; 0x31b
   \   0000041A   924C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   0000041C   2468               LDR      R4,[R4, #+0]
   \   0000041E   924D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   00000420   6C43               MULS     R4,R5,R4
   \   00000422   924D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   00000424   2C19               ADDS     R4,R5,R4
   \   00000426   2018               ADDS     R0,R4,R0
   \   00000428   ........           BL       Label
   \   0000042C   06B0               ADD      SP,SP,#+24
   \   0000042E   EBE1               B        ??Procedure_Paint_43
   3150                          case ProcStS: Label(Speech[g_leng].StSceny,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_22:
   \   00000430   82B0               SUB      SP,SP,#+8
   \   00000432   0020               MOVS     R0,#+0
   \   00000434   0090               STR      R0,[SP, #+0]
   \   00000436   6921               MOVS     R1,#+105
   \   00000438   1020               MOVS     R0,#+16
   \   0000043A   03B4               PUSH     {R0,R1}
   \   0000043C   2721               MOVS     R1,#+39
   \   0000043E   0F20               MOVS     R0,#+15
   \   00000440   03B4               PUSH     {R0,R1}
   \   00000442   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000444   1B0E               LSRS     R3,R3,#+24
   \   00000446   0322               MOVS     R2,#+3
   \   00000448   0021               MOVS     R1,#+0
   \   0000044A   FF20               MOVS     R0,#+255
   \   0000044C   8000               LSLS     R0,R0,#+2        ;; #+1020
   \   0000044E   854C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   00000450   2468               LDR      R4,[R4, #+0]
   \   00000452   854D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   00000454   6C43               MULS     R4,R5,R4
   \   00000456   854D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   00000458   2C19               ADDS     R4,R5,R4
   \   0000045A   2018               ADDS     R0,R4,R0
   \   0000045C   ........           BL       Label
   \   00000460   06B0               ADD      SP,SP,#+24
   \   00000462   D1E1               B        ??Procedure_Paint_43
   3151                         // case ProcStT: Label(Speech[g_leng].StanTimera,0,3,Htmp,15,39,16,105,0); break;
   3152                         // case ProcStNT: Label(Speech[g_leng].StanTimeraNeg,0,3,Htmp,15,39,16,105,0); break;
   3153                          case ProcWOUT: Label(Speech[g_leng].UstawWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_23:
   \   00000464   82B0               SUB      SP,SP,#+8
   \   00000466   0020               MOVS     R0,#+0
   \   00000468   0090               STR      R0,[SP, #+0]
   \   0000046A   6921               MOVS     R1,#+105
   \   0000046C   1020               MOVS     R0,#+16
   \   0000046E   03B4               PUSH     {R0,R1}
   \   00000470   2721               MOVS     R1,#+39
   \   00000472   0F20               MOVS     R0,#+15
   \   00000474   03B4               PUSH     {R0,R1}
   \   00000476   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000478   1B0E               LSRS     R3,R3,#+24
   \   0000047A   0222               MOVS     R2,#+2
   \   0000047C   0021               MOVS     R1,#+0
   \   0000047E   7D48               LDR      R0,??Procedure_Paint_18+0x18  ;; 0x357
   \   00000480   784C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   00000482   2468               LDR      R4,[R4, #+0]
   \   00000484   784D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   00000486   6C43               MULS     R4,R5,R4
   \   00000488   784D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   0000048A   2C19               ADDS     R4,R5,R4
   \   0000048C   2018               ADDS     R0,R4,R0
   \   0000048E   ........           BL       Label
   \   00000492   06B0               ADD      SP,SP,#+24
   \   00000494   B8E1               B        ??Procedure_Paint_43
   3154                          case ProcWOUTS: Label(Speech[g_leng].WlaczWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_24:
   \   00000496   82B0               SUB      SP,SP,#+8
   \   00000498   0020               MOVS     R0,#+0
   \   0000049A   0090               STR      R0,[SP, #+0]
   \   0000049C   6921               MOVS     R1,#+105
   \   0000049E   1020               MOVS     R0,#+16
   \   000004A0   03B4               PUSH     {R0,R1}
   \   000004A2   2721               MOVS     R1,#+39
   \   000004A4   0F20               MOVS     R0,#+15
   \   000004A6   03B4               PUSH     {R0,R1}
   \   000004A8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000004AA   1B0E               LSRS     R3,R3,#+24
   \   000004AC   0222               MOVS     R2,#+2
   \   000004AE   0021               MOVS     R1,#+0
   \   000004B0   7148               LDR      R0,??Procedure_Paint_18+0x1C  ;; 0x366
   \   000004B2   6C4C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   000004B4   2468               LDR      R4,[R4, #+0]
   \   000004B6   6C4D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   000004B8   6C43               MULS     R4,R5,R4
   \   000004BA   6C4D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   000004BC   2C19               ADDS     R4,R5,R4
   \   000004BE   2018               ADDS     R0,R4,R0
   \   000004C0   ........           BL       Label
   \   000004C4   06B0               ADD      SP,SP,#+24
   \   000004C6   9FE1               B        ??Procedure_Paint_43
   3155                          case ProcWOUTR: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_25:
   \   000004C8   82B0               SUB      SP,SP,#+8
   \   000004CA   0020               MOVS     R0,#+0
   \   000004CC   0090               STR      R0,[SP, #+0]
   \   000004CE   6921               MOVS     R1,#+105
   \   000004D0   1020               MOVS     R0,#+16
   \   000004D2   03B4               PUSH     {R0,R1}
   \   000004D4   2721               MOVS     R1,#+39
   \   000004D6   0F20               MOVS     R0,#+15
   \   000004D8   03B4               PUSH     {R0,R1}
   \   000004DA   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000004DC   1B0E               LSRS     R3,R3,#+24
   \   000004DE   0222               MOVS     R2,#+2
   \   000004E0   0021               MOVS     R1,#+0
   \   000004E2   6648               LDR      R0,??Procedure_Paint_18+0x20  ;; 0x375
   \   000004E4   5F4C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   000004E6   2468               LDR      R4,[R4, #+0]
   \   000004E8   5F4D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   000004EA   6C43               MULS     R4,R5,R4
   \   000004EC   5F4D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   000004EE   2C19               ADDS     R4,R5,R4
   \   000004F0   2018               ADDS     R0,R4,R0
   \   000004F2   ........           BL       Label
   \   000004F6   06B0               ADD      SP,SP,#+24
   \   000004F8   86E1               B        ??Procedure_Paint_43
   3156                          case ProcWOUTC: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_26:
   \   000004FA   82B0               SUB      SP,SP,#+8
   \   000004FC   0020               MOVS     R0,#+0
   \   000004FE   0090               STR      R0,[SP, #+0]
   \   00000500   6921               MOVS     R1,#+105
   \   00000502   1020               MOVS     R0,#+16
   \   00000504   03B4               PUSH     {R0,R1}
   \   00000506   2721               MOVS     R1,#+39
   \   00000508   0F20               MOVS     R0,#+15
   \   0000050A   03B4               PUSH     {R0,R1}
   \   0000050C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000050E   1B0E               LSRS     R3,R3,#+24
   \   00000510   0222               MOVS     R2,#+2
   \   00000512   0021               MOVS     R1,#+0
   \   00000514   5948               LDR      R0,??Procedure_Paint_18+0x20  ;; 0x375
   \   00000516   534C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   00000518   2468               LDR      R4,[R4, #+0]
   \   0000051A   534D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   0000051C   6C43               MULS     R4,R5,R4
   \   0000051E   534D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   00000520   2C19               ADDS     R4,R5,R4
   \   00000522   2018               ADDS     R0,R4,R0
   \   00000524   ........           BL       Label
   \   00000528   06B0               ADD      SP,SP,#+24
   \   0000052A   6DE1               B        ??Procedure_Paint_43
   3157                          case ProcSetScn: Label(Speech[g_leng].W³Scene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_27:
   \   0000052C   82B0               SUB      SP,SP,#+8
   \   0000052E   0020               MOVS     R0,#+0
   \   00000530   0090               STR      R0,[SP, #+0]
   \   00000532   6921               MOVS     R1,#+105
   \   00000534   1020               MOVS     R0,#+16
   \   00000536   03B4               PUSH     {R0,R1}
   \   00000538   2721               MOVS     R1,#+39
   \   0000053A   0F20               MOVS     R0,#+15
   \   0000053C   03B4               PUSH     {R0,R1}
   \   0000053E   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000540   1B0E               LSRS     R3,R3,#+24
   \   00000542   0222               MOVS     R2,#+2
   \   00000544   0021               MOVS     R1,#+0
   \   00000546   4E48               LDR      R0,??Procedure_Paint_18+0x24  ;; 0x3a2
   \   00000548   464C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   0000054A   2468               LDR      R4,[R4, #+0]
   \   0000054C   464D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   0000054E   6C43               MULS     R4,R5,R4
   \   00000550   464D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   00000552   2C19               ADDS     R4,R5,R4
   \   00000554   2018               ADDS     R0,R4,R0
   \   00000556   ........           BL       Label
   \   0000055A   06B0               ADD      SP,SP,#+24
   \   0000055C   54E1               B        ??Procedure_Paint_43
   3158                          case ProcInc: Label(Speech[g_leng].IncScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_28:
   \   0000055E   82B0               SUB      SP,SP,#+8
   \   00000560   0020               MOVS     R0,#+0
   \   00000562   0090               STR      R0,[SP, #+0]
   \   00000564   6921               MOVS     R1,#+105
   \   00000566   1020               MOVS     R0,#+16
   \   00000568   03B4               PUSH     {R0,R1}
   \   0000056A   2721               MOVS     R1,#+39
   \   0000056C   0F20               MOVS     R0,#+15
   \   0000056E   03B4               PUSH     {R0,R1}
   \   00000570   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000572   1B0E               LSRS     R3,R3,#+24
   \   00000574   0222               MOVS     R2,#+2
   \   00000576   0021               MOVS     R1,#+0
   \   00000578   4248               LDR      R0,??Procedure_Paint_18+0x28  ;; 0x3b1
   \   0000057A   3A4C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   0000057C   2468               LDR      R4,[R4, #+0]
   \   0000057E   3A4D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   00000580   6C43               MULS     R4,R5,R4
   \   00000582   3A4D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   00000584   2C19               ADDS     R4,R5,R4
   \   00000586   2018               ADDS     R0,R4,R0
   \   00000588   ........           BL       Label
   \   0000058C   06B0               ADD      SP,SP,#+24
   \   0000058E   3BE1               B        ??Procedure_Paint_43
   3159                          case ProcDec: Label(Speech[g_leng].DecScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_29:
   \   00000590   82B0               SUB      SP,SP,#+8
   \   00000592   0020               MOVS     R0,#+0
   \   00000594   0090               STR      R0,[SP, #+0]
   \   00000596   6921               MOVS     R1,#+105
   \   00000598   1020               MOVS     R0,#+16
   \   0000059A   03B4               PUSH     {R0,R1}
   \   0000059C   2721               MOVS     R1,#+39
   \   0000059E   0F20               MOVS     R0,#+15
   \   000005A0   03B4               PUSH     {R0,R1}
   \   000005A2   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000005A4   1B0E               LSRS     R3,R3,#+24
   \   000005A6   0222               MOVS     R2,#+2
   \   000005A8   0021               MOVS     R1,#+0
   \   000005AA   F020               MOVS     R0,#+240
   \   000005AC   8000               LSLS     R0,R0,#+2        ;; #+960
   \   000005AE   2D4C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   000005B0   2468               LDR      R4,[R4, #+0]
   \   000005B2   2D4D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   000005B4   6C43               MULS     R4,R5,R4
   \   000005B6   2D4D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   000005B8   2C19               ADDS     R4,R5,R4
   \   000005BA   2018               ADDS     R0,R4,R0
   \   000005BC   ........           BL       Label
   \   000005C0   06B0               ADD      SP,SP,#+24
   \   000005C2   21E1               B        ??Procedure_Paint_43
   3160                          case ProcSPK: Label(Speech[g_leng].Glosnik,0,2,Htmp,15,34,16,105,0); break;
   \                     ??Procedure_Paint_30:
   \   000005C4   82B0               SUB      SP,SP,#+8
   \   000005C6   0020               MOVS     R0,#+0
   \   000005C8   0090               STR      R0,[SP, #+0]
   \   000005CA   6921               MOVS     R1,#+105
   \   000005CC   1020               MOVS     R0,#+16
   \   000005CE   03B4               PUSH     {R0,R1}
   \   000005D0   2221               MOVS     R1,#+34
   \   000005D2   0F20               MOVS     R0,#+15
   \   000005D4   03B4               PUSH     {R0,R1}
   \   000005D6   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000005D8   1B0E               LSRS     R3,R3,#+24
   \   000005DA   0222               MOVS     R2,#+2
   \   000005DC   0021               MOVS     R1,#+0
   \   000005DE   2A48               LDR      R0,??Procedure_Paint_18+0x2C  ;; 0x807
   \   000005E0   204C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   000005E2   2468               LDR      R4,[R4, #+0]
   \   000005E4   204D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   000005E6   6C43               MULS     R4,R5,R4
   \   000005E8   204D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   000005EA   2C19               ADDS     R4,R5,R4
   \   000005EC   2018               ADDS     R0,R4,R0
   \   000005EE   ........           BL       Label
   \   000005F2   06B0               ADD      SP,SP,#+24
   \   000005F4   08E1               B        ??Procedure_Paint_43
   3161                          case ProcTimerSet: Label(Speech[g_leng].Timer,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_31:
   \   000005F6   82B0               SUB      SP,SP,#+8
   \   000005F8   0020               MOVS     R0,#+0
   \   000005FA   0090               STR      R0,[SP, #+0]
   \   000005FC   6921               MOVS     R1,#+105
   \   000005FE   1020               MOVS     R0,#+16
   \   00000600   03B4               PUSH     {R0,R1}
   \   00000602   2721               MOVS     R1,#+39
   \   00000604   0F20               MOVS     R0,#+15
   \   00000606   03B4               PUSH     {R0,R1}
   \   00000608   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000060A   1B0E               LSRS     R3,R3,#+24
   \   0000060C   0222               MOVS     R2,#+2
   \   0000060E   0021               MOVS     R1,#+0
   \   00000610   1E48               LDR      R0,??Procedure_Paint_18+0x30  ;; 0x3cf
   \   00000612   144C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   00000614   2468               LDR      R4,[R4, #+0]
   \   00000616   144D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   00000618   6C43               MULS     R4,R5,R4
   \   0000061A   144D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   0000061C   2C19               ADDS     R4,R5,R4
   \   0000061E   2018               ADDS     R0,R4,R0
   \   00000620   ........           BL       Label
   \   00000624   06B0               ADD      SP,SP,#+24
   \   00000626   EFE0               B        ??Procedure_Paint_43
   3162                          case ProcClock: Label(Speech[g_leng].Zegar,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_32:
   \   00000628   82B0               SUB      SP,SP,#+8
   \   0000062A   0020               MOVS     R0,#+0
   \   0000062C   0090               STR      R0,[SP, #+0]
   \   0000062E   6921               MOVS     R1,#+105
   \   00000630   1020               MOVS     R0,#+16
   \   00000632   03B4               PUSH     {R0,R1}
   \   00000634   2721               MOVS     R1,#+39
   \   00000636   0F20               MOVS     R0,#+15
   \   00000638   03B4               PUSH     {R0,R1}
   \   0000063A   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000063C   1B0E               LSRS     R3,R3,#+24
   \   0000063E   0222               MOVS     R2,#+2
   \   00000640   0021               MOVS     R1,#+0
   \   00000642   1348               LDR      R0,??Procedure_Paint_18+0x34  ;; 0x3de
   \   00000644   074C               LDR      R4,??Procedure_Paint_18+0x8  ;; g_leng
   \   00000646   2468               LDR      R4,[R4, #+0]
   \   00000648   074D               LDR      R5,??Procedure_Paint_18+0xC  ;; 0xa7d
   \   0000064A   6C43               MULS     R4,R5,R4
   \   0000064C   074D               LDR      R5,??Procedure_Paint_18+0x10  ;; Speech
   \   0000064E   2C19               ADDS     R4,R5,R4
   \   00000650   2018               ADDS     R0,R4,R0
   \   00000652   ........           BL       Label
   \   00000656   06B0               ADD      SP,SP,#+24
   \   00000658   D6E0               B        ??Procedure_Paint_43
   \   0000065A   C046               Nop      
   \                     ??Procedure_Paint_18:
   \   0000065C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000660   FD020000           DC32     0x2fd
   \   00000664   ........           DC32     g_leng
   \   00000668   7D0A0000           DC32     0xa7d
   \   0000066C   ........           DC32     Speech
   \   00000670   1B030000           DC32     0x31b
   \   00000674   57030000           DC32     0x357
   \   00000678   66030000           DC32     0x366
   \   0000067C   75030000           DC32     0x375
   \   00000680   A2030000           DC32     0x3a2
   \   00000684   B1030000           DC32     0x3b1
   \   00000688   07080000           DC32     0x807
   \   0000068C   CF030000           DC32     0x3cf
   \   00000690   DE030000           DC32     0x3de
   3163                          case ProcDay: Label(Speech[g_leng].DzienTygodnia,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_33:
   \   00000694   82B0               SUB      SP,SP,#+8
   \   00000696   0020               MOVS     R0,#+0
   \   00000698   0090               STR      R0,[SP, #+0]
   \   0000069A   6921               MOVS     R1,#+105
   \   0000069C   1020               MOVS     R0,#+16
   \   0000069E   03B4               PUSH     {R0,R1}
   \   000006A0   2721               MOVS     R1,#+39
   \   000006A2   0F20               MOVS     R0,#+15
   \   000006A4   03B4               PUSH     {R0,R1}
   \   000006A6   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000006A8   1B0E               LSRS     R3,R3,#+24
   \   000006AA   0222               MOVS     R2,#+2
   \   000006AC   0021               MOVS     R1,#+0
   \   000006AE   D148               LDR      R0,??Procedure_Paint_44  ;; 0x564
   \   000006B0   D14C               LDR      R4,??Procedure_Paint_44+0x4  ;; g_leng
   \   000006B2   2468               LDR      R4,[R4, #+0]
   \   000006B4   D14D               LDR      R5,??Procedure_Paint_44+0x8  ;; 0xa7d
   \   000006B6   6C43               MULS     R4,R5,R4
   \   000006B8   D14D               LDR      R5,??Procedure_Paint_44+0xC  ;; Speech
   \   000006BA   2C19               ADDS     R4,R5,R4
   \   000006BC   2018               ADDS     R0,R4,R0
   \   000006BE   ........           BL       Label
   \   000006C2   06B0               ADD      SP,SP,#+24
   \   000006C4   A0E0               B        ??Procedure_Paint_43
   3164                          case ProcConstAnal: Label("Const. ",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_34:
   \   000006C6   82B0               SUB      SP,SP,#+8
   \   000006C8   0020               MOVS     R0,#+0
   \   000006CA   0090               STR      R0,[SP, #+0]
   \   000006CC   6921               MOVS     R1,#+105
   \   000006CE   1020               MOVS     R0,#+16
   \   000006D0   03B4               PUSH     {R0,R1}
   \   000006D2   2721               MOVS     R1,#+39
   \   000006D4   0F20               MOVS     R0,#+15
   \   000006D6   03B4               PUSH     {R0,R1}
   \   000006D8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000006DA   1B0E               LSRS     R3,R3,#+24
   \   000006DC   0222               MOVS     R2,#+2
   \   000006DE   0021               MOVS     R1,#+0
   \   000006E0   C848               LDR      R0,??Procedure_Paint_44+0x10  ;; `?<Constant "Const. ">`
   \   000006E2   ........           BL       Label
   \   000006E6   06B0               ADD      SP,SP,#+24
   \   000006E8   8EE0               B        ??Procedure_Paint_43
   3165                          case ProcGetReg: Label("Get reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_35:
   \   000006EA   82B0               SUB      SP,SP,#+8
   \   000006EC   0020               MOVS     R0,#+0
   \   000006EE   0090               STR      R0,[SP, #+0]
   \   000006F0   6921               MOVS     R1,#+105
   \   000006F2   1020               MOVS     R0,#+16
   \   000006F4   03B4               PUSH     {R0,R1}
   \   000006F6   2721               MOVS     R1,#+39
   \   000006F8   0F20               MOVS     R0,#+15
   \   000006FA   03B4               PUSH     {R0,R1}
   \   000006FC   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000006FE   1B0E               LSRS     R3,R3,#+24
   \   00000700   0222               MOVS     R2,#+2
   \   00000702   0021               MOVS     R1,#+0
   \   00000704   C048               LDR      R0,??Procedure_Paint_44+0x14  ;; `?<Constant "Get reg.">`
   \   00000706   ........           BL       Label
   \   0000070A   06B0               ADD      SP,SP,#+24
   \   0000070C   7CE0               B        ??Procedure_Paint_43
   3166                          case ProcSetReg: Label("Set reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_36:
   \   0000070E   82B0               SUB      SP,SP,#+8
   \   00000710   0020               MOVS     R0,#+0
   \   00000712   0090               STR      R0,[SP, #+0]
   \   00000714   6921               MOVS     R1,#+105
   \   00000716   1020               MOVS     R0,#+16
   \   00000718   03B4               PUSH     {R0,R1}
   \   0000071A   2721               MOVS     R1,#+39
   \   0000071C   0F20               MOVS     R0,#+15
   \   0000071E   03B4               PUSH     {R0,R1}
   \   00000720   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000722   1B0E               LSRS     R3,R3,#+24
   \   00000724   0222               MOVS     R2,#+2
   \   00000726   0021               MOVS     R1,#+0
   \   00000728   B848               LDR      R0,??Procedure_Paint_44+0x18  ;; `?<Constant "Set reg.">`
   \   0000072A   ........           BL       Label
   \   0000072E   06B0               ADD      SP,SP,#+24
   \   00000730   6AE0               B        ??Procedure_Paint_43
   3167                          case ProcLim: Label("1>2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_37:
   \   00000732   82B0               SUB      SP,SP,#+8
   \   00000734   0020               MOVS     R0,#+0
   \   00000736   0090               STR      R0,[SP, #+0]
   \   00000738   6921               MOVS     R1,#+105
   \   0000073A   1020               MOVS     R0,#+16
   \   0000073C   03B4               PUSH     {R0,R1}
   \   0000073E   2721               MOVS     R1,#+39
   \   00000740   0F20               MOVS     R0,#+15
   \   00000742   03B4               PUSH     {R0,R1}
   \   00000744   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000746   1B0E               LSRS     R3,R3,#+24
   \   00000748   0222               MOVS     R2,#+2
   \   0000074A   0021               MOVS     R1,#+0
   \   0000074C   B048               LDR      R0,??Procedure_Paint_44+0x1C  ;; `?<Constant "1>2 Q=1">`
   \   0000074E   ........           BL       Label
   \   00000752   06B0               ADD      SP,SP,#+24
   \   00000754   58E0               B        ??Procedure_Paint_43
   3168                          case ProcEven: Label("1=2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_38:
   \   00000756   82B0               SUB      SP,SP,#+8
   \   00000758   0020               MOVS     R0,#+0
   \   0000075A   0090               STR      R0,[SP, #+0]
   \   0000075C   6921               MOVS     R1,#+105
   \   0000075E   1020               MOVS     R0,#+16
   \   00000760   03B4               PUSH     {R0,R1}
   \   00000762   2721               MOVS     R1,#+39
   \   00000764   0F20               MOVS     R0,#+15
   \   00000766   03B4               PUSH     {R0,R1}
   \   00000768   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000076A   1B0E               LSRS     R3,R3,#+24
   \   0000076C   0222               MOVS     R2,#+2
   \   0000076E   0021               MOVS     R1,#+0
   \   00000770   A848               LDR      R0,??Procedure_Paint_44+0x20  ;; `?<Constant "1=2 Q=1">`
   \   00000772   ........           BL       Label
   \   00000776   06B0               ADD      SP,SP,#+24
   \   00000778   46E0               B        ??Procedure_Paint_43
   3169                          case ProcPlus: Label("Q=1+2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_39:
   \   0000077A   82B0               SUB      SP,SP,#+8
   \   0000077C   0020               MOVS     R0,#+0
   \   0000077E   0090               STR      R0,[SP, #+0]
   \   00000780   6921               MOVS     R1,#+105
   \   00000782   1020               MOVS     R0,#+16
   \   00000784   03B4               PUSH     {R0,R1}
   \   00000786   2721               MOVS     R1,#+39
   \   00000788   0F20               MOVS     R0,#+15
   \   0000078A   03B4               PUSH     {R0,R1}
   \   0000078C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000078E   1B0E               LSRS     R3,R3,#+24
   \   00000790   0222               MOVS     R2,#+2
   \   00000792   0021               MOVS     R1,#+0
   \   00000794   A048               LDR      R0,??Procedure_Paint_44+0x24  ;; `?<Constant "Q=1+2">`
   \   00000796   ........           BL       Label
   \   0000079A   06B0               ADD      SP,SP,#+24
   \   0000079C   34E0               B        ??Procedure_Paint_43
   3170                          case ProcMinus: Label("Q=1-2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_40:
   \   0000079E   82B0               SUB      SP,SP,#+8
   \   000007A0   0020               MOVS     R0,#+0
   \   000007A2   0090               STR      R0,[SP, #+0]
   \   000007A4   6921               MOVS     R1,#+105
   \   000007A6   1020               MOVS     R0,#+16
   \   000007A8   03B4               PUSH     {R0,R1}
   \   000007AA   2721               MOVS     R1,#+39
   \   000007AC   0F20               MOVS     R0,#+15
   \   000007AE   03B4               PUSH     {R0,R1}
   \   000007B0   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000007B2   1B0E               LSRS     R3,R3,#+24
   \   000007B4   0222               MOVS     R2,#+2
   \   000007B6   0021               MOVS     R1,#+0
   \   000007B8   9848               LDR      R0,??Procedure_Paint_44+0x28  ;; `?<Constant "Q=1-2">`
   \   000007BA   ........           BL       Label
   \   000007BE   06B0               ADD      SP,SP,#+24
   \   000007C0   22E0               B        ??Procedure_Paint_43
   3171                          case ProcMul: Label("Q=1x2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_41:
   \   000007C2   82B0               SUB      SP,SP,#+8
   \   000007C4   0020               MOVS     R0,#+0
   \   000007C6   0090               STR      R0,[SP, #+0]
   \   000007C8   6921               MOVS     R1,#+105
   \   000007CA   1020               MOVS     R0,#+16
   \   000007CC   03B4               PUSH     {R0,R1}
   \   000007CE   2721               MOVS     R1,#+39
   \   000007D0   0F20               MOVS     R0,#+15
   \   000007D2   03B4               PUSH     {R0,R1}
   \   000007D4   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000007D6   1B0E               LSRS     R3,R3,#+24
   \   000007D8   0222               MOVS     R2,#+2
   \   000007DA   0021               MOVS     R1,#+0
   \   000007DC   9048               LDR      R0,??Procedure_Paint_44+0x2C  ;; `?<Constant "Q=1x2">`
   \   000007DE   ........           BL       Label
   \   000007E2   06B0               ADD      SP,SP,#+24
   \   000007E4   10E0               B        ??Procedure_Paint_43
   3172                          case ProcDiv: Label("Q=1/2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_42:
   \   000007E6   82B0               SUB      SP,SP,#+8
   \   000007E8   0020               MOVS     R0,#+0
   \   000007EA   0090               STR      R0,[SP, #+0]
   \   000007EC   6921               MOVS     R1,#+105
   \   000007EE   1020               MOVS     R0,#+16
   \   000007F0   03B4               PUSH     {R0,R1}
   \   000007F2   2721               MOVS     R1,#+39
   \   000007F4   0F20               MOVS     R0,#+15
   \   000007F6   03B4               PUSH     {R0,R1}
   \   000007F8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000007FA   1B0E               LSRS     R3,R3,#+24
   \   000007FC   0222               MOVS     R2,#+2
   \   000007FE   0021               MOVS     R1,#+0
   \   00000800   8848               LDR      R0,??Procedure_Paint_44+0x30  ;; `?<Constant "Q=1/2">`
   \   00000802   ........           BL       Label
   \   00000806   06B0               ADD      SP,SP,#+24
   3173          
   3174                                       
   3175                        }
   3176                        
   3177                        
   3178                        
   3179                        if (
   3180                           (Prc.Type!=ProcInc) && 
   3181                           (Prc.Type!=ProcDec) &&
   3182                           ((Prc.Type<ProcTimeStart)
   3183                            || (Prc.Type==ProcGetReg)
   3184                            || (Prc.Type==ProcSetReg)
   3185                           )
   3186                          )
   \                     ??Procedure_Paint_43:
   \   00000808   6846               MOV      R0,SP
   \   0000080A   007A               LDRB     R0,[R0, #+8]
   \   0000080C   2528               CMP      R0,#+37
   \   0000080E   76D0               BEQ      ??Procedure_Paint_45
   \   00000810   6846               MOV      R0,SP
   \   00000812   007A               LDRB     R0,[R0, #+8]
   \   00000814   2628               CMP      R0,#+38
   \   00000816   72D0               BEQ      ??Procedure_Paint_45
   \   00000818   6846               MOV      R0,SP
   \   0000081A   007A               LDRB     R0,[R0, #+8]
   \   0000081C   2C28               CMP      R0,#+44
   \   0000081E   07D3               BCC      ??Procedure_Paint_46
   \   00000820   6846               MOV      R0,SP
   \   00000822   007A               LDRB     R0,[R0, #+8]
   \   00000824   3828               CMP      R0,#+56
   \   00000826   03D0               BEQ      ??Procedure_Paint_46
   \   00000828   6846               MOV      R0,SP
   \   0000082A   007A               LDRB     R0,[R0, #+8]
   \   0000082C   3928               CMP      R0,#+57
   \   0000082E   66D1               BNE      ??Procedure_Paint_45
   3187                        {
   3188                          txt[0]='>';
   \                     ??Procedure_Paint_46:
   \   00000830   6846               MOV      R0,SP
   \   00000832   3E21               MOVS     R1,#+62
   \   00000834   0170               STRB     R1,[R0, #+0]
   3189                          Button(txt,43,25,18,18);
   \   00000836   82B0               SUB      SP,SP,#+8
   \   00000838   1220               MOVS     R0,#+18
   \   0000083A   0090               STR      R0,[SP, #+0]
   \   0000083C   1223               MOVS     R3,#+18
   \   0000083E   1922               MOVS     R2,#+25
   \   00000840   2B21               MOVS     R1,#+43
   \   00000842   02A8               ADD      R0,SP,#+8
   \   00000844   ........           BL       Button
   \   00000848   02B0               ADD      SP,SP,#+8
   3190                          txt[0]='<';
   \   0000084A   6846               MOV      R0,SP
   \   0000084C   3C21               MOVS     R1,#+60
   \   0000084E   0170               STRB     R1,[R0, #+0]
   3191                          Button(txt,2,25,18,18);
   \   00000850   82B0               SUB      SP,SP,#+8
   \   00000852   1220               MOVS     R0,#+18
   \   00000854   0090               STR      R0,[SP, #+0]
   \   00000856   1223               MOVS     R3,#+18
   \   00000858   1922               MOVS     R2,#+25
   \   0000085A   0221               MOVS     R1,#+2
   \   0000085C   02A8               ADD      R0,SP,#+8
   \   0000085E   ........           BL       Button
   \   00000862   02B0               ADD      SP,SP,#+8
   3192                         
   3193                          if (Prc.Type!=ProcSPK)
   \   00000864   6846               MOV      R0,SP
   \   00000866   007A               LDRB     R0,[R0, #+8]
   \   00000868   2728               CMP      R0,#+39
   \   0000086A   32D0               BEQ      ??Procedure_Paint_47
   3194                          {
   3195                            if (Prc.Nr>=0)
   \   0000086C   0120               MOVS     R0,#+1
   \   0000086E   02A9               ADD      R1,SP,#+8
   \   00000870   0856               LDRSB    R0,[R1, R0]
   \   00000872   0028               CMP      R0,#+0
   \   00000874   13D4               BMI      ??Procedure_Paint_48
   3196                            {
   3197                              txt[0]='N';txt[1]='r';txt[2]=':';
   \   00000876   6846               MOV      R0,SP
   \   00000878   4E21               MOVS     R1,#+78
   \   0000087A   0170               STRB     R1,[R0, #+0]
   \   0000087C   6846               MOV      R0,SP
   \   0000087E   7221               MOVS     R1,#+114
   \   00000880   4170               STRB     R1,[R0, #+1]
   \   00000882   6846               MOV      R0,SP
   \   00000884   3A21               MOVS     R1,#+58
   \   00000886   8170               STRB     R1,[R0, #+2]
   3198                              CharToStr(Prc.Nr, &txt[3], 2); //(char Value, char *Vstring, char ill);
   \   00000888   0222               MOVS     R2,#+2
   \   0000088A   6946               MOV      R1,SP
   \   0000088C   C91C               ADDS     R1,R1,#+3
   \   0000088E   0120               MOVS     R0,#+1
   \   00000890   02AB               ADD      R3,SP,#+8
   \   00000892   1856               LDRSB    R0,[R3, R0]
   \   00000894   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000896   000E               LSRS     R0,R0,#+24
   \   00000898   ........           BL       CharToStr
   \   0000089C   08E0               B        ??Procedure_Paint_49
   3199                              
   3200                            }else{
   3201                              txt[0]='V';txt[1]='a';txt[2]='r';
   \                     ??Procedure_Paint_48:
   \   0000089E   6846               MOV      R0,SP
   \   000008A0   5621               MOVS     R1,#+86
   \   000008A2   0170               STRB     R1,[R0, #+0]
   \   000008A4   6846               MOV      R0,SP
   \   000008A6   6121               MOVS     R1,#+97
   \   000008A8   4170               STRB     R1,[R0, #+1]
   \   000008AA   6846               MOV      R0,SP
   \   000008AC   7221               MOVS     R1,#+114
   \   000008AE   8170               STRB     R1,[R0, #+2]
   3202                            }
   3203                            Label(txt,2,21,29,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_49:
   \   000008B0   82B0               SUB      SP,SP,#+8
   \   000008B2   0020               MOVS     R0,#+0
   \   000008B4   0090               STR      R0,[SP, #+0]
   \   000008B6   6921               MOVS     R1,#+105
   \   000008B8   0020               MOVS     R0,#+0
   \   000008BA   03B4               PUSH     {R0,R1}
   \   000008BC   1421               MOVS     R1,#+20
   \   000008BE   0520               MOVS     R0,#+5
   \   000008C0   03B4               PUSH     {R0,R1}
   \   000008C2   1D23               MOVS     R3,#+29
   \   000008C4   1522               MOVS     R2,#+21
   \   000008C6   0221               MOVS     R1,#+2
   \   000008C8   06A8               ADD      R0,SP,#+24
   \   000008CA   ........           BL       Label
   \   000008CE   06B0               ADD      SP,SP,#+24
   \   000008D0   15E0               B        ??Procedure_Paint_45
   3204                          }else{
   3205                            if(Prc.Tag.SpeakerType>SPK_Amount-1) Prc.Tag.SpeakerType=0;
   \                     ??Procedure_Paint_47:
   \   000008D2   02A8               ADD      R0,SP,#+8
   \   000008D4   007A               LDRB     R0,[R0, #+8]
   \   000008D6   0428               CMP      R0,#+4
   \   000008D8   02D3               BCC      ??Procedure_Paint_50
   \   000008DA   02A8               ADD      R0,SP,#+8
   \   000008DC   0021               MOVS     R1,#+0
   \   000008DE   0172               STRB     R1,[R0, #+8]
   3206                            CopyToCanvasPoint((char*)SPK_1[Prc.Tag.SpeakerType], 23,31, 16,5); 
   \                     ??Procedure_Paint_50:
   \   000008E0   82B0               SUB      SP,SP,#+8
   \   000008E2   0520               MOVS     R0,#+5
   \   000008E4   0090               STR      R0,[SP, #+0]
   \   000008E6   1023               MOVS     R3,#+16
   \   000008E8   1F22               MOVS     R2,#+31
   \   000008EA   1721               MOVS     R1,#+23
   \   000008EC   04A8               ADD      R0,SP,#+16
   \   000008EE   007A               LDRB     R0,[R0, #+8]
   \   000008F0   0A24               MOVS     R4,#+10
   \   000008F2   6043               MULS     R0,R4,R0
   \   000008F4   4C4C               LDR      R4,??Procedure_Paint_44+0x34  ;; SPK_1
   \   000008F6   2018               ADDS     R0,R4,R0
   \   000008F8   ........           BL       CopyToCanvasPoint
   \   000008FC   02B0               ADD      SP,SP,#+8
   3207                          }
   3208                        }
   3209                        
   3210                        if ((Prc.Type==ProcStI) || (Prc.Type==ProcStNI) || (Prc.Type==ProcStQ) || (Prc.Type==ProcWOUT) || (Prc.Type==ProcWOUTS) || (Prc.Type==ProcWOUTR)|| (Prc.Type==ProcWOUTC))
   \                     ??Procedure_Paint_45:
   \   000008FE   6846               MOV      R0,SP
   \   00000900   007A               LDRB     R0,[R0, #+8]
   \   00000902   1428               CMP      R0,#+20
   \   00000904   18D0               BEQ      ??Procedure_Paint_51
   \   00000906   6846               MOV      R0,SP
   \   00000908   007A               LDRB     R0,[R0, #+8]
   \   0000090A   1528               CMP      R0,#+21
   \   0000090C   14D0               BEQ      ??Procedure_Paint_51
   \   0000090E   6846               MOV      R0,SP
   \   00000910   007A               LDRB     R0,[R0, #+8]
   \   00000912   1628               CMP      R0,#+22
   \   00000914   10D0               BEQ      ??Procedure_Paint_51
   \   00000916   6846               MOV      R0,SP
   \   00000918   007A               LDRB     R0,[R0, #+8]
   \   0000091A   2028               CMP      R0,#+32
   \   0000091C   0CD0               BEQ      ??Procedure_Paint_51
   \   0000091E   6846               MOV      R0,SP
   \   00000920   007A               LDRB     R0,[R0, #+8]
   \   00000922   2128               CMP      R0,#+33
   \   00000924   08D0               BEQ      ??Procedure_Paint_51
   \   00000926   6846               MOV      R0,SP
   \   00000928   007A               LDRB     R0,[R0, #+8]
   \   0000092A   2228               CMP      R0,#+34
   \   0000092C   04D0               BEQ      ??Procedure_Paint_51
   \   0000092E   6846               MOV      R0,SP
   \   00000930   007A               LDRB     R0,[R0, #+8]
   \   00000932   2328               CMP      R0,#+35
   \   00000934   00D0               BEQ      .+4
   \   00000936   99E0               B        ??Procedure_Paint_11
   3211                        {
   3212                          txt[1]=0;
   \                     ??Procedure_Paint_51:
   \   00000938   6846               MOV      R0,SP
   \   0000093A   0021               MOVS     R1,#+0
   \   0000093C   4170               STRB     R1,[R0, #+1]
   3213                          txt[0]='>';
   \   0000093E   6846               MOV      R0,SP
   \   00000940   3E21               MOVS     R1,#+62
   \   00000942   0170               STRB     R1,[R0, #+0]
   3214                          Button(txt,43,4,18,18);
   \   00000944   82B0               SUB      SP,SP,#+8
   \   00000946   1220               MOVS     R0,#+18
   \   00000948   0090               STR      R0,[SP, #+0]
   \   0000094A   1223               MOVS     R3,#+18
   \   0000094C   0422               MOVS     R2,#+4
   \   0000094E   2B21               MOVS     R1,#+43
   \   00000950   02A8               ADD      R0,SP,#+8
   \   00000952   ........           BL       Button
   \   00000956   02B0               ADD      SP,SP,#+8
   3215                          txt[0]='<';
   \   00000958   6846               MOV      R0,SP
   \   0000095A   3C21               MOVS     R1,#+60
   \   0000095C   0170               STRB     R1,[R0, #+0]
   3216                          Button(txt,2,4,18,18);
   \   0000095E   82B0               SUB      SP,SP,#+8
   \   00000960   1220               MOVS     R0,#+18
   \   00000962   0090               STR      R0,[SP, #+0]
   \   00000964   1223               MOVS     R3,#+18
   \   00000966   0422               MOVS     R2,#+4
   \   00000968   0221               MOVS     R1,#+2
   \   0000096A   02A8               ADD      R0,SP,#+8
   \   0000096C   ........           BL       Button
   \   00000970   02B0               ADD      SP,SP,#+8
   3217                          if (Prc.Nr>=0)
   \   00000972   0120               MOVS     R0,#+1
   \   00000974   02A9               ADD      R1,SP,#+8
   \   00000976   0856               LDRSB    R0,[R1, R0]
   \   00000978   0028               CMP      R0,#+0
   \   0000097A   57D4               BMI      ??Procedure_Paint_52
   3218                            {
   3219                              txt[0]='P';txt[1]='o';txt[2]='r';txt[3]='t';txt[4]=':';
   \   0000097C   6846               MOV      R0,SP
   \   0000097E   5021               MOVS     R1,#+80
   \   00000980   0170               STRB     R1,[R0, #+0]
   \   00000982   6846               MOV      R0,SP
   \   00000984   6F21               MOVS     R1,#+111
   \   00000986   4170               STRB     R1,[R0, #+1]
   \   00000988   6846               MOV      R0,SP
   \   0000098A   7221               MOVS     R1,#+114
   \   0000098C   8170               STRB     R1,[R0, #+2]
   \   0000098E   6846               MOV      R0,SP
   \   00000990   7421               MOVS     R1,#+116
   \   00000992   C170               STRB     R1,[R0, #+3]
   \   00000994   6846               MOV      R0,SP
   \   00000996   3A21               MOVS     R1,#+58
   \   00000998   0171               STRB     R1,[R0, #+4]
   3220                              Label(txt,2,21,12,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000099A   82B0               SUB      SP,SP,#+8
   \   0000099C   0020               MOVS     R0,#+0
   \   0000099E   0090               STR      R0,[SP, #+0]
   \   000009A0   6921               MOVS     R1,#+105
   \   000009A2   0020               MOVS     R0,#+0
   \   000009A4   03B4               PUSH     {R0,R1}
   \   000009A6   1421               MOVS     R1,#+20
   \   000009A8   0520               MOVS     R0,#+5
   \   000009AA   03B4               PUSH     {R0,R1}
   \   000009AC   0C23               MOVS     R3,#+12
   \   000009AE   1522               MOVS     R2,#+21
   \   000009B0   0221               MOVS     R1,#+2
   \   000009B2   06A8               ADD      R0,SP,#+24
   \   000009B4   ........           BL       Label
   \   000009B8   06B0               ADD      SP,SP,#+24
   3221                              txt[1]=0;txt[2]=0;
   \   000009BA   6846               MOV      R0,SP
   \   000009BC   0021               MOVS     R1,#+0
   \   000009BE   4170               STRB     R1,[R0, #+1]
   \   000009C0   6846               MOV      R0,SP
   \   000009C2   0021               MOVS     R1,#+0
   \   000009C4   8170               STRB     R1,[R0, #+2]
   3222                              CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   \   000009C6   0222               MOVS     R2,#+2
   \   000009C8   6946               MOV      R1,SP
   \   000009CA   02A8               ADD      R0,SP,#+8
   \   000009CC   007A               LDRB     R0,[R0, #+8]
   \   000009CE   ........           BL       CharToStr
   3223                              Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)
   \   000009D2   82B0               SUB      SP,SP,#+8
   \   000009D4   0020               MOVS     R0,#+0
   \   000009D6   0090               STR      R0,[SP, #+0]
   \   000009D8   6921               MOVS     R1,#+105
   \   000009DA   0020               MOVS     R0,#+0
   \   000009DC   03B4               PUSH     {R0,R1}
   \   000009DE   0A21               MOVS     R1,#+10
   \   000009E0   0220               MOVS     R0,#+2
   \   000009E2   03B4               PUSH     {R0,R1}
   \   000009E4   0423               MOVS     R3,#+4
   \   000009E6   1A22               MOVS     R2,#+26
   \   000009E8   0021               MOVS     R1,#+0
   \   000009EA   06A8               ADD      R0,SP,#+24
   \   000009EC   ........           BL       Label
   \   000009F0   06B0               ADD      SP,SP,#+24
   \   000009F2   3BE0               B        ??Procedure_Paint_11
   \                     ??Procedure_Paint_44:
   \   000009F4   64050000           DC32     0x564
   \   000009F8   ........           DC32     g_leng
   \   000009FC   7D0A0000           DC32     0xa7d
   \   00000A00   ........           DC32     Speech
   \   00000A04   ........           DC32     `?<Constant "Const. ">`
   \   00000A08   ........           DC32     `?<Constant "Get reg.">`
   \   00000A0C   ........           DC32     `?<Constant "Set reg.">`
   \   00000A10   ........           DC32     `?<Constant "1>2 Q=1">`
   \   00000A14   ........           DC32     `?<Constant "1=2 Q=1">`
   \   00000A18   ........           DC32     `?<Constant "Q=1+2">`
   \   00000A1C   ........           DC32     `?<Constant "Q=1-2">`
   \   00000A20   ........           DC32     `?<Constant "Q=1x2">`
   \   00000A24   ........           DC32     `?<Constant "Q=1/2">`
   \   00000A28   ........           DC32     SPK_1
   3224                            }else{
   3225                              txt[0]='b';txt[1]=0;txt[2]=0;
   \                     ??Procedure_Paint_52:
   \   00000A2C   6846               MOV      R0,SP
   \   00000A2E   6221               MOVS     R1,#+98
   \   00000A30   0170               STRB     R1,[R0, #+0]
   \   00000A32   6846               MOV      R0,SP
   \   00000A34   0021               MOVS     R1,#+0
   \   00000A36   4170               STRB     R1,[R0, #+1]
   \   00000A38   6846               MOV      R0,SP
   \   00000A3A   0021               MOVS     R1,#+0
   \   00000A3C   8170               STRB     R1,[R0, #+2]
   3226                              CharToStr(Prc.Tag.Port, txt+1, 2); //(char Value, char *Vstring, char ill);
   \   00000A3E   0222               MOVS     R2,#+2
   \   00000A40   6946               MOV      R1,SP
   \   00000A42   491C               ADDS     R1,R1,#+1
   \   00000A44   02A8               ADD      R0,SP,#+8
   \   00000A46   007A               LDRB     R0,[R0, #+8]
   \   00000A48   ........           BL       CharToStr
   3227                              Label(txt,2,21,12,3,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A4C   82B0               SUB      SP,SP,#+8
   \   00000A4E   0020               MOVS     R0,#+0
   \   00000A50   0090               STR      R0,[SP, #+0]
   \   00000A52   6921               MOVS     R1,#+105
   \   00000A54   0020               MOVS     R0,#+0
   \   00000A56   03B4               PUSH     {R0,R1}
   \   00000A58   1421               MOVS     R1,#+20
   \   00000A5A   0320               MOVS     R0,#+3
   \   00000A5C   03B4               PUSH     {R0,R1}
   \   00000A5E   0C23               MOVS     R3,#+12
   \   00000A60   1522               MOVS     R2,#+21
   \   00000A62   0221               MOVS     R1,#+2
   \   00000A64   06A8               ADD      R0,SP,#+24
   \   00000A66   ........           BL       Label
   \   00000A6A   06B0               ADD      SP,SP,#+24
   3228                          
   3229                             /* txt[1]=0;txt[2]=0;
   3230                          CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   3231                          Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)
   3232                              */
   3233                            }
   3234                           
   3235                        }
   3236                      }
   3237          
   3238                    
   3239                      if ((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) WybProc(1,0);
   \                     ??Procedure_Paint_11:
   \   00000A6C   6846               MOV      R0,SP
   \   00000A6E   007A               LDRB     R0,[R0, #+8]
   \   00000A70   1428               CMP      R0,#+20
   \   00000A72   07D3               BCC      ??Procedure_Paint_53
   \   00000A74   6846               MOV      R0,SP
   \   00000A76   007A               LDRB     R0,[R0, #+8]
   \   00000A78   1928               CMP      R0,#+25
   \   00000A7A   03D2               BCS      ??Procedure_Paint_53
   \   00000A7C   0021               MOVS     R1,#+0
   \   00000A7E   0120               MOVS     R0,#+1
   \   00000A80   ........           BL       WybProc
   3240                        
   3241                      
   3242                      
   3243                      if  ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))
   \                     ??Procedure_Paint_53:
   \   00000A84   6846               MOV      R0,SP
   \   00000A86   007A               LDRB     R0,[R0, #+8]
   \   00000A88   2028               CMP      R0,#+32
   \   00000A8A   07D3               BCC      ??Procedure_Paint_54
   \   00000A8C   6846               MOV      R0,SP
   \   00000A8E   007A               LDRB     R0,[R0, #+8]
   \   00000A90   2828               CMP      R0,#+40
   \   00000A92   03D2               BCS      ??Procedure_Paint_54
   3244                      { 
   3245                        WybProc(2,0);
   \   00000A94   0021               MOVS     R1,#+0
   \   00000A96   0220               MOVS     R0,#+2
   \   00000A98   ........           BL       WybProc
   3246                      }
   3247          
   3248           
   3249          
   3250                      if  ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))
   \                     ??Procedure_Paint_54:
   \   00000A9C   6846               MOV      R0,SP
   \   00000A9E   007A               LDRB     R0,[R0, #+8]
   \   00000AA0   2D28               CMP      R0,#+45
   \   00000AA2   07D3               BCC      ??Procedure_Paint_55
   \   00000AA4   6846               MOV      R0,SP
   \   00000AA6   007A               LDRB     R0,[R0, #+8]
   \   00000AA8   3028               CMP      R0,#+48
   \   00000AAA   03D2               BCS      ??Procedure_Paint_55
   3251                      { 
   3252                        WybProc(1,1);
   \   00000AAC   0121               MOVS     R1,#+1
   \   00000AAE   0120               MOVS     R0,#+1
   \   00000AB0   ........           BL       WybProc
   3253                      } 
   3254          
   3255                      if  ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   \                     ??Procedure_Paint_55:
   \   00000AB4   6846               MOV      R0,SP
   \   00000AB6   007A               LDRB     R0,[R0, #+8]
   \   00000AB8   3728               CMP      R0,#+55
   \   00000ABA   07D3               BCC      ??Procedure_Paint_56
   \   00000ABC   6846               MOV      R0,SP
   \   00000ABE   007A               LDRB     R0,[R0, #+8]
   \   00000AC0   4028               CMP      R0,#+64
   \   00000AC2   03D2               BCS      ??Procedure_Paint_56
   3256                      { 
   3257                        WybProc(2,1);
   \   00000AC4   0121               MOVS     R1,#+1
   \   00000AC6   0220               MOVS     R0,#+2
   \   00000AC8   ........           BL       WybProc
   3258                      } 
   3259                      
   3260                  if ((Prc.Type==ProcTimerSet))
   \                     ??Procedure_Paint_56:
   \   00000ACC   6846               MOV      R0,SP
   \   00000ACE   007A               LDRB     R0,[R0, #+8]
   \   00000AD0   2D28               CMP      R0,#+45
   \   00000AD2   66D1               BNE      ??Procedure_Paint_57
   3261                  {
   3262                    Label(Speech[g_leng].IleSek,0,3,37,13,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AD4   82B0               SUB      SP,SP,#+8
   \   00000AD6   0020               MOVS     R0,#+0
   \   00000AD8   0090               STR      R0,[SP, #+0]
   \   00000ADA   7F21               MOVS     R1,#+127
   \   00000ADC   0120               MOVS     R0,#+1
   \   00000ADE   03B4               PUSH     {R0,R1}
   \   00000AE0   2121               MOVS     R1,#+33
   \   00000AE2   0D20               MOVS     R0,#+13
   \   00000AE4   03B4               PUSH     {R0,R1}
   \   00000AE6   2523               MOVS     R3,#+37
   \   00000AE8   0322               MOVS     R2,#+3
   \   00000AEA   0021               MOVS     R1,#+0
   \   00000AEC   BF48               LDR      R0,??Procedure_Paint_58  ;; 0x3ed
   \   00000AEE   C04C               LDR      R4,??Procedure_Paint_58+0x4  ;; g_leng
   \   00000AF0   2468               LDR      R4,[R4, #+0]
   \   00000AF2   C04D               LDR      R5,??Procedure_Paint_58+0x8  ;; 0xa7d
   \   00000AF4   6C43               MULS     R4,R5,R4
   \   00000AF6   C04D               LDR      R5,??Procedure_Paint_58+0xC  ;; Speech
   \   00000AF8   2C19               ADDS     R4,R5,R4
   \   00000AFA   2018               ADDS     R0,R4,R0
   \   00000AFC   ........           BL       Label
   \   00000B00   06B0               ADD      SP,SP,#+24
   3263                              
   3264                    FloToStr(Prc.Tag.SetCounter , txt, 9); //(char Value, char *Vstring, char ill);
   \   00000B02   0922               MOVS     R2,#+9
   \   00000B04   6946               MOV      R1,SP
   \   00000B06   0C00               MOVS     R4,R1
   \   00000B08   1500               MOVS     R5,R2
   \   00000B0A   0498               LDR      R0,[SP, #+16]
   \   00000B0C   ........           BL       __aeabi_ui2f
   \   00000B10   2A00               MOVS     R2,R5
   \   00000B12   2100               MOVS     R1,R4
   \   00000B14   ........           BL       FloToStr
   3265                    Label(txt,0,12,26,9,44,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B18   82B0               SUB      SP,SP,#+8
   \   00000B1A   0020               MOVS     R0,#+0
   \   00000B1C   0090               STR      R0,[SP, #+0]
   \   00000B1E   7F21               MOVS     R1,#+127
   \   00000B20   0120               MOVS     R0,#+1
   \   00000B22   03B4               PUSH     {R0,R1}
   \   00000B24   2C21               MOVS     R1,#+44
   \   00000B26   0920               MOVS     R0,#+9
   \   00000B28   03B4               PUSH     {R0,R1}
   \   00000B2A   1A23               MOVS     R3,#+26
   \   00000B2C   0C22               MOVS     R2,#+12
   \   00000B2E   0021               MOVS     R1,#+0
   \   00000B30   06A8               ADD      R0,SP,#+24
   \   00000B32   ........           BL       Label
   \   00000B36   06B0               ADD      SP,SP,#+24
   3266          
   3267                    H_line(10,36,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000B38   0123               MOVS     R3,#+1
   \   00000B3A   2E22               MOVS     R2,#+46
   \   00000B3C   2421               MOVS     R1,#+36
   \   00000B3E   0A20               MOVS     R0,#+10
   \   00000B40   ........           BL       H_line
   3268                    H_line(10,24,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000B44   0123               MOVS     R3,#+1
   \   00000B46   2E22               MOVS     R2,#+46
   \   00000B48   1821               MOVS     R1,#+24
   \   00000B4A   0A20               MOVS     R0,#+10
   \   00000B4C   ........           BL       H_line
   3269                    V_line(10,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B50   0123               MOVS     R3,#+1
   \   00000B52   0B22               MOVS     R2,#+11
   \   00000B54   1921               MOVS     R1,#+25
   \   00000B56   0A20               MOVS     R0,#+10
   \   00000B58   ........           BL       V_line
   3270                    V_line(55,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B5C   0123               MOVS     R3,#+1
   \   00000B5E   0B22               MOVS     R2,#+11
   \   00000B60   1921               MOVS     R1,#+25
   \   00000B62   3720               MOVS     R0,#+55
   \   00000B64   ........           BL       V_line
   3271                    
   3272                    
   3273                    
   3274                    txt[1]=0;
   \   00000B68   6846               MOV      R0,SP
   \   00000B6A   0021               MOVS     R1,#+0
   \   00000B6C   4170               STRB     R1,[R0, #+1]
   3275                    txt[0]=30;
   \   00000B6E   6846               MOV      R0,SP
   \   00000B70   1E21               MOVS     R1,#+30
   \   00000B72   0170               STRB     R1,[R0, #+0]
   3276                    Button(txt,33,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000B74   82B0               SUB      SP,SP,#+8
   \   00000B76   1320               MOVS     R0,#+19
   \   00000B78   0090               STR      R0,[SP, #+0]
   \   00000B7A   1323               MOVS     R3,#+19
   \   00000B7C   0322               MOVS     R2,#+3
   \   00000B7E   2121               MOVS     R1,#+33
   \   00000B80   02A8               ADD      R0,SP,#+8
   \   00000B82   ........           BL       Button
   \   00000B86   02B0               ADD      SP,SP,#+8
   3277                    txt[0]=31;
   \   00000B88   6846               MOV      R0,SP
   \   00000B8A   1F21               MOVS     R1,#+31
   \   00000B8C   0170               STRB     R1,[R0, #+0]
   3278                    Button(txt,12,3,19,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000B8E   82B0               SUB      SP,SP,#+8
   \   00000B90   1320               MOVS     R0,#+19
   \   00000B92   0090               STR      R0,[SP, #+0]
   \   00000B94   1323               MOVS     R3,#+19
   \   00000B96   0322               MOVS     R2,#+3
   \   00000B98   0C21               MOVS     R1,#+12
   \   00000B9A   02A8               ADD      R0,SP,#+8
   \   00000B9C   ........           BL       Button
   \   00000BA0   02B0               ADD      SP,SP,#+8
   3279                 
   3280                  }
   3281                  
   3282                  
   3283                  
   3284                  if (Prc.Type==ProcClock)
   \                     ??Procedure_Paint_57:
   \   00000BA2   6846               MOV      R0,SP
   \   00000BA4   007A               LDRB     R0,[R0, #+8]
   \   00000BA6   2E28               CMP      R0,#+46
   \   00000BA8   00D0               BEQ      .+4
   \   00000BAA   87E0               B        ??Procedure_Paint_59
   3285                  {
   3286          
   3287                 
   3288                 Label(   Speech[g_leng].Typ_,0,4,33,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000BAC   82B0               SUB      SP,SP,#+8
   \   00000BAE   0020               MOVS     R0,#+0
   \   00000BB0   0090               STR      R0,[SP, #+0]
   \   00000BB2   7F21               MOVS     R1,#+127
   \   00000BB4   0120               MOVS     R0,#+1
   \   00000BB6   03B4               PUSH     {R0,R1}
   \   00000BB8   2121               MOVS     R1,#+33
   \   00000BBA   0A20               MOVS     R0,#+10
   \   00000BBC   03B4               PUSH     {R0,R1}
   \   00000BBE   2123               MOVS     R3,#+33
   \   00000BC0   0422               MOVS     R2,#+4
   \   00000BC2   0021               MOVS     R1,#+0
   \   00000BC4   8D48               LDR      R0,??Procedure_Paint_58+0x10  ;; 0x5cd
   \   00000BC6   8A4C               LDR      R4,??Procedure_Paint_58+0x4  ;; g_leng
   \   00000BC8   2468               LDR      R4,[R4, #+0]
   \   00000BCA   8A4D               LDR      R5,??Procedure_Paint_58+0x8  ;; 0xa7d
   \   00000BCC   6C43               MULS     R4,R5,R4
   \   00000BCE   8A4D               LDR      R5,??Procedure_Paint_58+0xC  ;; Speech
   \   00000BD0   2C19               ADDS     R4,R5,R4
   \   00000BD2   2018               ADDS     R0,R4,R0
   \   00000BD4   ........           BL       Label
   \   00000BD8   06B0               ADD      SP,SP,#+24
   3289                       
   3290                 Label(   Speech[g_leng].Miesiac+(Prc.Tag.ClkPrcType  *15),0,4,24,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000BDA   82B0               SUB      SP,SP,#+8
   \   00000BDC   0020               MOVS     R0,#+0
   \   00000BDE   0090               STR      R0,[SP, #+0]
   \   00000BE0   7F21               MOVS     R1,#+127
   \   00000BE2   0120               MOVS     R0,#+1
   \   00000BE4   03B4               PUSH     {R0,R1}
   \   00000BE6   2121               MOVS     R1,#+33
   \   00000BE8   0A20               MOVS     R0,#+10
   \   00000BEA   03B4               PUSH     {R0,R1}
   \   00000BEC   1823               MOVS     R3,#+24
   \   00000BEE   0422               MOVS     R2,#+4
   \   00000BF0   0021               MOVS     R1,#+0
   \   00000BF2   8348               LDR      R0,??Procedure_Paint_58+0x14  ;; 0x582
   \   00000BF4   08AC               ADD      R4,SP,#+32
   \   00000BF6   247A               LDRB     R4,[R4, #+8]
   \   00000BF8   0F25               MOVS     R5,#+15
   \   00000BFA   6C43               MULS     R4,R5,R4
   \   00000BFC   7C4D               LDR      R5,??Procedure_Paint_58+0x4  ;; g_leng
   \   00000BFE   2D68               LDR      R5,[R5, #+0]
   \   00000C00   7C4E               LDR      R6,??Procedure_Paint_58+0x8  ;; 0xa7d
   \   00000C02   7543               MULS     R5,R6,R5
   \   00000C04   7C4E               LDR      R6,??Procedure_Paint_58+0xC  ;; Speech
   \   00000C06   7519               ADDS     R5,R6,R5
   \   00000C08   2C19               ADDS     R4,R5,R4
   \   00000C0A   2018               ADDS     R0,R4,R0
   \   00000C0C   ........           BL       Label
   \   00000C10   06B0               ADD      SP,SP,#+24
   3291                              
   3292          
   3293                 
   3294                 CharToStr(Prc.Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C12   0222               MOVS     R2,#+2
   \   00000C14   6946               MOV      R1,SP
   \   00000C16   02A8               ADD      R0,SP,#+8
   \   00000C18   407A               LDRB     R0,[R0, #+9]
   \   00000C1A   ........           BL       CharToStr
   3295                 Label(txt,2,24,7,2,14,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C1E   82B0               SUB      SP,SP,#+8
   \   00000C20   0020               MOVS     R0,#+0
   \   00000C22   0090               STR      R0,[SP, #+0]
   \   00000C24   7F21               MOVS     R1,#+127
   \   00000C26   0120               MOVS     R0,#+1
   \   00000C28   03B4               PUSH     {R0,R1}
   \   00000C2A   0E21               MOVS     R1,#+14
   \   00000C2C   0220               MOVS     R0,#+2
   \   00000C2E   03B4               PUSH     {R0,R1}
   \   00000C30   0723               MOVS     R3,#+7
   \   00000C32   1822               MOVS     R2,#+24
   \   00000C34   0221               MOVS     R1,#+2
   \   00000C36   06A8               ADD      R0,SP,#+24
   \   00000C38   ........           BL       Label
   \   00000C3C   06B0               ADD      SP,SP,#+24
   3296                  
   3297                 
   3298                 //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3299                 Button("> ",43,24,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000C3E   82B0               SUB      SP,SP,#+8
   \   00000C40   1320               MOVS     R0,#+19
   \   00000C42   0090               STR      R0,[SP, #+0]
   \   00000C44   1223               MOVS     R3,#+18
   \   00000C46   1822               MOVS     R2,#+24
   \   00000C48   2B21               MOVS     R1,#+43
   \   00000C4A   6EA0               ADR      R0,??Procedure_Paint_58+0x18  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000C4C   ........           BL       Button
   \   00000C50   02B0               ADD      SP,SP,#+8
   3300                 
   3301                 H_line(23,17,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000C52   0123               MOVS     R3,#+1
   \   00000C54   1122               MOVS     R2,#+17
   \   00000C56   1121               MOVS     R1,#+17
   \   00000C58   1720               MOVS     R0,#+23
   \   00000C5A   ........           BL       H_line
   3302                 H_line(23,6,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000C5E   0123               MOVS     R3,#+1
   \   00000C60   1122               MOVS     R2,#+17
   \   00000C62   0621               MOVS     R1,#+6
   \   00000C64   1720               MOVS     R0,#+23
   \   00000C66   ........           BL       H_line
   3303                 V_line(23,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000C6A   0123               MOVS     R3,#+1
   \   00000C6C   0B22               MOVS     R2,#+11
   \   00000C6E   0621               MOVS     R1,#+6
   \   00000C70   1720               MOVS     R0,#+23
   \   00000C72   ........           BL       V_line
   3304                 V_line(39,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000C76   0123               MOVS     R3,#+1
   \   00000C78   0B22               MOVS     R2,#+11
   \   00000C7A   0621               MOVS     R1,#+6
   \   00000C7C   2720               MOVS     R0,#+39
   \   00000C7E   ........           BL       V_line
   3305          
   3306                 
   3307                
   3308                 
   3309          
   3310                 txt[1]=0;
   \   00000C82   6846               MOV      R0,SP
   \   00000C84   0021               MOVS     R1,#+0
   \   00000C86   4170               STRB     R1,[R0, #+1]
   3311                 txt[0]=30;
   \   00000C88   6846               MOV      R0,SP
   \   00000C8A   1E21               MOVS     R1,#+30
   \   00000C8C   0170               STRB     R1,[R0, #+0]
   3312                 Button(txt,43,3,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000C8E   82B0               SUB      SP,SP,#+8
   \   00000C90   1320               MOVS     R0,#+19
   \   00000C92   0090               STR      R0,[SP, #+0]
   \   00000C94   1223               MOVS     R3,#+18
   \   00000C96   0322               MOVS     R2,#+3
   \   00000C98   2B21               MOVS     R1,#+43
   \   00000C9A   02A8               ADD      R0,SP,#+8
   \   00000C9C   ........           BL       Button
   \   00000CA0   02B0               ADD      SP,SP,#+8
   3313                 txt[0]=31;
   \   00000CA2   6846               MOV      R0,SP
   \   00000CA4   1F21               MOVS     R1,#+31
   \   00000CA6   0170               STRB     R1,[R0, #+0]
   3314                 Button(txt,2,3,18,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000CA8   82B0               SUB      SP,SP,#+8
   \   00000CAA   1320               MOVS     R0,#+19
   \   00000CAC   0090               STR      R0,[SP, #+0]
   \   00000CAE   1223               MOVS     R3,#+18
   \   00000CB0   0322               MOVS     R2,#+3
   \   00000CB2   0221               MOVS     R1,#+2
   \   00000CB4   02A8               ADD      R0,SP,#+8
   \   00000CB6   ........           BL       Button
   \   00000CBA   02B0               ADD      SP,SP,#+8
   3315                 
   3316                        
   3317                      }   
   3318                /*   
   3319                 if (Prc.Type==ProcStartTimer) 
   3320                 {
   3321                   Button("> ",2,46,18,11); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   3322                 }
   3323                */   
   3324                 
   3325                 if (Prc.Type==ProcDay) 
   \                     ??Procedure_Paint_59:
   \   00000CBC   6846               MOV      R0,SP
   \   00000CBE   007A               LDRB     R0,[R0, #+8]
   \   00000CC0   2F28               CMP      R0,#+47
   \   00000CC2   34D1               BNE      ??Procedure_Paint_60
   3326                 {
   3327                          Button("> ",43,25,18,18);
   \   00000CC4   82B0               SUB      SP,SP,#+8
   \   00000CC6   1220               MOVS     R0,#+18
   \   00000CC8   0090               STR      R0,[SP, #+0]
   \   00000CCA   1223               MOVS     R3,#+18
   \   00000CCC   1922               MOVS     R2,#+25
   \   00000CCE   2B21               MOVS     R1,#+43
   \   00000CD0   4CA0               ADR      R0,??Procedure_Paint_58+0x18  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000CD2   ........           BL       Button
   \   00000CD6   02B0               ADD      SP,SP,#+8
   3328                          Button("< ",2,25,18,18);
   \   00000CD8   82B0               SUB      SP,SP,#+8
   \   00000CDA   1220               MOVS     R0,#+18
   \   00000CDC   0090               STR      R0,[SP, #+0]
   \   00000CDE   1223               MOVS     R3,#+18
   \   00000CE0   1922               MOVS     R2,#+25
   \   00000CE2   0221               MOVS     R1,#+2
   \   00000CE4   48A0               ADR      R0,??Procedure_Paint_58+0x1C  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000CE6   ........           BL       Button
   \   00000CEA   02B0               ADD      SP,SP,#+8
   3329                          
   3330                          if(Prc.Tag.DayOfWeek==0) Prc.Tag.DayOfWeek=1;
   \   00000CEC   02A8               ADD      R0,SP,#+8
   \   00000CEE   007A               LDRB     R0,[R0, #+8]
   \   00000CF0   0028               CMP      R0,#+0
   \   00000CF2   02D1               BNE      ??Procedure_Paint_61
   \   00000CF4   02A8               ADD      R0,SP,#+8
   \   00000CF6   0121               MOVS     R1,#+1
   \   00000CF8   0172               STRB     R1,[R0, #+8]
   3331                          Label((char*)DeyOfWeekStr[g_leng][Prc.Tag.DayOfWeek],2,20,29,2,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_61:
   \   00000CFA   82B0               SUB      SP,SP,#+8
   \   00000CFC   0020               MOVS     R0,#+0
   \   00000CFE   0090               STR      R0,[SP, #+0]
   \   00000D00   6921               MOVS     R1,#+105
   \   00000D02   0020               MOVS     R0,#+0
   \   00000D04   03B4               PUSH     {R0,R1}
   \   00000D06   1421               MOVS     R1,#+20
   \   00000D08   0220               MOVS     R0,#+2
   \   00000D0A   03B4               PUSH     {R0,R1}
   \   00000D0C   1D23               MOVS     R3,#+29
   \   00000D0E   1422               MOVS     R2,#+20
   \   00000D10   0221               MOVS     R1,#+2
   \   00000D12   08A8               ADD      R0,SP,#+32
   \   00000D14   007A               LDRB     R0,[R0, #+8]
   \   00000D16   0224               MOVS     R4,#+2
   \   00000D18   6043               MULS     R0,R4,R0
   \   00000D1A   354C               LDR      R4,??Procedure_Paint_58+0x4  ;; g_leng
   \   00000D1C   2468               LDR      R4,[R4, #+0]
   \   00000D1E   1025               MOVS     R5,#+16
   \   00000D20   6C43               MULS     R4,R5,R4
   \   00000D22   3A4D               LDR      R5,??Procedure_Paint_58+0x20  ;; DeyOfWeekStr
   \   00000D24   2C19               ADDS     R4,R5,R4
   \   00000D26   2018               ADDS     R0,R4,R0
   \   00000D28   ........           BL       Label
   \   00000D2C   06B0               ADD      SP,SP,#+24
   3332                        
   3333                 }
   3334                 
   3335                 
   3336                 if (Prc.Type==ProcConstAnal) 
   \                     ??Procedure_Paint_60:
   \   00000D2E   6846               MOV      R0,SP
   \   00000D30   007A               LDRB     R0,[R0, #+8]
   \   00000D32   3728               CMP      R0,#+55
   \   00000D34   10D1               BNE      ??Procedure_Paint_62
   3337                 {
   3338                          Button(Speech[g_leng].Zmiana,10,16,40,18);
   \   00000D36   82B0               SUB      SP,SP,#+8
   \   00000D38   1220               MOVS     R0,#+18
   \   00000D3A   0090               STR      R0,[SP, #+0]
   \   00000D3C   2823               MOVS     R3,#+40
   \   00000D3E   1022               MOVS     R2,#+16
   \   00000D40   0A21               MOVS     R1,#+10
   \   00000D42   3348               LDR      R0,??Procedure_Paint_58+0x24  ;; 0x50a
   \   00000D44   2A4C               LDR      R4,??Procedure_Paint_58+0x4  ;; g_leng
   \   00000D46   2468               LDR      R4,[R4, #+0]
   \   00000D48   2A4D               LDR      R5,??Procedure_Paint_58+0x8  ;; 0xa7d
   \   00000D4A   6C43               MULS     R4,R5,R4
   \   00000D4C   2A4D               LDR      R5,??Procedure_Paint_58+0xC  ;; Speech
   \   00000D4E   2C19               ADDS     R4,R5,R4
   \   00000D50   2018               ADDS     R0,R4,R0
   \   00000D52   ........           BL       Button
   \   00000D56   02B0               ADD      SP,SP,#+8
   3339                 
   3340                 }
   3341                 
   3342                 if ((Prc.Type==ProcGetReg) || (Prc.Type==ProcSetReg) )
   \                     ??Procedure_Paint_62:
   \   00000D58   6846               MOV      R0,SP
   \   00000D5A   007A               LDRB     R0,[R0, #+8]
   \   00000D5C   3828               CMP      R0,#+56
   \   00000D5E   03D0               BEQ      ??Procedure_Paint_63
   \   00000D60   6846               MOV      R0,SP
   \   00000D62   007A               LDRB     R0,[R0, #+8]
   \   00000D64   3928               CMP      R0,#+57
   \   00000D66   3DD1               BNE      ??Procedure_Paint_64
   3343                 {
   3344                 
   3345                     Button("> ",43,5,18,18);
   \                     ??Procedure_Paint_63:
   \   00000D68   82B0               SUB      SP,SP,#+8
   \   00000D6A   1220               MOVS     R0,#+18
   \   00000D6C   0090               STR      R0,[SP, #+0]
   \   00000D6E   1223               MOVS     R3,#+18
   \   00000D70   0522               MOVS     R2,#+5
   \   00000D72   2B21               MOVS     R1,#+43
   \   00000D74   23A0               ADR      R0,??Procedure_Paint_58+0x18  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000D76   ........           BL       Button
   \   00000D7A   02B0               ADD      SP,SP,#+8
   3346                     Button("< ",2, 5,18,18);
   \   00000D7C   82B0               SUB      SP,SP,#+8
   \   00000D7E   1220               MOVS     R0,#+18
   \   00000D80   0090               STR      R0,[SP, #+0]
   \   00000D82   1223               MOVS     R3,#+18
   \   00000D84   0522               MOVS     R2,#+5
   \   00000D86   0221               MOVS     R1,#+2
   \   00000D88   1FA0               ADR      R0,??Procedure_Paint_58+0x1C  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000D8A   ........           BL       Button
   \   00000D8E   02B0               ADD      SP,SP,#+8
   3347                     Label("Reg:",0,22,15,4,14,1,127,0);
   \   00000D90   82B0               SUB      SP,SP,#+8
   \   00000D92   0020               MOVS     R0,#+0
   \   00000D94   0090               STR      R0,[SP, #+0]
   \   00000D96   7F21               MOVS     R1,#+127
   \   00000D98   0120               MOVS     R0,#+1
   \   00000D9A   03B4               PUSH     {R0,R1}
   \   00000D9C   0E21               MOVS     R1,#+14
   \   00000D9E   0420               MOVS     R0,#+4
   \   00000DA0   03B4               PUSH     {R0,R1}
   \   00000DA2   0F23               MOVS     R3,#+15
   \   00000DA4   1622               MOVS     R2,#+22
   \   00000DA6   0021               MOVS     R1,#+0
   \   00000DA8   1A48               LDR      R0,??Procedure_Paint_58+0x28  ;; `?<Constant "Reg:">`
   \   00000DAA   ........           BL       Label
   \   00000DAE   06B0               ADD      SP,SP,#+24
   3348                     txt[1]=0;
   \   00000DB0   6846               MOV      R0,SP
   \   00000DB2   0021               MOVS     R1,#+0
   \   00000DB4   4170               STRB     R1,[R0, #+1]
   3349                     char il=CharToStr(Prc.Tag.RegNr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000DB6   0222               MOVS     R2,#+2
   \   00000DB8   6946               MOV      R1,SP
   \   00000DBA   02A8               ADD      R0,SP,#+8
   \   00000DBC   007A               LDRB     R0,[R0, #+8]
   \   00000DBE   ........           BL       CharToStr
   \   00000DC2   0400               MOVS     R4,R0
   3350                     Label(txt,2,22,5,4,18,1,127,0);
   \   00000DC4   82B0               SUB      SP,SP,#+8
   \   00000DC6   0020               MOVS     R0,#+0
   \   00000DC8   0090               STR      R0,[SP, #+0]
   \   00000DCA   7F21               MOVS     R1,#+127
   \   00000DCC   0120               MOVS     R0,#+1
   \   00000DCE   03B4               PUSH     {R0,R1}
   \   00000DD0   1221               MOVS     R1,#+18
   \   00000DD2   0420               MOVS     R0,#+4
   \   00000DD4   03B4               PUSH     {R0,R1}
   \   00000DD6   0523               MOVS     R3,#+5
   \   00000DD8   1622               MOVS     R2,#+22
   \   00000DDA   0221               MOVS     R1,#+2
   \   00000DDC   06A8               ADD      R0,SP,#+24
   \   00000DDE   ........           BL       Label
   \   00000DE2   06B0               ADD      SP,SP,#+24
   3351                 }
   3352                 
   3353                }
   \                     ??Procedure_Paint_64:
   \   00000DE4   08B0               ADD      SP,SP,#+32
   \   00000DE6   70BC               POP      {R4-R6}
   \   00000DE8   01BC               POP      {R0}
   \   00000DEA   0047               BX       R0               ;; return
   \                     ??Procedure_Paint_58:
   \   00000DEC   ED030000           DC32     0x3ed
   \   00000DF0   ........           DC32     g_leng
   \   00000DF4   7D0A0000           DC32     0xa7d
   \   00000DF8   ........           DC32     Speech
   \   00000DFC   CD050000           DC32     0x5cd
   \   00000E00   82050000           DC32     0x582
   \   00000E04   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000E08   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000E0C   ........           DC32     DeyOfWeekStr
   \   00000E10   0A050000           DC32     0x50a
   \   00000E14   ........           DC32     `?<Constant "Reg:">`
   3354                

   \                                 In section .bss, align 1
   3355          char ProcGlobType_down;
   \                     ProcGlobType_down:
   \   00000000                      DS8 1
   3356          
   3357          

   \                                 In section Debug.txt, align 4, keep-with-next
   3358          void Procedure_Event(void)
   3359                {
   \                     Procedure_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   3360                 char MenuPaintExecut=0;
   \   00000002   0024               MOVS     R4,#+0
   3361                 char ProcGlobType_up;
   3362                 char ind;
   3363                 char txt[2];
   3364                 char exit;
   3365                 
   3366                 
   3367                        exit=0;
   \   00000004   0026               MOVS     R6,#+0
   3368                 //zdarzenie typu down "X"
   3369                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   C848               LDR      R0,??Procedure_Event_0  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   39DB               BLT      ??Procedure_Event_1
   \   00000010   C548               LDR      R0,??Procedure_Event_0  ;; X_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   3F28               CMP      R0,#+63
   \   00000018   34DA               BGE      ??Procedure_Event_1
   \   0000001A   C448               LDR      R0,??Procedure_Event_0+0x4  ;; Y_down
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   405E               LDRSH    R0,[R0, R1]
   \   00000020   7128               CMP      R0,#+113
   \   00000022   2FDB               BLT      ??Procedure_Event_1
   \   00000024   C148               LDR      R0,??Procedure_Event_0+0x4  ;; Y_down
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   405E               LDRSH    R0,[R0, R1]
   \   0000002A   7F28               CMP      R0,#+127
   \   0000002C   2ADA               BGE      ??Procedure_Event_1
   3370                  {
   3371                    //MenuPaint();
   3372                    H_line(49,114,10,0);
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   7221               MOVS     R1,#+114
   \   00000034   3120               MOVS     R0,#+49
   \   00000036   ........           BL       H_line
   3373                    H_line(49,123,10,0); 
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7B21               MOVS     R1,#+123
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       H_line
   3374                    V_line(49,114,10,0); 
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7221               MOVS     R1,#+114
   \   0000004C   3120               MOVS     R0,#+49
   \   0000004E   ........           BL       V_line
   3375                    V_line(58,114,10,0); 
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   0A22               MOVS     R2,#+10
   \   00000056   7221               MOVS     R1,#+114
   \   00000058   3A20               MOVS     R0,#+58
   \   0000005A   ........           BL       V_line
   3376                    exit=1;
   \   0000005E   0126               MOVS     R6,#+1
   3377                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000060   B348               LDR      R0,??Procedure_Event_0+0x8  ;; 0x13d7e9
   \   00000062   0078               LDRB     R0,[R0, #+0]
   \   00000064   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000066   000E               LSRS     R0,R0,#+24
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   0BD1               BNE      ??Procedure_Event_1
   \   0000006C   B148               LDR      R0,??Procedure_Event_0+0xC  ;; 0xfffff430
   \   0000006E   8021               MOVS     R1,#+128
   \   00000070   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000072   0160               STR      R1,[R0, #+0]
   \   00000074   B04A               LDR      R2,??Procedure_Event_0+0x10  ;; ButtonBipCounter
   \   00000076   B148               LDR      R0,??Procedure_Event_0+0x14  ;; g_counter
   \   00000078   03C8               LDM      R0!,{R0,R1}
   \   0000007A   0023               MOVS     R3,#+0
   \   0000007C   0830               ADDS     R0,R0,#+8
   \   0000007E   5941               ADCS     R1,R1,R3
   \   00000080   03C2               STM      R2!,{R0,R1}
   \   00000082   083A               SUBS     R2,R2,#+8
   3378                  }
   3379            
   3380              
   3381                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??Procedure_Event_1:
   \   00000084   AE48               LDR      R0,??Procedure_Event_0+0x18  ;; X_up
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   2F28               CMP      R0,#+47
   \   0000008C   2FDB               BLT      ??Procedure_Event_2
   \   0000008E   AC48               LDR      R0,??Procedure_Event_0+0x18  ;; X_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   3F28               CMP      R0,#+63
   \   00000096   2ADA               BGE      ??Procedure_Event_2
   \   00000098   AA48               LDR      R0,??Procedure_Event_0+0x1C  ;; Y_up
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   405E               LDRSH    R0,[R0, R1]
   \   0000009E   7128               CMP      R0,#+113
   \   000000A0   25DB               BLT      ??Procedure_Event_2
   \   000000A2   A848               LDR      R0,??Procedure_Event_0+0x1C  ;; Y_up
   \   000000A4   0021               MOVS     R1,#+0
   \   000000A6   405E               LDRSH    R0,[R0, R1]
   \   000000A8   7F28               CMP      R0,#+127
   \   000000AA   20DA               BGE      ??Procedure_Event_2
   3382                  {
   3383                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000AC   A048               LDR      R0,??Procedure_Event_0+0x8  ;; 0x13d7e9
   \   000000AE   0078               LDRB     R0,[R0, #+0]
   \   000000B0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   0BD1               BNE      ??Procedure_Event_3
   \   000000B8   9E48               LDR      R0,??Procedure_Event_0+0xC  ;; 0xfffff430
   \   000000BA   8021               MOVS     R1,#+128
   \   000000BC   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000BE   0160               STR      R1,[R0, #+0]
   \   000000C0   9D4A               LDR      R2,??Procedure_Event_0+0x10  ;; ButtonBipCounter
   \   000000C2   9E48               LDR      R0,??Procedure_Event_0+0x14  ;; g_counter
   \   000000C4   03C8               LDM      R0!,{R0,R1}
   \   000000C6   0023               MOVS     R3,#+0
   \   000000C8   0830               ADDS     R0,R0,#+8
   \   000000CA   5941               ADCS     R1,R1,R3
   \   000000CC   03C2               STM      R2!,{R0,R1}
   \   000000CE   083A               SUBS     R2,R2,#+8
   3384                    exit=1;
   \                     ??Procedure_Event_3:
   \   000000D0   0126               MOVS     R6,#+1
   3385                    Rej_poz=0;
   \   000000D2   9D48               LDR      R0,??Procedure_Event_0+0x20  ;; Rej_poz
   \   000000D4   0021               MOVS     R1,#+0
   \   000000D6   0160               STR      R1,[R0, #+0]
   3386          
   3387                    CountLines(&gProg);
   \   000000D8   9C48               LDR      R0,??Procedure_Event_0+0x24  ;; gProg
   \   000000DA   ........           BL       CountLines
   3388            
   3389                    
   3390                      MenuLevel=(MenuLevel/10);
   \   000000DE   9C48               LDR      R0,??Procedure_Event_0+0x28  ;; MenuLevel
   \   000000E0   0068               LDR      R0,[R0, #+0]
   \   000000E2   0A21               MOVS     R1,#+10
   \   000000E4   ........           BL       __aeabi_idivmod
   \   000000E8   9949               LDR      R1,??Procedure_Event_0+0x28  ;; MenuLevel
   \   000000EA   0860               STR      R0,[R1, #+0]
   3391                      MenuPaintExecut=1;
   \   000000EC   0124               MOVS     R4,#+1
   3392          
   3393                  }  
   3394                 
   3395          if (exit==0)       
   \                     ??Procedure_Event_2:
   \   000000EE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000F0   360E               LSRS     R6,R6,#+24
   \   000000F2   002E               CMP      R6,#+0
   \   000000F4   01D0               BEQ      .+6
   \   000000F6   00F0F1FE           BL       ??Procedure_Event_4
   3396          {
   3397                  
   3398                  ProgramChange=1;  
   \   000000FA   9648               LDR      R0,??Procedure_Event_0+0x2C  ;; ProgramChange
   \   000000FC   0121               MOVS     R1,#+1
   \   000000FE   0170               STRB     R1,[R0, #+0]
   3399                  ProcGlobType_up=0;
   \   00000100   6846               MOV      R0,SP
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   0171               STRB     R1,[R0, #+4]
   3400                  ind=0;
   \   00000106   0023               MOVS     R3,#+0
   3401                  for (char j=2; j>=1; j--)
   \   00000108   0225               MOVS     R5,#+2
   \   0000010A   62E0               B        ??Procedure_Event_5
   3402                   for(char i=0; i<3; i++)
   3403                   {
   3404                      ind++;
   \                     ??Procedure_Event_6:
   \   0000010C   5B1C               ADDS     R3,R3,#+1
   3405                      if ((X_up>2+i*19) && (X_up<2+17+i*19) && (Y_up>51+j*19) && (Y_up<50+17+j*19))    //"X"
   \   0000010E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000110   120E               LSRS     R2,R2,#+24
   \   00000112   1320               MOVS     R0,#+19
   \   00000114   5043               MULS     R0,R2,R0
   \   00000116   801C               ADDS     R0,R0,#+2
   \   00000118   8949               LDR      R1,??Procedure_Event_0+0x18  ;; X_up
   \   0000011A   0027               MOVS     R7,#+0
   \   0000011C   C95F               LDRSH    R1,[R1, R7]
   \   0000011E   8842               CMP      R0,R1
   \   00000120   51DA               BGE      ??Procedure_Event_7
   \   00000122   8748               LDR      R0,??Procedure_Event_0+0x18  ;; X_up
   \   00000124   0021               MOVS     R1,#+0
   \   00000126   405E               LDRSH    R0,[R0, R1]
   \   00000128   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000012A   120E               LSRS     R2,R2,#+24
   \   0000012C   1321               MOVS     R1,#+19
   \   0000012E   5143               MULS     R1,R2,R1
   \   00000130   1331               ADDS     R1,R1,#+19
   \   00000132   8842               CMP      R0,R1
   \   00000134   47DA               BGE      ??Procedure_Event_7
   \   00000136   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000138   2D0E               LSRS     R5,R5,#+24
   \   0000013A   1320               MOVS     R0,#+19
   \   0000013C   6843               MULS     R0,R5,R0
   \   0000013E   3330               ADDS     R0,R0,#+51
   \   00000140   8049               LDR      R1,??Procedure_Event_0+0x1C  ;; Y_up
   \   00000142   0027               MOVS     R7,#+0
   \   00000144   C95F               LDRSH    R1,[R1, R7]
   \   00000146   8842               CMP      R0,R1
   \   00000148   3DDA               BGE      ??Procedure_Event_7
   \   0000014A   7E48               LDR      R0,??Procedure_Event_0+0x1C  ;; Y_up
   \   0000014C   0021               MOVS     R1,#+0
   \   0000014E   405E               LDRSH    R0,[R0, R1]
   \   00000150   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000152   2D0E               LSRS     R5,R5,#+24
   \   00000154   1321               MOVS     R1,#+19
   \   00000156   6943               MULS     R1,R5,R1
   \   00000158   4331               ADDS     R1,R1,#+67
   \   0000015A   8842               CMP      R0,R1
   \   0000015C   33DA               BGE      ??Procedure_Event_7
   3406                      {
   3407                        ProcGlobType_up=ind;
   \   0000015E   6846               MOV      R0,SP
   \   00000160   0371               STRB     R3,[R0, #+4]
   3408                        gProg.Line[ChoseRow].Proc[ChoseCol].Tag.Tag=0;
   \   00000162   7D48               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   00000164   0078               LDRB     R0,[R0, #+0]
   \   00000166   1821               MOVS     R1,#+24
   \   00000168   4843               MULS     R0,R1,R0
   \   0000016A   7C49               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   0000016C   0978               LDRB     R1,[R1, #+0]
   \   0000016E   F027               MOVS     R7,#+240
   \   00000170   7943               MULS     R1,R7,R1
   \   00000172   764F               LDR      R7,??Procedure_Event_0+0x24  ;; gProg
   \   00000174   7918               ADDS     R1,R7,R1
   \   00000176   0F18               ADDS     R7,R1,R0
   \   00000178   2037               ADDS     R7,R7,#+32
   \   0000017A   0020               MOVS     R0,#+0
   \   0000017C   0021               MOVS     R1,#+0
   \   0000017E   03C7               STM      R7!,{R0,R1}
   \   00000180   083F               SUBS     R7,R7,#+8
   3409                        gProg.Line[ChoseRow].Proc[ChoseCol].LastIn=0;
   \   00000182   7548               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   00000184   0078               LDRB     R0,[R0, #+0]
   \   00000186   1821               MOVS     R1,#+24
   \   00000188   4843               MULS     R0,R1,R0
   \   0000018A   7449               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   0000018C   0978               LDRB     R1,[R1, #+0]
   \   0000018E   F027               MOVS     R7,#+240
   \   00000190   7943               MULS     R1,R7,R1
   \   00000192   6E4F               LDR      R7,??Procedure_Event_0+0x24  ;; gProg
   \   00000194   7918               ADDS     R1,R7,R1
   \   00000196   0818               ADDS     R0,R1,R0
   \   00000198   2830               ADDS     R0,R0,#+40
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   0170               STRB     R1,[R0, #+0]
   3410                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000019E   6448               LDR      R0,??Procedure_Event_0+0x8  ;; 0x13d7e9
   \   000001A0   0078               LDRB     R0,[R0, #+0]
   \   000001A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001A4   000E               LSRS     R0,R0,#+24
   \   000001A6   0028               CMP      R0,#+0
   \   000001A8   0DD1               BNE      ??Procedure_Event_7
   \   000001AA   6248               LDR      R0,??Procedure_Event_0+0xC  ;; 0xfffff430
   \   000001AC   8021               MOVS     R1,#+128
   \   000001AE   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001B0   0160               STR      R1,[R0, #+0]
   \   000001B2   614F               LDR      R7,??Procedure_Event_0+0x10  ;; ButtonBipCounter
   \   000001B4   BC46               MOV      R12,R7
   \   000001B6   6148               LDR      R0,??Procedure_Event_0+0x14  ;; g_counter
   \   000001B8   03C8               LDM      R0!,{R0,R1}
   \   000001BA   0027               MOVS     R7,#+0
   \   000001BC   0830               ADDS     R0,R0,#+8
   \   000001BE   7941               ADCS     R1,R1,R7
   \   000001C0   6746               MOV      R7,R12
   \   000001C2   03C7               STM      R7!,{R0,R1}
   \   000001C4   083F               SUBS     R7,R7,#+8
   3411                        
   3412                      }
   3413                      
   3414                   }
   \                     ??Procedure_Event_7:
   \   000001C6   521C               ADDS     R2,R2,#+1
   \                     ??Procedure_Event_8:
   \   000001C8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001CA   120E               LSRS     R2,R2,#+24
   \   000001CC   032A               CMP      R2,#+3
   \   000001CE   9DD3               BCC      ??Procedure_Event_6
   \   000001D0   6D1E               SUBS     R5,R5,#+1
   \                     ??Procedure_Event_5:
   \   000001D2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001D4   2D0E               LSRS     R5,R5,#+24
   \   000001D6   012D               CMP      R5,#+1
   \   000001D8   01D3               BCC      ??Procedure_Event_9
   \   000001DA   0022               MOVS     R2,#+0
   \   000001DC   F4E7               B        ??Procedure_Event_8
   3415          
   3416              ProcGlobType_down=ProcGlobType_up;
   \                     ??Procedure_Event_9:
   \   000001DE   6048               LDR      R0,??Procedure_Event_0+0x38  ;; ProcGlobType_down
   \   000001E0   6946               MOV      R1,SP
   \   000001E2   0979               LDRB     R1,[R1, #+4]
   \   000001E4   0170               STRB     R1,[R0, #+0]
   3417                
   3418              _Procedure *TypePrc=&(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   000001E6   5C48               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   000001E8   0078               LDRB     R0,[R0, #+0]
   \   000001EA   1821               MOVS     R1,#+24
   \   000001EC   4843               MULS     R0,R1,R0
   \   000001EE   5B49               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   000001F0   0978               LDRB     R1,[R1, #+0]
   \   000001F2   F022               MOVS     R2,#+240
   \   000001F4   5143               MULS     R1,R2,R1
   \   000001F6   554A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   000001F8   5118               ADDS     R1,R2,R1
   \   000001FA   0D18               ADDS     R5,R1,R0
   \   000001FC   1835               ADDS     R5,R5,#+24
   3419                   
   3420                  
   3421          
   3422                      
   3423                     
   3424                 if ((ProcGlobType_up>0) && (ProcGlobType_down==ProcGlobType_up) && (exit==0))
   \   000001FE   6846               MOV      R0,SP
   \   00000200   0079               LDRB     R0,[R0, #+4]
   \   00000202   0128               CMP      R0,#+1
   \   00000204   00D2               BCS      .+4
   \   00000206   BBE0               B        ??Procedure_Event_10
   \   00000208   5548               LDR      R0,??Procedure_Event_0+0x38  ;; ProcGlobType_down
   \   0000020A   0078               LDRB     R0,[R0, #+0]
   \   0000020C   6946               MOV      R1,SP
   \   0000020E   0979               LDRB     R1,[R1, #+4]
   \   00000210   8842               CMP      R0,R1
   \   00000212   00D0               BEQ      .+4
   \   00000214   B4E0               B        ??Procedure_Event_10
   \   00000216   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000218   360E               LSRS     R6,R6,#+24
   \   0000021A   002E               CMP      R6,#+0
   \   0000021C   00D0               BEQ      .+4
   \   0000021E   AFE0               B        ??Procedure_Event_10
   3425                 {
   3426                 ProcGlobType_down=0;
   \   00000220   4F48               LDR      R0,??Procedure_Event_0+0x38  ;; ProcGlobType_down
   \   00000222   0021               MOVS     R1,#+0
   \   00000224   0170               STRB     R1,[R0, #+0]
   3427                 gProg.Line[ChoseRow].Proc[ChoseCol].Out=0;
   \   00000226   4C48               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   00000228   0078               LDRB     R0,[R0, #+0]
   \   0000022A   1821               MOVS     R1,#+24
   \   0000022C   4843               MULS     R0,R1,R0
   \   0000022E   4B49               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   00000230   0978               LDRB     R1,[R1, #+0]
   \   00000232   F022               MOVS     R2,#+240
   \   00000234   5143               MULS     R1,R2,R1
   \   00000236   454A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   00000238   5118               ADDS     R1,R2,R1
   \   0000023A   0818               ADDS     R0,R1,R0
   \   0000023C   0021               MOVS     R1,#+0
   \   0000023E   4185               STRH     R1,[R0, #+42]
   3428                 gProg.Line[ChoseRow].Proc[ChoseCol].LastIn=0;
   \   00000240   4548               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   00000242   0078               LDRB     R0,[R0, #+0]
   \   00000244   1821               MOVS     R1,#+24
   \   00000246   4843               MULS     R0,R1,R0
   \   00000248   4449               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   0000024A   0978               LDRB     R1,[R1, #+0]
   \   0000024C   F022               MOVS     R2,#+240
   \   0000024E   5143               MULS     R1,R2,R1
   \   00000250   3E4A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   00000252   5118               ADDS     R1,R2,R1
   \   00000254   0818               ADDS     R0,R1,R0
   \   00000256   2830               ADDS     R0,R0,#+40
   \   00000258   0021               MOVS     R1,#+0
   \   0000025A   0170               STRB     R1,[R0, #+0]
   3429                 gProg.Line[ChoseRow].Proc[ChoseCol].Tag.Tag=0;
   \   0000025C   3E48               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   0000025E   0078               LDRB     R0,[R0, #+0]
   \   00000260   1821               MOVS     R1,#+24
   \   00000262   4843               MULS     R0,R1,R0
   \   00000264   3D49               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   00000266   0978               LDRB     R1,[R1, #+0]
   \   00000268   F022               MOVS     R2,#+240
   \   0000026A   5143               MULS     R1,R2,R1
   \   0000026C   374A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   0000026E   5118               ADDS     R1,R2,R1
   \   00000270   0A18               ADDS     R2,R1,R0
   \   00000272   2032               ADDS     R2,R2,#+32
   \   00000274   0020               MOVS     R0,#+0
   \   00000276   0021               MOVS     R1,#+0
   \   00000278   03C2               STM      R2!,{R0,R1}
   \   0000027A   083A               SUBS     R2,R2,#+8
   3430                 
   3431                 switch (ProcGlobType_up)
   \   0000027C   6846               MOV      R0,SP
   \   0000027E   0079               LDRB     R0,[R0, #+4]
   \   00000280   0128               CMP      R0,#+1
   \   00000282   0AD0               BEQ      ??Procedure_Event_11
   \   00000284   0228               CMP      R0,#+2
   \   00000286   16D0               BEQ      ??Procedure_Event_12
   \   00000288   0328               CMP      R0,#+3
   \   0000028A   22D0               BEQ      ??Procedure_Event_13
   \   0000028C   0428               CMP      R0,#+4
   \   0000028E   2ED0               BEQ      ??Procedure_Event_14
   \   00000290   0528               CMP      R0,#+5
   \   00000292   3AD0               BEQ      ??Procedure_Event_15
   \   00000294   0628               CMP      R0,#+6
   \   00000296   65D0               BEQ      ??Procedure_Event_16
   \   00000298   71E0               B        ??Procedure_Event_17
   3432                 {
   3433                   case 1:  //Pusty
   3434                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=None;
   \                     ??Procedure_Event_11:
   \   0000029A   2F48               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   0000029C   0078               LDRB     R0,[R0, #+0]
   \   0000029E   1821               MOVS     R1,#+24
   \   000002A0   4843               MULS     R0,R1,R0
   \   000002A2   2E49               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   000002A4   0978               LDRB     R1,[R1, #+0]
   \   000002A6   F022               MOVS     R2,#+240
   \   000002A8   5143               MULS     R1,R2,R1
   \   000002AA   284A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   000002AC   5118               ADDS     R1,R2,R1
   \   000002AE   0818               ADDS     R0,R1,R0
   \   000002B0   0021               MOVS     R1,#+0
   \   000002B2   0176               STRB     R1,[R0, #+24]
   \   000002B4   63E0               B        ??Procedure_Event_17
   3435                   break;
   3436                   
   3437                   
   3438                   case 2: //Stan
   3439                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcStStart+1);
   \                     ??Procedure_Event_12:
   \   000002B6   2848               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   000002B8   0078               LDRB     R0,[R0, #+0]
   \   000002BA   1821               MOVS     R1,#+24
   \   000002BC   4843               MULS     R0,R1,R0
   \   000002BE   2749               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   000002C0   0978               LDRB     R1,[R1, #+0]
   \   000002C2   F022               MOVS     R2,#+240
   \   000002C4   5143               MULS     R1,R2,R1
   \   000002C6   214A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   000002C8   5118               ADDS     R1,R2,R1
   \   000002CA   0818               ADDS     R0,R1,R0
   \   000002CC   1421               MOVS     R1,#+20
   \   000002CE   0176               STRB     R1,[R0, #+24]
   \   000002D0   55E0               B        ??Procedure_Event_17
   3440                   break;
   3441                   
   3442                   
   3443                   case 3: //ustaw
   3444                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcSetStart+1);
   \                     ??Procedure_Event_13:
   \   000002D2   2148               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   000002D4   0078               LDRB     R0,[R0, #+0]
   \   000002D6   1821               MOVS     R1,#+24
   \   000002D8   4843               MULS     R0,R1,R0
   \   000002DA   2049               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   000002DC   0978               LDRB     R1,[R1, #+0]
   \   000002DE   F022               MOVS     R2,#+240
   \   000002E0   5143               MULS     R1,R2,R1
   \   000002E2   1A4A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   000002E4   5118               ADDS     R1,R2,R1
   \   000002E6   0818               ADDS     R0,R1,R0
   \   000002E8   2021               MOVS     R1,#+32
   \   000002EA   0176               STRB     R1,[R0, #+24]
   \   000002EC   47E0               B        ??Procedure_Event_17
   3445                   break;
   3446                   
   3447                   
   3448                   case 4: //Logika
   3449                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcLogStart+1);
   \                     ??Procedure_Event_14:
   \   000002EE   1A48               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   000002F0   0078               LDRB     R0,[R0, #+0]
   \   000002F2   1821               MOVS     R1,#+24
   \   000002F4   4843               MULS     R0,R1,R0
   \   000002F6   1949               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   000002F8   0978               LDRB     R1,[R1, #+0]
   \   000002FA   F022               MOVS     R2,#+240
   \   000002FC   5143               MULS     R1,R2,R1
   \   000002FE   134A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   00000300   5118               ADDS     R1,R2,R1
   \   00000302   0818               ADDS     R0,R1,R0
   \   00000304   0221               MOVS     R1,#+2
   \   00000306   0176               STRB     R1,[R0, #+24]
   \   00000308   39E0               B        ??Procedure_Event_17
   3450                   break;
   3451                   
   3452                   
   3453                   case 5: //timery, zegary
   3454                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcTimeStart+1);
   \                     ??Procedure_Event_15:
   \   0000030A   1348               LDR      R0,??Procedure_Event_0+0x30  ;; ChoseCol
   \   0000030C   0078               LDRB     R0,[R0, #+0]
   \   0000030E   1821               MOVS     R1,#+24
   \   00000310   4843               MULS     R0,R1,R0
   \   00000312   1249               LDR      R1,??Procedure_Event_0+0x34  ;; ChoseRow
   \   00000314   0978               LDRB     R1,[R1, #+0]
   \   00000316   F022               MOVS     R2,#+240
   \   00000318   5143               MULS     R1,R2,R1
   \   0000031A   0C4A               LDR      R2,??Procedure_Event_0+0x24  ;; gProg
   \   0000031C   5118               ADDS     R1,R2,R1
   \   0000031E   0818               ADDS     R0,R1,R0
   \   00000320   2D21               MOVS     R1,#+45
   \   00000322   0176               STRB     R1,[R0, #+24]
   \   00000324   2BE0               B        ??Procedure_Event_17
   \   00000326   C046               Nop      
   \                     ??Procedure_Event_0:
   \   00000328   ........           DC32     X_down
   \   0000032C   ........           DC32     Y_down
   \   00000330   E9D71300           DC32     0x13d7e9
   \   00000334   30F4FFFF           DC32     0xfffff430
   \   00000338   ........           DC32     ButtonBipCounter
   \   0000033C   ........           DC32     g_counter
   \   00000340   ........           DC32     X_up
   \   00000344   ........           DC32     Y_up
   \   00000348   ........           DC32     Rej_poz
   \   0000034C   ........           DC32     gProg
   \   00000350   ........           DC32     MenuLevel
   \   00000354   ........           DC32     ProgramChange
   \   00000358   ........           DC32     ChoseCol
   \   0000035C   ........           DC32     ChoseRow
   \   00000360   ........           DC32     ProcGlobType_down
   3455                   break;
   3456                   
   3457                   
   3458                   case 6: //timery, zegary
   3459                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcAnalogStart+1);
   \                     ??Procedure_Event_16:
   \   00000364   A248               LDR      R0,??Procedure_Event_18  ;; ChoseCol
   \   00000366   0078               LDRB     R0,[R0, #+0]
   \   00000368   1821               MOVS     R1,#+24
   \   0000036A   4843               MULS     R0,R1,R0
   \   0000036C   A149               LDR      R1,??Procedure_Event_18+0x4  ;; ChoseRow
   \   0000036E   0978               LDRB     R1,[R1, #+0]
   \   00000370   F022               MOVS     R2,#+240
   \   00000372   5143               MULS     R1,R2,R1
   \   00000374   A04A               LDR      R2,??Procedure_Event_18+0x8  ;; gProg
   \   00000376   5118               ADDS     R1,R2,R1
   \   00000378   0818               ADDS     R0,R1,R0
   \   0000037A   3721               MOVS     R1,#+55
   \   0000037C   0176               STRB     R1,[R0, #+24]
   3460                   break;
   3461                 }
   3462                 
   3463                
   3464                   MenuPaintExecut=1; 
   \                     ??Procedure_Event_17:
   \   0000037E   0124               MOVS     R4,#+1
   3465                   
   3466                 }
   3467                   
   3468          
   3469                 
   3470                 //Je¿eli logika
   3471                  if  ((TypePrc->Type>ProcLogStart) && (TypePrc->Type<ProcLogStop))
   \                     ??Procedure_Event_10:
   \   00000380   2878               LDRB     R0,[R5, #+0]
   \   00000382   0228               CMP      R0,#+2
   \   00000384   3DD3               BCC      ??Procedure_Event_19
   \   00000386   2878               LDRB     R0,[R5, #+0]
   \   00000388   0D28               CMP      R0,#+13
   \   0000038A   3AD2               BCS      ??Procedure_Event_19
   3472                      {     
   3473                        txt[0]='>';
   \   0000038C   6846               MOV      R0,SP
   \   0000038E   3E21               MOVS     R1,#+62
   \   00000390   0170               STRB     R1,[R0, #+0]
   3474                        txt[1]=0;
   \   00000392   6846               MOV      R0,SP
   \   00000394   0021               MOVS     R1,#+0
   \   00000396   4170               STRB     R1,[R0, #+1]
   3475                        if (Button(txt,43,39,18,18)==1) 
   \   00000398   82B0               SUB      SP,SP,#+8
   \   0000039A   1220               MOVS     R0,#+18
   \   0000039C   0090               STR      R0,[SP, #+0]
   \   0000039E   1223               MOVS     R3,#+18
   \   000003A0   2722               MOVS     R2,#+39
   \   000003A2   2B21               MOVS     R1,#+43
   \   000003A4   02A8               ADD      R0,SP,#+8
   \   000003A6   ........           BL       Button
   \   000003AA   02B0               ADD      SP,SP,#+8
   \   000003AC   0128               CMP      R0,#+1
   \   000003AE   0DD1               BNE      ??Procedure_Event_20
   3476                          if (TypePrc->Type+1<ProcLogStop) {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStart+1);MenuPaintExecut=1;  }
   \   000003B0   2878               LDRB     R0,[R5, #+0]
   \   000003B2   401C               ADDS     R0,R0,#+1
   \   000003B4   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000003B6   000C               LSRS     R0,R0,#+16
   \   000003B8   0D28               CMP      R0,#+13
   \   000003BA   04D2               BCS      ??Procedure_Event_21
   \   000003BC   2878               LDRB     R0,[R5, #+0]
   \   000003BE   401C               ADDS     R0,R0,#+1
   \   000003C0   2870               STRB     R0,[R5, #+0]
   \   000003C2   0124               MOVS     R4,#+1
   \   000003C4   02E0               B        ??Procedure_Event_20
   \                     ??Procedure_Event_21:
   \   000003C6   0220               MOVS     R0,#+2
   \   000003C8   2870               STRB     R0,[R5, #+0]
   \   000003CA   0124               MOVS     R4,#+1
   3477                        txt[0]='<';
   \                     ??Procedure_Event_20:
   \   000003CC   6846               MOV      R0,SP
   \   000003CE   3C21               MOVS     R1,#+60
   \   000003D0   0170               STRB     R1,[R0, #+0]
   3478                        if (Button(txt,2,39,18,18)==1) 
   \   000003D2   82B0               SUB      SP,SP,#+8
   \   000003D4   1220               MOVS     R0,#+18
   \   000003D6   0090               STR      R0,[SP, #+0]
   \   000003D8   1223               MOVS     R3,#+18
   \   000003DA   2722               MOVS     R2,#+39
   \   000003DC   0221               MOVS     R1,#+2
   \   000003DE   02A8               ADD      R0,SP,#+8
   \   000003E0   ........           BL       Button
   \   000003E4   02B0               ADD      SP,SP,#+8
   \   000003E6   0128               CMP      R0,#+1
   \   000003E8   0BD1               BNE      ??Procedure_Event_19
   3479                          if (TypePrc->Type-1>ProcLogStart) {TypePrc->Type--;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStop-1);MenuPaintExecut=1;  }
   \   000003EA   2878               LDRB     R0,[R5, #+0]
   \   000003EC   401E               SUBS     R0,R0,#+1
   \   000003EE   0228               CMP      R0,#+2
   \   000003F0   04DB               BLT      ??Procedure_Event_22
   \   000003F2   2878               LDRB     R0,[R5, #+0]
   \   000003F4   401E               SUBS     R0,R0,#+1
   \   000003F6   2870               STRB     R0,[R5, #+0]
   \   000003F8   0124               MOVS     R4,#+1
   \   000003FA   02E0               B        ??Procedure_Event_19
   \                     ??Procedure_Event_22:
   \   000003FC   0C20               MOVS     R0,#+12
   \   000003FE   2870               STRB     R0,[R5, #+0]
   \   00000400   0124               MOVS     R4,#+1
   3480                   
   3481                      }
   3482           
   3483                 
   3484                 //zmiana numeru procedur
   3485                 if ((((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcTimeStart))
   3486                     || (TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)   
   3487                     ) && (TypePrc->Type!=ProcInc) && (TypePrc->Type!=ProcInc))
   \                     ??Procedure_Event_19:
   \   00000402   2878               LDRB     R0,[R5, #+0]
   \   00000404   1428               CMP      R0,#+20
   \   00000406   02D3               BCC      ??Procedure_Event_23
   \   00000408   2878               LDRB     R0,[R5, #+0]
   \   0000040A   2C28               CMP      R0,#+44
   \   0000040C   06D3               BCC      ??Procedure_Event_24
   \                     ??Procedure_Event_23:
   \   0000040E   2878               LDRB     R0,[R5, #+0]
   \   00000410   3828               CMP      R0,#+56
   \   00000412   03D0               BEQ      ??Procedure_Event_24
   \   00000414   2878               LDRB     R0,[R5, #+0]
   \   00000416   3928               CMP      R0,#+57
   \   00000418   00D0               BEQ      .+4
   \   0000041A   BAE1               B        ??Procedure_Event_25
   \                     ??Procedure_Event_24:
   \   0000041C   2878               LDRB     R0,[R5, #+0]
   \   0000041E   2528               CMP      R0,#+37
   \   00000420   00D1               BNE      .+4
   \   00000422   B6E1               B        ??Procedure_Event_25
   \   00000424   2878               LDRB     R0,[R5, #+0]
   \   00000426   2528               CMP      R0,#+37
   \   00000428   00D1               BNE      .+4
   \   0000042A   B2E1               B        ??Procedure_Event_25
   3488                 {  
   3489                    txt[1]=0;
   \   0000042C   6846               MOV      R0,SP
   \   0000042E   0021               MOVS     R1,#+0
   \   00000430   4170               STRB     R1,[R0, #+1]
   3490                    txt[0]='>';
   \   00000432   6846               MOV      R0,SP
   \   00000434   3E21               MOVS     R1,#+62
   \   00000436   0170               STRB     R1,[R0, #+0]
   3491                    if (Button(txt,43,25,18,18)==1) 
   \   00000438   82B0               SUB      SP,SP,#+8
   \   0000043A   1220               MOVS     R0,#+18
   \   0000043C   0090               STR      R0,[SP, #+0]
   \   0000043E   1223               MOVS     R3,#+18
   \   00000440   1922               MOVS     R2,#+25
   \   00000442   2B21               MOVS     R1,#+43
   \   00000444   02A8               ADD      R0,SP,#+8
   \   00000446   ........           BL       Button
   \   0000044A   02B0               ADD      SP,SP,#+8
   \   0000044C   0128               CMP      R0,#+1
   \   0000044E   00D0               BEQ      .+4
   \   00000450   D7E0               B        ??Procedure_Event_26
   3492                    {
   3493                      switch (TypePrc->Type)
   \   00000452   2878               LDRB     R0,[R5, #+0]
   \   00000454   1428               CMP      R0,#+20
   \   00000456   1CD0               BEQ      ??Procedure_Event_27
   \   00000458   1528               CMP      R0,#+21
   \   0000045A   28D0               BEQ      ??Procedure_Event_28
   \   0000045C   1628               CMP      R0,#+22
   \   0000045E   34D0               BEQ      ??Procedure_Event_29
   \   00000460   1728               CMP      R0,#+23
   \   00000462   40D0               BEQ      ??Procedure_Event_30
   \   00000464   1828               CMP      R0,#+24
   \   00000466   4BD0               BEQ      ??Procedure_Event_31
   \   00000468   2028               CMP      R0,#+32
   \   0000046A   56D0               BEQ      ??Procedure_Event_32
   \   0000046C   2128               CMP      R0,#+33
   \   0000046E   62D0               BEQ      ??Procedure_Event_33
   \   00000470   2228               CMP      R0,#+34
   \   00000472   6ED0               BEQ      ??Procedure_Event_34
   \   00000474   2328               CMP      R0,#+35
   \   00000476   7AD0               BEQ      ??Procedure_Event_35
   \   00000478   2428               CMP      R0,#+36
   \   0000047A   00D1               BNE      .+4
   \   0000047C   85E0               B        ??Procedure_Event_36
   \   0000047E   2728               CMP      R0,#+39
   \   00000480   00D1               BNE      .+4
   \   00000482   ABE0               B        ??Procedure_Event_37
   \   00000484   3828               CMP      R0,#+56
   \   00000486   00D1               BNE      .+4
   \   00000488   8CE0               B        ??Procedure_Event_38
   \   0000048A   3928               CMP      R0,#+57
   \   0000048C   00D1               BNE      .+4
   \   0000048E   97E0               B        ??Procedure_Event_39
   \   00000490   B6E0               B        ??Procedure_Event_40
   3494                      {
   3495                        case ProcStI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_27:
   \   00000492   0120               MOVS     R0,#+1
   \   00000494   2856               LDRSB    R0,[R5, R0]
   \   00000496   401C               ADDS     R0,R0,#+1
   \   00000498   2328               CMP      R0,#+35
   \   0000049A   04DA               BGE      ??Procedure_Event_41
   \   0000049C   0120               MOVS     R0,#+1
   \   0000049E   2856               LDRSB    R0,[R5, R0]
   \   000004A0   401C               ADDS     R0,R0,#+1
   \   000004A2   6870               STRB     R0,[R5, #+1]
   \   000004A4   ACE0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_41:
   \   000004A6   0020               MOVS     R0,#+0
   \   000004A8   C043               MVNS     R0,R0            ;; #-1
   \   000004AA   6870               STRB     R0,[R5, #+1]
   \   000004AC   A8E0               B        ??Procedure_Event_40
   3496                        case ProcStNI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_28:
   \   000004AE   0120               MOVS     R0,#+1
   \   000004B0   2856               LDRSB    R0,[R5, R0]
   \   000004B2   401C               ADDS     R0,R0,#+1
   \   000004B4   2328               CMP      R0,#+35
   \   000004B6   04DA               BGE      ??Procedure_Event_42
   \   000004B8   0120               MOVS     R0,#+1
   \   000004BA   2856               LDRSB    R0,[R5, R0]
   \   000004BC   401C               ADDS     R0,R0,#+1
   \   000004BE   6870               STRB     R0,[R5, #+1]
   \   000004C0   9EE0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_42:
   \   000004C2   0020               MOVS     R0,#+0
   \   000004C4   C043               MVNS     R0,R0            ;; #-1
   \   000004C6   6870               STRB     R0,[R5, #+1]
   \   000004C8   9AE0               B        ??Procedure_Event_40
   3497                        case ProcStQ: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_29:
   \   000004CA   0120               MOVS     R0,#+1
   \   000004CC   2856               LDRSB    R0,[R5, R0]
   \   000004CE   401C               ADDS     R0,R0,#+1
   \   000004D0   2328               CMP      R0,#+35
   \   000004D2   04DA               BGE      ??Procedure_Event_43
   \   000004D4   0120               MOVS     R0,#+1
   \   000004D6   2856               LDRSB    R0,[R5, R0]
   \   000004D8   401C               ADDS     R0,R0,#+1
   \   000004DA   6870               STRB     R0,[R5, #+1]
   \   000004DC   90E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_43:
   \   000004DE   0020               MOVS     R0,#+0
   \   000004E0   C043               MVNS     R0,R0            ;; #-1
   \   000004E2   6870               STRB     R0,[R5, #+1]
   \   000004E4   8CE0               B        ??Procedure_Event_40
   3498                        case ProcStB: if (TypePrc->Nr+1<NumberButton) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_30:
   \   000004E6   0120               MOVS     R0,#+1
   \   000004E8   2856               LDRSB    R0,[R5, R0]
   \   000004EA   401C               ADDS     R0,R0,#+1
   \   000004EC   5028               CMP      R0,#+80
   \   000004EE   04DA               BGE      ??Procedure_Event_44
   \   000004F0   0120               MOVS     R0,#+1
   \   000004F2   2856               LDRSB    R0,[R5, R0]
   \   000004F4   401C               ADDS     R0,R0,#+1
   \   000004F6   6870               STRB     R0,[R5, #+1]
   \   000004F8   82E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_44:
   \   000004FA   0020               MOVS     R0,#+0
   \   000004FC   6870               STRB     R0,[R5, #+1]
   \   000004FE   7FE0               B        ??Procedure_Event_40
   3499                        case ProcStS: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_31:
   \   00000500   0120               MOVS     R0,#+1
   \   00000502   2856               LDRSB    R0,[R5, R0]
   \   00000504   401C               ADDS     R0,R0,#+1
   \   00000506   0A28               CMP      R0,#+10
   \   00000508   04DA               BGE      ??Procedure_Event_45
   \   0000050A   0120               MOVS     R0,#+1
   \   0000050C   2856               LDRSB    R0,[R5, R0]
   \   0000050E   401C               ADDS     R0,R0,#+1
   \   00000510   6870               STRB     R0,[R5, #+1]
   \   00000512   75E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_45:
   \   00000514   0020               MOVS     R0,#+0
   \   00000516   6870               STRB     R0,[R5, #+1]
   \   00000518   72E0               B        ??Procedure_Event_40
   3500                        case ProcWOUT: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_32:
   \   0000051A   0120               MOVS     R0,#+1
   \   0000051C   2856               LDRSB    R0,[R5, R0]
   \   0000051E   401C               ADDS     R0,R0,#+1
   \   00000520   2328               CMP      R0,#+35
   \   00000522   04DA               BGE      ??Procedure_Event_46
   \   00000524   0120               MOVS     R0,#+1
   \   00000526   2856               LDRSB    R0,[R5, R0]
   \   00000528   401C               ADDS     R0,R0,#+1
   \   0000052A   6870               STRB     R0,[R5, #+1]
   \   0000052C   68E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_46:
   \   0000052E   0020               MOVS     R0,#+0
   \   00000530   C043               MVNS     R0,R0            ;; #-1
   \   00000532   6870               STRB     R0,[R5, #+1]
   \   00000534   64E0               B        ??Procedure_Event_40
   3501                        case ProcWOUTS: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_33:
   \   00000536   0120               MOVS     R0,#+1
   \   00000538   2856               LDRSB    R0,[R5, R0]
   \   0000053A   401C               ADDS     R0,R0,#+1
   \   0000053C   2328               CMP      R0,#+35
   \   0000053E   04DA               BGE      ??Procedure_Event_47
   \   00000540   0120               MOVS     R0,#+1
   \   00000542   2856               LDRSB    R0,[R5, R0]
   \   00000544   401C               ADDS     R0,R0,#+1
   \   00000546   6870               STRB     R0,[R5, #+1]
   \   00000548   5AE0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_47:
   \   0000054A   0020               MOVS     R0,#+0
   \   0000054C   C043               MVNS     R0,R0            ;; #-1
   \   0000054E   6870               STRB     R0,[R5, #+1]
   \   00000550   56E0               B        ??Procedure_Event_40
   3502                        case ProcWOUTR: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_34:
   \   00000552   0120               MOVS     R0,#+1
   \   00000554   2856               LDRSB    R0,[R5, R0]
   \   00000556   401C               ADDS     R0,R0,#+1
   \   00000558   2328               CMP      R0,#+35
   \   0000055A   04DA               BGE      ??Procedure_Event_48
   \   0000055C   0120               MOVS     R0,#+1
   \   0000055E   2856               LDRSB    R0,[R5, R0]
   \   00000560   401C               ADDS     R0,R0,#+1
   \   00000562   6870               STRB     R0,[R5, #+1]
   \   00000564   4CE0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_48:
   \   00000566   0020               MOVS     R0,#+0
   \   00000568   C043               MVNS     R0,R0            ;; #-1
   \   0000056A   6870               STRB     R0,[R5, #+1]
   \   0000056C   48E0               B        ??Procedure_Event_40
   3503                        case ProcWOUTC: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_35:
   \   0000056E   0120               MOVS     R0,#+1
   \   00000570   2856               LDRSB    R0,[R5, R0]
   \   00000572   401C               ADDS     R0,R0,#+1
   \   00000574   2328               CMP      R0,#+35
   \   00000576   04DA               BGE      ??Procedure_Event_49
   \   00000578   0120               MOVS     R0,#+1
   \   0000057A   2856               LDRSB    R0,[R5, R0]
   \   0000057C   401C               ADDS     R0,R0,#+1
   \   0000057E   6870               STRB     R0,[R5, #+1]
   \   00000580   3EE0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_49:
   \   00000582   0020               MOVS     R0,#+0
   \   00000584   C043               MVNS     R0,R0            ;; #-1
   \   00000586   6870               STRB     R0,[R5, #+1]
   \   00000588   3AE0               B        ??Procedure_Event_40
   3504                        case ProcSetScn: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_36:
   \   0000058A   0120               MOVS     R0,#+1
   \   0000058C   2856               LDRSB    R0,[R5, R0]
   \   0000058E   401C               ADDS     R0,R0,#+1
   \   00000590   0A28               CMP      R0,#+10
   \   00000592   04DA               BGE      ??Procedure_Event_50
   \   00000594   0120               MOVS     R0,#+1
   \   00000596   2856               LDRSB    R0,[R5, R0]
   \   00000598   401C               ADDS     R0,R0,#+1
   \   0000059A   6870               STRB     R0,[R5, #+1]
   \   0000059C   30E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_50:
   \   0000059E   0020               MOVS     R0,#+0
   \   000005A0   6870               STRB     R0,[R5, #+1]
   \   000005A2   2DE0               B        ??Procedure_Event_40
   3505                        case ProcGetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_38:
   \   000005A4   0120               MOVS     R0,#+1
   \   000005A6   2856               LDRSB    R0,[R5, R0]
   \   000005A8   401C               ADDS     R0,R0,#+1
   \   000005AA   2328               CMP      R0,#+35
   \   000005AC   04DA               BGE      ??Procedure_Event_51
   \   000005AE   0120               MOVS     R0,#+1
   \   000005B0   2856               LDRSB    R0,[R5, R0]
   \   000005B2   401C               ADDS     R0,R0,#+1
   \   000005B4   6870               STRB     R0,[R5, #+1]
   \   000005B6   23E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_51:
   \   000005B8   0020               MOVS     R0,#+0
   \   000005BA   C043               MVNS     R0,R0            ;; #-1
   \   000005BC   6870               STRB     R0,[R5, #+1]
   \   000005BE   1FE0               B        ??Procedure_Event_40
   3506                        case ProcSetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_39:
   \   000005C0   0120               MOVS     R0,#+1
   \   000005C2   2856               LDRSB    R0,[R5, R0]
   \   000005C4   401C               ADDS     R0,R0,#+1
   \   000005C6   2328               CMP      R0,#+35
   \   000005C8   04DA               BGE      ??Procedure_Event_52
   \   000005CA   0120               MOVS     R0,#+1
   \   000005CC   2856               LDRSB    R0,[R5, R0]
   \   000005CE   401C               ADDS     R0,R0,#+1
   \   000005D0   6870               STRB     R0,[R5, #+1]
   \   000005D2   15E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_52:
   \   000005D4   0020               MOVS     R0,#+0
   \   000005D6   C043               MVNS     R0,R0            ;; #-1
   \   000005D8   6870               STRB     R0,[R5, #+1]
   \   000005DA   11E0               B        ??Procedure_Event_40
   3507                        case ProcSPK: if (TypePrc->Tag.SpeakerType+1<SPK_Amount) {TypePrc->Tag.SpeakerType++;} else {TypePrc->Tag.SpeakerType=0;} break;
   \                     ??Procedure_Event_37:
   \   000005DC   287A               LDRB     R0,[R5, #+8]
   \   000005DE   401C               ADDS     R0,R0,#+1
   \   000005E0   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000005E2   000C               LSRS     R0,R0,#+16
   \   000005E4   0428               CMP      R0,#+4
   \   000005E6   09D2               BCS      ??Procedure_Event_53
   \   000005E8   287A               LDRB     R0,[R5, #+8]
   \   000005EA   401C               ADDS     R0,R0,#+1
   \   000005EC   2872               STRB     R0,[R5, #+8]
   \   000005EE   07E0               B        ??Procedure_Event_40
   \                     ??Procedure_Event_18:
   \   000005F0   ........           DC32     ChoseCol
   \   000005F4   ........           DC32     ChoseRow
   \   000005F8   ........           DC32     gProg
   \                     ??Procedure_Event_53:
   \   000005FC   0020               MOVS     R0,#+0
   \   000005FE   2872               STRB     R0,[R5, #+8]
   3508                        
   3509          
   3510                      }
   3511                      
   3512                      
   3513                      
   3514                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_40:
   \   00000600   0124               MOVS     R4,#+1
   3515                    }
   3516                    txt[0]='<';
   \                     ??Procedure_Event_26:
   \   00000602   6846               MOV      R0,SP
   \   00000604   3C21               MOVS     R1,#+60
   \   00000606   0170               STRB     R1,[R0, #+0]
   3517                    if (Button(txt,2,25,18,18)==1) 
   \   00000608   82B0               SUB      SP,SP,#+8
   \   0000060A   1220               MOVS     R0,#+18
   \   0000060C   0090               STR      R0,[SP, #+0]
   \   0000060E   1223               MOVS     R3,#+18
   \   00000610   1922               MOVS     R2,#+25
   \   00000612   0221               MOVS     R1,#+2
   \   00000614   02A8               ADD      R0,SP,#+8
   \   00000616   ........           BL       Button
   \   0000061A   02B0               ADD      SP,SP,#+8
   \   0000061C   0128               CMP      R0,#+1
   \   0000061E   00D0               BEQ      .+4
   \   00000620   B7E0               B        ??Procedure_Event_25
   3518                    {
   3519                      
   3520                      switch (TypePrc->Type)
   \   00000622   2878               LDRB     R0,[R5, #+0]
   \   00000624   1428               CMP      R0,#+20
   \   00000626   1AD0               BEQ      ??Procedure_Event_54
   \   00000628   1528               CMP      R0,#+21
   \   0000062A   24D0               BEQ      ??Procedure_Event_55
   \   0000062C   1628               CMP      R0,#+22
   \   0000062E   2ED0               BEQ      ??Procedure_Event_56
   \   00000630   1728               CMP      R0,#+23
   \   00000632   44D0               BEQ      ??Procedure_Event_57
   \   00000634   1828               CMP      R0,#+24
   \   00000636   36D0               BEQ      ??Procedure_Event_58
   \   00000638   2028               CMP      R0,#+32
   \   0000063A   4CD0               BEQ      ??Procedure_Event_59
   \   0000063C   2128               CMP      R0,#+33
   \   0000063E   56D0               BEQ      ??Procedure_Event_60
   \   00000640   2228               CMP      R0,#+34
   \   00000642   60D0               BEQ      ??Procedure_Event_61
   \   00000644   2328               CMP      R0,#+35
   \   00000646   6AD0               BEQ      ??Procedure_Event_62
   \   00000648   2428               CMP      R0,#+36
   \   0000064A   74D0               BEQ      ??Procedure_Event_63
   \   0000064C   2728               CMP      R0,#+39
   \   0000064E   00D1               BNE      .+4
   \   00000650   95E0               B        ??Procedure_Event_64
   \   00000652   3828               CMP      R0,#+56
   \   00000654   7BD0               BEQ      ??Procedure_Event_65
   \   00000656   3928               CMP      R0,#+57
   \   00000658   00D1               BNE      .+4
   \   0000065A   84E0               B        ??Procedure_Event_66
   \   0000065C   98E0               B        ??Procedure_Event_67
   3521                      {
   3522                        case ProcStI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_54:
   \   0000065E   0120               MOVS     R0,#+1
   \   00000660   2856               LDRSB    R0,[R5, R0]
   \   00000662   0028               CMP      R0,#+0
   \   00000664   04D4               BMI      ??Procedure_Event_68
   \   00000666   0120               MOVS     R0,#+1
   \   00000668   2856               LDRSB    R0,[R5, R0]
   \   0000066A   401E               SUBS     R0,R0,#+1
   \   0000066C   6870               STRB     R0,[R5, #+1]
   \   0000066E   8FE0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_68:
   \   00000670   2220               MOVS     R0,#+34
   \   00000672   6870               STRB     R0,[R5, #+1]
   \   00000674   8CE0               B        ??Procedure_Event_67
   3523                        case ProcStNI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_55:
   \   00000676   0120               MOVS     R0,#+1
   \   00000678   2856               LDRSB    R0,[R5, R0]
   \   0000067A   0028               CMP      R0,#+0
   \   0000067C   04D4               BMI      ??Procedure_Event_69
   \   0000067E   0120               MOVS     R0,#+1
   \   00000680   2856               LDRSB    R0,[R5, R0]
   \   00000682   401E               SUBS     R0,R0,#+1
   \   00000684   6870               STRB     R0,[R5, #+1]
   \   00000686   83E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_69:
   \   00000688   2220               MOVS     R0,#+34
   \   0000068A   6870               STRB     R0,[R5, #+1]
   \   0000068C   80E0               B        ??Procedure_Event_67
   3524                        case ProcStQ: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_56:
   \   0000068E   0120               MOVS     R0,#+1
   \   00000690   2856               LDRSB    R0,[R5, R0]
   \   00000692   0028               CMP      R0,#+0
   \   00000694   04D4               BMI      ??Procedure_Event_70
   \   00000696   0120               MOVS     R0,#+1
   \   00000698   2856               LDRSB    R0,[R5, R0]
   \   0000069A   401E               SUBS     R0,R0,#+1
   \   0000069C   6870               STRB     R0,[R5, #+1]
   \   0000069E   77E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_70:
   \   000006A0   2220               MOVS     R0,#+34
   \   000006A2   6870               STRB     R0,[R5, #+1]
   \   000006A4   74E0               B        ??Procedure_Event_67
   3525                        case ProcStS: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_58:
   \   000006A6   0120               MOVS     R0,#+1
   \   000006A8   2856               LDRSB    R0,[R5, R0]
   \   000006AA   0128               CMP      R0,#+1
   \   000006AC   04DB               BLT      ??Procedure_Event_71
   \   000006AE   0120               MOVS     R0,#+1
   \   000006B0   2856               LDRSB    R0,[R5, R0]
   \   000006B2   401E               SUBS     R0,R0,#+1
   \   000006B4   6870               STRB     R0,[R5, #+1]
   \   000006B6   6BE0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_71:
   \   000006B8   0920               MOVS     R0,#+9
   \   000006BA   6870               STRB     R0,[R5, #+1]
   \   000006BC   68E0               B        ??Procedure_Event_67
   3526                        case ProcStB: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_57:
   \   000006BE   0120               MOVS     R0,#+1
   \   000006C0   2856               LDRSB    R0,[R5, R0]
   \   000006C2   0128               CMP      R0,#+1
   \   000006C4   04DB               BLT      ??Procedure_Event_72
   \   000006C6   0120               MOVS     R0,#+1
   \   000006C8   2856               LDRSB    R0,[R5, R0]
   \   000006CA   401E               SUBS     R0,R0,#+1
   \   000006CC   6870               STRB     R0,[R5, #+1]
   \   000006CE   5FE0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_72:
   \   000006D0   2220               MOVS     R0,#+34
   \   000006D2   6870               STRB     R0,[R5, #+1]
   \   000006D4   5CE0               B        ??Procedure_Event_67
   3527                        case ProcWOUT: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_59:
   \   000006D6   0120               MOVS     R0,#+1
   \   000006D8   2856               LDRSB    R0,[R5, R0]
   \   000006DA   0028               CMP      R0,#+0
   \   000006DC   04D4               BMI      ??Procedure_Event_73
   \   000006DE   0120               MOVS     R0,#+1
   \   000006E0   2856               LDRSB    R0,[R5, R0]
   \   000006E2   401E               SUBS     R0,R0,#+1
   \   000006E4   6870               STRB     R0,[R5, #+1]
   \   000006E6   53E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_73:
   \   000006E8   2220               MOVS     R0,#+34
   \   000006EA   6870               STRB     R0,[R5, #+1]
   \   000006EC   50E0               B        ??Procedure_Event_67
   3528                        case ProcWOUTS: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_60:
   \   000006EE   0120               MOVS     R0,#+1
   \   000006F0   2856               LDRSB    R0,[R5, R0]
   \   000006F2   0028               CMP      R0,#+0
   \   000006F4   04D4               BMI      ??Procedure_Event_74
   \   000006F6   0120               MOVS     R0,#+1
   \   000006F8   2856               LDRSB    R0,[R5, R0]
   \   000006FA   401E               SUBS     R0,R0,#+1
   \   000006FC   6870               STRB     R0,[R5, #+1]
   \   000006FE   47E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_74:
   \   00000700   2220               MOVS     R0,#+34
   \   00000702   6870               STRB     R0,[R5, #+1]
   \   00000704   44E0               B        ??Procedure_Event_67
   3529                        case ProcWOUTR: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_61:
   \   00000706   0120               MOVS     R0,#+1
   \   00000708   2856               LDRSB    R0,[R5, R0]
   \   0000070A   0028               CMP      R0,#+0
   \   0000070C   04D4               BMI      ??Procedure_Event_75
   \   0000070E   0120               MOVS     R0,#+1
   \   00000710   2856               LDRSB    R0,[R5, R0]
   \   00000712   401E               SUBS     R0,R0,#+1
   \   00000714   6870               STRB     R0,[R5, #+1]
   \   00000716   3BE0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_75:
   \   00000718   2220               MOVS     R0,#+34
   \   0000071A   6870               STRB     R0,[R5, #+1]
   \   0000071C   38E0               B        ??Procedure_Event_67
   3530                        case ProcWOUTC: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_62:
   \   0000071E   0120               MOVS     R0,#+1
   \   00000720   2856               LDRSB    R0,[R5, R0]
   \   00000722   0028               CMP      R0,#+0
   \   00000724   04D4               BMI      ??Procedure_Event_76
   \   00000726   0120               MOVS     R0,#+1
   \   00000728   2856               LDRSB    R0,[R5, R0]
   \   0000072A   401E               SUBS     R0,R0,#+1
   \   0000072C   6870               STRB     R0,[R5, #+1]
   \   0000072E   2FE0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_76:
   \   00000730   2220               MOVS     R0,#+34
   \   00000732   6870               STRB     R0,[R5, #+1]
   \   00000734   2CE0               B        ??Procedure_Event_67
   3531                        case ProcSetScn: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_63:
   \   00000736   0120               MOVS     R0,#+1
   \   00000738   2856               LDRSB    R0,[R5, R0]
   \   0000073A   0128               CMP      R0,#+1
   \   0000073C   04DB               BLT      ??Procedure_Event_77
   \   0000073E   0120               MOVS     R0,#+1
   \   00000740   2856               LDRSB    R0,[R5, R0]
   \   00000742   401E               SUBS     R0,R0,#+1
   \   00000744   6870               STRB     R0,[R5, #+1]
   \   00000746   23E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_77:
   \   00000748   0920               MOVS     R0,#+9
   \   0000074A   6870               STRB     R0,[R5, #+1]
   \   0000074C   20E0               B        ??Procedure_Event_67
   3532                        case ProcGetReg: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_65:
   \   0000074E   0120               MOVS     R0,#+1
   \   00000750   2856               LDRSB    R0,[R5, R0]
   \   00000752   0028               CMP      R0,#+0
   \   00000754   04D4               BMI      ??Procedure_Event_78
   \   00000756   0120               MOVS     R0,#+1
   \   00000758   2856               LDRSB    R0,[R5, R0]
   \   0000075A   401E               SUBS     R0,R0,#+1
   \   0000075C   6870               STRB     R0,[R5, #+1]
   \   0000075E   17E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_78:
   \   00000760   2220               MOVS     R0,#+34
   \   00000762   6870               STRB     R0,[R5, #+1]
   \   00000764   14E0               B        ??Procedure_Event_67
   3533                        case ProcSetReg: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_66:
   \   00000766   0120               MOVS     R0,#+1
   \   00000768   2856               LDRSB    R0,[R5, R0]
   \   0000076A   0028               CMP      R0,#+0
   \   0000076C   04D4               BMI      ??Procedure_Event_79
   \   0000076E   0120               MOVS     R0,#+1
   \   00000770   2856               LDRSB    R0,[R5, R0]
   \   00000772   401E               SUBS     R0,R0,#+1
   \   00000774   6870               STRB     R0,[R5, #+1]
   \   00000776   0BE0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_79:
   \   00000778   2220               MOVS     R0,#+34
   \   0000077A   6870               STRB     R0,[R5, #+1]
   \   0000077C   08E0               B        ??Procedure_Event_67
   3534                        case ProcSPK: if (TypePrc->Tag.SpeakerType>0) {TypePrc->Tag.SpeakerType--;} else {TypePrc->Tag.SpeakerType=SPK_Amount-1;} break;
   \                     ??Procedure_Event_64:
   \   0000077E   287A               LDRB     R0,[R5, #+8]
   \   00000780   0128               CMP      R0,#+1
   \   00000782   03D3               BCC      ??Procedure_Event_80
   \   00000784   287A               LDRB     R0,[R5, #+8]
   \   00000786   401E               SUBS     R0,R0,#+1
   \   00000788   2872               STRB     R0,[R5, #+8]
   \   0000078A   01E0               B        ??Procedure_Event_67
   \                     ??Procedure_Event_80:
   \   0000078C   0320               MOVS     R0,#+3
   \   0000078E   2872               STRB     R0,[R5, #+8]
   3535                      }
   3536                      
   3537          
   3538                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_67:
   \   00000790   0124               MOVS     R4,#+1
   3539                    }
   3540                 }
   3541                 
   3542          
   3543                 //zmiana numeru portu
   3544                 if(((TypePrc->Type==ProcStI) ||
   3545                    (TypePrc->Type==ProcStNI) ||
   3546                    (TypePrc->Type==ProcStQ) ||
   3547                    (TypePrc->Type==ProcWOUT) ||
   3548                    (TypePrc->Type==ProcWOUTS) ||
   3549                    (TypePrc->Type==ProcWOUTR) ||
   3550                    (TypePrc->Type==ProcWOUTC)  
   3551                      )
   3552                   && (TypePrc->Type<ProcTimeStart))
   \                     ??Procedure_Event_25:
   \   00000792   2878               LDRB     R0,[R5, #+0]
   \   00000794   1428               CMP      R0,#+20
   \   00000796   12D0               BEQ      ??Procedure_Event_81
   \   00000798   2878               LDRB     R0,[R5, #+0]
   \   0000079A   1528               CMP      R0,#+21
   \   0000079C   0FD0               BEQ      ??Procedure_Event_81
   \   0000079E   2878               LDRB     R0,[R5, #+0]
   \   000007A0   1628               CMP      R0,#+22
   \   000007A2   0CD0               BEQ      ??Procedure_Event_81
   \   000007A4   2878               LDRB     R0,[R5, #+0]
   \   000007A6   2028               CMP      R0,#+32
   \   000007A8   09D0               BEQ      ??Procedure_Event_81
   \   000007AA   2878               LDRB     R0,[R5, #+0]
   \   000007AC   2128               CMP      R0,#+33
   \   000007AE   06D0               BEQ      ??Procedure_Event_81
   \   000007B0   2878               LDRB     R0,[R5, #+0]
   \   000007B2   2228               CMP      R0,#+34
   \   000007B4   03D0               BEQ      ??Procedure_Event_81
   \   000007B6   2878               LDRB     R0,[R5, #+0]
   \   000007B8   2328               CMP      R0,#+35
   \   000007BA   00D0               BEQ      .+4
   \   000007BC   5FE1               B        ??Procedure_Event_82
   \                     ??Procedure_Event_81:
   \   000007BE   2878               LDRB     R0,[R5, #+0]
   \   000007C0   2C28               CMP      R0,#+44
   \   000007C2   00D3               BCC      .+4
   \   000007C4   5BE1               B        ??Procedure_Event_82
   3553                 {  
   3554                    txt[1]=0;
   \   000007C6   6846               MOV      R0,SP
   \   000007C8   0021               MOVS     R1,#+0
   \   000007CA   4170               STRB     R1,[R0, #+1]
   3555                    txt[0]='>';
   \   000007CC   6846               MOV      R0,SP
   \   000007CE   3E21               MOVS     R1,#+62
   \   000007D0   0170               STRB     R1,[R0, #+0]
   3556                    if (Button(txt,43,4,18,18)==1) 
   \   000007D2   82B0               SUB      SP,SP,#+8
   \   000007D4   1220               MOVS     R0,#+18
   \   000007D6   0090               STR      R0,[SP, #+0]
   \   000007D8   1223               MOVS     R3,#+18
   \   000007DA   0422               MOVS     R2,#+4
   \   000007DC   2B21               MOVS     R1,#+43
   \   000007DE   02A8               ADD      R0,SP,#+8
   \   000007E0   ........           BL       Button
   \   000007E4   02B0               ADD      SP,SP,#+8
   \   000007E6   0128               CMP      R0,#+1
   \   000007E8   00D0               BEQ      .+4
   \   000007EA   B1E0               B        ??Procedure_Event_83
   3557                    {
   3558                      switch (TypePrc->Type)
   \   000007EC   2878               LDRB     R0,[R5, #+0]
   \   000007EE   1428               CMP      R0,#+20
   \   000007F0   0DD0               BEQ      ??Procedure_Event_84
   \   000007F2   1528               CMP      R0,#+21
   \   000007F4   22D0               BEQ      ??Procedure_Event_85
   \   000007F6   1628               CMP      R0,#+22
   \   000007F8   37D0               BEQ      ??Procedure_Event_86
   \   000007FA   2028               CMP      R0,#+32
   \   000007FC   4CD0               BEQ      ??Procedure_Event_87
   \   000007FE   2128               CMP      R0,#+33
   \   00000800   61D0               BEQ      ??Procedure_Event_88
   \   00000802   2228               CMP      R0,#+34
   \   00000804   76D0               BEQ      ??Procedure_Event_89
   \   00000806   2328               CMP      R0,#+35
   \   00000808   00D1               BNE      .+4
   \   0000080A   8AE0               B        ??Procedure_Event_90
   \   0000080C   9FE0               B        ??Procedure_Event_91
   3559                      {
   3560                        case ProcStI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_84:
   \   0000080E   287A               LDRB     R0,[R5, #+8]
   \   00000810   401C               ADDS     R0,R0,#+1
   \   00000812   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000814   000C               LSRS     R0,R0,#+16
   \   00000816   1028               CMP      R0,#+16
   \   00000818   09D3               BCC      ??Procedure_Event_92
   \   0000081A   0120               MOVS     R0,#+1
   \   0000081C   2856               LDRSB    R0,[R5, R0]
   \   0000081E   0028               CMP      R0,#+0
   \   00000820   09D5               BPL      ??Procedure_Event_93
   \   00000822   287A               LDRB     R0,[R5, #+8]
   \   00000824   401C               ADDS     R0,R0,#+1
   \   00000826   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000828   000C               LSRS     R0,R0,#+16
   \   0000082A   6328               CMP      R0,#+99
   \   0000082C   03D2               BCS      ??Procedure_Event_93
   \                     ??Procedure_Event_92:
   \   0000082E   287A               LDRB     R0,[R5, #+8]
   \   00000830   401C               ADDS     R0,R0,#+1
   \   00000832   2872               STRB     R0,[R5, #+8]
   \   00000834   8BE0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_93:
   \   00000836   0020               MOVS     R0,#+0
   \   00000838   2872               STRB     R0,[R5, #+8]
   \   0000083A   88E0               B        ??Procedure_Event_91
   3561                        case ProcStNI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_85:
   \   0000083C   287A               LDRB     R0,[R5, #+8]
   \   0000083E   401C               ADDS     R0,R0,#+1
   \   00000840   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000842   000C               LSRS     R0,R0,#+16
   \   00000844   1028               CMP      R0,#+16
   \   00000846   09D3               BCC      ??Procedure_Event_94
   \   00000848   0120               MOVS     R0,#+1
   \   0000084A   2856               LDRSB    R0,[R5, R0]
   \   0000084C   0028               CMP      R0,#+0
   \   0000084E   09D5               BPL      ??Procedure_Event_95
   \   00000850   287A               LDRB     R0,[R5, #+8]
   \   00000852   401C               ADDS     R0,R0,#+1
   \   00000854   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000856   000C               LSRS     R0,R0,#+16
   \   00000858   6328               CMP      R0,#+99
   \   0000085A   03D2               BCS      ??Procedure_Event_95
   \                     ??Procedure_Event_94:
   \   0000085C   287A               LDRB     R0,[R5, #+8]
   \   0000085E   401C               ADDS     R0,R0,#+1
   \   00000860   2872               STRB     R0,[R5, #+8]
   \   00000862   74E0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_95:
   \   00000864   0020               MOVS     R0,#+0
   \   00000866   2872               STRB     R0,[R5, #+8]
   \   00000868   71E0               B        ??Procedure_Event_91
   3562                        case ProcStQ: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_86:
   \   0000086A   287A               LDRB     R0,[R5, #+8]
   \   0000086C   401C               ADDS     R0,R0,#+1
   \   0000086E   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000870   000C               LSRS     R0,R0,#+16
   \   00000872   1028               CMP      R0,#+16
   \   00000874   09D3               BCC      ??Procedure_Event_96
   \   00000876   0120               MOVS     R0,#+1
   \   00000878   2856               LDRSB    R0,[R5, R0]
   \   0000087A   0028               CMP      R0,#+0
   \   0000087C   09D5               BPL      ??Procedure_Event_97
   \   0000087E   287A               LDRB     R0,[R5, #+8]
   \   00000880   401C               ADDS     R0,R0,#+1
   \   00000882   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000884   000C               LSRS     R0,R0,#+16
   \   00000886   6328               CMP      R0,#+99
   \   00000888   03D2               BCS      ??Procedure_Event_97
   \                     ??Procedure_Event_96:
   \   0000088A   287A               LDRB     R0,[R5, #+8]
   \   0000088C   401C               ADDS     R0,R0,#+1
   \   0000088E   2872               STRB     R0,[R5, #+8]
   \   00000890   5DE0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_97:
   \   00000892   0020               MOVS     R0,#+0
   \   00000894   2872               STRB     R0,[R5, #+8]
   \   00000896   5AE0               B        ??Procedure_Event_91
   3563                        case ProcWOUT: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_87:
   \   00000898   287A               LDRB     R0,[R5, #+8]
   \   0000089A   401C               ADDS     R0,R0,#+1
   \   0000089C   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   0000089E   000C               LSRS     R0,R0,#+16
   \   000008A0   1028               CMP      R0,#+16
   \   000008A2   09D3               BCC      ??Procedure_Event_98
   \   000008A4   0120               MOVS     R0,#+1
   \   000008A6   2856               LDRSB    R0,[R5, R0]
   \   000008A8   0028               CMP      R0,#+0
   \   000008AA   09D5               BPL      ??Procedure_Event_99
   \   000008AC   287A               LDRB     R0,[R5, #+8]
   \   000008AE   401C               ADDS     R0,R0,#+1
   \   000008B0   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000008B2   000C               LSRS     R0,R0,#+16
   \   000008B4   6328               CMP      R0,#+99
   \   000008B6   03D2               BCS      ??Procedure_Event_99
   \                     ??Procedure_Event_98:
   \   000008B8   287A               LDRB     R0,[R5, #+8]
   \   000008BA   401C               ADDS     R0,R0,#+1
   \   000008BC   2872               STRB     R0,[R5, #+8]
   \   000008BE   46E0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_99:
   \   000008C0   0020               MOVS     R0,#+0
   \   000008C2   2872               STRB     R0,[R5, #+8]
   \   000008C4   43E0               B        ??Procedure_Event_91
   3564                        case ProcWOUTS: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_88:
   \   000008C6   287A               LDRB     R0,[R5, #+8]
   \   000008C8   401C               ADDS     R0,R0,#+1
   \   000008CA   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000008CC   000C               LSRS     R0,R0,#+16
   \   000008CE   1028               CMP      R0,#+16
   \   000008D0   09D3               BCC      ??Procedure_Event_100
   \   000008D2   0120               MOVS     R0,#+1
   \   000008D4   2856               LDRSB    R0,[R5, R0]
   \   000008D6   0028               CMP      R0,#+0
   \   000008D8   09D5               BPL      ??Procedure_Event_101
   \   000008DA   287A               LDRB     R0,[R5, #+8]
   \   000008DC   401C               ADDS     R0,R0,#+1
   \   000008DE   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000008E0   000C               LSRS     R0,R0,#+16
   \   000008E2   6328               CMP      R0,#+99
   \   000008E4   03D2               BCS      ??Procedure_Event_101
   \                     ??Procedure_Event_100:
   \   000008E6   287A               LDRB     R0,[R5, #+8]
   \   000008E8   401C               ADDS     R0,R0,#+1
   \   000008EA   2872               STRB     R0,[R5, #+8]
   \   000008EC   2FE0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_101:
   \   000008EE   0020               MOVS     R0,#+0
   \   000008F0   2872               STRB     R0,[R5, #+8]
   \   000008F2   2CE0               B        ??Procedure_Event_91
   3565                        case ProcWOUTR: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_89:
   \   000008F4   287A               LDRB     R0,[R5, #+8]
   \   000008F6   401C               ADDS     R0,R0,#+1
   \   000008F8   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000008FA   000C               LSRS     R0,R0,#+16
   \   000008FC   1028               CMP      R0,#+16
   \   000008FE   09D3               BCC      ??Procedure_Event_102
   \   00000900   0120               MOVS     R0,#+1
   \   00000902   2856               LDRSB    R0,[R5, R0]
   \   00000904   0028               CMP      R0,#+0
   \   00000906   09D5               BPL      ??Procedure_Event_103
   \   00000908   287A               LDRB     R0,[R5, #+8]
   \   0000090A   401C               ADDS     R0,R0,#+1
   \   0000090C   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   0000090E   000C               LSRS     R0,R0,#+16
   \   00000910   6328               CMP      R0,#+99
   \   00000912   03D2               BCS      ??Procedure_Event_103
   \                     ??Procedure_Event_102:
   \   00000914   287A               LDRB     R0,[R5, #+8]
   \   00000916   401C               ADDS     R0,R0,#+1
   \   00000918   2872               STRB     R0,[R5, #+8]
   \   0000091A   18E0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_103:
   \   0000091C   0020               MOVS     R0,#+0
   \   0000091E   2872               STRB     R0,[R5, #+8]
   \   00000920   15E0               B        ??Procedure_Event_91
   3566                        case ProcWOUTC: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_90:
   \   00000922   287A               LDRB     R0,[R5, #+8]
   \   00000924   401C               ADDS     R0,R0,#+1
   \   00000926   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000928   000C               LSRS     R0,R0,#+16
   \   0000092A   1028               CMP      R0,#+16
   \   0000092C   09D3               BCC      ??Procedure_Event_104
   \   0000092E   0120               MOVS     R0,#+1
   \   00000930   2856               LDRSB    R0,[R5, R0]
   \   00000932   0028               CMP      R0,#+0
   \   00000934   09D5               BPL      ??Procedure_Event_105
   \   00000936   287A               LDRB     R0,[R5, #+8]
   \   00000938   401C               ADDS     R0,R0,#+1
   \   0000093A   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   0000093C   000C               LSRS     R0,R0,#+16
   \   0000093E   6328               CMP      R0,#+99
   \   00000940   03D2               BCS      ??Procedure_Event_105
   \                     ??Procedure_Event_104:
   \   00000942   287A               LDRB     R0,[R5, #+8]
   \   00000944   401C               ADDS     R0,R0,#+1
   \   00000946   2872               STRB     R0,[R5, #+8]
   \   00000948   01E0               B        ??Procedure_Event_91
   \                     ??Procedure_Event_105:
   \   0000094A   0020               MOVS     R0,#+0
   \   0000094C   2872               STRB     R0,[R5, #+8]
   3567                      }
   3568                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_91:
   \   0000094E   0124               MOVS     R4,#+1
   3569                    }
   3570                    txt[0]='<';
   \                     ??Procedure_Event_83:
   \   00000950   6846               MOV      R0,SP
   \   00000952   3C21               MOVS     R1,#+60
   \   00000954   0170               STRB     R1,[R0, #+0]
   3571                    if (Button(txt,2,4,18,18)==1) 
   \   00000956   82B0               SUB      SP,SP,#+8
   \   00000958   1220               MOVS     R0,#+18
   \   0000095A   0090               STR      R0,[SP, #+0]
   \   0000095C   1223               MOVS     R3,#+18
   \   0000095E   0422               MOVS     R2,#+4
   \   00000960   0221               MOVS     R1,#+2
   \   00000962   02A8               ADD      R0,SP,#+8
   \   00000964   ........           BL       Button
   \   00000968   02B0               ADD      SP,SP,#+8
   \   0000096A   0128               CMP      R0,#+1
   \   0000096C   00D0               BEQ      .+4
   \   0000096E   86E0               B        ??Procedure_Event_82
   3572                    {
   3573                      switch (TypePrc->Type)
   \   00000970   2878               LDRB     R0,[R5, #+0]
   \   00000972   1428               CMP      R0,#+20
   \   00000974   0CD0               BEQ      ??Procedure_Event_106
   \   00000976   1528               CMP      R0,#+21
   \   00000978   1BD0               BEQ      ??Procedure_Event_107
   \   0000097A   1628               CMP      R0,#+22
   \   0000097C   2AD0               BEQ      ??Procedure_Event_108
   \   0000097E   2028               CMP      R0,#+32
   \   00000980   39D0               BEQ      ??Procedure_Event_109
   \   00000982   2128               CMP      R0,#+33
   \   00000984   48D0               BEQ      ??Procedure_Event_110
   \   00000986   2228               CMP      R0,#+34
   \   00000988   57D0               BEQ      ??Procedure_Event_111
   \   0000098A   2328               CMP      R0,#+35
   \   0000098C   66D0               BEQ      ??Procedure_Event_112
   \   0000098E   75E0               B        ??Procedure_Event_113
   3574                      {
   3575                        case ProcStI: if (TypePrc->Tag.Port>0)  {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_106:
   \   00000990   287A               LDRB     R0,[R5, #+8]
   \   00000992   0128               CMP      R0,#+1
   \   00000994   03D3               BCC      ??Procedure_Event_114
   \   00000996   287A               LDRB     R0,[R5, #+8]
   \   00000998   401E               SUBS     R0,R0,#+1
   \   0000099A   2872               STRB     R0,[R5, #+8]
   \   0000099C   6EE0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_114:
   \   0000099E   0120               MOVS     R0,#+1
   \   000009A0   2856               LDRSB    R0,[R5, R0]
   \   000009A2   0128               CMP      R0,#+1
   \   000009A4   02DB               BLT      ??Procedure_Event_115
   \   000009A6   0F20               MOVS     R0,#+15
   \   000009A8   2872               STRB     R0,[R5, #+8]
   \   000009AA   67E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_115:
   \   000009AC   6320               MOVS     R0,#+99
   \   000009AE   2872               STRB     R0,[R5, #+8]
   \   000009B0   64E0               B        ??Procedure_Event_113
   3576                        case ProcStNI: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0)  TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_107:
   \   000009B2   287A               LDRB     R0,[R5, #+8]
   \   000009B4   0128               CMP      R0,#+1
   \   000009B6   03D3               BCC      ??Procedure_Event_116
   \   000009B8   287A               LDRB     R0,[R5, #+8]
   \   000009BA   401E               SUBS     R0,R0,#+1
   \   000009BC   2872               STRB     R0,[R5, #+8]
   \   000009BE   5DE0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_116:
   \   000009C0   0120               MOVS     R0,#+1
   \   000009C2   2856               LDRSB    R0,[R5, R0]
   \   000009C4   0128               CMP      R0,#+1
   \   000009C6   02DB               BLT      ??Procedure_Event_117
   \   000009C8   0F20               MOVS     R0,#+15
   \   000009CA   2872               STRB     R0,[R5, #+8]
   \   000009CC   56E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_117:
   \   000009CE   6320               MOVS     R0,#+99
   \   000009D0   2872               STRB     R0,[R5, #+8]
   \   000009D2   53E0               B        ??Procedure_Event_113
   3577                        case ProcStQ: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_108:
   \   000009D4   287A               LDRB     R0,[R5, #+8]
   \   000009D6   0128               CMP      R0,#+1
   \   000009D8   03D3               BCC      ??Procedure_Event_118
   \   000009DA   287A               LDRB     R0,[R5, #+8]
   \   000009DC   401E               SUBS     R0,R0,#+1
   \   000009DE   2872               STRB     R0,[R5, #+8]
   \   000009E0   4CE0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_118:
   \   000009E2   0120               MOVS     R0,#+1
   \   000009E4   2856               LDRSB    R0,[R5, R0]
   \   000009E6   0128               CMP      R0,#+1
   \   000009E8   02DB               BLT      ??Procedure_Event_119
   \   000009EA   0F20               MOVS     R0,#+15
   \   000009EC   2872               STRB     R0,[R5, #+8]
   \   000009EE   45E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_119:
   \   000009F0   6320               MOVS     R0,#+99
   \   000009F2   2872               STRB     R0,[R5, #+8]
   \   000009F4   42E0               B        ??Procedure_Event_113
   3578                        case ProcWOUT: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_109:
   \   000009F6   287A               LDRB     R0,[R5, #+8]
   \   000009F8   0128               CMP      R0,#+1
   \   000009FA   03D3               BCC      ??Procedure_Event_120
   \   000009FC   287A               LDRB     R0,[R5, #+8]
   \   000009FE   401E               SUBS     R0,R0,#+1
   \   00000A00   2872               STRB     R0,[R5, #+8]
   \   00000A02   3BE0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_120:
   \   00000A04   0120               MOVS     R0,#+1
   \   00000A06   2856               LDRSB    R0,[R5, R0]
   \   00000A08   0128               CMP      R0,#+1
   \   00000A0A   02DB               BLT      ??Procedure_Event_121
   \   00000A0C   0F20               MOVS     R0,#+15
   \   00000A0E   2872               STRB     R0,[R5, #+8]
   \   00000A10   34E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_121:
   \   00000A12   6320               MOVS     R0,#+99
   \   00000A14   2872               STRB     R0,[R5, #+8]
   \   00000A16   31E0               B        ??Procedure_Event_113
   3579                        case ProcWOUTS: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_110:
   \   00000A18   287A               LDRB     R0,[R5, #+8]
   \   00000A1A   0128               CMP      R0,#+1
   \   00000A1C   03D3               BCC      ??Procedure_Event_122
   \   00000A1E   287A               LDRB     R0,[R5, #+8]
   \   00000A20   401E               SUBS     R0,R0,#+1
   \   00000A22   2872               STRB     R0,[R5, #+8]
   \   00000A24   2AE0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_122:
   \   00000A26   0120               MOVS     R0,#+1
   \   00000A28   2856               LDRSB    R0,[R5, R0]
   \   00000A2A   0128               CMP      R0,#+1
   \   00000A2C   02DB               BLT      ??Procedure_Event_123
   \   00000A2E   0F20               MOVS     R0,#+15
   \   00000A30   2872               STRB     R0,[R5, #+8]
   \   00000A32   23E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_123:
   \   00000A34   6320               MOVS     R0,#+99
   \   00000A36   2872               STRB     R0,[R5, #+8]
   \   00000A38   20E0               B        ??Procedure_Event_113
   3580                        case ProcWOUTR: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_111:
   \   00000A3A   287A               LDRB     R0,[R5, #+8]
   \   00000A3C   0128               CMP      R0,#+1
   \   00000A3E   03D3               BCC      ??Procedure_Event_124
   \   00000A40   287A               LDRB     R0,[R5, #+8]
   \   00000A42   401E               SUBS     R0,R0,#+1
   \   00000A44   2872               STRB     R0,[R5, #+8]
   \   00000A46   19E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_124:
   \   00000A48   0120               MOVS     R0,#+1
   \   00000A4A   2856               LDRSB    R0,[R5, R0]
   \   00000A4C   0128               CMP      R0,#+1
   \   00000A4E   02DB               BLT      ??Procedure_Event_125
   \   00000A50   0F20               MOVS     R0,#+15
   \   00000A52   2872               STRB     R0,[R5, #+8]
   \   00000A54   12E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_125:
   \   00000A56   6320               MOVS     R0,#+99
   \   00000A58   2872               STRB     R0,[R5, #+8]
   \   00000A5A   0FE0               B        ??Procedure_Event_113
   3581                        case ProcWOUTC: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_112:
   \   00000A5C   287A               LDRB     R0,[R5, #+8]
   \   00000A5E   0128               CMP      R0,#+1
   \   00000A60   03D3               BCC      ??Procedure_Event_126
   \   00000A62   287A               LDRB     R0,[R5, #+8]
   \   00000A64   401E               SUBS     R0,R0,#+1
   \   00000A66   2872               STRB     R0,[R5, #+8]
   \   00000A68   08E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_126:
   \   00000A6A   0120               MOVS     R0,#+1
   \   00000A6C   2856               LDRSB    R0,[R5, R0]
   \   00000A6E   0128               CMP      R0,#+1
   \   00000A70   02DB               BLT      ??Procedure_Event_127
   \   00000A72   0F20               MOVS     R0,#+15
   \   00000A74   2872               STRB     R0,[R5, #+8]
   \   00000A76   01E0               B        ??Procedure_Event_113
   \                     ??Procedure_Event_127:
   \   00000A78   6320               MOVS     R0,#+99
   \   00000A7A   2872               STRB     R0,[R5, #+8]
   3582                      }
   3583                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_113:
   \   00000A7C   0124               MOVS     R4,#+1
   3584                    }
   3585                 }
   3586                 
   3587                 //Zmiana typu procedury w ramach grupy
   3588                 txt[1]=0;
   \                     ??Procedure_Event_82:
   \   00000A7E   6846               MOV      R0,SP
   \   00000A80   0021               MOVS     R1,#+0
   \   00000A82   4170               STRB     R1,[R0, #+1]
   3589                 txt[0]='>';
   \   00000A84   6846               MOV      R0,SP
   \   00000A86   3E21               MOVS     R1,#+62
   \   00000A88   0170               STRB     R1,[R0, #+0]
   3590                 if ((TypePrc->Type>ProcStStart) )
   \   00000A8A   2878               LDRB     R0,[R5, #+0]
   \   00000A8C   1428               CMP      R0,#+20
   \   00000A8E   73D3               BCC      ??Procedure_Event_128
   3591                 if (Button(txt,43,46,18,18)==1)
   \   00000A90   82B0               SUB      SP,SP,#+8
   \   00000A92   1220               MOVS     R0,#+18
   \   00000A94   0090               STR      R0,[SP, #+0]
   \   00000A96   1223               MOVS     R3,#+18
   \   00000A98   2E22               MOVS     R2,#+46
   \   00000A9A   2B21               MOVS     R1,#+43
   \   00000A9C   02A8               ADD      R0,SP,#+8
   \   00000A9E   ........           BL       Button
   \   00000AA2   02B0               ADD      SP,SP,#+8
   \   00000AA4   0128               CMP      R0,#+1
   \   00000AA6   67D1               BNE      ??Procedure_Event_128
   3592                 {
   3593                   //je¿eli stany
   3594                   if  ((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcStStop))
   \   00000AA8   2878               LDRB     R0,[R5, #+0]
   \   00000AAA   1428               CMP      R0,#+20
   \   00000AAC   17D3               BCC      ??Procedure_Event_129
   \   00000AAE   2878               LDRB     R0,[R5, #+0]
   \   00000AB0   1928               CMP      R0,#+25
   \   00000AB2   14D2               BCS      ??Procedure_Event_129
   3595                      { 
   3596                        if (TypePrc->Type+1<ProcStStop) 
   \   00000AB4   2878               LDRB     R0,[R5, #+0]
   \   00000AB6   401C               ADDS     R0,R0,#+1
   \   00000AB8   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000ABA   000C               LSRS     R0,R0,#+16
   \   00000ABC   1928               CMP      R0,#+25
   \   00000ABE   0BD2               BCS      ??Procedure_Event_130
   3597                        {
   3598                          TypePrc->Type++;MenuPaintExecut=1;  
   \   00000AC0   2878               LDRB     R0,[R5, #+0]
   \   00000AC2   401C               ADDS     R0,R0,#+1
   \   00000AC4   2870               STRB     R0,[R5, #+0]
   \   00000AC6   0124               MOVS     R4,#+1
   3599                          if (TypePrc->Type>ProcStQ) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   00000AC8   2878               LDRB     R0,[R5, #+0]
   \   00000ACA   1728               CMP      R0,#+23
   \   00000ACC   07D3               BCC      ??Procedure_Event_129
   \   00000ACE   0020               MOVS     R0,#+0
   \   00000AD0   6870               STRB     R0,[R5, #+1]
   \   00000AD2   0020               MOVS     R0,#+0
   \   00000AD4   2872               STRB     R0,[R5, #+8]
   \   00000AD6   02E0               B        ??Procedure_Event_129
   3600                        } else {TypePrc->Type=(_ProcType)(ProcStStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_130:
   \   00000AD8   1420               MOVS     R0,#+20
   \   00000ADA   2870               STRB     R0,[R5, #+0]
   \   00000ADC   0124               MOVS     R4,#+1
   3601                      }
   3602                   if  ((TypePrc->Type>ProcSetStart) && (TypePrc->Type<ProcSetStop))
   \                     ??Procedure_Event_129:
   \   00000ADE   2878               LDRB     R0,[R5, #+0]
   \   00000AE0   2028               CMP      R0,#+32
   \   00000AE2   17D3               BCC      ??Procedure_Event_131
   \   00000AE4   2878               LDRB     R0,[R5, #+0]
   \   00000AE6   2828               CMP      R0,#+40
   \   00000AE8   14D2               BCS      ??Procedure_Event_131
   3603                      { 
   3604                        if (TypePrc->Type+1<ProcSetStop) 
   \   00000AEA   2878               LDRB     R0,[R5, #+0]
   \   00000AEC   401C               ADDS     R0,R0,#+1
   \   00000AEE   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000AF0   000C               LSRS     R0,R0,#+16
   \   00000AF2   2828               CMP      R0,#+40
   \   00000AF4   0BD2               BCS      ??Procedure_Event_132
   3605                        {
   3606                          TypePrc->Type++;MenuPaintExecut=1;  
   \   00000AF6   2878               LDRB     R0,[R5, #+0]
   \   00000AF8   401C               ADDS     R0,R0,#+1
   \   00000AFA   2870               STRB     R0,[R5, #+0]
   \   00000AFC   0124               MOVS     R4,#+1
   3607                          if (TypePrc->Type>ProcWOUTC) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   00000AFE   2878               LDRB     R0,[R5, #+0]
   \   00000B00   2428               CMP      R0,#+36
   \   00000B02   07D3               BCC      ??Procedure_Event_131
   \   00000B04   0020               MOVS     R0,#+0
   \   00000B06   6870               STRB     R0,[R5, #+1]
   \   00000B08   0020               MOVS     R0,#+0
   \   00000B0A   2872               STRB     R0,[R5, #+8]
   \   00000B0C   02E0               B        ??Procedure_Event_131
   3608                        } else {TypePrc->Type=(_ProcType)(ProcSetStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_132:
   \   00000B0E   2020               MOVS     R0,#+32
   \   00000B10   2870               STRB     R0,[R5, #+0]
   \   00000B12   0124               MOVS     R4,#+1
   3609                      }
   3610                   
   3611                   
   3612                   if  ((TypePrc->Type>ProcTimeStart) && (TypePrc->Type<ProcTimeStop))
   \                     ??Procedure_Event_131:
   \   00000B14   2878               LDRB     R0,[R5, #+0]
   \   00000B16   2D28               CMP      R0,#+45
   \   00000B18   12D3               BCC      ??Procedure_Event_133
   \   00000B1A   2878               LDRB     R0,[R5, #+0]
   \   00000B1C   3028               CMP      R0,#+48
   \   00000B1E   0FD2               BCS      ??Procedure_Event_133
   3613                   {  
   3614                      if (TypePrc->Type+1<ProcTimeStop) 
   \   00000B20   2878               LDRB     R0,[R5, #+0]
   \   00000B22   401C               ADDS     R0,R0,#+1
   \   00000B24   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000B26   000C               LSRS     R0,R0,#+16
   \   00000B28   3028               CMP      R0,#+48
   \   00000B2A   04D2               BCS      ??Procedure_Event_134
   3615                      {
   3616                        TypePrc->Type++;MenuPaintExecut=1;  
   \   00000B2C   2878               LDRB     R0,[R5, #+0]
   \   00000B2E   401C               ADDS     R0,R0,#+1
   \   00000B30   2870               STRB     R0,[R5, #+0]
   \   00000B32   0124               MOVS     R4,#+1
   \   00000B34   02E0               B        ??Procedure_Event_135
   3617                      } else {
   3618                        TypePrc->Type=(_ProcType)(ProcTimeStart+1);MenuPaintExecut=1;  
   \                     ??Procedure_Event_134:
   \   00000B36   2D20               MOVS     R0,#+45
   \   00000B38   2870               STRB     R0,[R5, #+0]
   \   00000B3A   0124               MOVS     R4,#+1
   3619                      }
   3620                      TypePrc->Tag.CounterStartTime=0;
   \                     ??Procedure_Event_135:
   \   00000B3C   0020               MOVS     R0,#+0
   \   00000B3E   E860               STR      R0,[R5, #+12]
   3621          
   3622                   }
   3623                   
   3624                   if  ((TypePrc->Type>ProcAnalogStart) && (TypePrc->Type<ProcAnalogStop))
   \                     ??Procedure_Event_133:
   \   00000B40   2878               LDRB     R0,[R5, #+0]
   \   00000B42   3728               CMP      R0,#+55
   \   00000B44   10D3               BCC      ??Procedure_Event_136
   \   00000B46   2878               LDRB     R0,[R5, #+0]
   \   00000B48   4028               CMP      R0,#+64
   \   00000B4A   0DD2               BCS      ??Procedure_Event_136
   3625                      { 
   3626                        if (TypePrc->Type+1<ProcAnalogStop) 
   \   00000B4C   2878               LDRB     R0,[R5, #+0]
   \   00000B4E   401C               ADDS     R0,R0,#+1
   \   00000B50   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000B52   000C               LSRS     R0,R0,#+16
   \   00000B54   4028               CMP      R0,#+64
   \   00000B56   04D2               BCS      ??Procedure_Event_137
   3627                        {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=ProcAnalogStart+1;MenuPaintExecut=1;  }
                                                                                         ^
Warning[Pe188]: enumerated type mixed with another type
   \   00000B58   2878               LDRB     R0,[R5, #+0]
   \   00000B5A   401C               ADDS     R0,R0,#+1
   \   00000B5C   2870               STRB     R0,[R5, #+0]
   \   00000B5E   0124               MOVS     R4,#+1
   \   00000B60   02E0               B        ??Procedure_Event_136
   \                     ??Procedure_Event_137:
   \   00000B62   3720               MOVS     R0,#+55
   \   00000B64   2870               STRB     R0,[R5, #+0]
   \   00000B66   0124               MOVS     R4,#+1
   3628                      }
   3629                   
   3630                   
   3631                   
   3632                   if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg) )
   \                     ??Procedure_Event_136:
   \   00000B68   2878               LDRB     R0,[R5, #+0]
   \   00000B6A   3828               CMP      R0,#+56
   \   00000B6C   02D0               BEQ      ??Procedure_Event_138
   \   00000B6E   2878               LDRB     R0,[R5, #+0]
   \   00000B70   3928               CMP      R0,#+57
   \   00000B72   01D1               BNE      ??Procedure_Event_128
   3633                        {
   3634                          TypePrc->Tag.RegNr=1;
   \                     ??Procedure_Event_138:
   \   00000B74   0120               MOVS     R0,#+1
   \   00000B76   2872               STRB     R0,[R5, #+8]
   3635                        }
   3636                   
   3637                   
   3638                 }
   3639                 
   3640                 
   3641                 /*
   3642                 if (TypePrc->Type==ProcStartTimer)
   3643                 if (Button("> ",2,46,18,11)==1)
   3644                 {
   3645                   if (TypePrc->Nr+1<NumberTimer) {TypePrc->Nr++;} else {TypePrc->Nr=0;}   
   3646                   
   3647                   MenuPaintExecut=1; 
   3648                 }
   3649                 */
   3650                 
   3651                 if (TypePrc->Type==ProcClock)
   \                     ??Procedure_Event_128:
   \   00000B78   2878               LDRB     R0,[R5, #+0]
   \   00000B7A   2E28               CMP      R0,#+46
   \   00000B7C   00D0               BEQ      .+4
   \   00000B7E   ABE0               B        ??Procedure_Event_139
   3652                 {
   3653          
   3654                    txt[1]=0;
   \   00000B80   6846               MOV      R0,SP
   \   00000B82   0021               MOVS     R1,#+0
   \   00000B84   4170               STRB     R1,[R0, #+1]
   3655                    txt[0]=30;
   \   00000B86   6846               MOV      R0,SP
   \   00000B88   1E21               MOVS     R1,#+30
   \   00000B8A   0170               STRB     R1,[R0, #+0]
   3656                    if (Button(txt,43,3,18,19)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000B8C   82B0               SUB      SP,SP,#+8
   \   00000B8E   1320               MOVS     R0,#+19
   \   00000B90   0090               STR      R0,[SP, #+0]
   \   00000B92   1223               MOVS     R3,#+18
   \   00000B94   0322               MOVS     R2,#+3
   \   00000B96   2B21               MOVS     R1,#+43
   \   00000B98   02A8               ADD      R0,SP,#+8
   \   00000B9A   ........           BL       Button
   \   00000B9E   02B0               ADD      SP,SP,#+8
   \   00000BA0   0128               CMP      R0,#+1
   \   00000BA2   2DD1               BNE      ??Procedure_Event_140
   3657                    {
   3658                    
   3659                      if ((TypePrc->Tag.ClkPrcType==PrcMounth) && (TypePrc->Tag.ClkPrcVal<12)) 
   \   00000BA4   287A               LDRB     R0,[R5, #+8]
   \   00000BA6   0028               CMP      R0,#+0
   \   00000BA8   05D1               BNE      ??Procedure_Event_141
   \   00000BAA   687A               LDRB     R0,[R5, #+9]
   \   00000BAC   0C28               CMP      R0,#+12
   \   00000BAE   02D2               BCS      ??Procedure_Event_141
   3660                          {TypePrc->Tag.ClkPrcVal++;} 
   \   00000BB0   687A               LDRB     R0,[R5, #+9]
   \   00000BB2   401C               ADDS     R0,R0,#+1
   \   00000BB4   6872               STRB     R0,[R5, #+9]
   3661                      if ((TypePrc->Tag.ClkPrcType==PrcDay) &&(TypePrc->Tag.ClkPrcVal<31)) 
   \                     ??Procedure_Event_141:
   \   00000BB6   287A               LDRB     R0,[R5, #+8]
   \   00000BB8   0128               CMP      R0,#+1
   \   00000BBA   05D1               BNE      ??Procedure_Event_142
   \   00000BBC   687A               LDRB     R0,[R5, #+9]
   \   00000BBE   1F28               CMP      R0,#+31
   \   00000BC0   02D2               BCS      ??Procedure_Event_142
   3662                          {TypePrc->Tag.ClkPrcVal++;}
   \   00000BC2   687A               LDRB     R0,[R5, #+9]
   \   00000BC4   401C               ADDS     R0,R0,#+1
   \   00000BC6   6872               STRB     R0,[R5, #+9]
   3663                      if ((TypePrc->Tag.ClkPrcType==PrcHour) &&(TypePrc->Tag.ClkPrcVal<23)) 
   \                     ??Procedure_Event_142:
   \   00000BC8   287A               LDRB     R0,[R5, #+8]
   \   00000BCA   0228               CMP      R0,#+2
   \   00000BCC   05D1               BNE      ??Procedure_Event_143
   \   00000BCE   687A               LDRB     R0,[R5, #+9]
   \   00000BD0   1728               CMP      R0,#+23
   \   00000BD2   02D2               BCS      ??Procedure_Event_143
   3664                         {TypePrc->Tag.ClkPrcVal++;} 
   \   00000BD4   687A               LDRB     R0,[R5, #+9]
   \   00000BD6   401C               ADDS     R0,R0,#+1
   \   00000BD8   6872               STRB     R0,[R5, #+9]
   3665                      if ((TypePrc->Tag.ClkPrcType==PrcMinute) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_143:
   \   00000BDA   287A               LDRB     R0,[R5, #+8]
   \   00000BDC   0328               CMP      R0,#+3
   \   00000BDE   05D1               BNE      ??Procedure_Event_144
   \   00000BE0   687A               LDRB     R0,[R5, #+9]
   \   00000BE2   3B28               CMP      R0,#+59
   \   00000BE4   02D2               BCS      ??Procedure_Event_144
   3666                          {TypePrc->Tag.ClkPrcVal++;} 
   \   00000BE6   687A               LDRB     R0,[R5, #+9]
   \   00000BE8   401C               ADDS     R0,R0,#+1
   \   00000BEA   6872               STRB     R0,[R5, #+9]
   3667                      if ((TypePrc->Tag.ClkPrcType==PrcSecond) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_144:
   \   00000BEC   287A               LDRB     R0,[R5, #+8]
   \   00000BEE   0428               CMP      R0,#+4
   \   00000BF0   05D1               BNE      ??Procedure_Event_145
   \   00000BF2   687A               LDRB     R0,[R5, #+9]
   \   00000BF4   3B28               CMP      R0,#+59
   \   00000BF6   02D2               BCS      ??Procedure_Event_145
   3668                          {TypePrc->Tag.ClkPrcVal++;}
   \   00000BF8   687A               LDRB     R0,[R5, #+9]
   \   00000BFA   401C               ADDS     R0,R0,#+1
   \   00000BFC   6872               STRB     R0,[R5, #+9]
   3669                    
   3670                       
   3671                       
   3672                       
   3673                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_145:
   \   00000BFE   0124               MOVS     R4,#+1
   3674                    }
   3675              
   3676                    
   3677                    txt[0]=31;
   \                     ??Procedure_Event_140:
   \   00000C00   6846               MOV      R0,SP
   \   00000C02   1F21               MOVS     R1,#+31
   \   00000C04   0170               STRB     R1,[R0, #+0]
   3678                    if  (Button(txt,2,3,18,19)==1)//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000C06   82B0               SUB      SP,SP,#+8
   \   00000C08   1320               MOVS     R0,#+19
   \   00000C0A   0090               STR      R0,[SP, #+0]
   \   00000C0C   1223               MOVS     R3,#+18
   \   00000C0E   0322               MOVS     R2,#+3
   \   00000C10   0221               MOVS     R1,#+2
   \   00000C12   02A8               ADD      R0,SP,#+8
   \   00000C14   ........           BL       Button
   \   00000C18   02B0               ADD      SP,SP,#+8
   \   00000C1A   0128               CMP      R0,#+1
   \   00000C1C   3CD1               BNE      ??Procedure_Event_146
   3679                    { 
   3680                      if (TypePrc->Tag.ClkPrcType==PrcMounth) if (TypePrc->Tag.ClkPrcVal>1)
   \   00000C1E   287A               LDRB     R0,[R5, #+8]
   \   00000C20   0028               CMP      R0,#+0
   \   00000C22   08D1               BNE      ??Procedure_Event_147
   \   00000C24   687A               LDRB     R0,[R5, #+9]
   \   00000C26   0228               CMP      R0,#+2
   \   00000C28   03D3               BCC      ??Procedure_Event_148
   3681                          {TypePrc->Tag.ClkPrcVal--; } else {TypePrc->Tag.ClkPrcVal=12;}
   \   00000C2A   687A               LDRB     R0,[R5, #+9]
   \   00000C2C   401E               SUBS     R0,R0,#+1
   \   00000C2E   6872               STRB     R0,[R5, #+9]
   \   00000C30   01E0               B        ??Procedure_Event_147
   \                     ??Procedure_Event_148:
   \   00000C32   0C20               MOVS     R0,#+12
   \   00000C34   6872               STRB     R0,[R5, #+9]
   3682                      if (TypePrc->Tag.ClkPrcType==PrcDay) if(TypePrc->Tag.ClkPrcVal>1) 
   \                     ??Procedure_Event_147:
   \   00000C36   287A               LDRB     R0,[R5, #+8]
   \   00000C38   0128               CMP      R0,#+1
   \   00000C3A   08D1               BNE      ??Procedure_Event_149
   \   00000C3C   687A               LDRB     R0,[R5, #+9]
   \   00000C3E   0228               CMP      R0,#+2
   \   00000C40   03D3               BCC      ??Procedure_Event_150
   3683                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=31;}
   \   00000C42   687A               LDRB     R0,[R5, #+9]
   \   00000C44   401E               SUBS     R0,R0,#+1
   \   00000C46   6872               STRB     R0,[R5, #+9]
   \   00000C48   01E0               B        ??Procedure_Event_149
   \                     ??Procedure_Event_150:
   \   00000C4A   1F20               MOVS     R0,#+31
   \   00000C4C   6872               STRB     R0,[R5, #+9]
   3684                      if (TypePrc->Tag.ClkPrcType==PrcHour) if(TypePrc->Tag.ClkPrcVal>0)
   \                     ??Procedure_Event_149:
   \   00000C4E   287A               LDRB     R0,[R5, #+8]
   \   00000C50   0228               CMP      R0,#+2
   \   00000C52   08D1               BNE      ??Procedure_Event_151
   \   00000C54   687A               LDRB     R0,[R5, #+9]
   \   00000C56   0128               CMP      R0,#+1
   \   00000C58   03D3               BCC      ??Procedure_Event_152
   3685                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=23;}
   \   00000C5A   687A               LDRB     R0,[R5, #+9]
   \   00000C5C   401E               SUBS     R0,R0,#+1
   \   00000C5E   6872               STRB     R0,[R5, #+9]
   \   00000C60   01E0               B        ??Procedure_Event_151
   \                     ??Procedure_Event_152:
   \   00000C62   1720               MOVS     R0,#+23
   \   00000C64   6872               STRB     R0,[R5, #+9]
   3686                      if (TypePrc->Tag.ClkPrcType==PrcMinute) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_151:
   \   00000C66   287A               LDRB     R0,[R5, #+8]
   \   00000C68   0328               CMP      R0,#+3
   \   00000C6A   08D1               BNE      ??Procedure_Event_153
   \   00000C6C   687A               LDRB     R0,[R5, #+9]
   \   00000C6E   0128               CMP      R0,#+1
   \   00000C70   03D3               BCC      ??Procedure_Event_154
   3687                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   00000C72   687A               LDRB     R0,[R5, #+9]
   \   00000C74   401E               SUBS     R0,R0,#+1
   \   00000C76   6872               STRB     R0,[R5, #+9]
   \   00000C78   01E0               B        ??Procedure_Event_153
   \                     ??Procedure_Event_154:
   \   00000C7A   3B20               MOVS     R0,#+59
   \   00000C7C   6872               STRB     R0,[R5, #+9]
   3688                      if (TypePrc->Tag.ClkPrcType==PrcSecond) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_153:
   \   00000C7E   287A               LDRB     R0,[R5, #+8]
   \   00000C80   0428               CMP      R0,#+4
   \   00000C82   08D1               BNE      ??Procedure_Event_155
   \   00000C84   687A               LDRB     R0,[R5, #+9]
   \   00000C86   0128               CMP      R0,#+1
   \   00000C88   03D3               BCC      ??Procedure_Event_156
   3689                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   00000C8A   687A               LDRB     R0,[R5, #+9]
   \   00000C8C   401E               SUBS     R0,R0,#+1
   \   00000C8E   6872               STRB     R0,[R5, #+9]
   \   00000C90   01E0               B        ??Procedure_Event_155
   \                     ??Procedure_Event_156:
   \   00000C92   3B20               MOVS     R0,#+59
   \   00000C94   6872               STRB     R0,[R5, #+9]
   3690                        
   3691                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_155:
   \   00000C96   0124               MOVS     R4,#+1
   3692                      
   3693                    }
   3694               
   3695                    
   3696                   //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3697                   if (Button("> ",43,24,18,19)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Procedure_Event_146:
   \   00000C98   82B0               SUB      SP,SP,#+8
   \   00000C9A   1320               MOVS     R0,#+19
   \   00000C9C   0090               STR      R0,[SP, #+0]
   \   00000C9E   1223               MOVS     R3,#+18
   \   00000CA0   1822               MOVS     R2,#+24
   \   00000CA2   2B21               MOVS     R1,#+43
   \   00000CA4   98A0               ADR      R0,??Procedure_Event_157  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000CA6   ........           BL       Button
   \   00000CAA   02B0               ADD      SP,SP,#+8
   \   00000CAC   0128               CMP      R0,#+1
   \   00000CAE   13D1               BNE      ??Procedure_Event_139
   3698                   {
   3699                     if (TypePrc->Tag.ClkPrcType<PrcSecond) 
   \   00000CB0   287A               LDRB     R0,[R5, #+8]
   \   00000CB2   0428               CMP      R0,#+4
   \   00000CB4   03D2               BCS      ??Procedure_Event_158
   3700                     {
   3701                       TypePrc->Tag.ClkPrcType++;
   \   00000CB6   287A               LDRB     R0,[R5, #+8]
   \   00000CB8   401C               ADDS     R0,R0,#+1
   \   00000CBA   2872               STRB     R0,[R5, #+8]
   \   00000CBC   01E0               B        ??Procedure_Event_159
   3702                     }else{
   3703                       TypePrc->Tag.ClkPrcType=PrcMounth;
   \                     ??Procedure_Event_158:
   \   00000CBE   0020               MOVS     R0,#+0
   \   00000CC0   2872               STRB     R0,[R5, #+8]
   3704                     }
   3705          
   3706                       TypePrc->Tag.ClkPrcVal=0; 
   \                     ??Procedure_Event_159:
   \   00000CC2   0020               MOVS     R0,#+0
   \   00000CC4   6872               STRB     R0,[R5, #+9]
   3707                       if ((TypePrc->Tag.ClkPrcType==PrcMounth) || (TypePrc->Tag.ClkPrcType==PrcDay)) TypePrc->Tag.ClkPrcVal=1; 
   \   00000CC6   287A               LDRB     R0,[R5, #+8]
   \   00000CC8   0028               CMP      R0,#+0
   \   00000CCA   02D0               BEQ      ??Procedure_Event_160
   \   00000CCC   287A               LDRB     R0,[R5, #+8]
   \   00000CCE   0128               CMP      R0,#+1
   \   00000CD0   01D1               BNE      ??Procedure_Event_161
   \                     ??Procedure_Event_160:
   \   00000CD2   0120               MOVS     R0,#+1
   \   00000CD4   6872               STRB     R0,[R5, #+9]
   3708          
   3709          
   3710                     
   3711                     MenuPaintExecut=1; 
   \                     ??Procedure_Event_161:
   \   00000CD6   0124               MOVS     R4,#+1
   3712                     
   3713                   }
   3714                    
   3715                 }
   3716               
   3717                 if (TypePrc->Type==ProcTimerSet)
   \                     ??Procedure_Event_139:
   \   00000CD8   2878               LDRB     R0,[R5, #+0]
   \   00000CDA   2D28               CMP      R0,#+45
   \   00000CDC   6BD1               BNE      ??Procedure_Event_162
   3718                 {  
   3719                   
   3720                    txt[1]=0;
   \   00000CDE   6846               MOV      R0,SP
   \   00000CE0   0021               MOVS     R1,#+0
   \   00000CE2   4170               STRB     R1,[R0, #+1]
   3721                    txt[0]=30;
   \   00000CE4   6846               MOV      R0,SP
   \   00000CE6   1E21               MOVS     R1,#+30
   \   00000CE8   0170               STRB     R1,[R0, #+0]
   3722                    if ((Button(txt,33,3,19,19)) &&  ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) )//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000CEA   82B0               SUB      SP,SP,#+8
   \   00000CEC   1320               MOVS     R0,#+19
   \   00000CEE   0090               STR      R0,[SP, #+0]
   \   00000CF0   1323               MOVS     R3,#+19
   \   00000CF2   0322               MOVS     R2,#+3
   \   00000CF4   2121               MOVS     R1,#+33
   \   00000CF6   02A8               ADD      R0,SP,#+8
   \   00000CF8   ........           BL       Button
   \   00000CFC   02B0               ADD      SP,SP,#+8
   \   00000CFE   0028               CMP      R0,#+0
   \   00000D00   25D0               BEQ      ??Procedure_Event_163
   \   00000D02   8248               LDR      R0,??Procedure_Event_157+0x4  ;; Touch_EventTime
   \   00000D04   0CC8               LDM      R0!,{R2,R3}
   \   00000D06   0838               SUBS     R0,R0,#+8
   \   00000D08   0020               MOVS     R0,#+0
   \   00000D0A   C832               ADDS     R2,R2,#+200
   \   00000D0C   4341               ADCS     R3,R3,R0
   \   00000D0E   8048               LDR      R0,??Procedure_Event_157+0x8  ;; g_counter
   \   00000D10   03C8               LDM      R0!,{R0,R1}
   \   00000D12   8B42               CMP      R3,R1
   \   00000D14   0BD3               BCC      ??Procedure_Event_164
   \   00000D16   01D8               BHI      ??Procedure_Event_165
   \   00000D18   8242               CMP      R2,R0
   \   00000D1A   08D3               BCC      ??Procedure_Event_164
   \                     ??Procedure_Event_165:
   \   00000D1C   7C48               LDR      R0,??Procedure_Event_157+0x8  ;; g_counter
   \   00000D1E   03C8               LDM      R0!,{R0,R1}
   \   00000D20   7A4A               LDR      R2,??Procedure_Event_157+0x4  ;; Touch_EventTime
   \   00000D22   0CCA               LDM      R2!,{R2,R3}
   \   00000D24   9942               CMP      R1,R3
   \   00000D26   12D8               BHI      ??Procedure_Event_163
   \   00000D28   01D3               BCC      ??Procedure_Event_166
   \   00000D2A   9042               CMP      R0,R2
   \   00000D2C   0FD2               BCS      ??Procedure_Event_163
   3723                    {
   3724                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_166:
   \                     ??Procedure_Event_164:
   \   00000D2E   774A               LDR      R2,??Procedure_Event_157+0x4  ;; Touch_EventTime
   \   00000D30   7748               LDR      R0,??Procedure_Event_157+0x8  ;; g_counter
   \   00000D32   03C8               LDM      R0!,{R0,R1}
   \   00000D34   03C2               STM      R2!,{R0,R1}
   \   00000D36   083A               SUBS     R2,R2,#+8
   3725                      if (TypePrc->Tag.SetCounter<10000)  
   \   00000D38   A868               LDR      R0,[R5, #+8]
   \   00000D3A   7649               LDR      R1,??Procedure_Event_157+0xC  ;; 0x2710
   \   00000D3C   8842               CMP      R0,R1
   \   00000D3E   03D2               BCS      ??Procedure_Event_167
   3726                      { 
   3727                       TypePrc->Tag.SetCounter++;
   \   00000D40   A868               LDR      R0,[R5, #+8]
   \   00000D42   401C               ADDS     R0,R0,#+1
   \   00000D44   A860               STR      R0,[R5, #+8]
   \   00000D46   01E0               B        ??Procedure_Event_168
   3728                       
   3729                      }else {
   3730                       TypePrc->Tag.SetCounter=0; 
   \                     ??Procedure_Event_167:
   \   00000D48   0020               MOVS     R0,#+0
   \   00000D4A   A860               STR      R0,[R5, #+8]
   3731                      }
   3732                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_168:
   \   00000D4C   0124               MOVS     R4,#+1
   3733                    }
   3734                    
   3735                    txt[0]=31;
   \                     ??Procedure_Event_163:
   \   00000D4E   6846               MOV      R0,SP
   \   00000D50   1F21               MOVS     R1,#+31
   \   00000D52   0170               STRB     R1,[R0, #+0]
   3736                    if ((Button(txt,12,3,19,19)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter))) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000D54   82B0               SUB      SP,SP,#+8
   \   00000D56   1320               MOVS     R0,#+19
   \   00000D58   0090               STR      R0,[SP, #+0]
   \   00000D5A   1323               MOVS     R3,#+19
   \   00000D5C   0322               MOVS     R2,#+3
   \   00000D5E   0C21               MOVS     R1,#+12
   \   00000D60   02A8               ADD      R0,SP,#+8
   \   00000D62   ........           BL       Button
   \   00000D66   02B0               ADD      SP,SP,#+8
   \   00000D68   0028               CMP      R0,#+0
   \   00000D6A   24D0               BEQ      ??Procedure_Event_162
   \   00000D6C   6748               LDR      R0,??Procedure_Event_157+0x4  ;; Touch_EventTime
   \   00000D6E   0CC8               LDM      R0!,{R2,R3}
   \   00000D70   0838               SUBS     R0,R0,#+8
   \   00000D72   0020               MOVS     R0,#+0
   \   00000D74   C832               ADDS     R2,R2,#+200
   \   00000D76   4341               ADCS     R3,R3,R0
   \   00000D78   6548               LDR      R0,??Procedure_Event_157+0x8  ;; g_counter
   \   00000D7A   03C8               LDM      R0!,{R0,R1}
   \   00000D7C   8B42               CMP      R3,R1
   \   00000D7E   0BD3               BCC      ??Procedure_Event_169
   \   00000D80   01D8               BHI      ??Procedure_Event_170
   \   00000D82   8242               CMP      R2,R0
   \   00000D84   08D3               BCC      ??Procedure_Event_169
   \                     ??Procedure_Event_170:
   \   00000D86   6248               LDR      R0,??Procedure_Event_157+0x8  ;; g_counter
   \   00000D88   03C8               LDM      R0!,{R0,R1}
   \   00000D8A   604A               LDR      R2,??Procedure_Event_157+0x4  ;; Touch_EventTime
   \   00000D8C   0CCA               LDM      R2!,{R2,R3}
   \   00000D8E   9942               CMP      R1,R3
   \   00000D90   11D8               BHI      ??Procedure_Event_162
   \   00000D92   01D3               BCC      ??Procedure_Event_171
   \   00000D94   9042               CMP      R0,R2
   \   00000D96   0ED2               BCS      ??Procedure_Event_162
   3737                    {
   3738                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_171:
   \                     ??Procedure_Event_169:
   \   00000D98   5C4A               LDR      R2,??Procedure_Event_157+0x4  ;; Touch_EventTime
   \   00000D9A   5D48               LDR      R0,??Procedure_Event_157+0x8  ;; g_counter
   \   00000D9C   03C8               LDM      R0!,{R0,R1}
   \   00000D9E   03C2               STM      R2!,{R0,R1}
   \   00000DA0   083A               SUBS     R2,R2,#+8
   3739                      if (TypePrc->Tag.SetCounter>0) 
   \   00000DA2   A868               LDR      R0,[R5, #+8]
   \   00000DA4   0028               CMP      R0,#+0
   \   00000DA6   03D0               BEQ      ??Procedure_Event_172
   3740                      {
   3741                       TypePrc->Tag.SetCounter--;
   \   00000DA8   A868               LDR      R0,[R5, #+8]
   \   00000DAA   401E               SUBS     R0,R0,#+1
   \   00000DAC   A860               STR      R0,[R5, #+8]
   \   00000DAE   01E0               B        ??Procedure_Event_173
   3742                       
   3743                      }else{
   3744                        TypePrc->Tag.SetCounter=100000;
   \                     ??Procedure_Event_172:
   \   00000DB0   5948               LDR      R0,??Procedure_Event_157+0x10  ;; 0x186a0
   \   00000DB2   A860               STR      R0,[R5, #+8]
   3745                      }
   3746                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_173:
   \   00000DB4   0124               MOVS     R4,#+1
   3747                    }
   3748                 }
   3749                 
   3750                        //zmiana numeru procedur Dnia
   3751                 if (TypePrc->Type==ProcDay)
   \                     ??Procedure_Event_162:
   \   00000DB6   2878               LDRB     R0,[R5, #+0]
   \   00000DB8   2F28               CMP      R0,#+47
   \   00000DBA   2BD1               BNE      ??Procedure_Event_174
   3752                 {  
   3753          
   3754                    
   3755                    if (Button("> ",43,25,18,18)==1) 
   \   00000DBC   82B0               SUB      SP,SP,#+8
   \   00000DBE   1220               MOVS     R0,#+18
   \   00000DC0   0090               STR      R0,[SP, #+0]
   \   00000DC2   1223               MOVS     R3,#+18
   \   00000DC4   1922               MOVS     R2,#+25
   \   00000DC6   2B21               MOVS     R1,#+43
   \   00000DC8   4FA0               ADR      R0,??Procedure_Event_157  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000DCA   ........           BL       Button
   \   00000DCE   02B0               ADD      SP,SP,#+8
   \   00000DD0   0128               CMP      R0,#+1
   \   00000DD2   09D1               BNE      ??Procedure_Event_175
   3756                    {
   3757            
   3758                      if (TypePrc->Tag.DayOfWeek<Sunday) {TypePrc->Tag.DayOfWeek++;} else {TypePrc->Tag.DayOfWeek=Monday;}
   \   00000DD4   287A               LDRB     R0,[R5, #+8]
   \   00000DD6   0728               CMP      R0,#+7
   \   00000DD8   03D2               BCS      ??Procedure_Event_176
   \   00000DDA   287A               LDRB     R0,[R5, #+8]
   \   00000DDC   401C               ADDS     R0,R0,#+1
   \   00000DDE   2872               STRB     R0,[R5, #+8]
   \   00000DE0   01E0               B        ??Procedure_Event_177
   \                     ??Procedure_Event_176:
   \   00000DE2   0120               MOVS     R0,#+1
   \   00000DE4   2872               STRB     R0,[R5, #+8]
   3759                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_177:
   \   00000DE6   0124               MOVS     R4,#+1
   3760                    }
   3761              
   3762                    if (Button("< ",2,25,18,18)==1) 
   \                     ??Procedure_Event_175:
   \   00000DE8   82B0               SUB      SP,SP,#+8
   \   00000DEA   1220               MOVS     R0,#+18
   \   00000DEC   0090               STR      R0,[SP, #+0]
   \   00000DEE   1223               MOVS     R3,#+18
   \   00000DF0   1922               MOVS     R2,#+25
   \   00000DF2   0221               MOVS     R1,#+2
   \   00000DF4   49A0               ADR      R0,??Procedure_Event_157+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000DF6   ........           BL       Button
   \   00000DFA   02B0               ADD      SP,SP,#+8
   \   00000DFC   0128               CMP      R0,#+1
   \   00000DFE   09D1               BNE      ??Procedure_Event_174
   3763                    {
   3764                      
   3765                        if (TypePrc->Tag.DayOfWeek>Monday) {TypePrc->Tag.DayOfWeek--;} else {TypePrc->Tag.DayOfWeek=Sunday;}
   \   00000E00   287A               LDRB     R0,[R5, #+8]
   \   00000E02   0228               CMP      R0,#+2
   \   00000E04   03D3               BCC      ??Procedure_Event_178
   \   00000E06   287A               LDRB     R0,[R5, #+8]
   \   00000E08   401E               SUBS     R0,R0,#+1
   \   00000E0A   2872               STRB     R0,[R5, #+8]
   \   00000E0C   01E0               B        ??Procedure_Event_179
   \                     ??Procedure_Event_178:
   \   00000E0E   0720               MOVS     R0,#+7
   \   00000E10   2872               STRB     R0,[R5, #+8]
   3766          
   3767                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_179:
   \   00000E12   0124               MOVS     R4,#+1
   3768                    }
   3769                 }
   3770                 
   3771                 
   3772                  if (TypePrc->Type==ProcConstAnal) 
   \                     ??Procedure_Event_174:
   \   00000E14   2878               LDRB     R0,[R5, #+0]
   \   00000E16   3728               CMP      R0,#+55
   \   00000E18   1ED1               BNE      ??Procedure_Event_180
   3773                 {
   3774                         if  (Button(Speech[g_leng].Zmiana,10,16,40,18)==1)
   \   00000E1A   82B0               SUB      SP,SP,#+8
   \   00000E1C   1220               MOVS     R0,#+18
   \   00000E1E   0090               STR      R0,[SP, #+0]
   \   00000E20   2823               MOVS     R3,#+40
   \   00000E22   1022               MOVS     R2,#+16
   \   00000E24   0A21               MOVS     R1,#+10
   \   00000E26   3E48               LDR      R0,??Procedure_Event_157+0x18  ;; 0x50a
   \   00000E28   3E4E               LDR      R6,??Procedure_Event_157+0x1C  ;; g_leng
   \   00000E2A   3668               LDR      R6,[R6, #+0]
   \   00000E2C   3E4F               LDR      R7,??Procedure_Event_157+0x20  ;; 0xa7d
   \   00000E2E   7E43               MULS     R6,R7,R6
   \   00000E30   3E4F               LDR      R7,??Procedure_Event_157+0x24  ;; Speech
   \   00000E32   BE19               ADDS     R6,R7,R6
   \   00000E34   3018               ADDS     R0,R6,R0
   \   00000E36   ........           BL       Button
   \   00000E3A   02B0               ADD      SP,SP,#+8
   \   00000E3C   0128               CMP      R0,#+1
   \   00000E3E   0BD1               BNE      ??Procedure_Event_180
   3775                         {
   3776                           ValueChange= &(TypePrc->Tag.ConstAnValue);
   \   00000E40   3B48               LDR      R0,??Procedure_Event_157+0x28  ;; ValueChange
   \   00000E42   2900               MOVS     R1,R5
   \   00000E44   0831               ADDS     R1,R1,#+8
   \   00000E46   0160               STR      R1,[R0, #+0]
   3777                           MenuLevel=(MenuLevel*10+1);
   \   00000E48   3A48               LDR      R0,??Procedure_Event_157+0x2C  ;; MenuLevel
   \   00000E4A   3A49               LDR      R1,??Procedure_Event_157+0x2C  ;; MenuLevel
   \   00000E4C   0968               LDR      R1,[R1, #+0]
   \   00000E4E   0A22               MOVS     R2,#+10
   \   00000E50   5143               MULS     R1,R2,R1
   \   00000E52   491C               ADDS     R1,R1,#+1
   \   00000E54   0160               STR      R1,[R0, #+0]
   3778                           MenuPaintExecut=1;
   \   00000E56   0124               MOVS     R4,#+1
   3779                         }
   3780                 }
   3781                 
   3782                 
   3783                  if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)    )
   \                     ??Procedure_Event_180:
   \   00000E58   2878               LDRB     R0,[R5, #+0]
   \   00000E5A   3828               CMP      R0,#+56
   \   00000E5C   02D0               BEQ      ??Procedure_Event_181
   \   00000E5E   2878               LDRB     R0,[R5, #+0]
   \   00000E60   3928               CMP      R0,#+57
   \   00000E62   3BD1               BNE      ??Procedure_Event_4
   3784                 {
   3785                 
   3786                      if (Button("> ",43,5,18,18)==1) 
   \                     ??Procedure_Event_181:
   \   00000E64   82B0               SUB      SP,SP,#+8
   \   00000E66   1220               MOVS     R0,#+18
   \   00000E68   0090               STR      R0,[SP, #+0]
   \   00000E6A   1223               MOVS     R3,#+18
   \   00000E6C   0522               MOVS     R2,#+5
   \   00000E6E   2B21               MOVS     R1,#+43
   \   00000E70   25A0               ADR      R0,??Procedure_Event_157  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000E72   ........           BL       Button
   \   00000E76   02B0               ADD      SP,SP,#+8
   \   00000E78   0128               CMP      R0,#+1
   \   00000E7A   11D1               BNE      ??Procedure_Event_182
   3787                      {
   3788                        if (TypePrc->Nr<0)
   \   00000E7C   0120               MOVS     R0,#+1
   \   00000E7E   2856               LDRSB    R0,[R5, R0]
   \   00000E80   0028               CMP      R0,#+0
   \   00000E82   06D5               BPL      ??Procedure_Event_183
   3789                        {
   3790                          if (TypePrc->Tag.RegNr<AnalogVarAmount-1) TypePrc->Tag.RegNr++;  
   \   00000E84   287A               LDRB     R0,[R5, #+8]
   \   00000E86   1328               CMP      R0,#+19
   \   00000E88   09D2               BCS      ??Procedure_Event_184
   \   00000E8A   287A               LDRB     R0,[R5, #+8]
   \   00000E8C   401C               ADDS     R0,R0,#+1
   \   00000E8E   2872               STRB     R0,[R5, #+8]
   \   00000E90   05E0               B        ??Procedure_Event_184
   3791                        }else{
   3792                          if (TypePrc->Tag.RegNr<NumberReg-1) TypePrc->Tag.RegNr++;
   \                     ??Procedure_Event_183:
   \   00000E92   287A               LDRB     R0,[R5, #+8]
   \   00000E94   0A28               CMP      R0,#+10
   \   00000E96   02D2               BCS      ??Procedure_Event_184
   \   00000E98   287A               LDRB     R0,[R5, #+8]
   \   00000E9A   401C               ADDS     R0,R0,#+1
   \   00000E9C   2872               STRB     R0,[R5, #+8]
   3793                        }
   3794                        MenuPaintExecut=1;
   \                     ??Procedure_Event_184:
   \   00000E9E   0124               MOVS     R4,#+1
   3795                      }
   3796                      
   3797                      if (Button("< ",2,5,18,18)==1)
   \                     ??Procedure_Event_182:
   \   00000EA0   82B0               SUB      SP,SP,#+8
   \   00000EA2   1220               MOVS     R0,#+18
   \   00000EA4   0090               STR      R0,[SP, #+0]
   \   00000EA6   1223               MOVS     R3,#+18
   \   00000EA8   0522               MOVS     R2,#+5
   \   00000EAA   0221               MOVS     R1,#+2
   \   00000EAC   1BA0               ADR      R0,??Procedure_Event_157+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000EAE   ........           BL       Button
   \   00000EB2   02B0               ADD      SP,SP,#+8
   \   00000EB4   0128               CMP      R0,#+1
   \   00000EB6   11D1               BNE      ??Procedure_Event_4
   3798                      {
   3799                        if (TypePrc->Nr<0)
   \   00000EB8   0120               MOVS     R0,#+1
   \   00000EBA   2856               LDRSB    R0,[R5, R0]
   \   00000EBC   0028               CMP      R0,#+0
   \   00000EBE   06D5               BPL      ??Procedure_Event_185
   3800                        {
   3801                          if (TypePrc->Tag.RegNr>0) TypePrc->Tag.RegNr--;
   \   00000EC0   287A               LDRB     R0,[R5, #+8]
   \   00000EC2   0128               CMP      R0,#+1
   \   00000EC4   09D3               BCC      ??Procedure_Event_186
   \   00000EC6   287A               LDRB     R0,[R5, #+8]
   \   00000EC8   401E               SUBS     R0,R0,#+1
   \   00000ECA   2872               STRB     R0,[R5, #+8]
   \   00000ECC   05E0               B        ??Procedure_Event_186
   3802                        }else{
   3803                          if (TypePrc->Tag.RegNr>1) TypePrc->Tag.RegNr--;
   \                     ??Procedure_Event_185:
   \   00000ECE   287A               LDRB     R0,[R5, #+8]
   \   00000ED0   0228               CMP      R0,#+2
   \   00000ED2   02D3               BCC      ??Procedure_Event_186
   \   00000ED4   287A               LDRB     R0,[R5, #+8]
   \   00000ED6   401E               SUBS     R0,R0,#+1
   \   00000ED8   2872               STRB     R0,[R5, #+8]
   3804                        }
   3805                        MenuPaintExecut=1;
   \                     ??Procedure_Event_186:
   \   00000EDA   0124               MOVS     R4,#+1
   3806                      }
   3807                 }
   3808                 
   3809          }
   3810                 
   3811            
   3812                 if ((X_up>0) && (Y_up>0))   exit=0;                 
   \                     ??Procedure_Event_4:
   \   00000EDC   1648               LDR      R0,??Procedure_Event_157+0x30  ;; X_up
   \   00000EDE   0021               MOVS     R1,#+0
   \   00000EE0   405E               LDRSH    R0,[R0, R1]
   \   00000EE2   0128               CMP      R0,#+1
   \   00000EE4   05DB               BLT      ??Procedure_Event_187
   \   00000EE6   1548               LDR      R0,??Procedure_Event_157+0x34  ;; Y_up
   \   00000EE8   0021               MOVS     R1,#+0
   \   00000EEA   405E               LDRSH    R0,[R0, R1]
   \   00000EEC   0128               CMP      R0,#+1
   \   00000EEE   00DB               BLT      ??Procedure_Event_187
   \   00000EF0   0026               MOVS     R6,#+0
   3813                  
   3814                 
   3815                 if (MenuPaintExecut) MenuPaint();
   \                     ??Procedure_Event_187:
   \   00000EF2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000EF4   240E               LSRS     R4,R4,#+24
   \   00000EF6   002C               CMP      R4,#+0
   \   00000EF8   01D0               BEQ      ??Procedure_Event_188
   \   00000EFA   ........           BL       MenuPaint
   3816          
   3817                }//________________________________________________________________________
   \                     ??Procedure_Event_188:
   \   00000EFE   03B0               ADD      SP,SP,#+12
   \   00000F00   F0BC               POP      {R4-R7}
   \   00000F02   01BC               POP      {R0}
   \   00000F04   0047               BX       R0               ;; return
   \   00000F06   C046               Nop      
   \                     ??Procedure_Event_157:
   \   00000F08   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000F0C   ........           DC32     Touch_EventTime
   \   00000F10   ........           DC32     g_counter
   \   00000F14   10270000           DC32     0x2710
   \   00000F18   A0860100           DC32     0x186a0
   \   00000F1C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000F20   0A050000           DC32     0x50a
   \   00000F24   ........           DC32     g_leng
   \   00000F28   7D0A0000           DC32     0xa7d
   \   00000F2C   ........           DC32     Speech
   \   00000F30   ........           DC32     ValueChange
   \   00000F34   ........           DC32     MenuLevel
   \   00000F38   ........           DC32     X_up
   \   00000F3C   ........           DC32     Y_up
   3818                   
   3819          
   3820          
   3821            

   \                                 In section .bss, align 4
   3822          char ValueChangeTxtTmp[8]; 
   \                     ValueChangeTxtTmp:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
   3823          char VCTT_ill=0;   //iloæ znaków napisu ValueChangeTxtTmp
   \                     VCTT_ill:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   3824          char VCTT_point_flag=0;  //pozycja kropki
   \                     VCTT_point_flag:
   \   00000000                      DS8 1
   3825          

   \                                 In section Debug.txt, align 4, keep-with-next
   3826          void ValueChange_Paint( short int *ValToChange)
   3827                { 
   \                     ValueChange_Paint:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   3828                  List_Paint(Speech[g_leng].Wartosc,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   59A0               ADR      R0,??ValueChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   5648               LDR      R0,??ValueChange_Paint_0+0x4  ;; 0x5dc
   \   00000028   564C               LDR      R4,??ValueChange_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   564D               LDR      R5,??ValueChange_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   564D               LDR      R5,??ValueChange_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   3829                  
   3830             
   3831                  if (VCTT_ill==0) for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   0000003C   5448               LDR      R0,??ValueChange_Paint_0+0x14  ;; VCTT_ill
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   0BD1               BNE      ??ValueChange_Paint_1
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   05E0               B        ??ValueChange_Paint_2
   \                     ??ValueChange_Paint_3:
   \   00000048   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004A   000E               LSRS     R0,R0,#+24
   \   0000004C   5149               LDR      R1,??ValueChange_Paint_0+0x18  ;; ValueChangeTxtTmp
   \   0000004E   0022               MOVS     R2,#+0
   \   00000050   0A54               STRB     R2,[R1, R0]
   \   00000052   401C               ADDS     R0,R0,#+1
   \                     ??ValueChange_Paint_2:
   \   00000054   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   0728               CMP      R0,#+7
   \   0000005A   F5D3               BCC      ??ValueChange_Paint_3
   3832                  
   3833                  H_line(11,106,40,1);
   \                     ??ValueChange_Paint_1:
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   2822               MOVS     R2,#+40
   \   00000060   6A21               MOVS     R1,#+106
   \   00000062   0B20               MOVS     R0,#+11
   \   00000064   ........           BL       H_line
   3834                  H_line(11,96,40,1);
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   2822               MOVS     R2,#+40
   \   0000006C   6021               MOVS     R1,#+96
   \   0000006E   0B20               MOVS     R0,#+11
   \   00000070   ........           BL       H_line
   3835                  V_line(10,97,9,1); 
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   0922               MOVS     R2,#+9
   \   00000078   6121               MOVS     R1,#+97
   \   0000007A   0A20               MOVS     R0,#+10
   \   0000007C   ........           BL       V_line
   3836                  V_line(51,97,9,1); 
   \   00000080   0123               MOVS     R3,#+1
   \   00000082   0922               MOVS     R2,#+9
   \   00000084   6121               MOVS     R1,#+97
   \   00000086   3320               MOVS     R0,#+51
   \   00000088   ........           BL       V_line
   3837          
   3838                  
   3839                  //char txt[7];
   3840                  
   3841                 
   3842                  //tmpVal=*ValueChange;
   3843                  //char dl=sIntToStr(tmpVal, txt);
   3844                  
   3845                  Label(ValueChangeTxtTmp,1,50,97,7,38,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   8021               MOVS     R1,#+128
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   2621               MOVS     R1,#+38
   \   0000009A   0720               MOVS     R0,#+7
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   6123               MOVS     R3,#+97
   \   000000A0   3222               MOVS     R2,#+50
   \   000000A2   0121               MOVS     R1,#+1
   \   000000A4   3B48               LDR      R0,??ValueChange_Paint_0+0x18  ;; ValueChangeTxtTmp
   \   000000A6   ........           BL       Label
   \   000000AA   06B0               ADD      SP,SP,#+24
   3846                                
   3847          
   3848                  
   3849                  char txt[2];
   3850                  txt[1]=0;
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   4170               STRB     R1,[R0, #+1]
   3851                  char ind=0;
   \   000000B2   0026               MOVS     R6,#+0
   3852                  for (char j=0; j<3; j++)
   \   000000B4   0024               MOVS     R4,#+0
   \   000000B6   24E0               B        ??ValueChange_Paint_4
   3853                    for (char i=0; i<3; i++)
   3854                    {
   3855                      ind++;
   \                     ??ValueChange_Paint_5:
   \   000000B8   761C               ADDS     R6,R6,#+1
   3856                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000BA   0122               MOVS     R2,#+1
   \   000000BC   6946               MOV      R1,SP
   \   000000BE   3000               MOVS     R0,R6
   \   000000C0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C2   000E               LSRS     R0,R0,#+24
   \   000000C4   ........           BL       CharToStr
   3857                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   1120               MOVS     R0,#+17
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   1223               MOVS     R3,#+18
   \   000000D0   4C20               MOVS     R0,#+76
   \   000000D2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D4   240E               LSRS     R4,R4,#+24
   \   000000D6   1321               MOVS     R1,#+19
   \   000000D8   6143               MULS     R1,R4,R1
   \   000000DA   421A               SUBS     R2,R0,R1
   \   000000DC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000DE   120E               LSRS     R2,R2,#+24
   \   000000E0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E2   2D0E               LSRS     R5,R5,#+24
   \   000000E4   1421               MOVS     R1,#+20
   \   000000E6   6943               MULS     R1,R5,R1
   \   000000E8   891C               ADDS     R1,R1,#+2
   \   000000EA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000EC   090E               LSRS     R1,R1,#+24
   \   000000EE   02A8               ADD      R0,SP,#+8
   \   000000F0   ........           BL       Button
   \   000000F4   02B0               ADD      SP,SP,#+8
   3858                    }
   \   000000F6   6D1C               ADDS     R5,R5,#+1
   \                     ??ValueChange_Paint_6:
   \   000000F8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000FA   2D0E               LSRS     R5,R5,#+24
   \   000000FC   032D               CMP      R5,#+3
   \   000000FE   DBD3               BCC      ??ValueChange_Paint_5
   \   00000100   641C               ADDS     R4,R4,#+1
   \                     ??ValueChange_Paint_4:
   \   00000102   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000104   240E               LSRS     R4,R4,#+24
   \   00000106   032C               CMP      R4,#+3
   \   00000108   01D2               BCS      ??ValueChange_Paint_7
   \   0000010A   0025               MOVS     R5,#+0
   \   0000010C   F4E7               B        ??ValueChange_Paint_6
   3859                  Button(".",2+20*0,76-(19*3),18,17);
   \                     ??ValueChange_Paint_7:
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   1120               MOVS     R0,#+17
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   1223               MOVS     R3,#+18
   \   00000116   1322               MOVS     R2,#+19
   \   00000118   0221               MOVS     R1,#+2
   \   0000011A   1FA0               ADR      R0,??ValueChange_Paint_0+0x1C  ;; 0x2E, 0x00, 0x00, 0x00
   \   0000011C   ........           BL       Button
   \   00000120   02B0               ADD      SP,SP,#+8
   3860                  Button("0",2+20*1,76-(19*3),18,17);
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   1120               MOVS     R0,#+17
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   1223               MOVS     R3,#+18
   \   0000012A   1322               MOVS     R2,#+19
   \   0000012C   1621               MOVS     R1,#+22
   \   0000012E   1BA0               ADR      R0,??ValueChange_Paint_0+0x20  ;; 0x30, 0x00, 0x00, 0x00
   \   00000130   ........           BL       Button
   \   00000134   02B0               ADD      SP,SP,#+8
   3861                  Button("-",2+20*2,76-(19*3),18,17);
   \   00000136   82B0               SUB      SP,SP,#+8
   \   00000138   1120               MOVS     R0,#+17
   \   0000013A   0090               STR      R0,[SP, #+0]
   \   0000013C   1223               MOVS     R3,#+18
   \   0000013E   1322               MOVS     R2,#+19
   \   00000140   2A21               MOVS     R1,#+42
   \   00000142   17A0               ADR      R0,??ValueChange_Paint_0+0x24  ;; 0x2D, 0x00, 0x00, 0x00
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
   3862                  
   3863                  Button("Ok ",22,4,38,13);
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   0D20               MOVS     R0,#+13
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   2623               MOVS     R3,#+38
   \   00000152   0422               MOVS     R2,#+4
   \   00000154   1621               MOVS     R1,#+22
   \   00000156   13A0               ADR      R0,??ValueChange_Paint_0+0x28  ;; "Ok "
   \   00000158   ........           BL       Button
   \   0000015C   02B0               ADD      SP,SP,#+8
   3864                  Button("C ",3,4,17,13);
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   0D20               MOVS     R0,#+13
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   1123               MOVS     R3,#+17
   \   00000166   0422               MOVS     R2,#+4
   \   00000168   0321               MOVS     R1,#+3
   \   0000016A   0FA0               ADR      R0,??ValueChange_Paint_0+0x2C  ;; 0x43, 0x20, 0x00, 0x00
   \   0000016C   ........           BL       Button
   \   00000170   02B0               ADD      SP,SP,#+8
   3865                }
   \   00000172   02B0               ADD      SP,SP,#+8
   \   00000174   70BC               POP      {R4-R6}
   \   00000176   01BC               POP      {R0}
   \   00000178   0047               BX       R0               ;; return
   \   0000017A   C046               Nop      
   \                     ??ValueChange_Paint_0:
   \   0000017C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000180   DC050000           DC32     0x5dc
   \   00000184   ........           DC32     g_leng
   \   00000188   7D0A0000           DC32     0xa7d
   \   0000018C   ........           DC32     Speech
   \   00000190   ........           DC32     VCTT_ill
   \   00000194   ........           DC32     ValueChangeTxtTmp
   \   00000198   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   0000019C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   000001A0   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   000001A4   4F6B2000           DC8      "Ok "
   \   000001A8   43200000           DC8      0x43, 0x20, 0x00, 0x00
   3866          
   3867          
   3868          

   \                                 In section Debug.txt, align 4, keep-with-next
   3869          void ValueChange_Evant( short int *ValToChange)
   3870                { 
   \                     ValueChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   3871                 int ValueTmp=0; 
   \   00000004   0024               MOVS     R4,#+0
   3872                 char ind=0;
   \   00000006   0027               MOVS     R7,#+0
   3873                 char txt[2];
   3874                 char Refresh=0;
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0170               STRB     R1,[R0, #+0]
   3875                 char MaxChar;
   3876                 
   3877          
   3878                 txt[1]=0;
   \   0000000E   01A8               ADD      R0,SP,#+4
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   4170               STRB     R1,[R0, #+1]
   3879                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000014   C748               LDR      R0,??ValueChange_Evant_0  ;; X_up
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   405E               LDRSH    R0,[R0, R1]
   \   0000001A   2F28               CMP      R0,#+47
   \   0000001C   2CDB               BLT      ??ValueChange_Evant_1
   \   0000001E   C548               LDR      R0,??ValueChange_Evant_0  ;; X_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   405E               LDRSH    R0,[R0, R1]
   \   00000024   3F28               CMP      R0,#+63
   \   00000026   27DA               BGE      ??ValueChange_Evant_1
   \   00000028   C348               LDR      R0,??ValueChange_Evant_0+0x4  ;; Y_up
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   405E               LDRSH    R0,[R0, R1]
   \   0000002E   7128               CMP      R0,#+113
   \   00000030   22DB               BLT      ??ValueChange_Evant_1
   \   00000032   C148               LDR      R0,??ValueChange_Evant_0+0x4  ;; Y_up
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   405E               LDRSH    R0,[R0, R1]
   \   00000038   7F28               CMP      R0,#+127
   \   0000003A   1DDA               BGE      ??ValueChange_Evant_1
   3880                  {
   3881                       for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   05E0               B        ??ValueChange_Evant_2
   \                     ??ValueChange_Evant_3:
   \   00000040   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000042   000E               LSRS     R0,R0,#+24
   \   00000044   BD49               LDR      R1,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000046   0022               MOVS     R2,#+0
   \   00000048   0A54               STRB     R2,[R1, R0]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \                     ??ValueChange_Evant_2:
   \   0000004C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004E   000E               LSRS     R0,R0,#+24
   \   00000050   0728               CMP      R0,#+7
   \   00000052   F5D3               BCC      ??ValueChange_Evant_3
   3882                          ValueTmp=0;
   \   00000054   0024               MOVS     R4,#+0
   3883                          VCTT_ill=0;
   \   00000056   BA48               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   0170               STRB     R1,[R0, #+0]
   3884                          VCTT_point_flag=0;
   \   0000005C   B948               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   0170               STRB     R1,[R0, #+0]
   3885                    
   3886                      MenuLevel=(MenuLevel/10);
   \   00000062   B948               LDR      R0,??ValueChange_Evant_0+0x14  ;; MenuLevel
   \   00000064   0068               LDR      R0,[R0, #+0]
   \   00000066   0A21               MOVS     R1,#+10
   \   00000068   ........           BL       __aeabi_idivmod
   \   0000006C   B649               LDR      R1,??ValueChange_Evant_0+0x14  ;; MenuLevel
   \   0000006E   0860               STR      R0,[R1, #+0]
   3887                      Refresh=1;
   \   00000070   6846               MOV      R0,SP
   \   00000072   0121               MOVS     R1,#+1
   \   00000074   0170               STRB     R1,[R0, #+0]
   \   00000076   BAE1               B        ??ValueChange_Evant_4
   3888                  } else {
   3889                    
   3890                           
   3891                    if (ValueChangeTxtTmp[0]=='-')
   \                     ??ValueChange_Evant_1:
   \   00000078   B048               LDR      R0,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000007A   0078               LDRB     R0,[R0, #+0]
   \   0000007C   2D28               CMP      R0,#+45
   \   0000007E   07D1               BNE      ??ValueChange_Evant_5
   3892                    {
   3893                      if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000080   B048               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   00000082   0078               LDRB     R0,[R0, #+0]
   \   00000084   0028               CMP      R0,#+0
   \   00000086   01D0               BEQ      ??ValueChange_Evant_6
   \   00000088   0725               MOVS     R5,#+7
   \   0000008A   08E0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_6:
   \   0000008C   0525               MOVS     R5,#+5
   \   0000008E   06E0               B        ??ValueChange_Evant_7
   3894                    }else{
   3895                      if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_5:
   \   00000090   AC48               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   00000092   0078               LDRB     R0,[R0, #+0]
   \   00000094   0028               CMP      R0,#+0
   \   00000096   01D0               BEQ      ??ValueChange_Evant_8
   \   00000098   0625               MOVS     R5,#+6
   \   0000009A   00E0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_8:
   \   0000009C   0425               MOVS     R5,#+4
   3896                    }
   3897                   
   3898                       
   3899                    for (char j=0; j<3; j++)
   \                     ??ValueChange_Evant_7:
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   4170               STRB     R1,[R0, #+1]
   \   000000A4   49E0               B        ??ValueChange_Evant_9
   3900                    {
   3901                    for (char i=0; i<3; i++)
   3902                    {
   3903                      ind++;
   \                     ??ValueChange_Evant_10:
   \   000000A6   7F1C               ADDS     R7,R7,#+1
   3904                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000A8   0122               MOVS     R2,#+1
   \   000000AA   01A9               ADD      R1,SP,#+4
   \   000000AC   3800               MOVS     R0,R7
   \   000000AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B0   000E               LSRS     R0,R0,#+24
   \   000000B2   ........           BL       CharToStr
   3905                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1) ) ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   1120               MOVS     R0,#+17
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   1223               MOVS     R3,#+18
   \   000000BE   4C20               MOVS     R0,#+76
   \   000000C0   02A9               ADD      R1,SP,#+8
   \   000000C2   4978               LDRB     R1,[R1, #+1]
   \   000000C4   1322               MOVS     R2,#+19
   \   000000C6   5143               MULS     R1,R2,R1
   \   000000C8   421A               SUBS     R2,R0,R1
   \   000000CA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000CC   120E               LSRS     R2,R2,#+24
   \   000000CE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000D0   360E               LSRS     R6,R6,#+24
   \   000000D2   1421               MOVS     R1,#+20
   \   000000D4   7143               MULS     R1,R6,R1
   \   000000D6   891C               ADDS     R1,R1,#+2
   \   000000D8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000DA   090E               LSRS     R1,R1,#+24
   \   000000DC   03A8               ADD      R0,SP,#+12
   \   000000DE   ........           BL       Button
   \   000000E2   02B0               ADD      SP,SP,#+8
   \   000000E4   0128               CMP      R0,#+1
   \   000000E6   1ED1               BNE      ??ValueChange_Evant_11
   \   000000E8   9548               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   000000EA   0078               LDRB     R0,[R0, #+0]
   \   000000EC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000EE   2D0E               LSRS     R5,R5,#+24
   \   000000F0   A842               CMP      R0,R5
   \   000000F2   18D2               BCS      ??ValueChange_Evant_11
   \   000000F4   9348               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000000F6   0078               LDRB     R0,[R0, #+0]
   \   000000F8   0028               CMP      R0,#+0
   \   000000FA   06D0               BEQ      ??ValueChange_Evant_12
   \   000000FC   9148               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000000FE   0078               LDRB     R0,[R0, #+0]
   \   00000100   401C               ADDS     R0,R0,#+1
   \   00000102   8F49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000104   0978               LDRB     R1,[R1, #+0]
   \   00000106   8842               CMP      R0,R1
   \   00000108   0DDB               BLT      ??ValueChange_Evant_11
   \                     ??ValueChange_Evant_12:
   \   0000010A   8D48               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   0000010C   0178               LDRB     R1,[R0, #+0]
   \   0000010E   8B4A               LDR      R2,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000110   3800               MOVS     R0,R7
   \   00000112   3030               ADDS     R0,R0,#+48
   \   00000114   5054               STRB     R0,[R2, R1]
   \   00000116   8A48               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000118   8949               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   0000011A   0978               LDRB     R1,[R1, #+0]
   \   0000011C   491C               ADDS     R1,R1,#+1
   \   0000011E   0170               STRB     R1,[R0, #+0]
   \   00000120   6846               MOV      R0,SP
   \   00000122   0121               MOVS     R1,#+1
   \   00000124   0170               STRB     R1,[R0, #+0]
   3906                      
   3907                     }
   \                     ??ValueChange_Evant_11:
   \   00000126   761C               ADDS     R6,R6,#+1
   \                     ??ValueChange_Evant_13:
   \   00000128   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012A   360E               LSRS     R6,R6,#+24
   \   0000012C   032E               CMP      R6,#+3
   \   0000012E   BAD3               BCC      ??ValueChange_Evant_10
   \   00000130   6846               MOV      R0,SP
   \   00000132   6946               MOV      R1,SP
   \   00000134   4978               LDRB     R1,[R1, #+1]
   \   00000136   491C               ADDS     R1,R1,#+1
   \   00000138   4170               STRB     R1,[R0, #+1]
   \                     ??ValueChange_Evant_9:
   \   0000013A   6846               MOV      R0,SP
   \   0000013C   4078               LDRB     R0,[R0, #+1]
   \   0000013E   0328               CMP      R0,#+3
   \   00000140   01D2               BCS      ??ValueChange_Evant_14
   \   00000142   0026               MOVS     R6,#+0
   \   00000144   F0E7               B        ??ValueChange_Evant_13
   3908                    }
   3909                      
   3910                      
   3911                      if ((Button(".",2+20*0,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar+2) && (VCTT_point_flag==0)) 
   \                     ??ValueChange_Evant_14:
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   1120               MOVS     R0,#+17
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   1223               MOVS     R3,#+18
   \   0000014E   1322               MOVS     R2,#+19
   \   00000150   0221               MOVS     R1,#+2
   \   00000152   ACA0               ADR      R0,??ValueChange_Evant_15  ;; 0x2E, 0x00, 0x00, 0x00
   \   00000154   ........           BL       Button
   \   00000158   02B0               ADD      SP,SP,#+8
   \   0000015A   0128               CMP      R0,#+1
   \   0000015C   30D1               BNE      ??ValueChange_Evant_16
   \   0000015E   7848               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000160   0178               LDRB     R1,[R0, #+0]
   \   00000162   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000164   2D0E               LSRS     R5,R5,#+24
   \   00000166   2800               MOVS     R0,R5
   \   00000168   801C               ADDS     R0,R0,#+2
   \   0000016A   8142               CMP      R1,R0
   \   0000016C   28DA               BGE      ??ValueChange_Evant_16
   \   0000016E   7548               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   00000170   0078               LDRB     R0,[R0, #+0]
   \   00000172   0028               CMP      R0,#+0
   \   00000174   24D1               BNE      ??ValueChange_Evant_16
   3912                      {ValueChangeTxtTmp[VCTT_ill++]='.';   Refresh=1; VCTT_point_flag=VCTT_ill-1;
   \   00000176   7248               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000178   0078               LDRB     R0,[R0, #+0]
   \   0000017A   7049               LDR      R1,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000017C   2E22               MOVS     R2,#+46
   \   0000017E   0A54               STRB     R2,[R1, R0]
   \   00000180   6F48               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000182   6F49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000184   0978               LDRB     R1,[R1, #+0]
   \   00000186   491C               ADDS     R1,R1,#+1
   \   00000188   0170               STRB     R1,[R0, #+0]
   \   0000018A   6846               MOV      R0,SP
   \   0000018C   0121               MOVS     R1,#+1
   \   0000018E   0170               STRB     R1,[R0, #+0]
   \   00000190   6C48               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   00000192   6B49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000194   0978               LDRB     R1,[R1, #+0]
   \   00000196   491E               SUBS     R1,R1,#+1
   \   00000198   0170               STRB     R1,[R0, #+0]
   3913                        if (ValueChangeTxtTmp[0]=='-')
   \   0000019A   6848               LDR      R0,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000019C   0078               LDRB     R0,[R0, #+0]
   \   0000019E   2D28               CMP      R0,#+45
   \   000001A0   07D1               BNE      ??ValueChange_Evant_17
   3914                         {
   3915                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   000001A2   6848               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000001A4   0078               LDRB     R0,[R0, #+0]
   \   000001A6   0028               CMP      R0,#+0
   \   000001A8   01D0               BEQ      ??ValueChange_Evant_18
   \   000001AA   0725               MOVS     R5,#+7
   \   000001AC   08E0               B        ??ValueChange_Evant_16
   \                     ??ValueChange_Evant_18:
   \   000001AE   0525               MOVS     R5,#+5
   \   000001B0   06E0               B        ??ValueChange_Evant_16
   3916                          }else{
   3917                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_17:
   \   000001B2   6448               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000001B4   0078               LDRB     R0,[R0, #+0]
   \   000001B6   0028               CMP      R0,#+0
   \   000001B8   01D0               BEQ      ??ValueChange_Evant_19
   \   000001BA   0625               MOVS     R5,#+6
   \   000001BC   00E0               B        ??ValueChange_Evant_16
   \                     ??ValueChange_Evant_19:
   \   000001BE   0425               MOVS     R5,#+4
   3918                          }
   3919                      }
   3920                      
   3921                   
   3922                      if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1))) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??ValueChange_Evant_16:
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1120               MOVS     R0,#+17
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   1223               MOVS     R3,#+18
   \   000001C8   1322               MOVS     R2,#+19
   \   000001CA   1621               MOVS     R1,#+22
   \   000001CC   8EA0               ADR      R0,??ValueChange_Evant_15+0x4  ;; 0x30, 0x00, 0x00, 0x00
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   \   000001D4   0128               CMP      R0,#+1
   \   000001D6   1DD1               BNE      ??ValueChange_Evant_20
   \   000001D8   5948               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   000001DA   0078               LDRB     R0,[R0, #+0]
   \   000001DC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001DE   2D0E               LSRS     R5,R5,#+24
   \   000001E0   A842               CMP      R0,R5
   \   000001E2   17D2               BCS      ??ValueChange_Evant_20
   \   000001E4   5748               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000001E6   0078               LDRB     R0,[R0, #+0]
   \   000001E8   0028               CMP      R0,#+0
   \   000001EA   06D0               BEQ      ??ValueChange_Evant_21
   \   000001EC   5548               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000001EE   0078               LDRB     R0,[R0, #+0]
   \   000001F0   401C               ADDS     R0,R0,#+1
   \   000001F2   5349               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   000001F4   0978               LDRB     R1,[R1, #+0]
   \   000001F6   8842               CMP      R0,R1
   \   000001F8   0CDB               BLT      ??ValueChange_Evant_20
   \                     ??ValueChange_Evant_21:
   \   000001FA   5148               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   000001FC   0078               LDRB     R0,[R0, #+0]
   \   000001FE   4F49               LDR      R1,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000200   3022               MOVS     R2,#+48
   \   00000202   0A54               STRB     R2,[R1, R0]
   \   00000204   4E48               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000206   4E49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000208   0978               LDRB     R1,[R1, #+0]
   \   0000020A   491C               ADDS     R1,R1,#+1
   \   0000020C   0170               STRB     R1,[R0, #+0]
   \   0000020E   6846               MOV      R0,SP
   \   00000210   0121               MOVS     R1,#+1
   \   00000212   0170               STRB     R1,[R0, #+0]
   3923                      if ((Button("-",2+20*2,76-(19*3),18,17)==1) && (VCTT_ill==0))
   \                     ??ValueChange_Evant_20:
   \   00000214   82B0               SUB      SP,SP,#+8
   \   00000216   1120               MOVS     R0,#+17
   \   00000218   0090               STR      R0,[SP, #+0]
   \   0000021A   1223               MOVS     R3,#+18
   \   0000021C   1322               MOVS     R2,#+19
   \   0000021E   2A21               MOVS     R1,#+42
   \   00000220   7AA0               ADR      R0,??ValueChange_Evant_15+0x8  ;; 0x2D, 0x00, 0x00, 0x00
   \   00000222   ........           BL       Button
   \   00000226   02B0               ADD      SP,SP,#+8
   \   00000228   0128               CMP      R0,#+1
   \   0000022A   17D1               BNE      ??ValueChange_Evant_22
   \   0000022C   4448               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   0000022E   0078               LDRB     R0,[R0, #+0]
   \   00000230   0028               CMP      R0,#+0
   \   00000232   13D1               BNE      ??ValueChange_Evant_22
   3924                      {
   3925                        ValueChangeTxtTmp[VCTT_ill++]='-';    
   \   00000234   4248               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000236   0078               LDRB     R0,[R0, #+0]
   \   00000238   4049               LDR      R1,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000023A   2D22               MOVS     R2,#+45
   \   0000023C   0A54               STRB     R2,[R1, R0]
   \   0000023E   4048               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000240   3F49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000242   0978               LDRB     R1,[R1, #+0]
   \   00000244   491C               ADDS     R1,R1,#+1
   \   00000246   0170               STRB     R1,[R0, #+0]
   3926                        if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000248   3E48               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   0000024A   0078               LDRB     R0,[R0, #+0]
   \   0000024C   0028               CMP      R0,#+0
   \   0000024E   01D0               BEQ      ??ValueChange_Evant_23
   \   00000250   0725               MOVS     R5,#+7
   \   00000252   00E0               B        ??ValueChange_Evant_24
   \                     ??ValueChange_Evant_23:
   \   00000254   0525               MOVS     R5,#+5
   3927                        Refresh=1;
   \                     ??ValueChange_Evant_24:
   \   00000256   6846               MOV      R0,SP
   \   00000258   0121               MOVS     R1,#+1
   \   0000025A   0170               STRB     R1,[R0, #+0]
   3928                      }
   3929                      
   3930                      
   3931                  
   3932                      
   3933                      if (Button("C ",3,4,17,13)==1)
   \                     ??ValueChange_Evant_22:
   \   0000025C   82B0               SUB      SP,SP,#+8
   \   0000025E   0D20               MOVS     R0,#+13
   \   00000260   0090               STR      R0,[SP, #+0]
   \   00000262   1123               MOVS     R3,#+17
   \   00000264   0422               MOVS     R2,#+4
   \   00000266   0321               MOVS     R1,#+3
   \   00000268   69A0               ADR      R0,??ValueChange_Evant_15+0xC  ;; 0x43, 0x20, 0x00, 0x00
   \   0000026A   ........           BL       Button
   \   0000026E   02B0               ADD      SP,SP,#+8
   \   00000270   0128               CMP      R0,#+1
   \   00000272   2CD1               BNE      ??ValueChange_Evant_25
   3934                      {
   3935                        if (VCTT_ill) VCTT_ill--;
   \   00000274   3248               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000276   0078               LDRB     R0,[R0, #+0]
   \   00000278   0028               CMP      R0,#+0
   \   0000027A   04D0               BEQ      ??ValueChange_Evant_26
   \   0000027C   3048               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   0000027E   3049               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000280   0978               LDRB     R1,[R1, #+0]
   \   00000282   491E               SUBS     R1,R1,#+1
   \   00000284   0170               STRB     R1,[R0, #+0]
   3936                        if (ValueChangeTxtTmp[VCTT_ill]=='.') VCTT_point_flag=0;
   \                     ??ValueChange_Evant_26:
   \   00000286   2E48               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000288   0078               LDRB     R0,[R0, #+0]
   \   0000028A   2C49               LDR      R1,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000028C   085C               LDRB     R0,[R1, R0]
   \   0000028E   2E28               CMP      R0,#+46
   \   00000290   02D1               BNE      ??ValueChange_Evant_27
   \   00000292   2C48               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   00000294   0021               MOVS     R1,#+0
   \   00000296   0170               STRB     R1,[R0, #+0]
   3937                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??ValueChange_Evant_27:
   \   00000298   2948               LDR      R0,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   0000029A   0078               LDRB     R0,[R0, #+0]
   \   0000029C   2749               LDR      R1,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000029E   0022               MOVS     R2,#+0
   \   000002A0   0A54               STRB     R2,[R1, R0]
   3938                        
   3939                        if (ValueChangeTxtTmp[0]=='-')
   \   000002A2   2648               LDR      R0,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   000002A4   0078               LDRB     R0,[R0, #+0]
   \   000002A6   2D28               CMP      R0,#+45
   \   000002A8   07D1               BNE      ??ValueChange_Evant_28
   3940                        {
   3941                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   000002AA   2648               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000002AC   0078               LDRB     R0,[R0, #+0]
   \   000002AE   0028               CMP      R0,#+0
   \   000002B0   01D0               BEQ      ??ValueChange_Evant_29
   \   000002B2   0725               MOVS     R5,#+7
   \   000002B4   08E0               B        ??ValueChange_Evant_30
   \                     ??ValueChange_Evant_29:
   \   000002B6   0525               MOVS     R5,#+5
   \   000002B8   06E0               B        ??ValueChange_Evant_30
   3942                        }else{
   3943                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_28:
   \   000002BA   2248               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000002BC   0078               LDRB     R0,[R0, #+0]
   \   000002BE   0028               CMP      R0,#+0
   \   000002C0   01D0               BEQ      ??ValueChange_Evant_31
   \   000002C2   0625               MOVS     R5,#+6
   \   000002C4   00E0               B        ??ValueChange_Evant_30
   \                     ??ValueChange_Evant_31:
   \   000002C6   0425               MOVS     R5,#+4
   3944                        }
   3945                        Refresh=1;
   \                     ??ValueChange_Evant_30:
   \   000002C8   6846               MOV      R0,SP
   \   000002CA   0121               MOVS     R1,#+1
   \   000002CC   0170               STRB     R1,[R0, #+0]
   3946                      }
   3947                    
   3948                  
   3949                      int mnz=10;     
   \                     ??ValueChange_Evant_25:
   \   000002CE   0A26               MOVS     R6,#+10
   3950                      char prs=0;
   \   000002D0   0025               MOVS     R5,#+0
   3951                      if (ValueChangeTxtTmp[0]=='-')  prs=1; 
   \   000002D2   1A48               LDR      R0,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   000002D4   0078               LDRB     R0,[R0, #+0]
   \   000002D6   2D28               CMP      R0,#+45
   \   000002D8   00D1               BNE      ??ValueChange_Evant_32
   \   000002DA   0125               MOVS     R5,#+1
   3952                      //zapamiêtanie wartoci
   3953                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??ValueChange_Evant_32:
   \   000002DC   82B0               SUB      SP,SP,#+8
   \   000002DE   0D20               MOVS     R0,#+13
   \   000002E0   0090               STR      R0,[SP, #+0]
   \   000002E2   2623               MOVS     R3,#+38
   \   000002E4   0422               MOVS     R2,#+4
   \   000002E6   1621               MOVS     R1,#+22
   \   000002E8   4AA0               ADR      R0,??ValueChange_Evant_15+0x10  ;; "Ok "
   \   000002EA   ........           BL       Button
   \   000002EE   02B0               ADD      SP,SP,#+8
   \   000002F0   0128               CMP      R0,#+1
   \   000002F2   00D0               BEQ      .+4
   \   000002F4   7BE0               B        ??ValueChange_Evant_4
   3954                      {
   3955                        //je¿eli nie ma kropki 
   3956                        if (VCTT_point_flag==0)
   \   000002F6   1348               LDR      R0,??ValueChange_Evant_0+0x10  ;; VCTT_point_flag
   \   000002F8   0078               LDRB     R0,[R0, #+0]
   \   000002FA   0028               CMP      R0,#+0
   \   000002FC   26D1               BNE      ??ValueChange_Evant_33
   3957                        {
   3958                          for (char i=0; i<VCTT_ill-prs; i++)
   \   000002FE   0020               MOVS     R0,#+0
   \                     ??ValueChange_Evant_34:
   \   00000300   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000302   000E               LSRS     R0,R0,#+24
   \   00000304   0E49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000306   0978               LDRB     R1,[R1, #+0]
   \   00000308   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000030A   2D0E               LSRS     R5,R5,#+24
   \   0000030C   491B               SUBS     R1,R1,R5
   \   0000030E   8842               CMP      R0,R1
   \   00000310   3CDA               BGE      ??ValueChange_Evant_35
   3959                          {
   3960                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \   00000312   0B49               LDR      R1,??ValueChange_Evant_0+0xC  ;; VCTT_ill
   \   00000314   0978               LDRB     R1,[R1, #+0]
   \   00000316   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000318   000E               LSRS     R0,R0,#+24
   \   0000031A   091A               SUBS     R1,R1,R0
   \   0000031C   074A               LDR      R2,??ValueChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   0000031E   5118               ADDS     R1,R2,R1
   \   00000320   491E               SUBS     R1,R1,#+1
   \   00000322   0978               LDRB     R1,[R1, #+0]
   \   00000324   3039               SUBS     R1,R1,#+48
   \   00000326   7143               MULS     R1,R6,R1
   \   00000328   6418               ADDS     R4,R4,R1
   3961                             mnz*=10;
   \   0000032A   0A21               MOVS     R1,#+10
   \   0000032C   4E43               MULS     R6,R1,R6
   3962                          }
   \   0000032E   401C               ADDS     R0,R0,#+1
   \   00000330   E6E7               B        ??ValueChange_Evant_34
   \   00000332   C046               Nop      
   \                     ??ValueChange_Evant_0:
   \   00000334   ........           DC32     X_up
   \   00000338   ........           DC32     Y_up
   \   0000033C   ........           DC32     ValueChangeTxtTmp
   \   00000340   ........           DC32     VCTT_ill
   \   00000344   ........           DC32     VCTT_point_flag
   \   00000348   ........           DC32     MenuLevel
   3963                          
   3964                          
   3965                        }else{
   3966                          ValueTmp+=ValueChangeTxtTmp[VCTT_ill-1]-48;
   \                     ??ValueChange_Evant_33:
   \   0000034C   3248               LDR      R0,??ValueChange_Evant_15+0x14  ;; VCTT_ill
   \   0000034E   0078               LDRB     R0,[R0, #+0]
   \   00000350   3249               LDR      R1,??ValueChange_Evant_15+0x18  ;; ValueChangeTxtTmp
   \   00000352   0818               ADDS     R0,R1,R0
   \   00000354   401E               SUBS     R0,R0,#+1
   \   00000356   0078               LDRB     R0,[R0, #+0]
   \   00000358   3038               SUBS     R0,R0,#+48
   \   0000035A   2418               ADDS     R4,R4,R0
   3967                          
   3968                          for (char i=1; i<=VCTT_point_flag-prs; i++)
   \   0000035C   0120               MOVS     R0,#+1
   \   0000035E   0CE0               B        ??ValueChange_Evant_36
   3969                          {
   3970                             ValueTmp+=(ValueChangeTxtTmp[VCTT_point_flag-i]-48)*mnz;
   \                     ??ValueChange_Evant_37:
   \   00000360   2F49               LDR      R1,??ValueChange_Evant_15+0x1C  ;; VCTT_point_flag
   \   00000362   0978               LDRB     R1,[R1, #+0]
   \   00000364   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000366   000E               LSRS     R0,R0,#+24
   \   00000368   091A               SUBS     R1,R1,R0
   \   0000036A   2C4A               LDR      R2,??ValueChange_Evant_15+0x18  ;; ValueChangeTxtTmp
   \   0000036C   515C               LDRB     R1,[R2, R1]
   \   0000036E   3039               SUBS     R1,R1,#+48
   \   00000370   7143               MULS     R1,R6,R1
   \   00000372   6418               ADDS     R4,R4,R1
   3971                             mnz*=10;
   \   00000374   0A21               MOVS     R1,#+10
   \   00000376   4E43               MULS     R6,R1,R6
   3972                          }
   \   00000378   401C               ADDS     R0,R0,#+1
   \                     ??ValueChange_Evant_36:
   \   0000037A   2949               LDR      R1,??ValueChange_Evant_15+0x1C  ;; VCTT_point_flag
   \   0000037C   0978               LDRB     R1,[R1, #+0]
   \   0000037E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000380   2D0E               LSRS     R5,R5,#+24
   \   00000382   491B               SUBS     R1,R1,R5
   \   00000384   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000386   000E               LSRS     R0,R0,#+24
   \   00000388   8142               CMP      R1,R0
   \   0000038A   E9DA               BGE      ??ValueChange_Evant_37
   3973                          
   3974                        }
   3975                        if (ValueTmp>30000) 
   \                     ??ValueChange_Evant_35:
   \   0000038C   2548               LDR      R0,??ValueChange_Evant_15+0x20  ;; 0x7531
   \   0000038E   8442               CMP      R4,R0
   \   00000390   07DB               BLT      ??ValueChange_Evant_38
   3976                        {
   3977                          //ValueTmp=30000;
   3978                          MenuLevel=MenuLevel*10+1;
   \   00000392   2548               LDR      R0,??ValueChange_Evant_15+0x24  ;; MenuLevel
   \   00000394   2449               LDR      R1,??ValueChange_Evant_15+0x24  ;; MenuLevel
   \   00000396   0968               LDR      R1,[R1, #+0]
   \   00000398   0A22               MOVS     R2,#+10
   \   0000039A   5143               MULS     R1,R2,R1
   \   0000039C   491C               ADDS     R1,R1,#+1
   \   0000039E   0160               STR      R1,[R0, #+0]
   \   000003A0   22E0               B        ??ValueChange_Evant_39
   3979                        }else{
   3980                          MenuLevel/=10; 
   \                     ??ValueChange_Evant_38:
   \   000003A2   2148               LDR      R0,??ValueChange_Evant_15+0x24  ;; MenuLevel
   \   000003A4   0068               LDR      R0,[R0, #+0]
   \   000003A6   0A21               MOVS     R1,#+10
   \   000003A8   ........           BL       __aeabi_idivmod
   \   000003AC   1E49               LDR      R1,??ValueChange_Evant_15+0x24  ;; MenuLevel
   \   000003AE   0860               STR      R0,[R1, #+0]
   3981                          if (ValueChangeTxtTmp[0]=='-')  ValueTmp*=-1; 
   \   000003B0   1A48               LDR      R0,??ValueChange_Evant_15+0x18  ;; ValueChangeTxtTmp
   \   000003B2   0078               LDRB     R0,[R0, #+0]
   \   000003B4   2D28               CMP      R0,#+45
   \   000003B6   02D1               BNE      ??ValueChange_Evant_40
   \   000003B8   0020               MOVS     R0,#+0
   \   000003BA   C043               MVNS     R0,R0            ;; #-1
   \   000003BC   4443               MULS     R4,R0,R4
   3982                          *ValToChange=ValueTmp;
   \                     ??ValueChange_Evant_40:
   \   000003BE   0298               LDR      R0,[SP, #+8]
   \   000003C0   0480               STRH     R4,[R0, #+0]
   3983                          for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   000003C2   0020               MOVS     R0,#+0
   \   000003C4   05E0               B        ??ValueChange_Evant_41
   \                     ??ValueChange_Evant_42:
   \   000003C6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003C8   000E               LSRS     R0,R0,#+24
   \   000003CA   1449               LDR      R1,??ValueChange_Evant_15+0x18  ;; ValueChangeTxtTmp
   \   000003CC   0022               MOVS     R2,#+0
   \   000003CE   0A54               STRB     R2,[R1, R0]
   \   000003D0   401C               ADDS     R0,R0,#+1
   \                     ??ValueChange_Evant_41:
   \   000003D2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003D4   000E               LSRS     R0,R0,#+24
   \   000003D6   0728               CMP      R0,#+7
   \   000003D8   F5D3               BCC      ??ValueChange_Evant_42
   3984                          ValueTmp=0;
   \   000003DA   0024               MOVS     R4,#+0
   3985                          VCTT_ill=0;
   \   000003DC   0E48               LDR      R0,??ValueChange_Evant_15+0x14  ;; VCTT_ill
   \   000003DE   0021               MOVS     R1,#+0
   \   000003E0   0170               STRB     R1,[R0, #+0]
   3986                          VCTT_point_flag=0;
   \   000003E2   0F48               LDR      R0,??ValueChange_Evant_15+0x1C  ;; VCTT_point_flag
   \   000003E4   0021               MOVS     R1,#+0
   \   000003E6   0170               STRB     R1,[R0, #+0]
   3987                          
   3988                        }
   3989                        
   3990                        
   3991                        Refresh=1;
   \                     ??ValueChange_Evant_39:
   \   000003E8   6846               MOV      R0,SP
   \   000003EA   0121               MOVS     R1,#+1
   \   000003EC   0170               STRB     R1,[R0, #+0]
   3992                        
   3993                      }
   3994                    
   3995                    
   3996                  }
   3997                  
   3998                  
   3999                  if (Refresh==1) MenuPaint();
   \                     ??ValueChange_Evant_4:
   \   000003EE   6846               MOV      R0,SP
   \   000003F0   0078               LDRB     R0,[R0, #+0]
   \   000003F2   0128               CMP      R0,#+1
   \   000003F4   01D1               BNE      ??ValueChange_Evant_43
   \   000003F6   ........           BL       MenuPaint
   4000                  
   4001          }
   \                     ??ValueChange_Evant_43:
   \   000003FA   03B0               ADD      SP,SP,#+12
   \   000003FC   F0BC               POP      {R4-R7}
   \   000003FE   01BC               POP      {R0}
   \   00000400   0047               BX       R0               ;; return
   \   00000402   C046               Nop      
   \                     ??ValueChange_Evant_15:
   \   00000404   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000408   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   0000040C   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000410   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   00000414   4F6B2000           DC8      "Ok "
   \   00000418   ........           DC32     VCTT_ill
   \   0000041C   ........           DC32     ValueChangeTxtTmp
   \   00000420   ........           DC32     VCTT_point_flag
   \   00000424   31750000           DC32     0x7531
   \   00000428   ........           DC32     MenuLevel
   4002                
   4003          
   4004          //*-----------------------------------------------------------------------

   \                                 In section .bss, align 4
   4005          char *ptxt;
   \                     ptxt:
   \   00000000                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
   4006          void LaderChange_Paint(void)
   4007                { 
   \                     LaderChange_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4008                 char y=20;   //przesuniêcie w dó³
   \   00000002   1423               MOVS     R3,#+20
   4009          
   4010                 
   4011                  List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   1448               LDR      R0,??LaderChange_Paint_0  ;; 0x41a
   \   00000018   1449               LDR      R1,??LaderChange_Paint_0+0x4  ;; g_leng
   \   0000001A   0968               LDR      R1,[R1, #+0]
   \   0000001C   144A               LDR      R2,??LaderChange_Paint_0+0x8  ;; 0xa7d
   \   0000001E   5143               MULS     R1,R2,R1
   \   00000020   144A               LDR      R2,??LaderChange_Paint_0+0xC  ;; Speech
   \   00000022   5118               ADDS     R1,R2,R1
   \   00000024   0918               ADDS     R1,R1,R0
   \   00000026   1448               LDR      R0,??LaderChange_Paint_0+0x10  ;; 0x40b
   \   00000028   104A               LDR      R2,??LaderChange_Paint_0+0x4  ;; g_leng
   \   0000002A   1268               LDR      R2,[R2, #+0]
   \   0000002C   104C               LDR      R4,??LaderChange_Paint_0+0x8  ;; 0xa7d
   \   0000002E   6243               MULS     R2,R4,R2
   \   00000030   104C               LDR      R4,??LaderChange_Paint_0+0xC  ;; Speech
   \   00000032   A218               ADDS     R2,R4,R2
   \   00000034   1018               ADDS     R0,R2,R0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0321               MOVS     R1,#+3
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000040   1B0E               LSRS     R3,R3,#+24
   \   00000042   0F22               MOVS     R2,#+15
   \   00000044   0221               MOVS     R1,#+2
   \   00000046   8720               MOVS     R0,#+135
   \   00000048   8000               LSLS     R0,R0,#+2        ;; #+540
   \   0000004A   084C               LDR      R4,??LaderChange_Paint_0+0x4  ;; g_leng
   \   0000004C   2468               LDR      R4,[R4, #+0]
   \   0000004E   084D               LDR      R5,??LaderChange_Paint_0+0x8  ;; 0xa7d
   \   00000050   6C43               MULS     R4,R5,R4
   \   00000052   084D               LDR      R5,??LaderChange_Paint_0+0xC  ;; Speech
   \   00000054   2C19               ADDS     R4,R5,R4
   \   00000056   2018               ADDS     R0,R4,R0
   \   00000058   ........           BL       List_Paint
   \   0000005C   0AB0               ADD      SP,SP,#+40
   4012          
   4013          
   4014                }
   \   0000005E   01B0               ADD      SP,SP,#+4
   \   00000060   30BC               POP      {R4,R5}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??LaderChange_Paint_0:
   \   00000068   1A040000           DC32     0x41a
   \   0000006C   ........           DC32     g_leng
   \   00000070   7D0A0000           DC32     0xa7d
   \   00000074   ........           DC32     Speech
   \   00000078   0B040000           DC32     0x40b
   4015          
   4016          
   4017          

   \                                 In section Debug.txt, align 4, keep-with-next
   4018          void LaderChange_Event(void)
   4019                { 
   \                     LaderChange_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4020                  char y=20;   //przesuniêcie w dó³
   \   00000002   1421               MOVS     R1,#+20
   4021                  int ans;
   4022                  char Repaint=0;
   \   00000004   0024               MOVS     R4,#+0
   4023          
   4024                  
   4025                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000000A   090E               LSRS     R1,R1,#+24
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0F21               MOVS     R1,#+15
   \   00000010   0220               MOVS     R0,#+2
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   2348               LDR      R0,??LaderChange_Event_0  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   2348               LDR      R0,??LaderChange_Event_0+0x4  ;; X_down
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   2248               LDR      R0,??LaderChange_Event_0+0x8  ;; Y_up
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   415E               LDRSH    R1,[R0, R1]
   \   00000026   2248               LDR      R0,??LaderChange_Event_0+0xC  ;; X_up
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   405F               LDRSH    R0,[R0, R5]
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   4026            
   4027                  if (ans>0)
   \   00000032   0128               CMP      R0,#+1
   \   00000034   18DB               BLT      ??LaderChange_Event_1
   4028                    {
   4029                      if ((ans>0) && (ans<3))
   \   00000036   0128               CMP      R0,#+1
   \   00000038   2ADB               BLT      ??LaderChange_Event_2
   \   0000003A   0328               CMP      R0,#+3
   \   0000003C   28DA               BGE      ??LaderChange_Event_2
   4030                      {
   4031                        if (ans==1) 
   \   0000003E   0128               CMP      R0,#+1
   \   00000040   09D1               BNE      ??LaderChange_Event_3
   4032                        {
   4033                          MenuLevel=(MenuLevel/10);
   \   00000042   1C48               LDR      R0,??LaderChange_Event_0+0x10  ;; MenuLevel
   \   00000044   0068               LDR      R0,[R0, #+0]
   \   00000046   0A21               MOVS     R1,#+10
   \   00000048   ........           BL       __aeabi_idivmod
   \   0000004C   1949               LDR      R1,??LaderChange_Event_0+0x10  ;; MenuLevel
   \   0000004E   0860               STR      R0,[R1, #+0]
   4034                          AddRow();
   \   00000050   ........           BL       AddRow
   \   00000054   06E0               B        ??LaderChange_Event_4
   4035                          
   4036                        }else{
   4037                          MenuLevel=(MenuLevel*10+ans);
   \                     ??LaderChange_Event_3:
   \   00000056   1749               LDR      R1,??LaderChange_Event_0+0x10  ;; MenuLevel
   \   00000058   164A               LDR      R2,??LaderChange_Event_0+0x10  ;; MenuLevel
   \   0000005A   1268               LDR      R2,[R2, #+0]
   \   0000005C   0A23               MOVS     R3,#+10
   \   0000005E   5A43               MULS     R2,R3,R2
   \   00000060   1018               ADDS     R0,R2,R0
   \   00000062   0860               STR      R0,[R1, #+0]
   4038                        }
   4039                        Repaint=1;
   \                     ??LaderChange_Event_4:
   \   00000064   0124               MOVS     R4,#+1
   \   00000066   13E0               B        ??LaderChange_Event_2
   4040                      }
   4041                      
   4042                    }
   4043                  else if (ans<0)
   \                     ??LaderChange_Event_1:
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   11D5               BPL      ??LaderChange_Event_2
   4044                    {
   4045                      
   4046                      if ((X_up>0) &&(Y_up>0)) 
   \   0000006C   1048               LDR      R0,??LaderChange_Event_0+0xC  ;; X_up
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   405E               LDRSH    R0,[R0, R1]
   \   00000072   0128               CMP      R0,#+1
   \   00000074   0CDB               BLT      ??LaderChange_Event_2
   \   00000076   0D48               LDR      R0,??LaderChange_Event_0+0x8  ;; Y_up
   \   00000078   0021               MOVS     R1,#+0
   \   0000007A   405E               LDRSH    R0,[R0, R1]
   \   0000007C   0128               CMP      R0,#+1
   \   0000007E   07DB               BLT      ??LaderChange_Event_2
   4047                      {
   4048                        MenuLevel=(MenuLevel/10);
   \   00000080   0C48               LDR      R0,??LaderChange_Event_0+0x10  ;; MenuLevel
   \   00000082   0068               LDR      R0,[R0, #+0]
   \   00000084   0A21               MOVS     R1,#+10
   \   00000086   ........           BL       __aeabi_idivmod
   \   0000008A   0A49               LDR      R1,??LaderChange_Event_0+0x10  ;; MenuLevel
   \   0000008C   0860               STR      R0,[R1, #+0]
   4049                        Repaint=1;
   \   0000008E   0124               MOVS     R4,#+1
   4050                        
   4051                      }
   4052                      
   4053                    }
   4054                  if (Repaint) MenuPaint();
   \                     ??LaderChange_Event_2:
   \   00000090   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000092   240E               LSRS     R4,R4,#+24
   \   00000094   002C               CMP      R4,#+0
   \   00000096   01D0               BEQ      ??LaderChange_Event_5
   \   00000098   ........           BL       MenuPaint
   4055          }
   \                     ??LaderChange_Event_5:
   \   0000009C   01B0               ADD      SP,SP,#+4
   \   0000009E   30BC               POP      {R4,R5}
   \   000000A0   01BC               POP      {R0}
   \   000000A2   0047               BX       R0               ;; return
   \                     ??LaderChange_Event_0:
   \   000000A4   ........           DC32     Y_down
   \   000000A8   ........           DC32     X_down
   \   000000AC   ........           DC32     Y_up
   \   000000B0   ........           DC32     X_up
   \   000000B4   ........           DC32     MenuLevel
   4056          
   4057          
   4058          

   \                                 In section .bss, align 4
   4059          int row_tmp;
   \                     row_tmp:
   \   00000000                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
   4060          void AddRow(void)
   4061                { 
   \                     AddRow:
   \   00000000   10B5               PUSH     {R4,LR}
   4062              
   4063                  while (Busy_program) {}
   \                     ??AddRow_0:
   \   00000002   7348               LDR      R0,??AddRow_1    ;; Busy_program
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   FBD1               BNE      ??AddRow_0
   4064           
   4065                Busy_program=1;
   \   0000000A   7148               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   4066                    //for ( row_tmp=5; row_tmp>ChoseRow; row_tmp--)
   4067                    for ( row_tmp=MaxPrcLines-1; row_tmp>ChoseRow; row_tmp--)
   \   00000010   7048               LDR      R0,??AddRow_1+0x4  ;; row_tmp
   \   00000012   C721               MOVS     R1,#+199
   \   00000014   0160               STR      R1,[R0, #+0]
   \   00000016   8AE0               B        ??AddRow_2
   4068                    {
   4069          
   4070                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   4071                      {
   4072                     
   4073                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp-1].Proc[col_tmp].Type;
   \                     ??AddRow_3:
   \   00000018   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000001A   120E               LSRS     R2,R2,#+24
   \   0000001C   1820               MOVS     R0,#+24
   \   0000001E   5043               MULS     R0,R2,R0
   \   00000020   6C49               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   00000022   0968               LDR      R1,[R1, #+0]
   \   00000024   F023               MOVS     R3,#+240
   \   00000026   5943               MULS     R1,R3,R1
   \   00000028   6B4B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   0000002A   5918               ADDS     R1,R3,R1
   \   0000002C   0818               ADDS     R0,R1,R0
   \   0000002E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000030   120E               LSRS     R2,R2,#+24
   \   00000032   1821               MOVS     R1,#+24
   \   00000034   5143               MULS     R1,R2,R1
   \   00000036   674B               LDR      R3,??AddRow_1+0x4  ;; row_tmp
   \   00000038   1B68               LDR      R3,[R3, #+0]
   \   0000003A   F024               MOVS     R4,#+240
   \   0000003C   6343               MULS     R3,R4,R3
   \   0000003E   664C               LDR      R4,??AddRow_1+0x8  ;; gProg
   \   00000040   E318               ADDS     R3,R4,R3
   \   00000042   5918               ADDS     R1,R3,R1
   \   00000044   D839               SUBS     R1,R1,#+216
   \   00000046   0978               LDRB     R1,[R1, #+0]
   \   00000048   0176               STRB     R1,[R0, #+24]
   4074                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp-1].Proc[col_tmp].Nr;
   \   0000004A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000004C   120E               LSRS     R2,R2,#+24
   \   0000004E   1820               MOVS     R0,#+24
   \   00000050   5043               MULS     R0,R2,R0
   \   00000052   6049               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   00000054   0968               LDR      R1,[R1, #+0]
   \   00000056   F023               MOVS     R3,#+240
   \   00000058   5943               MULS     R1,R3,R1
   \   0000005A   5F4B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   0000005C   5918               ADDS     R1,R3,R1
   \   0000005E   0818               ADDS     R0,R1,R0
   \   00000060   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000062   120E               LSRS     R2,R2,#+24
   \   00000064   1821               MOVS     R1,#+24
   \   00000066   5143               MULS     R1,R2,R1
   \   00000068   5A4B               LDR      R3,??AddRow_1+0x4  ;; row_tmp
   \   0000006A   1B68               LDR      R3,[R3, #+0]
   \   0000006C   F024               MOVS     R4,#+240
   \   0000006E   6343               MULS     R3,R4,R3
   \   00000070   594C               LDR      R4,??AddRow_1+0x8  ;; gProg
   \   00000072   E318               ADDS     R3,R4,R3
   \   00000074   5918               ADDS     R1,R3,R1
   \   00000076   D739               SUBS     R1,R1,#+215
   \   00000078   0978               LDRB     R1,[R1, #+0]
   \   0000007A   4176               STRB     R1,[R0, #+25]
   4075                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp-1].Proc[col_tmp].Tag;
   \   0000007C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000007E   120E               LSRS     R2,R2,#+24
   \   00000080   1820               MOVS     R0,#+24
   \   00000082   5043               MULS     R0,R2,R0
   \   00000084   5349               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   00000086   0968               LDR      R1,[R1, #+0]
   \   00000088   F023               MOVS     R3,#+240
   \   0000008A   5943               MULS     R1,R3,R1
   \   0000008C   524B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   0000008E   5918               ADDS     R1,R3,R1
   \   00000090   0B18               ADDS     R3,R1,R0
   \   00000092   2033               ADDS     R3,R3,#+32
   \   00000094   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000096   120E               LSRS     R2,R2,#+24
   \   00000098   1820               MOVS     R0,#+24
   \   0000009A   5043               MULS     R0,R2,R0
   \   0000009C   4D49               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   0000009E   0968               LDR      R1,[R1, #+0]
   \   000000A0   F024               MOVS     R4,#+240
   \   000000A2   6143               MULS     R1,R4,R1
   \   000000A4   4C4C               LDR      R4,??AddRow_1+0x8  ;; gProg
   \   000000A6   6118               ADDS     R1,R4,R1
   \   000000A8   0818               ADDS     R0,R1,R0
   \   000000AA   D038               SUBS     R0,R0,#+208
   \   000000AC   03C8               LDM      R0!,{R0,R1}
   \   000000AE   03C3               STM      R3!,{R0,R1}
   \   000000B0   083B               SUBS     R3,R3,#+8
   4076                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp-1].Proc[col_tmp].LastIn;
   \   000000B2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000B4   120E               LSRS     R2,R2,#+24
   \   000000B6   1820               MOVS     R0,#+24
   \   000000B8   5043               MULS     R0,R2,R0
   \   000000BA   4649               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   000000BC   0968               LDR      R1,[R1, #+0]
   \   000000BE   F023               MOVS     R3,#+240
   \   000000C0   5943               MULS     R1,R3,R1
   \   000000C2   454B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   000000C4   5918               ADDS     R1,R3,R1
   \   000000C6   0818               ADDS     R0,R1,R0
   \   000000C8   2830               ADDS     R0,R0,#+40
   \   000000CA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000CC   120E               LSRS     R2,R2,#+24
   \   000000CE   1821               MOVS     R1,#+24
   \   000000D0   5143               MULS     R1,R2,R1
   \   000000D2   404B               LDR      R3,??AddRow_1+0x4  ;; row_tmp
   \   000000D4   1B68               LDR      R3,[R3, #+0]
   \   000000D6   F024               MOVS     R4,#+240
   \   000000D8   6343               MULS     R3,R4,R3
   \   000000DA   3F4C               LDR      R4,??AddRow_1+0x8  ;; gProg
   \   000000DC   E318               ADDS     R3,R4,R3
   \   000000DE   5918               ADDS     R1,R3,R1
   \   000000E0   C839               SUBS     R1,R1,#+200
   \   000000E2   0978               LDRB     R1,[R1, #+0]
   \   000000E4   0170               STRB     R1,[R0, #+0]
   4077                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp-1].Proc[col_tmp].Out;
   \   000000E6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000E8   120E               LSRS     R2,R2,#+24
   \   000000EA   1820               MOVS     R0,#+24
   \   000000EC   5043               MULS     R0,R2,R0
   \   000000EE   3949               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   000000F0   0968               LDR      R1,[R1, #+0]
   \   000000F2   F023               MOVS     R3,#+240
   \   000000F4   5943               MULS     R1,R3,R1
   \   000000F6   384B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   000000F8   5918               ADDS     R1,R3,R1
   \   000000FA   0818               ADDS     R0,R1,R0
   \   000000FC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000FE   120E               LSRS     R2,R2,#+24
   \   00000100   1821               MOVS     R1,#+24
   \   00000102   5143               MULS     R1,R2,R1
   \   00000104   334B               LDR      R3,??AddRow_1+0x4  ;; row_tmp
   \   00000106   1B68               LDR      R3,[R3, #+0]
   \   00000108   F024               MOVS     R4,#+240
   \   0000010A   6343               MULS     R3,R4,R3
   \   0000010C   324C               LDR      R4,??AddRow_1+0x8  ;; gProg
   \   0000010E   E318               ADDS     R3,R4,R3
   \   00000110   5918               ADDS     R1,R3,R1
   \   00000112   C639               SUBS     R1,R1,#+198
   \   00000114   0988               LDRH     R1,[R1, #+0]
   \   00000116   4185               STRH     R1,[R0, #+42]
   4078          
   4079                      }
   \   00000118   521C               ADDS     R2,R2,#+1
   \                     ??AddRow_4:
   \   0000011A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000011C   120E               LSRS     R2,R2,#+24
   \   0000011E   0A2A               CMP      R2,#+10
   \   00000120   00D2               BCS      .+4
   \   00000122   79E7               B        ??AddRow_3
   \   00000124   2B48               LDR      R0,??AddRow_1+0x4  ;; row_tmp
   \   00000126   2B49               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   00000128   0968               LDR      R1,[R1, #+0]
   \   0000012A   491E               SUBS     R1,R1,#+1
   \   0000012C   0160               STR      R1,[R0, #+0]
   \                     ??AddRow_2:
   \   0000012E   2B48               LDR      R0,??AddRow_1+0xC  ;; ChoseRow
   \   00000130   0078               LDRB     R0,[R0, #+0]
   \   00000132   2849               LDR      R1,??AddRow_1+0x4  ;; row_tmp
   \   00000134   0968               LDR      R1,[R1, #+0]
   \   00000136   8842               CMP      R0,R1
   \   00000138   01DA               BGE      ??AddRow_5
   \   0000013A   0022               MOVS     R2,#+0
   \   0000013C   EDE7               B        ??AddRow_4
   4080                    }
   4081                  
   4082                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??AddRow_5:
   \   0000013E   0022               MOVS     R2,#+0
   \   00000140   3BE0               B        ??AddRow_6
   4083                      {
   4084                        gProg.Line[ChoseRow].Proc[col_tmp].Type=None;
   \                     ??AddRow_7:
   \   00000142   1820               MOVS     R0,#+24
   \   00000144   5043               MULS     R0,R2,R0
   \   00000146   2549               LDR      R1,??AddRow_1+0xC  ;; ChoseRow
   \   00000148   0978               LDRB     R1,[R1, #+0]
   \   0000014A   F023               MOVS     R3,#+240
   \   0000014C   5943               MULS     R1,R3,R1
   \   0000014E   224B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   00000150   5918               ADDS     R1,R3,R1
   \   00000152   0818               ADDS     R0,R1,R0
   \   00000154   0021               MOVS     R1,#+0
   \   00000156   0176               STRB     R1,[R0, #+24]
   4085                        gProg.Line[ChoseRow].Proc[col_tmp].Nr=0;
   \   00000158   1820               MOVS     R0,#+24
   \   0000015A   5043               MULS     R0,R2,R0
   \   0000015C   1F49               LDR      R1,??AddRow_1+0xC  ;; ChoseRow
   \   0000015E   0978               LDRB     R1,[R1, #+0]
   \   00000160   F023               MOVS     R3,#+240
   \   00000162   5943               MULS     R1,R3,R1
   \   00000164   1C4B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   00000166   5918               ADDS     R1,R3,R1
   \   00000168   0818               ADDS     R0,R1,R0
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   4176               STRB     R1,[R0, #+25]
   4086                        gProg.Line[ChoseRow].Proc[col_tmp].Tag.Tag=0;
   \   0000016E   1820               MOVS     R0,#+24
   \   00000170   5043               MULS     R0,R2,R0
   \   00000172   1A49               LDR      R1,??AddRow_1+0xC  ;; ChoseRow
   \   00000174   0978               LDRB     R1,[R1, #+0]
   \   00000176   F023               MOVS     R3,#+240
   \   00000178   5943               MULS     R1,R3,R1
   \   0000017A   174B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   0000017C   5918               ADDS     R1,R3,R1
   \   0000017E   0B18               ADDS     R3,R1,R0
   \   00000180   2033               ADDS     R3,R3,#+32
   \   00000182   0020               MOVS     R0,#+0
   \   00000184   0021               MOVS     R1,#+0
   \   00000186   03C3               STM      R3!,{R0,R1}
   \   00000188   083B               SUBS     R3,R3,#+8
   4087                        gProg.Line[ChoseRow].Proc[col_tmp].LastIn=0;
   \   0000018A   1820               MOVS     R0,#+24
   \   0000018C   5043               MULS     R0,R2,R0
   \   0000018E   1349               LDR      R1,??AddRow_1+0xC  ;; ChoseRow
   \   00000190   0978               LDRB     R1,[R1, #+0]
   \   00000192   F023               MOVS     R3,#+240
   \   00000194   5943               MULS     R1,R3,R1
   \   00000196   104B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   00000198   5918               ADDS     R1,R3,R1
   \   0000019A   0818               ADDS     R0,R1,R0
   \   0000019C   2830               ADDS     R0,R0,#+40
   \   0000019E   0021               MOVS     R1,#+0
   \   000001A0   0170               STRB     R1,[R0, #+0]
   4088                        gProg.Line[ChoseRow].Proc[col_tmp].Out=0;
   \   000001A2   1820               MOVS     R0,#+24
   \   000001A4   5043               MULS     R0,R2,R0
   \   000001A6   0D49               LDR      R1,??AddRow_1+0xC  ;; ChoseRow
   \   000001A8   0978               LDRB     R1,[R1, #+0]
   \   000001AA   F023               MOVS     R3,#+240
   \   000001AC   5943               MULS     R1,R3,R1
   \   000001AE   0A4B               LDR      R3,??AddRow_1+0x8  ;; gProg
   \   000001B0   5918               ADDS     R1,R3,R1
   \   000001B2   0818               ADDS     R0,R1,R0
   \   000001B4   0021               MOVS     R1,#+0
   \   000001B6   4185               STRH     R1,[R0, #+42]
   4089          
   4090                      }
   \   000001B8   521C               ADDS     R2,R2,#+1
   \                     ??AddRow_6:
   \   000001BA   0A2A               CMP      R2,#+10
   \   000001BC   C1DB               BLT      ??AddRow_7
   4091                  
   4092                    ProgramChange=1;
   \   000001BE   0848               LDR      R0,??AddRow_1+0x10  ;; ProgramChange
   \   000001C0   0121               MOVS     R1,#+1
   \   000001C2   0170               STRB     R1,[R0, #+0]
   4093          
   4094                  Busy_program=0;
   \   000001C4   0248               LDR      R0,??AddRow_1    ;; Busy_program
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   0170               STRB     R1,[R0, #+0]
   4095            
   4096          }
   \   000001CA   10BC               POP      {R4}
   \   000001CC   01BC               POP      {R0}
   \   000001CE   0047               BX       R0               ;; return
   \                     ??AddRow_1:
   \   000001D0   ........           DC32     Busy_program
   \   000001D4   ........           DC32     row_tmp
   \   000001D8   ........           DC32     gProg
   \   000001DC   ........           DC32     ChoseRow
   \   000001E0   ........           DC32     ProgramChange
   4097              
   4098          
   4099          
   4100          //procedura usuniêcia lini

   \                                 In section Debug.txt, align 4, keep-with-next
   4101          void RemRow(void)
   4102          {
   \                     RemRow:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   4103                    for (int row_tmp=ChoseRow; row_tmp<MaxPrcLines-1; row_tmp++)
   \   00000002   5648               LDR      R0,??RemRow_0    ;; ChoseRow
   \   00000004   0278               LDRB     R2,[R0, #+0]
   \   00000006   77E0               B        ??RemRow_1
   4104                    {
   4105                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   4106                      {
   4107                     
   4108                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp+1].Proc[col_tmp].Type;
   \                     ??RemRow_2:
   \   00000008   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000000A   1B0E               LSRS     R3,R3,#+24
   \   0000000C   1820               MOVS     R0,#+24
   \   0000000E   5843               MULS     R0,R3,R0
   \   00000010   F021               MOVS     R1,#+240
   \   00000012   5143               MULS     R1,R2,R1
   \   00000014   524C               LDR      R4,??RemRow_0+0x4  ;; gProg
   \   00000016   6118               ADDS     R1,R4,R1
   \   00000018   0918               ADDS     R1,R1,R0
   \   0000001A   8420               MOVS     R0,#+132
   \   0000001C   4000               LSLS     R0,R0,#+1        ;; #+264
   \   0000001E   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000020   1B0E               LSRS     R3,R3,#+24
   \   00000022   1824               MOVS     R4,#+24
   \   00000024   5C43               MULS     R4,R3,R4
   \   00000026   F025               MOVS     R5,#+240
   \   00000028   5543               MULS     R5,R2,R5
   \   0000002A   4D4E               LDR      R6,??RemRow_0+0x4  ;; gProg
   \   0000002C   7519               ADDS     R5,R6,R5
   \   0000002E   2C19               ADDS     R4,R5,R4
   \   00000030   205C               LDRB     R0,[R4, R0]
   \   00000032   0876               STRB     R0,[R1, #+24]
   4109                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp+1].Proc[col_tmp].Nr;
   \   00000034   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000036   1B0E               LSRS     R3,R3,#+24
   \   00000038   1820               MOVS     R0,#+24
   \   0000003A   5843               MULS     R0,R3,R0
   \   0000003C   F021               MOVS     R1,#+240
   \   0000003E   5143               MULS     R1,R2,R1
   \   00000040   474C               LDR      R4,??RemRow_0+0x4  ;; gProg
   \   00000042   6118               ADDS     R1,R4,R1
   \   00000044   0918               ADDS     R1,R1,R0
   \   00000046   FF20               MOVS     R0,#+255
   \   00000048   0A30               ADDS     R0,R0,#+10       ;; #+265
   \   0000004A   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000004C   1B0E               LSRS     R3,R3,#+24
   \   0000004E   1824               MOVS     R4,#+24
   \   00000050   5C43               MULS     R4,R3,R4
   \   00000052   F025               MOVS     R5,#+240
   \   00000054   5543               MULS     R5,R2,R5
   \   00000056   424E               LDR      R6,??RemRow_0+0x4  ;; gProg
   \   00000058   7519               ADDS     R5,R6,R5
   \   0000005A   2C19               ADDS     R4,R5,R4
   \   0000005C   205C               LDRB     R0,[R4, R0]
   \   0000005E   4876               STRB     R0,[R1, #+25]
   4110                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp+1].Proc[col_tmp].Tag;
   \   00000060   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000062   1B0E               LSRS     R3,R3,#+24
   \   00000064   1820               MOVS     R0,#+24
   \   00000066   5843               MULS     R0,R3,R0
   \   00000068   F021               MOVS     R1,#+240
   \   0000006A   5143               MULS     R1,R2,R1
   \   0000006C   3C4C               LDR      R4,??RemRow_0+0x4  ;; gProg
   \   0000006E   6118               ADDS     R1,R4,R1
   \   00000070   0C18               ADDS     R4,R1,R0
   \   00000072   2034               ADDS     R4,R4,#+32
   \   00000074   8820               MOVS     R0,#+136
   \   00000076   4000               LSLS     R0,R0,#+1        ;; #+272
   \   00000078   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000007A   1B0E               LSRS     R3,R3,#+24
   \   0000007C   1821               MOVS     R1,#+24
   \   0000007E   5943               MULS     R1,R3,R1
   \   00000080   F025               MOVS     R5,#+240
   \   00000082   5543               MULS     R5,R2,R5
   \   00000084   364E               LDR      R6,??RemRow_0+0x4  ;; gProg
   \   00000086   7519               ADDS     R5,R6,R5
   \   00000088   6918               ADDS     R1,R5,R1
   \   0000008A   0818               ADDS     R0,R1,R0
   \   0000008C   03C8               LDM      R0!,{R0,R1}
   \   0000008E   03C4               STM      R4!,{R0,R1}
   \   00000090   083C               SUBS     R4,R4,#+8
   4111                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp+1].Proc[col_tmp].LastIn;
   \   00000092   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000094   1B0E               LSRS     R3,R3,#+24
   \   00000096   1820               MOVS     R0,#+24
   \   00000098   5843               MULS     R0,R3,R0
   \   0000009A   F021               MOVS     R1,#+240
   \   0000009C   5143               MULS     R1,R2,R1
   \   0000009E   304C               LDR      R4,??RemRow_0+0x4  ;; gProg
   \   000000A0   6118               ADDS     R1,R4,R1
   \   000000A2   0918               ADDS     R1,R1,R0
   \   000000A4   2831               ADDS     R1,R1,#+40
   \   000000A6   8C20               MOVS     R0,#+140
   \   000000A8   4000               LSLS     R0,R0,#+1        ;; #+280
   \   000000AA   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000AC   1B0E               LSRS     R3,R3,#+24
   \   000000AE   1824               MOVS     R4,#+24
   \   000000B0   5C43               MULS     R4,R3,R4
   \   000000B2   F025               MOVS     R5,#+240
   \   000000B4   5543               MULS     R5,R2,R5
   \   000000B6   2A4E               LDR      R6,??RemRow_0+0x4  ;; gProg
   \   000000B8   7519               ADDS     R5,R6,R5
   \   000000BA   2C19               ADDS     R4,R5,R4
   \   000000BC   205C               LDRB     R0,[R4, R0]
   \   000000BE   0870               STRB     R0,[R1, #+0]
   4112                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp+1].Proc[col_tmp].Out;
   \   000000C0   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000C2   1B0E               LSRS     R3,R3,#+24
   \   000000C4   1820               MOVS     R0,#+24
   \   000000C6   5843               MULS     R0,R3,R0
   \   000000C8   F021               MOVS     R1,#+240
   \   000000CA   5143               MULS     R1,R2,R1
   \   000000CC   244C               LDR      R4,??RemRow_0+0x4  ;; gProg
   \   000000CE   6118               ADDS     R1,R4,R1
   \   000000D0   0918               ADDS     R1,R1,R0
   \   000000D2   8D20               MOVS     R0,#+141
   \   000000D4   4000               LSLS     R0,R0,#+1        ;; #+282
   \   000000D6   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000D8   1B0E               LSRS     R3,R3,#+24
   \   000000DA   1824               MOVS     R4,#+24
   \   000000DC   5C43               MULS     R4,R3,R4
   \   000000DE   F025               MOVS     R5,#+240
   \   000000E0   5543               MULS     R5,R2,R5
   \   000000E2   1F4E               LDR      R6,??RemRow_0+0x4  ;; gProg
   \   000000E4   7519               ADDS     R5,R6,R5
   \   000000E6   2C19               ADDS     R4,R5,R4
   \   000000E8   205A               LDRH     R0,[R4, R0]
   \   000000EA   4885               STRH     R0,[R1, #+42]
   4113                      }
   \   000000EC   5B1C               ADDS     R3,R3,#+1
   \                     ??RemRow_3:
   \   000000EE   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000F0   1B0E               LSRS     R3,R3,#+24
   \   000000F2   0A2B               CMP      R3,#+10
   \   000000F4   88D3               BCC      ??RemRow_2
   \   000000F6   521C               ADDS     R2,R2,#+1
   \                     ??RemRow_1:
   \   000000F8   C72A               CMP      R2,#+199
   \   000000FA   01DA               BGE      ??RemRow_4
   \   000000FC   0023               MOVS     R3,#+0
   \   000000FE   F6E7               B        ??RemRow_3
   4114                    }
   4115                    
   4116                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??RemRow_4:
   \   00000100   0022               MOVS     R2,#+0
   \   00000102   26E0               B        ??RemRow_5
   4117                      {
   4118                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Type=None;
   \                     ??RemRow_6:
   \   00000104   1748               LDR      R0,??RemRow_0+0x8  ;; 0xbaa8
   \   00000106   1821               MOVS     R1,#+24
   \   00000108   5143               MULS     R1,R2,R1
   \   0000010A   154B               LDR      R3,??RemRow_0+0x4  ;; gProg
   \   0000010C   5918               ADDS     R1,R3,R1
   \   0000010E   0023               MOVS     R3,#+0
   \   00000110   0B54               STRB     R3,[R1, R0]
   4119                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Nr=0;
   \   00000112   1548               LDR      R0,??RemRow_0+0xC  ;; 0xbaa9
   \   00000114   1821               MOVS     R1,#+24
   \   00000116   5143               MULS     R1,R2,R1
   \   00000118   114B               LDR      R3,??RemRow_0+0x4  ;; gProg
   \   0000011A   5918               ADDS     R1,R3,R1
   \   0000011C   0023               MOVS     R3,#+0
   \   0000011E   0B54               STRB     R3,[R1, R0]
   4120                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Tag.Tag=0;
   \   00000120   1248               LDR      R0,??RemRow_0+0x10  ;; 0xbab0
   \   00000122   1821               MOVS     R1,#+24
   \   00000124   5143               MULS     R1,R2,R1
   \   00000126   0E4B               LDR      R3,??RemRow_0+0x4  ;; gProg
   \   00000128   5918               ADDS     R1,R3,R1
   \   0000012A   0B18               ADDS     R3,R1,R0
   \   0000012C   0020               MOVS     R0,#+0
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   03C3               STM      R3!,{R0,R1}
   \   00000132   083B               SUBS     R3,R3,#+8
   4121                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].LastIn=0;
   \   00000134   0E48               LDR      R0,??RemRow_0+0x14  ;; 0xbab8
   \   00000136   1821               MOVS     R1,#+24
   \   00000138   5143               MULS     R1,R2,R1
   \   0000013A   094B               LDR      R3,??RemRow_0+0x4  ;; gProg
   \   0000013C   5918               ADDS     R1,R3,R1
   \   0000013E   0023               MOVS     R3,#+0
   \   00000140   0B54               STRB     R3,[R1, R0]
   4122                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Out=0;
   \   00000142   0C48               LDR      R0,??RemRow_0+0x18  ;; 0xbaba
   \   00000144   1821               MOVS     R1,#+24
   \   00000146   5143               MULS     R1,R2,R1
   \   00000148   054B               LDR      R3,??RemRow_0+0x4  ;; gProg
   \   0000014A   5918               ADDS     R1,R3,R1
   \   0000014C   0023               MOVS     R3,#+0
   \   0000014E   0B52               STRH     R3,[R1, R0]
   4123          
   4124                      }
   \   00000150   521C               ADDS     R2,R2,#+1
   \                     ??RemRow_5:
   \   00000152   0A2A               CMP      R2,#+10
   \   00000154   D6DB               BLT      ??RemRow_6
   4125            
   4126          }
   \   00000156   70BC               POP      {R4-R6}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??RemRow_0:
   \   0000015C   ........           DC32     ChoseRow
   \   00000160   ........           DC32     gProg
   \   00000164   A8BA0000           DC32     0xbaa8
   \   00000168   A9BA0000           DC32     0xbaa9
   \   0000016C   B0BA0000           DC32     0xbab0
   \   00000170   B8BA0000           DC32     0xbab8
   \   00000174   BABA0000           DC32     0xbaba
   4127          
   4128          
   4129          

   \                                 In section Debug.txt, align 4, keep-with-next
   4130          void RemRow_Paint(void)
   4131                { 
   \                     RemRow_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   4132          
   4133                  //czy s¹ procedury na lini do usuniêia
   4134                  char ProcExst=0;
   \   00000002   0020               MOVS     R0,#+0
   4135                  for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0DE0               B        ??RemRow_Paint_0
   4136                      {
   4137                        if (gProg.Line[ChoseRow].Proc[col_tmp].Type!=None) ProcExst=1;
   \                     ??RemRow_Paint_1:
   \   00000008   1822               MOVS     R2,#+24
   \   0000000A   4A43               MULS     R2,R1,R2
   \   0000000C   1A4B               LDR      R3,??RemRow_Paint_2  ;; ChoseRow
   \   0000000E   1B78               LDRB     R3,[R3, #+0]
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   194C               LDR      R4,??RemRow_Paint_2+0x4  ;; gProg
   \   00000016   E318               ADDS     R3,R4,R3
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   127E               LDRB     R2,[R2, #+24]
   \   0000001C   002A               CMP      R2,#+0
   \   0000001E   00D0               BEQ      ??RemRow_Paint_3
   \   00000020   0120               MOVS     R0,#+1
   4138                        
   4139                      }
   \                     ??RemRow_Paint_3:
   \   00000022   491C               ADDS     R1,R1,#+1
   \                     ??RemRow_Paint_0:
   \   00000024   0A29               CMP      R1,#+10
   \   00000026   EFDB               BLT      ??RemRow_Paint_1
   4140                  
   4141                  //je¿eli s¹ procedury w lini
   4142                  if (ProcExst)
   \   00000028   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002A   000E               LSRS     R0,R0,#+24
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   14D0               BEQ      ??RemRow_Paint_4
   4143                  {
   4144                    Ask_Paint("?",Speech[g_leng].UsunWiersz,Speech[g_leng].Zprocedurami);  
   \   00000030   8720               MOVS     R0,#+135
   \   00000032   C000               LSLS     R0,R0,#+3        ;; #+1080
   \   00000034   1249               LDR      R1,??RemRow_Paint_2+0x8  ;; g_leng
   \   00000036   0968               LDR      R1,[R1, #+0]
   \   00000038   124A               LDR      R2,??RemRow_Paint_2+0xC  ;; 0xa7d
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   124A               LDR      R2,??RemRow_Paint_2+0x10  ;; Speech
   \   0000003E   5118               ADDS     R1,R2,R1
   \   00000040   0A18               ADDS     R2,R1,R0
   \   00000042   1248               LDR      R0,??RemRow_Paint_2+0x14  ;; 0x41a
   \   00000044   0E49               LDR      R1,??RemRow_Paint_2+0x8  ;; g_leng
   \   00000046   0968               LDR      R1,[R1, #+0]
   \   00000048   0E4B               LDR      R3,??RemRow_Paint_2+0xC  ;; 0xa7d
   \   0000004A   5943               MULS     R1,R3,R1
   \   0000004C   0E4B               LDR      R3,??RemRow_Paint_2+0x10  ;; Speech
   \   0000004E   5918               ADDS     R1,R3,R1
   \   00000050   0918               ADDS     R1,R1,R0
   \   00000052   0FA0               ADR      R0,??RemRow_Paint_2+0x18  ;; 0x3F, 0x00, 0x00, 0x00
   \   00000054   ........           BL       Ask_Paint
   \   00000058   0AE0               B        ??RemRow_Paint_5
   4145          
   4146                  }else{  //je¿eli linia pusta
   4147                    RemRow();
   \                     ??RemRow_Paint_4:
   \   0000005A   ........           BL       RemRow
   4148                    MenuLevel=(MenuLevel/100);
   \   0000005E   0D48               LDR      R0,??RemRow_Paint_2+0x1C  ;; MenuLevel
   \   00000060   0068               LDR      R0,[R0, #+0]
   \   00000062   6421               MOVS     R1,#+100
   \   00000064   ........           BL       __aeabi_idivmod
   \   00000068   0A49               LDR      R1,??RemRow_Paint_2+0x1C  ;; MenuLevel
   \   0000006A   0860               STR      R0,[R1, #+0]
   4149                    MenuPaint();
   \   0000006C   ........           BL       MenuPaint
   4150                  }
   4151                  
   4152                }
   \                     ??RemRow_Paint_5:
   \   00000070   10BC               POP      {R4}
   \   00000072   01BC               POP      {R0}
   \   00000074   0047               BX       R0               ;; return
   \   00000076   C046               Nop      
   \                     ??RemRow_Paint_2:
   \   00000078   ........           DC32     ChoseRow
   \   0000007C   ........           DC32     gProg
   \   00000080   ........           DC32     g_leng
   \   00000084   7D0A0000           DC32     0xa7d
   \   00000088   ........           DC32     Speech
   \   0000008C   1A040000           DC32     0x41a
   \   00000090   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   00000094   ........           DC32     MenuLevel
   4153          
   4154          
   4155          
   4156          //restart
   4157                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   4158                void RemRow_Event(void)
   4159                {
   \                     RemRow_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   4160                  int ans;
   4161                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1748               LDR      R0,??RemRow_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1648               LDR      R0,??RemRow_Event_0+0x4  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   1648               LDR      R0,??RemRow_Event_0+0x8  ;; Y_up
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   415E               LDRSH    R1,[R0, R1]
   \   00000014   1548               LDR      R0,??RemRow_Event_0+0xC  ;; X_up
   \   00000016   0024               MOVS     R4,#+0
   \   00000018   005F               LDRSH    R0,[R0, R4]
   \   0000001A   ........           BL       Ask_Event
   \   0000001E   0400               MOVS     R4,R0
   4162            
   4163                  if (ans)
   \   00000020   002C               CMP      R4,#+0
   \   00000022   1AD0               BEQ      ??RemRow_Event_1
   4164                    {
   4165                    if (ans==2) 
   \   00000024   022C               CMP      R4,#+2
   \   00000026   0BD1               BNE      ??RemRow_Event_2
   4166                    {
   4167                      RemRow();
   \   00000028   ........           BL       RemRow
   4168                      MenuLevel=(MenuLevel/100);
   \   0000002C   1048               LDR      R0,??RemRow_Event_0+0x10  ;; MenuLevel
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   0E49               LDR      R1,??RemRow_Event_0+0x10  ;; MenuLevel
   \   00000038   0860               STR      R0,[R1, #+0]
   4169                      ProgramChange=1;
   \   0000003A   0E48               LDR      R0,??RemRow_Event_0+0x14  ;; ProgramChange
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0170               STRB     R1,[R0, #+0]
   4170                    }
   4171                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \                     ??RemRow_Event_2:
   \   00000040   002C               CMP      R4,#+0
   \   00000042   01D4               BMI      ??RemRow_Event_3
   \   00000044   012C               CMP      R4,#+1
   \   00000046   06D1               BNE      ??RemRow_Event_4
   \                     ??RemRow_Event_3:
   \   00000048   0948               LDR      R0,??RemRow_Event_0+0x10  ;; MenuLevel
   \   0000004A   0068               LDR      R0,[R0, #+0]
   \   0000004C   6421               MOVS     R1,#+100
   \   0000004E   ........           BL       __aeabi_idivmod
   \   00000052   0749               LDR      R1,??RemRow_Event_0+0x10  ;; MenuLevel
   \   00000054   0860               STR      R0,[R1, #+0]
   4172                    MenuPaint();
   \                     ??RemRow_Event_4:
   \   00000056   ........           BL       MenuPaint
   4173                    } 
   4174                }//_______________________________________________________________________
   \                     ??RemRow_Event_1:
   \   0000005A   10BC               POP      {R4}
   \   0000005C   01BC               POP      {R0}
   \   0000005E   0047               BX       R0               ;; return
   \                     ??RemRow_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     MenuLevel
   \   00000074   ........           DC32     ProgramChange
   4175              
   4176            
   4177          
   4178          
   4179          //SaveChanges_Evant****************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4180          void SaveChanges_Evant(void)
   4181          {
   \                     SaveChanges_Evant:
   \   00000000   10B5               PUSH     {R4,LR}
   4182                    int ans;
   4183                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2348               LDR      R0,??SaveChanges_Evant_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   2248               LDR      R0,??SaveChanges_Evant_0+0x4  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   2248               LDR      R0,??SaveChanges_Evant_0+0x8  ;; Y_up
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   415E               LDRSH    R1,[R0, R1]
   \   00000014   2148               LDR      R0,??SaveChanges_Evant_0+0xC  ;; X_up
   \   00000016   0024               MOVS     R4,#+0
   \   00000018   005F               LDRSH    R0,[R0, R4]
   \   0000001A   ........           BL       Ask_Event
   \   0000001E   0400               MOVS     R4,R0
   4184            
   4185                  if (ans)
   \   00000020   002C               CMP      R4,#+0
   \   00000022   32D0               BEQ      ??SaveChanges_Evant_1
   4186                    {
   4187                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000024   1E48               LDR      R0,??SaveChanges_Evant_0+0x10  ;; 0x13d7e9
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002A   000E               LSRS     R0,R0,#+24
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   0BD1               BNE      ??SaveChanges_Evant_2
   \   00000030   1C48               LDR      R0,??SaveChanges_Evant_0+0x14  ;; 0xfffff430
   \   00000032   8021               MOVS     R1,#+128
   \   00000034   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000036   0160               STR      R1,[R0, #+0]
   \   00000038   1B4A               LDR      R2,??SaveChanges_Evant_0+0x18  ;; ButtonBipCounter
   \   0000003A   1C48               LDR      R0,??SaveChanges_Evant_0+0x1C  ;; g_counter
   \   0000003C   03C8               LDM      R0!,{R0,R1}
   \   0000003E   0023               MOVS     R3,#+0
   \   00000040   0830               ADDS     R0,R0,#+8
   \   00000042   5941               ADCS     R1,R1,R3
   \   00000044   03C2               STM      R2!,{R0,R1}
   \   00000046   083A               SUBS     R2,R2,#+8
   4188                    if (ans==2) 
   \                     ??SaveChanges_Evant_2:
   \   00000048   022C               CMP      R4,#+2
   \   0000004A   0ED1               BNE      ??SaveChanges_Evant_3
   4189                    {
   4190                       ProgramChange=0;
   \   0000004C   1848               LDR      R0,??SaveChanges_Evant_0+0x20  ;; ProgramChange
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   0170               STRB     R1,[R0, #+0]
   4191                        
   4192                      ProgramChangeExecute(&gProg); 
   \   00000052   1848               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   00000054   ........           BL       ProgramChangeExecute
   4193                      RamToFlash();
   \   00000058   ........           BL       RamToFlash
   4194                      
   4195                      MenuLevel=(MenuLevel/100);
   \   0000005C   1648               LDR      R0,??SaveChanges_Evant_0+0x28  ;; MenuLevel
   \   0000005E   0068               LDR      R0,[R0, #+0]
   \   00000060   6421               MOVS     R1,#+100
   \   00000062   ........           BL       __aeabi_idivmod
   \   00000066   1449               LDR      R1,??SaveChanges_Evant_0+0x28  ;; MenuLevel
   \   00000068   0860               STR      R0,[R1, #+0]
   4196                    }
   4197          
   4198                      ProgramChangeExecute(&gProg);
   \                     ??SaveChanges_Evant_3:
   \   0000006A   1248               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   0000006C   ........           BL       ProgramChangeExecute
   4199                   
   4200                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \   00000070   002C               CMP      R4,#+0
   \   00000072   01D4               BMI      ??SaveChanges_Evant_4
   \   00000074   012C               CMP      R4,#+1
   \   00000076   06D1               BNE      ??SaveChanges_Evant_5
   \                     ??SaveChanges_Evant_4:
   \   00000078   0F48               LDR      R0,??SaveChanges_Evant_0+0x28  ;; MenuLevel
   \   0000007A   0068               LDR      R0,[R0, #+0]
   \   0000007C   6421               MOVS     R1,#+100
   \   0000007E   ........           BL       __aeabi_idivmod
   \   00000082   0D49               LDR      R1,??SaveChanges_Evant_0+0x28  ;; MenuLevel
   \   00000084   0860               STR      R0,[R1, #+0]
   4201                    MenuPaint();
   \                     ??SaveChanges_Evant_5:
   \   00000086   ........           BL       MenuPaint
   4202                    } 
   4203            
   4204          }
   \                     ??SaveChanges_Evant_1:
   \   0000008A   10BC               POP      {R4}
   \   0000008C   01BC               POP      {R0}
   \   0000008E   0047               BX       R0               ;; return
   \                     ??SaveChanges_Evant_0:
   \   00000090   ........           DC32     Y_down
   \   00000094   ........           DC32     X_down
   \   00000098   ........           DC32     Y_up
   \   0000009C   ........           DC32     X_up
   \   000000A0   E9D71300           DC32     0x13d7e9
   \   000000A4   30F4FFFF           DC32     0xfffff430
   \   000000A8   ........           DC32     ButtonBipCounter
   \   000000AC   ........           DC32     g_counter
   \   000000B0   ........           DC32     ProgramChange
   \   000000B4   ........           DC32     gProg
   \   000000B8   ........           DC32     MenuLevel
   4205          
   4206          
   4207                   
   4208          
   4209                    
   4210          

   \                                 In section .bss, align 1
   4211          char OpenScreenSet=0;
   \                     OpenScreenSet:
   \   00000000                      DS8 1
   4212          
   4213          //Ustawienie grafiki ekranu******************************************************************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4214          void ScreenSet_Paint(_Screen* ScreenLokal)
   4215          {
   \                     ScreenSet_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0400               MOVS     R4,R0
   4216            char PaternDesignNr;
   4217            
   4218            if (CurModifSheet==0) 
   \   00000006   B448               LDR      R0,??ScreenSet_Paint_0  ;; CurModifSheet
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D1               BNE      ??ScreenSet_Paint_1
   4219            {
   4220              PaternDesignNr=ScreenSetTab_0_Nr;
   \   0000000E   0825               MOVS     R5,#+8
   \   00000010   00E0               B        ??ScreenSet_Paint_2
   4221            }else{
   4222              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Paint_1:
   \   00000012   0525               MOVS     R5,#+5
   4223            }      
   4224            
   4225            if (OpenScreenSet==0)
   \                     ??ScreenSet_Paint_2:
   \   00000014   B148               LDR      R0,??ScreenSet_Paint_0+0x4  ;; OpenScreenSet
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   0028               CMP      R0,#+0
   \   0000001A   10D1               BNE      ??ScreenSet_Paint_3
   4226            {
   4227              OpenScreenSet=1; 
   \   0000001C   AF48               LDR      R0,??ScreenSet_Paint_0+0x4  ;; OpenScreenSet
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   0170               STRB     R1,[R0, #+0]
   4228              if (ScreenLokal->PaternDesign>4)    if (CurModifSheet==0) RowsPoz=3; else RowsPoz=2;
   \   00000022   2078               LDRB     R0,[R4, #+0]
   \   00000024   0528               CMP      R0,#+5
   \   00000026   0AD3               BCC      ??ScreenSet_Paint_3
   \   00000028   AB48               LDR      R0,??ScreenSet_Paint_0  ;; CurModifSheet
   \   0000002A   0078               LDRB     R0,[R0, #+0]
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   03D1               BNE      ??ScreenSet_Paint_4
   \   00000030   AB48               LDR      R0,??ScreenSet_Paint_0+0x8  ;; RowsPoz
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0170               STRB     R1,[R0, #+0]
   \   00000036   02E0               B        ??ScreenSet_Paint_3
   \                     ??ScreenSet_Paint_4:
   \   00000038   A948               LDR      R0,??ScreenSet_Paint_0+0x8  ;; RowsPoz
   \   0000003A   0221               MOVS     R1,#+2
   \   0000003C   0170               STRB     R1,[R0, #+0]
   4229            }
   4230            
   4231            
   4232          
   4233          #ifdef __ALARM 
   4234            if (CurModifSheet==0)
   \                     ??ScreenSet_Paint_3:
   \   0000003E   A648               LDR      R0,??ScreenSet_Paint_0  ;; CurModifSheet
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   0028               CMP      R0,#+0
   \   00000044   6DD1               BNE      ??ScreenSet_Paint_5
   4235            {
   4236              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000046   A749               LDR      R1,??ScreenSet_Paint_0+0xC  ;; `?<Constant "Alarm">`
   \   00000048   A748               LDR      R0,??ScreenSet_Paint_0+0x10  ;; 0x762
   \   0000004A   A84A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000004C   1268               LDR      R2,[R2, #+0]
   \   0000004E   A84B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000050   5A43               MULS     R2,R3,R2
   \   00000052   A84B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000054   9A18               ADDS     R2,R3,R2
   \   00000056   1018               ADDS     R0,R2,R0
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   A748               LDR      R0,??ScreenSet_Paint_0+0x20  ;; 0x6db
   \   0000005C   A349               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000005E   0968               LDR      R1,[R1, #+0]
   \   00000060   A34A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000062   5143               MULS     R1,R2,R1
   \   00000064   A34A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000066   5118               ADDS     R1,R2,R1
   \   00000068   0918               ADDS     R1,R1,R0
   \   0000006A   A448               LDR      R0,??ScreenSet_Paint_0+0x24  ;; 0x4ce
   \   0000006C   9F4A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000006E   1268               LDR      R2,[R2, #+0]
   \   00000070   9F4B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000072   5A43               MULS     R2,R3,R2
   \   00000074   9F4B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000076   9A18               ADDS     R2,R3,R2
   \   00000078   1018               ADDS     R0,R2,R0
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   A048               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x4bf
   \   0000007E   9B49               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   00000080   0968               LDR      R1,[R1, #+0]
   \   00000082   9B4A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000084   5143               MULS     R1,R2,R1
   \   00000086   9B4A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000088   5118               ADDS     R1,R2,R1
   \   0000008A   0918               ADDS     R1,R1,R0
   \   0000008C   9620               MOVS     R0,#+150
   \   0000008E   C000               LSLS     R0,R0,#+3        ;; #+1200
   \   00000090   964A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   00000092   1268               LDR      R2,[R2, #+0]
   \   00000094   964B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000096   5A43               MULS     R2,R3,R2
   \   00000098   964B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   0000009A   9A18               ADDS     R2,R3,R2
   \   0000009C   1018               ADDS     R0,R2,R0
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   9848               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x4a1
   \   000000A2   9249               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   000000A4   0968               LDR      R1,[R1, #+0]
   \   000000A6   924A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   000000A8   5143               MULS     R1,R2,R1
   \   000000AA   924A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   000000AC   5118               ADDS     R1,R2,R1
   \   000000AE   0918               ADDS     R1,R1,R0
   \   000000B0   9548               LDR      R0,??ScreenSet_Paint_0+0x30  ;; 0x492
   \   000000B2   8E4A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   000000B4   1268               LDR      R2,[R2, #+0]
   \   000000B6   8E4B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   000000B8   5A43               MULS     R2,R3,R2
   \   000000BA   8E4B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   000000BC   9A18               ADDS     R2,R3,R2
   \   000000BE   1018               ADDS     R0,R2,R0
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   9248               LDR      R0,??ScreenSet_Paint_0+0x34  ;; 0x483
   \   000000C4   8949               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   000000C6   0968               LDR      R1,[R1, #+0]
   \   000000C8   894A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   000000CA   5143               MULS     R1,R2,R1
   \   000000CC   894A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   000000CE   5118               ADDS     R1,R2,R1
   \   000000D0   0918               ADDS     R1,R1,R0
   \   000000D2   8F48               LDR      R0,??ScreenSet_Paint_0+0x38  ;; 0x474
   \   000000D4   854A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   000000D6   1268               LDR      R2,[R2, #+0]
   \   000000D8   854B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   000000DA   5A43               MULS     R2,R3,R2
   \   000000DC   854B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   000000DE   9A18               ADDS     R2,R3,R2
   \   000000E0   1018               ADDS     R0,R2,R0
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   8B48               LDR      R0,??ScreenSet_Paint_0+0x3C  ;; 0x465
   \   000000E6   8149               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   000000E8   0968               LDR      R1,[R1, #+0]
   \   000000EA   814A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   000000EC   5143               MULS     R1,R2,R1
   \   000000EE   814A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   000000F0   5118               ADDS     R1,R2,R1
   \   000000F2   0918               ADDS     R1,R1,R0
   \   000000F4   88A0               ADR      R0,??ScreenSet_Paint_0+0x40  ;; 0x00, 0x00, 0x00, 0x00
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   0020               MOVS     R0,#+0
   \   000000FC   03B4               PUSH     {R0,R1}
   \   000000FE   0023               MOVS     R3,#+0
   \   00000100   0D22               MOVS     R2,#+13
   \   00000102   2D1D               ADDS     R5,R5,#+4
   \   00000104   2900               MOVS     R1,R5
   \   00000106   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000108   090E               LSRS     R1,R1,#+24
   \   0000010A   8448               LDR      R0,??ScreenSet_Paint_0+0x44  ;; 0x4dd
   \   0000010C   774D               LDR      R5,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000010E   2D68               LDR      R5,[R5, #+0]
   \   00000110   774E               LDR      R6,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000112   7543               MULS     R5,R6,R5
   \   00000114   774E               LDR      R6,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000116   7519               ADDS     R5,R6,R5
   \   00000118   2818               ADDS     R0,R5,R0
   \   0000011A   ........           BL       List_Paint
   \   0000011E   0EB0               ADD      SP,SP,#+56
   \   00000120   53E0               B        ??ScreenSet_Paint_6
   4237            }else{
   4238              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??ScreenSet_Paint_5:
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   6F48               LDR      R0,??ScreenSet_Paint_0+0xC  ;; `?<Constant "Alarm">`
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   6F48               LDR      R0,??ScreenSet_Paint_0+0x10  ;; 0x762
   \   0000012A   7049               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000012C   0968               LDR      R1,[R1, #+0]
   \   0000012E   704A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000130   5143               MULS     R1,R2,R1
   \   00000132   704A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000134   5118               ADDS     R1,R2,R1
   \   00000136   0918               ADDS     R1,R1,R0
   \   00000138   6F48               LDR      R0,??ScreenSet_Paint_0+0x20  ;; 0x6db
   \   0000013A   6C4A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000013C   1268               LDR      R2,[R2, #+0]
   \   0000013E   6C4B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000140   5A43               MULS     R2,R3,R2
   \   00000142   6C4B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000144   9A18               ADDS     R2,R3,R2
   \   00000146   1018               ADDS     R0,R2,R0
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   6E48               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x4a1
   \   0000014C   6749               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000014E   0968               LDR      R1,[R1, #+0]
   \   00000150   674A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000152   5143               MULS     R1,R2,R1
   \   00000154   674A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000156   5118               ADDS     R1,R2,R1
   \   00000158   0918               ADDS     R1,R1,R0
   \   0000015A   6B48               LDR      R0,??ScreenSet_Paint_0+0x30  ;; 0x492
   \   0000015C   634A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   0000015E   1268               LDR      R2,[R2, #+0]
   \   00000160   634B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000162   5A43               MULS     R2,R3,R2
   \   00000164   634B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000166   9A18               ADDS     R2,R3,R2
   \   00000168   1018               ADDS     R0,R2,R0
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   6748               LDR      R0,??ScreenSet_Paint_0+0x34  ;; 0x483
   \   0000016E   5F49               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   00000170   0968               LDR      R1,[R1, #+0]
   \   00000172   5F4A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000174   5143               MULS     R1,R2,R1
   \   00000176   5F4A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000178   5118               ADDS     R1,R2,R1
   \   0000017A   0918               ADDS     R1,R1,R0
   \   0000017C   6448               LDR      R0,??ScreenSet_Paint_0+0x38  ;; 0x474
   \   0000017E   5B4A               LDR      R2,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   00000180   1268               LDR      R2,[R2, #+0]
   \   00000182   5B4B               LDR      R3,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000184   5A43               MULS     R2,R3,R2
   \   00000186   5B4B               LDR      R3,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   00000188   9A18               ADDS     R2,R3,R2
   \   0000018A   1018               ADDS     R0,R2,R0
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   6148               LDR      R0,??ScreenSet_Paint_0+0x3C  ;; 0x465
   \   00000190   5649               LDR      R1,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   00000192   0968               LDR      R1,[R1, #+0]
   \   00000194   564A               LDR      R2,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   00000196   5143               MULS     R1,R2,R1
   \   00000198   564A               LDR      R2,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   0000019A   5118               ADDS     R1,R2,R1
   \   0000019C   0918               ADDS     R1,R1,R0
   \   0000019E   5EA0               ADR      R0,??ScreenSet_Paint_0+0x40  ;; 0x00, 0x00, 0x00, 0x00
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   0020               MOVS     R0,#+0
   \   000001A6   03B4               PUSH     {R0,R1}
   \   000001A8   0023               MOVS     R3,#+0
   \   000001AA   0D22               MOVS     R2,#+13
   \   000001AC   2D1D               ADDS     R5,R5,#+4
   \   000001AE   2900               MOVS     R1,R5
   \   000001B0   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001B2   090E               LSRS     R1,R1,#+24
   \   000001B4   5948               LDR      R0,??ScreenSet_Paint_0+0x44  ;; 0x4dd
   \   000001B6   4D4D               LDR      R5,??ScreenSet_Paint_0+0x14  ;; g_leng
   \   000001B8   2D68               LDR      R5,[R5, #+0]
   \   000001BA   4D4E               LDR      R6,??ScreenSet_Paint_0+0x18  ;; 0xa7d
   \   000001BC   7543               MULS     R5,R6,R5
   \   000001BE   4D4E               LDR      R6,??ScreenSet_Paint_0+0x1C  ;; Speech
   \   000001C0   7519               ADDS     R5,R6,R5
   \   000001C2   2818               ADDS     R0,R5,R0
   \   000001C4   ........           BL       List_Paint
   \   000001C8   0CB0               ADD      SP,SP,#+48
   4239            }
   4240          #else  
   4241            if (CurModifSheet==0)
   4242            {
   4243              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4244            }else{
   4245              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4246            }
   4247          #endif
   4248            
   4249             char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \                     ??ScreenSet_Paint_6:
   \   000001CA   02A8               ADD      R0,SP,#+8
   \   000001CC   5449               LDR      R1,??ScreenSet_Paint_0+0x48  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000001CE   2CC9               LDM      R1!,{R2,R3,R5}
   \   000001D0   2CC0               STM      R0!,{R2,R3,R5}
   \   000001D2   0C39               SUBS     R1,R1,#+12
   \   000001D4   0C38               SUBS     R0,R0,#+12
   4250             char MarkPoz= ScreenLokal->PaternDesign+1-RowsPoz; 
   \   000001D6   2078               LDRB     R0,[R4, #+0]
   \   000001D8   401C               ADDS     R0,R0,#+1
   \   000001DA   4149               LDR      R1,??ScreenSet_Paint_0+0x8  ;; RowsPoz
   \   000001DC   0978               LDRB     R1,[R1, #+0]
   \   000001DE   401A               SUBS     R0,R0,R1
   4251             if (CurModifSheet==0)
   \   000001E0   3D49               LDR      R1,??ScreenSet_Paint_0  ;; CurModifSheet
   \   000001E2   0978               LDRB     R1,[R1, #+0]
   \   000001E4   0029               CMP      R1,#+0
   \   000001E6   19D1               BNE      ??ScreenSet_Paint_7
   4252               {
   4253                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10);  
   \   000001E8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001EA   000E               LSRS     R0,R0,#+24
   \   000001EC   0028               CMP      R0,#+0
   \   000001EE   2ED0               BEQ      ??ScreenSet_Paint_8
   \   000001F0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \   000001F4   0728               CMP      R0,#+7
   \   000001F6   2AD2               BCS      ??ScreenSet_Paint_8
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   0A21               MOVS     R1,#+10
   \   000001FC   0091               STR      R1,[SP, #+0]
   \   000001FE   0823               MOVS     R3,#+8
   \   00000200   6221               MOVS     R1,#+98
   \   00000202   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000204   000E               LSRS     R0,R0,#+24
   \   00000206   0D22               MOVS     R2,#+13
   \   00000208   5043               MULS     R0,R2,R0
   \   0000020A   0A1A               SUBS     R2,R1,R0
   \   0000020C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000020E   120E               LSRS     R2,R2,#+24
   \   00000210   3421               MOVS     R1,#+52
   \   00000212   04A8               ADD      R0,SP,#+16
   \   00000214   ........           BL       CopyToCanvasPoint
   \   00000218   02B0               ADD      SP,SP,#+8
   \   0000021A   18E0               B        ??ScreenSet_Paint_8
   4254               }else{
   4255                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10); 
   \                     ??ScreenSet_Paint_7:
   \   0000021C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000021E   000E               LSRS     R0,R0,#+24
   \   00000220   0028               CMP      R0,#+0
   \   00000222   14D0               BEQ      ??ScreenSet_Paint_8
   \   00000224   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000226   000E               LSRS     R0,R0,#+24
   \   00000228   0728               CMP      R0,#+7
   \   0000022A   10D2               BCS      ??ScreenSet_Paint_8
   \   0000022C   82B0               SUB      SP,SP,#+8
   \   0000022E   0A21               MOVS     R1,#+10
   \   00000230   0091               STR      R1,[SP, #+0]
   \   00000232   0823               MOVS     R3,#+8
   \   00000234   6221               MOVS     R1,#+98
   \   00000236   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000238   000E               LSRS     R0,R0,#+24
   \   0000023A   0D22               MOVS     R2,#+13
   \   0000023C   5043               MULS     R0,R2,R0
   \   0000023E   0A1A               SUBS     R2,R1,R0
   \   00000240   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000242   120E               LSRS     R2,R2,#+24
   \   00000244   3421               MOVS     R1,#+52
   \   00000246   04A8               ADD      R0,SP,#+16
   \   00000248   ........           BL       CopyToCanvasPoint
   \   0000024C   02B0               ADD      SP,SP,#+8
   4256               }
   4257          
   4258            
   4259            CleanCanvasArea(1,97,60,11,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??ScreenSet_Paint_8:
   \   0000024E   82B0               SUB      SP,SP,#+8
   \   00000250   0020               MOVS     R0,#+0
   \   00000252   0090               STR      R0,[SP, #+0]
   \   00000254   0B23               MOVS     R3,#+11
   \   00000256   3C22               MOVS     R2,#+60
   \   00000258   6121               MOVS     R1,#+97
   \   0000025A   0120               MOVS     R0,#+1
   \   0000025C   ........           BL       CleanCanvasArea
   \   00000260   02B0               ADD      SP,SP,#+8
   4260              
   4261            Button("< ",1,96,15,13);
   \   00000262   82B0               SUB      SP,SP,#+8
   \   00000264   0D20               MOVS     R0,#+13
   \   00000266   0090               STR      R0,[SP, #+0]
   \   00000268   0F23               MOVS     R3,#+15
   \   0000026A   6022               MOVS     R2,#+96
   \   0000026C   0121               MOVS     R1,#+1
   \   0000026E   2DA0               ADR      R0,??ScreenSet_Paint_0+0x4C  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000270   ........           BL       Button
   \   00000274   02B0               ADD      SP,SP,#+8
   4262            Button("> ",47,96,15,13);
   \   00000276   82B0               SUB      SP,SP,#+8
   \   00000278   0D20               MOVS     R0,#+13
   \   0000027A   0090               STR      R0,[SP, #+0]
   \   0000027C   0F23               MOVS     R3,#+15
   \   0000027E   6022               MOVS     R2,#+96
   \   00000280   2F21               MOVS     R1,#+47
   \   00000282   29A0               ADR      R0,??ScreenSet_Paint_0+0x50  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000284   ........           BL       Button
   \   00000288   02B0               ADD      SP,SP,#+8
   4263            
   4264            char txt[5]={'N', 'r', '.',':', 0,};
   \   0000028A   6846               MOV      R0,SP
   \   0000028C   2749               LDR      R1,??ScreenSet_Paint_0+0x54  ;; `?<Constant {78, 114, 46, 58, 0}>`
   \   0000028E   0CC9               LDM      R1!,{R2,R3}
   \   00000290   0CC0               STM      R0!,{R2,R3}
   \   00000292   0839               SUBS     R1,R1,#+8
   \   00000294   0838               SUBS     R0,R0,#+8
   4265            
   4266            CharToStr(CurModifSheet, &txt[4], 1); //(char Value, char *Vstring, char ill);
   \   00000296   0122               MOVS     R2,#+1
   \   00000298   6946               MOV      R1,SP
   \   0000029A   091D               ADDS     R1,R1,#+4
   \   0000029C   0E48               LDR      R0,??ScreenSet_Paint_0  ;; CurModifSheet
   \   0000029E   0078               LDRB     R0,[R0, #+0]
   \   000002A0   ........           BL       CharToStr
   4267            Label(txt,0,22,98,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002A4   82B0               SUB      SP,SP,#+8
   \   000002A6   0020               MOVS     R0,#+0
   \   000002A8   0090               STR      R0,[SP, #+0]
   \   000002AA   7F21               MOVS     R1,#+127
   \   000002AC   0120               MOVS     R0,#+1
   \   000002AE   03B4               PUSH     {R0,R1}
   \   000002B0   1421               MOVS     R1,#+20
   \   000002B2   0520               MOVS     R0,#+5
   \   000002B4   03B4               PUSH     {R0,R1}
   \   000002B6   6223               MOVS     R3,#+98
   \   000002B8   1622               MOVS     R2,#+22
   \   000002BA   0021               MOVS     R1,#+0
   \   000002BC   06A8               ADD      R0,SP,#+24
   \   000002BE   ........           BL       Label
   \   000002C2   06B0               ADD      SP,SP,#+24
   4268          
   4269            H_line(0,95,61,1); 
   \   000002C4   0123               MOVS     R3,#+1
   \   000002C6   3D22               MOVS     R2,#+61
   \   000002C8   5F21               MOVS     R1,#+95
   \   000002CA   0020               MOVS     R0,#+0
   \   000002CC   ........           BL       H_line
   4270          
   4271          }
   \   000002D0   06B0               ADD      SP,SP,#+24
   \   000002D2   70BC               POP      {R4-R6}
   \   000002D4   01BC               POP      {R0}
   \   000002D6   0047               BX       R0               ;; return
   \                     ??ScreenSet_Paint_0:
   \   000002D8   ........           DC32     CurModifSheet
   \   000002DC   ........           DC32     OpenScreenSet
   \   000002E0   ........           DC32     RowsPoz
   \   000002E4   ........           DC32     `?<Constant "Alarm">`
   \   000002E8   62070000           DC32     0x762
   \   000002EC   ........           DC32     g_leng
   \   000002F0   7D0A0000           DC32     0xa7d
   \   000002F4   ........           DC32     Speech
   \   000002F8   DB060000           DC32     0x6db
   \   000002FC   CE040000           DC32     0x4ce
   \   00000300   BF040000           DC32     0x4bf
   \   00000304   A1040000           DC32     0x4a1
   \   00000308   92040000           DC32     0x492
   \   0000030C   83040000           DC32     0x483
   \   00000310   74040000           DC32     0x474
   \   00000314   65040000           DC32     0x465
   \   00000318   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000031C   DD040000           DC32     0x4dd
   \   00000320   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000324   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000328   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   0000032C   ........           DC32     `?<Constant {78, 114, 46, 58, 0}>`
   4272          

   \                                 In section .bss, align 1
   4273              char MenuPaintExecute=0;
   \                     MenuPaintExecute:
   \   00000000                      DS8 1
   4274          

   \                                 In section Debug.txt, align 4, keep-with-next
   4275          void ScreenSet_Event(_Screen* ScreenLokal)
   4276          {
   \                     ScreenSet_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   4277              char PaternDesignNr;
   4278          
   4279              MenuPaintExecute=0;
   \   00000004   6C48               LDR      R0,??ScreenSet_Event_0  ;; MenuPaintExecute
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   4280            if (CurModifSheet==0) 
   \   0000000A   6C48               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   01D1               BNE      ??ScreenSet_Event_1
   4281            {
   4282              PaternDesignNr=ScreenSetTab_0_Nr;
   \   00000012   0822               MOVS     R2,#+8
   \   00000014   00E0               B        ??ScreenSet_Event_2
   4283            }else{
   4284              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Event_1:
   \   00000016   0522               MOVS     R2,#+5
   4285            }      
   4286          
   4287                  int ans;
   4288          #ifdef __ALARM
   4289                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+4 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??ScreenSet_Event_2:
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0D21               MOVS     R1,#+13
   \   00000020   121D               ADDS     R2,R2,#+4
   \   00000022   1000               MOVS     R0,R2
   \   00000024   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000026   000E               LSRS     R0,R0,#+24
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   6548               LDR      R0,??ScreenSet_Event_0+0x8  ;; Y_down
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   435E               LDRSH    R3,[R0, R1]
   \   00000030   6448               LDR      R0,??ScreenSet_Event_0+0xC  ;; X_down
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   425E               LDRSH    R2,[R0, R1]
   \   00000036   6448               LDR      R0,??ScreenSet_Event_0+0x10  ;; Y_up
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   415E               LDRSH    R1,[R0, R1]
   \   0000003C   6348               LDR      R0,??ScreenSet_Event_0+0x14  ;; X_up
   \   0000003E   0025               MOVS     R5,#+0
   \   00000040   405F               LDRSH    R0,[R0, R5]
   \   00000042   ........           BL       List_Event
   \   00000046   04B0               ADD      SP,SP,#+16
   \   00000048   0500               MOVS     R5,R0
   4290          #else
   4291                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+3 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   4292          #endif        
   4293                  if ((ans>0) && (RowsPoz+1>=ans)) ans=0;
   \   0000004A   012D               CMP      R5,#+1
   \   0000004C   05DB               BLT      ??ScreenSet_Event_3
   \   0000004E   6048               LDR      R0,??ScreenSet_Event_0+0x18  ;; RowsPoz
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   401C               ADDS     R0,R0,#+1
   \   00000054   A842               CMP      R0,R5
   \   00000056   00DB               BLT      ??ScreenSet_Event_3
   \   00000058   0025               MOVS     R5,#+0
   4294                      
   4295                        if (ans>1) 
   \                     ??ScreenSet_Event_3:
   \   0000005A   022D               CMP      R5,#+2
   \   0000005C   4EDB               BLT      ??ScreenSet_Event_4
   4296                        { 
   4297                          OpenScreenSet=0;
   \   0000005E   5D48               LDR      R0,??ScreenSet_Event_0+0x1C  ;; OpenScreenSet
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   0170               STRB     R1,[R0, #+0]
   4298                          ScreenLokal->PaternDesign=ans-2;
   \   00000064   2800               MOVS     R0,R5
   \   00000066   801E               SUBS     R0,R0,#+2
   \   00000068   2070               STRB     R0,[R4, #+0]
   4299                          if (((CurModifSheet==0) && (ans==PaternDesignThermoMS) ) || ((CurModifSheet>0) && (ans==PaternDesignThermoSS)))
   \   0000006A   5448               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   01D1               BNE      ??ScreenSet_Event_5
   \   00000072   0A2D               CMP      R5,#+10
   \   00000074   05D0               BEQ      ??ScreenSet_Event_6
   \                     ??ScreenSet_Event_5:
   \   00000076   5148               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   00000078   0078               LDRB     R0,[R0, #+0]
   \   0000007A   0128               CMP      R0,#+1
   \   0000007C   09D3               BCC      ??ScreenSet_Event_7
   \   0000007E   072D               CMP      R5,#+7
   \   00000080   07D1               BNE      ??ScreenSet_Event_7
   4300                          {
   4301                            MenuLevel=(MenuLevel*10+2);         //uruchomienie ustawiania termostatu
   \                     ??ScreenSet_Event_6:
   \   00000082   5548               LDR      R0,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   00000084   5449               LDR      R1,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   00000086   0968               LDR      R1,[R1, #+0]
   \   00000088   0A22               MOVS     R2,#+10
   \   0000008A   5143               MULS     R1,R2,R1
   \   0000008C   891C               ADDS     R1,R1,#+2
   \   0000008E   0160               STR      R1,[R0, #+0]
   \   00000090   2EE0               B        ??ScreenSet_Event_8
   4302                          }
   4303                          else if (((CurModifSheet==0) && (ans==PaternDesignTimetableMS) ) || ((CurModifSheet>0) && (ans==PaternDesignTimetableSS)))
   \                     ??ScreenSet_Event_7:
   \   00000092   4A48               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   01D1               BNE      ??ScreenSet_Event_9
   \   0000009A   0B2D               CMP      R5,#+11
   \   0000009C   05D0               BEQ      ??ScreenSet_Event_10
   \                     ??ScreenSet_Event_9:
   \   0000009E   4748               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   000000A0   0078               LDRB     R0,[R0, #+0]
   \   000000A2   0128               CMP      R0,#+1
   \   000000A4   09D3               BCC      ??ScreenSet_Event_11
   \   000000A6   082D               CMP      R5,#+8
   \   000000A8   07D1               BNE      ??ScreenSet_Event_11
   4304                          {
   4305                            MenuLevel=(MenuLevel*10+3);         //ustawianie ekranów
   \                     ??ScreenSet_Event_10:
   \   000000AA   4B48               LDR      R0,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   000000AC   4A49               LDR      R1,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   000000AE   0968               LDR      R1,[R1, #+0]
   \   000000B0   0A22               MOVS     R2,#+10
   \   000000B2   5143               MULS     R1,R2,R1
   \   000000B4   C91C               ADDS     R1,R1,#+3
   \   000000B6   0160               STR      R1,[R0, #+0]
   \   000000B8   1AE0               B        ??ScreenSet_Event_8
   4306                      
   4307                          #ifdef __ALARM
   4308                          }
   4309                          else if (((CurModifSheet==0) && (ans==PaternDesignAlarmMS) ) || ((CurModifSheet>0) && (ans==PaternDesignAlarmSS)))
   \                     ??ScreenSet_Event_11:
   \   000000BA   4048               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   0028               CMP      R0,#+0
   \   000000C0   01D1               BNE      ??ScreenSet_Event_12
   \   000000C2   0C2D               CMP      R5,#+12
   \   000000C4   05D0               BEQ      ??ScreenSet_Event_13
   \                     ??ScreenSet_Event_12:
   \   000000C6   3D48               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   000000C8   0078               LDRB     R0,[R0, #+0]
   \   000000CA   0128               CMP      R0,#+1
   \   000000CC   09D3               BCC      ??ScreenSet_Event_14
   \   000000CE   092D               CMP      R5,#+9
   \   000000D0   07D1               BNE      ??ScreenSet_Event_14
   4310                          {
   4311                          MenuLevel=(MenuLevel*10+4);         //ustawianie ekranów
   \                     ??ScreenSet_Event_13:
   \   000000D2   4148               LDR      R0,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   000000D4   4049               LDR      R1,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   000000D6   0968               LDR      R1,[R1, #+0]
   \   000000D8   0A22               MOVS     R2,#+10
   \   000000DA   5143               MULS     R1,R2,R1
   \   000000DC   091D               ADDS     R1,R1,#+4
   \   000000DE   0160               STR      R1,[R0, #+0]
   \   000000E0   06E0               B        ??ScreenSet_Event_8
   4312                          #endif
   4313                          }else{
   4314                            MenuLevel=(MenuLevel*10+1);         //ustawianie ekranów
   \                     ??ScreenSet_Event_14:
   \   000000E2   3D48               LDR      R0,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   000000E4   3C49               LDR      R1,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   000000E6   0968               LDR      R1,[R1, #+0]
   \   000000E8   0A22               MOVS     R2,#+10
   \   000000EA   5143               MULS     R1,R2,R1
   \   000000EC   491C               ADDS     R1,R1,#+1
   \   000000EE   0160               STR      R1,[R0, #+0]
   4315                          }
   4316                          MenuPaintExecute=1;
   \                     ??ScreenSet_Event_8:
   \   000000F0   3148               LDR      R0,??ScreenSet_Event_0  ;; MenuPaintExecute
   \   000000F2   0121               MOVS     R1,#+1
   \   000000F4   0170               STRB     R1,[R0, #+0]
   4317                          ProgramChange=1;
   \   000000F6   3948               LDR      R0,??ScreenSet_Event_0+0x24  ;; ProgramChange
   \   000000F8   0121               MOVS     R1,#+1
   \   000000FA   0170               STRB     R1,[R0, #+0]
   4318                        }else if (ans==1)
   4319                        {
   4320          
   4321                        }  
   4322                        
   4323                                        
   4324                          if ((Button("< ",1,96,15,13)==1) && (CurModifSheet>0)) {MenuPaintExecute=1; CurModifSheet--; RowsPoz=0; OpenScreenSet=0;}
   \                     ??ScreenSet_Event_4:
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   0D20               MOVS     R0,#+13
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0F23               MOVS     R3,#+15
   \   00000104   6022               MOVS     R2,#+96
   \   00000106   0121               MOVS     R1,#+1
   \   00000108   35A0               ADR      R0,??ScreenSet_Event_0+0x28  ;; 0x3C, 0x20, 0x00, 0x00
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   \   00000110   0128               CMP      R0,#+1
   \   00000112   11D1               BNE      ??ScreenSet_Event_15
   \   00000114   2948               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   00000116   0078               LDRB     R0,[R0, #+0]
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0DD3               BCC      ??ScreenSet_Event_15
   \   0000011C   2648               LDR      R0,??ScreenSet_Event_0  ;; MenuPaintExecute
   \   0000011E   0121               MOVS     R1,#+1
   \   00000120   0170               STRB     R1,[R0, #+0]
   \   00000122   2648               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   00000124   2549               LDR      R1,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   00000126   0978               LDRB     R1,[R1, #+0]
   \   00000128   491E               SUBS     R1,R1,#+1
   \   0000012A   0170               STRB     R1,[R0, #+0]
   \   0000012C   2848               LDR      R0,??ScreenSet_Event_0+0x18  ;; RowsPoz
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   0170               STRB     R1,[R0, #+0]
   \   00000132   2848               LDR      R0,??ScreenSet_Event_0+0x1C  ;; OpenScreenSet
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   0170               STRB     R1,[R0, #+0]
   4325                          if ((Button("> ",47,96,15,13)==1)&& (CurModifSheet<ScreenNr-1)) {
   \                     ??ScreenSet_Event_15:
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0D20               MOVS     R0,#+13
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   0F23               MOVS     R3,#+15
   \   00000140   6022               MOVS     R2,#+96
   \   00000142   2F21               MOVS     R1,#+47
   \   00000144   27A0               ADR      R0,??ScreenSet_Event_0+0x2C  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000146   ........           BL       Button
   \   0000014A   02B0               ADD      SP,SP,#+8
   \   0000014C   0128               CMP      R0,#+1
   \   0000014E   12D1               BNE      ??ScreenSet_Event_16
   \   00000150   1A48               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   00000152   0078               LDRB     R0,[R0, #+0]
   \   00000154   0728               CMP      R0,#+7
   \   00000156   0ED2               BCS      ??ScreenSet_Event_16
   4326                            OpenScreenSet=0;
   \   00000158   1E48               LDR      R0,??ScreenSet_Event_0+0x1C  ;; OpenScreenSet
   \   0000015A   0021               MOVS     R1,#+0
   \   0000015C   0170               STRB     R1,[R0, #+0]
   4327                            RowsPoz=0;
   \   0000015E   1C48               LDR      R0,??ScreenSet_Event_0+0x18  ;; RowsPoz
   \   00000160   0021               MOVS     R1,#+0
   \   00000162   0170               STRB     R1,[R0, #+0]
   4328                            MenuPaintExecute=1; 
   \   00000164   1448               LDR      R0,??ScreenSet_Event_0  ;; MenuPaintExecute
   \   00000166   0121               MOVS     R1,#+1
   \   00000168   0170               STRB     R1,[R0, #+0]
   4329                            CurModifSheet++; 
   \   0000016A   1448               LDR      R0,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   0000016C   1349               LDR      R1,??ScreenSet_Event_0+0x4  ;; CurModifSheet
   \   0000016E   0978               LDRB     R1,[R1, #+0]
   \   00000170   491C               ADDS     R1,R1,#+1
   \   00000172   0170               STRB     R1,[R0, #+0]
   \   00000174   16E0               B        ??ScreenSet_Event_17
   4330                             }
   4331                          
   4332                        
   4333                        else if (ans<0)
   \                     ??ScreenSet_Event_16:
   \   00000176   002D               CMP      R5,#+0
   \   00000178   14D5               BPL      ??ScreenSet_Event_17
   4334                        {
   4335                             if (ProgramChange) 
   \   0000017A   1848               LDR      R0,??ScreenSet_Event_0+0x24  ;; ProgramChange
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   0028               CMP      R0,#+0
   \   00000180   06D0               BEQ      ??ScreenSet_Event_18
   4336                              {
   4337                                  MenuLevel=(MenuLevel*10+0);
   \   00000182   1548               LDR      R0,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   00000184   1449               LDR      R1,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   00000186   0968               LDR      R1,[R1, #+0]
   \   00000188   0A22               MOVS     R2,#+10
   \   0000018A   5143               MULS     R1,R2,R1
   \   0000018C   0160               STR      R1,[R0, #+0]
   \   0000018E   06E0               B        ??ScreenSet_Event_19
   4338                              }else{
   4339                                  MenuLevel=(MenuLevel/10);
   \                     ??ScreenSet_Event_18:
   \   00000190   1148               LDR      R0,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   00000192   0068               LDR      R0,[R0, #+0]
   \   00000194   0A21               MOVS     R1,#+10
   \   00000196   ........           BL       __aeabi_idivmod
   \   0000019A   0F49               LDR      R1,??ScreenSet_Event_0+0x20  ;; MenuLevel
   \   0000019C   0860               STR      R0,[R1, #+0]
   4340                              }
   4341                                MenuPaintExecute=1;
   \                     ??ScreenSet_Event_19:
   \   0000019E   0648               LDR      R0,??ScreenSet_Event_0  ;; MenuPaintExecute
   \   000001A0   0121               MOVS     R1,#+1
   \   000001A2   0170               STRB     R1,[R0, #+0]
   4342                          
   4343                        }else{
   4344          
   4345                        }
   4346                        
   4347                        
   4348                        
   4349                        if (MenuPaintExecute) MenuPaint(); 
   \                     ??ScreenSet_Event_17:
   \   000001A4   0448               LDR      R0,??ScreenSet_Event_0  ;; MenuPaintExecute
   \   000001A6   0078               LDRB     R0,[R0, #+0]
   \   000001A8   0028               CMP      R0,#+0
   \   000001AA   01D0               BEQ      ??ScreenSet_Event_20
   \   000001AC   ........           BL       MenuPaint
   4350                     
   4351             
   4352          }
   \                     ??ScreenSet_Event_20:
   \   000001B0   01B0               ADD      SP,SP,#+4
   \   000001B2   30BC               POP      {R4,R5}
   \   000001B4   01BC               POP      {R0}
   \   000001B6   0047               BX       R0               ;; return
   \                     ??ScreenSet_Event_0:
   \   000001B8   ........           DC32     MenuPaintExecute
   \   000001BC   ........           DC32     CurModifSheet
   \   000001C0   ........           DC32     Y_down
   \   000001C4   ........           DC32     X_down
   \   000001C8   ........           DC32     Y_up
   \   000001CC   ........           DC32     X_up
   \   000001D0   ........           DC32     RowsPoz
   \   000001D4   ........           DC32     OpenScreenSet
   \   000001D8   ........           DC32     MenuLevel
   \   000001DC   ........           DC32     ProgramChange
   \   000001E0   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   000001E4   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4353          
   4354          
   4355          
   4356          

   \                                 In section Debug.txt, align 4, keep-with-next
   4357          void ThermostatSet_Paint(_Screen* Screen)
   4358          {          
   \                     ThermostatSet_Paint:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   4359                 List_Paint("Therm set ",0,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   D3A0               ADR      R0,??ThermostatSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   D048               LDR      R0,??ThermostatSet_Paint_0+0x4  ;; `?<Constant "Therm set ">`
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   4360          
   4361                 char txt[8];
   4362                 
   4363                 
   4364                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   7F21               MOVS     R1,#+127
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   3421               MOVS     R1,#+52
   \   0000003E   0A20               MOVS     R0,#+10
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   6423               MOVS     R3,#+100
   \   00000044   0522               MOVS     R2,#+5
   \   00000046   0221               MOVS     R1,#+2
   \   00000048   C948               LDR      R0,??ThermostatSet_Paint_0+0x8  ;; 0x6f9
   \   0000004A   CA4D               LDR      R5,??ThermostatSet_Paint_0+0xC  ;; g_leng
   \   0000004C   2D68               LDR      R5,[R5, #+0]
   \   0000004E   CA4E               LDR      R6,??ThermostatSet_Paint_0+0x10  ;; 0xa7d
   \   00000050   7543               MULS     R5,R6,R5
   \   00000052   CA4E               LDR      R6,??ThermostatSet_Paint_0+0x14  ;; Speech
   \   00000054   7519               ADDS     R5,R6,R5
   \   00000056   2818               ADDS     R0,R5,R0
   \   00000058   ........           BL       Label
   \   0000005C   06B0               ADD      SP,SP,#+24
   4365                    char ind;
   4366                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   0000005E   8F20               MOVS     R0,#+143
   \   00000060   2056               LDRSB    R0,[R4, R0]
   \   00000062   0028               CMP      R0,#+0
   \   00000064   38D4               BMI      ??ThermostatSet_Paint_1
   \   00000066   8F20               MOVS     R0,#+143
   \   00000068   2056               LDRSB    R0,[R4, R0]
   \   0000006A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000006C   0014               ASRS     R0,R0,#+16
   \   0000006E   FF28               CMP      R0,#+255
   \   00000070   32D0               BEQ      ??ThermostatSet_Paint_1
   4367                    {
   4368                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000072   6846               MOV      R0,SP
   \   00000074   4921               MOVS     R1,#+73
   \   00000076   0170               STRB     R1,[R0, #+0]
   \   00000078   6846               MOV      R0,SP
   \   0000007A   6421               MOVS     R1,#+100
   \   0000007C   4170               STRB     R1,[R0, #+1]
   \   0000007E   6846               MOV      R0,SP
   \   00000080   3A21               MOVS     R1,#+58
   \   00000082   8170               STRB     R1,[R0, #+2]
   \   00000084   6846               MOV      R0,SP
   \   00000086   2021               MOVS     R1,#+32
   \   00000088   C170               STRB     R1,[R0, #+3]
   \   0000008A   6846               MOV      R0,SP
   \   0000008C   0021               MOVS     R1,#+0
   \   0000008E   0171               STRB     R1,[R0, #+4]
   4369                      ind=CharToStr(Screen->Thermo.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000090   0222               MOVS     R2,#+2
   \   00000092   6946               MOV      R1,SP
   \   00000094   C91C               ADDS     R1,R1,#+3
   \   00000096   8F20               MOVS     R0,#+143
   \   00000098   2056               LDRSB    R0,[R4, R0]
   \   0000009A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009C   000E               LSRS     R0,R0,#+24
   \   0000009E   ........           BL       CharToStr
   \   000000A2   0500               MOVS     R5,R0
   4370                      txt[ind+3]=0;
   \   000000A4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000A6   2D0E               LSRS     R5,R5,#+24
   \   000000A8   6846               MOV      R0,SP
   \   000000AA   4019               ADDS     R0,R0,R5
   \   000000AC   0021               MOVS     R1,#+0
   \   000000AE   C170               STRB     R1,[R0, #+3]
   4371                      Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   7F21               MOVS     R1,#+127
   \   000000B8   0120               MOVS     R0,#+1
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   1621               MOVS     R1,#+22
   \   000000BE   ED1C               ADDS     R5,R5,#+3
   \   000000C0   2800               MOVS     R0,R5
   \   000000C2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C4   000E               LSRS     R0,R0,#+24
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   5823               MOVS     R3,#+88
   \   000000CA   1422               MOVS     R2,#+20
   \   000000CC   0221               MOVS     R1,#+2
   \   000000CE   06A8               ADD      R0,SP,#+24
   \   000000D0   ........           BL       Label
   \   000000D4   06B0               ADD      SP,SP,#+24
   \   000000D6   0FE0               B        ??ThermostatSet_Paint_2
   4372                    }else{
   4373                      Label("Var",2,20, 88 ,3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ThermostatSet_Paint_1:
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   0020               MOVS     R0,#+0
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   7F21               MOVS     R1,#+127
   \   000000E0   0120               MOVS     R0,#+1
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   1621               MOVS     R1,#+22
   \   000000E6   0320               MOVS     R0,#+3
   \   000000E8   03B4               PUSH     {R0,R1}
   \   000000EA   5823               MOVS     R3,#+88
   \   000000EC   1422               MOVS     R2,#+20
   \   000000EE   0221               MOVS     R1,#+2
   \   000000F0   D6A0               ADR      R0,??ThermostatSet_Paint_3  ;; "Var"
   \   000000F2   ........           BL       Label
   \   000000F6   06B0               ADD      SP,SP,#+24
   4374                    }
   4375                            
   4376                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Paint_2:
   \   000000F8   6846               MOV      R0,SP
   \   000000FA   3C21               MOVS     R1,#+60
   \   000000FC   0170               STRB     R1,[R0, #+0]
   \   000000FE   6846               MOV      R0,SP
   \   00000100   0021               MOVS     R1,#+0
   \   00000102   4170               STRB     R1,[R0, #+1]
   4377                    Button(txt,3,85,15,15); 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0F20               MOVS     R0,#+15
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   0F23               MOVS     R3,#+15
   \   0000010C   5522               MOVS     R2,#+85
   \   0000010E   0321               MOVS     R1,#+3
   \   00000110   02A8               ADD      R0,SP,#+8
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   4378                    txt[0]='>';
   \   00000118   6846               MOV      R0,SP
   \   0000011A   3E21               MOVS     R1,#+62
   \   0000011C   0170               STRB     R1,[R0, #+0]
   4379                    Button(txt,45,85,15,15); 
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0F20               MOVS     R0,#+15
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   0F23               MOVS     R3,#+15
   \   00000126   5522               MOVS     R2,#+85
   \   00000128   2D21               MOVS     R1,#+45
   \   0000012A   02A8               ADD      R0,SP,#+8
   \   0000012C   ........           BL       Button
   \   00000130   02B0               ADD      SP,SP,#+8
   4380                    
   4381                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000132   8F20               MOVS     R0,#+143
   \   00000134   2056               LDRSB    R0,[R4, R0]
   \   00000136   0028               CMP      R0,#+0
   \   00000138   36D4               BMI      ??ThermostatSet_Paint_4
   \   0000013A   8F20               MOVS     R0,#+143
   \   0000013C   2056               LDRSB    R0,[R4, R0]
   \   0000013E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000140   0014               ASRS     R0,R0,#+16
   \   00000142   FF28               CMP      R0,#+255
   \   00000144   30D0               BEQ      ??ThermostatSet_Paint_4
   4382                    {
   4383                      txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=' ';
   \   00000146   6846               MOV      R0,SP
   \   00000148   5221               MOVS     R1,#+82
   \   0000014A   0170               STRB     R1,[R0, #+0]
   \   0000014C   6846               MOV      R0,SP
   \   0000014E   6521               MOVS     R1,#+101
   \   00000150   4170               STRB     R1,[R0, #+1]
   \   00000152   6846               MOV      R0,SP
   \   00000154   6721               MOVS     R1,#+103
   \   00000156   8170               STRB     R1,[R0, #+2]
   \   00000158   6846               MOV      R0,SP
   \   0000015A   3A21               MOVS     R1,#+58
   \   0000015C   C170               STRB     R1,[R0, #+3]
   \   0000015E   6846               MOV      R0,SP
   \   00000160   2021               MOVS     R1,#+32
   \   00000162   0171               STRB     R1,[R0, #+4]
   4384                    
   4385                      ind=CharToStr(Screen->Thermo.SensorReg, &(txt[4]), 2); //(char Value, char *Vstring, char ill);
   \   00000164   0222               MOVS     R2,#+2
   \   00000166   6946               MOV      R1,SP
   \   00000168   091D               ADDS     R1,R1,#+4
   \   0000016A   9020               MOVS     R0,#+144
   \   0000016C   205C               LDRB     R0,[R4, R0]
   \   0000016E   ........           BL       CharToStr
   \   00000172   0500               MOVS     R5,R0
   4386                       Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000174   82B0               SUB      SP,SP,#+8
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   0090               STR      R0,[SP, #+0]
   \   0000017A   7F21               MOVS     R1,#+127
   \   0000017C   0120               MOVS     R0,#+1
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   1621               MOVS     R1,#+22
   \   00000182   2800               MOVS     R0,R5
   \   00000184   001D               ADDS     R0,R0,#+4
   \   00000186   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000188   000E               LSRS     R0,R0,#+24
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   4823               MOVS     R3,#+72
   \   0000018E   1422               MOVS     R2,#+20
   \   00000190   0221               MOVS     R1,#+2
   \   00000192   06A8               ADD      R0,SP,#+24
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
   4387          
   4388                      txt[ind+4]=0;
   \   0000019A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000019C   2D0E               LSRS     R5,R5,#+24
   \   0000019E   6846               MOV      R0,SP
   \   000001A0   4019               ADDS     R0,R0,R5
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   0171               STRB     R1,[R0, #+4]
   \   000001A6   1DE0               B        ??ThermostatSet_Paint_5
   4389                    }else{
   4390                      txt[0]='a'; 
   \                     ??ThermostatSet_Paint_4:
   \   000001A8   6846               MOV      R0,SP
   \   000001AA   6121               MOVS     R1,#+97
   \   000001AC   0170               STRB     R1,[R0, #+0]
   4391                      ind=CharToStr(Screen->Thermo.SensorReg, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   000001AE   0222               MOVS     R2,#+2
   \   000001B0   6946               MOV      R1,SP
   \   000001B2   491C               ADDS     R1,R1,#+1
   \   000001B4   9020               MOVS     R0,#+144
   \   000001B6   205C               LDRB     R0,[R4, R0]
   \   000001B8   ........           BL       CharToStr
   \   000001BC   0500               MOVS     R5,R0
   4392                       Label(txt,2,20, 72 ,ind+1,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   0020               MOVS     R0,#+0
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   7F21               MOVS     R1,#+127
   \   000001C6   0120               MOVS     R0,#+1
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   1621               MOVS     R1,#+22
   \   000001CC   6D1C               ADDS     R5,R5,#+1
   \   000001CE   2800               MOVS     R0,R5
   \   000001D0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001D2   000E               LSRS     R0,R0,#+24
   \   000001D4   03B4               PUSH     {R0,R1}
   \   000001D6   4823               MOVS     R3,#+72
   \   000001D8   1422               MOVS     R2,#+20
   \   000001DA   0221               MOVS     R1,#+2
   \   000001DC   06A8               ADD      R0,SP,#+24
   \   000001DE   ........           BL       Label
   \   000001E2   06B0               ADD      SP,SP,#+24
   4393                    }
   4394                   
   4395                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Paint_5:
   \   000001E4   6846               MOV      R0,SP
   \   000001E6   3C21               MOVS     R1,#+60
   \   000001E8   0170               STRB     R1,[R0, #+0]
   \   000001EA   6846               MOV      R0,SP
   \   000001EC   0021               MOVS     R1,#+0
   \   000001EE   4170               STRB     R1,[R0, #+1]
   4396                    Button(txt,3,69,15,15); 
   \   000001F0   82B0               SUB      SP,SP,#+8
   \   000001F2   0F20               MOVS     R0,#+15
   \   000001F4   0090               STR      R0,[SP, #+0]
   \   000001F6   0F23               MOVS     R3,#+15
   \   000001F8   4522               MOVS     R2,#+69
   \   000001FA   0321               MOVS     R1,#+3
   \   000001FC   02A8               ADD      R0,SP,#+8
   \   000001FE   ........           BL       Button
   \   00000202   02B0               ADD      SP,SP,#+8
   4397                    txt[0]='>';
   \   00000204   6846               MOV      R0,SP
   \   00000206   3E21               MOVS     R1,#+62
   \   00000208   0170               STRB     R1,[R0, #+0]
   4398                    Button(txt,45,69,15,15); 
   \   0000020A   82B0               SUB      SP,SP,#+8
   \   0000020C   0F20               MOVS     R0,#+15
   \   0000020E   0090               STR      R0,[SP, #+0]
   \   00000210   0F23               MOVS     R3,#+15
   \   00000212   4522               MOVS     R2,#+69
   \   00000214   2D21               MOVS     R1,#+45
   \   00000216   02A8               ADD      R0,SP,#+8
   \   00000218   ........           BL       Button
   \   0000021C   02B0               ADD      SP,SP,#+8
   4399            
   4400                    
   4401                    
   4402                
   4403                    Label(Speech[g_leng].Wykonawca,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000021E   82B0               SUB      SP,SP,#+8
   \   00000220   0020               MOVS     R0,#+0
   \   00000222   0090               STR      R0,[SP, #+0]
   \   00000224   7F21               MOVS     R1,#+127
   \   00000226   0120               MOVS     R0,#+1
   \   00000228   03B4               PUSH     {R0,R1}
   \   0000022A   3421               MOVS     R1,#+52
   \   0000022C   0A20               MOVS     R0,#+10
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   3A23               MOVS     R3,#+58
   \   00000232   0522               MOVS     R2,#+5
   \   00000234   0221               MOVS     R1,#+2
   \   00000236   E120               MOVS     R0,#+225
   \   00000238   C000               LSLS     R0,R0,#+3        ;; #+1800
   \   0000023A   4E4D               LDR      R5,??ThermostatSet_Paint_0+0xC  ;; g_leng
   \   0000023C   2D68               LDR      R5,[R5, #+0]
   \   0000023E   4E4E               LDR      R6,??ThermostatSet_Paint_0+0x10  ;; 0xa7d
   \   00000240   7543               MULS     R5,R6,R5
   \   00000242   4E4E               LDR      R6,??ThermostatSet_Paint_0+0x14  ;; Speech
   \   00000244   7519               ADDS     R5,R6,R5
   \   00000246   2818               ADDS     R0,R5,R0
   \   00000248   ........           BL       Label
   \   0000024C   06B0               ADD      SP,SP,#+24
   4404                    if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   0000024E   8C20               MOVS     R0,#+140
   \   00000250   2056               LDRSB    R0,[R4, R0]
   \   00000252   0028               CMP      R0,#+0
   \   00000254   38D4               BMI      ??ThermostatSet_Paint_6
   \   00000256   8C20               MOVS     R0,#+140
   \   00000258   2056               LDRSB    R0,[R4, R0]
   \   0000025A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000025C   0014               ASRS     R0,R0,#+16
   \   0000025E   FF28               CMP      R0,#+255
   \   00000260   32D0               BEQ      ??ThermostatSet_Paint_6
   4405                    {
   4406                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000262   6846               MOV      R0,SP
   \   00000264   4921               MOVS     R1,#+73
   \   00000266   0170               STRB     R1,[R0, #+0]
   \   00000268   6846               MOV      R0,SP
   \   0000026A   6421               MOVS     R1,#+100
   \   0000026C   4170               STRB     R1,[R0, #+1]
   \   0000026E   6846               MOV      R0,SP
   \   00000270   3A21               MOVS     R1,#+58
   \   00000272   8170               STRB     R1,[R0, #+2]
   \   00000274   6846               MOV      R0,SP
   \   00000276   2021               MOVS     R1,#+32
   \   00000278   C170               STRB     R1,[R0, #+3]
   \   0000027A   6846               MOV      R0,SP
   \   0000027C   0021               MOVS     R1,#+0
   \   0000027E   0171               STRB     R1,[R0, #+4]
   4407                      ind=CharToStr(Screen->Thermo.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000280   0222               MOVS     R2,#+2
   \   00000282   6946               MOV      R1,SP
   \   00000284   C91C               ADDS     R1,R1,#+3
   \   00000286   8C20               MOVS     R0,#+140
   \   00000288   2056               LDRSB    R0,[R4, R0]
   \   0000028A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000028C   000E               LSRS     R0,R0,#+24
   \   0000028E   ........           BL       CharToStr
   \   00000292   0500               MOVS     R5,R0
   4408                      txt[ind+3]=0;
   \   00000294   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000296   2D0E               LSRS     R5,R5,#+24
   \   00000298   6846               MOV      R0,SP
   \   0000029A   4019               ADDS     R0,R0,R5
   \   0000029C   0021               MOVS     R1,#+0
   \   0000029E   C170               STRB     R1,[R0, #+3]
   4409                      Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002A0   82B0               SUB      SP,SP,#+8
   \   000002A2   0020               MOVS     R0,#+0
   \   000002A4   0090               STR      R0,[SP, #+0]
   \   000002A6   7F21               MOVS     R1,#+127
   \   000002A8   0120               MOVS     R0,#+1
   \   000002AA   03B4               PUSH     {R0,R1}
   \   000002AC   1621               MOVS     R1,#+22
   \   000002AE   ED1C               ADDS     R5,R5,#+3
   \   000002B0   2800               MOVS     R0,R5
   \   000002B2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002B4   000E               LSRS     R0,R0,#+24
   \   000002B6   03B4               PUSH     {R0,R1}
   \   000002B8   2D23               MOVS     R3,#+45
   \   000002BA   1422               MOVS     R2,#+20
   \   000002BC   0221               MOVS     R1,#+2
   \   000002BE   06A8               ADD      R0,SP,#+24
   \   000002C0   ........           BL       Label
   \   000002C4   06B0               ADD      SP,SP,#+24
   \   000002C6   0FE0               B        ??ThermostatSet_Paint_7
   4410                    }else{
   4411                      Label("Var",2,20, 45, 3,22,1,127,0);
   \                     ??ThermostatSet_Paint_6:
   \   000002C8   82B0               SUB      SP,SP,#+8
   \   000002CA   0020               MOVS     R0,#+0
   \   000002CC   0090               STR      R0,[SP, #+0]
   \   000002CE   7F21               MOVS     R1,#+127
   \   000002D0   0120               MOVS     R0,#+1
   \   000002D2   03B4               PUSH     {R0,R1}
   \   000002D4   1621               MOVS     R1,#+22
   \   000002D6   0320               MOVS     R0,#+3
   \   000002D8   03B4               PUSH     {R0,R1}
   \   000002DA   2D23               MOVS     R3,#+45
   \   000002DC   1422               MOVS     R2,#+20
   \   000002DE   0221               MOVS     R1,#+2
   \   000002E0   5AA0               ADR      R0,??ThermostatSet_Paint_3  ;; "Var"
   \   000002E2   ........           BL       Label
   \   000002E6   06B0               ADD      SP,SP,#+24
   4412                    }
   4413                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Paint_7:
   \   000002E8   6846               MOV      R0,SP
   \   000002EA   3C21               MOVS     R1,#+60
   \   000002EC   0170               STRB     R1,[R0, #+0]
   \   000002EE   6846               MOV      R0,SP
   \   000002F0   0021               MOVS     R1,#+0
   \   000002F2   4170               STRB     R1,[R0, #+1]
   4414                    Button(txt,3,42,15,15); 
   \   000002F4   82B0               SUB      SP,SP,#+8
   \   000002F6   0F20               MOVS     R0,#+15
   \   000002F8   0090               STR      R0,[SP, #+0]
   \   000002FA   0F23               MOVS     R3,#+15
   \   000002FC   2A22               MOVS     R2,#+42
   \   000002FE   0321               MOVS     R1,#+3
   \   00000300   02A8               ADD      R0,SP,#+8
   \   00000302   ........           BL       Button
   \   00000306   02B0               ADD      SP,SP,#+8
   4415                    txt[0]='>';
   \   00000308   6846               MOV      R0,SP
   \   0000030A   3E21               MOVS     R1,#+62
   \   0000030C   0170               STRB     R1,[R0, #+0]
   4416                    Button(txt,45,42,15,15); 
   \   0000030E   82B0               SUB      SP,SP,#+8
   \   00000310   0F20               MOVS     R0,#+15
   \   00000312   0090               STR      R0,[SP, #+0]
   \   00000314   0F23               MOVS     R3,#+15
   \   00000316   2A22               MOVS     R2,#+42
   \   00000318   2D21               MOVS     R1,#+45
   \   0000031A   02A8               ADD      R0,SP,#+8
   \   0000031C   ........           BL       Button
   \   00000320   02B0               ADD      SP,SP,#+8
   4417                    
   4418                     if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                            ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000322   8C20               MOVS     R0,#+140
   \   00000324   2056               LDRSB    R0,[R4, R0]
   \   00000326   0028               CMP      R0,#+0
   \   00000328   2AD4               BMI      ??ThermostatSet_Paint_8
   \   0000032A   8C20               MOVS     R0,#+140
   \   0000032C   2056               LDRSB    R0,[R4, R0]
   \   0000032E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000330   0014               ASRS     R0,R0,#+16
   \   00000332   FF28               CMP      R0,#+255
   \   00000334   24D0               BEQ      ??ThermostatSet_Paint_8
   4419                    {
   4420                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000336   6846               MOV      R0,SP
   \   00000338   5021               MOVS     R1,#+80
   \   0000033A   0170               STRB     R1,[R0, #+0]
   \   0000033C   6846               MOV      R0,SP
   \   0000033E   3A21               MOVS     R1,#+58
   \   00000340   4170               STRB     R1,[R0, #+1]
   \   00000342   6846               MOV      R0,SP
   \   00000344   2021               MOVS     R1,#+32
   \   00000346   8170               STRB     R1,[R0, #+2]
   4421                      ind=CharToStr(Screen->Thermo.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   00000348   0222               MOVS     R2,#+2
   \   0000034A   6946               MOV      R1,SP
   \   0000034C   891C               ADDS     R1,R1,#+2
   \   0000034E   8D20               MOVS     R0,#+141
   \   00000350   205C               LDRB     R0,[R4, R0]
   \   00000352   ........           BL       CharToStr
   \   00000356   0500               MOVS     R5,R0
   4422                      txt[ind+2]=0;
   \   00000358   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000035A   2D0E               LSRS     R5,R5,#+24
   \   0000035C   6846               MOV      R0,SP
   \   0000035E   4019               ADDS     R0,R0,R5
   \   00000360   0021               MOVS     R1,#+0
   \   00000362   8170               STRB     R1,[R0, #+2]
   \   00000364   23E0               B        ??ThermostatSet_Paint_9
   \   00000366   C046               Nop      
   \                     ??ThermostatSet_Paint_0:
   \   00000368   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000036C   ........           DC32     `?<Constant "Therm set ">`
   \   00000370   F9060000           DC32     0x6f9
   \   00000374   ........           DC32     g_leng
   \   00000378   7D0A0000           DC32     0xa7d
   \   0000037C   ........           DC32     Speech
   4423                    }else{
   4424                      txt[0]='b'; txt[1]=' '; txt[2]=' '; 
   \                     ??ThermostatSet_Paint_8:
   \   00000380   6846               MOV      R0,SP
   \   00000382   6221               MOVS     R1,#+98
   \   00000384   0170               STRB     R1,[R0, #+0]
   \   00000386   6846               MOV      R0,SP
   \   00000388   2021               MOVS     R1,#+32
   \   0000038A   4170               STRB     R1,[R0, #+1]
   \   0000038C   6846               MOV      R0,SP
   \   0000038E   2021               MOVS     R1,#+32
   \   00000390   8170               STRB     R1,[R0, #+2]
   4425                      ind=CharToStr(Screen->Thermo.ActorPort, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   00000392   0222               MOVS     R2,#+2
   \   00000394   6946               MOV      R1,SP
   \   00000396   491C               ADDS     R1,R1,#+1
   \   00000398   8D20               MOVS     R0,#+141
   \   0000039A   205C               LDRB     R0,[R4, R0]
   \   0000039C   ........           BL       CharToStr
   \   000003A0   0500               MOVS     R5,R0
   4426                      txt[ind+1]=0;
   \   000003A2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003A4   2D0E               LSRS     R5,R5,#+24
   \   000003A6   6846               MOV      R0,SP
   \   000003A8   4019               ADDS     R0,R0,R5
   \   000003AA   0021               MOVS     R1,#+0
   \   000003AC   4170               STRB     R1,[R0, #+1]
   4427                    }
   4428                    txt[ind+2]=0;
   \                     ??ThermostatSet_Paint_9:
   \   000003AE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003B0   2D0E               LSRS     R5,R5,#+24
   \   000003B2   6846               MOV      R0,SP
   \   000003B4   4019               ADDS     R0,R0,R5
   \   000003B6   0021               MOVS     R1,#+0
   \   000003B8   8170               STRB     R1,[R0, #+2]
   4429                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000003BA   82B0               SUB      SP,SP,#+8
   \   000003BC   0020               MOVS     R0,#+0
   \   000003BE   0090               STR      R0,[SP, #+0]
   \   000003C0   7F21               MOVS     R1,#+127
   \   000003C2   0120               MOVS     R0,#+1
   \   000003C4   03B4               PUSH     {R0,R1}
   \   000003C6   1621               MOVS     R1,#+22
   \   000003C8   AD1C               ADDS     R5,R5,#+2
   \   000003CA   2800               MOVS     R0,R5
   \   000003CC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003CE   000E               LSRS     R0,R0,#+24
   \   000003D0   03B4               PUSH     {R0,R1}
   \   000003D2   1D23               MOVS     R3,#+29
   \   000003D4   1422               MOVS     R2,#+20
   \   000003D6   0221               MOVS     R1,#+2
   \   000003D8   06A8               ADD      R0,SP,#+24
   \   000003DA   ........           BL       Label
   \   000003DE   06B0               ADD      SP,SP,#+24
   4430                  
   4431                    txt[0]='<';txt[1]=0;
   \   000003E0   6846               MOV      R0,SP
   \   000003E2   3C21               MOVS     R1,#+60
   \   000003E4   0170               STRB     R1,[R0, #+0]
   \   000003E6   6846               MOV      R0,SP
   \   000003E8   0021               MOVS     R1,#+0
   \   000003EA   4170               STRB     R1,[R0, #+1]
   4432                    Button(txt,3,26,15,15); 
   \   000003EC   82B0               SUB      SP,SP,#+8
   \   000003EE   0F20               MOVS     R0,#+15
   \   000003F0   0090               STR      R0,[SP, #+0]
   \   000003F2   0F23               MOVS     R3,#+15
   \   000003F4   1A22               MOVS     R2,#+26
   \   000003F6   0321               MOVS     R1,#+3
   \   000003F8   02A8               ADD      R0,SP,#+8
   \   000003FA   ........           BL       Button
   \   000003FE   02B0               ADD      SP,SP,#+8
   4433                    txt[0]='>';
   \   00000400   6846               MOV      R0,SP
   \   00000402   3E21               MOVS     R1,#+62
   \   00000404   0170               STRB     R1,[R0, #+0]
   4434                    Button(txt,45,26,15,15); 
   \   00000406   82B0               SUB      SP,SP,#+8
   \   00000408   0F20               MOVS     R0,#+15
   \   0000040A   0090               STR      R0,[SP, #+0]
   \   0000040C   0F23               MOVS     R3,#+15
   \   0000040E   1A22               MOVS     R2,#+26
   \   00000410   2D21               MOVS     R1,#+45
   \   00000412   02A8               ADD      R0,SP,#+8
   \   00000414   ........           BL       Button
   \   00000418   02B0               ADD      SP,SP,#+8
   4435          
   4436                    if (CurModifSheet==0) ZoneButon(Screen->Button[0].Text,4,3,56,22,(char*)ButtonName[10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000041A   0D48               LDR      R0,??ThermostatSet_Paint_3+0x4  ;; CurModifSheet
   \   0000041C   0078               LDRB     R0,[R0, #+0]
   \   0000041E   0028               CMP      R0,#+0
   \   00000420   0FD1               BNE      ??ThermostatSet_Paint_10
   \   00000422   0B48               LDR      R0,??ThermostatSet_Paint_3+0x4  ;; CurModifSheet
   \   00000424   0078               LDRB     R0,[R0, #+0]
   \   00000426   2821               MOVS     R1,#+40
   \   00000428   4843               MULS     R0,R1,R0
   \   0000042A   0A49               LDR      R1,??ThermostatSet_Paint_3+0x8  ;; ButtonName
   \   0000042C   0918               ADDS     R1,R1,R0
   \   0000042E   1620               MOVS     R0,#+22
   \   00000430   03B4               PUSH     {R0,R1}
   \   00000432   3823               MOVS     R3,#+56
   \   00000434   0322               MOVS     R2,#+3
   \   00000436   0421               MOVS     R1,#+4
   \   00000438   0B34               ADDS     R4,R4,#+11
   \   0000043A   2000               MOVS     R0,R4
   \   0000043C   ........           BL       ZoneButon
   \   00000440   02B0               ADD      SP,SP,#+8
   4437             
   4438                 
   4439          }
   \                     ??ThermostatSet_Paint_10:
   \   00000442   02B0               ADD      SP,SP,#+8
   \   00000444   70BC               POP      {R4-R6}
   \   00000446   01BC               POP      {R0}
   \   00000448   0047               BX       R0               ;; return
   \   0000044A   C046               Nop      
   \                     ??ThermostatSet_Paint_3:
   \   0000044C   56617200           DC8      "Var"
   \   00000450   ........           DC32     CurModifSheet
   \   00000454   ........           DC32     ButtonName
   4440          

   \                                 In section Debug.txt, align 4, keep-with-next
   4441          void ThermostatSet_Event(_Screen* Screen)
   4442          {
   \                     ThermostatSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4443            char Repaint=0;
   \   00000004   0027               MOVS     R7,#+0
   4444                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   B248               LDR      R0,??ThermostatSet_Event_0  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   B148               LDR      R0,??ThermostatSet_Event_0+0x4  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   B148               LDR      R0,??ThermostatSet_Event_0+0x8  ;; Y_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   B048               LDR      R0,??ThermostatSet_Event_0+0xC  ;; X_up
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   405F               LDRSH    R0,[R0, R5]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   08D5               BPL      ??ThermostatSet_Event_1
   4445                  {
   4446                    MenuLevel=(MenuLevel/10);
   \   00000034   AD48               LDR      R0,??ThermostatSet_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   AB49               LDR      R1,??ThermostatSet_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
   4447                    Repaint=1;
   \   00000042   0127               MOVS     R7,#+1
   \   00000044   40E1               B        ??ThermostatSet_Event_2
   4448                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatSet_Event_1:
   \   00000046   A548               LDR      R0,??ThermostatSet_Event_0  ;; Y_down
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   405E               LDRSH    R0,[R0, R1]
   \   0000004C   7028               CMP      R0,#+112
   \   0000004E   05DB               BLT      ??ThermostatSet_Event_3
   \   00000050   A448               LDR      R0,??ThermostatSet_Event_0+0x8  ;; Y_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   7028               CMP      R0,#+112
   \   00000058   00DB               BLT      .+4
   \   0000005A   35E1               B        ??ThermostatSet_Event_2
   4449                  { 
   4450                    char MaxSensorReg=0;
   \                     ??ThermostatSet_Event_3:
   \   0000005C   0025               MOVS     R5,#+0
   4451                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   0000005E   8F20               MOVS     R0,#+143
   \   00000060   2056               LDRSB    R0,[R4, R0]
   \   00000062   0028               CMP      R0,#+0
   \   00000064   07D4               BMI      ??ThermostatSet_Event_4
   \   00000066   8F20               MOVS     R0,#+143
   \   00000068   2056               LDRSB    R0,[R4, R0]
   \   0000006A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000006C   0014               ASRS     R0,R0,#+16
   \   0000006E   FF28               CMP      R0,#+255
   \   00000070   01D0               BEQ      ??ThermostatSet_Event_4
   4452                    {
   4453                      MaxSensorReg=NumberReg;
   \   00000072   0B25               MOVS     R5,#+11
   \   00000074   00E0               B        ??ThermostatSet_Event_5
   4454                    }else{
   4455                      MaxSensorReg=20; 
   \                     ??ThermostatSet_Event_4:
   \   00000076   1425               MOVS     R5,#+20
   4456                    }
   4457                    
   4458                    
   4459                    char MaxActorPort=0;
   \                     ??ThermostatSet_Event_5:
   \   00000078   0026               MOVS     R6,#+0
   4460                    if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   0000007A   8C20               MOVS     R0,#+140
   \   0000007C   2056               LDRSB    R0,[R4, R0]
   \   0000007E   0028               CMP      R0,#+0
   \   00000080   07D4               BMI      ??ThermostatSet_Event_6
   \   00000082   8C20               MOVS     R0,#+140
   \   00000084   2056               LDRSB    R0,[R4, R0]
   \   00000086   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000088   0014               ASRS     R0,R0,#+16
   \   0000008A   FF28               CMP      R0,#+255
   \   0000008C   01D0               BEQ      ??ThermostatSet_Event_6
   4461                    {
   4462                      MaxActorPort=NumberNeuronsPort;
   \   0000008E   1026               MOVS     R6,#+16
   \   00000090   00E0               B        ??ThermostatSet_Event_7
   4463                    }else{
   4464                      MaxActorPort=100; 
   \                     ??ThermostatSet_Event_6:
   \   00000092   6426               MOVS     R6,#+100
   4465                    }
   4466                    
   4467                    
   4468                    char txt[5];         
   4469                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_7:
   \   00000094   6846               MOV      R0,SP
   \   00000096   3C21               MOVS     R1,#+60
   \   00000098   0170               STRB     R1,[R0, #+0]
   \   0000009A   6846               MOV      R0,SP
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   4170               STRB     R1,[R0, #+1]
   4470                    if (Button(txt,3,85,15,15)==1) { if(Screen->Thermo.SensorNode>=0) Screen->Thermo.SensorNode--; else Screen->Thermo.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   0F20               MOVS     R0,#+15
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   0F23               MOVS     R3,#+15
   \   000000A8   5522               MOVS     R2,#+85
   \   000000AA   0321               MOVS     R1,#+3
   \   000000AC   02A8               ADD      R0,SP,#+8
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   \   000000B4   0128               CMP      R0,#+1
   \   000000B6   0DD1               BNE      ??ThermostatSet_Event_8
   \   000000B8   8F20               MOVS     R0,#+143
   \   000000BA   2056               LDRSB    R0,[R4, R0]
   \   000000BC   0028               CMP      R0,#+0
   \   000000BE   05D4               BMI      ??ThermostatSet_Event_9
   \   000000C0   8F20               MOVS     R0,#+143
   \   000000C2   8F21               MOVS     R1,#+143
   \   000000C4   6156               LDRSB    R1,[R4, R1]
   \   000000C6   491E               SUBS     R1,R1,#+1
   \   000000C8   2154               STRB     R1,[R4, R0]
   \   000000CA   02E0               B        ??ThermostatSet_Event_10
   \                     ??ThermostatSet_Event_9:
   \   000000CC   8F20               MOVS     R0,#+143
   \   000000CE   2221               MOVS     R1,#+34
   \   000000D0   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_10:
   \   000000D2   0127               MOVS     R7,#+1
   4471                    txt[0]='>';
   \                     ??ThermostatSet_Event_8:
   \   000000D4   6846               MOV      R0,SP
   \   000000D6   3E21               MOVS     R1,#+62
   \   000000D8   0170               STRB     R1,[R0, #+0]
   4472                    if (Button(txt,45,85,15,15)==1) { if(Screen->Thermo.SensorNode+1<NumberNeurons) Screen->Thermo.SensorNode++; else Screen->Thermo.SensorNode=-1; Repaint=1;} 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   0F23               MOVS     R3,#+15
   \   000000E2   5522               MOVS     R2,#+85
   \   000000E4   2D21               MOVS     R1,#+45
   \   000000E6   02A8               ADD      R0,SP,#+8
   \   000000E8   ........           BL       Button
   \   000000EC   02B0               ADD      SP,SP,#+8
   \   000000EE   0128               CMP      R0,#+1
   \   000000F0   0FD1               BNE      ??ThermostatSet_Event_11
   \   000000F2   8F20               MOVS     R0,#+143
   \   000000F4   2056               LDRSB    R0,[R4, R0]
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   2328               CMP      R0,#+35
   \   000000FA   05DA               BGE      ??ThermostatSet_Event_12
   \   000000FC   8F20               MOVS     R0,#+143
   \   000000FE   8F21               MOVS     R1,#+143
   \   00000100   6156               LDRSB    R1,[R4, R1]
   \   00000102   491C               ADDS     R1,R1,#+1
   \   00000104   2154               STRB     R1,[R4, R0]
   \   00000106   03E0               B        ??ThermostatSet_Event_13
   \                     ??ThermostatSet_Event_12:
   \   00000108   8F20               MOVS     R0,#+143
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   C943               MVNS     R1,R1            ;; #-1
   \   0000010E   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_13:
   \   00000110   0127               MOVS     R7,#+1
   4473                   
   4474                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_11:
   \   00000112   6846               MOV      R0,SP
   \   00000114   3C21               MOVS     R1,#+60
   \   00000116   0170               STRB     R1,[R0, #+0]
   \   00000118   6846               MOV      R0,SP
   \   0000011A   0021               MOVS     R1,#+0
   \   0000011C   4170               STRB     R1,[R0, #+1]
   4475                    if (Button(txt,3,69,15,15)==1) { if(Screen->Thermo.SensorReg>1) Screen->Thermo.SensorReg--; else Screen->Thermo.SensorReg=MaxSensorReg-1; Repaint=1;}  
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0F20               MOVS     R0,#+15
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   0F23               MOVS     R3,#+15
   \   00000126   4522               MOVS     R2,#+69
   \   00000128   0321               MOVS     R1,#+3
   \   0000012A   02A8               ADD      R0,SP,#+8
   \   0000012C   ........           BL       Button
   \   00000130   02B0               ADD      SP,SP,#+8
   \   00000132   0128               CMP      R0,#+1
   \   00000134   0DD1               BNE      ??ThermostatSet_Event_14
   \   00000136   9020               MOVS     R0,#+144
   \   00000138   205C               LDRB     R0,[R4, R0]
   \   0000013A   0228               CMP      R0,#+2
   \   0000013C   05D3               BCC      ??ThermostatSet_Event_15
   \   0000013E   9020               MOVS     R0,#+144
   \   00000140   9021               MOVS     R1,#+144
   \   00000142   615C               LDRB     R1,[R4, R1]
   \   00000144   491E               SUBS     R1,R1,#+1
   \   00000146   2154               STRB     R1,[R4, R0]
   \   00000148   02E0               B        ??ThermostatSet_Event_16
   \                     ??ThermostatSet_Event_15:
   \   0000014A   9020               MOVS     R0,#+144
   \   0000014C   691E               SUBS     R1,R5,#+1
   \   0000014E   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_16:
   \   00000150   0127               MOVS     R7,#+1
   4476                    txt[0]='>';
   \                     ??ThermostatSet_Event_14:
   \   00000152   6846               MOV      R0,SP
   \   00000154   3E21               MOVS     R1,#+62
   \   00000156   0170               STRB     R1,[R0, #+0]
   4477                    if (Button(txt,45,69,15,15)==1) { if(Screen->Thermo.SensorReg+1<MaxSensorReg) Screen->Thermo.SensorReg++; else Screen->Thermo.SensorReg=1; Repaint=1;} 
   \   00000158   82B0               SUB      SP,SP,#+8
   \   0000015A   0F20               MOVS     R0,#+15
   \   0000015C   0090               STR      R0,[SP, #+0]
   \   0000015E   0F23               MOVS     R3,#+15
   \   00000160   4522               MOVS     R2,#+69
   \   00000162   2D21               MOVS     R1,#+45
   \   00000164   02A8               ADD      R0,SP,#+8
   \   00000166   ........           BL       Button
   \   0000016A   02B0               ADD      SP,SP,#+8
   \   0000016C   0128               CMP      R0,#+1
   \   0000016E   10D1               BNE      ??ThermostatSet_Event_17
   \   00000170   9020               MOVS     R0,#+144
   \   00000172   205C               LDRB     R0,[R4, R0]
   \   00000174   401C               ADDS     R0,R0,#+1
   \   00000176   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000178   2D0E               LSRS     R5,R5,#+24
   \   0000017A   A842               CMP      R0,R5
   \   0000017C   05DA               BGE      ??ThermostatSet_Event_18
   \   0000017E   9020               MOVS     R0,#+144
   \   00000180   9021               MOVS     R1,#+144
   \   00000182   615C               LDRB     R1,[R4, R1]
   \   00000184   491C               ADDS     R1,R1,#+1
   \   00000186   2154               STRB     R1,[R4, R0]
   \   00000188   02E0               B        ??ThermostatSet_Event_19
   \                     ??ThermostatSet_Event_18:
   \   0000018A   9020               MOVS     R0,#+144
   \   0000018C   0121               MOVS     R1,#+1
   \   0000018E   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_19:
   \   00000190   0127               MOVS     R7,#+1
   4478                   
   4479                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_17:
   \   00000192   6846               MOV      R0,SP
   \   00000194   3C21               MOVS     R1,#+60
   \   00000196   0170               STRB     R1,[R0, #+0]
   \   00000198   6846               MOV      R0,SP
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   4170               STRB     R1,[R0, #+1]
   4480                    if (Button(txt,3,42,15,15)==1) { if(Screen->Thermo.ActorNode>=0) Screen->Thermo.ActorNode--; else Screen->Thermo.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0F20               MOVS     R0,#+15
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   0F23               MOVS     R3,#+15
   \   000001A6   2A22               MOVS     R2,#+42
   \   000001A8   0321               MOVS     R1,#+3
   \   000001AA   02A8               ADD      R0,SP,#+8
   \   000001AC   ........           BL       Button
   \   000001B0   02B0               ADD      SP,SP,#+8
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   0DD1               BNE      ??ThermostatSet_Event_20
   \   000001B6   8C20               MOVS     R0,#+140
   \   000001B8   2056               LDRSB    R0,[R4, R0]
   \   000001BA   0028               CMP      R0,#+0
   \   000001BC   05D4               BMI      ??ThermostatSet_Event_21
   \   000001BE   8C20               MOVS     R0,#+140
   \   000001C0   8C21               MOVS     R1,#+140
   \   000001C2   6156               LDRSB    R1,[R4, R1]
   \   000001C4   491E               SUBS     R1,R1,#+1
   \   000001C6   2154               STRB     R1,[R4, R0]
   \   000001C8   02E0               B        ??ThermostatSet_Event_22
   \                     ??ThermostatSet_Event_21:
   \   000001CA   8C20               MOVS     R0,#+140
   \   000001CC   2221               MOVS     R1,#+34
   \   000001CE   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_22:
   \   000001D0   0127               MOVS     R7,#+1
   4481                    txt[0]='>';
   \                     ??ThermostatSet_Event_20:
   \   000001D2   6846               MOV      R0,SP
   \   000001D4   3E21               MOVS     R1,#+62
   \   000001D6   0170               STRB     R1,[R0, #+0]
   4482                    if (Button(txt,45,42,15,15)==1) { if(Screen->Thermo.ActorNode+1<NumberNeurons) Screen->Thermo.ActorNode++; else Screen->Thermo.ActorNode=-1; Repaint=1;} 
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0F20               MOVS     R0,#+15
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   0F23               MOVS     R3,#+15
   \   000001E0   2A22               MOVS     R2,#+42
   \   000001E2   2D21               MOVS     R1,#+45
   \   000001E4   02A8               ADD      R0,SP,#+8
   \   000001E6   ........           BL       Button
   \   000001EA   02B0               ADD      SP,SP,#+8
   \   000001EC   0128               CMP      R0,#+1
   \   000001EE   0FD1               BNE      ??ThermostatSet_Event_23
   \   000001F0   8C20               MOVS     R0,#+140
   \   000001F2   2056               LDRSB    R0,[R4, R0]
   \   000001F4   401C               ADDS     R0,R0,#+1
   \   000001F6   2328               CMP      R0,#+35
   \   000001F8   05DA               BGE      ??ThermostatSet_Event_24
   \   000001FA   8C20               MOVS     R0,#+140
   \   000001FC   8C21               MOVS     R1,#+140
   \   000001FE   6156               LDRSB    R1,[R4, R1]
   \   00000200   491C               ADDS     R1,R1,#+1
   \   00000202   2154               STRB     R1,[R4, R0]
   \   00000204   03E0               B        ??ThermostatSet_Event_25
   \                     ??ThermostatSet_Event_24:
   \   00000206   8C20               MOVS     R0,#+140
   \   00000208   0021               MOVS     R1,#+0
   \   0000020A   C943               MVNS     R1,R1            ;; #-1
   \   0000020C   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_25:
   \   0000020E   0127               MOVS     R7,#+1
   4483                   
   4484                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_23:
   \   00000210   6846               MOV      R0,SP
   \   00000212   3C21               MOVS     R1,#+60
   \   00000214   0170               STRB     R1,[R0, #+0]
   \   00000216   6846               MOV      R0,SP
   \   00000218   0021               MOVS     R1,#+0
   \   0000021A   4170               STRB     R1,[R0, #+1]
   4485                    if (Button(txt,3,26,15,15)==1) { if(Screen->Thermo.ActorPort-1>0) Screen->Thermo.ActorPort--; else Screen->Thermo.ActorPort=MaxActorPort-1; Repaint=1;}  
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   0F20               MOVS     R0,#+15
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   0F23               MOVS     R3,#+15
   \   00000224   1A22               MOVS     R2,#+26
   \   00000226   0321               MOVS     R1,#+3
   \   00000228   02A8               ADD      R0,SP,#+8
   \   0000022A   ........           BL       Button
   \   0000022E   02B0               ADD      SP,SP,#+8
   \   00000230   0128               CMP      R0,#+1
   \   00000232   0ED1               BNE      ??ThermostatSet_Event_26
   \   00000234   8D20               MOVS     R0,#+141
   \   00000236   205C               LDRB     R0,[R4, R0]
   \   00000238   401E               SUBS     R0,R0,#+1
   \   0000023A   0128               CMP      R0,#+1
   \   0000023C   05DB               BLT      ??ThermostatSet_Event_27
   \   0000023E   8D20               MOVS     R0,#+141
   \   00000240   8D21               MOVS     R1,#+141
   \   00000242   615C               LDRB     R1,[R4, R1]
   \   00000244   491E               SUBS     R1,R1,#+1
   \   00000246   2154               STRB     R1,[R4, R0]
   \   00000248   02E0               B        ??ThermostatSet_Event_28
   \                     ??ThermostatSet_Event_27:
   \   0000024A   8D20               MOVS     R0,#+141
   \   0000024C   711E               SUBS     R1,R6,#+1
   \   0000024E   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_28:
   \   00000250   0127               MOVS     R7,#+1
   4486                    txt[0]='>';
   \                     ??ThermostatSet_Event_26:
   \   00000252   6846               MOV      R0,SP
   \   00000254   3E21               MOVS     R1,#+62
   \   00000256   0170               STRB     R1,[R0, #+0]
   4487                    if (Button(txt,45,26,15,15)==1) { if(Screen->Thermo.ActorPort+1<MaxActorPort) Screen->Thermo.ActorPort++; else Screen->Thermo.ActorPort=0; Repaint=1;} 
   \   00000258   82B0               SUB      SP,SP,#+8
   \   0000025A   0F20               MOVS     R0,#+15
   \   0000025C   0090               STR      R0,[SP, #+0]
   \   0000025E   0F23               MOVS     R3,#+15
   \   00000260   1A22               MOVS     R2,#+26
   \   00000262   2D21               MOVS     R1,#+45
   \   00000264   02A8               ADD      R0,SP,#+8
   \   00000266   ........           BL       Button
   \   0000026A   02B0               ADD      SP,SP,#+8
   \   0000026C   0128               CMP      R0,#+1
   \   0000026E   10D1               BNE      ??ThermostatSet_Event_29
   \   00000270   8D20               MOVS     R0,#+141
   \   00000272   205C               LDRB     R0,[R4, R0]
   \   00000274   401C               ADDS     R0,R0,#+1
   \   00000276   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000278   360E               LSRS     R6,R6,#+24
   \   0000027A   B042               CMP      R0,R6
   \   0000027C   05DA               BGE      ??ThermostatSet_Event_30
   \   0000027E   8D20               MOVS     R0,#+141
   \   00000280   8D21               MOVS     R1,#+141
   \   00000282   615C               LDRB     R1,[R4, R1]
   \   00000284   491C               ADDS     R1,R1,#+1
   \   00000286   2154               STRB     R1,[R4, R0]
   \   00000288   02E0               B        ??ThermostatSet_Event_31
   \                     ??ThermostatSet_Event_30:
   \   0000028A   8D20               MOVS     R0,#+141
   \   0000028C   0021               MOVS     R1,#+0
   \   0000028E   2154               STRB     R1,[R4, R0]
   \                     ??ThermostatSet_Event_31:
   \   00000290   0127               MOVS     R7,#+1
   4488                        
   4489                    
   4490                    if (CurModifSheet==0) 
   \                     ??ThermostatSet_Event_29:
   \   00000292   1748               LDR      R0,??ThermostatSet_Event_0+0x14  ;; CurModifSheet
   \   00000294   0078               LDRB     R0,[R0, #+0]
   \   00000296   0028               CMP      R0,#+0
   \   00000298   16D1               BNE      ??ThermostatSet_Event_2
   4491                    if (
   4492                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4493                            4,3,56,22,
   4494                            2)==1
   4495                           )
   \   0000029A   0221               MOVS     R1,#+2
   \   0000029C   1620               MOVS     R0,#+22
   \   0000029E   03B4               PUSH     {R0,R1}
   \   000002A0   3823               MOVS     R3,#+56
   \   000002A2   0322               MOVS     R2,#+3
   \   000002A4   0421               MOVS     R1,#+4
   \   000002A6   0020               MOVS     R0,#+0
   \   000002A8   ........           BL       Zone
   \   000002AC   02B0               ADD      SP,SP,#+8
   \   000002AE   0128               CMP      R0,#+1
   \   000002B0   0AD1               BNE      ??ThermostatSet_Event_2
   4496                           {
   4497                              ButtonToChange=&(Screen->Button[0]);
   \   000002B2   1048               LDR      R0,??ThermostatSet_Event_0+0x18  ;; ButtonToChange
   \   000002B4   0B34               ADDS     R4,R4,#+11
   \   000002B6   0460               STR      R4,[R0, #+0]
   4498                              MenuLevel=(MenuLevel*10+4); Repaint=1;
   \   000002B8   0C48               LDR      R0,??ThermostatSet_Event_0+0x10  ;; MenuLevel
   \   000002BA   0C49               LDR      R1,??ThermostatSet_Event_0+0x10  ;; MenuLevel
   \   000002BC   0968               LDR      R1,[R1, #+0]
   \   000002BE   0A22               MOVS     R2,#+10
   \   000002C0   5143               MULS     R1,R2,R1
   \   000002C2   091D               ADDS     R1,R1,#+4
   \   000002C4   0160               STR      R1,[R0, #+0]
   \   000002C6   0127               MOVS     R7,#+1
   4499                           }
   4500                    
   4501                    
   4502                    
   4503                  }
   4504                  if (Repaint) MenuPaint();
   \                     ??ThermostatSet_Event_2:
   \   000002C8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002CA   3F0E               LSRS     R7,R7,#+24
   \   000002CC   002F               CMP      R7,#+0
   \   000002CE   01D0               BEQ      ??ThermostatSet_Event_32
   \   000002D0   ........           BL       MenuPaint
   4505          }
   \                     ??ThermostatSet_Event_32:
   \   000002D4   03B0               ADD      SP,SP,#+12
   \   000002D6   F0BC               POP      {R4-R7}
   \   000002D8   01BC               POP      {R0}
   \   000002DA   0047               BX       R0               ;; return
   \                     ??ThermostatSet_Event_0:
   \   000002DC   ........           DC32     Y_down
   \   000002E0   ........           DC32     X_down
   \   000002E4   ........           DC32     Y_up
   \   000002E8   ........           DC32     X_up
   \   000002EC   ........           DC32     MenuLevel
   \   000002F0   ........           DC32     CurModifSheet
   \   000002F4   ........           DC32     ButtonToChange
   4506          
   4507          
   4508          
   4509          
   4510          
   4511          
   4512          

   \                                 In section Debug.txt, align 4, keep-with-next
   4513          void ScreenTimetableSet_Paint(_Screen* Screen)
   4514          {          
   \                     ScreenTimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0400               MOVS     R4,R0
   4515                 //List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4516                 List_Paint("Actor",0,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0321               MOVS     R1,#+3
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0023               MOVS     R3,#+0
   \   00000026   6C22               MOVS     R2,#+108
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   B948               LDR      R0,??ScreenTimetableSet_Paint_0  ;; `?<Constant "Actor">`
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   4517                 
   4518                 char txt[8];
   4519                 
   4520          
   4521          
   4522                    char ind=0;
   \   00000032   0025               MOVS     R5,#+0
   4523                    
   4524                    Label(Speech[g_leng].Wykonawca,2,5, 88 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   7F21               MOVS     R1,#+127
   \   0000003C   0120               MOVS     R0,#+1
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   3421               MOVS     R1,#+52
   \   00000042   0A20               MOVS     R0,#+10
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   5823               MOVS     R3,#+88
   \   00000048   0522               MOVS     R2,#+5
   \   0000004A   0221               MOVS     R1,#+2
   \   0000004C   E120               MOVS     R0,#+225
   \   0000004E   C000               LSLS     R0,R0,#+3        ;; #+1800
   \   00000050   B04E               LDR      R6,??ScreenTimetableSet_Paint_0+0x4  ;; g_leng
   \   00000052   3668               LDR      R6,[R6, #+0]
   \   00000054   B04F               LDR      R7,??ScreenTimetableSet_Paint_0+0x8  ;; 0xa7d
   \   00000056   7E43               MULS     R6,R7,R6
   \   00000058   B04F               LDR      R7,??ScreenTimetableSet_Paint_0+0xC  ;; Speech
   \   0000005A   BE19               ADDS     R6,R7,R6
   \   0000005C   3018               ADDS     R0,R6,R0
   \   0000005E   ........           BL       Label
   \   00000062   06B0               ADD      SP,SP,#+24
   4525                   
   4526                    if (Screen->Timetable.ActorNode>=0)
   \   00000064   8C20               MOVS     R0,#+140
   \   00000066   2056               LDRSB    R0,[R4, R0]
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   29D4               BMI      ??ScreenTimetableSet_Paint_1
   4527                    {
   4528                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   0000006C   6846               MOV      R0,SP
   \   0000006E   4921               MOVS     R1,#+73
   \   00000070   0170               STRB     R1,[R0, #+0]
   \   00000072   6846               MOV      R0,SP
   \   00000074   6421               MOVS     R1,#+100
   \   00000076   4170               STRB     R1,[R0, #+1]
   \   00000078   6846               MOV      R0,SP
   \   0000007A   3A21               MOVS     R1,#+58
   \   0000007C   8170               STRB     R1,[R0, #+2]
   \   0000007E   6846               MOV      R0,SP
   \   00000080   2021               MOVS     R1,#+32
   \   00000082   C170               STRB     R1,[R0, #+3]
   4529                      ind=CharToStr(Screen->Timetable.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000084   0222               MOVS     R2,#+2
   \   00000086   6946               MOV      R1,SP
   \   00000088   C91C               ADDS     R1,R1,#+3
   \   0000008A   8C20               MOVS     R0,#+140
   \   0000008C   2056               LDRSB    R0,[R4, R0]
   \   0000008E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000090   000E               LSRS     R0,R0,#+24
   \   00000092   ........           BL       CharToStr
   \   00000096   0500               MOVS     R5,R0
   4530                      Label(txt,2,20, 75 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0020               MOVS     R0,#+0
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   7F21               MOVS     R1,#+127
   \   000000A0   0120               MOVS     R0,#+1
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   1621               MOVS     R1,#+22
   \   000000A6   ED1C               ADDS     R5,R5,#+3
   \   000000A8   2800               MOVS     R0,R5
   \   000000AA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AC   000E               LSRS     R0,R0,#+24
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   4B23               MOVS     R3,#+75
   \   000000B2   1422               MOVS     R2,#+20
   \   000000B4   0221               MOVS     R1,#+2
   \   000000B6   06A8               ADD      R0,SP,#+24
   \   000000B8   ........           BL       Label
   \   000000BC   06B0               ADD      SP,SP,#+24
   \   000000BE   12E0               B        ??ScreenTimetableSet_Paint_2
   4531                    }else{
   4532                      Label("Var",2,20, 75 ,ind+3,22,1,127,0);  
   \                     ??ScreenTimetableSet_Paint_1:
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   0020               MOVS     R0,#+0
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   7F21               MOVS     R1,#+127
   \   000000C8   0120               MOVS     R0,#+1
   \   000000CA   03B4               PUSH     {R0,R1}
   \   000000CC   1621               MOVS     R1,#+22
   \   000000CE   ED1C               ADDS     R5,R5,#+3
   \   000000D0   2800               MOVS     R0,R5
   \   000000D2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D4   000E               LSRS     R0,R0,#+24
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   4B23               MOVS     R3,#+75
   \   000000DA   1422               MOVS     R2,#+20
   \   000000DC   0221               MOVS     R1,#+2
   \   000000DE   90A0               ADR      R0,??ScreenTimetableSet_Paint_0+0x10  ;; "Var"
   \   000000E0   ........           BL       Label
   \   000000E4   06B0               ADD      SP,SP,#+24
   4533                    }
   4534                    txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Paint_2:
   \   000000E6   6846               MOV      R0,SP
   \   000000E8   3C21               MOVS     R1,#+60
   \   000000EA   0170               STRB     R1,[R0, #+0]
   \   000000EC   6846               MOV      R0,SP
   \   000000EE   0021               MOVS     R1,#+0
   \   000000F0   4170               STRB     R1,[R0, #+1]
   4535                    Button(txt,3,72,15,15); 
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0F20               MOVS     R0,#+15
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   0F23               MOVS     R3,#+15
   \   000000FA   4822               MOVS     R2,#+72
   \   000000FC   0321               MOVS     R1,#+3
   \   000000FE   02A8               ADD      R0,SP,#+8
   \   00000100   ........           BL       Button
   \   00000104   02B0               ADD      SP,SP,#+8
   4536                    txt[0]='>';
   \   00000106   6846               MOV      R0,SP
   \   00000108   3E21               MOVS     R1,#+62
   \   0000010A   0170               STRB     R1,[R0, #+0]
   4537                    Button(txt,45,72,15,15); 
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   0F20               MOVS     R0,#+15
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   0F23               MOVS     R3,#+15
   \   00000114   4822               MOVS     R2,#+72
   \   00000116   2D21               MOVS     R1,#+45
   \   00000118   02A8               ADD      R0,SP,#+8
   \   0000011A   ........           BL       Button
   \   0000011E   02B0               ADD      SP,SP,#+8
   4538                    
   4539                    if (Screen->Timetable.ActorNode>=0)
   \   00000120   8C20               MOVS     R0,#+140
   \   00000122   2056               LDRSB    R0,[R4, R0]
   \   00000124   0028               CMP      R0,#+0
   \   00000126   12D4               BMI      ??ScreenTimetableSet_Paint_3
   4540                    {
   4541                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000128   6846               MOV      R0,SP
   \   0000012A   5021               MOVS     R1,#+80
   \   0000012C   0170               STRB     R1,[R0, #+0]
   \   0000012E   6846               MOV      R0,SP
   \   00000130   3A21               MOVS     R1,#+58
   \   00000132   4170               STRB     R1,[R0, #+1]
   \   00000134   6846               MOV      R0,SP
   \   00000136   2021               MOVS     R1,#+32
   \   00000138   8170               STRB     R1,[R0, #+2]
   4542                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000013A   0222               MOVS     R2,#+2
   \   0000013C   6946               MOV      R1,SP
   \   0000013E   891C               ADDS     R1,R1,#+2
   \   00000140   8D20               MOVS     R0,#+141
   \   00000142   205C               LDRB     R0,[R4, R0]
   \   00000144   ........           BL       CharToStr
   \   00000148   0500               MOVS     R5,R0
   4543                       ind+=2;
   \   0000014A   AD1C               ADDS     R5,R5,#+2
   \   0000014C   14E0               B        ??ScreenTimetableSet_Paint_4
   4544                    }else{
   4545                      txt[0]='N'; txt[1]='r'; txt[2]=':'; txt[3]=' '; 
   \                     ??ScreenTimetableSet_Paint_3:
   \   0000014E   6846               MOV      R0,SP
   \   00000150   4E21               MOVS     R1,#+78
   \   00000152   0170               STRB     R1,[R0, #+0]
   \   00000154   6846               MOV      R0,SP
   \   00000156   7221               MOVS     R1,#+114
   \   00000158   4170               STRB     R1,[R0, #+1]
   \   0000015A   6846               MOV      R0,SP
   \   0000015C   3A21               MOVS     R1,#+58
   \   0000015E   8170               STRB     R1,[R0, #+2]
   \   00000160   6846               MOV      R0,SP
   \   00000162   2021               MOVS     R1,#+32
   \   00000164   C170               STRB     R1,[R0, #+3]
   4546                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000166   0222               MOVS     R2,#+2
   \   00000168   6946               MOV      R1,SP
   \   0000016A   C91C               ADDS     R1,R1,#+3
   \   0000016C   8D20               MOVS     R0,#+141
   \   0000016E   205C               LDRB     R0,[R4, R0]
   \   00000170   ........           BL       CharToStr
   \   00000174   0500               MOVS     R5,R0
   4547                       ind+=3;
   \   00000176   ED1C               ADDS     R5,R5,#+3
   4548                    }
   4549                    
   4550                   
   4551                   
   4552                    Label(txt,2,20, 55 ,ind,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_4:
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0020               MOVS     R0,#+0
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   7F21               MOVS     R1,#+127
   \   00000180   0120               MOVS     R0,#+1
   \   00000182   03B4               PUSH     {R0,R1}
   \   00000184   1621               MOVS     R1,#+22
   \   00000186   2800               MOVS     R0,R5
   \   00000188   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000018A   000E               LSRS     R0,R0,#+24
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   3723               MOVS     R3,#+55
   \   00000190   1422               MOVS     R2,#+20
   \   00000192   0221               MOVS     R1,#+2
   \   00000194   06A8               ADD      R0,SP,#+24
   \   00000196   ........           BL       Label
   \   0000019A   06B0               ADD      SP,SP,#+24
   4553                
   4554                    
   4555                    
   4556                    txt[0]='<';txt[1]=0;
   \   0000019C   6846               MOV      R0,SP
   \   0000019E   3C21               MOVS     R1,#+60
   \   000001A0   0170               STRB     R1,[R0, #+0]
   \   000001A2   6846               MOV      R0,SP
   \   000001A4   0021               MOVS     R1,#+0
   \   000001A6   4170               STRB     R1,[R0, #+1]
   4557                    Button(txt,3,52,15,15); 
   \   000001A8   82B0               SUB      SP,SP,#+8
   \   000001AA   0F20               MOVS     R0,#+15
   \   000001AC   0090               STR      R0,[SP, #+0]
   \   000001AE   0F23               MOVS     R3,#+15
   \   000001B0   3422               MOVS     R2,#+52
   \   000001B2   0321               MOVS     R1,#+3
   \   000001B4   02A8               ADD      R0,SP,#+8
   \   000001B6   ........           BL       Button
   \   000001BA   02B0               ADD      SP,SP,#+8
   4558                    txt[0]='>';
   \   000001BC   6846               MOV      R0,SP
   \   000001BE   3E21               MOVS     R1,#+62
   \   000001C0   0170               STRB     R1,[R0, #+0]
   4559                    Button(txt,45,52,15,15); 
   \   000001C2   82B0               SUB      SP,SP,#+8
   \   000001C4   0F20               MOVS     R0,#+15
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   0F23               MOVS     R3,#+15
   \   000001CA   3422               MOVS     R2,#+52
   \   000001CC   2D21               MOVS     R1,#+45
   \   000001CE   02A8               ADD      R0,SP,#+8
   \   000001D0   ........           BL       Button
   \   000001D4   02B0               ADD      SP,SP,#+8
   4560          
   4561                   
   4562                    txt[0]='<';txt[1]=0;
   \   000001D6   6846               MOV      R0,SP
   \   000001D8   3C21               MOVS     R1,#+60
   \   000001DA   0170               STRB     R1,[R0, #+0]
   \   000001DC   6846               MOV      R0,SP
   \   000001DE   0021               MOVS     R1,#+0
   \   000001E0   4170               STRB     R1,[R0, #+1]
   4563                    Button(txt,3,24,15,15); 
   \   000001E2   82B0               SUB      SP,SP,#+8
   \   000001E4   0F20               MOVS     R0,#+15
   \   000001E6   0090               STR      R0,[SP, #+0]
   \   000001E8   0F23               MOVS     R3,#+15
   \   000001EA   1822               MOVS     R2,#+24
   \   000001EC   0321               MOVS     R1,#+3
   \   000001EE   02A8               ADD      R0,SP,#+8
   \   000001F0   ........           BL       Button
   \   000001F4   02B0               ADD      SP,SP,#+8
   4564                    txt[0]='>';
   \   000001F6   6846               MOV      R0,SP
   \   000001F8   3E21               MOVS     R1,#+62
   \   000001FA   0170               STRB     R1,[R0, #+0]
   4565                    Button(txt,45,24,15,15); 
   \   000001FC   82B0               SUB      SP,SP,#+8
   \   000001FE   0F20               MOVS     R0,#+15
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   0F23               MOVS     R3,#+15
   \   00000204   1822               MOVS     R2,#+24
   \   00000206   2D21               MOVS     R1,#+45
   \   00000208   02A8               ADD      R0,SP,#+8
   \   0000020A   ........           BL       Button
   \   0000020E   02B0               ADD      SP,SP,#+8
   4566                 
   4567                    switch (Screen->Timetable.ActionType)
   \   00000210   8E20               MOVS     R0,#+142
   \   00000212   205C               LDRB     R0,[R4, R0]
   \   00000214   0028               CMP      R0,#+0
   \   00000216   04D0               BEQ      ??ScreenTimetableSet_Paint_5
   \   00000218   0128               CMP      R0,#+1
   \   0000021A   23D0               BEQ      ??ScreenTimetableSet_Paint_6
   \   0000021C   0228               CMP      R0,#+2
   \   0000021E   2CD0               BEQ      ??ScreenTimetableSet_Paint_7
   \   00000220   35E0               B        ??ScreenTimetableSet_Paint_8
   4568                    {
   4569                      case 0: CopyToCanvasPoint((char*)ProcSet_graf, 21, 27,24,9); 
   \                     ??ScreenTimetableSet_Paint_5:
   \   00000222   82B0               SUB      SP,SP,#+8
   \   00000224   0920               MOVS     R0,#+9
   \   00000226   0090               STR      R0,[SP, #+0]
   \   00000228   1823               MOVS     R3,#+24
   \   0000022A   1B22               MOVS     R2,#+27
   \   0000022C   1521               MOVS     R1,#+21
   \   0000022E   3D48               LDR      R0,??ScreenTimetableSet_Paint_0+0x14  ;; ProcSet_graf
   \   00000230   ........           BL       CopyToCanvasPoint
   \   00000234   02B0               ADD      SP,SP,#+8
   4570                                txt[0]='Q'; txt[1]=0;
   \   00000236   6846               MOV      R0,SP
   \   00000238   5121               MOVS     R1,#+81
   \   0000023A   0170               STRB     R1,[R0, #+0]
   \   0000023C   6846               MOV      R0,SP
   \   0000023E   0021               MOVS     R1,#+0
   \   00000240   4170               STRB     R1,[R0, #+1]
   4571                                Label(txt,2,28,27,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000242   82B0               SUB      SP,SP,#+8
   \   00000244   0020               MOVS     R0,#+0
   \   00000246   0090               STR      R0,[SP, #+0]
   \   00000248   7821               MOVS     R1,#+120
   \   0000024A   0020               MOVS     R0,#+0
   \   0000024C   03B4               PUSH     {R0,R1}
   \   0000024E   0621               MOVS     R1,#+6
   \   00000250   0120               MOVS     R0,#+1
   \   00000252   03B4               PUSH     {R0,R1}
   \   00000254   1B23               MOVS     R3,#+27
   \   00000256   1C22               MOVS     R2,#+28
   \   00000258   0221               MOVS     R1,#+2
   \   0000025A   06A8               ADD      R0,SP,#+24
   \   0000025C   ........           BL       Label
   \   00000260   06B0               ADD      SP,SP,#+24
   \   00000262   14E0               B        ??ScreenTimetableSet_Paint_8
   4572          
   4573                      
   4574                                break; //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght); 
   4575                      case 1: CopyToCanvasPoint((char*)ProcWOUTS_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_6:
   \   00000264   82B0               SUB      SP,SP,#+8
   \   00000266   0920               MOVS     R0,#+9
   \   00000268   0090               STR      R0,[SP, #+0]
   \   0000026A   1823               MOVS     R3,#+24
   \   0000026C   1B22               MOVS     R2,#+27
   \   0000026E   1521               MOVS     R1,#+21
   \   00000270   2D48               LDR      R0,??ScreenTimetableSet_Paint_0+0x18  ;; ProcWOUTS_graf
   \   00000272   ........           BL       CopyToCanvasPoint
   \   00000276   02B0               ADD      SP,SP,#+8
   \   00000278   09E0               B        ??ScreenTimetableSet_Paint_8
   4576                      case 2: CopyToCanvasPoint((char*)ProcWOUTR_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_7:
   \   0000027A   82B0               SUB      SP,SP,#+8
   \   0000027C   0920               MOVS     R0,#+9
   \   0000027E   0090               STR      R0,[SP, #+0]
   \   00000280   1823               MOVS     R3,#+24
   \   00000282   1B22               MOVS     R2,#+27
   \   00000284   1521               MOVS     R1,#+21
   \   00000286   2948               LDR      R0,??ScreenTimetableSet_Paint_0+0x1C  ;; ProcWOUTR_graf
   \   00000288   ........           BL       CopyToCanvasPoint
   \   0000028C   02B0               ADD      SP,SP,#+8
   4577                    }
   4578                    
   4579          
   4580                      
   4581                    
   4582                    Label( "-1h",1,27,6,5,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_8:
   \   0000028E   82B0               SUB      SP,SP,#+8
   \   00000290   0020               MOVS     R0,#+0
   \   00000292   0090               STR      R0,[SP, #+0]
   \   00000294   7F21               MOVS     R1,#+127
   \   00000296   0120               MOVS     R0,#+1
   \   00000298   03B4               PUSH     {R0,R1}
   \   0000029A   2121               MOVS     R1,#+33
   \   0000029C   0520               MOVS     R0,#+5
   \   0000029E   03B4               PUSH     {R0,R1}
   \   000002A0   0623               MOVS     R3,#+6
   \   000002A2   1B22               MOVS     R2,#+27
   \   000002A4   0121               MOVS     R1,#+1
   \   000002A6   22A0               ADR      R0,??ScreenTimetableSet_Paint_0+0x20  ;; "-1h"
   \   000002A8   ........           BL       Label
   \   000002AC   06B0               ADD      SP,SP,#+24
   4583                    H_line(30,4,12,1); 
   \   000002AE   0123               MOVS     R3,#+1
   \   000002B0   0C22               MOVS     R2,#+12
   \   000002B2   0421               MOVS     R1,#+4
   \   000002B4   1E20               MOVS     R0,#+30
   \   000002B6   ........           BL       H_line
   4584                    H_line(30,16,12,1); 
   \   000002BA   0123               MOVS     R3,#+1
   \   000002BC   0C22               MOVS     R2,#+12
   \   000002BE   1021               MOVS     R1,#+16
   \   000002C0   1E20               MOVS     R0,#+30
   \   000002C2   ........           BL       H_line
   4585                    V_line(30,4,12,1);
   \   000002C6   0123               MOVS     R3,#+1
   \   000002C8   0C22               MOVS     R2,#+12
   \   000002CA   0421               MOVS     R1,#+4
   \   000002CC   1E20               MOVS     R0,#+30
   \   000002CE   ........           BL       V_line
   4586                    V_line(42,4,13,1); 
   \   000002D2   0123               MOVS     R3,#+1
   \   000002D4   0D22               MOVS     R2,#+13
   \   000002D6   0421               MOVS     R1,#+4
   \   000002D8   2A20               MOVS     R0,#+42
   \   000002DA   ........           BL       V_line
   4587                    
   4588          
   4589                    if (Screen->Timetable.Min1h)
   \   000002DE   8F34               ADDS     R4,R4,#+143
   \   000002E0   2078               LDRB     R0,[R4, #+0]
   \   000002E2   0028               CMP      R0,#+0
   \   000002E4   0FD0               BEQ      ??ScreenTimetableSet_Paint_9
   4590                    {
   4591                       char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000002E6   02A8               ADD      R0,SP,#+8
   \   000002E8   1249               LDR      R1,??ScreenTimetableSet_Paint_0+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   000002EA   1CC9               LDM      R1!,{R2-R4}
   \   000002EC   1CC0               STM      R0!,{R2-R4}
   \   000002EE   0C39               SUBS     R1,R1,#+12
   \   000002F0   0C38               SUBS     R0,R0,#+12
   4592                      CopyToCanvasPoint((char *)ekran_tab,33,5,8,10);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght
   \   000002F2   82B0               SUB      SP,SP,#+8
   \   000002F4   0A20               MOVS     R0,#+10
   \   000002F6   0090               STR      R0,[SP, #+0]
   \   000002F8   0823               MOVS     R3,#+8
   \   000002FA   0522               MOVS     R2,#+5
   \   000002FC   2121               MOVS     R1,#+33
   \   000002FE   04A8               ADD      R0,SP,#+16
   \   00000300   ........           BL       CopyToCanvasPoint
   \   00000304   02B0               ADD      SP,SP,#+8
   4593                    }
   4594          
   4595          }
   \                     ??ScreenTimetableSet_Paint_9:
   \   00000306   05B0               ADD      SP,SP,#+20
   \   00000308   F0BC               POP      {R4-R7}
   \   0000030A   01BC               POP      {R0}
   \   0000030C   0047               BX       R0               ;; return
   \   0000030E   C046               Nop      
   \                     ??ScreenTimetableSet_Paint_0:
   \   00000310   ........           DC32     `?<Constant "Actor">`
   \   00000314   ........           DC32     g_leng
   \   00000318   7D0A0000           DC32     0xa7d
   \   0000031C   ........           DC32     Speech
   \   00000320   56617200           DC8      "Var"
   \   00000324   ........           DC32     ProcSet_graf
   \   00000328   ........           DC32     ProcWOUTS_graf
   \   0000032C   ........           DC32     ProcWOUTR_graf
   \   00000330   2D316800           DC8      "-1h"
   \   00000334   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   4596          

   \                                 In section Debug.txt, align 4, keep-with-next
   4597          void ScreenTimetableSet_Event(_Screen* Screen)
   4598          {
   \                     ScreenTimetableSet_Event:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   4599            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   4600                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   A648               LDR      R0,??ScreenTimetableSet_Event_0  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   A548               LDR      R0,??ScreenTimetableSet_Event_0+0x4  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   A548               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   A448               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000026   0026               MOVS     R6,#+0
   \   00000028   805F               LDRSH    R0,[R0, R6]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   08D5               BPL      ??ScreenTimetableSet_Event_1
   4601                  {
   4602                    MenuLevel=(MenuLevel/10);
   \   00000034   A148               LDR      R0,??ScreenTimetableSet_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   9F49               LDR      R1,??ScreenTimetableSet_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
   4603                    Repaint=1;
   \   00000042   0125               MOVS     R5,#+1
   \   00000044   28E1               B        ??ScreenTimetableSet_Event_2
   4604                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenTimetableSet_Event_1:
   \   00000046   9948               LDR      R0,??ScreenTimetableSet_Event_0  ;; Y_down
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   405E               LDRSH    R0,[R0, R1]
   \   0000004C   7028               CMP      R0,#+112
   \   0000004E   05DB               BLT      ??ScreenTimetableSet_Event_3
   \   00000050   9848               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   7028               CMP      R0,#+112
   \   00000058   00DB               BLT      .+4
   \   0000005A   1DE1               B        ??ScreenTimetableSet_Event_2
   4605                  { 
   4606                    char txt[3];
   4607                    txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Event_3:
   \   0000005C   6846               MOV      R0,SP
   \   0000005E   3C21               MOVS     R1,#+60
   \   00000060   0170               STRB     R1,[R0, #+0]
   \   00000062   6846               MOV      R0,SP
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   4170               STRB     R1,[R0, #+1]
   4608                    if (Button(txt,3,72,15,15)==1) { if(Screen->Timetable.ActorNode>-1) Screen->Timetable.ActorNode--; else Screen->Timetable.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   0F20               MOVS     R0,#+15
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   0F23               MOVS     R3,#+15
   \   00000070   4822               MOVS     R2,#+72
   \   00000072   0321               MOVS     R1,#+3
   \   00000074   02A8               ADD      R0,SP,#+8
   \   00000076   ........           BL       Button
   \   0000007A   02B0               ADD      SP,SP,#+8
   \   0000007C   0128               CMP      R0,#+1
   \   0000007E   0DD1               BNE      ??ScreenTimetableSet_Event_4
   \   00000080   8C20               MOVS     R0,#+140
   \   00000082   2056               LDRSB    R0,[R4, R0]
   \   00000084   0028               CMP      R0,#+0
   \   00000086   05D4               BMI      ??ScreenTimetableSet_Event_5
   \   00000088   8C20               MOVS     R0,#+140
   \   0000008A   8C21               MOVS     R1,#+140
   \   0000008C   6156               LDRSB    R1,[R4, R1]
   \   0000008E   491E               SUBS     R1,R1,#+1
   \   00000090   2154               STRB     R1,[R4, R0]
   \   00000092   02E0               B        ??ScreenTimetableSet_Event_6
   \                     ??ScreenTimetableSet_Event_5:
   \   00000094   8C20               MOVS     R0,#+140
   \   00000096   2221               MOVS     R1,#+34
   \   00000098   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_6:
   \   0000009A   0125               MOVS     R5,#+1
   4609                    txt[0]='>';
   \                     ??ScreenTimetableSet_Event_4:
   \   0000009C   6846               MOV      R0,SP
   \   0000009E   3E21               MOVS     R1,#+62
   \   000000A0   0170               STRB     R1,[R0, #+0]
   4610                    if (Button(txt,45,72,15,15)==1) { if(Screen->Timetable.ActorNode+1<NumberNeurons) Screen->Timetable.ActorNode++; else Screen->Timetable.ActorNode=-1; Repaint=1;} 
   \   000000A2   82B0               SUB      SP,SP,#+8
   \   000000A4   0F20               MOVS     R0,#+15
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   0F23               MOVS     R3,#+15
   \   000000AA   4822               MOVS     R2,#+72
   \   000000AC   2D21               MOVS     R1,#+45
   \   000000AE   02A8               ADD      R0,SP,#+8
   \   000000B0   ........           BL       Button
   \   000000B4   02B0               ADD      SP,SP,#+8
   \   000000B6   0128               CMP      R0,#+1
   \   000000B8   0FD1               BNE      ??ScreenTimetableSet_Event_7
   \   000000BA   8C20               MOVS     R0,#+140
   \   000000BC   2056               LDRSB    R0,[R4, R0]
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   2328               CMP      R0,#+35
   \   000000C2   05DA               BGE      ??ScreenTimetableSet_Event_8
   \   000000C4   8C20               MOVS     R0,#+140
   \   000000C6   8C21               MOVS     R1,#+140
   \   000000C8   6156               LDRSB    R1,[R4, R1]
   \   000000CA   491C               ADDS     R1,R1,#+1
   \   000000CC   2154               STRB     R1,[R4, R0]
   \   000000CE   03E0               B        ??ScreenTimetableSet_Event_9
   \                     ??ScreenTimetableSet_Event_8:
   \   000000D0   8C20               MOVS     R0,#+140
   \   000000D2   0021               MOVS     R1,#+0
   \   000000D4   C943               MVNS     R1,R1            ;; #-1
   \   000000D6   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_9:
   \   000000D8   0125               MOVS     R5,#+1
   4611                   
   4612                    
   4613                    if (Screen->Timetable.ActorNode>=0)
   \                     ??ScreenTimetableSet_Event_7:
   \   000000DA   8C20               MOVS     R0,#+140
   \   000000DC   2056               LDRSB    R0,[R4, R0]
   \   000000DE   0028               CMP      R0,#+0
   \   000000E0   40D4               BMI      ??ScreenTimetableSet_Event_10
   4614                    {
   4615                      txt[0]='<';txt[1]=0;
   \   000000E2   6846               MOV      R0,SP
   \   000000E4   3C21               MOVS     R1,#+60
   \   000000E6   0170               STRB     R1,[R0, #+0]
   \   000000E8   6846               MOV      R0,SP
   \   000000EA   0021               MOVS     R1,#+0
   \   000000EC   4170               STRB     R1,[R0, #+1]
   4616                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   0090               STR      R0,[SP, #+0]
   \   000000F4   0F23               MOVS     R3,#+15
   \   000000F6   3422               MOVS     R2,#+52
   \   000000F8   0321               MOVS     R1,#+3
   \   000000FA   02A8               ADD      R0,SP,#+8
   \   000000FC   ........           BL       Button
   \   00000100   02B0               ADD      SP,SP,#+8
   \   00000102   0128               CMP      R0,#+1
   \   00000104   0DD1               BNE      ??ScreenTimetableSet_Event_11
   \   00000106   8D20               MOVS     R0,#+141
   \   00000108   205C               LDRB     R0,[R4, R0]
   \   0000010A   0128               CMP      R0,#+1
   \   0000010C   05D3               BCC      ??ScreenTimetableSet_Event_12
   \   0000010E   8D20               MOVS     R0,#+141
   \   00000110   8D21               MOVS     R1,#+141
   \   00000112   615C               LDRB     R1,[R4, R1]
   \   00000114   491E               SUBS     R1,R1,#+1
   \   00000116   2154               STRB     R1,[R4, R0]
   \   00000118   02E0               B        ??ScreenTimetableSet_Event_13
   \                     ??ScreenTimetableSet_Event_12:
   \   0000011A   8D20               MOVS     R0,#+141
   \   0000011C   0F21               MOVS     R1,#+15
   \   0000011E   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_13:
   \   00000120   0125               MOVS     R5,#+1
   4617                      txt[0]='>';
   \                     ??ScreenTimetableSet_Event_11:
   \   00000122   6846               MOV      R0,SP
   \   00000124   3E21               MOVS     R1,#+62
   \   00000126   0170               STRB     R1,[R0, #+0]
   4618                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=0; Repaint=1;} 
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   0F20               MOVS     R0,#+15
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   0F23               MOVS     R3,#+15
   \   00000130   3422               MOVS     R2,#+52
   \   00000132   2D21               MOVS     R1,#+45
   \   00000134   02A8               ADD      R0,SP,#+8
   \   00000136   ........           BL       Button
   \   0000013A   02B0               ADD      SP,SP,#+8
   \   0000013C   0128               CMP      R0,#+1
   \   0000013E   51D1               BNE      ??ScreenTimetableSet_Event_14
   \   00000140   8D20               MOVS     R0,#+141
   \   00000142   205C               LDRB     R0,[R4, R0]
   \   00000144   401C               ADDS     R0,R0,#+1
   \   00000146   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000148   000C               LSRS     R0,R0,#+16
   \   0000014A   1028               CMP      R0,#+16
   \   0000014C   05D2               BCS      ??ScreenTimetableSet_Event_15
   \   0000014E   8D20               MOVS     R0,#+141
   \   00000150   8D21               MOVS     R1,#+141
   \   00000152   615C               LDRB     R1,[R4, R1]
   \   00000154   491C               ADDS     R1,R1,#+1
   \   00000156   2154               STRB     R1,[R4, R0]
   \   00000158   02E0               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_15:
   \   0000015A   8D20               MOVS     R0,#+141
   \   0000015C   0021               MOVS     R1,#+0
   \   0000015E   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_16:
   \   00000160   0125               MOVS     R5,#+1
   \   00000162   3FE0               B        ??ScreenTimetableSet_Event_14
   4619                    }else{
   4620                      //je¿eli znienna 
   4621                      txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Event_10:
   \   00000164   6846               MOV      R0,SP
   \   00000166   3C21               MOVS     R1,#+60
   \   00000168   0170               STRB     R1,[R0, #+0]
   \   0000016A   6846               MOV      R0,SP
   \   0000016C   0021               MOVS     R1,#+0
   \   0000016E   4170               STRB     R1,[R0, #+1]
   4622                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   0F23               MOVS     R3,#+15
   \   00000178   3422               MOVS     R2,#+52
   \   0000017A   0321               MOVS     R1,#+3
   \   0000017C   02A8               ADD      R0,SP,#+8
   \   0000017E   ........           BL       Button
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   0128               CMP      R0,#+1
   \   00000186   0DD1               BNE      ??ScreenTimetableSet_Event_17
   \   00000188   8D20               MOVS     R0,#+141
   \   0000018A   205C               LDRB     R0,[R4, R0]
   \   0000018C   0128               CMP      R0,#+1
   \   0000018E   05D3               BCC      ??ScreenTimetableSet_Event_18
   \   00000190   8D20               MOVS     R0,#+141
   \   00000192   8D21               MOVS     R1,#+141
   \   00000194   615C               LDRB     R1,[R4, R1]
   \   00000196   491E               SUBS     R1,R1,#+1
   \   00000198   2154               STRB     R1,[R4, R0]
   \   0000019A   02E0               B        ??ScreenTimetableSet_Event_19
   \                     ??ScreenTimetableSet_Event_18:
   \   0000019C   8D20               MOVS     R0,#+141
   \   0000019E   0F21               MOVS     R1,#+15
   \   000001A0   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_19:
   \   000001A2   0125               MOVS     R5,#+1
   4623                      txt[0]='>';
   \                     ??ScreenTimetableSet_Event_17:
   \   000001A4   6846               MOV      R0,SP
   \   000001A6   3E21               MOVS     R1,#+62
   \   000001A8   0170               STRB     R1,[R0, #+0]
   4624                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=99; Repaint=1;} 
   \   000001AA   82B0               SUB      SP,SP,#+8
   \   000001AC   0F20               MOVS     R0,#+15
   \   000001AE   0090               STR      R0,[SP, #+0]
   \   000001B0   0F23               MOVS     R3,#+15
   \   000001B2   3422               MOVS     R2,#+52
   \   000001B4   2D21               MOVS     R1,#+45
   \   000001B6   02A8               ADD      R0,SP,#+8
   \   000001B8   ........           BL       Button
   \   000001BC   02B0               ADD      SP,SP,#+8
   \   000001BE   0128               CMP      R0,#+1
   \   000001C0   10D1               BNE      ??ScreenTimetableSet_Event_14
   \   000001C2   8D20               MOVS     R0,#+141
   \   000001C4   205C               LDRB     R0,[R4, R0]
   \   000001C6   401C               ADDS     R0,R0,#+1
   \   000001C8   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000001CA   000C               LSRS     R0,R0,#+16
   \   000001CC   1028               CMP      R0,#+16
   \   000001CE   05D2               BCS      ??ScreenTimetableSet_Event_20
   \   000001D0   8D20               MOVS     R0,#+141
   \   000001D2   8D21               MOVS     R1,#+141
   \   000001D4   615C               LDRB     R1,[R4, R1]
   \   000001D6   491C               ADDS     R1,R1,#+1
   \   000001D8   2154               STRB     R1,[R4, R0]
   \   000001DA   02E0               B        ??ScreenTimetableSet_Event_21
   \                     ??ScreenTimetableSet_Event_20:
   \   000001DC   8D20               MOVS     R0,#+141
   \   000001DE   6321               MOVS     R1,#+99
   \   000001E0   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_21:
   \   000001E2   0125               MOVS     R5,#+1
   4625                    }
   4626                      
   4627                    
   4628                    txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Event_14:
   \   000001E4   6846               MOV      R0,SP
   \   000001E6   3C21               MOVS     R1,#+60
   \   000001E8   0170               STRB     R1,[R0, #+0]
   \   000001EA   6846               MOV      R0,SP
   \   000001EC   0021               MOVS     R1,#+0
   \   000001EE   4170               STRB     R1,[R0, #+1]
   4629                    if (Button(txt,3,24,15,15)==1) {if (Screen->Timetable.ActionType>0) Screen->Timetable.ActionType--; else Screen->Timetable.ActionType=2; Repaint=1;} 
   \   000001F0   82B0               SUB      SP,SP,#+8
   \   000001F2   0F20               MOVS     R0,#+15
   \   000001F4   0090               STR      R0,[SP, #+0]
   \   000001F6   0F23               MOVS     R3,#+15
   \   000001F8   1822               MOVS     R2,#+24
   \   000001FA   0321               MOVS     R1,#+3
   \   000001FC   02A8               ADD      R0,SP,#+8
   \   000001FE   ........           BL       Button
   \   00000202   02B0               ADD      SP,SP,#+8
   \   00000204   0128               CMP      R0,#+1
   \   00000206   0DD1               BNE      ??ScreenTimetableSet_Event_22
   \   00000208   8E20               MOVS     R0,#+142
   \   0000020A   205C               LDRB     R0,[R4, R0]
   \   0000020C   0128               CMP      R0,#+1
   \   0000020E   05D3               BCC      ??ScreenTimetableSet_Event_23
   \   00000210   8E20               MOVS     R0,#+142
   \   00000212   8E21               MOVS     R1,#+142
   \   00000214   615C               LDRB     R1,[R4, R1]
   \   00000216   491E               SUBS     R1,R1,#+1
   \   00000218   2154               STRB     R1,[R4, R0]
   \   0000021A   02E0               B        ??ScreenTimetableSet_Event_24
   \                     ??ScreenTimetableSet_Event_23:
   \   0000021C   8E20               MOVS     R0,#+142
   \   0000021E   0221               MOVS     R1,#+2
   \   00000220   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_24:
   \   00000222   0125               MOVS     R5,#+1
   4630                    txt[0]='>';
   \                     ??ScreenTimetableSet_Event_22:
   \   00000224   6846               MOV      R0,SP
   \   00000226   3E21               MOVS     R1,#+62
   \   00000228   0170               STRB     R1,[R0, #+0]
   4631                    if (Button(txt,45,24,15,15)==1) {if (Screen->Timetable.ActionType<2) Screen->Timetable.ActionType++; else Screen->Timetable.ActionType=0; Repaint=1;}  
   \   0000022A   82B0               SUB      SP,SP,#+8
   \   0000022C   0F20               MOVS     R0,#+15
   \   0000022E   0090               STR      R0,[SP, #+0]
   \   00000230   0F23               MOVS     R3,#+15
   \   00000232   1822               MOVS     R2,#+24
   \   00000234   2D21               MOVS     R1,#+45
   \   00000236   02A8               ADD      R0,SP,#+8
   \   00000238   ........           BL       Button
   \   0000023C   02B0               ADD      SP,SP,#+8
   \   0000023E   0128               CMP      R0,#+1
   \   00000240   0DD1               BNE      ??ScreenTimetableSet_Event_25
   \   00000242   8E20               MOVS     R0,#+142
   \   00000244   205C               LDRB     R0,[R4, R0]
   \   00000246   0228               CMP      R0,#+2
   \   00000248   05D2               BCS      ??ScreenTimetableSet_Event_26
   \   0000024A   8E20               MOVS     R0,#+142
   \   0000024C   8E21               MOVS     R1,#+142
   \   0000024E   615C               LDRB     R1,[R4, R1]
   \   00000250   491C               ADDS     R1,R1,#+1
   \   00000252   2154               STRB     R1,[R4, R0]
   \   00000254   02E0               B        ??ScreenTimetableSet_Event_27
   \                     ??ScreenTimetableSet_Event_26:
   \   00000256   8E20               MOVS     R0,#+142
   \   00000258   0021               MOVS     R1,#+0
   \   0000025A   2154               STRB     R1,[R4, R0]
   \                     ??ScreenTimetableSet_Event_27:
   \   0000025C   0125               MOVS     R5,#+1
   4632                    
   4633                    //jezeli przyciniêto znacznik -1h
   4634                    if ((X_up>=30) && (X_up<=42) && (Y_up>=4) && (Y_up<=16)) {if (Screen->Timetable.Min1h) Screen->Timetable.Min1h=0; else Screen->Timetable.Min1h=1;  Repaint=1;}
   \                     ??ScreenTimetableSet_Event_25:
   \   0000025E   1648               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000260   0021               MOVS     R1,#+0
   \   00000262   405E               LDRSH    R0,[R0, R1]
   \   00000264   1E28               CMP      R0,#+30
   \   00000266   17DB               BLT      ??ScreenTimetableSet_Event_2
   \   00000268   1348               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   0000026A   0021               MOVS     R1,#+0
   \   0000026C   405E               LDRSH    R0,[R0, R1]
   \   0000026E   2B28               CMP      R0,#+43
   \   00000270   12DA               BGE      ??ScreenTimetableSet_Event_2
   \   00000272   1048               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   00000274   0021               MOVS     R1,#+0
   \   00000276   405E               LDRSH    R0,[R0, R1]
   \   00000278   0428               CMP      R0,#+4
   \   0000027A   0DDB               BLT      ??ScreenTimetableSet_Event_2
   \   0000027C   0D48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000027E   0021               MOVS     R1,#+0
   \   00000280   405E               LDRSH    R0,[R0, R1]
   \   00000282   1128               CMP      R0,#+17
   \   00000284   08DA               BGE      ??ScreenTimetableSet_Event_2
   \   00000286   8F20               MOVS     R0,#+143
   \   00000288   2100               MOVS     R1,R4
   \   0000028A   8F31               ADDS     R1,R1,#+143
   \   0000028C   0978               LDRB     R1,[R1, #+0]
   \   0000028E   4A1E               SUBS     R2,R1,#+1
   \   00000290   9241               SBCS     R2,R2,R2
   \   00000292   D20F               LSRS     R2,R2,#+31
   \   00000294   2254               STRB     R2,[R4, R0]
   \   00000296   0125               MOVS     R5,#+1
   4635                  }  
   4636                  if (Repaint) MenuPaint();
   \                     ??ScreenTimetableSet_Event_2:
   \   00000298   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000029A   2D0E               LSRS     R5,R5,#+24
   \   0000029C   002D               CMP      R5,#+0
   \   0000029E   01D0               BEQ      ??ScreenTimetableSet_Event_28
   \   000002A0   ........           BL       MenuPaint
   4637                  
   4638          
   4639          }
   \                     ??ScreenTimetableSet_Event_28:
   \   000002A4   02B0               ADD      SP,SP,#+8
   \   000002A6   70BC               POP      {R4-R6}
   \   000002A8   01BC               POP      {R0}
   \   000002AA   0047               BX       R0               ;; return
   \                     ??ScreenTimetableSet_Event_0:
   \   000002AC   ........           DC32     Y_down
   \   000002B0   ........           DC32     X_down
   \   000002B4   ........           DC32     Y_up
   \   000002B8   ........           DC32     X_up
   \   000002BC   ........           DC32     MenuLevel
   4640          
   4641          
   4642          
   4643          
   4644          
   4645          
   4646          

   \                                 In section Debug.txt, align 4, keep-with-next
   4647          void ScreenAlarmSet_Paint(_Screen* Screen)
   4648          {          
   \                     ScreenAlarmSet_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4649                 List_Paint("Alarm",1,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   CB48               LDR      R0,??ScreenAlarmSet_Paint_0  ;; `?<Constant "Alarm">`
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   4650                 
   4651                 char txt[8];
   4652          
   4653                 
   4654                 
   4655                    char ind=0; 
   \   00000030   0025               MOVS     R5,#+0
   4656                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)         
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   7F21               MOVS     R1,#+127
   \   0000003A   0120               MOVS     R0,#+1
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   3421               MOVS     R1,#+52
   \   00000040   0A20               MOVS     R0,#+10
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   6423               MOVS     R3,#+100
   \   00000046   0522               MOVS     R2,#+5
   \   00000048   0221               MOVS     R1,#+2
   \   0000004A   C448               LDR      R0,??ScreenAlarmSet_Paint_0+0x4  ;; 0x6f9
   \   0000004C   C44E               LDR      R6,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000004E   3668               LDR      R6,[R6, #+0]
   \   00000050   C44F               LDR      R7,??ScreenAlarmSet_Paint_0+0xC  ;; 0xa7d
   \   00000052   7E43               MULS     R6,R7,R6
   \   00000054   C44F               LDR      R7,??ScreenAlarmSet_Paint_0+0x10  ;; Speech
   \   00000056   BE19               ADDS     R6,R7,R6
   \   00000058   3018               ADDS     R0,R6,R0
   \   0000005A   ........           BL       Label
   \   0000005E   06B0               ADD      SP,SP,#+24
   4657                    if (((Screen->Alarm.SensorNode)>=0) && (Screen->Alarm.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000060   8E20               MOVS     R0,#+142
   \   00000062   2056               LDRSB    R0,[R4, R0]
   \   00000064   0028               CMP      R0,#+0
   \   00000066   38D4               BMI      ??ScreenAlarmSet_Paint_1
   \   00000068   8E20               MOVS     R0,#+142
   \   0000006A   2056               LDRSB    R0,[R4, R0]
   \   0000006C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000006E   0014               ASRS     R0,R0,#+16
   \   00000070   FF28               CMP      R0,#+255
   \   00000072   32D0               BEQ      ??ScreenAlarmSet_Paint_1
   4658                    {
   4659                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000074   6846               MOV      R0,SP
   \   00000076   4921               MOVS     R1,#+73
   \   00000078   0170               STRB     R1,[R0, #+0]
   \   0000007A   6846               MOV      R0,SP
   \   0000007C   6421               MOVS     R1,#+100
   \   0000007E   4170               STRB     R1,[R0, #+1]
   \   00000080   6846               MOV      R0,SP
   \   00000082   3A21               MOVS     R1,#+58
   \   00000084   8170               STRB     R1,[R0, #+2]
   \   00000086   6846               MOV      R0,SP
   \   00000088   2021               MOVS     R1,#+32
   \   0000008A   C170               STRB     R1,[R0, #+3]
   \   0000008C   6846               MOV      R0,SP
   \   0000008E   0021               MOVS     R1,#+0
   \   00000090   0171               STRB     R1,[R0, #+4]
   4660                      ind=CharToStr(Screen->Alarm.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000092   0222               MOVS     R2,#+2
   \   00000094   6946               MOV      R1,SP
   \   00000096   C91C               ADDS     R1,R1,#+3
   \   00000098   8E20               MOVS     R0,#+142
   \   0000009A   2056               LDRSB    R0,[R4, R0]
   \   0000009C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009E   000E               LSRS     R0,R0,#+24
   \   000000A0   ........           BL       CharToStr
   \   000000A4   0500               MOVS     R5,R0
   4661                      txt[ind+3]=0;
   \   000000A6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000A8   2D0E               LSRS     R5,R5,#+24
   \   000000AA   6846               MOV      R0,SP
   \   000000AC   4019               ADDS     R0,R0,R5
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   C170               STRB     R1,[R0, #+3]
   4662                      Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B2   82B0               SUB      SP,SP,#+8
   \   000000B4   0020               MOVS     R0,#+0
   \   000000B6   0090               STR      R0,[SP, #+0]
   \   000000B8   7F21               MOVS     R1,#+127
   \   000000BA   0120               MOVS     R0,#+1
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   1621               MOVS     R1,#+22
   \   000000C0   ED1C               ADDS     R5,R5,#+3
   \   000000C2   2800               MOVS     R0,R5
   \   000000C4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C6   000E               LSRS     R0,R0,#+24
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   5823               MOVS     R3,#+88
   \   000000CC   1422               MOVS     R2,#+20
   \   000000CE   0221               MOVS     R1,#+2
   \   000000D0   06A8               ADD      R0,SP,#+24
   \   000000D2   ........           BL       Label
   \   000000D6   06B0               ADD      SP,SP,#+24
   \   000000D8   0FE0               B        ??ScreenAlarmSet_Paint_2
   4663                    }else{
   4664                      Label("Var",2,20, 88, 3,22,1,127,0);
   \                     ??ScreenAlarmSet_Paint_1:
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0020               MOVS     R0,#+0
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   7F21               MOVS     R1,#+127
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   1621               MOVS     R1,#+22
   \   000000E8   0320               MOVS     R0,#+3
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   5823               MOVS     R3,#+88
   \   000000EE   1422               MOVS     R2,#+20
   \   000000F0   0221               MOVS     R1,#+2
   \   000000F2   C7A0               ADR      R0,??ScreenAlarmSet_Paint_3  ;; "Var"
   \   000000F4   ........           BL       Label
   \   000000F8   06B0               ADD      SP,SP,#+24
   4665                    }
   4666                    
   4667                    
   4668                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Paint_2:
   \   000000FA   6846               MOV      R0,SP
   \   000000FC   3C21               MOVS     R1,#+60
   \   000000FE   0170               STRB     R1,[R0, #+0]
   \   00000100   6846               MOV      R0,SP
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   4170               STRB     R1,[R0, #+1]
   4669                    Button(txt,3,85,15,15); 
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0F20               MOVS     R0,#+15
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   0F23               MOVS     R3,#+15
   \   0000010E   5522               MOVS     R2,#+85
   \   00000110   0321               MOVS     R1,#+3
   \   00000112   02A8               ADD      R0,SP,#+8
   \   00000114   ........           BL       Button
   \   00000118   02B0               ADD      SP,SP,#+8
   4670                    txt[0]='>';
   \   0000011A   6846               MOV      R0,SP
   \   0000011C   3E21               MOVS     R1,#+62
   \   0000011E   0170               STRB     R1,[R0, #+0]
   4671                    Button(txt,45,85,15,15); 
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0F20               MOVS     R0,#+15
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   0F23               MOVS     R3,#+15
   \   00000128   5522               MOVS     R2,#+85
   \   0000012A   2D21               MOVS     R1,#+45
   \   0000012C   02A8               ADD      R0,SP,#+8
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   4672                    
   4673                     if (((Screen->Alarm.SensorNode)>=0) && (Screen->Alarm.SensorNode!=0xFF))
                                                                                            ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000134   8E20               MOVS     R0,#+142
   \   00000136   2056               LDRSB    R0,[R4, R0]
   \   00000138   0028               CMP      R0,#+0
   \   0000013A   1DD4               BMI      ??ScreenAlarmSet_Paint_4
   \   0000013C   8E20               MOVS     R0,#+142
   \   0000013E   2056               LDRSB    R0,[R4, R0]
   \   00000140   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000142   0014               ASRS     R0,R0,#+16
   \   00000144   FF28               CMP      R0,#+255
   \   00000146   17D0               BEQ      ??ScreenAlarmSet_Paint_4
   4674                    {
   4675                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000148   6846               MOV      R0,SP
   \   0000014A   5021               MOVS     R1,#+80
   \   0000014C   0170               STRB     R1,[R0, #+0]
   \   0000014E   6846               MOV      R0,SP
   \   00000150   3A21               MOVS     R1,#+58
   \   00000152   4170               STRB     R1,[R0, #+1]
   \   00000154   6846               MOV      R0,SP
   \   00000156   2021               MOVS     R1,#+32
   \   00000158   8170               STRB     R1,[R0, #+2]
   4676                      ind=CharToStr(Screen->Alarm.SensorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000015A   0222               MOVS     R2,#+2
   \   0000015C   6946               MOV      R1,SP
   \   0000015E   891C               ADDS     R1,R1,#+2
   \   00000160   8F20               MOVS     R0,#+143
   \   00000162   205C               LDRB     R0,[R4, R0]
   \   00000164   ........           BL       CharToStr
   \   00000168   0500               MOVS     R5,R0
   4677                      txt[ind+2]=0;
   \   0000016A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000016C   2D0E               LSRS     R5,R5,#+24
   \   0000016E   6846               MOV      R0,SP
   \   00000170   4019               ADDS     R0,R0,R5
   \   00000172   0021               MOVS     R1,#+0
   \   00000174   8170               STRB     R1,[R0, #+2]
   \   00000176   16E0               B        ??ScreenAlarmSet_Paint_5
   4678                    }else{
   4679                      txt[0]='b'; txt[1]=' '; txt[2]=' '; 
   \                     ??ScreenAlarmSet_Paint_4:
   \   00000178   6846               MOV      R0,SP
   \   0000017A   6221               MOVS     R1,#+98
   \   0000017C   0170               STRB     R1,[R0, #+0]
   \   0000017E   6846               MOV      R0,SP
   \   00000180   2021               MOVS     R1,#+32
   \   00000182   4170               STRB     R1,[R0, #+1]
   \   00000184   6846               MOV      R0,SP
   \   00000186   2021               MOVS     R1,#+32
   \   00000188   8170               STRB     R1,[R0, #+2]
   4680                      ind=CharToStr(Screen->Alarm.SensorPort, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   0000018A   0222               MOVS     R2,#+2
   \   0000018C   6946               MOV      R1,SP
   \   0000018E   491C               ADDS     R1,R1,#+1
   \   00000190   8F20               MOVS     R0,#+143
   \   00000192   205C               LDRB     R0,[R4, R0]
   \   00000194   ........           BL       CharToStr
   \   00000198   0500               MOVS     R5,R0
   4681                      txt[ind+1]=0;
   \   0000019A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000019C   2D0E               LSRS     R5,R5,#+24
   \   0000019E   6846               MOV      R0,SP
   \   000001A0   4019               ADDS     R0,R0,R5
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   4170               STRB     R1,[R0, #+1]
   4682                    }
   4683                    txt[ind+2]=0;
   \                     ??ScreenAlarmSet_Paint_5:
   \   000001A6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001A8   2D0E               LSRS     R5,R5,#+24
   \   000001AA   6846               MOV      R0,SP
   \   000001AC   4019               ADDS     R0,R0,R5
   \   000001AE   0021               MOVS     R1,#+0
   \   000001B0   8170               STRB     R1,[R0, #+2]
   4684                    Label(txt,2,20, 72 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001B2   82B0               SUB      SP,SP,#+8
   \   000001B4   0020               MOVS     R0,#+0
   \   000001B6   0090               STR      R0,[SP, #+0]
   \   000001B8   7F21               MOVS     R1,#+127
   \   000001BA   0120               MOVS     R0,#+1
   \   000001BC   03B4               PUSH     {R0,R1}
   \   000001BE   1621               MOVS     R1,#+22
   \   000001C0   AD1C               ADDS     R5,R5,#+2
   \   000001C2   2800               MOVS     R0,R5
   \   000001C4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001C6   000E               LSRS     R0,R0,#+24
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   4823               MOVS     R3,#+72
   \   000001CC   1422               MOVS     R2,#+20
   \   000001CE   0221               MOVS     R1,#+2
   \   000001D0   06A8               ADD      R0,SP,#+24
   \   000001D2   ........           BL       Label
   \   000001D6   06B0               ADD      SP,SP,#+24
   4685                  
   4686                    txt[0]='<';txt[1]=0;
   \   000001D8   6846               MOV      R0,SP
   \   000001DA   3C21               MOVS     R1,#+60
   \   000001DC   0170               STRB     R1,[R0, #+0]
   \   000001DE   6846               MOV      R0,SP
   \   000001E0   0021               MOVS     R1,#+0
   \   000001E2   4170               STRB     R1,[R0, #+1]
   4687                    Button(txt,3,69,15,15); 
   \   000001E4   82B0               SUB      SP,SP,#+8
   \   000001E6   0F20               MOVS     R0,#+15
   \   000001E8   0090               STR      R0,[SP, #+0]
   \   000001EA   0F23               MOVS     R3,#+15
   \   000001EC   4522               MOVS     R2,#+69
   \   000001EE   0321               MOVS     R1,#+3
   \   000001F0   02A8               ADD      R0,SP,#+8
   \   000001F2   ........           BL       Button
   \   000001F6   02B0               ADD      SP,SP,#+8
   4688                    txt[0]='>';
   \   000001F8   6846               MOV      R0,SP
   \   000001FA   3E21               MOVS     R1,#+62
   \   000001FC   0170               STRB     R1,[R0, #+0]
   4689                    Button(txt,45,69,15,15); 
   \   000001FE   82B0               SUB      SP,SP,#+8
   \   00000200   0F20               MOVS     R0,#+15
   \   00000202   0090               STR      R0,[SP, #+0]
   \   00000204   0F23               MOVS     R3,#+15
   \   00000206   4522               MOVS     R2,#+69
   \   00000208   2D21               MOVS     R1,#+45
   \   0000020A   02A8               ADD      R0,SP,#+8
   \   0000020C   ........           BL       Button
   \   00000210   02B0               ADD      SP,SP,#+8
   4690          
   4691          
   4692          
   4693                 
   4694                 
   4695                    Label(Speech[g_leng].Syrena,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   7F21               MOVS     R1,#+127
   \   0000021A   0120               MOVS     R0,#+1
   \   0000021C   03B4               PUSH     {R0,R1}
   \   0000021E   3421               MOVS     R1,#+52
   \   00000220   0A20               MOVS     R0,#+10
   \   00000222   03B4               PUSH     {R0,R1}
   \   00000224   3A23               MOVS     R3,#+58
   \   00000226   0522               MOVS     R2,#+5
   \   00000228   0221               MOVS     R1,#+2
   \   0000022A   7A48               LDR      R0,??ScreenAlarmSet_Paint_3+0x4  ;; 0x7bc
   \   0000022C   4C4D               LDR      R5,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000022E   2D68               LDR      R5,[R5, #+0]
   \   00000230   4C4E               LDR      R6,??ScreenAlarmSet_Paint_0+0xC  ;; 0xa7d
   \   00000232   7543               MULS     R5,R6,R5
   \   00000234   4C4E               LDR      R6,??ScreenAlarmSet_Paint_0+0x10  ;; Speech
   \   00000236   7519               ADDS     R5,R6,R5
   \   00000238   2818               ADDS     R0,R5,R0
   \   0000023A   ........           BL       Label
   \   0000023E   06B0               ADD      SP,SP,#+24
   4696                    if (((Screen->Alarm.ActorNode)>=0) && (Screen->Alarm.ActorNode!=0xFF))
                                                                                         ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000240   8C20               MOVS     R0,#+140
   \   00000242   2056               LDRSB    R0,[R4, R0]
   \   00000244   0028               CMP      R0,#+0
   \   00000246   38D4               BMI      ??ScreenAlarmSet_Paint_6
   \   00000248   8C20               MOVS     R0,#+140
   \   0000024A   2056               LDRSB    R0,[R4, R0]
   \   0000024C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000024E   0014               ASRS     R0,R0,#+16
   \   00000250   FF28               CMP      R0,#+255
   \   00000252   32D0               BEQ      ??ScreenAlarmSet_Paint_6
   4697                    {
   4698                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000254   6846               MOV      R0,SP
   \   00000256   4921               MOVS     R1,#+73
   \   00000258   0170               STRB     R1,[R0, #+0]
   \   0000025A   6846               MOV      R0,SP
   \   0000025C   6421               MOVS     R1,#+100
   \   0000025E   4170               STRB     R1,[R0, #+1]
   \   00000260   6846               MOV      R0,SP
   \   00000262   3A21               MOVS     R1,#+58
   \   00000264   8170               STRB     R1,[R0, #+2]
   \   00000266   6846               MOV      R0,SP
   \   00000268   2021               MOVS     R1,#+32
   \   0000026A   C170               STRB     R1,[R0, #+3]
   \   0000026C   6846               MOV      R0,SP
   \   0000026E   0021               MOVS     R1,#+0
   \   00000270   0171               STRB     R1,[R0, #+4]
   4699                      ind=CharToStr(Screen->Alarm.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000272   0222               MOVS     R2,#+2
   \   00000274   6946               MOV      R1,SP
   \   00000276   C91C               ADDS     R1,R1,#+3
   \   00000278   8C20               MOVS     R0,#+140
   \   0000027A   2056               LDRSB    R0,[R4, R0]
   \   0000027C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000027E   000E               LSRS     R0,R0,#+24
   \   00000280   ........           BL       CharToStr
   \   00000284   0500               MOVS     R5,R0
   4700                      txt[ind+3]=0;
   \   00000286   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000288   2D0E               LSRS     R5,R5,#+24
   \   0000028A   6846               MOV      R0,SP
   \   0000028C   4019               ADDS     R0,R0,R5
   \   0000028E   0021               MOVS     R1,#+0
   \   00000290   C170               STRB     R1,[R0, #+3]
   4701                      Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000292   82B0               SUB      SP,SP,#+8
   \   00000294   0020               MOVS     R0,#+0
   \   00000296   0090               STR      R0,[SP, #+0]
   \   00000298   7F21               MOVS     R1,#+127
   \   0000029A   0120               MOVS     R0,#+1
   \   0000029C   03B4               PUSH     {R0,R1}
   \   0000029E   1621               MOVS     R1,#+22
   \   000002A0   ED1C               ADDS     R5,R5,#+3
   \   000002A2   2800               MOVS     R0,R5
   \   000002A4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002A6   000E               LSRS     R0,R0,#+24
   \   000002A8   03B4               PUSH     {R0,R1}
   \   000002AA   2D23               MOVS     R3,#+45
   \   000002AC   1422               MOVS     R2,#+20
   \   000002AE   0221               MOVS     R1,#+2
   \   000002B0   06A8               ADD      R0,SP,#+24
   \   000002B2   ........           BL       Label
   \   000002B6   06B0               ADD      SP,SP,#+24
   \   000002B8   0FE0               B        ??ScreenAlarmSet_Paint_7
   4702                    }else{
   4703                      Label("Var",2,20, 45, 3,22,1,127,0);
   \                     ??ScreenAlarmSet_Paint_6:
   \   000002BA   82B0               SUB      SP,SP,#+8
   \   000002BC   0020               MOVS     R0,#+0
   \   000002BE   0090               STR      R0,[SP, #+0]
   \   000002C0   7F21               MOVS     R1,#+127
   \   000002C2   0120               MOVS     R0,#+1
   \   000002C4   03B4               PUSH     {R0,R1}
   \   000002C6   1621               MOVS     R1,#+22
   \   000002C8   0320               MOVS     R0,#+3
   \   000002CA   03B4               PUSH     {R0,R1}
   \   000002CC   2D23               MOVS     R3,#+45
   \   000002CE   1422               MOVS     R2,#+20
   \   000002D0   0221               MOVS     R1,#+2
   \   000002D2   4FA0               ADR      R0,??ScreenAlarmSet_Paint_3  ;; "Var"
   \   000002D4   ........           BL       Label
   \   000002D8   06B0               ADD      SP,SP,#+24
   4704                    }
   4705                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Paint_7:
   \   000002DA   6846               MOV      R0,SP
   \   000002DC   3C21               MOVS     R1,#+60
   \   000002DE   0170               STRB     R1,[R0, #+0]
   \   000002E0   6846               MOV      R0,SP
   \   000002E2   0021               MOVS     R1,#+0
   \   000002E4   4170               STRB     R1,[R0, #+1]
   4706                    Button(txt,3,42,15,15); 
   \   000002E6   82B0               SUB      SP,SP,#+8
   \   000002E8   0F20               MOVS     R0,#+15
   \   000002EA   0090               STR      R0,[SP, #+0]
   \   000002EC   0F23               MOVS     R3,#+15
   \   000002EE   2A22               MOVS     R2,#+42
   \   000002F0   0321               MOVS     R1,#+3
   \   000002F2   02A8               ADD      R0,SP,#+8
   \   000002F4   ........           BL       Button
   \   000002F8   02B0               ADD      SP,SP,#+8
   4707                    txt[0]='>';
   \   000002FA   6846               MOV      R0,SP
   \   000002FC   3E21               MOVS     R1,#+62
   \   000002FE   0170               STRB     R1,[R0, #+0]
   4708                    Button(txt,45,42,15,15); 
   \   00000300   82B0               SUB      SP,SP,#+8
   \   00000302   0F20               MOVS     R0,#+15
   \   00000304   0090               STR      R0,[SP, #+0]
   \   00000306   0F23               MOVS     R3,#+15
   \   00000308   2A22               MOVS     R2,#+42
   \   0000030A   2D21               MOVS     R1,#+45
   \   0000030C   02A8               ADD      R0,SP,#+8
   \   0000030E   ........           BL       Button
   \   00000312   02B0               ADD      SP,SP,#+8
   4709               
   4710                     if (((Screen->Alarm.ActorNode)>=0) && (Screen->Alarm.ActorNode!=0xFF))
                                                                                          ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000314   8C20               MOVS     R0,#+140
   \   00000316   2056               LDRSB    R0,[R4, R0]
   \   00000318   0028               CMP      R0,#+0
   \   0000031A   27D4               BMI      ??ScreenAlarmSet_Paint_8
   \   0000031C   8C20               MOVS     R0,#+140
   \   0000031E   2056               LDRSB    R0,[R4, R0]
   \   00000320   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000322   0014               ASRS     R0,R0,#+16
   \   00000324   FF28               CMP      R0,#+255
   \   00000326   21D0               BEQ      ??ScreenAlarmSet_Paint_8
   4711                    {
   4712                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000328   6846               MOV      R0,SP
   \   0000032A   5021               MOVS     R1,#+80
   \   0000032C   0170               STRB     R1,[R0, #+0]
   \   0000032E   6846               MOV      R0,SP
   \   00000330   3A21               MOVS     R1,#+58
   \   00000332   4170               STRB     R1,[R0, #+1]
   \   00000334   6846               MOV      R0,SP
   \   00000336   2021               MOVS     R1,#+32
   \   00000338   8170               STRB     R1,[R0, #+2]
   4713                      ind=CharToStr(Screen->Alarm.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000033A   0222               MOVS     R2,#+2
   \   0000033C   6946               MOV      R1,SP
   \   0000033E   891C               ADDS     R1,R1,#+2
   \   00000340   8D34               ADDS     R4,R4,#+141
   \   00000342   2078               LDRB     R0,[R4, #+0]
   \   00000344   ........           BL       CharToStr
   \   00000348   0500               MOVS     R5,R0
   4714                      txt[ind+2]=0;
   \   0000034A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000034C   2D0E               LSRS     R5,R5,#+24
   \   0000034E   6846               MOV      R0,SP
   \   00000350   4019               ADDS     R0,R0,R5
   \   00000352   0021               MOVS     R1,#+0
   \   00000354   8170               STRB     R1,[R0, #+2]
   \   00000356   20E0               B        ??ScreenAlarmSet_Paint_9
   \                     ??ScreenAlarmSet_Paint_0:
   \   00000358   ........           DC32     `?<Constant "Alarm">`
   \   0000035C   F9060000           DC32     0x6f9
   \   00000360   ........           DC32     g_leng
   \   00000364   7D0A0000           DC32     0xa7d
   \   00000368   ........           DC32     Speech
   4715                    }else{
   4716                      txt[0]='b'; txt[1]=' '; txt[2]=' '; 
   \                     ??ScreenAlarmSet_Paint_8:
   \   0000036C   6846               MOV      R0,SP
   \   0000036E   6221               MOVS     R1,#+98
   \   00000370   0170               STRB     R1,[R0, #+0]
   \   00000372   6846               MOV      R0,SP
   \   00000374   2021               MOVS     R1,#+32
   \   00000376   4170               STRB     R1,[R0, #+1]
   \   00000378   6846               MOV      R0,SP
   \   0000037A   2021               MOVS     R1,#+32
   \   0000037C   8170               STRB     R1,[R0, #+2]
   4717                      ind=CharToStr(Screen->Alarm.ActorPort, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   0000037E   0222               MOVS     R2,#+2
   \   00000380   6946               MOV      R1,SP
   \   00000382   491C               ADDS     R1,R1,#+1
   \   00000384   8D34               ADDS     R4,R4,#+141
   \   00000386   2078               LDRB     R0,[R4, #+0]
   \   00000388   ........           BL       CharToStr
   \   0000038C   0500               MOVS     R5,R0
   4718                      txt[ind+1]=0;
   \   0000038E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000390   2D0E               LSRS     R5,R5,#+24
   \   00000392   6846               MOV      R0,SP
   \   00000394   4019               ADDS     R0,R0,R5
   \   00000396   0021               MOVS     R1,#+0
   \   00000398   4170               STRB     R1,[R0, #+1]
   4719                    }
   4720                    txt[ind+2]=0;
   \                     ??ScreenAlarmSet_Paint_9:
   \   0000039A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000039C   2D0E               LSRS     R5,R5,#+24
   \   0000039E   6846               MOV      R0,SP
   \   000003A0   4019               ADDS     R0,R0,R5
   \   000003A2   0021               MOVS     R1,#+0
   \   000003A4   8170               STRB     R1,[R0, #+2]
   4721                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000003A6   82B0               SUB      SP,SP,#+8
   \   000003A8   0020               MOVS     R0,#+0
   \   000003AA   0090               STR      R0,[SP, #+0]
   \   000003AC   7F21               MOVS     R1,#+127
   \   000003AE   0120               MOVS     R0,#+1
   \   000003B0   03B4               PUSH     {R0,R1}
   \   000003B2   1621               MOVS     R1,#+22
   \   000003B4   AD1C               ADDS     R5,R5,#+2
   \   000003B6   2800               MOVS     R0,R5
   \   000003B8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003BA   000E               LSRS     R0,R0,#+24
   \   000003BC   03B4               PUSH     {R0,R1}
   \   000003BE   1D23               MOVS     R3,#+29
   \   000003C0   1422               MOVS     R2,#+20
   \   000003C2   0221               MOVS     R1,#+2
   \   000003C4   06A8               ADD      R0,SP,#+24
   \   000003C6   ........           BL       Label
   \   000003CA   06B0               ADD      SP,SP,#+24
   4722             
   4723                    txt[0]='<';txt[1]=0;
   \   000003CC   6846               MOV      R0,SP
   \   000003CE   3C21               MOVS     R1,#+60
   \   000003D0   0170               STRB     R1,[R0, #+0]
   \   000003D2   6846               MOV      R0,SP
   \   000003D4   0021               MOVS     R1,#+0
   \   000003D6   4170               STRB     R1,[R0, #+1]
   4724                    Button(txt,3,26,15,15); 
   \   000003D8   82B0               SUB      SP,SP,#+8
   \   000003DA   0F20               MOVS     R0,#+15
   \   000003DC   0090               STR      R0,[SP, #+0]
   \   000003DE   0F23               MOVS     R3,#+15
   \   000003E0   1A22               MOVS     R2,#+26
   \   000003E2   0321               MOVS     R1,#+3
   \   000003E4   02A8               ADD      R0,SP,#+8
   \   000003E6   ........           BL       Button
   \   000003EA   02B0               ADD      SP,SP,#+8
   4725                    txt[0]='>';
   \   000003EC   6846               MOV      R0,SP
   \   000003EE   3E21               MOVS     R1,#+62
   \   000003F0   0170               STRB     R1,[R0, #+0]
   4726                    Button(txt,45,26,15,15); 
   \   000003F2   82B0               SUB      SP,SP,#+8
   \   000003F4   0F20               MOVS     R0,#+15
   \   000003F6   0090               STR      R0,[SP, #+0]
   \   000003F8   0F23               MOVS     R3,#+15
   \   000003FA   1A22               MOVS     R2,#+26
   \   000003FC   2D21               MOVS     R1,#+45
   \   000003FE   02A8               ADD      R0,SP,#+8
   \   00000400   ........           BL       Button
   \   00000404   02B0               ADD      SP,SP,#+8
   4727                 
   4728          }
   \   00000406   03B0               ADD      SP,SP,#+12
   \   00000408   F0BC               POP      {R4-R7}
   \   0000040A   01BC               POP      {R0}
   \   0000040C   0047               BX       R0               ;; return
   \   0000040E   C046               Nop      
   \                     ??ScreenAlarmSet_Paint_3:
   \   00000410   56617200           DC8      "Var"
   \   00000414   BC070000           DC32     0x7bc
   4729          

   \                                 In section Debug.txt, align 4, keep-with-next
   4730          void ScreenAlarmSet_Event(_Screen* Screen)
   4731          {
   \                     ScreenAlarmSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4732             char Repaint=0;
   \   00000004   0027               MOVS     R7,#+0
   4733                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   A548               LDR      R0,??ScreenAlarmSet_Event_0  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   A448               LDR      R0,??ScreenAlarmSet_Event_0+0x4  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   A448               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   A348               LDR      R0,??ScreenAlarmSet_Event_0+0xC  ;; X_up
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   405F               LDRSH    R0,[R0, R5]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   08D5               BPL      ??ScreenAlarmSet_Event_1
   4734                  {
   4735                    MenuLevel=(MenuLevel/10);
   \   00000034   A048               LDR      R0,??ScreenAlarmSet_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   9E49               LDR      R1,??ScreenAlarmSet_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
   4736                    Repaint=1;
   \   00000042   0127               MOVS     R7,#+1
   \   00000044   25E1               B        ??ScreenAlarmSet_Event_2
   4737                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenAlarmSet_Event_1:
   \   00000046   9848               LDR      R0,??ScreenAlarmSet_Event_0  ;; Y_down
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   405E               LDRSH    R0,[R0, R1]
   \   0000004C   7028               CMP      R0,#+112
   \   0000004E   05DB               BLT      ??ScreenAlarmSet_Event_3
   \   00000050   9748               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   7028               CMP      R0,#+112
   \   00000058   00DB               BLT      .+4
   \   0000005A   1AE1               B        ??ScreenAlarmSet_Event_2
   4738                  { 
   4739                    
   4740                    char MaxSensorPort=0;
   \                     ??ScreenAlarmSet_Event_3:
   \   0000005C   0025               MOVS     R5,#+0
   4741                    if (((Screen->Alarm.SensorNode)>=0) && (Screen->Alarm.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   0000005E   8E20               MOVS     R0,#+142
   \   00000060   2056               LDRSB    R0,[R4, R0]
   \   00000062   0028               CMP      R0,#+0
   \   00000064   07D4               BMI      ??ScreenAlarmSet_Event_4
   \   00000066   8E20               MOVS     R0,#+142
   \   00000068   2056               LDRSB    R0,[R4, R0]
   \   0000006A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000006C   0014               ASRS     R0,R0,#+16
   \   0000006E   FF28               CMP      R0,#+255
   \   00000070   01D0               BEQ      ??ScreenAlarmSet_Event_4
   4742                    {
   4743                      MaxSensorPort=NumberNeuronsPort;
   \   00000072   1025               MOVS     R5,#+16
   \   00000074   00E0               B        ??ScreenAlarmSet_Event_5
   4744                    }else{
   4745                      MaxSensorPort=100; 
   \                     ??ScreenAlarmSet_Event_4:
   \   00000076   6425               MOVS     R5,#+100
   4746                    }
   4747                    
   4748                    char MaxActorPort=0;
   \                     ??ScreenAlarmSet_Event_5:
   \   00000078   0026               MOVS     R6,#+0
   4749                    if (((Screen->Alarm.ActorNode)>=0) && (Screen->Alarm.ActorNode!=0xFF))
                                                                                         ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   0000007A   8C20               MOVS     R0,#+140
   \   0000007C   2056               LDRSB    R0,[R4, R0]
   \   0000007E   0028               CMP      R0,#+0
   \   00000080   07D4               BMI      ??ScreenAlarmSet_Event_6
   \   00000082   8C20               MOVS     R0,#+140
   \   00000084   2056               LDRSB    R0,[R4, R0]
   \   00000086   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000088   0014               ASRS     R0,R0,#+16
   \   0000008A   FF28               CMP      R0,#+255
   \   0000008C   01D0               BEQ      ??ScreenAlarmSet_Event_6
   4750                    {
   4751                      MaxActorPort=NumberNeuronsPort;
   \   0000008E   1026               MOVS     R6,#+16
   \   00000090   00E0               B        ??ScreenAlarmSet_Event_7
   4752                    }else{
   4753                      MaxActorPort=100; 
   \                     ??ScreenAlarmSet_Event_6:
   \   00000092   6426               MOVS     R6,#+100
   4754                    }
   4755                    
   4756                    
   4757                    char txt[5];         
   4758                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_7:
   \   00000094   6846               MOV      R0,SP
   \   00000096   3C21               MOVS     R1,#+60
   \   00000098   0170               STRB     R1,[R0, #+0]
   \   0000009A   6846               MOV      R0,SP
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   4170               STRB     R1,[R0, #+1]
   4759                    if (Button(txt,3,85,15,15)==1) { if(Screen->Alarm.SensorNode>=0) Screen->Alarm.SensorNode--; else Screen->Alarm.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   0F20               MOVS     R0,#+15
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   0F23               MOVS     R3,#+15
   \   000000A8   5522               MOVS     R2,#+85
   \   000000AA   0321               MOVS     R1,#+3
   \   000000AC   02A8               ADD      R0,SP,#+8
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   \   000000B4   0128               CMP      R0,#+1
   \   000000B6   0DD1               BNE      ??ScreenAlarmSet_Event_8
   \   000000B8   8E20               MOVS     R0,#+142
   \   000000BA   2056               LDRSB    R0,[R4, R0]
   \   000000BC   0028               CMP      R0,#+0
   \   000000BE   05D4               BMI      ??ScreenAlarmSet_Event_9
   \   000000C0   8E20               MOVS     R0,#+142
   \   000000C2   8E21               MOVS     R1,#+142
   \   000000C4   6156               LDRSB    R1,[R4, R1]
   \   000000C6   491E               SUBS     R1,R1,#+1
   \   000000C8   2154               STRB     R1,[R4, R0]
   \   000000CA   02E0               B        ??ScreenAlarmSet_Event_10
   \                     ??ScreenAlarmSet_Event_9:
   \   000000CC   8E20               MOVS     R0,#+142
   \   000000CE   2221               MOVS     R1,#+34
   \   000000D0   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_10:
   \   000000D2   0127               MOVS     R7,#+1
   4760                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_8:
   \   000000D4   6846               MOV      R0,SP
   \   000000D6   3E21               MOVS     R1,#+62
   \   000000D8   0170               STRB     R1,[R0, #+0]
   4761                    if (Button(txt,45,85,15,15)==1) { if(Screen->Alarm.SensorNode+1<NumberNeurons) Screen->Alarm.SensorNode++; else Screen->Alarm.SensorNode=-1; Repaint=1;} 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   0F23               MOVS     R3,#+15
   \   000000E2   5522               MOVS     R2,#+85
   \   000000E4   2D21               MOVS     R1,#+45
   \   000000E6   02A8               ADD      R0,SP,#+8
   \   000000E8   ........           BL       Button
   \   000000EC   02B0               ADD      SP,SP,#+8
   \   000000EE   0128               CMP      R0,#+1
   \   000000F0   0FD1               BNE      ??ScreenAlarmSet_Event_11
   \   000000F2   8E20               MOVS     R0,#+142
   \   000000F4   2056               LDRSB    R0,[R4, R0]
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   2328               CMP      R0,#+35
   \   000000FA   05DA               BGE      ??ScreenAlarmSet_Event_12
   \   000000FC   8E20               MOVS     R0,#+142
   \   000000FE   8E21               MOVS     R1,#+142
   \   00000100   6156               LDRSB    R1,[R4, R1]
   \   00000102   491C               ADDS     R1,R1,#+1
   \   00000104   2154               STRB     R1,[R4, R0]
   \   00000106   03E0               B        ??ScreenAlarmSet_Event_13
   \                     ??ScreenAlarmSet_Event_12:
   \   00000108   8E20               MOVS     R0,#+142
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   C943               MVNS     R1,R1            ;; #-1
   \   0000010E   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_13:
   \   00000110   0127               MOVS     R7,#+1
   4762                   
   4763                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_11:
   \   00000112   6846               MOV      R0,SP
   \   00000114   3C21               MOVS     R1,#+60
   \   00000116   0170               STRB     R1,[R0, #+0]
   \   00000118   6846               MOV      R0,SP
   \   0000011A   0021               MOVS     R1,#+0
   \   0000011C   4170               STRB     R1,[R0, #+1]
   4764                    if (Button(txt,3,69,15,15)==1) { if(Screen->Alarm.SensorPort>1) Screen->Alarm.SensorPort--; else Screen->Alarm.SensorPort=MaxSensorPort-1; Repaint=1;}  
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0F20               MOVS     R0,#+15
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   0F23               MOVS     R3,#+15
   \   00000126   4522               MOVS     R2,#+69
   \   00000128   0321               MOVS     R1,#+3
   \   0000012A   02A8               ADD      R0,SP,#+8
   \   0000012C   ........           BL       Button
   \   00000130   02B0               ADD      SP,SP,#+8
   \   00000132   0128               CMP      R0,#+1
   \   00000134   0DD1               BNE      ??ScreenAlarmSet_Event_14
   \   00000136   8F20               MOVS     R0,#+143
   \   00000138   205C               LDRB     R0,[R4, R0]
   \   0000013A   0228               CMP      R0,#+2
   \   0000013C   05D3               BCC      ??ScreenAlarmSet_Event_15
   \   0000013E   8F20               MOVS     R0,#+143
   \   00000140   8F21               MOVS     R1,#+143
   \   00000142   615C               LDRB     R1,[R4, R1]
   \   00000144   491E               SUBS     R1,R1,#+1
   \   00000146   2154               STRB     R1,[R4, R0]
   \   00000148   02E0               B        ??ScreenAlarmSet_Event_16
   \                     ??ScreenAlarmSet_Event_15:
   \   0000014A   8F20               MOVS     R0,#+143
   \   0000014C   691E               SUBS     R1,R5,#+1
   \   0000014E   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_16:
   \   00000150   0127               MOVS     R7,#+1
   4765                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_14:
   \   00000152   6846               MOV      R0,SP
   \   00000154   3E21               MOVS     R1,#+62
   \   00000156   0170               STRB     R1,[R0, #+0]
   4766                    if (Button(txt,45,69,15,15)==1) { if(Screen->Alarm.SensorPort+1<MaxSensorPort) Screen->Alarm.SensorPort++; else Screen->Alarm.SensorPort=0; Repaint=1;} 
   \   00000158   82B0               SUB      SP,SP,#+8
   \   0000015A   0F20               MOVS     R0,#+15
   \   0000015C   0090               STR      R0,[SP, #+0]
   \   0000015E   0F23               MOVS     R3,#+15
   \   00000160   4522               MOVS     R2,#+69
   \   00000162   2D21               MOVS     R1,#+45
   \   00000164   02A8               ADD      R0,SP,#+8
   \   00000166   ........           BL       Button
   \   0000016A   02B0               ADD      SP,SP,#+8
   \   0000016C   0128               CMP      R0,#+1
   \   0000016E   10D1               BNE      ??ScreenAlarmSet_Event_17
   \   00000170   8F20               MOVS     R0,#+143
   \   00000172   205C               LDRB     R0,[R4, R0]
   \   00000174   401C               ADDS     R0,R0,#+1
   \   00000176   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000178   2D0E               LSRS     R5,R5,#+24
   \   0000017A   A842               CMP      R0,R5
   \   0000017C   05DA               BGE      ??ScreenAlarmSet_Event_18
   \   0000017E   8F20               MOVS     R0,#+143
   \   00000180   8F21               MOVS     R1,#+143
   \   00000182   615C               LDRB     R1,[R4, R1]
   \   00000184   491C               ADDS     R1,R1,#+1
   \   00000186   2154               STRB     R1,[R4, R0]
   \   00000188   02E0               B        ??ScreenAlarmSet_Event_19
   \                     ??ScreenAlarmSet_Event_18:
   \   0000018A   8F20               MOVS     R0,#+143
   \   0000018C   0021               MOVS     R1,#+0
   \   0000018E   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_19:
   \   00000190   0127               MOVS     R7,#+1
   4767                   
   4768                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_17:
   \   00000192   6846               MOV      R0,SP
   \   00000194   3C21               MOVS     R1,#+60
   \   00000196   0170               STRB     R1,[R0, #+0]
   \   00000198   6846               MOV      R0,SP
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   4170               STRB     R1,[R0, #+1]
   4769                    if (Button(txt,3,42,15,15)==1) { if(Screen->Alarm.ActorNode>=0) Screen->Alarm.ActorNode--; else Screen->Alarm.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0F20               MOVS     R0,#+15
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   0F23               MOVS     R3,#+15
   \   000001A6   2A22               MOVS     R2,#+42
   \   000001A8   0321               MOVS     R1,#+3
   \   000001AA   02A8               ADD      R0,SP,#+8
   \   000001AC   ........           BL       Button
   \   000001B0   02B0               ADD      SP,SP,#+8
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   0DD1               BNE      ??ScreenAlarmSet_Event_20
   \   000001B6   8C20               MOVS     R0,#+140
   \   000001B8   2056               LDRSB    R0,[R4, R0]
   \   000001BA   0028               CMP      R0,#+0
   \   000001BC   05D4               BMI      ??ScreenAlarmSet_Event_21
   \   000001BE   8C20               MOVS     R0,#+140
   \   000001C0   8C21               MOVS     R1,#+140
   \   000001C2   6156               LDRSB    R1,[R4, R1]
   \   000001C4   491E               SUBS     R1,R1,#+1
   \   000001C6   2154               STRB     R1,[R4, R0]
   \   000001C8   02E0               B        ??ScreenAlarmSet_Event_22
   \                     ??ScreenAlarmSet_Event_21:
   \   000001CA   8C20               MOVS     R0,#+140
   \   000001CC   2221               MOVS     R1,#+34
   \   000001CE   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_22:
   \   000001D0   0127               MOVS     R7,#+1
   4770                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_20:
   \   000001D2   6846               MOV      R0,SP
   \   000001D4   3E21               MOVS     R1,#+62
   \   000001D6   0170               STRB     R1,[R0, #+0]
   4771                    if (Button(txt,45,42,15,15)==1) { if(Screen->Alarm.ActorNode+1<NumberNeurons) Screen->Alarm.ActorNode++; else Screen->Alarm.ActorNode=-1; Repaint=1;} 
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0F20               MOVS     R0,#+15
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   0F23               MOVS     R3,#+15
   \   000001E0   2A22               MOVS     R2,#+42
   \   000001E2   2D21               MOVS     R1,#+45
   \   000001E4   02A8               ADD      R0,SP,#+8
   \   000001E6   ........           BL       Button
   \   000001EA   02B0               ADD      SP,SP,#+8
   \   000001EC   0128               CMP      R0,#+1
   \   000001EE   0FD1               BNE      ??ScreenAlarmSet_Event_23
   \   000001F0   8C20               MOVS     R0,#+140
   \   000001F2   2056               LDRSB    R0,[R4, R0]
   \   000001F4   401C               ADDS     R0,R0,#+1
   \   000001F6   2328               CMP      R0,#+35
   \   000001F8   05DA               BGE      ??ScreenAlarmSet_Event_24
   \   000001FA   8C20               MOVS     R0,#+140
   \   000001FC   8C21               MOVS     R1,#+140
   \   000001FE   6156               LDRSB    R1,[R4, R1]
   \   00000200   491C               ADDS     R1,R1,#+1
   \   00000202   2154               STRB     R1,[R4, R0]
   \   00000204   03E0               B        ??ScreenAlarmSet_Event_25
   \                     ??ScreenAlarmSet_Event_24:
   \   00000206   8C20               MOVS     R0,#+140
   \   00000208   0021               MOVS     R1,#+0
   \   0000020A   C943               MVNS     R1,R1            ;; #-1
   \   0000020C   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_25:
   \   0000020E   0127               MOVS     R7,#+1
   4772                   
   4773                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_23:
   \   00000210   6846               MOV      R0,SP
   \   00000212   3C21               MOVS     R1,#+60
   \   00000214   0170               STRB     R1,[R0, #+0]
   \   00000216   6846               MOV      R0,SP
   \   00000218   0021               MOVS     R1,#+0
   \   0000021A   4170               STRB     R1,[R0, #+1]
   4774                    if (Button(txt,3,26,15,15)==1) { if(Screen->Alarm.ActorPort>1) Screen->Alarm.ActorPort--; else Screen->Alarm.ActorPort=MaxActorPort-1; Repaint=1;}  
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   0F20               MOVS     R0,#+15
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   0F23               MOVS     R3,#+15
   \   00000224   1A22               MOVS     R2,#+26
   \   00000226   0321               MOVS     R1,#+3
   \   00000228   02A8               ADD      R0,SP,#+8
   \   0000022A   ........           BL       Button
   \   0000022E   02B0               ADD      SP,SP,#+8
   \   00000230   0128               CMP      R0,#+1
   \   00000232   0DD1               BNE      ??ScreenAlarmSet_Event_26
   \   00000234   8D20               MOVS     R0,#+141
   \   00000236   205C               LDRB     R0,[R4, R0]
   \   00000238   0228               CMP      R0,#+2
   \   0000023A   05D3               BCC      ??ScreenAlarmSet_Event_27
   \   0000023C   8D20               MOVS     R0,#+141
   \   0000023E   8D21               MOVS     R1,#+141
   \   00000240   615C               LDRB     R1,[R4, R1]
   \   00000242   491E               SUBS     R1,R1,#+1
   \   00000244   2154               STRB     R1,[R4, R0]
   \   00000246   02E0               B        ??ScreenAlarmSet_Event_28
   \                     ??ScreenAlarmSet_Event_27:
   \   00000248   8D20               MOVS     R0,#+141
   \   0000024A   711E               SUBS     R1,R6,#+1
   \   0000024C   2154               STRB     R1,[R4, R0]
   \                     ??ScreenAlarmSet_Event_28:
   \   0000024E   0127               MOVS     R7,#+1
   4775                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_26:
   \   00000250   6846               MOV      R0,SP
   \   00000252   3E21               MOVS     R1,#+62
   \   00000254   0170               STRB     R1,[R0, #+0]
   4776                    if (Button(txt,45,26,15,15)==1) { if(Screen->Alarm.ActorPort+1<MaxActorPort) Screen->Thermo.ActorPort++; else Screen->Alarm.ActorPort=0; Repaint=1;} 
   \   00000256   82B0               SUB      SP,SP,#+8
   \   00000258   0F20               MOVS     R0,#+15
   \   0000025A   0090               STR      R0,[SP, #+0]
   \   0000025C   0F23               MOVS     R3,#+15
   \   0000025E   1A22               MOVS     R2,#+26
   \   00000260   2D21               MOVS     R1,#+45
   \   00000262   02A8               ADD      R0,SP,#+8
   \   00000264   ........           BL       Button
   \   00000268   02B0               ADD      SP,SP,#+8
   \   0000026A   0128               CMP      R0,#+1
   \   0000026C   11D1               BNE      ??ScreenAlarmSet_Event_2
   \   0000026E   8D20               MOVS     R0,#+141
   \   00000270   205C               LDRB     R0,[R4, R0]
   \   00000272   401C               ADDS     R0,R0,#+1
   \   00000274   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000276   360E               LSRS     R6,R6,#+24
   \   00000278   B042               CMP      R0,R6
   \   0000027A   06DA               BGE      ??ScreenAlarmSet_Event_29
   \   0000027C   8D20               MOVS     R0,#+141
   \   0000027E   2100               MOVS     R1,R4
   \   00000280   8D31               ADDS     R1,R1,#+141
   \   00000282   0978               LDRB     R1,[R1, #+0]
   \   00000284   491C               ADDS     R1,R1,#+1
   \   00000286   2154               STRB     R1,[R4, R0]
   \   00000288   02E0               B        ??ScreenAlarmSet_Event_30
   \                     ??ScreenAlarmSet_Event_29:
   \   0000028A   8D34               ADDS     R4,R4,#+141
   \   0000028C   0020               MOVS     R0,#+0
   \   0000028E   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenAlarmSet_Event_30:
   \   00000290   0127               MOVS     R7,#+1
   4777                        
   4778                    
   4779                    
   4780                    /*txt[0]='<';txt[1]=0;
   4781                    if (Button(txt,3,85,15,15)==1) { if(Screen->Alarm.SensorNode>0) Screen->Alarm.SensorNode--; else Screen->Alarm.SensorNode=NumberNeurons-1; Repaint=1;}  
   4782                    txt[0]='>';
   4783                    if (Button(txt,45,85,15,15)==1) { if(Screen->Alarm.SensorNode+1<NumberNeurons) Screen->Alarm.SensorNode++; else Screen->Alarm.SensorNode=0; Repaint=1;} 
   4784                   
   4785                    txt[0]='<';txt[1]=0;
   4786                    if (Button(txt,3,69,15,15)==1) { if(Screen->Alarm.SensorPort>0) Screen->Alarm.SensorPort--; else Screen->Alarm.SensorPort=NumberReg-1; Repaint=1;}  
   4787                    txt[0]='>';
   4788                    if (Button(txt,45,69,15,15)==1) { if(Screen->Alarm.SensorPort+1<NumberReg) Screen->Alarm.SensorPort++; else Screen->Alarm.SensorPort=0; Repaint=1;} 
   4789                   
   4790                    txt[0]='<';txt[1]=0;
   4791                    if (Button(txt,3,42,15,15)==1) { if(Screen->Alarm.ActorNode-1>0) Screen->Alarm.ActorNode--; else Screen->Alarm.ActorNode=NumberNeurons-1; Repaint=1;}  
   4792                    txt[0]='>';
   4793                    if (Button(txt,45,42,15,15)==1) { if(Screen->Alarm.ActorNode+1<NumberNeurons) Screen->Alarm.ActorNode++; else Screen->Alarm.ActorNode=0; Repaint=1;} 
   4794                   
   4795                    txt[0]='<';txt[1]=0;
   4796                    if (Button(txt,3,26,15,15)==1) { if(Screen->Alarm.ActorPort>0) Screen->Alarm.ActorPort--; else Screen->Alarm.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   4797                    txt[0]='>';
   4798                    if (Button(txt,45,26,15,15)==1) { if(Screen->Alarm.ActorPort+1<NumberNeuronsPort) Screen->Alarm.ActorPort++; else Screen->Alarm.ActorPort=0; Repaint=1;} 
   4799                    */
   4800                  }
   4801                  if (Repaint) MenuPaint();
   \                     ??ScreenAlarmSet_Event_2:
   \   00000292   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000294   3F0E               LSRS     R7,R7,#+24
   \   00000296   002F               CMP      R7,#+0
   \   00000298   01D0               BEQ      ??ScreenAlarmSet_Event_31
   \   0000029A   ........           BL       MenuPaint
   4802          }
   \                     ??ScreenAlarmSet_Event_31:
   \   0000029E   03B0               ADD      SP,SP,#+12
   \   000002A0   F0BC               POP      {R4-R7}
   \   000002A2   01BC               POP      {R0}
   \   000002A4   0047               BX       R0               ;; return
   \   000002A6   C046               Nop      
   \                     ??ScreenAlarmSet_Event_0:
   \   000002A8   ........           DC32     Y_down
   \   000002AC   ........           DC32     X_down
   \   000002B0   ........           DC32     Y_up
   \   000002B4   ........           DC32     X_up
   \   000002B8   ........           DC32     MenuLevel
   4803          
   4804          
   4805          
   4806          
   4807          
   4808          

   \                                 In section Debug.txt, align 4, keep-with-next
   4809          void ZoneButon(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring)
   4810          {
   \                     ZoneButon:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   1E00               MOVS     R6,R3
   \   00000008   6846               MOV      R0,SP
   \   0000000A   077E               LDRB     R7,[R0, #+24]
   4811           if (height>12)
   \   0000000C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000000E   3F0E               LSRS     R7,R7,#+24
   \   00000010   0D2F               CMP      R7,#+13
   \   00000012   3FD3               BCC      ??ZoneButon_0
   4812           {
   4813            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000014   0221               MOVS     R1,#+2
   \   00000016   3800               MOVS     R0,R7
   \   00000018   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000001A   000E               LSRS     R0,R0,#+24
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   3300               MOVS     R3,R6
   \   00000020   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000022   1B0E               LSRS     R3,R3,#+24
   \   00000024   2A00               MOVS     R2,R5
   \   00000026   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000028   120E               LSRS     R2,R2,#+24
   \   0000002A   2100               MOVS     R1,R4
   \   0000002C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000002E   090E               LSRS     R1,R1,#+24
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   ........           BL       Zone
   \   00000036   02B0               ADD      SP,SP,#+8
   4814            Label(Vstring,0,poz_X+2,poz_Y+height-10,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   7F21               MOVS     R1,#+127
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   0A21               MOVS     R1,#+10
   \   00000046   0320               MOVS     R0,#+3
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000004C   2D0E               LSRS     R5,R5,#+24
   \   0000004E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000050   3F0E               LSRS     R7,R7,#+24
   \   00000052   EB19               ADDS     R3,R5,R7
   \   00000054   0A3B               SUBS     R3,R3,#+10
   \   00000056   2200               MOVS     R2,R4
   \   00000058   921C               ADDS     R2,R2,#+2
   \   0000005A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000005C   120E               LSRS     R2,R2,#+24
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   0D98               LDR      R0,[SP, #+52]
   \   00000062   ........           BL       Label
   \   00000066   06B0               ADD      SP,SP,#+24
   4815            Zone(_Label,poz_X+2,poz_Y+2,width-4,height-12,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   00000068   0121               MOVS     R1,#+1
   \   0000006A   0C3F               SUBS     R7,R7,#+12
   \   0000006C   3800               MOVS     R0,R7
   \   0000006E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000070   000E               LSRS     R0,R0,#+24
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   331F               SUBS     R3,R6,#+4
   \   00000076   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000078   1B0E               LSRS     R3,R3,#+24
   \   0000007A   AD1C               ADDS     R5,R5,#+2
   \   0000007C   2A00               MOVS     R2,R5
   \   0000007E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000080   120E               LSRS     R2,R2,#+24
   \   00000082   A41C               ADDS     R4,R4,#+2
   \   00000084   2100               MOVS     R1,R4
   \   00000086   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000088   090E               LSRS     R1,R1,#+24
   \   0000008A   0298               LDR      R0,[SP, #+8]
   \   0000008C   ........           BL       Zone
   \   00000090   02B0               ADD      SP,SP,#+8
   \   00000092   3CE0               B        ??ZoneButon_1
   4816           }else{
   4817            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with, LineType- typ lini 0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana
   \                     ??ZoneButon_0:
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   3800               MOVS     R0,R7
   \   00000098   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   3300               MOVS     R3,R6
   \   000000A0   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000A2   1B0E               LSRS     R3,R3,#+24
   \   000000A4   2A00               MOVS     R2,R5
   \   000000A6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000A8   120E               LSRS     R2,R2,#+24
   \   000000AA   2100               MOVS     R1,R4
   \   000000AC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000AE   090E               LSRS     R1,R1,#+24
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   ........           BL       Zone
   \   000000B6   02B0               ADD      SP,SP,#+8
   4818            
   4819            Label(Vstring,0,poz_X+2,poz_Y+1,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   7F21               MOVS     R1,#+127
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   0A21               MOVS     R1,#+10
   \   000000C6   0320               MOVS     R0,#+3
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000CC   2D0E               LSRS     R5,R5,#+24
   \   000000CE   2B00               MOVS     R3,R5
   \   000000D0   5B1C               ADDS     R3,R3,#+1
   \   000000D2   2200               MOVS     R2,R4
   \   000000D4   921C               ADDS     R2,R2,#+2
   \   000000D6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000D8   120E               LSRS     R2,R2,#+24
   \   000000DA   0021               MOVS     R1,#+0
   \   000000DC   0D98               LDR      R0,[SP, #+52]
   \   000000DE   ........           BL       Label
   \   000000E2   06B0               ADD      SP,SP,#+24
   4820            Zone(_Label,poz_X+17,poz_Y+2,width-19,height-4,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   000000E4   0121               MOVS     R1,#+1
   \   000000E6   381F               SUBS     R0,R7,#+4
   \   000000E8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000EA   000E               LSRS     R0,R0,#+24
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   133E               SUBS     R6,R6,#+19
   \   000000F0   3300               MOVS     R3,R6
   \   000000F2   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000F4   1B0E               LSRS     R3,R3,#+24
   \   000000F6   AD1C               ADDS     R5,R5,#+2
   \   000000F8   2A00               MOVS     R2,R5
   \   000000FA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000FC   120E               LSRS     R2,R2,#+24
   \   000000FE   1134               ADDS     R4,R4,#+17
   \   00000100   2100               MOVS     R1,R4
   \   00000102   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000104   090E               LSRS     R1,R1,#+24
   \   00000106   0298               LDR      R0,[SP, #+8]
   \   00000108   ........           BL       Zone
   \   0000010C   02B0               ADD      SP,SP,#+8
   4821             
   4822           }
   4823          }
   \                     ??ZoneButon_1:
   \   0000010E   01B0               ADD      SP,SP,#+4
   \   00000110   F0BC               POP      {R4-R7}
   \   00000112   01BC               POP      {R0}
   \   00000114   0047               BX       R0               ;; return
   4824          

   \                                 In section Debug.txt, align 4, keep-with-next
   4825          void ZoneGraph(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring, _Graph *Graph)
   4826          {
   \                     ZoneGraph:
   \   00000000   FBB5               PUSH     {R0,R1,R3-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   08A8               ADD      R0,SP,#+32
   \   00000008   0678               LDRB     R6,[R0, #+0]
   \   0000000A   0A9F               LDR      R7,[SP, #+40]
   4827             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   0000000C   3878               LDRB     R0,[R7, #+0]
   \   0000000E   0128               CMP      R0,#+1
   \   00000010   17D3               BCC      ??ZoneGraph_0
   \   00000012   3878               LDRB     R0,[R7, #+0]
   \   00000014   0828               CMP      R0,#+8
   \   00000016   14D2               BCS      ??ZoneGraph_0
   4828             {
   4829               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000018   82B0               SUB      SP,SP,#+8
   \   0000001A   1220               MOVS     R0,#+18
   \   0000001C   0090               STR      R0,[SP, #+0]
   \   0000001E   1223               MOVS     R3,#+18
   \   00000020   2A00               MOVS     R2,R5
   \   00000022   D21C               ADDS     R2,R2,#+3
   \   00000024   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000026   120E               LSRS     R2,R2,#+24
   \   00000028   2100               MOVS     R1,R4
   \   0000002A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000002C   090E               LSRS     R1,R1,#+24
   \   0000002E   0C00               MOVS     R4,R1
   \   00000030   3878               LDRB     R0,[R7, #+0]
   \   00000032   3621               MOVS     R1,#+54
   \   00000034   4843               MULS     R0,R1,R0
   \   00000036   B049               LDR      R1,??ZoneGraph_1  ;; GraphTab
   \   00000038   0818               ADDS     R0,R1,R0
   \   0000003A   2100               MOVS     R1,R4
   \   0000003C   ........           BL       CopyToCanvasPoint
   \   00000040   02B0               ADD      SP,SP,#+8
   4830             
   4831             }   
   4832          
   4833             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_0:
   \   00000042   3878               LDRB     R0,[R7, #+0]
   \   00000044   0B28               CMP      R0,#+11
   \   00000046   51D1               BNE      ??ZoneGraph_2
   \   00000048   B879               LDRB     R0,[R7, #+6]
   \   0000004A   C007               LSLS     R0,R0,#+31
   \   0000004C   4ED4               BMI      ??ZoneGraph_2
   4834             {
   4835               Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)+2,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   7F21               MOVS     R1,#+127
   \   00000056   0120               MOVS     R0,#+1
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   04A8               ADD      R0,SP,#+16
   \   0000005C   017A               LDRB     R1,[R0, #+8]
   \   0000005E   0320               MOVS     R0,#+3
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000064   2D0E               LSRS     R5,R5,#+24
   \   00000066   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000068   360E               LSRS     R6,R6,#+24
   \   0000006A   3000               MOVS     R0,R6
   \   0000006C   0221               MOVS     R1,#+2
   \   0000006E   ........           BL       __aeabi_idivmod
   \   00000072   2B18               ADDS     R3,R5,R0
   \   00000074   9B1C               ADDS     R3,R3,#+2
   \   00000076   2200               MOVS     R2,R4
   \   00000078   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000007A   120E               LSRS     R2,R2,#+24
   \   0000007C   0221               MOVS     R1,#+2
   \   0000007E   8C46               MOV      R12,R1
   \   00000080   1400               MOVS     R4,R2
   \   00000082   9E49               LDR      R1,??ZoneGraph_1+0x4  ;; 0x627
   \   00000084   9E48               LDR      R0,??ZoneGraph_1+0x8  ;; g_leng
   \   00000086   0068               LDR      R0,[R0, #+0]
   \   00000088   9E4A               LDR      R2,??ZoneGraph_1+0xC  ;; 0xa7d
   \   0000008A   5043               MULS     R0,R2,R0
   \   0000008C   9E4A               LDR      R2,??ZoneGraph_1+0x10  ;; Speech
   \   0000008E   1018               ADDS     R0,R2,R0
   \   00000090   4018               ADDS     R0,R0,R1
   \   00000092   2200               MOVS     R2,R4
   \   00000094   6146               MOV      R1,R12
   \   00000096   ........           BL       Label
   \   0000009A   06B0               ADD      SP,SP,#+24
   4836               Label(Speech[g_leng].Wyl,2,poz_X,poz_Y+(height/2)-6,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   04A8               ADD      R0,SP,#+16
   \   000000AA   017A               LDRB     R1,[R0, #+8]
   \   000000AC   0320               MOVS     R0,#+3
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B2   2D0E               LSRS     R5,R5,#+24
   \   000000B4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000B6   360E               LSRS     R6,R6,#+24
   \   000000B8   3000               MOVS     R0,R6
   \   000000BA   0221               MOVS     R1,#+2
   \   000000BC   ........           BL       __aeabi_idivmod
   \   000000C0   2B18               ADDS     R3,R5,R0
   \   000000C2   9B1F               SUBS     R3,R3,#+6
   \   000000C4   2200               MOVS     R2,R4
   \   000000C6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000C8   120E               LSRS     R2,R2,#+24
   \   000000CA   0221               MOVS     R1,#+2
   \   000000CC   8C46               MOV      R12,R1
   \   000000CE   1400               MOVS     R4,R2
   \   000000D0   C321               MOVS     R1,#+195
   \   000000D2   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   000000D4   8A48               LDR      R0,??ZoneGraph_1+0x8  ;; g_leng
   \   000000D6   0068               LDR      R0,[R0, #+0]
   \   000000D8   8A4A               LDR      R2,??ZoneGraph_1+0xC  ;; 0xa7d
   \   000000DA   5043               MULS     R0,R2,R0
   \   000000DC   8A4A               LDR      R2,??ZoneGraph_1+0x10  ;; Speech
   \   000000DE   1018               ADDS     R0,R2,R0
   \   000000E0   4018               ADDS     R0,R0,R1
   \   000000E2   2200               MOVS     R2,R4
   \   000000E4   6146               MOV      R1,R12
   \   000000E6   ........           BL       Label
   \   000000EA   06B0               ADD      SP,SP,#+24
   4837          
   4838             }   
   4839             
   4840             if (Graph->Type==GraphScena)
   \                     ??ZoneGraph_2:
   \   000000EC   3878               LDRB     R0,[R7, #+0]
   \   000000EE   0928               CMP      R0,#+9
   \   000000F0   36D1               BNE      ??ZoneGraph_3
   4841             {
   4842               Label("Scn ",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0020               MOVS     R0,#+0
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   7F21               MOVS     R1,#+127
   \   000000FA   0120               MOVS     R0,#+1
   \   000000FC   03B4               PUSH     {R0,R1}
   \   000000FE   04A8               ADD      R0,SP,#+16
   \   00000100   017A               LDRB     R1,[R0, #+8]
   \   00000102   0320               MOVS     R0,#+3
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000108   2D0E               LSRS     R5,R5,#+24
   \   0000010A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000010C   360E               LSRS     R6,R6,#+24
   \   0000010E   3000               MOVS     R0,R6
   \   00000110   0221               MOVS     R1,#+2
   \   00000112   ........           BL       __aeabi_idivmod
   \   00000116   2B18               ADDS     R3,R5,R0
   \   00000118   DB1E               SUBS     R3,R3,#+3
   \   0000011A   2200               MOVS     R2,R4
   \   0000011C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000011E   120E               LSRS     R2,R2,#+24
   \   00000120   0221               MOVS     R1,#+2
   \   00000122   7A48               LDR      R0,??ZoneGraph_1+0x14  ;; `?<Constant "Scn ">`
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   4843               H_line(poz_X+3,poz_Y+(height/2)-5,width-6,1); 
   \   0000012A   0123               MOVS     R3,#+1
   \   0000012C   6846               MOV      R0,SP
   \   0000012E   007A               LDRB     R0,[R0, #+8]
   \   00000130   821F               SUBS     R2,R0,#+6
   \   00000132   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000134   120E               LSRS     R2,R2,#+24
   \   00000136   04B5               PUSH     {R2,LR}
   \   00000138   0193               STR      R3,[SP, #+4]
   \   0000013A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000013C   2D0E               LSRS     R5,R5,#+24
   \   0000013E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000140   360E               LSRS     R6,R6,#+24
   \   00000142   3000               MOVS     R0,R6
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   ........           BL       __aeabi_idivmod
   \   0000014A   2918               ADDS     R1,R5,R0
   \   0000014C   491F               SUBS     R1,R1,#+5
   \   0000014E   019B               LDR      R3,[SP, #+4]
   \   00000150   009A               LDR      R2,[SP, #0]
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   2000               MOVS     R0,R4
   \   00000156   C01C               ADDS     R0,R0,#+3
   \   00000158   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000015A   000E               LSRS     R0,R0,#+24
   \   0000015C   ........           BL       H_line
   4844             }
   4845             
   4846             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_3:
   \   00000160   3878               LDRB     R0,[R7, #+0]
   \   00000162   0828               CMP      R0,#+8
   \   00000164   1FD1               BNE      ??ZoneGraph_4
   \   00000166   B879               LDRB     R0,[R7, #+6]
   \   00000168   C007               LSLS     R0,R0,#+31
   \   0000016A   1CD4               BMI      ??ZoneGraph_4
   4847             {
   4848               Label(Graph->Text,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000016C   82B0               SUB      SP,SP,#+8
   \   0000016E   0020               MOVS     R0,#+0
   \   00000170   0090               STR      R0,[SP, #+0]
   \   00000172   7F21               MOVS     R1,#+127
   \   00000174   0120               MOVS     R0,#+1
   \   00000176   03B4               PUSH     {R0,R1}
   \   00000178   04A8               ADD      R0,SP,#+16
   \   0000017A   017A               LDRB     R1,[R0, #+8]
   \   0000017C   0320               MOVS     R0,#+3
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000182   2D0E               LSRS     R5,R5,#+24
   \   00000184   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000186   360E               LSRS     R6,R6,#+24
   \   00000188   3000               MOVS     R0,R6
   \   0000018A   0221               MOVS     R1,#+2
   \   0000018C   ........           BL       __aeabi_idivmod
   \   00000190   2B18               ADDS     R3,R5,R0
   \   00000192   DB1E               SUBS     R3,R3,#+3
   \   00000194   2200               MOVS     R2,R4
   \   00000196   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000198   120E               LSRS     R2,R2,#+24
   \   0000019A   0221               MOVS     R1,#+2
   \   0000019C   3800               MOVS     R0,R7
   \   0000019E   401C               ADDS     R0,R0,#+1
   \   000001A0   ........           BL       Label
   \   000001A4   06B0               ADD      SP,SP,#+24
   4849             }   
   4850             
   4851             if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ZoneGraph_4:
   \   000001A6   B879               LDRB     R0,[R7, #+6]
   \   000001A8   C007               LSLS     R0,R0,#+31
   \   000001AA   49D5               BPL      ??ZoneGraph_5
   \   000001AC   3878               LDRB     R0,[R7, #+0]
   \   000001AE   0B28               CMP      R0,#+11
   \   000001B0   02D0               BEQ      ??ZoneGraph_6
   \   000001B2   3878               LDRB     R0,[R7, #+0]
   \   000001B4   0828               CMP      R0,#+8
   \   000001B6   43D1               BNE      ??ZoneGraph_5
   4852             {
   4853                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_6:
   \   000001B8   82B0               SUB      SP,SP,#+8
   \   000001BA   0020               MOVS     R0,#+0
   \   000001BC   0090               STR      R0,[SP, #+0]
   \   000001BE   7F21               MOVS     R1,#+127
   \   000001C0   0120               MOVS     R0,#+1
   \   000001C2   03B4               PUSH     {R0,R1}
   \   000001C4   04A8               ADD      R0,SP,#+16
   \   000001C6   017A               LDRB     R1,[R0, #+8]
   \   000001C8   0320               MOVS     R0,#+3
   \   000001CA   03B4               PUSH     {R0,R1}
   \   000001CC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001CE   2D0E               LSRS     R5,R5,#+24
   \   000001D0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001D2   360E               LSRS     R6,R6,#+24
   \   000001D4   3000               MOVS     R0,R6
   \   000001D6   0221               MOVS     R1,#+2
   \   000001D8   ........           BL       __aeabi_idivmod
   \   000001DC   2B18               ADDS     R3,R5,R0
   \   000001DE   5B1C               ADDS     R3,R3,#+1
   \   000001E0   2200               MOVS     R2,R4
   \   000001E2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001E4   120E               LSRS     R2,R2,#+24
   \   000001E6   0221               MOVS     R1,#+2
   \   000001E8   3800               MOVS     R0,R7
   \   000001EA   401C               ADDS     R0,R0,#+1
   \   000001EC   ........           BL       Label
   \   000001F0   06B0               ADD      SP,SP,#+24
   4854                Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)-7,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001F2   82B0               SUB      SP,SP,#+8
   \   000001F4   0020               MOVS     R0,#+0
   \   000001F6   0090               STR      R0,[SP, #+0]
   \   000001F8   7F21               MOVS     R1,#+127
   \   000001FA   0120               MOVS     R0,#+1
   \   000001FC   03B4               PUSH     {R0,R1}
   \   000001FE   04A8               ADD      R0,SP,#+16
   \   00000200   017A               LDRB     R1,[R0, #+8]
   \   00000202   0320               MOVS     R0,#+3
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000208   2D0E               LSRS     R5,R5,#+24
   \   0000020A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000020C   360E               LSRS     R6,R6,#+24
   \   0000020E   3000               MOVS     R0,R6
   \   00000210   0221               MOVS     R1,#+2
   \   00000212   ........           BL       __aeabi_idivmod
   \   00000216   2B18               ADDS     R3,R5,R0
   \   00000218   DB1F               SUBS     R3,R3,#+7
   \   0000021A   2200               MOVS     R2,R4
   \   0000021C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000021E   120E               LSRS     R2,R2,#+24
   \   00000220   0221               MOVS     R1,#+2
   \   00000222   8C46               MOV      R12,R1
   \   00000224   1400               MOVS     R4,R2
   \   00000226   3549               LDR      R1,??ZoneGraph_1+0x4  ;; 0x627
   \   00000228   3548               LDR      R0,??ZoneGraph_1+0x8  ;; g_leng
   \   0000022A   0068               LDR      R0,[R0, #+0]
   \   0000022C   354A               LDR      R2,??ZoneGraph_1+0xC  ;; 0xa7d
   \   0000022E   5043               MULS     R0,R2,R0
   \   00000230   354A               LDR      R2,??ZoneGraph_1+0x10  ;; Speech
   \   00000232   1018               ADDS     R0,R2,R0
   \   00000234   4018               ADDS     R0,R0,R1
   \   00000236   2200               MOVS     R2,R4
   \   00000238   6146               MOV      R1,R12
   \   0000023A   ........           BL       Label
   \   0000023E   06B0               ADD      SP,SP,#+24
   4855             }
   4856             
   4857             
   4858             if (Graph->Type==GraphWartosc)
   \                     ??ZoneGraph_5:
   \   00000240   3878               LDRB     R0,[R7, #+0]
   \   00000242   0A28               CMP      R0,#+10
   \   00000244   27D1               BNE      ??ZoneGraph_7
   4859              {
   4860                char txt[5];
   4861                txt[0]='A';txt[1]='n';txt[2]='a'; txt[3]=0; 
   \   00000246   6846               MOV      R0,SP
   \   00000248   4121               MOVS     R1,#+65
   \   0000024A   0170               STRB     R1,[R0, #+0]
   \   0000024C   6846               MOV      R0,SP
   \   0000024E   6E21               MOVS     R1,#+110
   \   00000250   4170               STRB     R1,[R0, #+1]
   \   00000252   6846               MOV      R0,SP
   \   00000254   6121               MOVS     R1,#+97
   \   00000256   8170               STRB     R1,[R0, #+2]
   \   00000258   6846               MOV      R0,SP
   \   0000025A   0021               MOVS     R1,#+0
   \   0000025C   C170               STRB     R1,[R0, #+3]
   4862                Label(txt,2,poz_X-1,poz_Y+(height/2)-4,3,width,1,127,0); 
   \   0000025E   82B0               SUB      SP,SP,#+8
   \   00000260   0020               MOVS     R0,#+0
   \   00000262   0090               STR      R0,[SP, #+0]
   \   00000264   7F21               MOVS     R1,#+127
   \   00000266   0120               MOVS     R0,#+1
   \   00000268   03B4               PUSH     {R0,R1}
   \   0000026A   04A8               ADD      R0,SP,#+16
   \   0000026C   017A               LDRB     R1,[R0, #+8]
   \   0000026E   0320               MOVS     R0,#+3
   \   00000270   03B4               PUSH     {R0,R1}
   \   00000272   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000274   2D0E               LSRS     R5,R5,#+24
   \   00000276   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000278   360E               LSRS     R6,R6,#+24
   \   0000027A   3000               MOVS     R0,R6
   \   0000027C   0221               MOVS     R1,#+2
   \   0000027E   ........           BL       __aeabi_idivmod
   \   00000282   2B18               ADDS     R3,R5,R0
   \   00000284   1B1F               SUBS     R3,R3,#+4
   \   00000286   621E               SUBS     R2,R4,#+1
   \   00000288   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000028A   120E               LSRS     R2,R2,#+24
   \   0000028C   0221               MOVS     R1,#+2
   \   0000028E   06A8               ADD      R0,SP,#+24
   \   00000290   ........           BL       Label
   \   00000294   06B0               ADD      SP,SP,#+24
   4863              }
   4864             
   4865            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \                     ??ZoneGraph_7:
   \   00000296   0221               MOVS     R1,#+2
   \   00000298   3000               MOVS     R0,R6
   \   0000029A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000029C   000E               LSRS     R0,R0,#+24
   \   0000029E   03B4               PUSH     {R0,R1}
   \   000002A0   02A8               ADD      R0,SP,#+8
   \   000002A2   037A               LDRB     R3,[R0, #+8]
   \   000002A4   2A00               MOVS     R2,R5
   \   000002A6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000002A8   120E               LSRS     R2,R2,#+24
   \   000002AA   2100               MOVS     R1,R4
   \   000002AC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000002AE   090E               LSRS     R1,R1,#+24
   \   000002B0   0020               MOVS     R0,#+0
   \   000002B2   ........           BL       Zone
   \   000002B6   02B0               ADD      SP,SP,#+8
   4866            if (Vstring!=0) Label(Vstring,0,poz_X+2,poz_Y+height-10,11,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002B8   0998               LDR      R0,[SP, #+36]
   \   000002BA   0028               CMP      R0,#+0
   \   000002BC   17D0               BEQ      ??ZoneGraph_8
   \   000002BE   82B0               SUB      SP,SP,#+8
   \   000002C0   0020               MOVS     R0,#+0
   \   000002C2   0090               STR      R0,[SP, #+0]
   \   000002C4   7F21               MOVS     R1,#+127
   \   000002C6   0120               MOVS     R0,#+1
   \   000002C8   03B4               PUSH     {R0,R1}
   \   000002CA   0A21               MOVS     R1,#+10
   \   000002CC   0B20               MOVS     R0,#+11
   \   000002CE   03B4               PUSH     {R0,R1}
   \   000002D0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002D2   2D0E               LSRS     R5,R5,#+24
   \   000002D4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002D6   360E               LSRS     R6,R6,#+24
   \   000002D8   AB19               ADDS     R3,R5,R6
   \   000002DA   0A3B               SUBS     R3,R3,#+10
   \   000002DC   A41C               ADDS     R4,R4,#+2
   \   000002DE   2200               MOVS     R2,R4
   \   000002E0   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000002E2   120E               LSRS     R2,R2,#+24
   \   000002E4   0021               MOVS     R1,#+0
   \   000002E6   0F98               LDR      R0,[SP, #+60]
   \   000002E8   ........           BL       Label
   \   000002EC   06B0               ADD      SP,SP,#+24
   4867           
   4868          }
   \                     ??ZoneGraph_8:
   \   000002EE   03B0               ADD      SP,SP,#+12
   \   000002F0   F0BC               POP      {R4-R7}
   \   000002F2   01BC               POP      {R0}
   \   000002F4   0047               BX       R0               ;; return
   \   000002F6   C046               Nop      
   \                     ??ZoneGraph_1:
   \   000002F8   ........           DC32     GraphTab
   \   000002FC   27060000           DC32     0x627
   \   00000300   ........           DC32     g_leng
   \   00000304   7D0A0000           DC32     0xa7d
   \   00000308   ........           DC32     Speech
   \   0000030C   ........           DC32     `?<Constant "Scn ">`
   4869          

   \                                 In section Debug.txt, align 4, keep-with-next
   4870          void ScreenGraph(char poz_X , char poz_Y ,char width, char height, _Graph *Graph)
   4871          {
   \                     ScreenGraph:
   \   00000000   F9B5               PUSH     {R0,R3-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1500               MOVS     R5,R2
   \   00000008   0A9E               LDR      R6,[SP, #+40]
   4872             char Val;
   4873            
   4874             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   0000000A   3078               LDRB     R0,[R6, #+0]
   \   0000000C   0128               CMP      R0,#+1
   \   0000000E   14D3               BCC      ??ScreenGraph_0
   \   00000010   3078               LDRB     R0,[R6, #+0]
   \   00000012   0828               CMP      R0,#+8
   \   00000014   11D2               BCS      ??ScreenGraph_0
   4875             {
   4876               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000016   82B0               SUB      SP,SP,#+8
   \   00000018   1220               MOVS     R0,#+18
   \   0000001A   0090               STR      R0,[SP, #+0]
   \   0000001C   1223               MOVS     R3,#+18
   \   0000001E   2200               MOVS     R2,R4
   \   00000020   D21C               ADDS     R2,R2,#+3
   \   00000022   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000024   120E               LSRS     R2,R2,#+24
   \   00000026   02A8               ADD      R0,SP,#+8
   \   00000028   017B               LDRB     R1,[R0, #+12]
   \   0000002A   3078               LDRB     R0,[R6, #+0]
   \   0000002C   3627               MOVS     R7,#+54
   \   0000002E   7843               MULS     R0,R7,R0
   \   00000030   D04F               LDR      R7,??ScreenGraph_1  ;; GraphTab
   \   00000032   3818               ADDS     R0,R7,R0
   \   00000034   ........           BL       CopyToCanvasPoint
   \   00000038   02B0               ADD      SP,SP,#+8
   4877             
   4878             }   
   4879          
   4880             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_0:
   \   0000003A   3078               LDRB     R0,[R6, #+0]
   \   0000003C   0B28               CMP      R0,#+11
   \   0000003E   70D1               BNE      ??ScreenGraph_2
   \   00000040   B079               LDRB     R0,[R6, #+6]
   \   00000042   C007               LSLS     R0,R0,#+31
   \   00000044   6DD4               BMI      ??ScreenGraph_2
   4881             {
   4882                 if ((Graph->Nr>=0) && (Graph->Nr!=0xFF))    //je¿eli wêze³
                                      ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   00000046   3079               LDRB     R0,[R6, #+4]
   \   00000048   0028               CMP      R0,#+0
   \   0000004A   0FD4               BMI      ??ScreenGraph_3
   \   0000004C   3079               LDRB     R0,[R6, #+4]
   \   0000004E   FF28               CMP      R0,#+255
   \   00000050   0CD0               BEQ      ??ScreenGraph_3
   4883                 {
   4884                    Val=PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port);
   \   00000052   7179               LDRB     R1,[R6, #+5]
   \   00000054   3079               LDRB     R0,[R6, #+4]
   \   00000056   1622               MOVS     R2,#+22
   \   00000058   5043               MULS     R0,R2,R0
   \   0000005A   C74A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   0000005C   1018               ADDS     R0,R2,R0
   \   0000005E   A030               ADDS     R0,R0,#+160
   \   00000060   0088               LDRH     R0,[R0, #+0]
   \   00000062   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000064   0014               ASRS     R0,R0,#+16
   \   00000066   ........           BL       PortStageRead
   \   0000006A   0CE0               B        ??ScreenGraph_4
   4885                 }else{
   4886                    Val=(Variables[Graph->Port/8]>>(Graph->Port%8)) & 0x1;
   \                     ??ScreenGraph_3:
   \   0000006C   7079               LDRB     R0,[R6, #+5]
   \   0000006E   0821               MOVS     R1,#+8
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   C149               LDR      R1,??ScreenGraph_1+0x8  ;; Variables
   \   00000076   0F5C               LDRB     R7,[R1, R0]
   \   00000078   7079               LDRB     R0,[R6, #+5]
   \   0000007A   0821               MOVS     R1,#+8
   \   0000007C   ........           BL       __aeabi_idivmod
   \   00000080   0F41               ASRS     R7,R7,R1
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   3840               ANDS     R0,R0,R7
   4887                 }
   4888                 
   4889                 if (Val)
   \                     ??ScreenGraph_4:
   \   00000086   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   0028               CMP      R0,#+0
   \   0000008C   24D0               BEQ      ??ScreenGraph_5
   4890                 {
   4891                    Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   0020               MOVS     R0,#+0
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   7F21               MOVS     R1,#+127
   \   00000096   0120               MOVS     R0,#+1
   \   00000098   03B4               PUSH     {R0,R1}
   \   0000009A   2900               MOVS     R1,R5
   \   0000009C   0320               MOVS     R0,#+3
   \   0000009E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000A0   090E               LSRS     R1,R1,#+24
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A6   240E               LSRS     R4,R4,#+24
   \   000000A8   06A8               ADD      R0,SP,#+24
   \   000000AA   007C               LDRB     R0,[R0, #+16]
   \   000000AC   0221               MOVS     R1,#+2
   \   000000AE   ........           BL       __aeabi_idivmod
   \   000000B2   2318               ADDS     R3,R4,R0
   \   000000B4   DB1E               SUBS     R3,R3,#+3
   \   000000B6   06A8               ADD      R0,SP,#+24
   \   000000B8   027B               LDRB     R2,[R0, #+12]
   \   000000BA   0221               MOVS     R1,#+2
   \   000000BC   8C46               MOV      R12,R1
   \   000000BE   B049               LDR      R1,??ScreenGraph_1+0xC  ;; 0x627
   \   000000C0   B048               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   000000C2   0068               LDR      R0,[R0, #+0]
   \   000000C4   B04F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   000000C6   7843               MULS     R0,R7,R0
   \   000000C8   B04F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   000000CA   3818               ADDS     R0,R7,R0
   \   000000CC   4018               ADDS     R0,R0,R1
   \   000000CE   6146               MOV      R1,R12
   \   000000D0   ........           BL       Label
   \   000000D4   06B0               ADD      SP,SP,#+24
   \   000000D6   24E0               B        ??ScreenGraph_2
   4892                 }else{
   4893                    Label(Speech[g_leng].Wyl,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_5:
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   0020               MOVS     R0,#+0
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   7F21               MOVS     R1,#+127
   \   000000E0   0120               MOVS     R0,#+1
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   2900               MOVS     R1,R5
   \   000000E6   0320               MOVS     R0,#+3
   \   000000E8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000EA   090E               LSRS     R1,R1,#+24
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F0   240E               LSRS     R4,R4,#+24
   \   000000F2   06A8               ADD      R0,SP,#+24
   \   000000F4   007C               LDRB     R0,[R0, #+16]
   \   000000F6   0221               MOVS     R1,#+2
   \   000000F8   ........           BL       __aeabi_idivmod
   \   000000FC   2318               ADDS     R3,R4,R0
   \   000000FE   DB1E               SUBS     R3,R3,#+3
   \   00000100   06A8               ADD      R0,SP,#+24
   \   00000102   027B               LDRB     R2,[R0, #+12]
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   8C46               MOV      R12,R1
   \   00000108   C321               MOVS     R1,#+195
   \   0000010A   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   0000010C   9D48               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   0000010E   0068               LDR      R0,[R0, #+0]
   \   00000110   9D4F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   00000112   7843               MULS     R0,R7,R0
   \   00000114   9D4F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   00000116   3818               ADDS     R0,R7,R0
   \   00000118   4018               ADDS     R0,R0,R1
   \   0000011A   6146               MOV      R1,R12
   \   0000011C   ........           BL       Label
   \   00000120   06B0               ADD      SP,SP,#+24
   4894                 }
   4895             }
   4896             
   4897             if (Graph->Type==GraphScena)
   \                     ??ScreenGraph_2:
   \   00000122   3078               LDRB     R0,[R6, #+0]
   \   00000124   0928               CMP      R0,#+9
   \   00000126   23D1               BNE      ??ScreenGraph_6
   4898             {
   4899                char LabelButt[2] = {0,0};
   \   00000128   02A8               ADD      R0,SP,#+8
   \   0000012A   0021               MOVS     R1,#+0
   \   0000012C   0160               STR      R1,[R0, #0]
   4900                
   4901                CharToStr(MainStage.SceneNr,LabelButt,1);
   \   0000012E   0122               MOVS     R2,#+1
   \   00000130   02A9               ADD      R1,SP,#+8
   \   00000132   D948               LDR      R0,??ScreenGraph_7  ;; MainStage + 1770
   \   00000134   0078               LDRB     R0,[R0, #+0]
   \   00000136   ........           BL       CharToStr
   4902                Label(LabelButt,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000013A   82B0               SUB      SP,SP,#+8
   \   0000013C   0020               MOVS     R0,#+0
   \   0000013E   0090               STR      R0,[SP, #+0]
   \   00000140   7F21               MOVS     R1,#+127
   \   00000142   0120               MOVS     R0,#+1
   \   00000144   03B4               PUSH     {R0,R1}
   \   00000146   2900               MOVS     R1,R5
   \   00000148   0320               MOVS     R0,#+3
   \   0000014A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000014C   090E               LSRS     R1,R1,#+24
   \   0000014E   03B4               PUSH     {R0,R1}
   \   00000150   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000152   240E               LSRS     R4,R4,#+24
   \   00000154   06A8               ADD      R0,SP,#+24
   \   00000156   007C               LDRB     R0,[R0, #+16]
   \   00000158   0221               MOVS     R1,#+2
   \   0000015A   ........           BL       __aeabi_idivmod
   \   0000015E   2318               ADDS     R3,R4,R0
   \   00000160   DB1E               SUBS     R3,R3,#+3
   \   00000162   06A8               ADD      R0,SP,#+24
   \   00000164   027B               LDRB     R2,[R0, #+12]
   \   00000166   0221               MOVS     R1,#+2
   \   00000168   08A8               ADD      R0,SP,#+32
   \   0000016A   ........           BL       Label
   \   0000016E   06B0               ADD      SP,SP,#+24
   4903             }
   4904             
   4905             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_6:
   \   00000170   3078               LDRB     R0,[R6, #+0]
   \   00000172   0828               CMP      R0,#+8
   \   00000174   1FD1               BNE      ??ScreenGraph_8
   \   00000176   B079               LDRB     R0,[R6, #+6]
   \   00000178   C007               LSLS     R0,R0,#+31
   \   0000017A   1CD4               BMI      ??ScreenGraph_8
   4906             {
   4907               Label(Graph->Text,2,poz_X,poz_Y+(width/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000017C   82B0               SUB      SP,SP,#+8
   \   0000017E   0020               MOVS     R0,#+0
   \   00000180   0090               STR      R0,[SP, #+0]
   \   00000182   7F21               MOVS     R1,#+127
   \   00000184   0120               MOVS     R0,#+1
   \   00000186   03B4               PUSH     {R0,R1}
   \   00000188   2900               MOVS     R1,R5
   \   0000018A   0320               MOVS     R0,#+3
   \   0000018C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000018E   090E               LSRS     R1,R1,#+24
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000194   240E               LSRS     R4,R4,#+24
   \   00000196   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000198   2D0E               LSRS     R5,R5,#+24
   \   0000019A   2800               MOVS     R0,R5
   \   0000019C   0221               MOVS     R1,#+2
   \   0000019E   ........           BL       __aeabi_idivmod
   \   000001A2   2318               ADDS     R3,R4,R0
   \   000001A4   DB1E               SUBS     R3,R3,#+3
   \   000001A6   06A8               ADD      R0,SP,#+24
   \   000001A8   027B               LDRB     R2,[R0, #+12]
   \   000001AA   0221               MOVS     R1,#+2
   \   000001AC   3000               MOVS     R0,R6
   \   000001AE   401C               ADDS     R0,R0,#+1
   \   000001B0   ........           BL       Label
   \   000001B4   06B0               ADD      SP,SP,#+24
   4908             }   
   4909             
   4910                if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ScreenGraph_8:
   \   000001B6   B079               LDRB     R0,[R6, #+6]
   \   000001B8   C007               LSLS     R0,R0,#+31
   \   000001BA   00D4               BMI      .+4
   \   000001BC   90E0               B        ??ScreenGraph_9
   \   000001BE   3078               LDRB     R0,[R6, #+0]
   \   000001C0   0B28               CMP      R0,#+11
   \   000001C2   03D0               BEQ      ??ScreenGraph_10
   \   000001C4   3078               LDRB     R0,[R6, #+0]
   \   000001C6   0828               CMP      R0,#+8
   \   000001C8   00D0               BEQ      .+4
   \   000001CA   89E0               B        ??ScreenGraph_9
   4911             {
   4912                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_10:
   \   000001CC   82B0               SUB      SP,SP,#+8
   \   000001CE   0020               MOVS     R0,#+0
   \   000001D0   0090               STR      R0,[SP, #+0]
   \   000001D2   7F21               MOVS     R1,#+127
   \   000001D4   0120               MOVS     R0,#+1
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   2900               MOVS     R1,R5
   \   000001DA   0320               MOVS     R0,#+3
   \   000001DC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001DE   090E               LSRS     R1,R1,#+24
   \   000001E0   03B4               PUSH     {R0,R1}
   \   000001E2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001E4   240E               LSRS     R4,R4,#+24
   \   000001E6   06A8               ADD      R0,SP,#+24
   \   000001E8   007C               LDRB     R0,[R0, #+16]
   \   000001EA   0221               MOVS     R1,#+2
   \   000001EC   ........           BL       __aeabi_idivmod
   \   000001F0   2318               ADDS     R3,R4,R0
   \   000001F2   5B1C               ADDS     R3,R3,#+1
   \   000001F4   06A8               ADD      R0,SP,#+24
   \   000001F6   027B               LDRB     R2,[R0, #+12]
   \   000001F8   0221               MOVS     R1,#+2
   \   000001FA   3000               MOVS     R0,R6
   \   000001FC   401C               ADDS     R0,R0,#+1
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
   4913                
   4914                
   4915                if ((Graph->Nr>=0) && (Graph->Nr!=0xFF))    //je¿eli wêze³
                                     ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   00000204   3079               LDRB     R0,[R6, #+4]
   \   00000206   0028               CMP      R0,#+0
   \   00000208   0FD4               BMI      ??ScreenGraph_11
   \   0000020A   3079               LDRB     R0,[R6, #+4]
   \   0000020C   FF28               CMP      R0,#+255
   \   0000020E   0CD0               BEQ      ??ScreenGraph_11
   4916                 {
   4917                    Val=PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port);
   \   00000210   7179               LDRB     R1,[R6, #+5]
   \   00000212   3079               LDRB     R0,[R6, #+4]
   \   00000214   1622               MOVS     R2,#+22
   \   00000216   5043               MULS     R0,R2,R0
   \   00000218   574A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   0000021A   1018               ADDS     R0,R2,R0
   \   0000021C   A030               ADDS     R0,R0,#+160
   \   0000021E   0088               LDRH     R0,[R0, #+0]
   \   00000220   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000222   0014               ASRS     R0,R0,#+16
   \   00000224   ........           BL       PortStageRead
   \   00000228   0CE0               B        ??ScreenGraph_12
   4918                 }else{
   4919                    Val=(Variables[Graph->Port/8]>>(Graph->Port%8)) & 0x1;
   \                     ??ScreenGraph_11:
   \   0000022A   7079               LDRB     R0,[R6, #+5]
   \   0000022C   0821               MOVS     R1,#+8
   \   0000022E   ........           BL       __aeabi_idivmod
   \   00000232   5249               LDR      R1,??ScreenGraph_1+0x8  ;; Variables
   \   00000234   0F5C               LDRB     R7,[R1, R0]
   \   00000236   7079               LDRB     R0,[R6, #+5]
   \   00000238   0821               MOVS     R1,#+8
   \   0000023A   ........           BL       __aeabi_idivmod
   \   0000023E   0F41               ASRS     R7,R7,R1
   \   00000240   0120               MOVS     R0,#+1
   \   00000242   3840               ANDS     R0,R0,R7
   4920                 }
   4921                 
   4922                
   4923                if (Val)
   \                     ??ScreenGraph_12:
   \   00000244   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000246   000E               LSRS     R0,R0,#+24
   \   00000248   0028               CMP      R0,#+0
   \   0000024A   24D0               BEQ      ??ScreenGraph_13
   4924                 {
   4925                    Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000024C   82B0               SUB      SP,SP,#+8
   \   0000024E   0020               MOVS     R0,#+0
   \   00000250   0090               STR      R0,[SP, #+0]
   \   00000252   7F21               MOVS     R1,#+127
   \   00000254   0120               MOVS     R0,#+1
   \   00000256   03B4               PUSH     {R0,R1}
   \   00000258   2900               MOVS     R1,R5
   \   0000025A   0320               MOVS     R0,#+3
   \   0000025C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000025E   090E               LSRS     R1,R1,#+24
   \   00000260   03B4               PUSH     {R0,R1}
   \   00000262   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000264   240E               LSRS     R4,R4,#+24
   \   00000266   06A8               ADD      R0,SP,#+24
   \   00000268   007C               LDRB     R0,[R0, #+16]
   \   0000026A   0221               MOVS     R1,#+2
   \   0000026C   ........           BL       __aeabi_idivmod
   \   00000270   2318               ADDS     R3,R4,R0
   \   00000272   083B               SUBS     R3,R3,#+8
   \   00000274   06A8               ADD      R0,SP,#+24
   \   00000276   027B               LDRB     R2,[R0, #+12]
   \   00000278   0221               MOVS     R1,#+2
   \   0000027A   8C46               MOV      R12,R1
   \   0000027C   4049               LDR      R1,??ScreenGraph_1+0xC  ;; 0x627
   \   0000027E   4148               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   00000280   0068               LDR      R0,[R0, #+0]
   \   00000282   414F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   00000284   7843               MULS     R0,R7,R0
   \   00000286   414F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   00000288   3818               ADDS     R0,R7,R0
   \   0000028A   4018               ADDS     R0,R0,R1
   \   0000028C   6146               MOV      R1,R12
   \   0000028E   ........           BL       Label
   \   00000292   06B0               ADD      SP,SP,#+24
   \   00000294   24E0               B        ??ScreenGraph_9
   4926                 }else{
   4927                    Label(Speech[g_leng].Wyl,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_13:
   \   00000296   82B0               SUB      SP,SP,#+8
   \   00000298   0020               MOVS     R0,#+0
   \   0000029A   0090               STR      R0,[SP, #+0]
   \   0000029C   7F21               MOVS     R1,#+127
   \   0000029E   0120               MOVS     R0,#+1
   \   000002A0   03B4               PUSH     {R0,R1}
   \   000002A2   2900               MOVS     R1,R5
   \   000002A4   0320               MOVS     R0,#+3
   \   000002A6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000002A8   090E               LSRS     R1,R1,#+24
   \   000002AA   03B4               PUSH     {R0,R1}
   \   000002AC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002AE   240E               LSRS     R4,R4,#+24
   \   000002B0   06A8               ADD      R0,SP,#+24
   \   000002B2   007C               LDRB     R0,[R0, #+16]
   \   000002B4   0221               MOVS     R1,#+2
   \   000002B6   ........           BL       __aeabi_idivmod
   \   000002BA   2318               ADDS     R3,R4,R0
   \   000002BC   083B               SUBS     R3,R3,#+8
   \   000002BE   06A8               ADD      R0,SP,#+24
   \   000002C0   027B               LDRB     R2,[R0, #+12]
   \   000002C2   0221               MOVS     R1,#+2
   \   000002C4   8C46               MOV      R12,R1
   \   000002C6   C321               MOVS     R1,#+195
   \   000002C8   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   000002CA   2E48               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   000002CC   0068               LDR      R0,[R0, #+0]
   \   000002CE   2E4F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   000002D0   7843               MULS     R0,R7,R0
   \   000002D2   2E4F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   000002D4   3818               ADDS     R0,R7,R0
   \   000002D6   4018               ADDS     R0,R0,R1
   \   000002D8   6146               MOV      R1,R12
   \   000002DA   ........           BL       Label
   \   000002DE   06B0               ADD      SP,SP,#+24
   4928                 }
   4929             }
   4930             
   4931             
   4932                           //Analogi
   4933               char IlLiter=0;
   \                     ??ScreenGraph_9:
   \   000002E0   0027               MOVS     R7,#+0
   4934              signed short Value;
   4935              char txt[5];
   4936             if (Graph->Type==GraphWartosc)
   \   000002E2   3078               LDRB     R0,[R6, #+0]
   \   000002E4   0A28               CMP      R0,#+10
   \   000002E6   00D0               BEQ      .+4
   \   000002E8   D2E0               B        ??ScreenGraph_14
   4937             {
   4938              
   4939                               if ((Graph->Nr>0) || ((Graph->Nr==0)&&(Graph->Reg>0)))
   \   000002EA   3079               LDRB     R0,[R6, #+4]
   \   000002EC   0128               CMP      R0,#+1
   \   000002EE   07D2               BCS      ??ScreenGraph_15
   \   000002F0   3079               LDRB     R0,[R6, #+4]
   \   000002F2   0028               CMP      R0,#+0
   \   000002F4   00D0               BEQ      .+4
   \   000002F6   CBE0               B        ??ScreenGraph_14
   \   000002F8   7079               LDRB     R0,[R6, #+5]
   \   000002FA   0128               CMP      R0,#+1
   \   000002FC   00D2               BCS      .+4
   \   000002FE   C7E0               B        ??ScreenGraph_14
   4940                               {
   4941                               IlLiter=0;
   \                     ??ScreenGraph_15:
   \   00000300   0027               MOVS     R7,#+0
   4942                               Value=MainStage.StageI[Graph->Nr].Value[Graph->Reg];
   \   00000302   A020               MOVS     R0,#+160
   \   00000304   7179               LDRB     R1,[R6, #+5]
   \   00000306   0222               MOVS     R2,#+2
   \   00000308   5143               MULS     R1,R2,R1
   \   0000030A   3279               LDRB     R2,[R6, #+4]
   \   0000030C   1623               MOVS     R3,#+22
   \   0000030E   5A43               MULS     R2,R3,R2
   \   00000310   194B               LDR      R3,??ScreenGraph_1+0x4  ;; MainStage
   \   00000312   9A18               ADDS     R2,R3,R2
   \   00000314   5118               ADDS     R1,R2,R1
   \   00000316   085E               LDRSH    R0,[R1, R0]
   4943          
   4944                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   \   00000318   6049               LDR      R1,??ScreenGraph_7+0x4  ;; 0xffff8aaa
   \   0000031A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000031C   0014               ASRS     R0,R0,#+16
   \   0000031E   8842               CMP      R0,R1
   \   00000320   36D1               BNE      ??ScreenGraph_16
   4945                               {
   4946                                 txt[0]='?';txt[1]='?';txt[2]='?'; txt[3]=0; IlLiter+=3;
   \   00000322   6846               MOV      R0,SP
   \   00000324   3F21               MOVS     R1,#+63
   \   00000326   0170               STRB     R1,[R0, #+0]
   \   00000328   6846               MOV      R0,SP
   \   0000032A   3F21               MOVS     R1,#+63
   \   0000032C   4170               STRB     R1,[R0, #+1]
   \   0000032E   6846               MOV      R0,SP
   \   00000330   3F21               MOVS     R1,#+63
   \   00000332   8170               STRB     R1,[R0, #+2]
   \   00000334   6846               MOV      R0,SP
   \   00000336   0021               MOVS     R1,#+0
   \   00000338   C170               STRB     R1,[R0, #+3]
   \   0000033A   FF1C               ADDS     R7,R7,#+3
   4947                                 Label(txt,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);
   \   0000033C   82B0               SUB      SP,SP,#+8
   \   0000033E   0020               MOVS     R0,#+0
   \   00000340   0090               STR      R0,[SP, #+0]
   \   00000342   7F21               MOVS     R1,#+127
   \   00000344   0120               MOVS     R0,#+1
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   2900               MOVS     R1,R5
   \   0000034A   0320               MOVS     R0,#+3
   \   0000034C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000034E   090E               LSRS     R1,R1,#+24
   \   00000350   03B4               PUSH     {R0,R1}
   \   00000352   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000354   240E               LSRS     R4,R4,#+24
   \   00000356   06A8               ADD      R0,SP,#+24
   \   00000358   007C               LDRB     R0,[R0, #+16]
   \   0000035A   0221               MOVS     R1,#+2
   \   0000035C   ........           BL       __aeabi_idivmod
   \   00000360   2318               ADDS     R3,R4,R0
   \   00000362   083B               SUBS     R3,R3,#+8
   \   00000364   06A8               ADD      R0,SP,#+24
   \   00000366   027B               LDRB     R2,[R0, #+12]
   \   00000368   0221               MOVS     R1,#+2
   \   0000036A   06A8               ADD      R0,SP,#+24
   \   0000036C   ........           BL       Label
   \   00000370   06B0               ADD      SP,SP,#+24
   \   00000372   8DE0               B        ??ScreenGraph_14
   \                     ??ScreenGraph_1:
   \   00000374   ........           DC32     GraphTab
   \   00000378   ........           DC32     MainStage
   \   0000037C   ........           DC32     Variables
   \   00000380   27060000           DC32     0x627
   \   00000384   ........           DC32     g_leng
   \   00000388   7D0A0000           DC32     0xa7d
   \   0000038C   ........           DC32     Speech
   4948                               }else{ //je¿eli sygna³ wiarygodny
   4949                                
   4950                                 if (Graph->Flip)
   \                     ??ScreenGraph_16:
   \   00000390   B179               LDRB     R1,[R6, #+6]
   \   00000392   0029               CMP      R1,#+0
   \   00000394   3ED0               BEQ      ??ScreenGraph_17
   4951                                   {
   4952                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \   00000396   6946               MOV      R1,SP
   \   00000398   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000039A   0014               ASRS     R0,R0,#+16
   \   0000039C   ........           BL       sIntToStr
   \   000003A0   0700               MOVS     R7,R0
   4953                                       Label(txt,2,poz_X,poz_Y+(height/2)+0,IlLiter,width,1,127,0);
   \   000003A2   82B0               SUB      SP,SP,#+8
   \   000003A4   0020               MOVS     R0,#+0
   \   000003A6   0090               STR      R0,[SP, #+0]
   \   000003A8   7F21               MOVS     R1,#+127
   \   000003AA   0120               MOVS     R0,#+1
   \   000003AC   03B4               PUSH     {R0,R1}
   \   000003AE   2900               MOVS     R1,R5
   \   000003B0   3800               MOVS     R0,R7
   \   000003B2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003B4   000E               LSRS     R0,R0,#+24
   \   000003B6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003B8   090E               LSRS     R1,R1,#+24
   \   000003BA   03B4               PUSH     {R0,R1}
   \   000003BC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003BE   240E               LSRS     R4,R4,#+24
   \   000003C0   06A8               ADD      R0,SP,#+24
   \   000003C2   007C               LDRB     R0,[R0, #+16]
   \   000003C4   0221               MOVS     R1,#+2
   \   000003C6   ........           BL       __aeabi_idivmod
   \   000003CA   2318               ADDS     R3,R4,R0
   \   000003CC   06A8               ADD      R0,SP,#+24
   \   000003CE   027B               LDRB     R2,[R0, #+12]
   \   000003D0   0221               MOVS     R1,#+2
   \   000003D2   06A8               ADD      R0,SP,#+24
   \   000003D4   ........           BL       Label
   \   000003D8   06B0               ADD      SP,SP,#+24
   4954                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)-9,3,width,1,127,0);
   \   000003DA   82B0               SUB      SP,SP,#+8
   \   000003DC   0020               MOVS     R0,#+0
   \   000003DE   0090               STR      R0,[SP, #+0]
   \   000003E0   7F21               MOVS     R1,#+127
   \   000003E2   0120               MOVS     R0,#+1
   \   000003E4   03B4               PUSH     {R0,R1}
   \   000003E6   2900               MOVS     R1,R5
   \   000003E8   0320               MOVS     R0,#+3
   \   000003EA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003EC   090E               LSRS     R1,R1,#+24
   \   000003EE   03B4               PUSH     {R0,R1}
   \   000003F0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003F2   240E               LSRS     R4,R4,#+24
   \   000003F4   06A8               ADD      R0,SP,#+24
   \   000003F6   007C               LDRB     R0,[R0, #+16]
   \   000003F8   0221               MOVS     R1,#+2
   \   000003FA   ........           BL       __aeabi_idivmod
   \   000003FE   2318               ADDS     R3,R4,R0
   \   00000400   093B               SUBS     R3,R3,#+9
   \   00000402   06A8               ADD      R0,SP,#+24
   \   00000404   027B               LDRB     R2,[R0, #+12]
   \   00000406   0221               MOVS     R1,#+2
   \   00000408   761C               ADDS     R6,R6,#+1
   \   0000040A   3000               MOVS     R0,R6
   \   0000040C   ........           BL       Label
   \   00000410   06B0               ADD      SP,SP,#+24
   \   00000412   3DE0               B        ??ScreenGraph_14
   4955                                       
   4956                                   }else{
   4957                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \                     ??ScreenGraph_17:
   \   00000414   6946               MOV      R1,SP
   \   00000416   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000418   0014               ASRS     R0,R0,#+16
   \   0000041A   ........           BL       sIntToStr
   \   0000041E   0700               MOVS     R7,R0
   4958                                       Label(txt,2,poz_X,poz_Y+(height/2)-9,IlLiter,width,1,127,0);
   \   00000420   82B0               SUB      SP,SP,#+8
   \   00000422   0020               MOVS     R0,#+0
   \   00000424   0090               STR      R0,[SP, #+0]
   \   00000426   7F21               MOVS     R1,#+127
   \   00000428   0120               MOVS     R0,#+1
   \   0000042A   03B4               PUSH     {R0,R1}
   \   0000042C   2900               MOVS     R1,R5
   \   0000042E   3800               MOVS     R0,R7
   \   00000430   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000432   000E               LSRS     R0,R0,#+24
   \   00000434   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000436   090E               LSRS     R1,R1,#+24
   \   00000438   03B4               PUSH     {R0,R1}
   \   0000043A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000043C   240E               LSRS     R4,R4,#+24
   \   0000043E   06A8               ADD      R0,SP,#+24
   \   00000440   007C               LDRB     R0,[R0, #+16]
   \   00000442   0221               MOVS     R1,#+2
   \   00000444   ........           BL       __aeabi_idivmod
   \   00000448   2318               ADDS     R3,R4,R0
   \   0000044A   093B               SUBS     R3,R3,#+9
   \   0000044C   06A8               ADD      R0,SP,#+24
   \   0000044E   027B               LDRB     R2,[R0, #+12]
   \   00000450   0221               MOVS     R1,#+2
   \   00000452   06A8               ADD      R0,SP,#+24
   \   00000454   ........           BL       Label
   \   00000458   06B0               ADD      SP,SP,#+24
   4959                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)+0,3,width,1,127,0);
   \   0000045A   82B0               SUB      SP,SP,#+8
   \   0000045C   0020               MOVS     R0,#+0
   \   0000045E   0090               STR      R0,[SP, #+0]
   \   00000460   7F21               MOVS     R1,#+127
   \   00000462   0120               MOVS     R0,#+1
   \   00000464   03B4               PUSH     {R0,R1}
   \   00000466   2900               MOVS     R1,R5
   \   00000468   0320               MOVS     R0,#+3
   \   0000046A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000046C   090E               LSRS     R1,R1,#+24
   \   0000046E   03B4               PUSH     {R0,R1}
   \   00000470   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000472   240E               LSRS     R4,R4,#+24
   \   00000474   06A8               ADD      R0,SP,#+24
   \   00000476   007C               LDRB     R0,[R0, #+16]
   \   00000478   0221               MOVS     R1,#+2
   \   0000047A   ........           BL       __aeabi_idivmod
   \   0000047E   2318               ADDS     R3,R4,R0
   \   00000480   06A8               ADD      R0,SP,#+24
   \   00000482   027B               LDRB     R2,[R0, #+12]
   \   00000484   0221               MOVS     R1,#+2
   \   00000486   761C               ADDS     R6,R6,#+1
   \   00000488   3000               MOVS     R0,R6
   \   0000048A   ........           BL       Label
   \   0000048E   06B0               ADD      SP,SP,#+24
   4960                                   }
   4961          
   4962                               }  
   4963                 
   4964                               
   4965                                                        
   4966                               }
   4967             }
   4968                      
   4969             
   4970             
   4971          }
   \                     ??ScreenGraph_14:
   \   00000490   05B0               ADD      SP,SP,#+20
   \   00000492   F0BC               POP      {R4-R7}
   \   00000494   01BC               POP      {R0}
   \   00000496   0047               BX       R0               ;; return
   \                     ??ScreenGraph_7:
   \   00000498   ........           DC32     MainStage + 1770
   \   0000049C   AA8AFFFF           DC32     0xffff8aaa
   4972          
   4973          
   4974          

   \                                 In section Debug.txt, align 4, keep-with-next
   4975          void ScreenDesign1_Paint(_Screen *ScreenLocal)
   4976          {
   \                     ScreenDesign1_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4977          
   4978            const _ScreenPaternDesign *ScreenPaternDesign;
   4979            CleanCanvas();
   \   00000004   ........           BL       CleanCanvas
   4980            if (CurModifSheet==0) 
   \   00000008   CC48               LDR      R0,??ScreenDesign1_Paint_0  ;; CurModifSheet
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   01D1               BNE      ??ScreenDesign1_Paint_1
   4981            {
   4982              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   CB4D               LDR      R5,??ScreenDesign1_Paint_0+0x4  ;; ScreenSetTab_0
   \   00000012   0EE0               B        ??ScreenDesign1_Paint_2
   4983            }else{
   4984              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Paint_1:
   \   00000014   CB4D               LDR      R5,??ScreenDesign1_Paint_0+0x8  ;; ScreenSetTab_1
   4985              
   4986              //Strefa etykiety podstrony
   4987               ZoneGraph(0, 15,114,38,12,
   4988                      ScreenLocal->Label,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000016   82B0               SUB      SP,SP,#+8
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   0090               STR      R0,[SP, #+0]
   \   0000001C   2100               MOVS     R1,R4
   \   0000001E   491C               ADDS     R1,R1,#+1
   \   00000020   0C20               MOVS     R0,#+12
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   2623               MOVS     R3,#+38
   \   00000026   7222               MOVS     R2,#+114
   \   00000028   0F21               MOVS     R1,#+15
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       ZoneGraph
   \   00000030   04B0               ADD      SP,SP,#+16
   4989              
   4990              
   4991            }  
   4992          
   4993           
   4994             char PaternDesign=ScreenLocal->PaternDesign;
   \                     ??ScreenDesign1_Paint_2:
   \   00000032   2678               LDRB     R6,[R4, #+0]
   4995          
   4996             
   4997             
   4998             
   4999             char LabelButt[2] = {129,0};
   \   00000034   6846               MOV      R0,SP
   \   00000036   C449               LDR      R1,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   00000038   0A68               LDR      R2,[R1, #0]
   \   0000003A   0260               STR      R2,[R0, #0]
   5000             Button(LabelButt,0,113,13,13);
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0D20               MOVS     R0,#+13
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   0D23               MOVS     R3,#+13
   \   00000044   7122               MOVS     R2,#+113
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   02A8               ADD      R0,SP,#+8
   \   0000004A   ........           BL       Button
   \   0000004E   02B0               ADD      SP,SP,#+8
   5001          
   5002             //przyciski
   5003            for (char i=0; i<ScrenButtonNr; i++)
   \   00000050   0027               MOVS     R7,#+0
   \   00000052   4DE0               B        ??ScreenDesign1_Paint_3
   5004            {
   5005              if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Paint_4:
   \   00000054   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000056   3F0E               LSRS     R7,R7,#+24
   \   00000058   0420               MOVS     R0,#+4
   \   0000005A   7843               MULS     R0,R7,R0
   \   0000005C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000005E   360E               LSRS     R6,R6,#+24
   \   00000060   5821               MOVS     R1,#+88
   \   00000062   7143               MULS     R1,R6,R1
   \   00000064   6918               ADDS     R1,R5,R1
   \   00000066   0818               ADDS     R0,R1,R0
   \   00000068   8078               LDRB     R0,[R0, #+2]
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   3FD3               BCC      ??ScreenDesign1_Paint_5
   5006              {
   5007                      ZoneButon(ScreenLocal->Button[i].Text,
   5008                      ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   5009                      ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   5010                      ScreenPaternDesign[PaternDesign].Button[i].Width,
   5011                      ScreenPaternDesign[PaternDesign].Button[i].Height,(char*)ButtonName[i+10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000006E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000070   3F0E               LSRS     R7,R7,#+24
   \   00000072   B248               LDR      R0,??ScreenDesign1_Paint_0  ;; CurModifSheet
   \   00000074   0078               LDRB     R0,[R0, #+0]
   \   00000076   0A21               MOVS     R1,#+10
   \   00000078   4843               MULS     R0,R1,R0
   \   0000007A   3818               ADDS     R0,R7,R0
   \   0000007C   0421               MOVS     R1,#+4
   \   0000007E   4843               MULS     R0,R1,R0
   \   00000080   B249               LDR      R1,??ScreenDesign1_Paint_0+0x10  ;; ButtonName
   \   00000082   0918               ADDS     R1,R1,R0
   \   00000084   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000086   3F0E               LSRS     R7,R7,#+24
   \   00000088   0420               MOVS     R0,#+4
   \   0000008A   7843               MULS     R0,R7,R0
   \   0000008C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000008E   360E               LSRS     R6,R6,#+24
   \   00000090   5822               MOVS     R2,#+88
   \   00000092   7243               MULS     R2,R6,R2
   \   00000094   AA18               ADDS     R2,R5,R2
   \   00000096   1018               ADDS     R0,R2,R0
   \   00000098   C078               LDRB     R0,[R0, #+3]
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000009E   3F0E               LSRS     R7,R7,#+24
   \   000000A0   0420               MOVS     R0,#+4
   \   000000A2   7843               MULS     R0,R7,R0
   \   000000A4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000A6   360E               LSRS     R6,R6,#+24
   \   000000A8   5821               MOVS     R1,#+88
   \   000000AA   7143               MULS     R1,R6,R1
   \   000000AC   6918               ADDS     R1,R5,R1
   \   000000AE   0818               ADDS     R0,R1,R0
   \   000000B0   8378               LDRB     R3,[R0, #+2]
   \   000000B2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000B4   3F0E               LSRS     R7,R7,#+24
   \   000000B6   0420               MOVS     R0,#+4
   \   000000B8   7843               MULS     R0,R7,R0
   \   000000BA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000BC   360E               LSRS     R6,R6,#+24
   \   000000BE   5821               MOVS     R1,#+88
   \   000000C0   7143               MULS     R1,R6,R1
   \   000000C2   6918               ADDS     R1,R5,R1
   \   000000C4   0818               ADDS     R0,R1,R0
   \   000000C6   4278               LDRB     R2,[R0, #+1]
   \   000000C8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000CA   3F0E               LSRS     R7,R7,#+24
   \   000000CC   0420               MOVS     R0,#+4
   \   000000CE   7843               MULS     R0,R7,R0
   \   000000D0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000D2   360E               LSRS     R6,R6,#+24
   \   000000D4   5821               MOVS     R1,#+88
   \   000000D6   7143               MULS     R1,R6,R1
   \   000000D8   6918               ADDS     R1,R5,R1
   \   000000DA   095C               LDRB     R1,[R1, R0]
   \   000000DC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000DE   3F0E               LSRS     R7,R7,#+24
   \   000000E0   0820               MOVS     R0,#+8
   \   000000E2   7843               MULS     R0,R7,R0
   \   000000E4   2018               ADDS     R0,R4,R0
   \   000000E6   0B30               ADDS     R0,R0,#+11
   \   000000E8   ........           BL       ZoneButon
   \   000000EC   02B0               ADD      SP,SP,#+8
   5012              }
   5013             }
   \                     ??ScreenDesign1_Paint_5:
   \   000000EE   7F1C               ADDS     R7,R7,#+1
   \                     ??ScreenDesign1_Paint_3:
   \   000000F0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000F2   3F0E               LSRS     R7,R7,#+24
   \   000000F4   092F               CMP      R7,#+9
   \   000000F6   ADD3               BCC      ??ScreenDesign1_Paint_4
   5014          
   5015          
   5016            //grafika
   5017            for (char i=0; i<ScrenGraphNr; i++)
   \   000000F8   0027               MOVS     R7,#+0
   \   000000FA   4CE0               B        ??ScreenDesign1_Paint_6
   5018            {
   5019          
   5020              if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Paint_7:
   \   000000FC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000FE   3F0E               LSRS     R7,R7,#+24
   \   00000100   0420               MOVS     R0,#+4
   \   00000102   7843               MULS     R0,R7,R0
   \   00000104   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000106   360E               LSRS     R6,R6,#+24
   \   00000108   5821               MOVS     R1,#+88
   \   0000010A   7143               MULS     R1,R6,R1
   \   0000010C   6918               ADDS     R1,R5,R1
   \   0000010E   0818               ADDS     R0,R1,R0
   \   00000110   2630               ADDS     R0,R0,#+38
   \   00000112   0078               LDRB     R0,[R0, #+0]
   \   00000114   0128               CMP      R0,#+1
   \   00000116   3DD3               BCC      ??ScreenDesign1_Paint_8
   5021              {
   5022                      ZoneGraph(0,
   5023                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   5024                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   5025                      ScreenPaternDesign[PaternDesign].Graph[i].Width,
   5026                      ScreenPaternDesign[PaternDesign].Graph[i].Height,
   5027                      0,&(ScreenLocal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000011C   3F0E               LSRS     R7,R7,#+24
   \   0000011E   0720               MOVS     R0,#+7
   \   00000120   7843               MULS     R0,R7,R0
   \   00000122   2018               ADDS     R0,R4,R0
   \   00000124   5330               ADDS     R0,R0,#+83
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   0021               MOVS     R1,#+0
   \   0000012A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000012C   3F0E               LSRS     R7,R7,#+24
   \   0000012E   0420               MOVS     R0,#+4
   \   00000130   7843               MULS     R0,R7,R0
   \   00000132   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000134   360E               LSRS     R6,R6,#+24
   \   00000136   5822               MOVS     R2,#+88
   \   00000138   7243               MULS     R2,R6,R2
   \   0000013A   AA18               ADDS     R2,R5,R2
   \   0000013C   1018               ADDS     R0,R2,R0
   \   0000013E   2730               ADDS     R0,R0,#+39
   \   00000140   0078               LDRB     R0,[R0, #+0]
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000146   3F0E               LSRS     R7,R7,#+24
   \   00000148   0420               MOVS     R0,#+4
   \   0000014A   7843               MULS     R0,R7,R0
   \   0000014C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000014E   360E               LSRS     R6,R6,#+24
   \   00000150   5821               MOVS     R1,#+88
   \   00000152   7143               MULS     R1,R6,R1
   \   00000154   6918               ADDS     R1,R5,R1
   \   00000156   0818               ADDS     R0,R1,R0
   \   00000158   2630               ADDS     R0,R0,#+38
   \   0000015A   0378               LDRB     R3,[R0, #+0]
   \   0000015C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000015E   3F0E               LSRS     R7,R7,#+24
   \   00000160   0420               MOVS     R0,#+4
   \   00000162   7843               MULS     R0,R7,R0
   \   00000164   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000166   360E               LSRS     R6,R6,#+24
   \   00000168   5821               MOVS     R1,#+88
   \   0000016A   7143               MULS     R1,R6,R1
   \   0000016C   6918               ADDS     R1,R5,R1
   \   0000016E   0818               ADDS     R0,R1,R0
   \   00000170   2530               ADDS     R0,R0,#+37
   \   00000172   0278               LDRB     R2,[R0, #+0]
   \   00000174   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000176   3F0E               LSRS     R7,R7,#+24
   \   00000178   0420               MOVS     R0,#+4
   \   0000017A   7843               MULS     R0,R7,R0
   \   0000017C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000017E   360E               LSRS     R6,R6,#+24
   \   00000180   5821               MOVS     R1,#+88
   \   00000182   7143               MULS     R1,R6,R1
   \   00000184   6918               ADDS     R1,R5,R1
   \   00000186   0818               ADDS     R0,R1,R0
   \   00000188   2430               ADDS     R0,R0,#+36
   \   0000018A   0178               LDRB     R1,[R0, #+0]
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   ........           BL       ZoneGraph
   \   00000192   04B0               ADD      SP,SP,#+16
   5028              
   5029              }
   5030             }
   \                     ??ScreenDesign1_Paint_8:
   \   00000194   7F1C               ADDS     R7,R7,#+1
   \                     ??ScreenDesign1_Paint_6:
   \   00000196   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000198   3F0E               LSRS     R7,R7,#+24
   \   0000019A   042F               CMP      R7,#+4
   \   0000019C   AED3               BCC      ??ScreenDesign1_Paint_7
   5031          
   5032             //analogi
   5033             for (char i=0; i<ScrenAnalogNr; i++)
   \   0000019E   0024               MOVS     R4,#+0
   \   000001A0   47E0               B        ??ScreenDesign1_Paint_9
   5034             {
   5035                 if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Paint_10:
   \   000001A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001A4   240E               LSRS     R4,R4,#+24
   \   000001A6   0420               MOVS     R0,#+4
   \   000001A8   6043               MULS     R0,R4,R0
   \   000001AA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001AC   360E               LSRS     R6,R6,#+24
   \   000001AE   5821               MOVS     R1,#+88
   \   000001B0   7143               MULS     R1,R6,R1
   \   000001B2   6918               ADDS     R1,R5,R1
   \   000001B4   0818               ADDS     R0,R1,R0
   \   000001B6   3630               ADDS     R0,R0,#+54
   \   000001B8   0078               LDRB     R0,[R0, #+0]
   \   000001BA   0128               CMP      R0,#+1
   \   000001BC   38D3               BCC      ??ScreenDesign1_Paint_11
   5036              {
   5037                      ZoneGraph(0,
   5038                      ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   5039                      ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   5040                      ScreenPaternDesign[PaternDesign].Value[i].Width,
   5041                      ScreenPaternDesign[PaternDesign].Value[i].Height,
   5042                      "Analo. ",0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   0020               MOVS     R0,#+0
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   9F49               LDR      R1,??ScreenDesign1_Paint_12  ;; `?<Constant "Analo. ">`
   \   000001C6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001C8   240E               LSRS     R4,R4,#+24
   \   000001CA   0420               MOVS     R0,#+4
   \   000001CC   6043               MULS     R0,R4,R0
   \   000001CE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001D0   360E               LSRS     R6,R6,#+24
   \   000001D2   5822               MOVS     R2,#+88
   \   000001D4   7243               MULS     R2,R6,R2
   \   000001D6   AA18               ADDS     R2,R5,R2
   \   000001D8   1018               ADDS     R0,R2,R0
   \   000001DA   3730               ADDS     R0,R0,#+55
   \   000001DC   0078               LDRB     R0,[R0, #+0]
   \   000001DE   03B4               PUSH     {R0,R1}
   \   000001E0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001E2   240E               LSRS     R4,R4,#+24
   \   000001E4   0420               MOVS     R0,#+4
   \   000001E6   6043               MULS     R0,R4,R0
   \   000001E8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001EA   360E               LSRS     R6,R6,#+24
   \   000001EC   5821               MOVS     R1,#+88
   \   000001EE   7143               MULS     R1,R6,R1
   \   000001F0   6918               ADDS     R1,R5,R1
   \   000001F2   0818               ADDS     R0,R1,R0
   \   000001F4   3630               ADDS     R0,R0,#+54
   \   000001F6   0378               LDRB     R3,[R0, #+0]
   \   000001F8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001FA   240E               LSRS     R4,R4,#+24
   \   000001FC   0420               MOVS     R0,#+4
   \   000001FE   6043               MULS     R0,R4,R0
   \   00000200   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000202   360E               LSRS     R6,R6,#+24
   \   00000204   5821               MOVS     R1,#+88
   \   00000206   7143               MULS     R1,R6,R1
   \   00000208   6918               ADDS     R1,R5,R1
   \   0000020A   0818               ADDS     R0,R1,R0
   \   0000020C   3530               ADDS     R0,R0,#+53
   \   0000020E   0278               LDRB     R2,[R0, #+0]
   \   00000210   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000212   240E               LSRS     R4,R4,#+24
   \   00000214   0420               MOVS     R0,#+4
   \   00000216   6043               MULS     R0,R4,R0
   \   00000218   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000021A   360E               LSRS     R6,R6,#+24
   \   0000021C   5821               MOVS     R1,#+88
   \   0000021E   7143               MULS     R1,R6,R1
   \   00000220   6918               ADDS     R1,R5,R1
   \   00000222   0818               ADDS     R0,R1,R0
   \   00000224   3430               ADDS     R0,R0,#+52
   \   00000226   0178               LDRB     R1,[R0, #+0]
   \   00000228   0020               MOVS     R0,#+0
   \   0000022A   ........           BL       ZoneGraph
   \   0000022E   04B0               ADD      SP,SP,#+16
   5043              
   5044              }
   5045             }
   \                     ??ScreenDesign1_Paint_11:
   \   00000230   641C               ADDS     R4,R4,#+1
   \                     ??ScreenDesign1_Paint_9:
   \   00000232   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000234   240E               LSRS     R4,R4,#+24
   \   00000236   042C               CMP      R4,#+4
   \   00000238   B3D3               BCC      ??ScreenDesign1_Paint_10
   5046            
   5047             //Linie
   5048             for (char i=0; i<ScrenLineNr; i++)
   \   0000023A   0024               MOVS     R4,#+0
   \   0000023C   27E0               B        ??ScreenDesign1_Paint_13
   5049             {
   5050              if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
   5051              {
   5052                  if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
   5053                  {
   5054                      H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
   5055                  }else{
   5056                      V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??ScreenDesign1_Paint_14:
   \   0000023E   0123               MOVS     R3,#+1
   \   00000240   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000242   240E               LSRS     R4,R4,#+24
   \   00000244   0420               MOVS     R0,#+4
   \   00000246   6043               MULS     R0,R4,R0
   \   00000248   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000024A   360E               LSRS     R6,R6,#+24
   \   0000024C   5821               MOVS     R1,#+88
   \   0000024E   7143               MULS     R1,R6,R1
   \   00000250   6918               ADDS     R1,R5,R1
   \   00000252   0818               ADDS     R0,R1,R0
   \   00000254   4730               ADDS     R0,R0,#+71
   \   00000256   0278               LDRB     R2,[R0, #+0]
   \   00000258   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000025A   240E               LSRS     R4,R4,#+24
   \   0000025C   0420               MOVS     R0,#+4
   \   0000025E   6043               MULS     R0,R4,R0
   \   00000260   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000262   360E               LSRS     R6,R6,#+24
   \   00000264   5821               MOVS     R1,#+88
   \   00000266   7143               MULS     R1,R6,R1
   \   00000268   6918               ADDS     R1,R5,R1
   \   0000026A   0818               ADDS     R0,R1,R0
   \   0000026C   4530               ADDS     R0,R0,#+69
   \   0000026E   0178               LDRB     R1,[R0, #+0]
   \   00000270   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000272   240E               LSRS     R4,R4,#+24
   \   00000274   0420               MOVS     R0,#+4
   \   00000276   6043               MULS     R0,R4,R0
   \   00000278   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000027A   360E               LSRS     R6,R6,#+24
   \   0000027C   5827               MOVS     R7,#+88
   \   0000027E   7743               MULS     R7,R6,R7
   \   00000280   EF19               ADDS     R7,R5,R7
   \   00000282   3818               ADDS     R0,R7,R0
   \   00000284   4430               ADDS     R0,R0,#+68
   \   00000286   0078               LDRB     R0,[R0, #+0]
   \   00000288   ........           BL       V_line
   5057              
   5058                  }
   \                     ??ScreenDesign1_Paint_15:
   \   0000028C   641C               ADDS     R4,R4,#+1
   \                     ??ScreenDesign1_Paint_13:
   \   0000028E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000290   240E               LSRS     R4,R4,#+24
   \   00000292   022C               CMP      R4,#+2
   \   00000294   4FD2               BCS      ??ScreenDesign1_Paint_16
   \   00000296   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000298   240E               LSRS     R4,R4,#+24
   \   0000029A   0420               MOVS     R0,#+4
   \   0000029C   6043               MULS     R0,R4,R0
   \   0000029E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002A0   360E               LSRS     R6,R6,#+24
   \   000002A2   5821               MOVS     R1,#+88
   \   000002A4   7143               MULS     R1,R6,R1
   \   000002A6   6918               ADDS     R1,R5,R1
   \   000002A8   0818               ADDS     R0,R1,R0
   \   000002AA   4630               ADDS     R0,R0,#+70
   \   000002AC   0078               LDRB     R0,[R0, #+0]
   \   000002AE   0128               CMP      R0,#+1
   \   000002B0   ECD3               BCC      ??ScreenDesign1_Paint_15
   \   000002B2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002B4   240E               LSRS     R4,R4,#+24
   \   000002B6   0420               MOVS     R0,#+4
   \   000002B8   6043               MULS     R0,R4,R0
   \   000002BA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002BC   360E               LSRS     R6,R6,#+24
   \   000002BE   5821               MOVS     R1,#+88
   \   000002C0   7143               MULS     R1,R6,R1
   \   000002C2   6918               ADDS     R1,R5,R1
   \   000002C4   0818               ADDS     R0,R1,R0
   \   000002C6   4730               ADDS     R0,R0,#+71
   \   000002C8   0078               LDRB     R0,[R0, #+0]
   \   000002CA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002CC   240E               LSRS     R4,R4,#+24
   \   000002CE   0421               MOVS     R1,#+4
   \   000002D0   6143               MULS     R1,R4,R1
   \   000002D2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002D4   360E               LSRS     R6,R6,#+24
   \   000002D6   5822               MOVS     R2,#+88
   \   000002D8   7243               MULS     R2,R6,R2
   \   000002DA   AA18               ADDS     R2,R5,R2
   \   000002DC   5118               ADDS     R1,R2,R1
   \   000002DE   4631               ADDS     R1,R1,#+70
   \   000002E0   0978               LDRB     R1,[R1, #+0]
   \   000002E2   8842               CMP      R0,R1
   \   000002E4   ABD2               BCS      ??ScreenDesign1_Paint_14
   \   000002E6   0123               MOVS     R3,#+1
   \   000002E8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002EA   240E               LSRS     R4,R4,#+24
   \   000002EC   0420               MOVS     R0,#+4
   \   000002EE   6043               MULS     R0,R4,R0
   \   000002F0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002F2   360E               LSRS     R6,R6,#+24
   \   000002F4   5821               MOVS     R1,#+88
   \   000002F6   7143               MULS     R1,R6,R1
   \   000002F8   6918               ADDS     R1,R5,R1
   \   000002FA   0818               ADDS     R0,R1,R0
   \   000002FC   4630               ADDS     R0,R0,#+70
   \   000002FE   0278               LDRB     R2,[R0, #+0]
   \   00000300   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000302   240E               LSRS     R4,R4,#+24
   \   00000304   0420               MOVS     R0,#+4
   \   00000306   6043               MULS     R0,R4,R0
   \   00000308   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000030A   360E               LSRS     R6,R6,#+24
   \   0000030C   5821               MOVS     R1,#+88
   \   0000030E   7143               MULS     R1,R6,R1
   \   00000310   6918               ADDS     R1,R5,R1
   \   00000312   0818               ADDS     R0,R1,R0
   \   00000314   4530               ADDS     R0,R0,#+69
   \   00000316   0178               LDRB     R1,[R0, #+0]
   \   00000318   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000031A   240E               LSRS     R4,R4,#+24
   \   0000031C   0420               MOVS     R0,#+4
   \   0000031E   6043               MULS     R0,R4,R0
   \   00000320   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000322   360E               LSRS     R6,R6,#+24
   \   00000324   5827               MOVS     R7,#+88
   \   00000326   7743               MULS     R7,R6,R7
   \   00000328   EF19               ADDS     R7,R5,R7
   \   0000032A   3818               ADDS     R0,R7,R0
   \   0000032C   4430               ADDS     R0,R0,#+68
   \   0000032E   0078               LDRB     R0,[R0, #+0]
   \   00000330   ........           BL       H_line
   \   00000334   AAE7               B        ??ScreenDesign1_Paint_15
   5059              }
   5060             }
   5061          
   5062             //Zegar
   5063             for (char i=0; i<ScrenLineNr; i++)
   \                     ??ScreenDesign1_Paint_16:
   \   00000336   0024               MOVS     R4,#+0
   \   00000338   40E0               B        ??ScreenDesign1_Paint_17
   \   0000033A   C046               Nop      
   \                     ??ScreenDesign1_Paint_0:
   \   0000033C   ........           DC32     CurModifSheet
   \   00000340   ........           DC32     ScreenSetTab_0
   \   00000344   ........           DC32     ScreenSetTab_1
   \   00000348   ........           DC32     `?<Constant {129, 0}>`
   \   0000034C   ........           DC32     ButtonName
   5064             {
   5065              if (ScreenPaternDesign[PaternDesign].Time.Width>0)
   \                     ??ScreenDesign1_Paint_18:
   \   00000350   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000352   360E               LSRS     R6,R6,#+24
   \   00000354   5820               MOVS     R0,#+88
   \   00000356   7043               MULS     R0,R6,R0
   \   00000358   2818               ADDS     R0,R5,R0
   \   0000035A   5230               ADDS     R0,R0,#+82
   \   0000035C   0078               LDRB     R0,[R0, #+0]
   \   0000035E   0128               CMP      R0,#+1
   \   00000360   2BD3               BCC      ??ScreenDesign1_Paint_19
   5066              {
   5067                      ZoneGraph(0,
   5068                      ScreenPaternDesign[PaternDesign].Time.Poz.x,
   5069                      ScreenPaternDesign[PaternDesign].Time.Poz.y,
   5070                      ScreenPaternDesign[PaternDesign].Time.Width,
   5071                      ScreenPaternDesign[PaternDesign].Time.Height,
   5072                      Speech[g_leng].Zegar,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000362   82B0               SUB      SP,SP,#+8
   \   00000364   0020               MOVS     R0,#+0
   \   00000366   0090               STR      R0,[SP, #+0]
   \   00000368   3748               LDR      R0,??ScreenDesign1_Paint_12+0x4  ;; 0x3de
   \   0000036A   3849               LDR      R1,??ScreenDesign1_Paint_12+0x8  ;; g_leng
   \   0000036C   0968               LDR      R1,[R1, #+0]
   \   0000036E   384A               LDR      R2,??ScreenDesign1_Paint_12+0xC  ;; 0xa7d
   \   00000370   5143               MULS     R1,R2,R1
   \   00000372   384A               LDR      R2,??ScreenDesign1_Paint_12+0x10  ;; Speech
   \   00000374   5118               ADDS     R1,R2,R1
   \   00000376   0918               ADDS     R1,R1,R0
   \   00000378   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000037A   360E               LSRS     R6,R6,#+24
   \   0000037C   5820               MOVS     R0,#+88
   \   0000037E   7043               MULS     R0,R6,R0
   \   00000380   2818               ADDS     R0,R5,R0
   \   00000382   5330               ADDS     R0,R0,#+83
   \   00000384   0078               LDRB     R0,[R0, #+0]
   \   00000386   03B4               PUSH     {R0,R1}
   \   00000388   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000038A   360E               LSRS     R6,R6,#+24
   \   0000038C   5820               MOVS     R0,#+88
   \   0000038E   7043               MULS     R0,R6,R0
   \   00000390   2818               ADDS     R0,R5,R0
   \   00000392   5230               ADDS     R0,R0,#+82
   \   00000394   0378               LDRB     R3,[R0, #+0]
   \   00000396   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000398   360E               LSRS     R6,R6,#+24
   \   0000039A   5820               MOVS     R0,#+88
   \   0000039C   7043               MULS     R0,R6,R0
   \   0000039E   2818               ADDS     R0,R5,R0
   \   000003A0   5130               ADDS     R0,R0,#+81
   \   000003A2   0278               LDRB     R2,[R0, #+0]
   \   000003A4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003A6   360E               LSRS     R6,R6,#+24
   \   000003A8   5820               MOVS     R0,#+88
   \   000003AA   7043               MULS     R0,R6,R0
   \   000003AC   2818               ADDS     R0,R5,R0
   \   000003AE   5030               ADDS     R0,R0,#+80
   \   000003B0   0178               LDRB     R1,[R0, #+0]
   \   000003B2   0020               MOVS     R0,#+0
   \   000003B4   ........           BL       ZoneGraph
   \   000003B8   04B0               ADD      SP,SP,#+16
   5073              }
   5074             }  
   \                     ??ScreenDesign1_Paint_19:
   \   000003BA   641C               ADDS     R4,R4,#+1
   \                     ??ScreenDesign1_Paint_17:
   \   000003BC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003BE   240E               LSRS     R4,R4,#+24
   \   000003C0   022C               CMP      R4,#+2
   \   000003C2   C5D3               BCC      ??ScreenDesign1_Paint_18
   5075            
   5076             //Du¿a temperatura
   5077             for (char i=0; i<ScrenLineNr; i++)
   \   000003C4   0024               MOVS     R4,#+0
   \   000003C6   35E0               B        ??ScreenDesign1_Paint_20
   5078             {
   5079              if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \                     ??ScreenDesign1_Paint_21:
   \   000003C8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003CA   360E               LSRS     R6,R6,#+24
   \   000003CC   5820               MOVS     R0,#+88
   \   000003CE   7043               MULS     R0,R6,R0
   \   000003D0   2818               ADDS     R0,R5,R0
   \   000003D2   4E30               ADDS     R0,R0,#+78
   \   000003D4   0078               LDRB     R0,[R0, #+0]
   \   000003D6   0128               CMP      R0,#+1
   \   000003D8   2BD3               BCC      ??ScreenDesign1_Paint_22
   5080              {
   5081                      ZoneGraph(0,
   5082                      ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   5083                      ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   5084                      ScreenPaternDesign[PaternDesign].Temperature.Width,
   5085                      ScreenPaternDesign[PaternDesign].Temperature.Height,
   5086                      Speech[g_leng].Temperatura,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000003DA   82B0               SUB      SP,SP,#+8
   \   000003DC   0020               MOVS     R0,#+0
   \   000003DE   0090               STR      R0,[SP, #+0]
   \   000003E0   1D48               LDR      R0,??ScreenDesign1_Paint_12+0x14  ;; 0x753
   \   000003E2   1A49               LDR      R1,??ScreenDesign1_Paint_12+0x8  ;; g_leng
   \   000003E4   0968               LDR      R1,[R1, #+0]
   \   000003E6   1A4A               LDR      R2,??ScreenDesign1_Paint_12+0xC  ;; 0xa7d
   \   000003E8   5143               MULS     R1,R2,R1
   \   000003EA   1A4A               LDR      R2,??ScreenDesign1_Paint_12+0x10  ;; Speech
   \   000003EC   5118               ADDS     R1,R2,R1
   \   000003EE   0918               ADDS     R1,R1,R0
   \   000003F0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003F2   360E               LSRS     R6,R6,#+24
   \   000003F4   5820               MOVS     R0,#+88
   \   000003F6   7043               MULS     R0,R6,R0
   \   000003F8   2818               ADDS     R0,R5,R0
   \   000003FA   4F30               ADDS     R0,R0,#+79
   \   000003FC   0078               LDRB     R0,[R0, #+0]
   \   000003FE   03B4               PUSH     {R0,R1}
   \   00000400   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000402   360E               LSRS     R6,R6,#+24
   \   00000404   5820               MOVS     R0,#+88
   \   00000406   7043               MULS     R0,R6,R0
   \   00000408   2818               ADDS     R0,R5,R0
   \   0000040A   4E30               ADDS     R0,R0,#+78
   \   0000040C   0378               LDRB     R3,[R0, #+0]
   \   0000040E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000410   360E               LSRS     R6,R6,#+24
   \   00000412   5820               MOVS     R0,#+88
   \   00000414   7043               MULS     R0,R6,R0
   \   00000416   2818               ADDS     R0,R5,R0
   \   00000418   4D30               ADDS     R0,R0,#+77
   \   0000041A   0278               LDRB     R2,[R0, #+0]
   \   0000041C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000041E   360E               LSRS     R6,R6,#+24
   \   00000420   5820               MOVS     R0,#+88
   \   00000422   7043               MULS     R0,R6,R0
   \   00000424   2818               ADDS     R0,R5,R0
   \   00000426   4C30               ADDS     R0,R0,#+76
   \   00000428   0178               LDRB     R1,[R0, #+0]
   \   0000042A   0020               MOVS     R0,#+0
   \   0000042C   ........           BL       ZoneGraph
   \   00000430   04B0               ADD      SP,SP,#+16
   5087                      
   5088          
   5089                      
   5090                      
   5091              }
   5092             }   
   \                     ??ScreenDesign1_Paint_22:
   \   00000432   641C               ADDS     R4,R4,#+1
   \                     ??ScreenDesign1_Paint_20:
   \   00000434   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000436   240E               LSRS     R4,R4,#+24
   \   00000438   022C               CMP      R4,#+2
   \   0000043A   C5D3               BCC      ??ScreenDesign1_Paint_21
   5093            
   5094            
   5095          }
   \   0000043C   01B0               ADD      SP,SP,#+4
   \   0000043E   F0BC               POP      {R4-R7}
   \   00000440   01BC               POP      {R0}
   \   00000442   0047               BX       R0               ;; return
   \                     ??ScreenDesign1_Paint_12:
   \   00000444   ........           DC32     `?<Constant "Analo. ">`
   \   00000448   DE030000           DC32     0x3de
   \   0000044C   ........           DC32     g_leng
   \   00000450   7D0A0000           DC32     0xa7d
   \   00000454   ........           DC32     Speech
   \   00000458   53070000           DC32     0x753
   5096          
   5097          

   \                                 In section .bss, align 1
   5098          char ZoneButtonClick=0;
   \                     ZoneButtonClick:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   5099          char ZoneGrapfNrClick=0;
   \                     ZoneGrapfNrClick:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   5100          char ZoneValueNrClick=0;
   \                     ZoneValueNrClick:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   5101          char ZoneLabelClick=0;
   \                     ZoneLabelClick:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   5102          int TxtSpaceAvable=0;
   \                     TxtSpaceAvable:
   \   00000000                      DS8 4
   5103          

   \                                 In section Debug.txt, align 4, keep-with-next
   5104          void ScreenDesign1_Event(_Screen* ScreenLokal)
   5105          {
   \                     ScreenDesign1_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   5106            char PaternDesign=ScreenLokal->PaternDesign;
   \   00000004   3C78               LDRB     R4,[R7, #+0]
   5107            
   5108            const _ScreenPaternDesign *ScreenPaternDesign;
   5109            if (CurModifSheet==0) 
   \   00000006   8E48               LDR      R0,??ScreenDesign1_Event_0  ;; CurModifSheet
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D1               BNE      ??ScreenDesign1_Event_1
   5110            {
   5111              ScreenPaternDesign=ScreenSetTab_0;
   \   0000000E   8D4D               LDR      R5,??ScreenDesign1_Event_0+0x4  ;; ScreenSetTab_0
   \   00000010   00E0               B        ??ScreenDesign1_Event_2
   5112            }else{
   5113              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Event_1:
   \   00000012   8D4D               LDR      R5,??ScreenDesign1_Event_0+0x8  ;; ScreenSetTab_1
   5114            }  
   5115            
   5116            
   5117                   char LabelButt[2] = {129,0};
   \                     ??ScreenDesign1_Event_2:
   \   00000014   6846               MOV      R0,SP
   \   00000016   8D49               LDR      R1,??ScreenDesign1_Event_0+0xC  ;; `?<Constant {129, 0}>_1`
   \   00000018   0A68               LDR      R2,[R1, #0]
   \   0000001A   0260               STR      R2,[R0, #0]
   5118                   if (Button(LabelButt,0,113,13,13)==1)
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0D20               MOVS     R0,#+13
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   0D23               MOVS     R3,#+13
   \   00000024   7122               MOVS     R2,#+113
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   02A8               ADD      R0,SP,#+8
   \   0000002A   ........           BL       Button
   \   0000002E   02B0               ADD      SP,SP,#+8
   \   00000030   0128               CMP      R0,#+1
   \   00000032   1BD1               BNE      ??ScreenDesign1_Event_3
   5119                   {
   5120                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000034   8648               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000036   0078               LDRB     R0,[R0, #+0]
   \   00000038   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   0BD1               BNE      ??ScreenDesign1_Event_4
   \   00000040   8448               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   00000042   8021               MOVS     R1,#+128
   \   00000044   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000046   0160               STR      R1,[R0, #+0]
   \   00000048   834A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   0000004A   8448               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   0000004C   03C8               LDM      R0!,{R0,R1}
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   0830               ADDS     R0,R0,#+8
   \   00000052   5941               ADCS     R1,R1,R3
   \   00000054   03C2               STM      R2!,{R0,R1}
   \   00000056   083A               SUBS     R2,R2,#+8
   5121                        MenuLevel=(MenuLevel/10);
   \                     ??ScreenDesign1_Event_4:
   \   00000058   8148               LDR      R0,??ScreenDesign1_Event_0+0x20  ;; MenuLevel
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   0A21               MOVS     R1,#+10
   \   0000005E   ........           BL       __aeabi_idivmod
   \   00000062   7F49               LDR      R1,??ScreenDesign1_Event_0+0x20  ;; MenuLevel
   \   00000064   0860               STR      R0,[R1, #+0]
   5122                        MenuPaint();
   \   00000066   ........           BL       MenuPaint
   \   0000006A   09E2               B        ??ScreenDesign1_Event_5
   5123                    } 
   5124                   else
   5125                   {   
   5126                     
   5127                     
   5128                    
   5129                   ZoneButtonClick=0;
   \                     ??ScreenDesign1_Event_3:
   \   0000006C   7D48               LDR      R0,??ScreenDesign1_Event_0+0x24  ;; ZoneButtonClick
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   0170               STRB     R1,[R0, #+0]
   5130                   ZoneGrapfNrClick=0;
   \   00000072   7D48               LDR      R0,??ScreenDesign1_Event_0+0x28  ;; ZoneGrapfNrClick
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   0170               STRB     R1,[R0, #+0]
   5131                 
   5132                   
   5133              
   5134                   //STREFY przycisków
   5135                    for (char i=0; i<ScrenButtonNr; i++)
   \   00000078   0026               MOVS     R6,#+0
   \   0000007A   64E0               B        ??ScreenDesign1_Event_6
   5136                    {
   5137                      if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Event_7:
   \   0000007C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000007E   360E               LSRS     R6,R6,#+24
   \   00000080   0420               MOVS     R0,#+4
   \   00000082   7043               MULS     R0,R6,R0
   \   00000084   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000086   240E               LSRS     R4,R4,#+24
   \   00000088   5821               MOVS     R1,#+88
   \   0000008A   6143               MULS     R1,R4,R1
   \   0000008C   6918               ADDS     R1,R5,R1
   \   0000008E   0818               ADDS     R0,R1,R0
   \   00000090   8078               LDRB     R0,[R0, #+2]
   \   00000092   0128               CMP      R0,#+1
   \   00000094   56D3               BCC      ??ScreenDesign1_Event_8
   5138                      {
   5139                        if (
   5140                            Zone(0,  //*  (char _Label[15], char poz_ , char poz_Y ,char width, char height, char LineType) 
   5141                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   5142                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   5143                            ScreenPaternDesign[PaternDesign].Button[i].Width,
   5144                            ScreenPaternDesign[PaternDesign].Button[i].Height,
   5145                            2)==1
   5146                           )
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000009A   360E               LSRS     R6,R6,#+24
   \   0000009C   0420               MOVS     R0,#+4
   \   0000009E   7043               MULS     R0,R6,R0
   \   000000A0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A2   240E               LSRS     R4,R4,#+24
   \   000000A4   5822               MOVS     R2,#+88
   \   000000A6   6243               MULS     R2,R4,R2
   \   000000A8   AA18               ADDS     R2,R5,R2
   \   000000AA   1018               ADDS     R0,R2,R0
   \   000000AC   C078               LDRB     R0,[R0, #+3]
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000B2   360E               LSRS     R6,R6,#+24
   \   000000B4   0420               MOVS     R0,#+4
   \   000000B6   7043               MULS     R0,R6,R0
   \   000000B8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000BA   240E               LSRS     R4,R4,#+24
   \   000000BC   5821               MOVS     R1,#+88
   \   000000BE   6143               MULS     R1,R4,R1
   \   000000C0   6918               ADDS     R1,R5,R1
   \   000000C2   0818               ADDS     R0,R1,R0
   \   000000C4   8378               LDRB     R3,[R0, #+2]
   \   000000C6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000C8   360E               LSRS     R6,R6,#+24
   \   000000CA   0420               MOVS     R0,#+4
   \   000000CC   7043               MULS     R0,R6,R0
   \   000000CE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D0   240E               LSRS     R4,R4,#+24
   \   000000D2   5821               MOVS     R1,#+88
   \   000000D4   6143               MULS     R1,R4,R1
   \   000000D6   6918               ADDS     R1,R5,R1
   \   000000D8   0818               ADDS     R0,R1,R0
   \   000000DA   4278               LDRB     R2,[R0, #+1]
   \   000000DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \   000000E0   0420               MOVS     R0,#+4
   \   000000E2   7043               MULS     R0,R6,R0
   \   000000E4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000E6   240E               LSRS     R4,R4,#+24
   \   000000E8   5821               MOVS     R1,#+88
   \   000000EA   6143               MULS     R1,R4,R1
   \   000000EC   6918               ADDS     R1,R5,R1
   \   000000EE   095C               LDRB     R1,[R1, R0]
   \   000000F0   0020               MOVS     R0,#+0
   \   000000F2   ........           BL       Zone
   \   000000F6   02B0               ADD      SP,SP,#+8
   \   000000F8   0128               CMP      R0,#+1
   \   000000FA   23D1               BNE      ??ScreenDesign1_Event_8
   5147                           {
   5148                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000FC   5448               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   000000FE   0078               LDRB     R0,[R0, #+0]
   \   00000100   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000102   000E               LSRS     R0,R0,#+24
   \   00000104   0028               CMP      R0,#+0
   \   00000106   0BD1               BNE      ??ScreenDesign1_Event_9
   \   00000108   5248               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000010A   8021               MOVS     R1,#+128
   \   0000010C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000010E   0160               STR      R1,[R0, #+0]
   \   00000110   514A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   00000112   5248               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000114   03C8               LDM      R0!,{R0,R1}
   \   00000116   0023               MOVS     R3,#+0
   \   00000118   0830               ADDS     R0,R0,#+8
   \   0000011A   5941               ADCS     R1,R1,R3
   \   0000011C   03C2               STM      R2!,{R0,R1}
   \   0000011E   083A               SUBS     R2,R2,#+8
   5149                             ZoneButtonClick=i+1;
   \                     ??ScreenDesign1_Event_9:
   \   00000120   5049               LDR      R1,??ScreenDesign1_Event_0+0x24  ;; ZoneButtonClick
   \   00000122   3000               MOVS     R0,R6
   \   00000124   401C               ADDS     R0,R0,#+1
   \   00000126   0870               STRB     R0,[R1, #+0]
   5150                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Button[i].Width-6;
   \   00000128   D748               LDR      R0,??ScreenDesign1_Event_10  ;; TxtSpaceAvable
   \   0000012A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012C   360E               LSRS     R6,R6,#+24
   \   0000012E   0421               MOVS     R1,#+4
   \   00000130   7143               MULS     R1,R6,R1
   \   00000132   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000134   240E               LSRS     R4,R4,#+24
   \   00000136   5822               MOVS     R2,#+88
   \   00000138   6243               MULS     R2,R4,R2
   \   0000013A   AA18               ADDS     R2,R5,R2
   \   0000013C   5118               ADDS     R1,R2,R1
   \   0000013E   8978               LDRB     R1,[R1, #+2]
   \   00000140   891F               SUBS     R1,R1,#+6
   \   00000142   0160               STR      R1,[R0, #+0]
   5151                           }
   5152                      }
   5153                    }
   \                     ??ScreenDesign1_Event_8:
   \   00000144   761C               ADDS     R6,R6,#+1
   \                     ??ScreenDesign1_Event_6:
   \   00000146   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000148   360E               LSRS     R6,R6,#+24
   \   0000014A   092E               CMP      R6,#+9
   \   0000014C   96D3               BCC      ??ScreenDesign1_Event_7
   5154                    
   5155          
   5156                     
   5157                     
   5158                     //Strefy grafiki
   5159                     ZoneGrapfNrClick=0xff;
   \   0000014E   4648               LDR      R0,??ScreenDesign1_Event_0+0x28  ;; ZoneGrapfNrClick
   \   00000150   FF21               MOVS     R1,#+255
   \   00000152   0170               STRB     R1,[R0, #+0]
   5160                    for (char i=0; i<ScrenGraphNr; i++)
   \   00000154   0026               MOVS     R6,#+0
   \   00000156   69E0               B        ??ScreenDesign1_Event_11
   5161                    {
   5162                      if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Event_12:
   \   00000158   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000015A   360E               LSRS     R6,R6,#+24
   \   0000015C   0420               MOVS     R0,#+4
   \   0000015E   7043               MULS     R0,R6,R0
   \   00000160   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000162   240E               LSRS     R4,R4,#+24
   \   00000164   5821               MOVS     R1,#+88
   \   00000166   6143               MULS     R1,R4,R1
   \   00000168   6918               ADDS     R1,R5,R1
   \   0000016A   0818               ADDS     R0,R1,R0
   \   0000016C   2630               ADDS     R0,R0,#+38
   \   0000016E   0078               LDRB     R0,[R0, #+0]
   \   00000170   0128               CMP      R0,#+1
   \   00000172   5AD3               BCC      ??ScreenDesign1_Event_13
   5163                      {
   5164                        if (
   5165                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   5166                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   5167                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   5168                            ScreenPaternDesign[PaternDesign].Graph[i].Width,
   5169                            ScreenPaternDesign[PaternDesign].Graph[i].Height,
   5170                            2)==1
   5171                           )
   \   00000174   0221               MOVS     R1,#+2
   \   00000176   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000178   360E               LSRS     R6,R6,#+24
   \   0000017A   0420               MOVS     R0,#+4
   \   0000017C   7043               MULS     R0,R6,R0
   \   0000017E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000180   240E               LSRS     R4,R4,#+24
   \   00000182   5822               MOVS     R2,#+88
   \   00000184   6243               MULS     R2,R4,R2
   \   00000186   AA18               ADDS     R2,R5,R2
   \   00000188   1018               ADDS     R0,R2,R0
   \   0000018A   2730               ADDS     R0,R0,#+39
   \   0000018C   0078               LDRB     R0,[R0, #+0]
   \   0000018E   03B4               PUSH     {R0,R1}
   \   00000190   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000192   360E               LSRS     R6,R6,#+24
   \   00000194   0420               MOVS     R0,#+4
   \   00000196   7043               MULS     R0,R6,R0
   \   00000198   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000019A   240E               LSRS     R4,R4,#+24
   \   0000019C   5821               MOVS     R1,#+88
   \   0000019E   6143               MULS     R1,R4,R1
   \   000001A0   6918               ADDS     R1,R5,R1
   \   000001A2   0818               ADDS     R0,R1,R0
   \   000001A4   2630               ADDS     R0,R0,#+38
   \   000001A6   0378               LDRB     R3,[R0, #+0]
   \   000001A8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001AA   360E               LSRS     R6,R6,#+24
   \   000001AC   0420               MOVS     R0,#+4
   \   000001AE   7043               MULS     R0,R6,R0
   \   000001B0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001B2   240E               LSRS     R4,R4,#+24
   \   000001B4   5821               MOVS     R1,#+88
   \   000001B6   6143               MULS     R1,R4,R1
   \   000001B8   6918               ADDS     R1,R5,R1
   \   000001BA   0818               ADDS     R0,R1,R0
   \   000001BC   2530               ADDS     R0,R0,#+37
   \   000001BE   0278               LDRB     R2,[R0, #+0]
   \   000001C0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001C2   360E               LSRS     R6,R6,#+24
   \   000001C4   0420               MOVS     R0,#+4
   \   000001C6   7043               MULS     R0,R6,R0
   \   000001C8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001CA   240E               LSRS     R4,R4,#+24
   \   000001CC   5821               MOVS     R1,#+88
   \   000001CE   6143               MULS     R1,R4,R1
   \   000001D0   6918               ADDS     R1,R5,R1
   \   000001D2   0818               ADDS     R0,R1,R0
   \   000001D4   2430               ADDS     R0,R0,#+36
   \   000001D6   0178               LDRB     R1,[R0, #+0]
   \   000001D8   0020               MOVS     R0,#+0
   \   000001DA   ........           BL       Zone
   \   000001DE   02B0               ADD      SP,SP,#+8
   \   000001E0   0128               CMP      R0,#+1
   \   000001E2   22D1               BNE      ??ScreenDesign1_Event_13
   5172                           {
   5173                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000001E4   1A48               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   000001E6   0078               LDRB     R0,[R0, #+0]
   \   000001E8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001EA   000E               LSRS     R0,R0,#+24
   \   000001EC   0028               CMP      R0,#+0
   \   000001EE   0BD1               BNE      ??ScreenDesign1_Event_14
   \   000001F0   1848               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   000001F2   8021               MOVS     R1,#+128
   \   000001F4   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001F6   0160               STR      R1,[R0, #+0]
   \   000001F8   174A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000001FA   1848               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000001FC   03C8               LDM      R0!,{R0,R1}
   \   000001FE   0023               MOVS     R3,#+0
   \   00000200   0830               ADDS     R0,R0,#+8
   \   00000202   5941               ADCS     R1,R1,R3
   \   00000204   03C2               STM      R2!,{R0,R1}
   \   00000206   083A               SUBS     R2,R2,#+8
   5174                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Graph[i].Width-6;
   \                     ??ScreenDesign1_Event_14:
   \   00000208   9F48               LDR      R0,??ScreenDesign1_Event_10  ;; TxtSpaceAvable
   \   0000020A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000020C   360E               LSRS     R6,R6,#+24
   \   0000020E   0421               MOVS     R1,#+4
   \   00000210   7143               MULS     R1,R6,R1
   \   00000212   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000214   240E               LSRS     R4,R4,#+24
   \   00000216   5822               MOVS     R2,#+88
   \   00000218   6243               MULS     R2,R4,R2
   \   0000021A   AA18               ADDS     R2,R5,R2
   \   0000021C   5118               ADDS     R1,R2,R1
   \   0000021E   2631               ADDS     R1,R1,#+38
   \   00000220   0978               LDRB     R1,[R1, #+0]
   \   00000222   891F               SUBS     R1,R1,#+6
   \   00000224   0160               STR      R1,[R0, #+0]
   5175                             ZoneGrapfNrClick=i;
   \   00000226   1048               LDR      R0,??ScreenDesign1_Event_0+0x28  ;; ZoneGrapfNrClick
   \   00000228   0670               STRB     R6,[R0, #+0]
   5176                           }
   5177                      }
   5178                    }
   \                     ??ScreenDesign1_Event_13:
   \   0000022A   761C               ADDS     R6,R6,#+1
   \                     ??ScreenDesign1_Event_11:
   \   0000022C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000022E   360E               LSRS     R6,R6,#+24
   \   00000230   042E               CMP      R6,#+4
   \   00000232   91D3               BCC      ??ScreenDesign1_Event_12
   5179                    
   5180          
   5181                    //Strefy analogów
   5182                    ZoneValueNrClick=0xff;
   \   00000234   9548               LDR      R0,??ScreenDesign1_Event_10+0x4  ;; ZoneValueNrClick
   \   00000236   FF21               MOVS     R1,#+255
   \   00000238   0170               STRB     R1,[R0, #+0]
   5183                    for (char i=0; i<ScrenAnalogNr; i++)
   \   0000023A   0026               MOVS     R6,#+0
   \   0000023C   71E0               B        ??ScreenDesign1_Event_15
   \   0000023E   C046               Nop      
   \                     ??ScreenDesign1_Event_0:
   \   00000240   ........           DC32     CurModifSheet
   \   00000244   ........           DC32     ScreenSetTab_0
   \   00000248   ........           DC32     ScreenSetTab_1
   \   0000024C   ........           DC32     `?<Constant {129, 0}>_1`
   \   00000250   E9D71300           DC32     0x13d7e9
   \   00000254   30F4FFFF           DC32     0xfffff430
   \   00000258   ........           DC32     ButtonBipCounter
   \   0000025C   ........           DC32     g_counter
   \   00000260   ........           DC32     MenuLevel
   \   00000264   ........           DC32     ZoneButtonClick
   \   00000268   ........           DC32     ZoneGrapfNrClick
   5184                    {
   5185                      if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Event_16:
   \   0000026C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000026E   360E               LSRS     R6,R6,#+24
   \   00000270   0420               MOVS     R0,#+4
   \   00000272   7043               MULS     R0,R6,R0
   \   00000274   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000276   240E               LSRS     R4,R4,#+24
   \   00000278   5821               MOVS     R1,#+88
   \   0000027A   6143               MULS     R1,R4,R1
   \   0000027C   6918               ADDS     R1,R5,R1
   \   0000027E   0818               ADDS     R0,R1,R0
   \   00000280   3630               ADDS     R0,R0,#+54
   \   00000282   0078               LDRB     R0,[R0, #+0]
   \   00000284   0128               CMP      R0,#+1
   \   00000286   4BD3               BCC      ??ScreenDesign1_Event_17
   5186                      {
   5187                        if (
   5188                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   5189                            ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   5190                            ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   5191                            ScreenPaternDesign[PaternDesign].Value[i].Width,
   5192                            ScreenPaternDesign[PaternDesign].Value[i].Height,
   5193                            2)==1
   5194                           )
   \   00000288   0221               MOVS     R1,#+2
   \   0000028A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000028C   360E               LSRS     R6,R6,#+24
   \   0000028E   0420               MOVS     R0,#+4
   \   00000290   7043               MULS     R0,R6,R0
   \   00000292   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000294   240E               LSRS     R4,R4,#+24
   \   00000296   5822               MOVS     R2,#+88
   \   00000298   6243               MULS     R2,R4,R2
   \   0000029A   AA18               ADDS     R2,R5,R2
   \   0000029C   1018               ADDS     R0,R2,R0
   \   0000029E   3730               ADDS     R0,R0,#+55
   \   000002A0   0078               LDRB     R0,[R0, #+0]
   \   000002A2   03B4               PUSH     {R0,R1}
   \   000002A4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002A6   360E               LSRS     R6,R6,#+24
   \   000002A8   0420               MOVS     R0,#+4
   \   000002AA   7043               MULS     R0,R6,R0
   \   000002AC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002AE   240E               LSRS     R4,R4,#+24
   \   000002B0   5821               MOVS     R1,#+88
   \   000002B2   6143               MULS     R1,R4,R1
   \   000002B4   6918               ADDS     R1,R5,R1
   \   000002B6   0818               ADDS     R0,R1,R0
   \   000002B8   3630               ADDS     R0,R0,#+54
   \   000002BA   0378               LDRB     R3,[R0, #+0]
   \   000002BC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002BE   360E               LSRS     R6,R6,#+24
   \   000002C0   0420               MOVS     R0,#+4
   \   000002C2   7043               MULS     R0,R6,R0
   \   000002C4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002C6   240E               LSRS     R4,R4,#+24
   \   000002C8   5821               MOVS     R1,#+88
   \   000002CA   6143               MULS     R1,R4,R1
   \   000002CC   6918               ADDS     R1,R5,R1
   \   000002CE   0818               ADDS     R0,R1,R0
   \   000002D0   3530               ADDS     R0,R0,#+53
   \   000002D2   0278               LDRB     R2,[R0, #+0]
   \   000002D4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002D6   360E               LSRS     R6,R6,#+24
   \   000002D8   0420               MOVS     R0,#+4
   \   000002DA   7043               MULS     R0,R6,R0
   \   000002DC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002DE   240E               LSRS     R4,R4,#+24
   \   000002E0   5821               MOVS     R1,#+88
   \   000002E2   6143               MULS     R1,R4,R1
   \   000002E4   6918               ADDS     R1,R5,R1
   \   000002E6   0818               ADDS     R0,R1,R0
   \   000002E8   3430               ADDS     R0,R0,#+52
   \   000002EA   0178               LDRB     R1,[R0, #+0]
   \   000002EC   0020               MOVS     R0,#+0
   \   000002EE   ........           BL       Zone
   \   000002F2   02B0               ADD      SP,SP,#+8
   \   000002F4   0128               CMP      R0,#+1
   \   000002F6   13D1               BNE      ??ScreenDesign1_Event_17
   5195                           {
   5196                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000002F8   6548               LDR      R0,??ScreenDesign1_Event_10+0x8  ;; 0x13d7e9
   \   000002FA   0078               LDRB     R0,[R0, #+0]
   \   000002FC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002FE   000E               LSRS     R0,R0,#+24
   \   00000300   0028               CMP      R0,#+0
   \   00000302   0BD1               BNE      ??ScreenDesign1_Event_18
   \   00000304   6348               LDR      R0,??ScreenDesign1_Event_10+0xC  ;; 0xfffff430
   \   00000306   8021               MOVS     R1,#+128
   \   00000308   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000030A   0160               STR      R1,[R0, #+0]
   \   0000030C   624A               LDR      R2,??ScreenDesign1_Event_10+0x10  ;; ButtonBipCounter
   \   0000030E   6348               LDR      R0,??ScreenDesign1_Event_10+0x14  ;; g_counter
   \   00000310   03C8               LDM      R0!,{R0,R1}
   \   00000312   0023               MOVS     R3,#+0
   \   00000314   0830               ADDS     R0,R0,#+8
   \   00000316   5941               ADCS     R1,R1,R3
   \   00000318   03C2               STM      R2!,{R0,R1}
   \   0000031A   083A               SUBS     R2,R2,#+8
   5197                             ZoneValueNrClick=i;
   \                     ??ScreenDesign1_Event_18:
   \   0000031C   5B48               LDR      R0,??ScreenDesign1_Event_10+0x4  ;; ZoneValueNrClick
   \   0000031E   0670               STRB     R6,[R0, #+0]
   5198                           }
   5199                      }
   5200                    }
   \                     ??ScreenDesign1_Event_17:
   \   00000320   761C               ADDS     R6,R6,#+1
   \                     ??ScreenDesign1_Event_15:
   \   00000322   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000324   360E               LSRS     R6,R6,#+24
   \   00000326   042E               CMP      R6,#+4
   \   00000328   A0D3               BCC      ??ScreenDesign1_Event_16
   5201                    
   5202                    
   5203                    
   5204                    
   5205                       //Du¿a temperatura
   5206                     char  ZoneTemperature=0;
   \   0000032A   0026               MOVS     R6,#+0
   5207          
   5208                      if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \   0000032C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000032E   240E               LSRS     R4,R4,#+24
   \   00000330   5820               MOVS     R0,#+88
   \   00000332   6043               MULS     R0,R4,R0
   \   00000334   2818               ADDS     R0,R5,R0
   \   00000336   4E30               ADDS     R0,R0,#+78
   \   00000338   0078               LDRB     R0,[R0, #+0]
   \   0000033A   0128               CMP      R0,#+1
   \   0000033C   36D3               BCC      ??ScreenDesign1_Event_19
   5209                      {   
   5210                            if(
   5211                                Zone(0,
   5212                                ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   5213                                ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   5214                                ScreenPaternDesign[PaternDesign].Temperature.Width,
   5215                                ScreenPaternDesign[PaternDesign].Temperature.Height,
   5216                                2)==1  
   5217                              )
   \   0000033E   0221               MOVS     R1,#+2
   \   00000340   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000342   240E               LSRS     R4,R4,#+24
   \   00000344   5820               MOVS     R0,#+88
   \   00000346   6043               MULS     R0,R4,R0
   \   00000348   2818               ADDS     R0,R5,R0
   \   0000034A   4F30               ADDS     R0,R0,#+79
   \   0000034C   0078               LDRB     R0,[R0, #+0]
   \   0000034E   03B4               PUSH     {R0,R1}
   \   00000350   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000352   240E               LSRS     R4,R4,#+24
   \   00000354   5820               MOVS     R0,#+88
   \   00000356   6043               MULS     R0,R4,R0
   \   00000358   2818               ADDS     R0,R5,R0
   \   0000035A   4E30               ADDS     R0,R0,#+78
   \   0000035C   0378               LDRB     R3,[R0, #+0]
   \   0000035E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000360   240E               LSRS     R4,R4,#+24
   \   00000362   5820               MOVS     R0,#+88
   \   00000364   6043               MULS     R0,R4,R0
   \   00000366   2818               ADDS     R0,R5,R0
   \   00000368   4D30               ADDS     R0,R0,#+77
   \   0000036A   0278               LDRB     R2,[R0, #+0]
   \   0000036C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000036E   240E               LSRS     R4,R4,#+24
   \   00000370   5820               MOVS     R0,#+88
   \   00000372   4443               MULS     R4,R0,R4
   \   00000374   2819               ADDS     R0,R5,R4
   \   00000376   4C30               ADDS     R0,R0,#+76
   \   00000378   0178               LDRB     R1,[R0, #+0]
   \   0000037A   0020               MOVS     R0,#+0
   \   0000037C   ........           BL       Zone
   \   00000380   02B0               ADD      SP,SP,#+8
   \   00000382   0128               CMP      R0,#+1
   \   00000384   12D1               BNE      ??ScreenDesign1_Event_19
   5218                             {
   5219                               if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                            ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000386   4248               LDR      R0,??ScreenDesign1_Event_10+0x8  ;; 0x13d7e9
   \   00000388   0078               LDRB     R0,[R0, #+0]
   \   0000038A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000038C   000E               LSRS     R0,R0,#+24
   \   0000038E   0028               CMP      R0,#+0
   \   00000390   0BD1               BNE      ??ScreenDesign1_Event_20
   \   00000392   4048               LDR      R0,??ScreenDesign1_Event_10+0xC  ;; 0xfffff430
   \   00000394   8021               MOVS     R1,#+128
   \   00000396   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000398   0160               STR      R1,[R0, #+0]
   \   0000039A   3F4A               LDR      R2,??ScreenDesign1_Event_10+0x10  ;; ButtonBipCounter
   \   0000039C   3F48               LDR      R0,??ScreenDesign1_Event_10+0x14  ;; g_counter
   \   0000039E   03C8               LDM      R0!,{R0,R1}
   \   000003A0   0023               MOVS     R3,#+0
   \   000003A2   0830               ADDS     R0,R0,#+8
   \   000003A4   5941               ADCS     R1,R1,R3
   \   000003A6   03C2               STM      R2!,{R0,R1}
   \   000003A8   083A               SUBS     R2,R2,#+8
   5220                               ZoneTemperature=1;
   \                     ??ScreenDesign1_Event_20:
   \   000003AA   0126               MOVS     R6,#+1
   5221                             }
   5222                     }
   5223                    
   5224          
   5225                    //Strefa etykiety podstrony
   5226                     ZoneLabelClick=0;
   \                     ??ScreenDesign1_Event_19:
   \   000003AC   3C48               LDR      R0,??ScreenDesign1_Event_10+0x18  ;; ZoneLabelClick
   \   000003AE   0021               MOVS     R1,#+0
   \   000003B0   0170               STRB     R1,[R0, #+0]
   5227          
   5228                     if (CurModifSheet>0) 
   \   000003B2   3C48               LDR      R0,??ScreenDesign1_Event_10+0x1C  ;; CurModifSheet
   \   000003B4   0078               LDRB     R0,[R0, #+0]
   \   000003B6   0128               CMP      R0,#+1
   \   000003B8   0ED3               BCC      ??ScreenDesign1_Event_21
   5229                    {
   5230                        if (
   5231                            Zone(0, 15,114,38,12,
   5232                            2)==1
   5233                           )
   \   000003BA   0221               MOVS     R1,#+2
   \   000003BC   0C20               MOVS     R0,#+12
   \   000003BE   03B4               PUSH     {R0,R1}
   \   000003C0   2623               MOVS     R3,#+38
   \   000003C2   7222               MOVS     R2,#+114
   \   000003C4   0F21               MOVS     R1,#+15
   \   000003C6   0020               MOVS     R0,#+0
   \   000003C8   ........           BL       Zone
   \   000003CC   02B0               ADD      SP,SP,#+8
   \   000003CE   0128               CMP      R0,#+1
   \   000003D0   02D1               BNE      ??ScreenDesign1_Event_21
   5234                           {
   5235                             ZoneLabelClick=1;
   \   000003D2   3348               LDR      R0,??ScreenDesign1_Event_10+0x18  ;; ZoneLabelClick
   \   000003D4   0121               MOVS     R1,#+1
   \   000003D6   0170               STRB     R1,[R0, #+0]
   5236                           }          
   5237                    } 
   5238                    
   5239                        
   5240                    
   5241                   
   5242                    
   5243          
   5244                   
   5245                     if (ZoneButtonClick>0)
   \                     ??ScreenDesign1_Event_21:
   \   000003D8   3348               LDR      R0,??ScreenDesign1_Event_10+0x20  ;; ZoneButtonClick
   \   000003DA   0078               LDRB     R0,[R0, #+0]
   \   000003DC   0128               CMP      R0,#+1
   \   000003DE   10D3               BCC      ??ScreenDesign1_Event_22
   5246                     {
   5247                       //TextToChange=ScreenLokal->Button[ZoneButtonClick-1].Text;
   5248                       ButtonToChange=&(ScreenLokal->Button[ZoneButtonClick-1]);
   \   000003E0   3248               LDR      R0,??ScreenDesign1_Event_10+0x24  ;; ButtonToChange
   \   000003E2   3149               LDR      R1,??ScreenDesign1_Event_10+0x20  ;; ZoneButtonClick
   \   000003E4   0978               LDRB     R1,[R1, #+0]
   \   000003E6   0822               MOVS     R2,#+8
   \   000003E8   5143               MULS     R1,R2,R1
   \   000003EA   7918               ADDS     R1,R7,R1
   \   000003EC   C91C               ADDS     R1,R1,#+3
   \   000003EE   0160               STR      R1,[R0, #+0]
   5249                       MenuLevel=(MenuLevel*10+4); MenuPaint();
   \   000003F0   2F48               LDR      R0,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   000003F2   2F49               LDR      R1,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   000003F4   0968               LDR      R1,[R1, #+0]
   \   000003F6   0A22               MOVS     R2,#+10
   \   000003F8   5143               MULS     R1,R2,R1
   \   000003FA   091D               ADDS     R1,R1,#+4
   \   000003FC   0160               STR      R1,[R0, #+0]
   \   000003FE   ........           BL       MenuPaint
   5250                     }
   5251                    
   5252                    if (ZoneValueNrClick<0xFF)
   \                     ??ScreenDesign1_Event_22:
   \   00000402   2248               LDR      R0,??ScreenDesign1_Event_10+0x4  ;; ZoneValueNrClick
   \   00000404   0078               LDRB     R0,[R0, #+0]
   \   00000406   FF28               CMP      R0,#+255
   \   00000408   10D2               BCS      ??ScreenDesign1_Event_23
   5253                     {
   5254                       AnalogToChange=&(ScreenLokal->Analog[ZoneValueNrClick]);
   \   0000040A   2A48               LDR      R0,??ScreenDesign1_Event_10+0x2C  ;; AnalogToChange
   \   0000040C   1F49               LDR      R1,??ScreenDesign1_Event_10+0x4  ;; ZoneValueNrClick
   \   0000040E   0978               LDRB     R1,[R1, #+0]
   \   00000410   0722               MOVS     R2,#+7
   \   00000412   5143               MULS     R1,R2,R1
   \   00000414   7918               ADDS     R1,R7,R1
   \   00000416   6F31               ADDS     R1,R1,#+111
   \   00000418   0160               STR      R1,[R0, #+0]
   5255                       MenuLevel=(MenuLevel*10+3); MenuPaint();
   \   0000041A   2548               LDR      R0,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   0000041C   2449               LDR      R1,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   0000041E   0968               LDR      R1,[R1, #+0]
   \   00000420   0A22               MOVS     R2,#+10
   \   00000422   5143               MULS     R1,R2,R1
   \   00000424   C91C               ADDS     R1,R1,#+3
   \   00000426   0160               STR      R1,[R0, #+0]
   \   00000428   ........           BL       MenuPaint
   5256                     }
   5257                    
   5258                   
   5259                     if (ZoneLabelClick>0)
   \                     ??ScreenDesign1_Event_23:
   \   0000042C   1C48               LDR      R0,??ScreenDesign1_Event_10+0x18  ;; ZoneLabelClick
   \   0000042E   0078               LDRB     R0,[R0, #+0]
   \   00000430   0128               CMP      R0,#+1
   \   00000432   0BD3               BCC      ??ScreenDesign1_Event_24
   5260                     {
   5261                       TextToChange=ScreenLokal->Label;
   \   00000434   2048               LDR      R0,??ScreenDesign1_Event_10+0x30  ;; TextToChange
   \   00000436   7F1C               ADDS     R7,R7,#+1
   \   00000438   0760               STR      R7,[R0, #+0]
   5262                       MenuLevel=(MenuLevel*10+2); MenuPaint();
   \   0000043A   1D48               LDR      R0,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   0000043C   1C49               LDR      R1,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   0000043E   0968               LDR      R1,[R1, #+0]
   \   00000440   0A22               MOVS     R2,#+10
   \   00000442   5143               MULS     R1,R2,R1
   \   00000444   891C               ADDS     R1,R1,#+2
   \   00000446   0160               STR      R1,[R0, #+0]
   \   00000448   ........           BL       MenuPaint
   5263                     }
   5264                     
   5265                     if (ZoneTemperature>0)
   \                     ??ScreenDesign1_Event_24:
   \   0000044C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000044E   360E               LSRS     R6,R6,#+24
   \   00000450   012E               CMP      R6,#+1
   \   00000452   08D3               BCC      ??ScreenDesign1_Event_25
   5266                     {
   5267                       MenuLevel=(MenuLevel*10+5); MenuPaint();
   \   00000454   1648               LDR      R0,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   00000456   1649               LDR      R1,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   00000458   0968               LDR      R1,[R1, #+0]
   \   0000045A   0A22               MOVS     R2,#+10
   \   0000045C   5143               MULS     R1,R2,R1
   \   0000045E   491D               ADDS     R1,R1,#+5
   \   00000460   0160               STR      R1,[R0, #+0]
   \   00000462   ........           BL       MenuPaint
   5268                     }          
   5269             
   5270                    
   5271                     if (ZoneGrapfNrClick!=0xFF){MenuLevel=(MenuLevel*10+1); MenuPaint();}
   \                     ??ScreenDesign1_Event_25:
   \   00000466   1548               LDR      R0,??ScreenDesign1_Event_10+0x34  ;; ZoneGrapfNrClick
   \   00000468   0078               LDRB     R0,[R0, #+0]
   \   0000046A   FF28               CMP      R0,#+255
   \   0000046C   08D0               BEQ      ??ScreenDesign1_Event_5
   \   0000046E   1048               LDR      R0,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   00000470   0F49               LDR      R1,??ScreenDesign1_Event_10+0x28  ;; MenuLevel
   \   00000472   0968               LDR      R1,[R1, #+0]
   \   00000474   0A22               MOVS     R2,#+10
   \   00000476   5143               MULS     R1,R2,R1
   \   00000478   491C               ADDS     R1,R1,#+1
   \   0000047A   0160               STR      R1,[R0, #+0]
   \   0000047C   ........           BL       MenuPaint
   5272           
   5273                  
   5274                      
   5275                     
   5276                   
   5277            
   5278                   }
   5279                   
   5280                   
   5281          }
   \                     ??ScreenDesign1_Event_5:
   \   00000480   01B0               ADD      SP,SP,#+4
   \   00000482   F0BC               POP      {R4-R7}
   \   00000484   01BC               POP      {R0}
   \   00000486   0047               BX       R0               ;; return
   \                     ??ScreenDesign1_Event_10:
   \   00000488   ........           DC32     TxtSpaceAvable
   \   0000048C   ........           DC32     ZoneValueNrClick
   \   00000490   E9D71300           DC32     0x13d7e9
   \   00000494   30F4FFFF           DC32     0xfffff430
   \   00000498   ........           DC32     ButtonBipCounter
   \   0000049C   ........           DC32     g_counter
   \   000004A0   ........           DC32     ZoneLabelClick
   \   000004A4   ........           DC32     CurModifSheet
   \   000004A8   ........           DC32     ZoneButtonClick
   \   000004AC   ........           DC32     ButtonToChange
   \   000004B0   ........           DC32     MenuLevel
   \   000004B4   ........           DC32     AnalogToChange
   \   000004B8   ........           DC32     TextToChange
   \   000004BC   ........           DC32     ZoneGrapfNrClick
   5282          
   5283          
   5284          
   5285          

   \                                 In section Debug.txt, align 4, keep-with-next
   5286          void ButtonOptions_Paint(volatile _ButtonGraph *ButtonGraph)
   5287          {
   \                     ButtonOptions_Paint:
   \   00000000   7FB5               PUSH     {R0-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   5288           RowsPoz=0;
   \   00000004   2548               LDR      R0,??ButtonOptions_Paint_0  ;; RowsPoz
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   5289          
   5290           List_Paint(
   5291                        Speech[g_leng].Przycisk, //(char name[7]
   5292                        3,        //char Rows,
   5293                        15,       //char RowWith,
   5294                        0,        //char Y,
   5295                        0,        //char FormStyle,
   5296                        3,        //char algin,
   5297                        Speech[g_leng].Text, Speech[g_leng].Akcja, Speech[g_leng].Ukryj," ",0,0,0,0); //char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   22A1               ADR      R1,??ButtonOptions_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   2248               LDR      R0,??ButtonOptions_Paint_0+0x8  ;; 0x726
   \   0000001A   234A               LDR      R2,??ButtonOptions_Paint_0+0xC  ;; g_leng
   \   0000001C   1268               LDR      R2,[R2, #+0]
   \   0000001E   234B               LDR      R3,??ButtonOptions_Paint_0+0x10  ;; 0xa7d
   \   00000020   5A43               MULS     R2,R3,R2
   \   00000022   234B               LDR      R3,??ButtonOptions_Paint_0+0x14  ;; Speech
   \   00000024   9A18               ADDS     R2,R3,R2
   \   00000026   1018               ADDS     R0,R2,R0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   2248               LDR      R0,??ButtonOptions_Paint_0+0x18  ;; 0x5fa
   \   0000002C   1E49               LDR      R1,??ButtonOptions_Paint_0+0xC  ;; g_leng
   \   0000002E   0968               LDR      R1,[R1, #+0]
   \   00000030   1E4A               LDR      R2,??ButtonOptions_Paint_0+0x10  ;; 0xa7d
   \   00000032   5143               MULS     R1,R2,R1
   \   00000034   1E4A               LDR      R2,??ButtonOptions_Paint_0+0x14  ;; Speech
   \   00000036   5118               ADDS     R1,R2,R1
   \   00000038   0918               ADDS     R1,R1,R0
   \   0000003A   1F48               LDR      R0,??ButtonOptions_Paint_0+0x1C  ;; 0x717
   \   0000003C   1A4A               LDR      R2,??ButtonOptions_Paint_0+0xC  ;; g_leng
   \   0000003E   1268               LDR      R2,[R2, #+0]
   \   00000040   1A4B               LDR      R3,??ButtonOptions_Paint_0+0x10  ;; 0xa7d
   \   00000042   5A43               MULS     R2,R3,R2
   \   00000044   1A4B               LDR      R3,??ButtonOptions_Paint_0+0x14  ;; Speech
   \   00000046   9A18               ADDS     R2,R3,R2
   \   00000048   1018               ADDS     R0,R2,R0
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0321               MOVS     R1,#+3
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   0F22               MOVS     R2,#+15
   \   00000056   0321               MOVS     R1,#+3
   \   00000058   1848               LDR      R0,??ButtonOptions_Paint_0+0x20  ;; 0x5eb
   \   0000005A   134D               LDR      R5,??ButtonOptions_Paint_0+0xC  ;; g_leng
   \   0000005C   2D68               LDR      R5,[R5, #+0]
   \   0000005E   134E               LDR      R6,??ButtonOptions_Paint_0+0x10  ;; 0xa7d
   \   00000060   7543               MULS     R5,R6,R5
   \   00000062   134E               LDR      R6,??ButtonOptions_Paint_0+0x14  ;; Speech
   \   00000064   7519               ADDS     R5,R6,R5
   \   00000066   2818               ADDS     R0,R5,R0
   \   00000068   ........           BL       List_Paint
   \   0000006C   0AB0               ADD      SP,SP,#+40
   5298              
   5299                     //znacznik ukrycia przycisku
   5300                   if (ButtonGraph->Hide)
   \   0000006E   E079               LDRB     R0,[R4, #+7]
   \   00000070   C006               LSLS     R0,R0,#+27
   \   00000072   0FD5               BPL      ??ButtonOptions_Paint_1
   5301                        {
   5302                              
   5303                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000074   6846               MOV      R0,SP
   \   00000076   1249               LDR      R1,??ButtonOptions_Paint_0+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   \   00000078   1CC9               LDM      R1!,{R2-R4}
   \   0000007A   1CC0               STM      R0!,{R2-R4}
   \   0000007C   0C39               SUBS     R1,R1,#+12
   \   0000007E   0C38               SUBS     R0,R0,#+12
   5304                          CopyToCanvasPoint((char *)ekran_tab,50,97-(15*(2)),8,10); 
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0A20               MOVS     R0,#+10
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   0823               MOVS     R3,#+8
   \   00000088   4322               MOVS     R2,#+67
   \   0000008A   3221               MOVS     R1,#+50
   \   0000008C   02A8               ADD      R0,SP,#+8
   \   0000008E   ........           BL       CopyToCanvasPoint
   \   00000092   02B0               ADD      SP,SP,#+8
   5305                        }    
   5306          }
   \                     ??ButtonOptions_Paint_1:
   \   00000094   04B0               ADD      SP,SP,#+16
   \   00000096   70BC               POP      {R4-R6}
   \   00000098   01BC               POP      {R0}
   \   0000009A   0047               BX       R0               ;; return
   \                     ??ButtonOptions_Paint_0:
   \   0000009C   ........           DC32     RowsPoz
   \   000000A0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000A4   26070000           DC32     0x726
   \   000000A8   ........           DC32     g_leng
   \   000000AC   7D0A0000           DC32     0xa7d
   \   000000B0   ........           DC32     Speech
   \   000000B4   FA050000           DC32     0x5fa
   \   000000B8   17070000           DC32     0x717
   \   000000BC   EB050000           DC32     0x5eb
   \   000000C0   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   5307          
   5308          

   \                                 In section Debug.txt, align 4, keep-with-next
   5309          void ButtonOptions_Event(volatile _ButtonGraph *ButtonGraph)
   5310          {
   \                     ButtonOptions_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   5311            int odp=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,0);
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0320               MOVS     R0,#+3
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2148               LDR      R0,??ButtonOptions_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   2148               LDR      R0,??ButtonOptions_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   2048               LDR      R0,??ButtonOptions_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   2048               LDR      R0,??ButtonOptions_Event_0+0xC  ;; X_up
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   405F               LDRSH    R0,[R0, R5]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   5312            if (odp<0) 
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   09D5               BPL      ??ButtonOptions_Event_1
   5313                  {
   5314                    MenuLevel=(MenuLevel/10);
   \   00000032   1D48               LDR      R0,??ButtonOptions_Event_0+0x10  ;; MenuLevel
   \   00000034   0068               LDR      R0,[R0, #+0]
   \   00000036   0A21               MOVS     R1,#+10
   \   00000038   ........           BL       __aeabi_idivmod
   \   0000003C   1A49               LDR      R1,??ButtonOptions_Event_0+0x10  ;; MenuLevel
   \   0000003E   0860               STR      R0,[R1, #+0]
   5315                    MenuPaint();
   \   00000040   ........           BL       MenuPaint
   \   00000044   24E0               B        ??ButtonOptions_Event_2
   5316                  }else if (odp>0) 
   \                     ??ButtonOptions_Event_1:
   \   00000046   0128               CMP      R0,#+1
   \   00000048   22DB               BLT      ??ButtonOptions_Event_2
   5317                  {
   5318                   
   5319                    if  (odp<3)
   \   0000004A   0328               CMP      R0,#+3
   \   0000004C   12DA               BGE      ??ButtonOptions_Event_3
   5320                    {
   5321                      if (odp==1) {
   \   0000004E   0128               CMP      R0,#+1
   \   00000050   08D1               BNE      ??ButtonOptions_Event_4
   5322                        TextToChange=(char*)ButtonGraph->Text; 
   \   00000052   1649               LDR      R1,??ButtonOptions_Event_0+0x14  ;; TextToChange
   \   00000054   0C60               STR      R4,[R1, #+0]
   5323                        TextToChangeLength=ButonMaxText;
   \   00000056   1649               LDR      R1,??ButtonOptions_Event_0+0x18  ;; TextToChangeLength
   \   00000058   0722               MOVS     R2,#+7
   \   0000005A   0A70               STRB     R2,[R1, #+0]
   5324                        TextToChangeMaxPixSize=TxtSpaceAvable;
   \   0000005C   1549               LDR      R1,??ButtonOptions_Event_0+0x1C  ;; TextToChangeMaxPixSize
   \   0000005E   164A               LDR      R2,??ButtonOptions_Event_0+0x20  ;; TxtSpaceAvable
   \   00000060   1268               LDR      R2,[R2, #+0]
   \   00000062   0A70               STRB     R2,[R1, #+0]
   5325                      }
   5326                      MenuLevel=(MenuLevel*10)+odp; 
   \                     ??ButtonOptions_Event_4:
   \   00000064   1049               LDR      R1,??ButtonOptions_Event_0+0x10  ;; MenuLevel
   \   00000066   104A               LDR      R2,??ButtonOptions_Event_0+0x10  ;; MenuLevel
   \   00000068   1268               LDR      R2,[R2, #+0]
   \   0000006A   0A23               MOVS     R3,#+10
   \   0000006C   5A43               MULS     R2,R3,R2
   \   0000006E   1018               ADDS     R0,R2,R0
   \   00000070   0860               STR      R0,[R1, #+0]
   \   00000072   0BE0               B        ??ButtonOptions_Event_5
   5327                    }else{
   5328                      if (ButtonGraph->Hide) ButtonGraph->Hide=0; else ButtonGraph->Hide=1; 
   \                     ??ButtonOptions_Event_3:
   \   00000074   E079               LDRB     R0,[R4, #+7]
   \   00000076   C006               LSLS     R0,R0,#+27
   \   00000078   04D5               BPL      ??ButtonOptions_Event_6
   \   0000007A   E079               LDRB     R0,[R4, #+7]
   \   0000007C   EF21               MOVS     R1,#+239
   \   0000007E   0140               ANDS     R1,R1,R0
   \   00000080   E171               STRB     R1,[R4, #+7]
   \   00000082   03E0               B        ??ButtonOptions_Event_5
   \                     ??ButtonOptions_Event_6:
   \   00000084   E079               LDRB     R0,[R4, #+7]
   \   00000086   1021               MOVS     R1,#+16
   \   00000088   0143               ORRS     R1,R1,R0
   \   0000008A   E171               STRB     R1,[R4, #+7]
   5329                    }
   5330                   
   5331                    MenuPaint();
   \                     ??ButtonOptions_Event_5:
   \   0000008C   ........           BL       MenuPaint
   5332                  }
   5333                    
   5334                    
   5335                    
   5336                  
   5337          }
   \                     ??ButtonOptions_Event_2:
   \   00000090   01B0               ADD      SP,SP,#+4
   \   00000092   30BC               POP      {R4,R5}
   \   00000094   01BC               POP      {R0}
   \   00000096   0047               BX       R0               ;; return
   \                     ??ButtonOptions_Event_0:
   \   00000098   ........           DC32     Y_down
   \   0000009C   ........           DC32     X_down
   \   000000A0   ........           DC32     Y_up
   \   000000A4   ........           DC32     X_up
   \   000000A8   ........           DC32     MenuLevel
   \   000000AC   ........           DC32     TextToChange
   \   000000B0   ........           DC32     TextToChangeLength
   \   000000B4   ........           DC32     TextToChangeMaxPixSize
   \   000000B8   ........           DC32     TxtSpaceAvable
   5338          
   5339          

   \                                 In section Debug.txt, align 4, keep-with-next
   5340          void ButtonAction_Paint(volatile _ButtonGraph *ButtonGraph)
   5341          {
   \                     ButtonAction_Paint:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   5342          
   5343            List_Paint(Speech[g_leng].Akcja,1,98,0,0,0,"",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   47A0               ADR      R0,??ButtonAction_Paint_0  ;; 0x00, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6222               MOVS     R2,#+98
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   4448               LDR      R0,??ButtonAction_Paint_0+0x4  ;; 0x5fa
   \   0000002A   454D               LDR      R5,??ButtonAction_Paint_0+0x8  ;; g_leng
   \   0000002C   2D68               LDR      R5,[R5, #+0]
   \   0000002E   454E               LDR      R6,??ButtonAction_Paint_0+0xC  ;; 0xa7d
   \   00000030   7543               MULS     R5,R6,R5
   \   00000032   454E               LDR      R6,??ButtonAction_Paint_0+0x10  ;; Speech
   \   00000034   7519               ADDS     R5,R6,R5
   \   00000036   2818               ADDS     R0,R5,R0
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   5344               
   5345            
   5346            Button("< ",3,71,16,23);
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   1720               MOVS     R0,#+23
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   1023               MOVS     R3,#+16
   \   00000046   4722               MOVS     R2,#+71
   \   00000048   0321               MOVS     R1,#+3
   \   0000004A   40A0               ADR      R0,??ButtonAction_Paint_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   0000004C   ........           BL       Button
   \   00000050   02B0               ADD      SP,SP,#+8
   5347            Button("> ",44,71,16,23);
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   1720               MOVS     R0,#+23
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   1023               MOVS     R3,#+16
   \   0000005A   4722               MOVS     R2,#+71
   \   0000005C   2C21               MOVS     R1,#+44
   \   0000005E   3CA0               ADR      R0,??ButtonAction_Paint_0+0x18  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000060   ........           BL       Button
   \   00000064   02B0               ADD      SP,SP,#+8
   5348            
   5349            
   5350            Label(Speech[g_leng].OtworzStrone,0,3,96,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000066   82B0               SUB      SP,SP,#+8
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   0090               STR      R0,[SP, #+0]
   \   0000006C   7F21               MOVS     R1,#+127
   \   0000006E   0120               MOVS     R0,#+1
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   3A21               MOVS     R1,#+58
   \   00000074   0F20               MOVS     R0,#+15
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   6023               MOVS     R3,#+96
   \   0000007A   0322               MOVS     R2,#+3
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   3548               LDR      R0,??ButtonAction_Paint_0+0x1C  ;; 0x609
   \   00000080   2F4D               LDR      R5,??ButtonAction_Paint_0+0x8  ;; g_leng
   \   00000082   2D68               LDR      R5,[R5, #+0]
   \   00000084   2F4E               LDR      R6,??ButtonAction_Paint_0+0xC  ;; 0xa7d
   \   00000086   7543               MULS     R5,R6,R5
   \   00000088   2F4E               LDR      R6,??ButtonAction_Paint_0+0x10  ;; Speech
   \   0000008A   7519               ADDS     R5,R6,R5
   \   0000008C   2818               ADDS     R0,R5,R0
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   5351            
   5352            char txt[5]={'N','r', ':',0,0};
   \   00000094   6846               MOV      R0,SP
   \   00000096   3049               LDR      R1,??ButtonAction_Paint_0+0x20  ;; `?<Constant {78, 114, 58, 0, 0}>`
   \   00000098   0CC9               LDM      R1!,{R2,R3}
   \   0000009A   0CC0               STM      R0!,{R2,R3}
   \   0000009C   0839               SUBS     R1,R1,#+8
   \   0000009E   0838               SUBS     R0,R0,#+8
   5353            if (ButtonGraph->OpenPage==0)
   \   000000A0   E079               LDRB     R0,[R4, #+7]
   \   000000A2   0007               LSLS     R0,R0,#+28
   \   000000A4   18D1               BNE      ??ButtonAction_Paint_1
   5354            {
   5355                Label(Speech[g_leng].Wyl,0,23,75,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   7F21               MOVS     R1,#+127
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   1421               MOVS     R1,#+20
   \   000000B4   0520               MOVS     R0,#+5
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   4B23               MOVS     R3,#+75
   \   000000BA   1722               MOVS     R2,#+23
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   C320               MOVS     R0,#+195
   \   000000C0   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   000000C2   1F4C               LDR      R4,??ButtonAction_Paint_0+0x8  ;; g_leng
   \   000000C4   2468               LDR      R4,[R4, #+0]
   \   000000C6   1F4D               LDR      R5,??ButtonAction_Paint_0+0xC  ;; 0xa7d
   \   000000C8   6C43               MULS     R4,R5,R4
   \   000000CA   1F4D               LDR      R5,??ButtonAction_Paint_0+0x10  ;; Speech
   \   000000CC   2C19               ADDS     R4,R5,R4
   \   000000CE   2018               ADDS     R0,R4,R0
   \   000000D0   ........           BL       Label
   \   000000D4   06B0               ADD      SP,SP,#+24
   \   000000D6   2BE0               B        ??ButtonAction_Paint_2
   5356          
   5357            }else{
   5358                CharToStr(ButtonGraph->OpenPage-1, &txt[3], 1); //(char Value, char *Vstring, char ill);
   \                     ??ButtonAction_Paint_1:
   \   000000D8   0122               MOVS     R2,#+1
   \   000000DA   6946               MOV      R1,SP
   \   000000DC   C91C               ADDS     R1,R1,#+3
   \   000000DE   E079               LDRB     R0,[R4, #+7]
   \   000000E0   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000E2   000F               LSRS     R0,R0,#+28
   \   000000E4   401E               SUBS     R0,R0,#+1
   \   000000E6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E8   000E               LSRS     R0,R0,#+24
   \   000000EA   ........           BL       CharToStr
   5359                Label(txt,0,22,76,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0020               MOVS     R0,#+0
   \   000000F2   0090               STR      R0,[SP, #+0]
   \   000000F4   7F21               MOVS     R1,#+127
   \   000000F6   0120               MOVS     R0,#+1
   \   000000F8   03B4               PUSH     {R0,R1}
   \   000000FA   1421               MOVS     R1,#+20
   \   000000FC   0520               MOVS     R0,#+5
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   4C23               MOVS     R3,#+76
   \   00000102   1622               MOVS     R2,#+22
   \   00000104   0021               MOVS     R1,#+0
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
   5360          
   5361                Button(Speech[g_leng].Konfiguracja,3,54,57,14);
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0E20               MOVS     R0,#+14
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   3923               MOVS     R3,#+57
   \   00000116   3622               MOVS     R2,#+54
   \   00000118   0321               MOVS     R1,#+3
   \   0000011A   1048               LDR      R0,??ButtonAction_Paint_0+0x24  ;; 0x2df
   \   0000011C   084C               LDR      R4,??ButtonAction_Paint_0+0x8  ;; g_leng
   \   0000011E   2468               LDR      R4,[R4, #+0]
   \   00000120   084D               LDR      R5,??ButtonAction_Paint_0+0xC  ;; 0xa7d
   \   00000122   6C43               MULS     R4,R5,R4
   \   00000124   084D               LDR      R5,??ButtonAction_Paint_0+0x10  ;; Speech
   \   00000126   2C19               ADDS     R4,R5,R4
   \   00000128   2018               ADDS     R0,R4,R0
   \   0000012A   ........           BL       Button
   \   0000012E   02B0               ADD      SP,SP,#+8
   5362            }
   5363            
   5364          }
   \                     ??ButtonAction_Paint_2:
   \   00000130   02B0               ADD      SP,SP,#+8
   \   00000132   70BC               POP      {R4-R6}
   \   00000134   01BC               POP      {R0}
   \   00000136   0047               BX       R0               ;; return
   \                     ??ButtonAction_Paint_0:
   \   00000138   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000013C   FA050000           DC32     0x5fa
   \   00000140   ........           DC32     g_leng
   \   00000144   7D0A0000           DC32     0xa7d
   \   00000148   ........           DC32     Speech
   \   0000014C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000150   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000154   09060000           DC32     0x609
   \   00000158   ........           DC32     `?<Constant {78, 114, 58, 0, 0}>`
   \   0000015C   DF020000           DC32     0x2df
   5365          
   5366          

   \                                 In section Debug.txt, align 4, keep-with-next
   5367          void ButtonAction_Event(volatile _ButtonGraph *ButtonGraph)
   5368          {
   \                     ButtonAction_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5369            char MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   5370            int odp=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   5548               LDR      R0,??ButtonAction_Event_0  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   5448               LDR      R0,??ButtonAction_Event_0+0x4  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   5448               LDR      R0,??ButtonAction_Event_0+0x8  ;; Y_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   5348               LDR      R0,??ButtonAction_Event_0+0xC  ;; X_up
   \   00000026   0026               MOVS     R6,#+0
   \   00000028   805F               LDRSH    R0,[R0, R6]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   5371            if (odp<0) 
   \   00000030   0028               CMP      R0,#+0
   \   00000032   08D5               BPL      ??ButtonAction_Event_1
   5372                  {
   5373                    MenuLevel=(MenuLevel/10);
   \   00000034   5048               LDR      R0,??ButtonAction_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   4E49               LDR      R1,??ButtonAction_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
   5374                    MenuPaintExecute=1;
   \   00000042   0125               MOVS     R5,#+1
   \   00000044   86E0               B        ??ButtonAction_Event_2
   5375                  }else 
   5376                  {
   5377                    if ((Button("< ",3,71,16,23)==1) && (ButtonGraph->OpenPage>0))  
   \                     ??ButtonAction_Event_1:
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   1720               MOVS     R0,#+23
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   1023               MOVS     R3,#+16
   \   0000004E   4722               MOVS     R2,#+71
   \   00000050   0321               MOVS     R1,#+3
   \   00000052   4AA0               ADR      R0,??ButtonAction_Event_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000054   ........           BL       Button
   \   00000058   02B0               ADD      SP,SP,#+8
   \   0000005A   0128               CMP      R0,#+1
   \   0000005C   28D1               BNE      ??ButtonAction_Event_3
   \   0000005E   E079               LDRB     R0,[R4, #+7]
   \   00000060   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000062   000F               LSRS     R0,R0,#+28
   \   00000064   0128               CMP      R0,#+1
   \   00000066   23D3               BCC      ??ButtonAction_Event_3
   5378                    { 
   5379                      if ((ButtonGraph->OpenPage-1)!=CurModifSheet+1)
   \   00000068   E079               LDRB     R0,[R4, #+7]
   \   0000006A   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   0000006C   000F               LSRS     R0,R0,#+28
   \   0000006E   401E               SUBS     R0,R0,#+1
   \   00000070   4349               LDR      R1,??ButtonAction_Event_0+0x18  ;; CurModifSheet
   \   00000072   0978               LDRB     R1,[R1, #+0]
   \   00000074   491C               ADDS     R1,R1,#+1
   \   00000076   8842               CMP      R0,R1
   \   00000078   09D0               BEQ      ??ButtonAction_Event_4
   5380                      {
   5381                        ButtonGraph->OpenPage--;  MenuPaintExecute=1;
   \   0000007A   E079               LDRB     R0,[R4, #+7]
   \   0000007C   F021               MOVS     R1,#+240
   \   0000007E   0140               ANDS     R1,R1,R0
   \   00000080   401E               SUBS     R0,R0,#+1
   \   00000082   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000084   000F               LSRS     R0,R0,#+28
   \   00000086   0843               ORRS     R0,R0,R1
   \   00000088   E071               STRB     R0,[R4, #+7]
   \   0000008A   0125               MOVS     R5,#+1
   \   0000008C   10E0               B        ??ButtonAction_Event_3
   5382                      }else if ((ButtonGraph->OpenPage-1)>0)
   \                     ??ButtonAction_Event_4:
   \   0000008E   E079               LDRB     R0,[R4, #+7]
   \   00000090   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000092   000F               LSRS     R0,R0,#+28
   \   00000094   401E               SUBS     R0,R0,#+1
   \   00000096   0128               CMP      R0,#+1
   \   00000098   0ADB               BLT      ??ButtonAction_Event_3
   5383                      {
   5384                        ButtonGraph->OpenPage -=2;  MenuPaintExecute=1;
   \   0000009A   E079               LDRB     R0,[R4, #+7]
   \   0000009C   F021               MOVS     R1,#+240
   \   0000009E   0140               ANDS     R1,R1,R0
   \   000000A0   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000A2   000F               LSRS     R0,R0,#+28
   \   000000A4   801E               SUBS     R0,R0,#+2
   \   000000A6   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000A8   000F               LSRS     R0,R0,#+28
   \   000000AA   0843               ORRS     R0,R0,R1
   \   000000AC   E071               STRB     R0,[R4, #+7]
   \   000000AE   0125               MOVS     R5,#+1
   5385                      }
   5386                    } 
   5387                    if ((Button("> ",44,71,16,23)==1) && (ButtonGraph->OpenPage<ScreenNr)) 
   \                     ??ButtonAction_Event_3:
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1720               MOVS     R0,#+23
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1023               MOVS     R3,#+16
   \   000000B8   4722               MOVS     R2,#+71
   \   000000BA   2C21               MOVS     R1,#+44
   \   000000BC   31A0               ADR      R0,??ButtonAction_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   000000BE   ........           BL       Button
   \   000000C2   02B0               ADD      SP,SP,#+8
   \   000000C4   0128               CMP      R0,#+1
   \   000000C6   28D1               BNE      ??ButtonAction_Event_5
   \   000000C8   E079               LDRB     R0,[R4, #+7]
   \   000000CA   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000CC   000F               LSRS     R0,R0,#+28
   \   000000CE   0828               CMP      R0,#+8
   \   000000D0   23D2               BCS      ??ButtonAction_Event_5
   5388                    {
   5389                       if ((ButtonGraph->OpenPage+1)!=CurModifSheet+1)
   \   000000D2   E079               LDRB     R0,[R4, #+7]
   \   000000D4   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000D6   000F               LSRS     R0,R0,#+28
   \   000000D8   401C               ADDS     R0,R0,#+1
   \   000000DA   2949               LDR      R1,??ButtonAction_Event_0+0x18  ;; CurModifSheet
   \   000000DC   0978               LDRB     R1,[R1, #+0]
   \   000000DE   491C               ADDS     R1,R1,#+1
   \   000000E0   8842               CMP      R0,R1
   \   000000E2   09D0               BEQ      ??ButtonAction_Event_6
   5390                      {
   5391                        ButtonGraph->OpenPage++;  MenuPaintExecute=1;
   \   000000E4   E079               LDRB     R0,[R4, #+7]
   \   000000E6   F021               MOVS     R1,#+240
   \   000000E8   0140               ANDS     R1,R1,R0
   \   000000EA   401C               ADDS     R0,R0,#+1
   \   000000EC   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000EE   000F               LSRS     R0,R0,#+28
   \   000000F0   0843               ORRS     R0,R0,R1
   \   000000F2   E071               STRB     R0,[R4, #+7]
   \   000000F4   0125               MOVS     R5,#+1
   \   000000F6   10E0               B        ??ButtonAction_Event_5
   5392                      }else if (ButtonGraph->OpenPage+1<ScreenNr)
   \                     ??ButtonAction_Event_6:
   \   000000F8   E079               LDRB     R0,[R4, #+7]
   \   000000FA   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000FC   000F               LSRS     R0,R0,#+28
   \   000000FE   401C               ADDS     R0,R0,#+1
   \   00000100   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000102   000E               LSRS     R0,R0,#+24
   \   00000104   0828               CMP      R0,#+8
   \   00000106   08D2               BCS      ??ButtonAction_Event_5
   5393                      {
   5394                        ButtonGraph->OpenPage +=2;  MenuPaintExecute=1;
   \   00000108   E079               LDRB     R0,[R4, #+7]
   \   0000010A   F021               MOVS     R1,#+240
   \   0000010C   0140               ANDS     R1,R1,R0
   \   0000010E   801C               ADDS     R0,R0,#+2
   \   00000110   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000112   000F               LSRS     R0,R0,#+28
   \   00000114   0843               ORRS     R0,R0,R1
   \   00000116   E071               STRB     R0,[R4, #+7]
   \   00000118   0125               MOVS     R5,#+1
   5395                      }
   5396                    }
   5397                    if (Button(Speech[g_leng].Konfiguracja,3,54,57,14)==1)
   \                     ??ButtonAction_Event_5:
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   0E20               MOVS     R0,#+14
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   3923               MOVS     R3,#+57
   \   00000122   3622               MOVS     R2,#+54
   \   00000124   0321               MOVS     R1,#+3
   \   00000126   1848               LDR      R0,??ButtonAction_Event_0+0x20  ;; 0x2df
   \   00000128   184E               LDR      R6,??ButtonAction_Event_0+0x24  ;; g_leng
   \   0000012A   3668               LDR      R6,[R6, #+0]
   \   0000012C   184F               LDR      R7,??ButtonAction_Event_0+0x28  ;; 0xa7d
   \   0000012E   7E43               MULS     R6,R7,R6
   \   00000130   184F               LDR      R7,??ButtonAction_Event_0+0x2C  ;; Speech
   \   00000132   BE19               ADDS     R6,R7,R6
   \   00000134   3018               ADDS     R0,R6,R0
   \   00000136   ........           BL       Button
   \   0000013A   02B0               ADD      SP,SP,#+8
   \   0000013C   0128               CMP      R0,#+1
   \   0000013E   09D1               BNE      ??ButtonAction_Event_2
   5398                    {
   5399                      CurModifSheet=ButtonGraph->OpenPage-1;
   \   00000140   0F48               LDR      R0,??ButtonAction_Event_0+0x18  ;; CurModifSheet
   \   00000142   E179               LDRB     R1,[R4, #+7]
   \   00000144   0907               LSLS     R1,R1,#+28       ;; ZeroExtS R1,R1,#+28,#+28
   \   00000146   090F               LSRS     R1,R1,#+28
   \   00000148   491E               SUBS     R1,R1,#+1
   \   0000014A   0170               STRB     R1,[R0, #+0]
   5400                      MenuLevel=112;
   \   0000014C   0A48               LDR      R0,??ButtonAction_Event_0+0x10  ;; MenuLevel
   \   0000014E   7021               MOVS     R1,#+112
   \   00000150   0160               STR      R1,[R0, #+0]
   5401                      MenuPaintExecute=1;
   \   00000152   0125               MOVS     R5,#+1
   5402                    }
   5403                   
   5404                    
   5405          
   5406                    
   5407                  }
   5408                    
   5409                    
   5410                  if (MenuPaintExecute)  MenuPaint();
   \                     ??ButtonAction_Event_2:
   \   00000154   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000156   2D0E               LSRS     R5,R5,#+24
   \   00000158   002D               CMP      R5,#+0
   \   0000015A   01D0               BEQ      ??ButtonAction_Event_7
   \   0000015C   ........           BL       MenuPaint
   5411                
   5412          }
   \                     ??ButtonAction_Event_7:
   \   00000160   01B0               ADD      SP,SP,#+4
   \   00000162   F0BC               POP      {R4-R7}
   \   00000164   01BC               POP      {R0}
   \   00000166   0047               BX       R0               ;; return
   \                     ??ButtonAction_Event_0:
   \   00000168   ........           DC32     Y_down
   \   0000016C   ........           DC32     X_down
   \   00000170   ........           DC32     Y_up
   \   00000174   ........           DC32     X_up
   \   00000178   ........           DC32     MenuLevel
   \   0000017C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000180   ........           DC32     CurModifSheet
   \   00000184   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000188   DF020000           DC32     0x2df
   \   0000018C   ........           DC32     g_leng
   \   00000190   7D0A0000           DC32     0xa7d
   \   00000194   ........           DC32     Speech
   5413          
   5414          
   5415          
   5416          
   5417          
   5418          

   \                                 In section Debug.txt, align 4, keep-with-next
   5419          void BigTemperLabel_Paint(void)
   5420                {  
   \                     BigTemperLabel_Paint:
   \   00000000   07B5               PUSH     {R0-R2,LR}
   5421                  char txt[5];
   5422                  List_Paint("Temeper.",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   4EA0               ADR      R0,??BigTemperLabel_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   4B48               LDR      R0,??BigTemperLabel_Paint_0+0x4  ;; `?<Constant "Temeper.">`
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   5423          
   5424                    Label("Node ID:",2,20, 92 ,8,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   7F21               MOVS     R1,#+127
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   1621               MOVS     R1,#+22
   \   0000003C   0820               MOVS     R0,#+8
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   5C23               MOVS     R3,#+92
   \   00000042   1422               MOVS     R2,#+20
   \   00000044   0221               MOVS     R1,#+2
   \   00000046   4448               LDR      R0,??BigTemperLabel_Paint_0+0x8  ;; `?<Constant "Node ID:">`
   \   00000048   ........           BL       Label
   \   0000004C   06B0               ADD      SP,SP,#+24
   5425                    char ind=CharToStr(gProg.Screen[0].Analog[0].Nr, &(txt[0]), 2); //(char Value, char *Vstring, char ill);
   \   0000004E   0222               MOVS     R2,#+2
   \   00000050   6946               MOV      R1,SP
   \   00000052   4248               LDR      R0,??BigTemperLabel_Paint_0+0xC  ;; gProg + 48139
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   ........           BL       CharToStr
   \   0000005A   0200               MOVS     R2,R0
   5426                    Label(txt,2,20, 77 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   0020               MOVS     R0,#+0
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   7F21               MOVS     R1,#+127
   \   00000064   0120               MOVS     R0,#+1
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   1621               MOVS     R1,#+22
   \   0000006A   D21C               ADDS     R2,R2,#+3
   \   0000006C   1000               MOVS     R0,R2
   \   0000006E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000070   000E               LSRS     R0,R0,#+24
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   4D23               MOVS     R3,#+77
   \   00000076   1422               MOVS     R2,#+20
   \   00000078   0221               MOVS     R1,#+2
   \   0000007A   06A8               ADD      R0,SP,#+24
   \   0000007C   ........           BL       Label
   \   00000080   06B0               ADD      SP,SP,#+24
   5427                  
   5428                    txt[0]='<';txt[1]=0;
   \   00000082   6846               MOV      R0,SP
   \   00000084   3C21               MOVS     R1,#+60
   \   00000086   0170               STRB     R1,[R0, #+0]
   \   00000088   6846               MOV      R0,SP
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   4170               STRB     R1,[R0, #+1]
   5429                    Button(txt,3,70,15,20); 
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   1420               MOVS     R0,#+20
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   0F23               MOVS     R3,#+15
   \   00000096   4622               MOVS     R2,#+70
   \   00000098   0321               MOVS     R1,#+3
   \   0000009A   02A8               ADD      R0,SP,#+8
   \   0000009C   ........           BL       Button
   \   000000A0   02B0               ADD      SP,SP,#+8
   5430                    txt[0]='>';
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   3E21               MOVS     R1,#+62
   \   000000A6   0170               STRB     R1,[R0, #+0]
   5431                    Button(txt,45,70,15,20); 
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   1420               MOVS     R0,#+20
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   0F23               MOVS     R3,#+15
   \   000000B0   4622               MOVS     R2,#+70
   \   000000B2   2D21               MOVS     R1,#+45
   \   000000B4   02A8               ADD      R0,SP,#+8
   \   000000B6   ........           BL       Button
   \   000000BA   02B0               ADD      SP,SP,#+8
   5432                    
   5433                    Label("Reg:",2,20, 50 ,4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   7F21               MOVS     R1,#+127
   \   000000C4   0120               MOVS     R0,#+1
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   1621               MOVS     R1,#+22
   \   000000CA   0420               MOVS     R0,#+4
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3223               MOVS     R3,#+50
   \   000000D0   1422               MOVS     R2,#+20
   \   000000D2   0221               MOVS     R1,#+2
   \   000000D4   2248               LDR      R0,??BigTemperLabel_Paint_0+0x10  ;; `?<Constant "Reg:">`
   \   000000D6   ........           BL       Label
   \   000000DA   06B0               ADD      SP,SP,#+24
   5434                    
   5435                    ind=CharToStr(gProg.Screen[0].Analog[0].Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   000000DC   0222               MOVS     R2,#+2
   \   000000DE   6946               MOV      R1,SP
   \   000000E0   2048               LDR      R0,??BigTemperLabel_Paint_0+0x14  ;; gProg + 48140
   \   000000E2   0078               LDRB     R0,[R0, #+0]
   \   000000E4   ........           BL       CharToStr
   \   000000E8   0200               MOVS     R2,R0
   5436                   
   5437                    Label(txt,2,20, 40 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000EA   82B0               SUB      SP,SP,#+8
   \   000000EC   0020               MOVS     R0,#+0
   \   000000EE   0090               STR      R0,[SP, #+0]
   \   000000F0   7F21               MOVS     R1,#+127
   \   000000F2   0120               MOVS     R0,#+1
   \   000000F4   03B4               PUSH     {R0,R1}
   \   000000F6   1621               MOVS     R1,#+22
   \   000000F8   921C               ADDS     R2,R2,#+2
   \   000000FA   1000               MOVS     R0,R2
   \   000000FC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   2823               MOVS     R3,#+40
   \   00000104   1422               MOVS     R2,#+20
   \   00000106   0221               MOVS     R1,#+2
   \   00000108   06A8               ADD      R0,SP,#+24
   \   0000010A   ........           BL       Label
   \   0000010E   06B0               ADD      SP,SP,#+24
   5438                  
   5439                    txt[0]='<';txt[1]=0;
   \   00000110   6846               MOV      R0,SP
   \   00000112   3C21               MOVS     R1,#+60
   \   00000114   0170               STRB     R1,[R0, #+0]
   \   00000116   6846               MOV      R0,SP
   \   00000118   0021               MOVS     R1,#+0
   \   0000011A   4170               STRB     R1,[R0, #+1]
   5440                    Button(txt,3,40,15,20); 
   \   0000011C   82B0               SUB      SP,SP,#+8
   \   0000011E   1420               MOVS     R0,#+20
   \   00000120   0090               STR      R0,[SP, #+0]
   \   00000122   0F23               MOVS     R3,#+15
   \   00000124   2822               MOVS     R2,#+40
   \   00000126   0321               MOVS     R1,#+3
   \   00000128   02A8               ADD      R0,SP,#+8
   \   0000012A   ........           BL       Button
   \   0000012E   02B0               ADD      SP,SP,#+8
   5441                    txt[0]='>';
   \   00000130   6846               MOV      R0,SP
   \   00000132   3E21               MOVS     R1,#+62
   \   00000134   0170               STRB     R1,[R0, #+0]
   5442                    Button(txt,45,40,15,20);   
   \   00000136   82B0               SUB      SP,SP,#+8
   \   00000138   1420               MOVS     R0,#+20
   \   0000013A   0090               STR      R0,[SP, #+0]
   \   0000013C   0F23               MOVS     R3,#+15
   \   0000013E   2822               MOVS     R2,#+40
   \   00000140   2D21               MOVS     R1,#+45
   \   00000142   02A8               ADD      R0,SP,#+8
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
   5443                     
   5444                  
   5445                }
   \   0000014A   03B0               ADD      SP,SP,#+12
   \   0000014C   01BC               POP      {R0}
   \   0000014E   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Paint_0:
   \   00000150   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000154   ........           DC32     `?<Constant "Temeper.">`
   \   00000158   ........           DC32     `?<Constant "Node ID:">`
   \   0000015C   ........           DC32     gProg + 48139
   \   00000160   ........           DC32     `?<Constant "Reg:">`
   \   00000164   ........           DC32     gProg + 48140
   5446          

   \                                 In section Debug.txt, align 4, keep-with-next
   5447          void BigTemperLabel_Event(void)
   5448                {  
   \                     BigTemperLabel_Event:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   5449                 char Repaint=0; 
   \   00000002   0024               MOVS     R4,#+0
   5450                 char txt[8];
   5451                 _Analog *Anal=&(gProg.Screen[0].Analog[0]);       
   \   00000004   624D               LDR      R5,??BigTemperLabel_Event_0  ;; gProg + 48135
   5452                 
   5453                 
   5454                  //zdarzenie typu down "X"
   5455                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   6348               LDR      R0,??BigTemperLabel_Event_0+0x4  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   26DB               BLT      ??BigTemperLabel_Event_1
   \   00000010   6048               LDR      R0,??BigTemperLabel_Event_0+0x4  ;; X_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   3F28               CMP      R0,#+63
   \   00000018   21DA               BGE      ??BigTemperLabel_Event_1
   \   0000001A   5F48               LDR      R0,??BigTemperLabel_Event_0+0x8  ;; Y_down
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   405E               LDRSH    R0,[R0, R1]
   \   00000020   7128               CMP      R0,#+113
   \   00000022   1CDB               BLT      ??BigTemperLabel_Event_1
   \   00000024   5C48               LDR      R0,??BigTemperLabel_Event_0+0x8  ;; Y_down
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   405E               LDRSH    R0,[R0, R1]
   \   0000002A   7F28               CMP      R0,#+127
   \   0000002C   17DA               BGE      ??BigTemperLabel_Event_1
   5456                  {
   5457                    //MenuPaint();
   5458                    H_line(49,114,10,0);
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   7221               MOVS     R1,#+114
   \   00000034   3120               MOVS     R0,#+49
   \   00000036   ........           BL       H_line
   5459                    H_line(49,123,10,0); 
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7B21               MOVS     R1,#+123
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       H_line
   5460                    V_line(49,114,10,0); 
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7221               MOVS     R1,#+114
   \   0000004C   3120               MOVS     R0,#+49
   \   0000004E   ........           BL       V_line
   5461                    V_line(58,114,10,0); 
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   0A22               MOVS     R2,#+10
   \   00000056   7221               MOVS     R1,#+114
   \   00000058   3A20               MOVS     R0,#+58
   \   0000005A   ........           BL       V_line
   5462                    
   5463                  }
   5464            
   5465                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??BigTemperLabel_Event_1:
   \   0000005E   4F48               LDR      R0,??BigTemperLabel_Event_0+0xC  ;; X_up
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   405E               LDRSH    R0,[R0, R1]
   \   00000064   2F28               CMP      R0,#+47
   \   00000066   18DB               BLT      ??BigTemperLabel_Event_2
   \   00000068   4C48               LDR      R0,??BigTemperLabel_Event_0+0xC  ;; X_up
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   405E               LDRSH    R0,[R0, R1]
   \   0000006E   3F28               CMP      R0,#+63
   \   00000070   13DA               BGE      ??BigTemperLabel_Event_2
   \   00000072   4B48               LDR      R0,??BigTemperLabel_Event_0+0x10  ;; Y_up
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   405E               LDRSH    R0,[R0, R1]
   \   00000078   7128               CMP      R0,#+113
   \   0000007A   0EDB               BLT      ??BigTemperLabel_Event_2
   \   0000007C   4848               LDR      R0,??BigTemperLabel_Event_0+0x10  ;; Y_up
   \   0000007E   0021               MOVS     R1,#+0
   \   00000080   405E               LDRSH    R0,[R0, R1]
   \   00000082   7F28               CMP      R0,#+127
   \   00000084   09DA               BGE      ??BigTemperLabel_Event_2
   5466                  {
   5467                    MenuLevel=(MenuLevel/10);
   \   00000086   4748               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; MenuLevel
   \   00000088   0068               LDR      R0,[R0, #+0]
   \   0000008A   0A21               MOVS     R1,#+10
   \   0000008C   ........           BL       __aeabi_idivmod
   \   00000090   4449               LDR      R1,??BigTemperLabel_Event_0+0x14  ;; MenuLevel
   \   00000092   0860               STR      R0,[R1, #+0]
   5468                    MenuPaint();
   \   00000094   ........           BL       MenuPaint
   \   00000098   6FE0               B        ??BigTemperLabel_Event_3
   5469                  }  
   5470                  else
   5471                  {
   5472                      txt[0]='<';txt[1]=0;
   \                     ??BigTemperLabel_Event_2:
   \   0000009A   6846               MOV      R0,SP
   \   0000009C   3C21               MOVS     R1,#+60
   \   0000009E   0170               STRB     R1,[R0, #+0]
   \   000000A0   6846               MOV      R0,SP
   \   000000A2   0021               MOVS     R1,#+0
   \   000000A4   4170               STRB     R1,[R0, #+1]
   5473                      if (Button(txt,3,70,15,20)==2){if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;} Repaint=1;}
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1420               MOVS     R0,#+20
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   0F23               MOVS     R3,#+15
   \   000000AE   4622               MOVS     R2,#+70
   \   000000B0   0321               MOVS     R1,#+3
   \   000000B2   02A8               ADD      R0,SP,#+8
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   \   000000BA   0228               CMP      R0,#+2
   \   000000BC   09D1               BNE      ??BigTemperLabel_Event_4
   \   000000BE   2879               LDRB     R0,[R5, #+4]
   \   000000C0   0128               CMP      R0,#+1
   \   000000C2   03D3               BCC      ??BigTemperLabel_Event_5
   \   000000C4   2879               LDRB     R0,[R5, #+4]
   \   000000C6   401E               SUBS     R0,R0,#+1
   \   000000C8   2871               STRB     R0,[R5, #+4]
   \   000000CA   01E0               B        ??BigTemperLabel_Event_6
   \                     ??BigTemperLabel_Event_5:
   \   000000CC   2320               MOVS     R0,#+35
   \   000000CE   2871               STRB     R0,[R5, #+4]
   \                     ??BigTemperLabel_Event_6:
   \   000000D0   0124               MOVS     R4,#+1
   5474                      txt[0]='>';
   \                     ??BigTemperLabel_Event_4:
   \   000000D2   6846               MOV      R0,SP
   \   000000D4   3E21               MOVS     R1,#+62
   \   000000D6   0170               STRB     R1,[R0, #+0]
   5475                      if (Button(txt,45,70,15,20)==2){if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;}  Repaint=1;}
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   1420               MOVS     R0,#+20
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   0F23               MOVS     R3,#+15
   \   000000E0   4622               MOVS     R2,#+70
   \   000000E2   2D21               MOVS     R1,#+45
   \   000000E4   02A8               ADD      R0,SP,#+8
   \   000000E6   ........           BL       Button
   \   000000EA   02B0               ADD      SP,SP,#+8
   \   000000EC   0228               CMP      R0,#+2
   \   000000EE   0CD1               BNE      ??BigTemperLabel_Event_7
   \   000000F0   2879               LDRB     R0,[R5, #+4]
   \   000000F2   401C               ADDS     R0,R0,#+1
   \   000000F4   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000000F6   000C               LSRS     R0,R0,#+16
   \   000000F8   2328               CMP      R0,#+35
   \   000000FA   03D2               BCS      ??BigTemperLabel_Event_8
   \   000000FC   2879               LDRB     R0,[R5, #+4]
   \   000000FE   401C               ADDS     R0,R0,#+1
   \   00000100   2871               STRB     R0,[R5, #+4]
   \   00000102   01E0               B        ??BigTemperLabel_Event_9
   \                     ??BigTemperLabel_Event_8:
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   2871               STRB     R0,[R5, #+4]
   \                     ??BigTemperLabel_Event_9:
   \   00000108   0124               MOVS     R4,#+1
   5476                    
   5477                      txt[0]='<';txt[1]=0;
   \                     ??BigTemperLabel_Event_7:
   \   0000010A   6846               MOV      R0,SP
   \   0000010C   3C21               MOVS     R1,#+60
   \   0000010E   0170               STRB     R1,[R0, #+0]
   \   00000110   6846               MOV      R0,SP
   \   00000112   0021               MOVS     R1,#+0
   \   00000114   4170               STRB     R1,[R0, #+1]
   5478                      if (Button(txt,3,40,15,20)==2){if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;} Repaint=1;} 
   \   00000116   82B0               SUB      SP,SP,#+8
   \   00000118   1420               MOVS     R0,#+20
   \   0000011A   0090               STR      R0,[SP, #+0]
   \   0000011C   0F23               MOVS     R3,#+15
   \   0000011E   2822               MOVS     R2,#+40
   \   00000120   0321               MOVS     R1,#+3
   \   00000122   02A8               ADD      R0,SP,#+8
   \   00000124   ........           BL       Button
   \   00000128   02B0               ADD      SP,SP,#+8
   \   0000012A   0228               CMP      R0,#+2
   \   0000012C   09D1               BNE      ??BigTemperLabel_Event_10
   \   0000012E   6879               LDRB     R0,[R5, #+5]
   \   00000130   0228               CMP      R0,#+2
   \   00000132   03D3               BCC      ??BigTemperLabel_Event_11
   \   00000134   6879               LDRB     R0,[R5, #+5]
   \   00000136   401E               SUBS     R0,R0,#+1
   \   00000138   6871               STRB     R0,[R5, #+5]
   \   0000013A   01E0               B        ??BigTemperLabel_Event_12
   \                     ??BigTemperLabel_Event_11:
   \   0000013C   0B20               MOVS     R0,#+11
   \   0000013E   6871               STRB     R0,[R5, #+5]
   \                     ??BigTemperLabel_Event_12:
   \   00000140   0124               MOVS     R4,#+1
   5479                      txt[0]='>';
   \                     ??BigTemperLabel_Event_10:
   \   00000142   6846               MOV      R0,SP
   \   00000144   3E21               MOVS     R1,#+62
   \   00000146   0170               STRB     R1,[R0, #+0]
   5480                      if (Button(txt,45,40,15,20)==2){if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;}  Repaint=1;}
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   1420               MOVS     R0,#+20
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   0F23               MOVS     R3,#+15
   \   00000150   2822               MOVS     R2,#+40
   \   00000152   2D21               MOVS     R1,#+45
   \   00000154   02A8               ADD      R0,SP,#+8
   \   00000156   ........           BL       Button
   \   0000015A   02B0               ADD      SP,SP,#+8
   \   0000015C   0228               CMP      R0,#+2
   \   0000015E   0CD1               BNE      ??BigTemperLabel_Event_3
   \   00000160   6879               LDRB     R0,[R5, #+5]
   \   00000162   401C               ADDS     R0,R0,#+1
   \   00000164   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000166   000C               LSRS     R0,R0,#+16
   \   00000168   0B28               CMP      R0,#+11
   \   0000016A   03D2               BCS      ??BigTemperLabel_Event_13
   \   0000016C   6879               LDRB     R0,[R5, #+5]
   \   0000016E   401C               ADDS     R0,R0,#+1
   \   00000170   6871               STRB     R0,[R5, #+5]
   \   00000172   01E0               B        ??BigTemperLabel_Event_14
   \                     ??BigTemperLabel_Event_13:
   \   00000174   0120               MOVS     R0,#+1
   \   00000176   6871               STRB     R0,[R5, #+5]
   \                     ??BigTemperLabel_Event_14:
   \   00000178   0124               MOVS     R4,#+1
   5481                }
   5482                
   5483                if (Repaint) MenuPaint();
   \                     ??BigTemperLabel_Event_3:
   \   0000017A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000017C   240E               LSRS     R4,R4,#+24
   \   0000017E   002C               CMP      R4,#+0
   \   00000180   01D0               BEQ      ??BigTemperLabel_Event_15
   \   00000182   ........           BL       MenuPaint
   5484          
   5485          }
   \                     ??BigTemperLabel_Event_15:
   \   00000186   03B0               ADD      SP,SP,#+12
   \   00000188   30BC               POP      {R4,R5}
   \   0000018A   01BC               POP      {R0}
   \   0000018C   0047               BX       R0               ;; return
   \   0000018E   C046               Nop      
   \                     ??BigTemperLabel_Event_0:
   \   00000190   ........           DC32     gProg + 48135
   \   00000194   ........           DC32     X_down
   \   00000198   ........           DC32     Y_down
   \   0000019C   ........           DC32     X_up
   \   000001A0   ........           DC32     Y_up
   \   000001A4   ........           DC32     MenuLevel
   5486          
   5487          
   5488          
   5489                #define MaxRowGr 4
   5490                #define MaxColGr 3
   5491                #define Y_offset 27
   5492          

   \                                 In section Debug.txt, align 4, keep-with-next
   5493          void ZoneGraph_Paint(_Screen* ScreenLokal)
   5494              {
   \                     ZoneGraph_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5495          
   5496                  
   5497                 List_Paint(Speech[g_leng].Grafika,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   E1A0               ADR      R0,??ZoneGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   DE48               LDR      R0,??ZoneGraph_Paint_0+0x4  ;; 0x4ec
   \   0000002A   DF4D               LDR      R5,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   0000002C   2D68               LDR      R5,[R5, #+0]
   \   0000002E   DF4E               LDR      R6,??ZoneGraph_Paint_0+0xC  ;; 0xa7d
   \   00000030   7543               MULS     R5,R6,R5
   \   00000032   DF4E               LDR      R6,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   00000034   7519               ADDS     R5,R6,R5
   \   00000036   2818               ADDS     R0,R5,R0
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   5498                 char txt[8];
   5499                 
   5500                 
   5501                 
   5502                 
   5503                //siatka 
   5504                 
   5505                for (char i=0; i<=MaxRowGr; i++)
   \   0000003E   0025               MOVS     R5,#+0
   \   00000040   0AE0               B        ??ZoneGraph_Paint_1
   5506                {
   5507                    H_line(3,Y_offset+i*20,58,2);   
   \                     ??ZoneGraph_Paint_2:
   \   00000042   0223               MOVS     R3,#+2
   \   00000044   3A22               MOVS     R2,#+58
   \   00000046   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000048   2D0E               LSRS     R5,R5,#+24
   \   0000004A   1421               MOVS     R1,#+20
   \   0000004C   6943               MULS     R1,R5,R1
   \   0000004E   1B31               ADDS     R1,R1,#+27
   \   00000050   0320               MOVS     R0,#+3
   \   00000052   ........           BL       H_line
   5508                }
   \   00000056   6D1C               ADDS     R5,R5,#+1
   \                     ??ZoneGraph_Paint_1:
   \   00000058   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000005A   2D0E               LSRS     R5,R5,#+24
   \   0000005C   052D               CMP      R5,#+5
   \   0000005E   F0D3               BCC      ??ZoneGraph_Paint_2
   5509                for (char i=0; i<=MaxColGr; i++)
   \   00000060   0025               MOVS     R5,#+0
   \   00000062   0CE0               B        ??ZoneGraph_Paint_3
   5510                {
   5511                    V_line(1+i*20,Y_offset,80,2);         
   \                     ??ZoneGraph_Paint_4:
   \   00000064   0223               MOVS     R3,#+2
   \   00000066   5022               MOVS     R2,#+80
   \   00000068   1B21               MOVS     R1,#+27
   \   0000006A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000006C   2D0E               LSRS     R5,R5,#+24
   \   0000006E   1420               MOVS     R0,#+20
   \   00000070   6843               MULS     R0,R5,R0
   \   00000072   401C               ADDS     R0,R0,#+1
   \   00000074   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000076   000E               LSRS     R0,R0,#+24
   \   00000078   ........           BL       V_line
   5512                }
   \   0000007C   6D1C               ADDS     R5,R5,#+1
   \                     ??ZoneGraph_Paint_3:
   \   0000007E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000080   2D0E               LSRS     R5,R5,#+24
   \   00000082   042D               CMP      R5,#+4
   \   00000084   EED3               BCC      ??ZoneGraph_Paint_4
   5513                //------koniec siatki
   5514          
   5515                //zaznaczenie wybranego
   5516                char RowChos = MaxRowGr-ScreenLokal->Graph[ZoneGrapfNrClick].Type/3-1;
   \   00000086   0325               MOVS     R5,#+3
   \   00000088   CA48               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   0000008A   0078               LDRB     R0,[R0, #+0]
   \   0000008C   0721               MOVS     R1,#+7
   \   0000008E   4843               MULS     R0,R1,R0
   \   00000090   2018               ADDS     R0,R4,R0
   \   00000092   5330               ADDS     R0,R0,#+83
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0321               MOVS     R1,#+3
   \   00000098   ........           BL       __aeabi_idivmod
   \   0000009C   2D1A               SUBS     R5,R5,R0
   5517                char ColChos = ScreenLokal->Graph[ZoneGrapfNrClick].Type-((ScreenLokal->Graph[ZoneGrapfNrClick].Type/3)*3);
   \   0000009E   C548               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   000000A0   0078               LDRB     R0,[R0, #+0]
   \   000000A2   0721               MOVS     R1,#+7
   \   000000A4   4843               MULS     R0,R1,R0
   \   000000A6   2018               ADDS     R0,R4,R0
   \   000000A8   5330               ADDS     R0,R0,#+83
   \   000000AA   0678               LDRB     R6,[R0, #+0]
   \   000000AC   C148               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   000000AE   0078               LDRB     R0,[R0, #+0]
   \   000000B0   0721               MOVS     R1,#+7
   \   000000B2   4843               MULS     R0,R1,R0
   \   000000B4   2018               ADDS     R0,R4,R0
   \   000000B6   5330               ADDS     R0,R0,#+83
   \   000000B8   0078               LDRB     R0,[R0, #+0]
   \   000000BA   0321               MOVS     R1,#+3
   \   000000BC   ........           BL       __aeabi_idivmod
   \   000000C0   0321               MOVS     R1,#+3
   \   000000C2   4843               MULS     R0,R1,R0
   \   000000C4   361A               SUBS     R6,R6,R0
   5518                H_line(1+ColChos*20  ,Y_offset+RowChos*20,20,1);  
   \   000000C6   0123               MOVS     R3,#+1
   \   000000C8   1422               MOVS     R2,#+20
   \   000000CA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000CC   2D0E               LSRS     R5,R5,#+24
   \   000000CE   1421               MOVS     R1,#+20
   \   000000D0   6943               MULS     R1,R5,R1
   \   000000D2   1B31               ADDS     R1,R1,#+27
   \   000000D4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000D6   360E               LSRS     R6,R6,#+24
   \   000000D8   1420               MOVS     R0,#+20
   \   000000DA   7043               MULS     R0,R6,R0
   \   000000DC   401C               ADDS     R0,R0,#+1
   \   000000DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E0   000E               LSRS     R0,R0,#+24
   \   000000E2   ........           BL       H_line
   5519                H_line(1+ColChos*20    ,Y_offset+(RowChos+1)*20,20,1); 
   \   000000E6   0123               MOVS     R3,#+1
   \   000000E8   1422               MOVS     R2,#+20
   \   000000EA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000EC   2D0E               LSRS     R5,R5,#+24
   \   000000EE   1421               MOVS     R1,#+20
   \   000000F0   6943               MULS     R1,R5,R1
   \   000000F2   2F31               ADDS     R1,R1,#+47
   \   000000F4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000F6   360E               LSRS     R6,R6,#+24
   \   000000F8   1420               MOVS     R0,#+20
   \   000000FA   7043               MULS     R0,R6,R0
   \   000000FC   401C               ADDS     R0,R0,#+1
   \   000000FE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000100   000E               LSRS     R0,R0,#+24
   \   00000102   ........           BL       H_line
   5520                V_line(1+ColChos*20    ,Y_offset+RowChos*20,20,1);  
   \   00000106   0123               MOVS     R3,#+1
   \   00000108   1422               MOVS     R2,#+20
   \   0000010A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000010C   2D0E               LSRS     R5,R5,#+24
   \   0000010E   1421               MOVS     R1,#+20
   \   00000110   6943               MULS     R1,R5,R1
   \   00000112   1B31               ADDS     R1,R1,#+27
   \   00000114   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000116   360E               LSRS     R6,R6,#+24
   \   00000118   1420               MOVS     R0,#+20
   \   0000011A   7043               MULS     R0,R6,R0
   \   0000011C   401C               ADDS     R0,R0,#+1
   \   0000011E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000120   000E               LSRS     R0,R0,#+24
   \   00000122   ........           BL       V_line
   5521                V_line(1+(ColChos+1)*20    ,Y_offset+RowChos*20,20,1);  
   \   00000126   0123               MOVS     R3,#+1
   \   00000128   1422               MOVS     R2,#+20
   \   0000012A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000012C   2D0E               LSRS     R5,R5,#+24
   \   0000012E   1420               MOVS     R0,#+20
   \   00000130   4543               MULS     R5,R0,R5
   \   00000132   1B35               ADDS     R5,R5,#+27
   \   00000134   2900               MOVS     R1,R5
   \   00000136   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000138   360E               LSRS     R6,R6,#+24
   \   0000013A   1420               MOVS     R0,#+20
   \   0000013C   4643               MULS     R6,R0,R6
   \   0000013E   1536               ADDS     R6,R6,#+21
   \   00000140   3000               MOVS     R0,R6
   \   00000142   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000144   000E               LSRS     R0,R0,#+24
   \   00000146   ........           BL       V_line
   5522                //---------------------
   5523                
   5524                
   5525                
   5526                 if (((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) || (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff)) && (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff))
   \   0000014A   9A48               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   0000014C   0078               LDRB     R0,[R0, #+0]
   \   0000014E   0721               MOVS     R1,#+7
   \   00000150   4843               MULS     R0,R1,R0
   \   00000152   2018               ADDS     R0,R4,R0
   \   00000154   5330               ADDS     R0,R0,#+83
   \   00000156   0078               LDRB     R0,[R0, #+0]
   \   00000158   0828               CMP      R0,#+8
   \   0000015A   08D0               BEQ      ??ZoneGraph_Paint_5
   \   0000015C   9548               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   0000015E   0078               LDRB     R0,[R0, #+0]
   \   00000160   0721               MOVS     R1,#+7
   \   00000162   4843               MULS     R0,R1,R0
   \   00000164   2018               ADDS     R0,R4,R0
   \   00000166   5330               ADDS     R0,R0,#+83
   \   00000168   0078               LDRB     R0,[R0, #+0]
   \   0000016A   0B28               CMP      R0,#+11
   \   0000016C   18D1               BNE      ??ZoneGraph_Paint_6
   \                     ??ZoneGraph_Paint_5:
   \   0000016E   9148               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   00000170   0078               LDRB     R0,[R0, #+0]
   \   00000172   0721               MOVS     R1,#+7
   \   00000174   4843               MULS     R0,R1,R0
   \   00000176   2018               ADDS     R0,R4,R0
   \   00000178   5930               ADDS     R0,R0,#+89
   \   0000017A   0078               LDRB     R0,[R0, #+0]
   \   0000017C   C007               LSLS     R0,R0,#+31
   \   0000017E   0FD5               BPL      ??ZoneGraph_Paint_6
   5527                  {
   5528                   Label("+",2,5+2*20, Y_offset+17 ,1,12,1,127,0);
   \   00000180   82B0               SUB      SP,SP,#+8
   \   00000182   0020               MOVS     R0,#+0
   \   00000184   0090               STR      R0,[SP, #+0]
   \   00000186   7F21               MOVS     R1,#+127
   \   00000188   0120               MOVS     R0,#+1
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   0C21               MOVS     R1,#+12
   \   0000018E   0120               MOVS     R0,#+1
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   2C23               MOVS     R3,#+44
   \   00000194   2D22               MOVS     R2,#+45
   \   00000196   0221               MOVS     R1,#+2
   \   00000198   87A0               ADR      R0,??ZoneGraph_Paint_0+0x18  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000019A   ........           BL       Label
   \   0000019E   06B0               ADD      SP,SP,#+24
   5529          
   5530                  }
   5531                  
   5532                
   5533                  char idx=0;
   \                     ??ZoneGraph_Paint_6:
   \   000001A0   0025               MOVS     R5,#+0
   5534          
   5535                  for (int j=(MaxRowGr-1); j>=0; j--)
   \   000001A2   0326               MOVS     R6,#+3
   \   000001A4   37E0               B        ??ZoneGraph_Paint_7
   5536                  {
   5537                    for (int i=0; i<MaxColGr; i++)
   5538                    {
   5539                      if (idx<=MaxGraphIdx) CopyToCanvasPoint((char*)&GraphTab[idx], 2+i*20, Y_offset+1+j*20, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??ZoneGraph_Paint_8:
   \   000001A6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001A8   2D0E               LSRS     R5,R5,#+24
   \   000001AA   082D               CMP      R5,#+8
   \   000001AC   18D2               BCS      ??ZoneGraph_Paint_9
   \   000001AE   82B0               SUB      SP,SP,#+8
   \   000001B0   1220               MOVS     R0,#+18
   \   000001B2   0090               STR      R0,[SP, #+0]
   \   000001B4   1223               MOVS     R3,#+18
   \   000001B6   1422               MOVS     R2,#+20
   \   000001B8   7243               MULS     R2,R6,R2
   \   000001BA   1C32               ADDS     R2,R2,#+28
   \   000001BC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001BE   120E               LSRS     R2,R2,#+24
   \   000001C0   1421               MOVS     R1,#+20
   \   000001C2   7943               MULS     R1,R7,R1
   \   000001C4   891C               ADDS     R1,R1,#+2
   \   000001C6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001C8   090E               LSRS     R1,R1,#+24
   \   000001CA   8C46               MOV      R12,R1
   \   000001CC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001CE   2D0E               LSRS     R5,R5,#+24
   \   000001D0   3621               MOVS     R1,#+54
   \   000001D2   6943               MULS     R1,R5,R1
   \   000001D4   7948               LDR      R0,??ZoneGraph_Paint_0+0x1C  ;; GraphTab
   \   000001D6   4018               ADDS     R0,R0,R1
   \   000001D8   6146               MOV      R1,R12
   \   000001DA   ........           BL       CopyToCanvasPoint
   \   000001DE   02B0               ADD      SP,SP,#+8
   5540                      if (idx==MaxGraphIdx+1) {
   \                     ??ZoneGraph_Paint_9:
   \   000001E0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001E2   2D0E               LSRS     R5,R5,#+24
   \   000001E4   082D               CMP      R5,#+8
   \   000001E6   11D1               BNE      ??ZoneGraph_Paint_10
   5541                        Label("Text",0,2 +2*20, Y_offset+6+j*20 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001E8   82B0               SUB      SP,SP,#+8
   \   000001EA   0020               MOVS     R0,#+0
   \   000001EC   0090               STR      R0,[SP, #+0]
   \   000001EE   7F21               MOVS     R1,#+127
   \   000001F0   0120               MOVS     R0,#+1
   \   000001F2   03B4               PUSH     {R0,R1}
   \   000001F4   0A21               MOVS     R1,#+10
   \   000001F6   0420               MOVS     R0,#+4
   \   000001F8   03B4               PUSH     {R0,R1}
   \   000001FA   1423               MOVS     R3,#+20
   \   000001FC   7343               MULS     R3,R6,R3
   \   000001FE   2133               ADDS     R3,R3,#+33
   \   00000200   2A22               MOVS     R2,#+42
   \   00000202   0021               MOVS     R1,#+0
   \   00000204   6E48               LDR      R0,??ZoneGraph_Paint_0+0x20  ;; `?<Constant "Text">`
   \   00000206   ........           BL       Label
   \   0000020A   06B0               ADD      SP,SP,#+24
   5542                      }
   5543                      idx++;
   \                     ??ZoneGraph_Paint_10:
   \   0000020C   6D1C               ADDS     R5,R5,#+1
   5544                    }
   \   0000020E   7F1C               ADDS     R7,R7,#+1
   \                     ??ZoneGraph_Paint_11:
   \   00000210   032F               CMP      R7,#+3
   \   00000212   C8DB               BLT      ??ZoneGraph_Paint_8
   \   00000214   761E               SUBS     R6,R6,#+1
   \                     ??ZoneGraph_Paint_7:
   \   00000216   002E               CMP      R6,#+0
   \   00000218   01D4               BMI      ??ZoneGraph_Paint_12
   \   0000021A   0027               MOVS     R7,#+0
   \   0000021C   F8E7               B        ??ZoneGraph_Paint_11
   5545                  }
   5546                  
   5547                  
   5548                  
   5549                  
   5550                  Label("Scn ",0,4 +0*20, Y_offset+7 ,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_Paint_12:
   \   0000021E   82B0               SUB      SP,SP,#+8
   \   00000220   0020               MOVS     R0,#+0
   \   00000222   0090               STR      R0,[SP, #+0]
   \   00000224   7F21               MOVS     R1,#+127
   \   00000226   0120               MOVS     R0,#+1
   \   00000228   03B4               PUSH     {R0,R1}
   \   0000022A   0A21               MOVS     R1,#+10
   \   0000022C   0320               MOVS     R0,#+3
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   2223               MOVS     R3,#+34
   \   00000232   0422               MOVS     R2,#+4
   \   00000234   0021               MOVS     R1,#+0
   \   00000236   6348               LDR      R0,??ZoneGraph_Paint_0+0x24  ;; `?<Constant "Scn ">`
   \   00000238   ........           BL       Label
   \   0000023C   06B0               ADD      SP,SP,#+24
   5551                  Label("Val ",0,5 +1*20, Y_offset+7 ,3,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0020               MOVS     R0,#+0
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   7F21               MOVS     R1,#+127
   \   00000246   0120               MOVS     R0,#+1
   \   00000248   03B4               PUSH     {R0,R1}
   \   0000024A   0F21               MOVS     R1,#+15
   \   0000024C   0320               MOVS     R0,#+3
   \   0000024E   03B4               PUSH     {R0,R1}
   \   00000250   2223               MOVS     R3,#+34
   \   00000252   1922               MOVS     R2,#+25
   \   00000254   0021               MOVS     R1,#+0
   \   00000256   5C48               LDR      R0,??ZoneGraph_Paint_0+0x28  ;; `?<Constant "Val ">`
   \   00000258   ........           BL       Label
   \   0000025C   06B0               ADD      SP,SP,#+24
   5552                  //Label("Text",0,2 +2*20, Y_offset+7 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   5553                  Label(Speech[g_leng].Wl,0,6 +2*20,  Y_offset+9,3,10,1,127,0);
   \   0000025E   82B0               SUB      SP,SP,#+8
   \   00000260   0020               MOVS     R0,#+0
   \   00000262   0090               STR      R0,[SP, #+0]
   \   00000264   7F21               MOVS     R1,#+127
   \   00000266   0120               MOVS     R0,#+1
   \   00000268   03B4               PUSH     {R0,R1}
   \   0000026A   0A21               MOVS     R1,#+10
   \   0000026C   0320               MOVS     R0,#+3
   \   0000026E   03B4               PUSH     {R0,R1}
   \   00000270   2423               MOVS     R3,#+36
   \   00000272   2E22               MOVS     R2,#+46
   \   00000274   0021               MOVS     R1,#+0
   \   00000276   5548               LDR      R0,??ZoneGraph_Paint_0+0x2C  ;; 0x627
   \   00000278   4B4D               LDR      R5,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   0000027A   2D68               LDR      R5,[R5, #+0]
   \   0000027C   4B4E               LDR      R6,??ZoneGraph_Paint_0+0xC  ;; 0xa7d
   \   0000027E   7543               MULS     R5,R6,R5
   \   00000280   4B4E               LDR      R6,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   00000282   7519               ADDS     R5,R6,R5
   \   00000284   2818               ADDS     R0,R5,R0
   \   00000286   ........           BL       Label
   \   0000028A   06B0               ADD      SP,SP,#+24
   5554                  Label(Speech[g_leng].Wyl,0,6 +2*20, Y_offset+1,3,10,1,127,0);
   \   0000028C   82B0               SUB      SP,SP,#+8
   \   0000028E   0020               MOVS     R0,#+0
   \   00000290   0090               STR      R0,[SP, #+0]
   \   00000292   7F21               MOVS     R1,#+127
   \   00000294   0120               MOVS     R0,#+1
   \   00000296   03B4               PUSH     {R0,R1}
   \   00000298   0A21               MOVS     R1,#+10
   \   0000029A   0320               MOVS     R0,#+3
   \   0000029C   03B4               PUSH     {R0,R1}
   \   0000029E   1C23               MOVS     R3,#+28
   \   000002A0   2E22               MOVS     R2,#+46
   \   000002A2   0021               MOVS     R1,#+0
   \   000002A4   C320               MOVS     R0,#+195
   \   000002A6   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   000002A8   3F4D               LDR      R5,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   000002AA   2D68               LDR      R5,[R5, #+0]
   \   000002AC   3F4E               LDR      R6,??ZoneGraph_Paint_0+0xC  ;; 0xa7d
   \   000002AE   7543               MULS     R5,R6,R5
   \   000002B0   3F4E               LDR      R6,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   000002B2   7519               ADDS     R5,R6,R5
   \   000002B4   2818               ADDS     R0,R5,R0
   \   000002B6   ........           BL       Label
   \   000002BA   06B0               ADD      SP,SP,#+24
   5555                  
   5556                  //je¿eli On / Off
   5557                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \   000002BC   3D48               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   000002BE   0078               LDRB     R0,[R0, #+0]
   \   000002C0   0721               MOVS     R1,#+7
   \   000002C2   4843               MULS     R0,R1,R0
   \   000002C4   2018               ADDS     R0,R4,R0
   \   000002C6   5330               ADDS     R0,R0,#+83
   \   000002C8   0078               LDRB     R0,[R0, #+0]
   \   000002CA   0B28               CMP      R0,#+11
   \   000002CC   00D0               BEQ      .+4
   \   000002CE   FEE0               B        ??ZoneGraph_Paint_13
   5558                  {
   5559                    
   5560                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Nr>=0) && ( (ScreenLokal->Graph[ZoneGrapfNrClick].Nr!=0xFF)))
                                                                       ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   000002D0   3848               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   000002D2   0078               LDRB     R0,[R0, #+0]
   \   000002D4   0721               MOVS     R1,#+7
   \   000002D6   4843               MULS     R0,R1,R0
   \   000002D8   2018               ADDS     R0,R4,R0
   \   000002DA   5730               ADDS     R0,R0,#+87
   \   000002DC   0078               LDRB     R0,[R0, #+0]
   \   000002DE   0028               CMP      R0,#+0
   \   000002E0   76D4               BMI      ??ZoneGraph_Paint_14
   \   000002E2   3448               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   000002E4   0078               LDRB     R0,[R0, #+0]
   \   000002E6   0721               MOVS     R1,#+7
   \   000002E8   4843               MULS     R0,R1,R0
   \   000002EA   2018               ADDS     R0,R4,R0
   \   000002EC   5730               ADDS     R0,R0,#+87
   \   000002EE   0078               LDRB     R0,[R0, #+0]
   \   000002F0   FF28               CMP      R0,#+255
   \   000002F2   6DD0               BEQ      ??ZoneGraph_Paint_14
   5561                    {
   5562                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   000002F4   6846               MOV      R0,SP
   \   000002F6   4921               MOVS     R1,#+73
   \   000002F8   0170               STRB     R1,[R0, #+0]
   \   000002FA   6846               MOV      R0,SP
   \   000002FC   6421               MOVS     R1,#+100
   \   000002FE   4170               STRB     R1,[R0, #+1]
   \   00000300   6846               MOV      R0,SP
   \   00000302   3A21               MOVS     R1,#+58
   \   00000304   8170               STRB     R1,[R0, #+2]
   \   00000306   6846               MOV      R0,SP
   \   00000308   2021               MOVS     R1,#+32
   \   0000030A   C170               STRB     R1,[R0, #+3]
   5563                      char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000030C   0222               MOVS     R2,#+2
   \   0000030E   6946               MOV      R1,SP
   \   00000310   C91C               ADDS     R1,R1,#+3
   \   00000312   2848               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   00000314   0078               LDRB     R0,[R0, #+0]
   \   00000316   0723               MOVS     R3,#+7
   \   00000318   5843               MULS     R0,R3,R0
   \   0000031A   2018               ADDS     R0,R4,R0
   \   0000031C   5730               ADDS     R0,R0,#+87
   \   0000031E   0078               LDRB     R0,[R0, #+0]
   \   00000320   ........           BL       CharToStr
   \   00000324   0200               MOVS     R2,R0
   5564                      Label(txt,2,20, 16 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000326   82B0               SUB      SP,SP,#+8
   \   00000328   0020               MOVS     R0,#+0
   \   0000032A   0090               STR      R0,[SP, #+0]
   \   0000032C   7F21               MOVS     R1,#+127
   \   0000032E   0120               MOVS     R0,#+1
   \   00000330   03B4               PUSH     {R0,R1}
   \   00000332   1621               MOVS     R1,#+22
   \   00000334   D21C               ADDS     R2,R2,#+3
   \   00000336   1000               MOVS     R0,R2
   \   00000338   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000033A   000E               LSRS     R0,R0,#+24
   \   0000033C   03B4               PUSH     {R0,R1}
   \   0000033E   1023               MOVS     R3,#+16
   \   00000340   1422               MOVS     R2,#+20
   \   00000342   0221               MOVS     R1,#+2
   \   00000344   06A8               ADD      R0,SP,#+24
   \   00000346   ........           BL       Label
   \   0000034A   06B0               ADD      SP,SP,#+24
   5565                    
   5566                       txt[0]='P'; txt[1]=':'; txt[2]=0; 
   \   0000034C   6846               MOV      R0,SP
   \   0000034E   5021               MOVS     R1,#+80
   \   00000350   0170               STRB     R1,[R0, #+0]
   \   00000352   6846               MOV      R0,SP
   \   00000354   3A21               MOVS     R1,#+58
   \   00000356   4170               STRB     R1,[R0, #+1]
   \   00000358   6846               MOV      R0,SP
   \   0000035A   0021               MOVS     R1,#+0
   \   0000035C   8170               STRB     R1,[R0, #+2]
   5567                      ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Port, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000035E   0222               MOVS     R2,#+2
   \   00000360   6946               MOV      R1,SP
   \   00000362   891C               ADDS     R1,R1,#+2
   \   00000364   1348               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; ZoneGrapfNrClick
   \   00000366   0078               LDRB     R0,[R0, #+0]
   \   00000368   0723               MOVS     R3,#+7
   \   0000036A   5843               MULS     R0,R3,R0
   \   0000036C   2018               ADDS     R0,R4,R0
   \   0000036E   5830               ADDS     R0,R0,#+88
   \   00000370   0078               LDRB     R0,[R0, #+0]
   \   00000372   ........           BL       CharToStr
   \   00000376   0200               MOVS     R2,R0
   5568                      Label(txt,2,20, 3 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000378   82B0               SUB      SP,SP,#+8
   \   0000037A   0020               MOVS     R0,#+0
   \   0000037C   0090               STR      R0,[SP, #+0]
   \   0000037E   7F21               MOVS     R1,#+127
   \   00000380   0120               MOVS     R0,#+1
   \   00000382   03B4               PUSH     {R0,R1}
   \   00000384   1621               MOVS     R1,#+22
   \   00000386   921C               ADDS     R2,R2,#+2
   \   00000388   1000               MOVS     R0,R2
   \   0000038A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000038C   000E               LSRS     R0,R0,#+24
   \   0000038E   03B4               PUSH     {R0,R1}
   \   00000390   0323               MOVS     R3,#+3
   \   00000392   1422               MOVS     R2,#+20
   \   00000394   0221               MOVS     R1,#+2
   \   00000396   06A8               ADD      R0,SP,#+24
   \   00000398   ........           BL       Label
   \   0000039C   06B0               ADD      SP,SP,#+24
   \   0000039E   5CE0               B        ??ZoneGraph_Paint_15
   \                     ??ZoneGraph_Paint_0:
   \   000003A0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000003A4   EC040000           DC32     0x4ec
   \   000003A8   ........           DC32     g_leng
   \   000003AC   7D0A0000           DC32     0xa7d
   \   000003B0   ........           DC32     Speech
   \   000003B4   ........           DC32     ZoneGrapfNrClick
   \   000003B8   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   000003BC   ........           DC32     GraphTab
   \   000003C0   ........           DC32     `?<Constant "Text">`
   \   000003C4   ........           DC32     `?<Constant "Scn ">`
   \   000003C8   ........           DC32     `?<Constant "Val ">`
   \   000003CC   27060000           DC32     0x627
   5569                    }else{
   5570                      txt[0]='V'; txt[1]='a'; txt[2]='r'; txt[3]=':'; txt[4]=' ';
   \                     ??ZoneGraph_Paint_14:
   \   000003D0   6846               MOV      R0,SP
   \   000003D2   5621               MOVS     R1,#+86
   \   000003D4   0170               STRB     R1,[R0, #+0]
   \   000003D6   6846               MOV      R0,SP
   \   000003D8   6121               MOVS     R1,#+97
   \   000003DA   4170               STRB     R1,[R0, #+1]
   \   000003DC   6846               MOV      R0,SP
   \   000003DE   7221               MOVS     R1,#+114
   \   000003E0   8170               STRB     R1,[R0, #+2]
   \   000003E2   6846               MOV      R0,SP
   \   000003E4   3A21               MOVS     R1,#+58
   \   000003E6   C170               STRB     R1,[R0, #+3]
   \   000003E8   6846               MOV      R0,SP
   \   000003EA   2021               MOVS     R1,#+32
   \   000003EC   0171               STRB     R1,[R0, #+4]
   5571                      Label(txt,2,20, 16 ,4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000003EE   82B0               SUB      SP,SP,#+8
   \   000003F0   0020               MOVS     R0,#+0
   \   000003F2   0090               STR      R0,[SP, #+0]
   \   000003F4   7F21               MOVS     R1,#+127
   \   000003F6   0120               MOVS     R0,#+1
   \   000003F8   03B4               PUSH     {R0,R1}
   \   000003FA   1621               MOVS     R1,#+22
   \   000003FC   0420               MOVS     R0,#+4
   \   000003FE   03B4               PUSH     {R0,R1}
   \   00000400   1023               MOVS     R3,#+16
   \   00000402   1422               MOVS     R2,#+20
   \   00000404   0221               MOVS     R1,#+2
   \   00000406   06A8               ADD      R0,SP,#+24
   \   00000408   ........           BL       Label
   \   0000040C   06B0               ADD      SP,SP,#+24
   5572                    
   5573                       txt[0]='b'; txt[1]=' '; 
   \   0000040E   6846               MOV      R0,SP
   \   00000410   6221               MOVS     R1,#+98
   \   00000412   0170               STRB     R1,[R0, #+0]
   \   00000414   6846               MOV      R0,SP
   \   00000416   2021               MOVS     R1,#+32
   \   00000418   4170               STRB     R1,[R0, #+1]
   5574                      char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Port, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   0000041A   0222               MOVS     R2,#+2
   \   0000041C   6946               MOV      R1,SP
   \   0000041E   491C               ADDS     R1,R1,#+1
   \   00000420   D548               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   00000422   0078               LDRB     R0,[R0, #+0]
   \   00000424   0723               MOVS     R3,#+7
   \   00000426   5843               MULS     R0,R3,R0
   \   00000428   2018               ADDS     R0,R4,R0
   \   0000042A   5830               ADDS     R0,R0,#+88
   \   0000042C   0078               LDRB     R0,[R0, #+0]
   \   0000042E   ........           BL       CharToStr
   \   00000432   0200               MOVS     R2,R0
   5575                      Label(txt,2,20, 3 ,ind+1,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000434   82B0               SUB      SP,SP,#+8
   \   00000436   0020               MOVS     R0,#+0
   \   00000438   0090               STR      R0,[SP, #+0]
   \   0000043A   7F21               MOVS     R1,#+127
   \   0000043C   0120               MOVS     R0,#+1
   \   0000043E   03B4               PUSH     {R0,R1}
   \   00000440   1621               MOVS     R1,#+22
   \   00000442   521C               ADDS     R2,R2,#+1
   \   00000444   1000               MOVS     R0,R2
   \   00000446   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000448   000E               LSRS     R0,R0,#+24
   \   0000044A   03B4               PUSH     {R0,R1}
   \   0000044C   0323               MOVS     R3,#+3
   \   0000044E   1422               MOVS     R2,#+20
   \   00000450   0221               MOVS     R1,#+2
   \   00000452   06A8               ADD      R0,SP,#+24
   \   00000454   ........           BL       Label
   \   00000458   06B0               ADD      SP,SP,#+24
   5576                    
   5577                    }
   5578                    
   5579                    
   5580                    
   5581                    txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Paint_15:
   \   0000045A   6846               MOV      R0,SP
   \   0000045C   3C21               MOVS     R1,#+60
   \   0000045E   0170               STRB     R1,[R0, #+0]
   \   00000460   6846               MOV      R0,SP
   \   00000462   0021               MOVS     R1,#+0
   \   00000464   4170               STRB     R1,[R0, #+1]
   5582                    Button(txt,3,15,15,11); 
   \   00000466   82B0               SUB      SP,SP,#+8
   \   00000468   0B20               MOVS     R0,#+11
   \   0000046A   0090               STR      R0,[SP, #+0]
   \   0000046C   0F23               MOVS     R3,#+15
   \   0000046E   0F22               MOVS     R2,#+15
   \   00000470   0321               MOVS     R1,#+3
   \   00000472   02A8               ADD      R0,SP,#+8
   \   00000474   ........           BL       Button
   \   00000478   02B0               ADD      SP,SP,#+8
   5583                    txt[0]='>';
   \   0000047A   6846               MOV      R0,SP
   \   0000047C   3E21               MOVS     R1,#+62
   \   0000047E   0170               STRB     R1,[R0, #+0]
   5584                    Button(txt,45,15,15,11); 
   \   00000480   82B0               SUB      SP,SP,#+8
   \   00000482   0B20               MOVS     R0,#+11
   \   00000484   0090               STR      R0,[SP, #+0]
   \   00000486   0F23               MOVS     R3,#+15
   \   00000488   0F22               MOVS     R2,#+15
   \   0000048A   2D21               MOVS     R1,#+45
   \   0000048C   02A8               ADD      R0,SP,#+8
   \   0000048E   ........           BL       Button
   \   00000492   02B0               ADD      SP,SP,#+8
   5585                    
   5586                   
   5587                    txt[0]='<';txt[1]=0;
   \   00000494   6846               MOV      R0,SP
   \   00000496   3C21               MOVS     R1,#+60
   \   00000498   0170               STRB     R1,[R0, #+0]
   \   0000049A   6846               MOV      R0,SP
   \   0000049C   0021               MOVS     R1,#+0
   \   0000049E   4170               STRB     R1,[R0, #+1]
   5588                    Button(txt,3,3,15,11); 
   \   000004A0   82B0               SUB      SP,SP,#+8
   \   000004A2   0B20               MOVS     R0,#+11
   \   000004A4   0090               STR      R0,[SP, #+0]
   \   000004A6   0F23               MOVS     R3,#+15
   \   000004A8   0322               MOVS     R2,#+3
   \   000004AA   0321               MOVS     R1,#+3
   \   000004AC   02A8               ADD      R0,SP,#+8
   \   000004AE   ........           BL       Button
   \   000004B2   02B0               ADD      SP,SP,#+8
   5589                    txt[0]='>';
   \   000004B4   6846               MOV      R0,SP
   \   000004B6   3E21               MOVS     R1,#+62
   \   000004B8   0170               STRB     R1,[R0, #+0]
   5590                    Button(txt,45,3,15,11); 
   \   000004BA   82B0               SUB      SP,SP,#+8
   \   000004BC   0B20               MOVS     R0,#+11
   \   000004BE   0090               STR      R0,[SP, #+0]
   \   000004C0   0F23               MOVS     R3,#+15
   \   000004C2   0322               MOVS     R2,#+3
   \   000004C4   2D21               MOVS     R1,#+45
   \   000004C6   02A8               ADD      R0,SP,#+8
   \   000004C8   ........           BL       Button
   \   000004CC   02B0               ADD      SP,SP,#+8
   5591                    
   5592                    
   5593                  }        
   5594                  
   5595                  //je¿eli tekst
   5596                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) 
   \                     ??ZoneGraph_Paint_13:
   \   000004CE   AA48               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   000004D0   0078               LDRB     R0,[R0, #+0]
   \   000004D2   0721               MOVS     R1,#+7
   \   000004D4   4843               MULS     R0,R1,R0
   \   000004D6   2018               ADDS     R0,R4,R0
   \   000004D8   5330               ADDS     R0,R0,#+83
   \   000004DA   0078               LDRB     R0,[R0, #+0]
   \   000004DC   0828               CMP      R0,#+8
   \   000004DE   71D1               BNE      ??ZoneGraph_Paint_17
   5597                  {
   5598          
   5599                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[0]!=0)
   \   000004E0   A548               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   000004E2   0078               LDRB     R0,[R0, #+0]
   \   000004E4   0721               MOVS     R1,#+7
   \   000004E6   4843               MULS     R0,R1,R0
   \   000004E8   2018               ADDS     R0,R4,R0
   \   000004EA   5430               ADDS     R0,R0,#+84
   \   000004EC   0078               LDRB     R0,[R0, #+0]
   \   000004EE   0028               CMP      R0,#+0
   \   000004F0   15D0               BEQ      ??ZoneGraph_Paint_18
   5600                    {
   5601                      Label(ScreenLokal->Graph[ZoneGrapfNrClick].Text,0,31, 17 ,6,10,1,127,0); 
   \   000004F2   82B0               SUB      SP,SP,#+8
   \   000004F4   0020               MOVS     R0,#+0
   \   000004F6   0090               STR      R0,[SP, #+0]
   \   000004F8   7F21               MOVS     R1,#+127
   \   000004FA   0120               MOVS     R0,#+1
   \   000004FC   03B4               PUSH     {R0,R1}
   \   000004FE   0A21               MOVS     R1,#+10
   \   00000500   0620               MOVS     R0,#+6
   \   00000502   03B4               PUSH     {R0,R1}
   \   00000504   1123               MOVS     R3,#+17
   \   00000506   1F22               MOVS     R2,#+31
   \   00000508   0021               MOVS     R1,#+0
   \   0000050A   9B48               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   0000050C   0078               LDRB     R0,[R0, #+0]
   \   0000050E   0725               MOVS     R5,#+7
   \   00000510   6843               MULS     R0,R5,R0
   \   00000512   2018               ADDS     R0,R4,R0
   \   00000514   5430               ADDS     R0,R0,#+84
   \   00000516   ........           BL       Label
   \   0000051A   06B0               ADD      SP,SP,#+24
   \   0000051C   0FE0               B        ??ZoneGraph_Paint_19
   5602                    }else{
   5603                      Label("...... ",0,31, 17 ,6,10,1,127,0); 
   \                     ??ZoneGraph_Paint_18:
   \   0000051E   82B0               SUB      SP,SP,#+8
   \   00000520   0020               MOVS     R0,#+0
   \   00000522   0090               STR      R0,[SP, #+0]
   \   00000524   7F21               MOVS     R1,#+127
   \   00000526   0120               MOVS     R0,#+1
   \   00000528   03B4               PUSH     {R0,R1}
   \   0000052A   0A21               MOVS     R1,#+10
   \   0000052C   0620               MOVS     R0,#+6
   \   0000052E   03B4               PUSH     {R0,R1}
   \   00000530   1123               MOVS     R3,#+17
   \   00000532   1F22               MOVS     R2,#+31
   \   00000534   0021               MOVS     R1,#+0
   \   00000536   9148               LDR      R0,??ZoneGraph_Paint_16+0x4  ;; `?<Constant "...... ">`
   \   00000538   ........           BL       Label
   \   0000053C   06B0               ADD      SP,SP,#+24
   5604                    }
   5605                    
   5606                    Button("Text",2,15,25,11); 
   \                     ??ZoneGraph_Paint_19:
   \   0000053E   82B0               SUB      SP,SP,#+8
   \   00000540   0B20               MOVS     R0,#+11
   \   00000542   0090               STR      R0,[SP, #+0]
   \   00000544   1923               MOVS     R3,#+25
   \   00000546   0F22               MOVS     R2,#+15
   \   00000548   0221               MOVS     R1,#+2
   \   0000054A   8D48               LDR      R0,??ZoneGraph_Paint_16+0x8  ;; `?<Constant "Text">`
   \   0000054C   ........           BL       Button
   \   00000550   02B0               ADD      SP,SP,#+8
   5607                    
   5608                    Label("+On/Off",0,3, 4 ,7,10,1,127,0); 
   \   00000552   82B0               SUB      SP,SP,#+8
   \   00000554   0020               MOVS     R0,#+0
   \   00000556   0090               STR      R0,[SP, #+0]
   \   00000558   7F21               MOVS     R1,#+127
   \   0000055A   0120               MOVS     R0,#+1
   \   0000055C   03B4               PUSH     {R0,R1}
   \   0000055E   0A21               MOVS     R1,#+10
   \   00000560   0720               MOVS     R0,#+7
   \   00000562   03B4               PUSH     {R0,R1}
   \   00000564   0423               MOVS     R3,#+4
   \   00000566   0322               MOVS     R2,#+3
   \   00000568   0021               MOVS     R1,#+0
   \   0000056A   8648               LDR      R0,??ZoneGraph_Paint_16+0xC  ;; `?<Constant "+On/Off">`
   \   0000056C   ........           BL       Label
   \   00000570   06B0               ADD      SP,SP,#+24
   5609                    
   5610                    if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \   00000572   8148               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   00000574   0078               LDRB     R0,[R0, #+0]
   \   00000576   0721               MOVS     R1,#+7
   \   00000578   4843               MULS     R0,R1,R0
   \   0000057A   2018               ADDS     R0,R4,R0
   \   0000057C   5930               ADDS     R0,R0,#+89
   \   0000057E   0078               LDRB     R0,[R0, #+0]
   \   00000580   C007               LSLS     R0,R0,#+31
   \   00000582   0CD5               BPL      ??ZoneGraph_Paint_20
   5611                    {
   5612                      txt[0]='O'; txt[1]='f';txt[2]='f'; txt[3]=0;
   \   00000584   6846               MOV      R0,SP
   \   00000586   4F21               MOVS     R1,#+79
   \   00000588   0170               STRB     R1,[R0, #+0]
   \   0000058A   6846               MOV      R0,SP
   \   0000058C   6621               MOVS     R1,#+102
   \   0000058E   4170               STRB     R1,[R0, #+1]
   \   00000590   6846               MOV      R0,SP
   \   00000592   6621               MOVS     R1,#+102
   \   00000594   8170               STRB     R1,[R0, #+2]
   \   00000596   6846               MOV      R0,SP
   \   00000598   0021               MOVS     R1,#+0
   \   0000059A   C170               STRB     R1,[R0, #+3]
   \   0000059C   08E0               B        ??ZoneGraph_Paint_21
   5613                    }else{
   5614                      txt[0]='O'; txt[1]='n'; txt[2]=0;
   \                     ??ZoneGraph_Paint_20:
   \   0000059E   6846               MOV      R0,SP
   \   000005A0   4F21               MOVS     R1,#+79
   \   000005A2   0170               STRB     R1,[R0, #+0]
   \   000005A4   6846               MOV      R0,SP
   \   000005A6   6E21               MOVS     R1,#+110
   \   000005A8   4170               STRB     R1,[R0, #+1]
   \   000005AA   6846               MOV      R0,SP
   \   000005AC   0021               MOVS     R1,#+0
   \   000005AE   8170               STRB     R1,[R0, #+2]
   5615                    }
   5616                    
   5617                    Button(txt,40,3,21,11); 
   \                     ??ZoneGraph_Paint_21:
   \   000005B0   82B0               SUB      SP,SP,#+8
   \   000005B2   0B20               MOVS     R0,#+11
   \   000005B4   0090               STR      R0,[SP, #+0]
   \   000005B6   1523               MOVS     R3,#+21
   \   000005B8   0322               MOVS     R2,#+3
   \   000005BA   2821               MOVS     R1,#+40
   \   000005BC   02A8               ADD      R0,SP,#+8
   \   000005BE   ........           BL       Button
   \   000005C2   02B0               ADD      SP,SP,#+8
   5618                    
   5619                    
   5620                  }
   5621                  
   5622          
   5623                       
   5624                       
   5625                  //je¿eli wartoæ
   5626                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Paint_17:
   \   000005C4   6C48               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   000005C6   0078               LDRB     R0,[R0, #+0]
   \   000005C8   0721               MOVS     R1,#+7
   \   000005CA   4843               MULS     R0,R1,R0
   \   000005CC   2018               ADDS     R0,R4,R0
   \   000005CE   5330               ADDS     R0,R0,#+83
   \   000005D0   0078               LDRB     R0,[R0, #+0]
   \   000005D2   0A28               CMP      R0,#+10
   \   000005D4   00D0               BEQ      .+4
   \   000005D6   ABE0               B        ??ZoneGraph_Paint_22
   5627                  {
   5628                    for (char i=0; i<3; i++) 
   \   000005D8   0025               MOVS     R5,#+0
   \   000005DA   16E0               B        ??ZoneGraph_Paint_23
   5629                    {
   5630                     if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]>=30) 
   5631                     {Label(&(ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]),2,30-((3-i)*9),17,1,7,1,127,1); 
   5632                     }else{
   5633                      Label(" ",2,30-((3-i)*9),17,1,8,1,127,1);  
   \                     ??ZoneGraph_Paint_24:
   \   000005DC   82B0               SUB      SP,SP,#+8
   \   000005DE   0120               MOVS     R0,#+1
   \   000005E0   0090               STR      R0,[SP, #+0]
   \   000005E2   7F21               MOVS     R1,#+127
   \   000005E4   0120               MOVS     R0,#+1
   \   000005E6   03B4               PUSH     {R0,R1}
   \   000005E8   0821               MOVS     R1,#+8
   \   000005EA   0120               MOVS     R0,#+1
   \   000005EC   03B4               PUSH     {R0,R1}
   \   000005EE   1123               MOVS     R3,#+17
   \   000005F0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000005F2   2D0E               LSRS     R5,R5,#+24
   \   000005F4   0922               MOVS     R2,#+9
   \   000005F6   6A43               MULS     R2,R5,R2
   \   000005F8   D21C               ADDS     R2,R2,#+3
   \   000005FA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000005FC   120E               LSRS     R2,R2,#+24
   \   000005FE   0221               MOVS     R1,#+2
   \   00000600   61A0               ADR      R0,??ZoneGraph_Paint_16+0x10  ;; 0x20, 0x00, 0x00, 0x00
   \   00000602   ........           BL       Label
   \   00000606   06B0               ADD      SP,SP,#+24
   5634                     }
   \                     ??ZoneGraph_Paint_25:
   \   00000608   6D1C               ADDS     R5,R5,#+1
   \                     ??ZoneGraph_Paint_23:
   \   0000060A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000060C   2D0E               LSRS     R5,R5,#+24
   \   0000060E   032D               CMP      R5,#+3
   \   00000610   2AD2               BCS      ??ZoneGraph_Paint_26
   \   00000612   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000614   2D0E               LSRS     R5,R5,#+24
   \   00000616   5848               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   00000618   0078               LDRB     R0,[R0, #+0]
   \   0000061A   0721               MOVS     R1,#+7
   \   0000061C   4843               MULS     R0,R1,R0
   \   0000061E   2018               ADDS     R0,R4,R0
   \   00000620   4019               ADDS     R0,R0,R5
   \   00000622   5430               ADDS     R0,R0,#+84
   \   00000624   0078               LDRB     R0,[R0, #+0]
   \   00000626   1E28               CMP      R0,#+30
   \   00000628   D8D3               BCC      ??ZoneGraph_Paint_24
   \   0000062A   82B0               SUB      SP,SP,#+8
   \   0000062C   0120               MOVS     R0,#+1
   \   0000062E   0090               STR      R0,[SP, #+0]
   \   00000630   7F21               MOVS     R1,#+127
   \   00000632   0120               MOVS     R0,#+1
   \   00000634   03B4               PUSH     {R0,R1}
   \   00000636   0721               MOVS     R1,#+7
   \   00000638   0120               MOVS     R0,#+1
   \   0000063A   03B4               PUSH     {R0,R1}
   \   0000063C   1123               MOVS     R3,#+17
   \   0000063E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000640   2D0E               LSRS     R5,R5,#+24
   \   00000642   0922               MOVS     R2,#+9
   \   00000644   6A43               MULS     R2,R5,R2
   \   00000646   D21C               ADDS     R2,R2,#+3
   \   00000648   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000064A   120E               LSRS     R2,R2,#+24
   \   0000064C   0221               MOVS     R1,#+2
   \   0000064E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000650   2D0E               LSRS     R5,R5,#+24
   \   00000652   4948               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   00000654   0078               LDRB     R0,[R0, #+0]
   \   00000656   0726               MOVS     R6,#+7
   \   00000658   7043               MULS     R0,R6,R0
   \   0000065A   2018               ADDS     R0,R4,R0
   \   0000065C   4019               ADDS     R0,R0,R5
   \   0000065E   5430               ADDS     R0,R0,#+84
   \   00000660   ........           BL       Label
   \   00000664   06B0               ADD      SP,SP,#+24
   \   00000666   CFE7               B        ??ZoneGraph_Paint_25
   5635                    }
   5636                    
   5637                    txt[0]='N'; txt[1]=':'; txt[2]=0;
   \                     ??ZoneGraph_Paint_26:
   \   00000668   6846               MOV      R0,SP
   \   0000066A   4E21               MOVS     R1,#+78
   \   0000066C   0170               STRB     R1,[R0, #+0]
   \   0000066E   6846               MOV      R0,SP
   \   00000670   3A21               MOVS     R1,#+58
   \   00000672   4170               STRB     R1,[R0, #+1]
   \   00000674   6846               MOV      R0,SP
   \   00000676   0021               MOVS     R1,#+0
   \   00000678   8170               STRB     R1,[R0, #+2]
   5638                    Label(txt,0,33, 17 ,2,10,1,127,0); 
   \   0000067A   82B0               SUB      SP,SP,#+8
   \   0000067C   0020               MOVS     R0,#+0
   \   0000067E   0090               STR      R0,[SP, #+0]
   \   00000680   7F21               MOVS     R1,#+127
   \   00000682   0120               MOVS     R0,#+1
   \   00000684   03B4               PUSH     {R0,R1}
   \   00000686   0A21               MOVS     R1,#+10
   \   00000688   0220               MOVS     R0,#+2
   \   0000068A   03B4               PUSH     {R0,R1}
   \   0000068C   1123               MOVS     R3,#+17
   \   0000068E   2122               MOVS     R2,#+33
   \   00000690   0021               MOVS     R1,#+0
   \   00000692   06A8               ADD      R0,SP,#+24
   \   00000694   ........           BL       Label
   \   00000698   06B0               ADD      SP,SP,#+24
   5639                    txt[1]=0;txt[2]=0;
   \   0000069A   6846               MOV      R0,SP
   \   0000069C   0021               MOVS     R1,#+0
   \   0000069E   4170               STRB     R1,[R0, #+1]
   \   000006A0   6846               MOV      R0,SP
   \   000006A2   0021               MOVS     R1,#+0
   \   000006A4   8170               STRB     R1,[R0, #+2]
   5640                    char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000006A6   0222               MOVS     R2,#+2
   \   000006A8   6946               MOV      R1,SP
   \   000006AA   3348               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   000006AC   0078               LDRB     R0,[R0, #+0]
   \   000006AE   0723               MOVS     R3,#+7
   \   000006B0   5843               MULS     R0,R3,R0
   \   000006B2   2018               ADDS     R0,R4,R0
   \   000006B4   5730               ADDS     R0,R0,#+87
   \   000006B6   0078               LDRB     R0,[R0, #+0]
   \   000006B8   ........           BL       CharToStr
   \   000006BC   0500               MOVS     R5,R0
   5641                    txt[ind++]='.';
   \   000006BE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000006C0   2D0E               LSRS     R5,R5,#+24
   \   000006C2   6846               MOV      R0,SP
   \   000006C4   2E21               MOVS     R1,#+46
   \   000006C6   4155               STRB     R1,[R0, R5]
   \   000006C8   6D1C               ADDS     R5,R5,#+1
   5642                    ind+=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Reg, &txt[ind], 2); //(char Value, char *Vstring, char ill);
   \   000006CA   0222               MOVS     R2,#+2
   \   000006CC   2800               MOVS     R0,R5
   \   000006CE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006D0   000E               LSRS     R0,R0,#+24
   \   000006D2   6946               MOV      R1,SP
   \   000006D4   0918               ADDS     R1,R1,R0
   \   000006D6   2848               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   000006D8   0078               LDRB     R0,[R0, #+0]
   \   000006DA   0723               MOVS     R3,#+7
   \   000006DC   5843               MULS     R0,R3,R0
   \   000006DE   2018               ADDS     R0,R4,R0
   \   000006E0   5830               ADDS     R0,R0,#+88
   \   000006E2   0078               LDRB     R0,[R0, #+0]
   \   000006E4   ........           BL       CharToStr
   \   000006E8   2D18               ADDS     R5,R5,R0
   5643                    Label(txt,0,42, 17 ,ind,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000006EA   82B0               SUB      SP,SP,#+8
   \   000006EC   0020               MOVS     R0,#+0
   \   000006EE   0090               STR      R0,[SP, #+0]
   \   000006F0   7F21               MOVS     R1,#+127
   \   000006F2   0120               MOVS     R0,#+1
   \   000006F4   03B4               PUSH     {R0,R1}
   \   000006F6   0A21               MOVS     R1,#+10
   \   000006F8   2800               MOVS     R0,R5
   \   000006FA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006FC   000E               LSRS     R0,R0,#+24
   \   000006FE   03B4               PUSH     {R0,R1}
   \   00000700   1123               MOVS     R3,#+17
   \   00000702   2A22               MOVS     R2,#+42
   \   00000704   0021               MOVS     R1,#+0
   \   00000706   06A8               ADD      R0,SP,#+24
   \   00000708   ........           BL       Label
   \   0000070C   06B0               ADD      SP,SP,#+24
   5644                  
   5645                    Button(Speech[g_leng].Zmiana,8,3,44,13); 
   \   0000070E   82B0               SUB      SP,SP,#+8
   \   00000710   0D20               MOVS     R0,#+13
   \   00000712   0090               STR      R0,[SP, #+0]
   \   00000714   2C23               MOVS     R3,#+44
   \   00000716   0322               MOVS     R2,#+3
   \   00000718   0821               MOVS     R1,#+8
   \   0000071A   1C48               LDR      R0,??ZoneGraph_Paint_16+0x14  ;; 0x50a
   \   0000071C   1C4D               LDR      R5,??ZoneGraph_Paint_16+0x18  ;; g_leng
   \   0000071E   2D68               LDR      R5,[R5, #+0]
   \   00000720   1C4E               LDR      R6,??ZoneGraph_Paint_16+0x1C  ;; 0xa7d
   \   00000722   7543               MULS     R5,R6,R5
   \   00000724   1C4E               LDR      R6,??ZoneGraph_Paint_16+0x20  ;; Speech
   \   00000726   7519               ADDS     R5,R6,R5
   \   00000728   2818               ADDS     R0,R5,R0
   \   0000072A   ........           BL       Button
   \   0000072E   02B0               ADD      SP,SP,#+8
   5646             
   5647                  }
   5648                  
   5649                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphScena) 
   \                     ??ZoneGraph_Paint_22:
   \   00000730   1148               LDR      R0,??ZoneGraph_Paint_16  ;; ZoneGrapfNrClick
   \   00000732   0078               LDRB     R0,[R0, #+0]
   \   00000734   0721               MOVS     R1,#+7
   \   00000736   4843               MULS     R0,R1,R0
   \   00000738   2018               ADDS     R0,R4,R0
   \   0000073A   5330               ADDS     R0,R0,#+83
   \   0000073C   0078               LDRB     R0,[R0, #+0]
   \   0000073E   0928               CMP      R0,#+9
   \   00000740   16D1               BNE      ??ZoneGraph_Paint_27
   5650                  {
   5651                    Label(Speech[g_leng].NumerSceny,0,2, 12 ,15,10,1,127,0); 
   \   00000742   82B0               SUB      SP,SP,#+8
   \   00000744   0020               MOVS     R0,#+0
   \   00000746   0090               STR      R0,[SP, #+0]
   \   00000748   7F21               MOVS     R1,#+127
   \   0000074A   0120               MOVS     R0,#+1
   \   0000074C   03B4               PUSH     {R0,R1}
   \   0000074E   0A21               MOVS     R1,#+10
   \   00000750   0F20               MOVS     R0,#+15
   \   00000752   03B4               PUSH     {R0,R1}
   \   00000754   0C23               MOVS     R3,#+12
   \   00000756   0222               MOVS     R2,#+2
   \   00000758   0021               MOVS     R1,#+0
   \   0000075A   1048               LDR      R0,??ZoneGraph_Paint_16+0x24  ;; 0x4fb
   \   0000075C   0C4C               LDR      R4,??ZoneGraph_Paint_16+0x18  ;; g_leng
   \   0000075E   2468               LDR      R4,[R4, #+0]
   \   00000760   0C4D               LDR      R5,??ZoneGraph_Paint_16+0x1C  ;; 0xa7d
   \   00000762   6C43               MULS     R4,R5,R4
   \   00000764   0C4D               LDR      R5,??ZoneGraph_Paint_16+0x20  ;; Speech
   \   00000766   2C19               ADDS     R4,R5,R4
   \   00000768   2018               ADDS     R0,R4,R0
   \   0000076A   ........           BL       Label
   \   0000076E   06B0               ADD      SP,SP,#+24
   5652                  }
   5653                  
   5654                  
   5655                }//________________________________________________________________________
   \                     ??ZoneGraph_Paint_27:
   \   00000770   03B0               ADD      SP,SP,#+12
   \   00000772   F0BC               POP      {R4-R7}
   \   00000774   01BC               POP      {R0}
   \   00000776   0047               BX       R0               ;; return
   \                     ??ZoneGraph_Paint_16:
   \   00000778   ........           DC32     ZoneGrapfNrClick
   \   0000077C   ........           DC32     `?<Constant "...... ">`
   \   00000780   ........           DC32     `?<Constant "Text">`
   \   00000784   ........           DC32     `?<Constant "+On/Off">`
   \   00000788   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000078C   0A050000           DC32     0x50a
   \   00000790   ........           DC32     g_leng
   \   00000794   7D0A0000           DC32     0xa7d
   \   00000798   ........           DC32     Speech
   \   0000079C   FB040000           DC32     0x4fb
   5656          
   5657              
   5658          
   5659          

   \                                 In section Debug.txt, align 4, keep-with-next
   5660           void ZoneGraph_Event(_Screen* ScreenLokal)
   5661                {
   \                     ZoneGraph_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5662                     char ButonClickNr=0;
   \   00000004   6846               MOV      R0,SP
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0171               STRB     R1,[R0, #+4]
   5663                  //zdarzenie typu down "X"
   5664                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   0000000A   CF48               LDR      R0,??ZoneGraph_Event_0  ;; X_down
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   405E               LDRSH    R0,[R0, R1]
   \   00000010   2F28               CMP      R0,#+47
   \   00000012   38DB               BLT      ??ZoneGraph_Event_1
   \   00000014   CC48               LDR      R0,??ZoneGraph_Event_0  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   405E               LDRSH    R0,[R0, R1]
   \   0000001A   3F28               CMP      R0,#+63
   \   0000001C   33DA               BGE      ??ZoneGraph_Event_1
   \   0000001E   CB48               LDR      R0,??ZoneGraph_Event_0+0x4  ;; Y_down
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   405E               LDRSH    R0,[R0, R1]
   \   00000024   7128               CMP      R0,#+113
   \   00000026   2EDB               BLT      ??ZoneGraph_Event_1
   \   00000028   C848               LDR      R0,??ZoneGraph_Event_0+0x4  ;; Y_down
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   405E               LDRSH    R0,[R0, R1]
   \   0000002E   7F28               CMP      R0,#+127
   \   00000030   29DA               BGE      ??ZoneGraph_Event_1
   5665                  {
   5666                    //MenuPaint();
   5667                    H_line(49,114,10,0);
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   0A22               MOVS     R2,#+10
   \   00000036   7221               MOVS     R1,#+114
   \   00000038   3120               MOVS     R0,#+49
   \   0000003A   ........           BL       H_line
   5668                    H_line(49,123,10,0); 
   \   0000003E   0023               MOVS     R3,#+0
   \   00000040   0A22               MOVS     R2,#+10
   \   00000042   7B21               MOVS     R1,#+123
   \   00000044   3120               MOVS     R0,#+49
   \   00000046   ........           BL       H_line
   5669                    V_line(49,114,10,0); 
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   0A22               MOVS     R2,#+10
   \   0000004E   7221               MOVS     R1,#+114
   \   00000050   3120               MOVS     R0,#+49
   \   00000052   ........           BL       V_line
   5670                    V_line(58,114,10,0); 
   \   00000056   0023               MOVS     R3,#+0
   \   00000058   0A22               MOVS     R2,#+10
   \   0000005A   7221               MOVS     R1,#+114
   \   0000005C   3A20               MOVS     R0,#+58
   \   0000005E   ........           BL       V_line
   5671                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000062   BB48               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   00000064   0078               LDRB     R0,[R0, #+0]
   \   00000066   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   0028               CMP      R0,#+0
   \   0000006C   0BD1               BNE      ??ZoneGraph_Event_1
   \   0000006E   B948               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   00000070   8021               MOVS     R1,#+128
   \   00000072   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000074   0160               STR      R1,[R0, #+0]
   \   00000076   B84A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000078   B848               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   0000007A   03C8               LDM      R0!,{R0,R1}
   \   0000007C   0023               MOVS     R3,#+0
   \   0000007E   0830               ADDS     R0,R0,#+8
   \   00000080   5941               ADCS     R1,R1,R3
   \   00000082   03C2               STM      R2!,{R0,R1}
   \   00000084   083A               SUBS     R2,R2,#+8
   5672                    
   5673                  }
   5674            
   5675                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??ZoneGraph_Event_1:
   \   00000086   B648               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   405E               LDRSH    R0,[R0, R1]
   \   0000008C   2F28               CMP      R0,#+47
   \   0000008E   2ADB               BLT      ??ZoneGraph_Event_2
   \   00000090   B348               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   00000092   0021               MOVS     R1,#+0
   \   00000094   405E               LDRSH    R0,[R0, R1]
   \   00000096   3F28               CMP      R0,#+63
   \   00000098   25DA               BGE      ??ZoneGraph_Event_2
   \   0000009A   B248               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   405E               LDRSH    R0,[R0, R1]
   \   000000A0   7128               CMP      R0,#+113
   \   000000A2   20DB               BLT      ??ZoneGraph_Event_2
   \   000000A4   AF48               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   000000A6   0021               MOVS     R1,#+0
   \   000000A8   405E               LDRSH    R0,[R0, R1]
   \   000000AA   7F28               CMP      R0,#+127
   \   000000AC   1BDA               BGE      ??ZoneGraph_Event_2
   5676                  {
   5677                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000AE   A848               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   000000B0   0078               LDRB     R0,[R0, #+0]
   \   000000B2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B4   000E               LSRS     R0,R0,#+24
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   0BD1               BNE      ??ZoneGraph_Event_3
   \   000000BA   A648               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   000000BC   8021               MOVS     R1,#+128
   \   000000BE   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000C0   0160               STR      R1,[R0, #+0]
   \   000000C2   A54A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   000000C4   A548               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   000000C6   03C8               LDM      R0!,{R0,R1}
   \   000000C8   0023               MOVS     R3,#+0
   \   000000CA   0830               ADDS     R0,R0,#+8
   \   000000CC   5941               ADCS     R1,R1,R3
   \   000000CE   03C2               STM      R2!,{R0,R1}
   \   000000D0   083A               SUBS     R2,R2,#+8
   5678                      MenuLevel=(MenuLevel/10);
   \                     ??ZoneGraph_Event_3:
   \   000000D2   A548               LDR      R0,??ZoneGraph_Event_0+0x20  ;; MenuLevel
   \   000000D4   0068               LDR      R0,[R0, #+0]
   \   000000D6   0A21               MOVS     R1,#+10
   \   000000D8   ........           BL       __aeabi_idivmod
   \   000000DC   A249               LDR      R1,??ZoneGraph_Event_0+0x20  ;; MenuLevel
   \   000000DE   0860               STR      R0,[R1, #+0]
   5679                      MenuPaint();
   \   000000E0   ........           BL       MenuPaint
   \   000000E4   BAE2               B        ??ZoneGraph_Event_4
   5680                  }  
   5681                  else
   5682                  {
   5683          
   5684                  
   5685                  //wybór grafiki
   5686                  char idx=0;
   \                     ??ZoneGraph_Event_2:
   \   000000E6   0025               MOVS     R5,#+0
   5687                  char click=0;
   \   000000E8   6846               MOV      R0,SP
   \   000000EA   0021               MOVS     R1,#+0
   \   000000EC   4171               STRB     R1,[R0, #+5]
   5688          
   5689                  for (int j=(MaxRowGr-1); j>=0; j--)
   \   000000EE   0327               MOVS     R7,#+3
   \   000000F0   45E0               B        ??ZoneGraph_Event_5
   5690                  {
   5691                    for (int i=0; i<MaxColGr; i++)
   5692                    {
   5693                        
   5694                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>Y_offset+j*20) && (Y_up<Y_offset+1+(j+1)*20))                    //"X"
   \                     ??ZoneGraph_Event_6:
   \   000000F2   1420               MOVS     R0,#+20
   \   000000F4   7043               MULS     R0,R6,R0
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   9949               LDR      R1,??ZoneGraph_Event_0+0x18  ;; X_up
   \   000000FA   0022               MOVS     R2,#+0
   \   000000FC   895E               LDRSH    R1,[R1, R2]
   \   000000FE   8842               CMP      R0,R1
   \   00000100   38DA               BGE      ??ZoneGraph_Event_7
   \   00000102   9748               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   00000104   0021               MOVS     R1,#+0
   \   00000106   405E               LDRSH    R0,[R0, R1]
   \   00000108   1421               MOVS     R1,#+20
   \   0000010A   7143               MULS     R1,R6,R1
   \   0000010C   1531               ADDS     R1,R1,#+21
   \   0000010E   8842               CMP      R0,R1
   \   00000110   30DA               BGE      ??ZoneGraph_Event_7
   \   00000112   1420               MOVS     R0,#+20
   \   00000114   7843               MULS     R0,R7,R0
   \   00000116   1B30               ADDS     R0,R0,#+27
   \   00000118   9249               LDR      R1,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   0000011A   0022               MOVS     R2,#+0
   \   0000011C   895E               LDRSH    R1,[R1, R2]
   \   0000011E   8842               CMP      R0,R1
   \   00000120   28DA               BGE      ??ZoneGraph_Event_7
   \   00000122   9048               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   00000124   0021               MOVS     R1,#+0
   \   00000126   405E               LDRSH    R0,[R0, R1]
   \   00000128   1421               MOVS     R1,#+20
   \   0000012A   7943               MULS     R1,R7,R1
   \   0000012C   3031               ADDS     R1,R1,#+48
   \   0000012E   8842               CMP      R0,R1
   \   00000130   20DA               BGE      ??ZoneGraph_Event_7
   5695                        {
   5696          
   5697                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000132   8748               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   00000134   0078               LDRB     R0,[R0, #+0]
   \   00000136   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000138   000E               LSRS     R0,R0,#+24
   \   0000013A   0028               CMP      R0,#+0
   \   0000013C   0BD1               BNE      ??ZoneGraph_Event_8
   \   0000013E   8548               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   00000140   8021               MOVS     R1,#+128
   \   00000142   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000144   0160               STR      R1,[R0, #+0]
   \   00000146   844A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000148   8448               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   0000014A   03C8               LDM      R0!,{R0,R1}
   \   0000014C   0023               MOVS     R3,#+0
   \   0000014E   0830               ADDS     R0,R0,#+8
   \   00000150   5941               ADCS     R1,R1,R3
   \   00000152   03C2               STM      R2!,{R0,R1}
   \   00000154   083A               SUBS     R2,R2,#+8
   5698          
   5699                          ScreenLokal->Graph[ZoneGrapfNrClick].Type=idx;
                                                                          ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??ZoneGraph_Event_8:
   \   00000156   8548               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000158   0078               LDRB     R0,[R0, #+0]
   \   0000015A   0721               MOVS     R1,#+7
   \   0000015C   4843               MULS     R0,R1,R0
   \   0000015E   2018               ADDS     R0,R4,R0
   \   00000160   5330               ADDS     R0,R0,#+83
   \   00000162   0570               STRB     R5,[R0, #+0]
   5700                          click=1;
   \   00000164   6846               MOV      R0,SP
   \   00000166   0121               MOVS     R1,#+1
   \   00000168   4171               STRB     R1,[R0, #+5]
   5701                          ProgramChange=1;
   \   0000016A   8148               LDR      R0,??ZoneGraph_Event_0+0x28  ;; ProgramChange
   \   0000016C   0121               MOVS     R1,#+1
   \   0000016E   0170               STRB     R1,[R0, #+0]
   5702                          MenuPaint();
   \   00000170   ........           BL       MenuPaint
   5703                         
   5704                        }
   5705                        idx++;
   \                     ??ZoneGraph_Event_7:
   \   00000174   6D1C               ADDS     R5,R5,#+1
   5706                      
   5707                    }
   \   00000176   761C               ADDS     R6,R6,#+1
   \                     ??ZoneGraph_Event_9:
   \   00000178   032E               CMP      R6,#+3
   \   0000017A   BADB               BLT      ??ZoneGraph_Event_6
   \   0000017C   7F1E               SUBS     R7,R7,#+1
   \                     ??ZoneGraph_Event_5:
   \   0000017E   002F               CMP      R7,#+0
   \   00000180   01D4               BMI      ??ZoneGraph_Event_10
   \   00000182   0026               MOVS     R6,#+0
   \   00000184   F8E7               B        ??ZoneGraph_Event_9
   5708                    
   5709                  }
   5710                  
   5711          
   5712            
   5713               
   5714                  if (click)
   \                     ??ZoneGraph_Event_10:
   \   00000186   6846               MOV      R0,SP
   \   00000188   4079               LDRB     R0,[R0, #+5]
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   0FD0               BEQ      ??ZoneGraph_Event_11
   5715                  {
   5716          
   5717                  
   5718                  if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) )
   \   0000018E   7748               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000190   0078               LDRB     R0,[R0, #+0]
   \   00000192   0721               MOVS     R1,#+7
   \   00000194   4843               MULS     R0,R1,R0
   \   00000196   2018               ADDS     R0,R4,R0
   \   00000198   5330               ADDS     R0,R0,#+83
   \   0000019A   0078               LDRB     R0,[R0, #+0]
   \   0000019C   0828               CMP      R0,#+8
   \   0000019E   00D0               BEQ      .+4
   \   000001A0   5CE2               B        ??ZoneGraph_Event_4
   5719                  {
   5720                    ProgramChange=1;
   \   000001A2   7348               LDR      R0,??ZoneGraph_Event_0+0x28  ;; ProgramChange
   \   000001A4   0121               MOVS     R1,#+1
   \   000001A6   0170               STRB     R1,[R0, #+0]
   5721          
   5722                    MenuPaint(); 
   \   000001A8   ........           BL       MenuPaint
   \   000001AC   56E2               B        ??ZoneGraph_Event_4
   5723                  }
   5724                  
   5725                  }
   5726                  else
   5727                  {
   5728                  
   5729                 
   5730           
   5731                  //je¿eli On / Off
   5732                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \                     ??ZoneGraph_Event_11:
   \   000001AE   6F48               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000001B0   0078               LDRB     R0,[R0, #+0]
   \   000001B2   0721               MOVS     R1,#+7
   \   000001B4   4843               MULS     R0,R1,R0
   \   000001B6   2018               ADDS     R0,R4,R0
   \   000001B8   5330               ADDS     R0,R0,#+83
   \   000001BA   0078               LDRB     R0,[R0, #+0]
   \   000001BC   0B28               CMP      R0,#+11
   \   000001BE   00D0               BEQ      .+4
   \   000001C0   85E1               B        ??ZoneGraph_Event_12
   5733                  {
   5734                    char txt[2];
   5735                    char Repaint=0;
   \   000001C2   0025               MOVS     R5,#+0
   5736                    txt[0]='<';txt[1]=0;
   \   000001C4   6846               MOV      R0,SP
   \   000001C6   3C21               MOVS     R1,#+60
   \   000001C8   0170               STRB     R1,[R0, #+0]
   \   000001CA   6846               MOV      R0,SP
   \   000001CC   0021               MOVS     R1,#+0
   \   000001CE   4170               STRB     R1,[R0, #+1]
   5737                    if (Button(txt,3,15,15,11)==1) { if((ScreenLokal->Graph[ZoneGrapfNrClick].Nr>=0) && (ScreenLokal->Graph[ZoneGrapfNrClick].Nr!=0xFF)) ScreenLokal->Graph[ZoneGrapfNrClick].Nr--; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=NumberNeurons-1; Repaint=1;}  
                                                                                                       ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   0B20               MOVS     R0,#+11
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   0F23               MOVS     R3,#+15
   \   000001D8   0F22               MOVS     R2,#+15
   \   000001DA   0321               MOVS     R1,#+3
   \   000001DC   02A8               ADD      R0,SP,#+8
   \   000001DE   ........           BL       Button
   \   000001E2   02B0               ADD      SP,SP,#+8
   \   000001E4   0128               CMP      R0,#+1
   \   000001E6   2AD1               BNE      ??ZoneGraph_Event_13
   \   000001E8   6048               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000001EA   0078               LDRB     R0,[R0, #+0]
   \   000001EC   0721               MOVS     R1,#+7
   \   000001EE   4843               MULS     R0,R1,R0
   \   000001F0   2018               ADDS     R0,R4,R0
   \   000001F2   5730               ADDS     R0,R0,#+87
   \   000001F4   0078               LDRB     R0,[R0, #+0]
   \   000001F6   0028               CMP      R0,#+0
   \   000001F8   18D4               BMI      ??ZoneGraph_Event_14
   \   000001FA   5C48               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000001FC   0078               LDRB     R0,[R0, #+0]
   \   000001FE   0721               MOVS     R1,#+7
   \   00000200   4843               MULS     R0,R1,R0
   \   00000202   2018               ADDS     R0,R4,R0
   \   00000204   5730               ADDS     R0,R0,#+87
   \   00000206   0078               LDRB     R0,[R0, #+0]
   \   00000208   FF28               CMP      R0,#+255
   \   0000020A   0FD0               BEQ      ??ZoneGraph_Event_14
   \   0000020C   5748               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   0000020E   0078               LDRB     R0,[R0, #+0]
   \   00000210   0721               MOVS     R1,#+7
   \   00000212   4843               MULS     R0,R1,R0
   \   00000214   2018               ADDS     R0,R4,R0
   \   00000216   5730               ADDS     R0,R0,#+87
   \   00000218   5449               LDR      R1,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   0000021A   0978               LDRB     R1,[R1, #+0]
   \   0000021C   0722               MOVS     R2,#+7
   \   0000021E   5143               MULS     R1,R2,R1
   \   00000220   6118               ADDS     R1,R4,R1
   \   00000222   5731               ADDS     R1,R1,#+87
   \   00000224   0978               LDRB     R1,[R1, #+0]
   \   00000226   491E               SUBS     R1,R1,#+1
   \   00000228   0170               STRB     R1,[R0, #+0]
   \   0000022A   07E0               B        ??ZoneGraph_Event_15
   \                     ??ZoneGraph_Event_14:
   \   0000022C   4F48               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   0000022E   0078               LDRB     R0,[R0, #+0]
   \   00000230   0721               MOVS     R1,#+7
   \   00000232   4843               MULS     R0,R1,R0
   \   00000234   2018               ADDS     R0,R4,R0
   \   00000236   5730               ADDS     R0,R0,#+87
   \   00000238   2221               MOVS     R1,#+34
   \   0000023A   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_15:
   \   0000023C   0125               MOVS     R5,#+1
   5738                    txt[0]='>';
   \                     ??ZoneGraph_Event_13:
   \   0000023E   6846               MOV      R0,SP
   \   00000240   3E21               MOVS     R1,#+62
   \   00000242   0170               STRB     R1,[R0, #+0]
   5739                    if (Button(txt,45,15,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Nr+1<NumberNeurons) ScreenLokal->Graph[ZoneGrapfNrClick].Nr++; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=0; Repaint=1;} 
   \   00000244   82B0               SUB      SP,SP,#+8
   \   00000246   0B20               MOVS     R0,#+11
   \   00000248   0090               STR      R0,[SP, #+0]
   \   0000024A   0F23               MOVS     R3,#+15
   \   0000024C   0F22               MOVS     R2,#+15
   \   0000024E   2D21               MOVS     R1,#+45
   \   00000250   02A8               ADD      R0,SP,#+8
   \   00000252   ........           BL       Button
   \   00000256   02B0               ADD      SP,SP,#+8
   \   00000258   0128               CMP      R0,#+1
   \   0000025A   24D1               BNE      ??ZoneGraph_Event_16
   \   0000025C   4348               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   0000025E   0078               LDRB     R0,[R0, #+0]
   \   00000260   0721               MOVS     R1,#+7
   \   00000262   4843               MULS     R0,R1,R0
   \   00000264   2018               ADDS     R0,R4,R0
   \   00000266   5730               ADDS     R0,R0,#+87
   \   00000268   0078               LDRB     R0,[R0, #+0]
   \   0000026A   401C               ADDS     R0,R0,#+1
   \   0000026C   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   0000026E   000C               LSRS     R0,R0,#+16
   \   00000270   2328               CMP      R0,#+35
   \   00000272   0FD2               BCS      ??ZoneGraph_Event_17
   \   00000274   3D48               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000276   0078               LDRB     R0,[R0, #+0]
   \   00000278   0721               MOVS     R1,#+7
   \   0000027A   4843               MULS     R0,R1,R0
   \   0000027C   2018               ADDS     R0,R4,R0
   \   0000027E   5730               ADDS     R0,R0,#+87
   \   00000280   3A49               LDR      R1,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000282   0978               LDRB     R1,[R1, #+0]
   \   00000284   0722               MOVS     R2,#+7
   \   00000286   5143               MULS     R1,R2,R1
   \   00000288   6118               ADDS     R1,R4,R1
   \   0000028A   5731               ADDS     R1,R1,#+87
   \   0000028C   0978               LDRB     R1,[R1, #+0]
   \   0000028E   491C               ADDS     R1,R1,#+1
   \   00000290   0170               STRB     R1,[R0, #+0]
   \   00000292   07E0               B        ??ZoneGraph_Event_18
   \                     ??ZoneGraph_Event_17:
   \   00000294   3548               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000296   0078               LDRB     R0,[R0, #+0]
   \   00000298   0721               MOVS     R1,#+7
   \   0000029A   4843               MULS     R0,R1,R0
   \   0000029C   2018               ADDS     R0,R4,R0
   \   0000029E   5730               ADDS     R0,R0,#+87
   \   000002A0   0021               MOVS     R1,#+0
   \   000002A2   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_18:
   \   000002A4   0125               MOVS     R5,#+1
   5740                   
   5741                    
   5742                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Nr>=0) && (ScreenLokal->Graph[ZoneGrapfNrClick].Nr!=0xFF)) //je¿eli wejcie
                                                                       ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \                     ??ZoneGraph_Event_16:
   \   000002A6   3148               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000002A8   0078               LDRB     R0,[R0, #+0]
   \   000002AA   0721               MOVS     R1,#+7
   \   000002AC   4843               MULS     R0,R1,R0
   \   000002AE   2018               ADDS     R0,R4,R0
   \   000002B0   5730               ADDS     R0,R0,#+87
   \   000002B2   0078               LDRB     R0,[R0, #+0]
   \   000002B4   0028               CMP      R0,#+0
   \   000002B6   00D5               BPL      .+4
   \   000002B8   9BE0               B        ??ZoneGraph_Event_19
   \   000002BA   2C48               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000002BC   0078               LDRB     R0,[R0, #+0]
   \   000002BE   0721               MOVS     R1,#+7
   \   000002C0   4843               MULS     R0,R1,R0
   \   000002C2   2018               ADDS     R0,R4,R0
   \   000002C4   5730               ADDS     R0,R0,#+87
   \   000002C6   0078               LDRB     R0,[R0, #+0]
   \   000002C8   FF28               CMP      R0,#+255
   \   000002CA   00D1               BNE      .+4
   \   000002CC   91E0               B        ??ZoneGraph_Event_19
   5743                    {
   5744                      if (ScreenLokal->Graph[ZoneGrapfNrClick].Port>(NumberNeuronsPort-1)) ScreenLokal->Graph[ZoneGrapfNrClick].Port=NumberNeuronsPort-1;
   \   000002CE   2748               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000002D0   0078               LDRB     R0,[R0, #+0]
   \   000002D2   0721               MOVS     R1,#+7
   \   000002D4   4843               MULS     R0,R1,R0
   \   000002D6   2018               ADDS     R0,R4,R0
   \   000002D8   5830               ADDS     R0,R0,#+88
   \   000002DA   0078               LDRB     R0,[R0, #+0]
   \   000002DC   1028               CMP      R0,#+16
   \   000002DE   07D3               BCC      ??ZoneGraph_Event_20
   \   000002E0   2248               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   000002E2   0078               LDRB     R0,[R0, #+0]
   \   000002E4   0721               MOVS     R1,#+7
   \   000002E6   4843               MULS     R0,R1,R0
   \   000002E8   2018               ADDS     R0,R4,R0
   \   000002EA   5830               ADDS     R0,R0,#+88
   \   000002EC   0F21               MOVS     R1,#+15
   \   000002EE   0170               STRB     R1,[R0, #+0]
   5745                      
   5746                      txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Event_20:
   \   000002F0   6846               MOV      R0,SP
   \   000002F2   3C21               MOVS     R1,#+60
   \   000002F4   0170               STRB     R1,[R0, #+0]
   \   000002F6   6846               MOV      R0,SP
   \   000002F8   0021               MOVS     R1,#+0
   \   000002FA   4170               STRB     R1,[R0, #+1]
   5747                      if (Button(txt,3,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port>0) ScreenLokal->Graph[ZoneGrapfNrClick].Port--; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=NumberNeuronsPort-1; Repaint=1;}  
   \   000002FC   82B0               SUB      SP,SP,#+8
   \   000002FE   0B20               MOVS     R0,#+11
   \   00000300   0090               STR      R0,[SP, #+0]
   \   00000302   0F23               MOVS     R3,#+15
   \   00000304   0322               MOVS     R2,#+3
   \   00000306   0321               MOVS     R1,#+3
   \   00000308   02A8               ADD      R0,SP,#+8
   \   0000030A   ........           BL       Button
   \   0000030E   02B0               ADD      SP,SP,#+8
   \   00000310   0128               CMP      R0,#+1
   \   00000312   38D1               BNE      ??ZoneGraph_Event_21
   \   00000314   1548               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000316   0078               LDRB     R0,[R0, #+0]
   \   00000318   0721               MOVS     R1,#+7
   \   0000031A   4843               MULS     R0,R1,R0
   \   0000031C   2018               ADDS     R0,R4,R0
   \   0000031E   5830               ADDS     R0,R0,#+88
   \   00000320   0078               LDRB     R0,[R0, #+0]
   \   00000322   0128               CMP      R0,#+1
   \   00000324   26D3               BCC      ??ZoneGraph_Event_22
   \   00000326   1148               LDR      R0,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000328   0078               LDRB     R0,[R0, #+0]
   \   0000032A   0721               MOVS     R1,#+7
   \   0000032C   4843               MULS     R0,R1,R0
   \   0000032E   2018               ADDS     R0,R4,R0
   \   00000330   5830               ADDS     R0,R0,#+88
   \   00000332   0E49               LDR      R1,??ZoneGraph_Event_0+0x24  ;; ZoneGrapfNrClick
   \   00000334   0978               LDRB     R1,[R1, #+0]
   \   00000336   0722               MOVS     R2,#+7
   \   00000338   5143               MULS     R1,R2,R1
   \   0000033A   6118               ADDS     R1,R4,R1
   \   0000033C   5831               ADDS     R1,R1,#+88
   \   0000033E   0978               LDRB     R1,[R1, #+0]
   \   00000340   491E               SUBS     R1,R1,#+1
   \   00000342   0170               STRB     R1,[R0, #+0]
   \   00000344   1EE0               B        ??ZoneGraph_Event_23
   \   00000346   C046               Nop      
   \                     ??ZoneGraph_Event_0:
   \   00000348   ........           DC32     X_down
   \   0000034C   ........           DC32     Y_down
   \   00000350   E9D71300           DC32     0x13d7e9
   \   00000354   30F4FFFF           DC32     0xfffff430
   \   00000358   ........           DC32     ButtonBipCounter
   \   0000035C   ........           DC32     g_counter
   \   00000360   ........           DC32     X_up
   \   00000364   ........           DC32     Y_up
   \   00000368   ........           DC32     MenuLevel
   \   0000036C   ........           DC32     ZoneGrapfNrClick
   \   00000370   ........           DC32     ProgramChange
   \                     ??ZoneGraph_Event_22:
   \   00000374   BB48               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000376   0078               LDRB     R0,[R0, #+0]
   \   00000378   0721               MOVS     R1,#+7
   \   0000037A   4843               MULS     R0,R1,R0
   \   0000037C   2018               ADDS     R0,R4,R0
   \   0000037E   5830               ADDS     R0,R0,#+88
   \   00000380   0F21               MOVS     R1,#+15
   \   00000382   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_23:
   \   00000384   0125               MOVS     R5,#+1
   5748                      txt[0]='>';
   \                     ??ZoneGraph_Event_21:
   \   00000386   6846               MOV      R0,SP
   \   00000388   3E21               MOVS     R1,#+62
   \   0000038A   0170               STRB     R1,[R0, #+0]
   5749                      if (Button(txt,45,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port+1<NumberNeuronsPort) ScreenLokal->Graph[ZoneGrapfNrClick].Port++; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=0; Repaint=1;} 
   \   0000038C   82B0               SUB      SP,SP,#+8
   \   0000038E   0B20               MOVS     R0,#+11
   \   00000390   0090               STR      R0,[SP, #+0]
   \   00000392   0F23               MOVS     R3,#+15
   \   00000394   0322               MOVS     R2,#+3
   \   00000396   2D21               MOVS     R1,#+45
   \   00000398   02A8               ADD      R0,SP,#+8
   \   0000039A   ........           BL       Button
   \   0000039E   02B0               ADD      SP,SP,#+8
   \   000003A0   0128               CMP      R0,#+1
   \   000003A2   00D0               BEQ      .+4
   \   000003A4   8DE0               B        ??ZoneGraph_Event_25
   \   000003A6   AF48               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000003A8   0078               LDRB     R0,[R0, #+0]
   \   000003AA   0721               MOVS     R1,#+7
   \   000003AC   4843               MULS     R0,R1,R0
   \   000003AE   2018               ADDS     R0,R4,R0
   \   000003B0   5830               ADDS     R0,R0,#+88
   \   000003B2   0078               LDRB     R0,[R0, #+0]
   \   000003B4   401C               ADDS     R0,R0,#+1
   \   000003B6   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   000003B8   000C               LSRS     R0,R0,#+16
   \   000003BA   1028               CMP      R0,#+16
   \   000003BC   0FD2               BCS      ??ZoneGraph_Event_26
   \   000003BE   A948               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000003C0   0078               LDRB     R0,[R0, #+0]
   \   000003C2   0721               MOVS     R1,#+7
   \   000003C4   4843               MULS     R0,R1,R0
   \   000003C6   2018               ADDS     R0,R4,R0
   \   000003C8   5830               ADDS     R0,R0,#+88
   \   000003CA   A649               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000003CC   0978               LDRB     R1,[R1, #+0]
   \   000003CE   0722               MOVS     R2,#+7
   \   000003D0   5143               MULS     R1,R2,R1
   \   000003D2   6118               ADDS     R1,R4,R1
   \   000003D4   5831               ADDS     R1,R1,#+88
   \   000003D6   0978               LDRB     R1,[R1, #+0]
   \   000003D8   491C               ADDS     R1,R1,#+1
   \   000003DA   0170               STRB     R1,[R0, #+0]
   \   000003DC   07E0               B        ??ZoneGraph_Event_27
   \                     ??ZoneGraph_Event_26:
   \   000003DE   A148               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000003E0   0078               LDRB     R0,[R0, #+0]
   \   000003E2   0721               MOVS     R1,#+7
   \   000003E4   4843               MULS     R0,R1,R0
   \   000003E6   2018               ADDS     R0,R4,R0
   \   000003E8   5830               ADDS     R0,R0,#+88
   \   000003EA   0021               MOVS     R1,#+0
   \   000003EC   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_27:
   \   000003EE   0125               MOVS     R5,#+1
   \   000003F0   67E0               B        ??ZoneGraph_Event_25
   5750                    }else{   //je¿eli zmienna
   5751                      txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Event_19:
   \   000003F2   6846               MOV      R0,SP
   \   000003F4   3C21               MOVS     R1,#+60
   \   000003F6   0170               STRB     R1,[R0, #+0]
   \   000003F8   6846               MOV      R0,SP
   \   000003FA   0021               MOVS     R1,#+0
   \   000003FC   4170               STRB     R1,[R0, #+1]
   5752                      if (Button(txt,3,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port>0) ScreenLokal->Graph[ZoneGrapfNrClick].Port--; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=99; Repaint=1;}  
   \   000003FE   82B0               SUB      SP,SP,#+8
   \   00000400   0B20               MOVS     R0,#+11
   \   00000402   0090               STR      R0,[SP, #+0]
   \   00000404   0F23               MOVS     R3,#+15
   \   00000406   0322               MOVS     R2,#+3
   \   00000408   0321               MOVS     R1,#+3
   \   0000040A   02A8               ADD      R0,SP,#+8
   \   0000040C   ........           BL       Button
   \   00000410   02B0               ADD      SP,SP,#+8
   \   00000412   0128               CMP      R0,#+1
   \   00000414   21D1               BNE      ??ZoneGraph_Event_28
   \   00000416   9348               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000418   0078               LDRB     R0,[R0, #+0]
   \   0000041A   0721               MOVS     R1,#+7
   \   0000041C   4843               MULS     R0,R1,R0
   \   0000041E   2018               ADDS     R0,R4,R0
   \   00000420   5830               ADDS     R0,R0,#+88
   \   00000422   0078               LDRB     R0,[R0, #+0]
   \   00000424   0128               CMP      R0,#+1
   \   00000426   0FD3               BCC      ??ZoneGraph_Event_29
   \   00000428   8E48               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   0000042A   0078               LDRB     R0,[R0, #+0]
   \   0000042C   0721               MOVS     R1,#+7
   \   0000042E   4843               MULS     R0,R1,R0
   \   00000430   2018               ADDS     R0,R4,R0
   \   00000432   5830               ADDS     R0,R0,#+88
   \   00000434   8B49               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000436   0978               LDRB     R1,[R1, #+0]
   \   00000438   0722               MOVS     R2,#+7
   \   0000043A   5143               MULS     R1,R2,R1
   \   0000043C   6118               ADDS     R1,R4,R1
   \   0000043E   5831               ADDS     R1,R1,#+88
   \   00000440   0978               LDRB     R1,[R1, #+0]
   \   00000442   491E               SUBS     R1,R1,#+1
   \   00000444   0170               STRB     R1,[R0, #+0]
   \   00000446   07E0               B        ??ZoneGraph_Event_30
   \                     ??ZoneGraph_Event_29:
   \   00000448   8648               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   0000044A   0078               LDRB     R0,[R0, #+0]
   \   0000044C   0721               MOVS     R1,#+7
   \   0000044E   4843               MULS     R0,R1,R0
   \   00000450   2018               ADDS     R0,R4,R0
   \   00000452   5830               ADDS     R0,R0,#+88
   \   00000454   6321               MOVS     R1,#+99
   \   00000456   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_30:
   \   00000458   0125               MOVS     R5,#+1
   5753                      txt[0]='>';
   \                     ??ZoneGraph_Event_28:
   \   0000045A   6846               MOV      R0,SP
   \   0000045C   3E21               MOVS     R1,#+62
   \   0000045E   0170               STRB     R1,[R0, #+0]
   5754                      if (Button(txt,45,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port+1<99) ScreenLokal->Graph[ZoneGrapfNrClick].Port++; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=0; Repaint=1;} 
   \   00000460   82B0               SUB      SP,SP,#+8
   \   00000462   0B20               MOVS     R0,#+11
   \   00000464   0090               STR      R0,[SP, #+0]
   \   00000466   0F23               MOVS     R3,#+15
   \   00000468   0322               MOVS     R2,#+3
   \   0000046A   2D21               MOVS     R1,#+45
   \   0000046C   02A8               ADD      R0,SP,#+8
   \   0000046E   ........           BL       Button
   \   00000472   02B0               ADD      SP,SP,#+8
   \   00000474   0128               CMP      R0,#+1
   \   00000476   24D1               BNE      ??ZoneGraph_Event_25
   \   00000478   7A48               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   0000047A   0078               LDRB     R0,[R0, #+0]
   \   0000047C   0721               MOVS     R1,#+7
   \   0000047E   4843               MULS     R0,R1,R0
   \   00000480   2018               ADDS     R0,R4,R0
   \   00000482   5830               ADDS     R0,R0,#+88
   \   00000484   0078               LDRB     R0,[R0, #+0]
   \   00000486   401C               ADDS     R0,R0,#+1
   \   00000488   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   0000048A   000C               LSRS     R0,R0,#+16
   \   0000048C   6328               CMP      R0,#+99
   \   0000048E   0FD2               BCS      ??ZoneGraph_Event_31
   \   00000490   7448               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000492   0078               LDRB     R0,[R0, #+0]
   \   00000494   0721               MOVS     R1,#+7
   \   00000496   4843               MULS     R0,R1,R0
   \   00000498   2018               ADDS     R0,R4,R0
   \   0000049A   5830               ADDS     R0,R0,#+88
   \   0000049C   7149               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   0000049E   0978               LDRB     R1,[R1, #+0]
   \   000004A0   0722               MOVS     R2,#+7
   \   000004A2   5143               MULS     R1,R2,R1
   \   000004A4   6118               ADDS     R1,R4,R1
   \   000004A6   5831               ADDS     R1,R1,#+88
   \   000004A8   0978               LDRB     R1,[R1, #+0]
   \   000004AA   491C               ADDS     R1,R1,#+1
   \   000004AC   0170               STRB     R1,[R0, #+0]
   \   000004AE   07E0               B        ??ZoneGraph_Event_32
   \                     ??ZoneGraph_Event_31:
   \   000004B0   6C48               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000004B2   0078               LDRB     R0,[R0, #+0]
   \   000004B4   0721               MOVS     R1,#+7
   \   000004B6   4843               MULS     R0,R1,R0
   \   000004B8   2018               ADDS     R0,R4,R0
   \   000004BA   5830               ADDS     R0,R0,#+88
   \   000004BC   0021               MOVS     R1,#+0
   \   000004BE   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_32:
   \   000004C0   0125               MOVS     R5,#+1
   5755                    
   5756                    }
   5757                    
   5758                    if (Repaint) MenuPaint(); 
   \                     ??ZoneGraph_Event_25:
   \   000004C2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004C4   2D0E               LSRS     R5,R5,#+24
   \   000004C6   002D               CMP      R5,#+0
   \   000004C8   01D0               BEQ      ??ZoneGraph_Event_12
   \   000004CA   ........           BL       MenuPaint
   5759                  } 
   5760                     
   5761                     
   5762                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Event_12:
   \   000004CE   6548               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000004D0   0078               LDRB     R0,[R0, #+0]
   \   000004D2   0721               MOVS     R1,#+7
   \   000004D4   4843               MULS     R0,R1,R0
   \   000004D6   2018               ADDS     R0,R4,R0
   \   000004D8   5330               ADDS     R0,R0,#+83
   \   000004DA   0078               LDRB     R0,[R0, #+0]
   \   000004DC   0A28               CMP      R0,#+10
   \   000004DE   15D1               BNE      ??ZoneGraph_Event_33
   5763                    {
   5764                       if (Button(Speech[g_leng].Zmiana,8,3,44,13)==1) ButonClickNr=1;
   \   000004E0   82B0               SUB      SP,SP,#+8
   \   000004E2   0D20               MOVS     R0,#+13
   \   000004E4   0090               STR      R0,[SP, #+0]
   \   000004E6   2C23               MOVS     R3,#+44
   \   000004E8   0322               MOVS     R2,#+3
   \   000004EA   0821               MOVS     R1,#+8
   \   000004EC   5E48               LDR      R0,??ZoneGraph_Event_24+0x4  ;; 0x50a
   \   000004EE   5F4D               LDR      R5,??ZoneGraph_Event_24+0x8  ;; g_leng
   \   000004F0   2D68               LDR      R5,[R5, #+0]
   \   000004F2   5F4E               LDR      R6,??ZoneGraph_Event_24+0xC  ;; 0xa7d
   \   000004F4   7543               MULS     R5,R6,R5
   \   000004F6   5F4E               LDR      R6,??ZoneGraph_Event_24+0x10  ;; Speech
   \   000004F8   7519               ADDS     R5,R6,R5
   \   000004FA   2818               ADDS     R0,R5,R0
   \   000004FC   ........           BL       Button
   \   00000500   02B0               ADD      SP,SP,#+8
   \   00000502   0128               CMP      R0,#+1
   \   00000504   02D1               BNE      ??ZoneGraph_Event_33
   \   00000506   6846               MOV      R0,SP
   \   00000508   0121               MOVS     R1,#+1
   \   0000050A   0171               STRB     R1,[R0, #+4]
   5765                    }
   5766                    
   5767                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText))
   \                     ??ZoneGraph_Event_33:
   \   0000050C   5548               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   0000050E   0078               LDRB     R0,[R0, #+0]
   \   00000510   0721               MOVS     R1,#+7
   \   00000512   4843               MULS     R0,R1,R0
   \   00000514   2018               ADDS     R0,R4,R0
   \   00000516   5330               ADDS     R0,R0,#+83
   \   00000518   0078               LDRB     R0,[R0, #+0]
   \   0000051A   0828               CMP      R0,#+8
   \   0000051C   65D1               BNE      ??ZoneGraph_Event_34
   5768                    {
   5769                      if (Button("Text",2,15,25,11)==1) ButonClickNr=2;
   \   0000051E   82B0               SUB      SP,SP,#+8
   \   00000520   0B20               MOVS     R0,#+11
   \   00000522   0090               STR      R0,[SP, #+0]
   \   00000524   1923               MOVS     R3,#+25
   \   00000526   0F22               MOVS     R2,#+15
   \   00000528   0221               MOVS     R1,#+2
   \   0000052A   5348               LDR      R0,??ZoneGraph_Event_24+0x14  ;; `?<Constant "Text">`
   \   0000052C   ........           BL       Button
   \   00000530   02B0               ADD      SP,SP,#+8
   \   00000532   0128               CMP      R0,#+1
   \   00000534   02D1               BNE      ??ZoneGraph_Event_35
   \   00000536   6846               MOV      R0,SP
   \   00000538   0221               MOVS     R1,#+2
   \   0000053A   0171               STRB     R1,[R0, #+4]
   5770                      if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \                     ??ZoneGraph_Event_35:
   \   0000053C   4948               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   0000053E   0078               LDRB     R0,[R0, #+0]
   \   00000540   0721               MOVS     R1,#+7
   \   00000542   4843               MULS     R0,R1,R0
   \   00000544   2018               ADDS     R0,R4,R0
   \   00000546   5930               ADDS     R0,R0,#+89
   \   00000548   0078               LDRB     R0,[R0, #+0]
   \   0000054A   C007               LSLS     R0,R0,#+31
   \   0000054C   27D5               BPL      ??ZoneGraph_Event_36
   5771                      {
   5772                        if (Button(Speech[g_leng].Wyl,40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=0;
   \   0000054E   82B0               SUB      SP,SP,#+8
   \   00000550   0B20               MOVS     R0,#+11
   \   00000552   0090               STR      R0,[SP, #+0]
   \   00000554   1523               MOVS     R3,#+21
   \   00000556   0322               MOVS     R2,#+3
   \   00000558   2821               MOVS     R1,#+40
   \   0000055A   C320               MOVS     R0,#+195
   \   0000055C   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   0000055E   434D               LDR      R5,??ZoneGraph_Event_24+0x8  ;; g_leng
   \   00000560   2D68               LDR      R5,[R5, #+0]
   \   00000562   434E               LDR      R6,??ZoneGraph_Event_24+0xC  ;; 0xa7d
   \   00000564   7543               MULS     R5,R6,R5
   \   00000566   434E               LDR      R6,??ZoneGraph_Event_24+0x10  ;; Speech
   \   00000568   7519               ADDS     R5,R6,R5
   \   0000056A   2818               ADDS     R0,R5,R0
   \   0000056C   ........           BL       Button
   \   00000570   02B0               ADD      SP,SP,#+8
   \   00000572   0128               CMP      R0,#+1
   \   00000574   39D1               BNE      ??ZoneGraph_Event_34
   \   00000576   3B48               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000578   0078               LDRB     R0,[R0, #+0]
   \   0000057A   0721               MOVS     R1,#+7
   \   0000057C   4843               MULS     R0,R1,R0
   \   0000057E   2018               ADDS     R0,R4,R0
   \   00000580   5930               ADDS     R0,R0,#+89
   \   00000582   3849               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000584   0978               LDRB     R1,[R1, #+0]
   \   00000586   0722               MOVS     R2,#+7
   \   00000588   5143               MULS     R1,R2,R1
   \   0000058A   6118               ADDS     R1,R4,R1
   \   0000058C   5931               ADDS     R1,R1,#+89
   \   0000058E   0978               LDRB     R1,[R1, #+0]
   \   00000590   FE22               MOVS     R2,#+254
   \   00000592   0A40               ANDS     R2,R2,R1
   \   00000594   0270               STRB     R2,[R0, #+0]
   5773                        ButonClickNr=3;}
   \   00000596   6846               MOV      R0,SP
   \   00000598   0321               MOVS     R1,#+3
   \   0000059A   0171               STRB     R1,[R0, #+4]
   \   0000059C   25E0               B        ??ZoneGraph_Event_34
   5774                      }else{
   5775                        if (Button(Speech[g_leng].Wl,40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=1;
   \                     ??ZoneGraph_Event_36:
   \   0000059E   82B0               SUB      SP,SP,#+8
   \   000005A0   0B20               MOVS     R0,#+11
   \   000005A2   0090               STR      R0,[SP, #+0]
   \   000005A4   1523               MOVS     R3,#+21
   \   000005A6   0322               MOVS     R2,#+3
   \   000005A8   2821               MOVS     R1,#+40
   \   000005AA   3448               LDR      R0,??ZoneGraph_Event_24+0x18  ;; 0x627
   \   000005AC   2F4D               LDR      R5,??ZoneGraph_Event_24+0x8  ;; g_leng
   \   000005AE   2D68               LDR      R5,[R5, #+0]
   \   000005B0   2F4E               LDR      R6,??ZoneGraph_Event_24+0xC  ;; 0xa7d
   \   000005B2   7543               MULS     R5,R6,R5
   \   000005B4   2F4E               LDR      R6,??ZoneGraph_Event_24+0x10  ;; Speech
   \   000005B6   7519               ADDS     R5,R6,R5
   \   000005B8   2818               ADDS     R0,R5,R0
   \   000005BA   ........           BL       Button
   \   000005BE   02B0               ADD      SP,SP,#+8
   \   000005C0   0128               CMP      R0,#+1
   \   000005C2   12D1               BNE      ??ZoneGraph_Event_34
   \   000005C4   2748               LDR      R0,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000005C6   0078               LDRB     R0,[R0, #+0]
   \   000005C8   0721               MOVS     R1,#+7
   \   000005CA   4843               MULS     R0,R1,R0
   \   000005CC   2018               ADDS     R0,R4,R0
   \   000005CE   5930               ADDS     R0,R0,#+89
   \   000005D0   2449               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000005D2   0978               LDRB     R1,[R1, #+0]
   \   000005D4   0722               MOVS     R2,#+7
   \   000005D6   5143               MULS     R1,R2,R1
   \   000005D8   6118               ADDS     R1,R4,R1
   \   000005DA   5931               ADDS     R1,R1,#+89
   \   000005DC   0978               LDRB     R1,[R1, #+0]
   \   000005DE   0122               MOVS     R2,#+1
   \   000005E0   0A43               ORRS     R2,R2,R1
   \   000005E2   0270               STRB     R2,[R0, #+0]
   5776                        ButonClickNr=3;}
   \   000005E4   6846               MOV      R0,SP
   \   000005E6   0321               MOVS     R1,#+3
   \   000005E8   0171               STRB     R1,[R0, #+4]
   5777                      }
   5778                    
   5779                       
   5780                    }    
   5781                    
   5782                     if (ButonClickNr==1) 
   \                     ??ZoneGraph_Event_34:
   \   000005EA   6846               MOV      R0,SP
   \   000005EC   0079               LDRB     R0,[R0, #+4]
   \   000005EE   0128               CMP      R0,#+1
   \   000005F0   13D1               BNE      ??ZoneGraph_Event_37
   5783                        {
   5784                          ProgramChange=1;
   \   000005F2   2348               LDR      R0,??ZoneGraph_Event_24+0x1C  ;; ProgramChange
   \   000005F4   0121               MOVS     R1,#+1
   \   000005F6   0170               STRB     R1,[R0, #+0]
   5785                          AnalogToChange=(_Analog*)&ScreenLokal->Graph[ZoneGrapfNrClick];
   \   000005F8   2248               LDR      R0,??ZoneGraph_Event_24+0x20  ;; AnalogToChange
   \   000005FA   1A49               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   000005FC   0978               LDRB     R1,[R1, #+0]
   \   000005FE   0722               MOVS     R2,#+7
   \   00000600   5143               MULS     R1,R2,R1
   \   00000602   6118               ADDS     R1,R4,R1
   \   00000604   5331               ADDS     R1,R1,#+83
   \   00000606   0160               STR      R1,[R0, #+0]
   5786                          MenuLevel=(MenuLevel*10+2); 
   \   00000608   1F48               LDR      R0,??ZoneGraph_Event_24+0x24  ;; MenuLevel
   \   0000060A   1F49               LDR      R1,??ZoneGraph_Event_24+0x24  ;; MenuLevel
   \   0000060C   0968               LDR      R1,[R1, #+0]
   \   0000060E   0A22               MOVS     R2,#+10
   \   00000610   5143               MULS     R1,R2,R1
   \   00000612   891C               ADDS     R1,R1,#+2
   \   00000614   0160               STR      R1,[R0, #+0]
   5787                          MenuPaint(); 
   \   00000616   ........           BL       MenuPaint
   5788                    
   5789                        }
   5790                  
   5791                      if (ButonClickNr==2) 
   \                     ??ZoneGraph_Event_37:
   \   0000061A   6846               MOV      R0,SP
   \   0000061C   0079               LDRB     R0,[R0, #+4]
   \   0000061E   0228               CMP      R0,#+2
   \   00000620   16D1               BNE      ??ZoneGraph_Event_38
   5792                      {
   5793                        ProgramChange=1;
   \   00000622   1748               LDR      R0,??ZoneGraph_Event_24+0x1C  ;; ProgramChange
   \   00000624   0121               MOVS     R1,#+1
   \   00000626   0170               STRB     R1,[R0, #+0]
   5794                      TextToChangeLength=3;//TextToChangeMaxPixSize
   \   00000628   1848               LDR      R0,??ZoneGraph_Event_24+0x28  ;; TextToChangeLength
   \   0000062A   0321               MOVS     R1,#+3
   \   0000062C   0170               STRB     R1,[R0, #+0]
   5795                      TextToChange=ScreenLokal->Graph[ZoneGrapfNrClick].Text;
   \   0000062E   1848               LDR      R0,??ZoneGraph_Event_24+0x2C  ;; TextToChange
   \   00000630   0C49               LDR      R1,??ZoneGraph_Event_24  ;; ZoneGrapfNrClick
   \   00000632   0978               LDRB     R1,[R1, #+0]
   \   00000634   0722               MOVS     R2,#+7
   \   00000636   5143               MULS     R1,R2,R1
   \   00000638   6118               ADDS     R1,R4,R1
   \   0000063A   5431               ADDS     R1,R1,#+84
   \   0000063C   0160               STR      R1,[R0, #+0]
   5796                      MenuLevel=(MenuLevel*10+1); 
   \   0000063E   1248               LDR      R0,??ZoneGraph_Event_24+0x24  ;; MenuLevel
   \   00000640   1149               LDR      R1,??ZoneGraph_Event_24+0x24  ;; MenuLevel
   \   00000642   0968               LDR      R1,[R1, #+0]
   \   00000644   0A22               MOVS     R2,#+10
   \   00000646   5143               MULS     R1,R2,R1
   \   00000648   491C               ADDS     R1,R1,#+1
   \   0000064A   0160               STR      R1,[R0, #+0]
   5797                      MenuPaint(); 
   \   0000064C   ........           BL       MenuPaint
   5798                      }
   5799                      if (ButonClickNr==3) 
   \                     ??ZoneGraph_Event_38:
   \   00000650   6846               MOV      R0,SP
   \   00000652   0079               LDRB     R0,[R0, #+4]
   \   00000654   0328               CMP      R0,#+3
   \   00000656   01D1               BNE      ??ZoneGraph_Event_4
   5800                      {
   5801                        MenuPaint(); 
   \   00000658   ........           BL       MenuPaint
   5802                      }
   5803                     
   5804                  
   5805                  
   5806                  }
   5807                  
   5808                  }
   5809                }//________________________________________________________________________
   \                     ??ZoneGraph_Event_4:
   \   0000065C   03B0               ADD      SP,SP,#+12
   \   0000065E   F0BC               POP      {R4-R7}
   \   00000660   01BC               POP      {R0}
   \   00000662   0047               BX       R0               ;; return
   \                     ??ZoneGraph_Event_24:
   \   00000664   ........           DC32     ZoneGrapfNrClick
   \   00000668   0A050000           DC32     0x50a
   \   0000066C   ........           DC32     g_leng
   \   00000670   7D0A0000           DC32     0xa7d
   \   00000674   ........           DC32     Speech
   \   00000678   ........           DC32     `?<Constant "Text">`
   \   0000067C   27060000           DC32     0x627
   \   00000680   ........           DC32     ProgramChange
   \   00000684   ........           DC32     AnalogToChange
   \   00000688   ........           DC32     MenuLevel
   \   0000068C   ........           DC32     TextToChangeLength
   \   00000690   ........           DC32     TextToChange
   5810              
   5811          
   5812          
   5813          
   5814           
   5815           
   5816          #define MaxLetherOnScr    24 
   5817           
   5818           

   \                                 In section .bss, align 1
   5819          char TextChangeCharNr=0;
   \                     TextChangeCharNr:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   5820          char TextChangePoz=0;
   \                     TextChangePoz:
   \   00000000                      DS8 1
   5821          

   \                                 In section .rodata, align 4
   5822          const char QWERTY[3][MaxLetherOnScr]={
   \                     QWERTY:
   \   00000000   414243444546       DC8 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81
   \              4748494A4B4C
   \              4D4E4F5051  
   \   00000011   525354555759       DC8 82, 83, 84, 85, 87, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104
   \              5A6162636465
   \              666768      
   \   00000020   696A6B6C6D6E       DC8 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
   \              6F7071727374
   \              75          
   \   0000002D   77797A203031       DC8 119, 121, 122, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 45
   \              323334353637
   \              38392B2D    
   \   0000003D   5F3C3E2E782F       DC8 95, 60, 62, 46, 120, 47, 127, 30, 31, 35, 36
   \              7F1E1F2324  
   5823                        {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','W','Y','Z'}, 
   5824                        {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','w','y','z'}, 
   5825                        {' ','0','1','2','3','4','5','6','7','8','9','+','-','_','<','>','.','x','/',127,30,31,35,36},
   5826                        };
   5827          
   5828          //* text- wskanik do stringa
   5829          //* MaxChar - maksymalna iloæ znaków tekstu. Maksymalnie 6. Je¿eli MaxChar=0 to domylnie MaxChar=6;

   \                                 In section .bss, align 1
   5830          char AlfaType=0;
   \                     AlfaType:
   \   00000000                      DS8 1
   5831          

   \                                 In section Debug.txt, align 4, keep-with-next
   5832          void TextChange_Paint(char* text, char* MaxChar)
   5833                {  
   \                     TextChange_Paint:
   \   00000000   F2B5               PUSH     {R1,R4-R7,LR}
   \   00000002   0600               MOVS     R6,R0
   5834                  List_Paint("Text ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   6CA0               ADR      R0,??TextChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   6948               LDR      R0,??TextChange_Paint_0+0x4  ;; `?<Constant "Text ">`
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   5835                  V_line(62,98,15,0);
   \   00000030   0023               MOVS     R3,#+0
   \   00000032   0F22               MOVS     R2,#+15
   \   00000034   6221               MOVS     R1,#+98
   \   00000036   3E20               MOVS     R0,#+62
   \   00000038   ........           BL       V_line
   5836                  
   5837                  char idx=0;
   \   0000003C   0024               MOVS     R4,#+0
   5838                  char y=86;
   \   0000003E   5625               MOVS     R5,#+86
   5839          
   5840                  char PrzesZnak=0;
   \   00000040   0027               MOVS     R7,#+0
   5841                  if (TextChangePoz>12) PrzesZnak=TextChangePoz-12;
   \   00000042   6448               LDR      R0,??TextChange_Paint_0+0x8  ;; TextChangePoz
   \   00000044   0078               LDRB     R0,[R0, #+0]
   \   00000046   0D28               CMP      R0,#+13
   \   00000048   02D3               BCC      ??TextChange_Paint_1
   \   0000004A   6248               LDR      R0,??TextChange_Paint_0+0x8  ;; TextChangePoz
   \   0000004C   0778               LDRB     R7,[R0, #+0]
   \   0000004E   0C3F               SUBS     R7,R7,#+12
   5842                  
   5843                  H_line(1,109,62,0);
   \                     ??TextChange_Paint_1:
   \   00000050   0023               MOVS     R3,#+0
   \   00000052   3E22               MOVS     R2,#+62
   \   00000054   6D21               MOVS     R1,#+109
   \   00000056   0120               MOVS     R0,#+1
   \   00000058   ........           BL       H_line
   5844                  
   5845                  char DlTxt=0; //d³ugoæ tekstu
   \   0000005C   0022               MOVS     R2,#+0
   \   0000005E   00E0               B        ??TextChange_Paint_2
   5846                  while ((DlTxt<*MaxChar) && (text[DlTxt]>0)) DlTxt++;
   \                     ??TextChange_Paint_3:
   \   00000060   521C               ADDS     R2,R2,#+1
   \                     ??TextChange_Paint_2:
   \   00000062   0098               LDR      R0,[SP, #+0]
   \   00000064   0078               LDRB     R0,[R0, #+0]
   \   00000066   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000068   120E               LSRS     R2,R2,#+24
   \   0000006A   8242               CMP      R2,R0
   \   0000006C   04D2               BCS      ??TextChange_Paint_4
   \   0000006E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   B05C               LDRB     R0,[R6, R2]
   \   00000074   0128               CMP      R0,#+1
   \   00000076   F3D2               BCS      ??TextChange_Paint_3
   5847                  Label(&text[PrzesZnak],0,2,100,DlTxt-PrzesZnak,11,1,127,0); 
   \                     ??TextChange_Paint_4:
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0B21               MOVS     R1,#+11
   \   00000086   D01B               SUBS     R0,R2,R7
   \   00000088   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000008A   000E               LSRS     R0,R0,#+24
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   6423               MOVS     R3,#+100
   \   00000090   0222               MOVS     R2,#+2
   \   00000092   0021               MOVS     R1,#+0
   \   00000094   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000096   3F0E               LSRS     R7,R7,#+24
   \   00000098   F019               ADDS     R0,R6,R7
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   5848                  
   5849                   for (char j=0; j<6; j++) 
   \   000000A0   0026               MOVS     R6,#+0
   \   000000A2   43E0               B        ??TextChange_Paint_5
   5850                   {
   5851                      for (char i=0; i<4; i++) 
   5852                      {
   5853                        if (QWERTY[AlfaType][idx]>0)
   \                     ??TextChange_Paint_6:
   \   000000A4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A6   240E               LSRS     R4,R4,#+24
   \   000000A8   4B48               LDR      R0,??TextChange_Paint_0+0xC  ;; AlfaType
   \   000000AA   0078               LDRB     R0,[R0, #+0]
   \   000000AC   1821               MOVS     R1,#+24
   \   000000AE   4843               MULS     R0,R1,R0
   \   000000B0   4A49               LDR      R1,??TextChange_Paint_0+0x10  ;; QWERTY
   \   000000B2   0818               ADDS     R0,R1,R0
   \   000000B4   005D               LDRB     R0,[R0, R4]
   \   000000B6   0128               CMP      R0,#+1
   \   000000B8   31D3               BCC      ??TextChange_Paint_7
   5854                        {
   5855                          Rectangle(2+i*15,y,14,13);
   \   000000BA   0D23               MOVS     R3,#+13
   \   000000BC   0E22               MOVS     R2,#+14
   \   000000BE   2900               MOVS     R1,R5
   \   000000C0   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000C2   090E               LSRS     R1,R1,#+24
   \   000000C4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000C6   3F0E               LSRS     R7,R7,#+24
   \   000000C8   0F20               MOVS     R0,#+15
   \   000000CA   7843               MULS     R0,R7,R0
   \   000000CC   801C               ADDS     R0,R0,#+2
   \   000000CE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D0   000E               LSRS     R0,R0,#+24
   \   000000D2   ........           BL       Rectangle
   5856                          Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000D6   82B0               SUB      SP,SP,#+8
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   0090               STR      R0,[SP, #+0]
   \   000000DC   7F21               MOVS     R1,#+127
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   03B4               PUSH     {R0,R1}
   \   000000E2   0B21               MOVS     R1,#+11
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000EA   2D0E               LSRS     R5,R5,#+24
   \   000000EC   2B00               MOVS     R3,R5
   \   000000EE   9B1C               ADDS     R3,R3,#+2
   \   000000F0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000F2   3F0E               LSRS     R7,R7,#+24
   \   000000F4   0F22               MOVS     R2,#+15
   \   000000F6   7A43               MULS     R2,R7,R2
   \   000000F8   D21C               ADDS     R2,R2,#+3
   \   000000FA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000FC   120E               LSRS     R2,R2,#+24
   \   000000FE   0221               MOVS     R1,#+2
   \   00000100   8C46               MOV      R12,R1
   \   00000102   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000104   240E               LSRS     R4,R4,#+24
   \   00000106   3448               LDR      R0,??TextChange_Paint_0+0xC  ;; AlfaType
   \   00000108   0078               LDRB     R0,[R0, #+0]
   \   0000010A   1821               MOVS     R1,#+24
   \   0000010C   4843               MULS     R0,R1,R0
   \   0000010E   3349               LDR      R1,??TextChange_Paint_0+0x10  ;; QWERTY
   \   00000110   0818               ADDS     R0,R1,R0
   \   00000112   0019               ADDS     R0,R0,R4
   \   00000114   6146               MOV      R1,R12
   \   00000116   ........           BL       Label
   \   0000011A   06B0               ADD      SP,SP,#+24
   5857                          idx++;
   \   0000011C   641C               ADDS     R4,R4,#+1
   5858                        }
   5859                      }
   \                     ??TextChange_Paint_7:
   \   0000011E   7F1C               ADDS     R7,R7,#+1
   \                     ??TextChange_Paint_8:
   \   00000120   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000122   3F0E               LSRS     R7,R7,#+24
   \   00000124   042F               CMP      R7,#+4
   \   00000126   BDD3               BCC      ??TextChange_Paint_6
   5860                      y-=14;
   \   00000128   0E3D               SUBS     R5,R5,#+14
   \   0000012A   761C               ADDS     R6,R6,#+1
   \                     ??TextChange_Paint_5:
   \   0000012C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012E   360E               LSRS     R6,R6,#+24
   \   00000130   062E               CMP      R6,#+6
   \   00000132   01D2               BCS      ??TextChange_Paint_9
   \   00000134   0027               MOVS     R7,#+0
   \   00000136   F3E7               B        ??TextChange_Paint_8
   5861                   }
   5862                  
   5863          
   5864                  Label("C",2,3,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??TextChange_Paint_9:
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0120               MOVS     R0,#+1
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   7F21               MOVS     R1,#+127
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   0B21               MOVS     R1,#+11
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   0423               MOVS     R3,#+4
   \   0000014C   0322               MOVS     R2,#+3
   \   0000014E   0221               MOVS     R1,#+2
   \   00000150   23A0               ADR      R0,??TextChange_Paint_0+0x14  ;; 0x43, 0x00, 0x00, 0x00
   \   00000152   ........           BL       Label
   \   00000156   06B0               ADD      SP,SP,#+24
   5865                  Label("<",2,3+1*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000158   82B0               SUB      SP,SP,#+8
   \   0000015A   0120               MOVS     R0,#+1
   \   0000015C   0090               STR      R0,[SP, #+0]
   \   0000015E   7F21               MOVS     R1,#+127
   \   00000160   0120               MOVS     R0,#+1
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   0B21               MOVS     R1,#+11
   \   00000166   0120               MOVS     R0,#+1
   \   00000168   03B4               PUSH     {R0,R1}
   \   0000016A   0423               MOVS     R3,#+4
   \   0000016C   1222               MOVS     R2,#+18
   \   0000016E   0221               MOVS     R1,#+2
   \   00000170   1CA0               ADR      R0,??TextChange_Paint_0+0x18  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000172   ........           BL       Label
   \   00000176   06B0               ADD      SP,SP,#+24
   5866                  Label(">",2,3+2*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0120               MOVS     R0,#+1
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   7F21               MOVS     R1,#+127
   \   00000180   0120               MOVS     R0,#+1
   \   00000182   03B4               PUSH     {R0,R1}
   \   00000184   0B21               MOVS     R1,#+11
   \   00000186   0120               MOVS     R0,#+1
   \   00000188   03B4               PUSH     {R0,R1}
   \   0000018A   0423               MOVS     R3,#+4
   \   0000018C   2122               MOVS     R2,#+33
   \   0000018E   0221               MOVS     R1,#+2
   \   00000190   15A0               ADR      R0,??TextChange_Paint_0+0x1C  ;; 0x3E, 0x00, 0x00, 0x00
   \   00000192   ........           BL       Label
   \   00000196   06B0               ADD      SP,SP,#+24
   5867                  Label("...",2,3+3*15,4,3,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000198   82B0               SUB      SP,SP,#+8
   \   0000019A   0120               MOVS     R0,#+1
   \   0000019C   0090               STR      R0,[SP, #+0]
   \   0000019E   7F21               MOVS     R1,#+127
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   03B4               PUSH     {R0,R1}
   \   000001A4   0B21               MOVS     R1,#+11
   \   000001A6   0320               MOVS     R0,#+3
   \   000001A8   03B4               PUSH     {R0,R1}
   \   000001AA   0423               MOVS     R3,#+4
   \   000001AC   3022               MOVS     R2,#+48
   \   000001AE   0221               MOVS     R1,#+2
   \   000001B0   0EA0               ADR      R0,??TextChange_Paint_0+0x20  ;; "..."
   \   000001B2   ........           BL       Label
   \   000001B6   06B0               ADD      SP,SP,#+24
   5868          
   5869                  
   5870                  
   5871                  V_line(63,98,15,1);
   \   000001B8   0123               MOVS     R3,#+1
   \   000001BA   0F22               MOVS     R2,#+15
   \   000001BC   6221               MOVS     R1,#+98
   \   000001BE   3F20               MOVS     R0,#+63
   \   000001C0   ........           BL       V_line
   5872                  
   5873           }
   \   000001C4   01B0               ADD      SP,SP,#+4
   \   000001C6   F0BC               POP      {R4-R7}
   \   000001C8   01BC               POP      {R0}
   \   000001CA   0047               BX       R0               ;; return
   \                     ??TextChange_Paint_0:
   \   000001CC   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001D0   ........           DC32     `?<Constant "Text ">`
   \   000001D4   ........           DC32     TextChangePoz
   \   000001D8   ........           DC32     AlfaType
   \   000001DC   ........           DC32     QWERTY
   \   000001E0   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000001E4   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   000001E8   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   \   000001EC   2E2E2E00           DC8      "..."
   5874                  
   5875                  

   \                                 In section Debug.txt, align 4, keep-with-next
   5876          void TextChange_Refresh(char* text, char* MaxChar)
   5877          {
   \                     TextChange_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0100               MOVS     R1,R0
   5878            char DlTxt; //d³ugoæ tekstu
                        ^
Warning[Pe177]: variable "DlTxt" was declared but never referenced
   5879            char Pix;  //piksel
   5880            char offset=30;
   \   00000004   1E22               MOVS     R2,#+30
   5881            //while ((DlTxt<MaxChar) && (text[DlTxt]>0)) DlTxt++;
   5882            char PrzesZnak=0;
   \   00000006   0023               MOVS     R3,#+0
   5883                  if (TextChangePoz>12) PrzesZnak=TextChangePoz-12;
   \   00000008   2648               LDR      R0,??TextChange_Refresh_0  ;; TextChangePoz
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0D28               CMP      R0,#+13
   \   0000000E   02D3               BCC      ??TextChange_Refresh_1
   \   00000010   2448               LDR      R0,??TextChange_Refresh_0  ;; TextChangePoz
   \   00000012   0378               LDRB     R3,[R0, #+0]
   \   00000014   0C3B               SUBS     R3,R3,#+12
   5884            
   5885            static char count=0;
   5886            static char mig=0;
   5887            if (count<8) 
   \                     ??TextChange_Refresh_1:
   \   00000016   2448               LDR      R0,??TextChange_Refresh_0+0x4  ;; ??count
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   0828               CMP      R0,#+8
   \   0000001C   05D2               BCS      ??TextChange_Refresh_2
   5888            {
   5889              count++;
   \   0000001E   2248               LDR      R0,??TextChange_Refresh_0+0x4  ;; ??count
   \   00000020   2149               LDR      R1,??TextChange_Refresh_0+0x4  ;; ??count
   \   00000022   0978               LDRB     R1,[R1, #+0]
   \   00000024   491C               ADDS     R1,R1,#+1
   \   00000026   0170               STRB     R1,[R0, #+0]
   \   00000028   38E0               B        ??TextChange_Refresh_3
   5890            }else{
   5891                count=0;
   \                     ??TextChange_Refresh_2:
   \   0000002A   1F48               LDR      R0,??TextChange_Refresh_0+0x4  ;; ??count
   \   0000002C   0024               MOVS     R4,#+0
   \   0000002E   0470               STRB     R4,[R0, #+0]
   5892                if (mig) mig=0; else mig=1;  
   \   00000030   1E48               LDR      R0,??TextChange_Refresh_0+0x8  ;; ??mig
   \   00000032   1E4C               LDR      R4,??TextChange_Refresh_0+0x8  ;; ??mig
   \   00000034   2478               LDRB     R4,[R4, #+0]
   \   00000036   651E               SUBS     R5,R4,#+1
   \   00000038   AD41               SBCS     R5,R5,R5
   \   0000003A   ED0F               LSRS     R5,R5,#+31
   \   0000003C   0570               STRB     R5,[R0, #+0]
   5893                Pix=1;
   \   0000003E   0120               MOVS     R0,#+1
   5894                for (char Znak=0; Znak<TextChangePoz-PrzesZnak; Znak++)
   \   00000040   0024               MOVS     R4,#+0
   \   00000042   0FE0               B        ??TextChange_Refresh_4
   5895                {
   5896                   Pix += Arial_7[text[Znak+PrzesZnak]-offset][0];
   \                     ??TextChange_Refresh_5:
   \   00000044   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000046   240E               LSRS     R4,R4,#+24
   \   00000048   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000004A   1B0E               LSRS     R3,R3,#+24
   \   0000004C   E518               ADDS     R5,R4,R3
   \   0000004E   4D5D               LDRB     R5,[R1, R5]
   \   00000050   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000052   120E               LSRS     R2,R2,#+24
   \   00000054   AD1A               SUBS     R5,R5,R2
   \   00000056   0A26               MOVS     R6,#+10
   \   00000058   7543               MULS     R5,R6,R5
   \   0000005A   154E               LDR      R6,??TextChange_Refresh_0+0xC  ;; Arial_7
   \   0000005C   755D               LDRB     R5,[R6, R5]
   \   0000005E   4019               ADDS     R0,R0,R5
   5897                   Pix+=1; //przerwa pomiêdzy znakami
   \   00000060   401C               ADDS     R0,R0,#+1
   5898                }
   \   00000062   641C               ADDS     R4,R4,#+1
   \                     ??TextChange_Refresh_4:
   \   00000064   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000066   240E               LSRS     R4,R4,#+24
   \   00000068   0E4D               LDR      R5,??TextChange_Refresh_0  ;; TextChangePoz
   \   0000006A   2D78               LDRB     R5,[R5, #+0]
   \   0000006C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000006E   1B0E               LSRS     R3,R3,#+24
   \   00000070   ED1A               SUBS     R5,R5,R3
   \   00000072   AC42               CMP      R4,R5
   \   00000074   E6DB               BLT      ??TextChange_Refresh_5
   5899                
   5900                if (mig) 
   \   00000076   0D49               LDR      R1,??TextChange_Refresh_0+0x8  ;; ??mig
   \   00000078   0978               LDRB     R1,[R1, #+0]
   \   0000007A   0029               CMP      R1,#+0
   \   0000007C   07D0               BEQ      ??TextChange_Refresh_6
   5901                    {
   5902                      V_line(Pix,100,9,1);
   \   0000007E   0123               MOVS     R3,#+1
   \   00000080   0922               MOVS     R2,#+9
   \   00000082   6421               MOVS     R1,#+100
   \   00000084   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       V_line
   \   0000008C   06E0               B        ??TextChange_Refresh_3
   5903                    }else{ 
   5904                      V_line(Pix,100,9,0);
   \                     ??TextChange_Refresh_6:
   \   0000008E   0023               MOVS     R3,#+0
   \   00000090   0922               MOVS     R2,#+9
   \   00000092   6421               MOVS     R1,#+100
   \   00000094   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000096   000E               LSRS     R0,R0,#+24
   \   00000098   ........           BL       V_line
   5905                    }
   5906                
   5907                
   5908            }
   5909            
   5910           
   5911          }
   \                     ??TextChange_Refresh_3:
   \   0000009C   70BC               POP      {R4-R6}
   \   0000009E   01BC               POP      {R0}
   \   000000A0   0047               BX       R0               ;; return
   \   000000A2   C046               Nop      
   \                     ??TextChange_Refresh_0:
   \   000000A4   ........           DC32     TextChangePoz
   \   000000A8   ........           DC32     ??count
   \   000000AC   ........           DC32     ??mig
   \   000000B0   ........           DC32     Arial_7

   \                                 In section .bss, align 1
   \                     ??count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??mig:
   \   00000000                      DS8 1
   5912           
   5913          

   \                                 In section .bss, align 8
   5914          long long int LastText_EventTime=0;
   \                     LastText_EventTime:
   \   00000000                      DS8 8

   \                                 In section Debug.txt, align 4, keep-with-next
   5915          void TextChange_Evant(char* text, char* MaxChar, char* MaxPix)
   5916                {  
   \                     TextChange_Evant:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   5917                  char y=86;
   \   00000004   5624               MOVS     R4,#+86
   5918                  char Repaint=0;
   \   00000006   0025               MOVS     R5,#+0
   5919                  //zdarzenie typu down "X"
   5920                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000008   AA48               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   405E               LDRSH    R0,[R0, R1]
   \   0000000E   2F28               CMP      R0,#+47
   \   00000010   38DB               BLT      ??TextChange_Evant_1
   \   00000012   A848               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   3F28               CMP      R0,#+63
   \   0000001A   33DA               BGE      ??TextChange_Evant_1
   \   0000001C   A648               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   7128               CMP      R0,#+113
   \   00000024   2EDB               BLT      ??TextChange_Evant_1
   \   00000026   A448               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   405E               LDRSH    R0,[R0, R1]
   \   0000002C   7F28               CMP      R0,#+127
   \   0000002E   29DA               BGE      ??TextChange_Evant_1
   5921                  {
   5922                    //MenuPaint();
   5923                    H_line(49,114,10,0);
   \   00000030   0023               MOVS     R3,#+0
   \   00000032   0A22               MOVS     R2,#+10
   \   00000034   7221               MOVS     R1,#+114
   \   00000036   3120               MOVS     R0,#+49
   \   00000038   ........           BL       H_line
   5924                    H_line(49,123,10,0); 
   \   0000003C   0023               MOVS     R3,#+0
   \   0000003E   0A22               MOVS     R2,#+10
   \   00000040   7B21               MOVS     R1,#+123
   \   00000042   3120               MOVS     R0,#+49
   \   00000044   ........           BL       H_line
   5925                    V_line(49,114,10,0); 
   \   00000048   0023               MOVS     R3,#+0
   \   0000004A   0A22               MOVS     R2,#+10
   \   0000004C   7221               MOVS     R1,#+114
   \   0000004E   3120               MOVS     R0,#+49
   \   00000050   ........           BL       V_line
   5926                    V_line(58,114,10,0); 
   \   00000054   0023               MOVS     R3,#+0
   \   00000056   0A22               MOVS     R2,#+10
   \   00000058   7221               MOVS     R1,#+114
   \   0000005A   3A20               MOVS     R0,#+58
   \   0000005C   ........           BL       V_line
   5927                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000060   9648               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000062   0078               LDRB     R0,[R0, #+0]
   \   00000064   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000066   000E               LSRS     R0,R0,#+24
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   0BD1               BNE      ??TextChange_Evant_1
   \   0000006C   9448               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   0000006E   8021               MOVS     R1,#+128
   \   00000070   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000072   0160               STR      R1,[R0, #+0]
   \   00000074   934A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   00000076   9448               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   00000078   03C8               LDM      R0!,{R0,R1}
   \   0000007A   0023               MOVS     R3,#+0
   \   0000007C   0830               ADDS     R0,R0,#+8
   \   0000007E   5941               ADCS     R1,R1,R3
   \   00000080   03C2               STM      R2!,{R0,R1}
   \   00000082   083A               SUBS     R2,R2,#+8
   5928                    
   5929                  }
   5930            
   5931                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??TextChange_Evant_1:
   \   00000084   9148               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   2F28               CMP      R0,#+47
   \   0000008C   6CDB               BLT      ??TextChange_Evant_2
   \   0000008E   8F48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   3F28               CMP      R0,#+63
   \   00000096   67DA               BGE      ??TextChange_Evant_2
   \   00000098   8D48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   405E               LDRSH    R0,[R0, R1]
   \   0000009E   7128               CMP      R0,#+113
   \   000000A0   62DB               BLT      ??TextChange_Evant_2
   \   000000A2   8B48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   000000A4   0021               MOVS     R1,#+0
   \   000000A6   405E               LDRSH    R0,[R0, R1]
   \   000000A8   7F28               CMP      R0,#+127
   \   000000AA   5DDA               BGE      ??TextChange_Evant_2
   5932                  {
   5933                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000AC   8348               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   000000AE   0078               LDRB     R0,[R0, #+0]
   \   000000B0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   0BD1               BNE      ??TextChange_Evant_3
   \   000000B8   8148               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   000000BA   8021               MOVS     R1,#+128
   \   000000BC   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000BE   0160               STR      R1,[R0, #+0]
   \   000000C0   804A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   000000C2   8148               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   000000C4   03C8               LDM      R0!,{R0,R1}
   \   000000C6   0023               MOVS     R3,#+0
   \   000000C8   0830               ADDS     R0,R0,#+8
   \   000000CA   5941               ADCS     R1,R1,R3
   \   000000CC   03C2               STM      R2!,{R0,R1}
   \   000000CE   083A               SUBS     R2,R2,#+8
   5934          
   5935                    char LastChar=0;
   \                     ??TextChange_Evant_3:
   \   000000D0   0020               MOVS     R0,#+0
   5936                    for (char i=0; i<*MaxChar; i++) if ((text[i]>=30) &&  (text[i]<=129) && (text[i]!=32)) LastChar=i;
   \   000000D2   0021               MOVS     R1,#+0
   \   000000D4   13E0               B        ??TextChange_Evant_4
   \                     ??TextChange_Evant_5:
   \   000000D6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000D8   090E               LSRS     R1,R1,#+24
   \   000000DA   029A               LDR      R2,[SP, #+8]
   \   000000DC   525C               LDRB     R2,[R2, R1]
   \   000000DE   1E2A               CMP      R2,#+30
   \   000000E0   0CD3               BCC      ??TextChange_Evant_6
   \   000000E2   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000E4   090E               LSRS     R1,R1,#+24
   \   000000E6   029A               LDR      R2,[SP, #+8]
   \   000000E8   525C               LDRB     R2,[R2, R1]
   \   000000EA   822A               CMP      R2,#+130
   \   000000EC   06D2               BCS      ??TextChange_Evant_6
   \   000000EE   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000F0   090E               LSRS     R1,R1,#+24
   \   000000F2   029A               LDR      R2,[SP, #+8]
   \   000000F4   525C               LDRB     R2,[R2, R1]
   \   000000F6   202A               CMP      R2,#+32
   \   000000F8   00D0               BEQ      ??TextChange_Evant_6
   \   000000FA   0800               MOVS     R0,R1
   \                     ??TextChange_Evant_6:
   \   000000FC   491C               ADDS     R1,R1,#+1
   \                     ??TextChange_Evant_4:
   \   000000FE   039A               LDR      R2,[SP, #+12]
   \   00000100   1278               LDRB     R2,[R2, #+0]
   \   00000102   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000104   090E               LSRS     R1,R1,#+24
   \   00000106   9142               CMP      R1,R2
   \   00000108   E5D3               BCC      ??TextChange_Evant_5
   5937                    for (char i=LastChar+1; i<*MaxChar; i++) text[i]=0;
   \   0000010A   401C               ADDS     R0,R0,#+1
   \   0000010C   05E0               B        ??TextChange_Evant_7
   \                     ??TextChange_Evant_8:
   \   0000010E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   0299               LDR      R1,[SP, #+8]
   \   00000114   0022               MOVS     R2,#+0
   \   00000116   0A54               STRB     R2,[R1, R0]
   \   00000118   401C               ADDS     R0,R0,#+1
   \                     ??TextChange_Evant_7:
   \   0000011A   0399               LDR      R1,[SP, #+12]
   \   0000011C   0978               LDRB     R1,[R1, #+0]
   \   0000011E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000120   000E               LSRS     R0,R0,#+24
   \   00000122   8842               CMP      R0,R1
   \   00000124   F3D3               BCC      ??TextChange_Evant_8
   5938          
   5939                    TextChangeCharNr=0;
   \   00000126   6B48               LDR      R0,??TextChange_Evant_0+0x20  ;; TextChangeCharNr
   \   00000128   0021               MOVS     R1,#+0
   \   0000012A   0170               STRB     R1,[R0, #+0]
   5940                    TextChangePoz=0;
   \   0000012C   6A48               LDR      R0,??TextChange_Evant_0+0x24  ;; TextChangePoz
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   0170               STRB     R1,[R0, #+0]
   5941                    TextToChangeMaxPixSize=0;
   \   00000132   6A48               LDR      R0,??TextChange_Evant_0+0x28  ;; TextToChangeMaxPixSize
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   0170               STRB     R1,[R0, #+0]
   5942                    MaxChar=0;
   \   00000138   0020               MOVS     R0,#+0
   \   0000013A   0390               STR      R0,[SP, #+12]
   5943                    Rej_poz=0;
   \   0000013C   6848               LDR      R0,??TextChange_Evant_0+0x2C  ;; Rej_poz
   \   0000013E   0021               MOVS     R1,#+0
   \   00000140   0160               STR      R1,[R0, #+0]
   5944                    
   5945                    MenuLevel=(MenuLevel/10);
   \   00000142   6848               LDR      R0,??TextChange_Evant_0+0x30  ;; MenuLevel
   \   00000144   0068               LDR      R0,[R0, #+0]
   \   00000146   0A21               MOVS     R1,#+10
   \   00000148   ........           BL       __aeabi_idivmod
   \   0000014C   6549               LDR      R1,??TextChange_Evant_0+0x30  ;; MenuLevel
   \   0000014E   0860               STR      R0,[R1, #+0]
   5946                    MenuPaint();
   \   00000150   ........           BL       MenuPaint
   5947                  }  
   5948                  else
   5949                  {
   5950                    Label("<",2,3+1*15,4,1,11,1,127,1);
   5951                    
   5952                    if ((X_up>3) && (X_up<62) && (Y_up>4) &&  (Y_up<108)) Repaint=1;
   5953                    
   5954                    //przyciski funkcyjne
   5955                    char FunkButt=0;
   5956                    for (char i=0; i<4; i++)
   5957                    {
   5958                      if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>4) &&  (Y_down<4+9)) 
   5959                      {
   5960                        MenuPaint();
   5961                        Rectangle(2+i*15,3,14,11);
   5962                        
   5963                      }
   5964                      
   5965                      if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>4) &&  (Y_up<4+9))
   5966                      {
   5967                        FunkButt=i+1;
   5968                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5969                      }
   5970                    }
   5971                    
   5972                    //obliczenie d³ugoci tekstu
   5973                    char TextLength=0;
   5974                    while ((TextLength<*MaxChar) && (text[TextLength]!=0)) TextLength++;
   5975          
   5976                    
   5977                     //przycisk zmiany alfabetu
   5978                    if ((FunkButt==1) && (TextChangePoz>0)) 
   5979                    {
   5980                      for (char i=TextChangePoz; i<TextLength; i++)  text[i-1]=text[i];
   5981                      TextChangePoz--;
   5982                      TextLength--;
   5983                      text[TextLength]=0;  
   5984                      Repaint=1;
   5985                    }
   5986                    if (FunkButt==2) {if (TextChangePoz>0) {TextChangePoz--;} Repaint=1;}
   5987                    if (FunkButt==3) {if (TextChangePoz<TextLength) {TextChangePoz++;} Repaint=1;}
   5988                    if (FunkButt==4) {if (AlfaType<2) AlfaType++; else AlfaType=0; Repaint=1;}
   5989                    
   5990          
   5991                   char idx=0;
   5992                    for (char j=0; j<6; j++) 
   5993                   {
   5994                      for (char i=0; i<4; i++) 
   5995                      {
   5996                        if (QWERTY[AlfaType][idx]>0)
   5997                        {
   5998                          if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>y) &&  (Y_down<y+13))
   5999                          {
   6000                            MenuPaint();
   6001                            Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   6002                          }
   6003                          if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>y) &&  (Y_up<y+13)) 
   6004                          {
   6005                            if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                         ^
Warning[Pe068]: integer conversion resulted in a change of sign
   6006                            if (TextChangePoz<*MaxChar)
   6007                            {
   6008                               if ((*MaxPix==0) || ((LabelLength(text,*MaxChar)+LabelLength((char*)&(QWERTY[AlfaType][idx]),1))<*MaxPix ))
   6009                               {
   6010                                text[TextChangePoz]=QWERTY[AlfaType][idx];
   6011                                TextChangePoz++;
   6012                                if ((TextChangePoz==1) && (text[TextChangePoz]==0) && (AlfaType==0)) AlfaType=1;
   6013                               }else{
   6014                                if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                             ^
Warning[Pe068]: integer conversion resulted in a change of sign
   6015                               }
   6016                            }else{
   6017                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   6018                            }
   6019                             
   6020                            char AT=1;
   6021                            //for (char AT=0; AT<3; AT++)
   6022                            //{
   6023                                for (char i=0; i<MaxLetherOnScr; i++)
   6024                                {
   6025                                  if (text[TextChangePoz]==QWERTY[AT][i]) AlfaType=AT; 
   6026                                }
   6027                            //}
   6028                            
   6029                            Repaint=1;
   6030                          }
   6031                          idx++;
   6032                        }
   6033                      }
   6034                      y-=14;
   6035                   }
   6036                    
   6037                    
   6038                    
   6039                   
   6040                    
   6041          
   6042                    
   6043                  }
   6044                  
   6045                  
   6046                  if (Repaint) MenuPaint();
   \                     ??TextChange_Evant_9:
   \   00000154   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000156   2D0E               LSRS     R5,R5,#+24
   \   00000158   002D               CMP      R5,#+0
   \   0000015A   01D0               BEQ      ??TextChange_Evant_10
   \   0000015C   ........           BL       MenuPaint
   6047                  
   6048                }
   \                     ??TextChange_Evant_10:
   \   00000160   05B0               ADD      SP,SP,#+20
   \   00000162   F0BC               POP      {R4-R7}
   \   00000164   01BC               POP      {R0}
   \   00000166   0047               BX       R0               ;; return
   \                     ??TextChange_Evant_2:
   \   00000168   82B0               SUB      SP,SP,#+8
   \   0000016A   0120               MOVS     R0,#+1
   \   0000016C   0090               STR      R0,[SP, #+0]
   \   0000016E   7F21               MOVS     R1,#+127
   \   00000170   0120               MOVS     R0,#+1
   \   00000172   03B4               PUSH     {R0,R1}
   \   00000174   0B21               MOVS     R1,#+11
   \   00000176   0120               MOVS     R0,#+1
   \   00000178   03B4               PUSH     {R0,R1}
   \   0000017A   0423               MOVS     R3,#+4
   \   0000017C   1222               MOVS     R2,#+18
   \   0000017E   0221               MOVS     R1,#+2
   \   00000180   59A0               ADR      R0,??TextChange_Evant_0+0x34  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000182   ........           BL       Label
   \   00000186   06B0               ADD      SP,SP,#+24
   \   00000188   5048               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   0000018A   0021               MOVS     R1,#+0
   \   0000018C   405E               LDRSH    R0,[R0, R1]
   \   0000018E   0428               CMP      R0,#+4
   \   00000190   0FDB               BLT      ??TextChange_Evant_11
   \   00000192   4E48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000194   0021               MOVS     R1,#+0
   \   00000196   405E               LDRSH    R0,[R0, R1]
   \   00000198   3E28               CMP      R0,#+62
   \   0000019A   0ADA               BGE      ??TextChange_Evant_11
   \   0000019C   4C48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   0000019E   0021               MOVS     R1,#+0
   \   000001A0   405E               LDRSH    R0,[R0, R1]
   \   000001A2   0528               CMP      R0,#+5
   \   000001A4   05DB               BLT      ??TextChange_Evant_11
   \   000001A6   4A48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   000001A8   0021               MOVS     R1,#+0
   \   000001AA   405E               LDRSH    R0,[R0, R1]
   \   000001AC   6C28               CMP      R0,#+108
   \   000001AE   00DA               BGE      ??TextChange_Evant_11
   \   000001B0   0125               MOVS     R5,#+1
   \                     ??TextChange_Evant_11:
   \   000001B2   0027               MOVS     R7,#+0
   \   000001B4   0026               MOVS     R6,#+0
   \   000001B6   5EE0               B        ??TextChange_Evant_12
   \                     ??TextChange_Evant_13:
   \   000001B8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001BA   360E               LSRS     R6,R6,#+24
   \   000001BC   0F20               MOVS     R0,#+15
   \   000001BE   7043               MULS     R0,R6,R0
   \   000001C0   C01C               ADDS     R0,R0,#+3
   \   000001C2   3C49               LDR      R1,??TextChange_Evant_0  ;; X_down
   \   000001C4   0022               MOVS     R2,#+0
   \   000001C6   895E               LDRSH    R1,[R1, R2]
   \   000001C8   8842               CMP      R0,R1
   \   000001CA   21DA               BGE      ??TextChange_Evant_14
   \   000001CC   3948               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   000001CE   0021               MOVS     R1,#+0
   \   000001D0   405E               LDRSH    R0,[R0, R1]
   \   000001D2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001D4   360E               LSRS     R6,R6,#+24
   \   000001D6   0F21               MOVS     R1,#+15
   \   000001D8   7143               MULS     R1,R6,R1
   \   000001DA   1231               ADDS     R1,R1,#+18
   \   000001DC   8842               CMP      R0,R1
   \   000001DE   17DA               BGE      ??TextChange_Evant_14
   \   000001E0   3548               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   000001E2   0021               MOVS     R1,#+0
   \   000001E4   405E               LDRSH    R0,[R0, R1]
   \   000001E6   0528               CMP      R0,#+5
   \   000001E8   12DB               BLT      ??TextChange_Evant_14
   \   000001EA   3348               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   000001EC   0021               MOVS     R1,#+0
   \   000001EE   405E               LDRSH    R0,[R0, R1]
   \   000001F0   0D28               CMP      R0,#+13
   \   000001F2   0DDA               BGE      ??TextChange_Evant_14
   \   000001F4   ........           BL       MenuPaint
   \   000001F8   0B23               MOVS     R3,#+11
   \   000001FA   0E22               MOVS     R2,#+14
   \   000001FC   0321               MOVS     R1,#+3
   \   000001FE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000200   360E               LSRS     R6,R6,#+24
   \   00000202   0F20               MOVS     R0,#+15
   \   00000204   7043               MULS     R0,R6,R0
   \   00000206   801C               ADDS     R0,R0,#+2
   \   00000208   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000020A   000E               LSRS     R0,R0,#+24
   \   0000020C   ........           BL       Rectangle
   \                     ??TextChange_Evant_14:
   \   00000210   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000212   360E               LSRS     R6,R6,#+24
   \   00000214   0F20               MOVS     R0,#+15
   \   00000216   7043               MULS     R0,R6,R0
   \   00000218   C01C               ADDS     R0,R0,#+3
   \   0000021A   2C49               LDR      R1,??TextChange_Evant_0+0x18  ;; X_up
   \   0000021C   0022               MOVS     R2,#+0
   \   0000021E   895E               LDRSH    R1,[R1, R2]
   \   00000220   8842               CMP      R0,R1
   \   00000222   27DA               BGE      ??TextChange_Evant_15
   \   00000224   2948               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000226   0021               MOVS     R1,#+0
   \   00000228   405E               LDRSH    R0,[R0, R1]
   \   0000022A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000022C   360E               LSRS     R6,R6,#+24
   \   0000022E   0F21               MOVS     R1,#+15
   \   00000230   7143               MULS     R1,R6,R1
   \   00000232   1231               ADDS     R1,R1,#+18
   \   00000234   8842               CMP      R0,R1
   \   00000236   1DDA               BGE      ??TextChange_Evant_15
   \   00000238   2548               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   0000023A   0021               MOVS     R1,#+0
   \   0000023C   405E               LDRSH    R0,[R0, R1]
   \   0000023E   0528               CMP      R0,#+5
   \   00000240   18DB               BLT      ??TextChange_Evant_15
   \   00000242   2348               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   00000244   0021               MOVS     R1,#+0
   \   00000246   405E               LDRSH    R0,[R0, R1]
   \   00000248   0D28               CMP      R0,#+13
   \   0000024A   13DA               BGE      ??TextChange_Evant_15
   \   0000024C   3700               MOVS     R7,R6
   \   0000024E   7F1C               ADDS     R7,R7,#+1
   \   00000250   1A48               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000252   0078               LDRB     R0,[R0, #+0]
   \   00000254   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000256   000E               LSRS     R0,R0,#+24
   \   00000258   0028               CMP      R0,#+0
   \   0000025A   0BD1               BNE      ??TextChange_Evant_15
   \   0000025C   1848               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   0000025E   8021               MOVS     R1,#+128
   \   00000260   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000262   0160               STR      R1,[R0, #+0]
   \   00000264   174A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   00000266   1848               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   00000268   03C8               LDM      R0!,{R0,R1}
   \   0000026A   0023               MOVS     R3,#+0
   \   0000026C   0830               ADDS     R0,R0,#+8
   \   0000026E   5941               ADCS     R1,R1,R3
   \   00000270   03C2               STM      R2!,{R0,R1}
   \   00000272   083A               SUBS     R2,R2,#+8
   \                     ??TextChange_Evant_15:
   \   00000274   761C               ADDS     R6,R6,#+1
   \                     ??TextChange_Evant_12:
   \   00000276   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000278   360E               LSRS     R6,R6,#+24
   \   0000027A   042E               CMP      R6,#+4
   \   0000027C   9CD3               BCC      ??TextChange_Evant_13
   \   0000027E   0020               MOVS     R0,#+0
   \   00000280   00E0               B        ??TextChange_Evant_16
   \                     ??TextChange_Evant_17:
   \   00000282   401C               ADDS     R0,R0,#+1
   \                     ??TextChange_Evant_16:
   \   00000284   0399               LDR      R1,[SP, #+12]
   \   00000286   0978               LDRB     R1,[R1, #+0]
   \   00000288   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000028A   000E               LSRS     R0,R0,#+24
   \   0000028C   8842               CMP      R0,R1
   \   0000028E   05D2               BCS      ??TextChange_Evant_18
   \   00000290   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000292   000E               LSRS     R0,R0,#+24
   \   00000294   0299               LDR      R1,[SP, #+8]
   \   00000296   095C               LDRB     R1,[R1, R0]
   \   00000298   0029               CMP      R1,#+0
   \   0000029A   F2D1               BNE      ??TextChange_Evant_17
   \                     ??TextChange_Evant_18:
   \   0000029C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000029E   3F0E               LSRS     R7,R7,#+24
   \   000002A0   012F               CMP      R7,#+1
   \   000002A2   40D1               BNE      ??TextChange_Evant_19
   \   000002A4   0C49               LDR      R1,??TextChange_Evant_0+0x24  ;; TextChangePoz
   \   000002A6   0978               LDRB     R1,[R1, #+0]
   \   000002A8   0129               CMP      R1,#+1
   \   000002AA   3CD3               BCC      ??TextChange_Evant_19
   \   000002AC   0A49               LDR      R1,??TextChange_Evant_0+0x24  ;; TextChangePoz
   \   000002AE   0978               LDRB     R1,[R1, #+0]
   \   000002B0   27E0               B        ??TextChange_Evant_20
   \   000002B2   C046               Nop      
   \                     ??TextChange_Evant_0:
   \   000002B4   ........           DC32     X_down
   \   000002B8   ........           DC32     Y_down
   \   000002BC   E9D71300           DC32     0x13d7e9
   \   000002C0   30F4FFFF           DC32     0xfffff430
   \   000002C4   ........           DC32     ButtonBipCounter
   \   000002C8   ........           DC32     g_counter
   \   000002CC   ........           DC32     X_up
   \   000002D0   ........           DC32     Y_up
   \   000002D4   ........           DC32     TextChangeCharNr
   \   000002D8   ........           DC32     TextChangePoz
   \   000002DC   ........           DC32     TextToChangeMaxPixSize
   \   000002E0   ........           DC32     Rej_poz
   \   000002E4   ........           DC32     MenuLevel
   \   000002E8   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \                     ??TextChange_Evant_21:
   \   000002EC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000002EE   090E               LSRS     R1,R1,#+24
   \   000002F0   029A               LDR      R2,[SP, #+8]
   \   000002F2   5218               ADDS     R2,R2,R1
   \   000002F4   521E               SUBS     R2,R2,#+1
   \   000002F6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000002F8   090E               LSRS     R1,R1,#+24
   \   000002FA   029B               LDR      R3,[SP, #+8]
   \   000002FC   5B5C               LDRB     R3,[R3, R1]
   \   000002FE   1370               STRB     R3,[R2, #+0]
   \   00000300   491C               ADDS     R1,R1,#+1
   \                     ??TextChange_Evant_20:
   \   00000302   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000304   090E               LSRS     R1,R1,#+24
   \   00000306   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000308   000E               LSRS     R0,R0,#+24
   \   0000030A   8142               CMP      R1,R0
   \   0000030C   EED3               BCC      ??TextChange_Evant_21
   \   0000030E   B649               LDR      R1,??TextChange_Evant_22  ;; TextChangePoz
   \   00000310   B54A               LDR      R2,??TextChange_Evant_22  ;; TextChangePoz
   \   00000312   1278               LDRB     R2,[R2, #+0]
   \   00000314   521E               SUBS     R2,R2,#+1
   \   00000316   0A70               STRB     R2,[R1, #+0]
   \   00000318   401E               SUBS     R0,R0,#+1
   \   0000031A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000031C   000E               LSRS     R0,R0,#+24
   \   0000031E   0299               LDR      R1,[SP, #+8]
   \   00000320   0022               MOVS     R2,#+0
   \   00000322   0A54               STRB     R2,[R1, R0]
   \   00000324   0125               MOVS     R5,#+1
   \                     ??TextChange_Evant_19:
   \   00000326   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000328   3F0E               LSRS     R7,R7,#+24
   \   0000032A   022F               CMP      R7,#+2
   \   0000032C   09D1               BNE      ??TextChange_Evant_23
   \   0000032E   AE49               LDR      R1,??TextChange_Evant_22  ;; TextChangePoz
   \   00000330   0978               LDRB     R1,[R1, #+0]
   \   00000332   0129               CMP      R1,#+1
   \   00000334   04D3               BCC      ??TextChange_Evant_24
   \   00000336   AC49               LDR      R1,??TextChange_Evant_22  ;; TextChangePoz
   \   00000338   AB4A               LDR      R2,??TextChange_Evant_22  ;; TextChangePoz
   \   0000033A   1278               LDRB     R2,[R2, #+0]
   \   0000033C   521E               SUBS     R2,R2,#+1
   \   0000033E   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_24:
   \   00000340   0125               MOVS     R5,#+1
   \                     ??TextChange_Evant_23:
   \   00000342   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000344   3F0E               LSRS     R7,R7,#+24
   \   00000346   032F               CMP      R7,#+3
   \   00000348   0BD1               BNE      ??TextChange_Evant_25
   \   0000034A   A749               LDR      R1,??TextChange_Evant_22  ;; TextChangePoz
   \   0000034C   0978               LDRB     R1,[R1, #+0]
   \   0000034E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000350   000E               LSRS     R0,R0,#+24
   \   00000352   8142               CMP      R1,R0
   \   00000354   04D2               BCS      ??TextChange_Evant_26
   \   00000356   A448               LDR      R0,??TextChange_Evant_22  ;; TextChangePoz
   \   00000358   A349               LDR      R1,??TextChange_Evant_22  ;; TextChangePoz
   \   0000035A   0978               LDRB     R1,[R1, #+0]
   \   0000035C   491C               ADDS     R1,R1,#+1
   \   0000035E   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_26:
   \   00000360   0125               MOVS     R5,#+1
   \                     ??TextChange_Evant_25:
   \   00000362   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000364   3F0E               LSRS     R7,R7,#+24
   \   00000366   042F               CMP      R7,#+4
   \   00000368   0DD1               BNE      ??TextChange_Evant_27
   \   0000036A   A048               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   0000036C   0078               LDRB     R0,[R0, #+0]
   \   0000036E   0228               CMP      R0,#+2
   \   00000370   05D2               BCS      ??TextChange_Evant_28
   \   00000372   9E48               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000374   9D49               LDR      R1,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000376   0978               LDRB     R1,[R1, #+0]
   \   00000378   491C               ADDS     R1,R1,#+1
   \   0000037A   0170               STRB     R1,[R0, #+0]
   \   0000037C   02E0               B        ??TextChange_Evant_29
   \                     ??TextChange_Evant_28:
   \   0000037E   9B48               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000380   0021               MOVS     R1,#+0
   \   00000382   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_29:
   \   00000384   0125               MOVS     R5,#+1
   \                     ??TextChange_Evant_27:
   \   00000386   0026               MOVS     R6,#+0
   \   00000388   6846               MOV      R0,SP
   \   0000038A   0021               MOVS     R1,#+0
   \   0000038C   0170               STRB     R1,[R0, #+0]
   \   0000038E   05E0               B        ??TextChange_Evant_30
   \                     ??TextChange_Evant_31:
   \   00000390   0E3C               SUBS     R4,R4,#+14
   \   00000392   6846               MOV      R0,SP
   \   00000394   6946               MOV      R1,SP
   \   00000396   0978               LDRB     R1,[R1, #+0]
   \   00000398   491C               ADDS     R1,R1,#+1
   \   0000039A   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_30:
   \   0000039C   6846               MOV      R0,SP
   \   0000039E   0078               LDRB     R0,[R0, #+0]
   \   000003A0   0628               CMP      R0,#+6
   \   000003A2   00D3               BCC      .+4
   \   000003A4   D6E6               B        ??TextChange_Evant_9
   \   000003A6   0027               MOVS     R7,#+0
   \   000003A8   18E0               B        ??TextChange_Evant_32
   \                     ??TextChange_Evant_33:
   \   000003AA   8F4A               LDR      R2,??TextChange_Evant_22  ;; TextChangePoz
   \   000003AC   1278               LDRB     R2,[R2, #+0]
   \   000003AE   029B               LDR      R3,[SP, #+8]
   \   000003B0   9A5C               LDRB     R2,[R3, R2]
   \   000003B2   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003B4   090E               LSRS     R1,R1,#+24
   \   000003B6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003B8   000E               LSRS     R0,R0,#+24
   \   000003BA   1823               MOVS     R3,#+24
   \   000003BC   4343               MULS     R3,R0,R3
   \   000003BE   8C4D               LDR      R5,??TextChange_Evant_22+0x8  ;; QWERTY
   \   000003C0   EB18               ADDS     R3,R5,R3
   \   000003C2   5B5C               LDRB     R3,[R3, R1]
   \   000003C4   9A42               CMP      R2,R3
   \   000003C6   01D1               BNE      ??TextChange_Evant_34
   \   000003C8   884A               LDR      R2,??TextChange_Evant_22+0x4  ;; AlfaType
   \   000003CA   1070               STRB     R0,[R2, #+0]
   \                     ??TextChange_Evant_34:
   \   000003CC   491C               ADDS     R1,R1,#+1
   \                     ??TextChange_Evant_35:
   \   000003CE   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000003D0   090E               LSRS     R1,R1,#+24
   \   000003D2   1829               CMP      R1,#+24
   \   000003D4   E9D3               BCC      ??TextChange_Evant_33
   \   000003D6   0125               MOVS     R5,#+1
   \                     ??TextChange_Evant_36:
   \   000003D8   761C               ADDS     R6,R6,#+1
   \                     ??TextChange_Evant_37:
   \   000003DA   7F1C               ADDS     R7,R7,#+1
   \                     ??TextChange_Evant_32:
   \   000003DC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000003DE   3F0E               LSRS     R7,R7,#+24
   \   000003E0   042F               CMP      R7,#+4
   \   000003E2   D5D2               BCS      ??TextChange_Evant_31
   \   000003E4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003E6   360E               LSRS     R6,R6,#+24
   \   000003E8   8048               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   000003EA   0078               LDRB     R0,[R0, #+0]
   \   000003EC   1821               MOVS     R1,#+24
   \   000003EE   4843               MULS     R0,R1,R0
   \   000003F0   7F49               LDR      R1,??TextChange_Evant_22+0x8  ;; QWERTY
   \   000003F2   0818               ADDS     R0,R1,R0
   \   000003F4   805D               LDRB     R0,[R0, R6]
   \   000003F6   0128               CMP      R0,#+1
   \   000003F8   EFD3               BCC      ??TextChange_Evant_37
   \   000003FA   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000003FC   3F0E               LSRS     R7,R7,#+24
   \   000003FE   0F20               MOVS     R0,#+15
   \   00000400   7843               MULS     R0,R7,R0
   \   00000402   C01C               ADDS     R0,R0,#+3
   \   00000404   7B49               LDR      R1,??TextChange_Evant_22+0xC  ;; X_down
   \   00000406   0022               MOVS     R2,#+0
   \   00000408   895E               LDRSH    R1,[R1, R2]
   \   0000040A   8842               CMP      R0,R1
   \   0000040C   41DA               BGE      ??TextChange_Evant_38
   \   0000040E   7948               LDR      R0,??TextChange_Evant_22+0xC  ;; X_down
   \   00000410   0021               MOVS     R1,#+0
   \   00000412   405E               LDRSH    R0,[R0, R1]
   \   00000414   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000416   3F0E               LSRS     R7,R7,#+24
   \   00000418   0F21               MOVS     R1,#+15
   \   0000041A   7943               MULS     R1,R7,R1
   \   0000041C   1231               ADDS     R1,R1,#+18
   \   0000041E   8842               CMP      R0,R1
   \   00000420   37DA               BGE      ??TextChange_Evant_38
   \   00000422   2000               MOVS     R0,R4
   \   00000424   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000426   000E               LSRS     R0,R0,#+24
   \   00000428   7349               LDR      R1,??TextChange_Evant_22+0x10  ;; Y_down
   \   0000042A   0022               MOVS     R2,#+0
   \   0000042C   895E               LDRSH    R1,[R1, R2]
   \   0000042E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000430   0014               ASRS     R0,R0,#+16
   \   00000432   8842               CMP      R0,R1
   \   00000434   2DDA               BGE      ??TextChange_Evant_38
   \   00000436   7048               LDR      R0,??TextChange_Evant_22+0x10  ;; Y_down
   \   00000438   0021               MOVS     R1,#+0
   \   0000043A   415E               LDRSH    R1,[R0, R1]
   \   0000043C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000043E   240E               LSRS     R4,R4,#+24
   \   00000440   2000               MOVS     R0,R4
   \   00000442   0D30               ADDS     R0,R0,#+13
   \   00000444   8142               CMP      R1,R0
   \   00000446   24DA               BGE      ??TextChange_Evant_38
   \   00000448   ........           BL       MenuPaint
   \   0000044C   82B0               SUB      SP,SP,#+8
   \   0000044E   0120               MOVS     R0,#+1
   \   00000450   0090               STR      R0,[SP, #+0]
   \   00000452   7F21               MOVS     R1,#+127
   \   00000454   0120               MOVS     R0,#+1
   \   00000456   03B4               PUSH     {R0,R1}
   \   00000458   0B21               MOVS     R1,#+11
   \   0000045A   0120               MOVS     R0,#+1
   \   0000045C   03B4               PUSH     {R0,R1}
   \   0000045E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000460   240E               LSRS     R4,R4,#+24
   \   00000462   2300               MOVS     R3,R4
   \   00000464   9B1C               ADDS     R3,R3,#+2
   \   00000466   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000468   3F0E               LSRS     R7,R7,#+24
   \   0000046A   0F22               MOVS     R2,#+15
   \   0000046C   7A43               MULS     R2,R7,R2
   \   0000046E   D21C               ADDS     R2,R2,#+3
   \   00000470   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000472   120E               LSRS     R2,R2,#+24
   \   00000474   0221               MOVS     R1,#+2
   \   00000476   8C46               MOV      R12,R1
   \   00000478   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000047A   360E               LSRS     R6,R6,#+24
   \   0000047C   5B48               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   0000047E   0078               LDRB     R0,[R0, #+0]
   \   00000480   1821               MOVS     R1,#+24
   \   00000482   4843               MULS     R0,R1,R0
   \   00000484   5A49               LDR      R1,??TextChange_Evant_22+0x8  ;; QWERTY
   \   00000486   0818               ADDS     R0,R1,R0
   \   00000488   8019               ADDS     R0,R0,R6
   \   0000048A   6146               MOV      R1,R12
   \   0000048C   ........           BL       Label
   \   00000490   06B0               ADD      SP,SP,#+24
   \                     ??TextChange_Evant_38:
   \   00000492   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000494   3F0E               LSRS     R7,R7,#+24
   \   00000496   0F20               MOVS     R0,#+15
   \   00000498   7843               MULS     R0,R7,R0
   \   0000049A   C01C               ADDS     R0,R0,#+3
   \   0000049C   5749               LDR      R1,??TextChange_Evant_22+0x14  ;; X_up
   \   0000049E   0022               MOVS     R2,#+0
   \   000004A0   895E               LDRSH    R1,[R1, R2]
   \   000004A2   8842               CMP      R0,R1
   \   000004A4   98DA               BGE      ??TextChange_Evant_36
   \   000004A6   5548               LDR      R0,??TextChange_Evant_22+0x14  ;; X_up
   \   000004A8   0021               MOVS     R1,#+0
   \   000004AA   405E               LDRSH    R0,[R0, R1]
   \   000004AC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000004AE   3F0E               LSRS     R7,R7,#+24
   \   000004B0   0F21               MOVS     R1,#+15
   \   000004B2   7943               MULS     R1,R7,R1
   \   000004B4   1231               ADDS     R1,R1,#+18
   \   000004B6   8842               CMP      R0,R1
   \   000004B8   8EDA               BGE      ??TextChange_Evant_36
   \   000004BA   2000               MOVS     R0,R4
   \   000004BC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000004BE   000E               LSRS     R0,R0,#+24
   \   000004C0   4F49               LDR      R1,??TextChange_Evant_22+0x18  ;; Y_up
   \   000004C2   0022               MOVS     R2,#+0
   \   000004C4   895E               LDRSH    R1,[R1, R2]
   \   000004C6   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000004C8   0014               ASRS     R0,R0,#+16
   \   000004CA   8842               CMP      R0,R1
   \   000004CC   84DA               BGE      ??TextChange_Evant_36
   \   000004CE   4C48               LDR      R0,??TextChange_Evant_22+0x18  ;; Y_up
   \   000004D0   0021               MOVS     R1,#+0
   \   000004D2   415E               LDRSH    R1,[R0, R1]
   \   000004D4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004D6   240E               LSRS     R4,R4,#+24
   \   000004D8   2000               MOVS     R0,R4
   \   000004DA   0D30               ADDS     R0,R0,#+13
   \   000004DC   8142               CMP      R1,R0
   \   000004DE   00DB               BLT      .+4
   \   000004E0   7AE7               B        ??TextChange_Evant_36
   \   000004E2   4848               LDR      R0,??TextChange_Evant_22+0x1C  ;; 0x13d7e9
   \   000004E4   0078               LDRB     R0,[R0, #+0]
   \   000004E6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000004E8   000E               LSRS     R0,R0,#+24
   \   000004EA   0028               CMP      R0,#+0
   \   000004EC   0BD1               BNE      ??TextChange_Evant_39
   \   000004EE   4648               LDR      R0,??TextChange_Evant_22+0x20  ;; 0xfffff430
   \   000004F0   8021               MOVS     R1,#+128
   \   000004F2   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000004F4   0160               STR      R1,[R0, #+0]
   \   000004F6   454A               LDR      R2,??TextChange_Evant_22+0x24  ;; ButtonBipCounter
   \   000004F8   4548               LDR      R0,??TextChange_Evant_22+0x28  ;; g_counter
   \   000004FA   03C8               LDM      R0!,{R0,R1}
   \   000004FC   0023               MOVS     R3,#+0
   \   000004FE   0830               ADDS     R0,R0,#+8
   \   00000500   5941               ADCS     R1,R1,R3
   \   00000502   03C2               STM      R2!,{R0,R1}
   \   00000504   083A               SUBS     R2,R2,#+8
   \                     ??TextChange_Evant_39:
   \   00000506   3848               LDR      R0,??TextChange_Evant_22  ;; TextChangePoz
   \   00000508   0078               LDRB     R0,[R0, #+0]
   \   0000050A   0399               LDR      R1,[SP, #+12]
   \   0000050C   0978               LDRB     R1,[R1, #+0]
   \   0000050E   8842               CMP      R0,R1
   \   00000510   54D2               BCS      ??TextChange_Evant_40
   \   00000512   0498               LDR      R0,[SP, #+16]
   \   00000514   0078               LDRB     R0,[R0, #+0]
   \   00000516   0028               CMP      R0,#+0
   \   00000518   18D0               BEQ      ??TextChange_Evant_41
   \   0000051A   0398               LDR      R0,[SP, #+12]
   \   0000051C   0178               LDRB     R1,[R0, #+0]
   \   0000051E   0298               LDR      R0,[SP, #+8]
   \   00000520   ........           BL       LabelLength
   \   00000524   0500               MOVS     R5,R0
   \   00000526   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000528   2D0E               LSRS     R5,R5,#+24
   \   0000052A   0121               MOVS     R1,#+1
   \   0000052C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000052E   360E               LSRS     R6,R6,#+24
   \   00000530   2E48               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000532   0078               LDRB     R0,[R0, #+0]
   \   00000534   1822               MOVS     R2,#+24
   \   00000536   5043               MULS     R0,R2,R0
   \   00000538   2D4A               LDR      R2,??TextChange_Evant_22+0x8  ;; QWERTY
   \   0000053A   1018               ADDS     R0,R2,R0
   \   0000053C   8019               ADDS     R0,R0,R6
   \   0000053E   ........           BL       LabelLength
   \   00000542   2818               ADDS     R0,R5,R0
   \   00000544   0499               LDR      R1,[SP, #+16]
   \   00000546   0978               LDRB     R1,[R1, #+0]
   \   00000548   8842               CMP      R0,R1
   \   0000054A   24DA               BGE      ??TextChange_Evant_42
   \                     ??TextChange_Evant_41:
   \   0000054C   2648               LDR      R0,??TextChange_Evant_22  ;; TextChangePoz
   \   0000054E   0078               LDRB     R0,[R0, #+0]
   \   00000550   0299               LDR      R1,[SP, #+8]
   \   00000552   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000554   360E               LSRS     R6,R6,#+24
   \   00000556   254A               LDR      R2,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000558   1278               LDRB     R2,[R2, #+0]
   \   0000055A   1823               MOVS     R3,#+24
   \   0000055C   5A43               MULS     R2,R3,R2
   \   0000055E   244B               LDR      R3,??TextChange_Evant_22+0x8  ;; QWERTY
   \   00000560   9A18               ADDS     R2,R3,R2
   \   00000562   925D               LDRB     R2,[R2, R6]
   \   00000564   0A54               STRB     R2,[R1, R0]
   \   00000566   2048               LDR      R0,??TextChange_Evant_22  ;; TextChangePoz
   \   00000568   1F49               LDR      R1,??TextChange_Evant_22  ;; TextChangePoz
   \   0000056A   0978               LDRB     R1,[R1, #+0]
   \   0000056C   491C               ADDS     R1,R1,#+1
   \   0000056E   0170               STRB     R1,[R0, #+0]
   \   00000570   1D48               LDR      R0,??TextChange_Evant_22  ;; TextChangePoz
   \   00000572   0078               LDRB     R0,[R0, #+0]
   \   00000574   0128               CMP      R0,#+1
   \   00000576   33D1               BNE      ??TextChange_Evant_43
   \   00000578   1B48               LDR      R0,??TextChange_Evant_22  ;; TextChangePoz
   \   0000057A   0078               LDRB     R0,[R0, #+0]
   \   0000057C   0299               LDR      R1,[SP, #+8]
   \   0000057E   085C               LDRB     R0,[R1, R0]
   \   00000580   1A49               LDR      R1,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000582   0978               LDRB     R1,[R1, #+0]
   \   00000584   0143               ORRS     R1,R1,R0
   \   00000586   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000588   090E               LSRS     R1,R1,#+24
   \   0000058A   0029               CMP      R1,#+0
   \   0000058C   28D1               BNE      ??TextChange_Evant_43
   \   0000058E   1748               LDR      R0,??TextChange_Evant_22+0x4  ;; AlfaType
   \   00000590   0121               MOVS     R1,#+1
   \   00000592   0170               STRB     R1,[R0, #+0]
   \   00000594   24E0               B        ??TextChange_Evant_43
   \                     ??TextChange_Evant_42:
   \   00000596   1B48               LDR      R0,??TextChange_Evant_22+0x1C  ;; 0x13d7e9
   \   00000598   0078               LDRB     R0,[R0, #+0]
   \   0000059A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000059C   000E               LSRS     R0,R0,#+24
   \   0000059E   0028               CMP      R0,#+0
   \   000005A0   1ED1               BNE      ??TextChange_Evant_43
   \   000005A2   1948               LDR      R0,??TextChange_Evant_22+0x20  ;; 0xfffff430
   \   000005A4   8021               MOVS     R1,#+128
   \   000005A6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000005A8   0160               STR      R1,[R0, #+0]
   \   000005AA   184A               LDR      R2,??TextChange_Evant_22+0x24  ;; ButtonBipCounter
   \   000005AC   1848               LDR      R0,??TextChange_Evant_22+0x28  ;; g_counter
   \   000005AE   03C8               LDM      R0!,{R0,R1}
   \   000005B0   0023               MOVS     R3,#+0
   \   000005B2   C830               ADDS     R0,R0,#+200
   \   000005B4   5941               ADCS     R1,R1,R3
   \   000005B6   03C2               STM      R2!,{R0,R1}
   \   000005B8   083A               SUBS     R2,R2,#+8
   \   000005BA   11E0               B        ??TextChange_Evant_43
   \                     ??TextChange_Evant_40:
   \   000005BC   1148               LDR      R0,??TextChange_Evant_22+0x1C  ;; 0x13d7e9
   \   000005BE   0078               LDRB     R0,[R0, #+0]
   \   000005C0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005C2   000E               LSRS     R0,R0,#+24
   \   000005C4   0028               CMP      R0,#+0
   \   000005C6   0BD1               BNE      ??TextChange_Evant_43
   \   000005C8   0F48               LDR      R0,??TextChange_Evant_22+0x20  ;; 0xfffff430
   \   000005CA   8021               MOVS     R1,#+128
   \   000005CC   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000005CE   0160               STR      R1,[R0, #+0]
   \   000005D0   0E4A               LDR      R2,??TextChange_Evant_22+0x24  ;; ButtonBipCounter
   \   000005D2   0F48               LDR      R0,??TextChange_Evant_22+0x28  ;; g_counter
   \   000005D4   03C8               LDM      R0!,{R0,R1}
   \   000005D6   0023               MOVS     R3,#+0
   \   000005D8   C830               ADDS     R0,R0,#+200
   \   000005DA   5941               ADCS     R1,R1,R3
   \   000005DC   03C2               STM      R2!,{R0,R1}
   \   000005DE   083A               SUBS     R2,R2,#+8
   \                     ??TextChange_Evant_43:
   \   000005E0   0120               MOVS     R0,#+1
   \   000005E2   0021               MOVS     R1,#+0
   \   000005E4   F3E6               B        ??TextChange_Evant_35
   \   000005E6   C046               Nop      
   \                     ??TextChange_Evant_22:
   \   000005E8   ........           DC32     TextChangePoz
   \   000005EC   ........           DC32     AlfaType
   \   000005F0   ........           DC32     QWERTY
   \   000005F4   ........           DC32     X_down
   \   000005F8   ........           DC32     Y_down
   \   000005FC   ........           DC32     X_up
   \   00000600   ........           DC32     Y_up
   \   00000604   E9D71300           DC32     0x13d7e9
   \   00000608   30F4FFFF           DC32     0xfffff430
   \   0000060C   ........           DC32     ButtonBipCounter
   \   00000610   ........           DC32     g_counter
   6049          
   6050          
   6051          
   6052          
   6053          
   6054          

   \                                 In section Debug.txt, align 4, keep-with-next
   6055          void AnalogGraph_Paint(_Analog *Anal)
   6056                {  
   \                     AnalogGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   6057                  
   6058                  List_Paint("Analog ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   84A0               ADR      R0,??AnalogGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   8148               LDR      R0,??AnalogGraph_Paint_0+0x4  ;; `?<Constant "Analog ">`
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   6059                  char txt[8];
   6060                  
   6061                  Button("<>",24,96,15,11);
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0B20               MOVS     R0,#+11
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   0F23               MOVS     R3,#+15
   \   00000038   6022               MOVS     R2,#+96
   \   0000003A   1821               MOVS     R1,#+24
   \   0000003C   7DA0               ADR      R0,??AnalogGraph_Paint_0+0x8  ;; 0x3C, 0x3E, 0x00, 0x00
   \   0000003E   ........           BL       Button
   \   00000042   02B0               ADD      SP,SP,#+8
   6062                  
   6063                  char Tp=0;
   \   00000044   0026               MOVS     R6,#+0
   6064                  char Tb=4;
   \   00000046   6846               MOV      R0,SP
   \   00000048   0421               MOVS     R1,#+4
   \   0000004A   8170               STRB     R1,[R0, #+2]
   6065                  char Tk=0;
   \   0000004C   0024               MOVS     R4,#+0
   6066                  char Ap=32;
   \   0000004E   2027               MOVS     R7,#+32
   6067                  char Ab=32;
   \   00000050   2025               MOVS     R5,#+32
   6068                  char Ak=32;
   \   00000052   6846               MOV      R0,SP
   \   00000054   2021               MOVS     R1,#+32
   \   00000056   0170               STRB     R1,[R0, #+0]
   6069                  
   6070                  if (Anal->Flip)
   \   00000058   0498               LDR      R0,[SP, #+16]
   \   0000005A   8079               LDRB     R0,[R0, #+6]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   09D0               BEQ      ??AnalogGraph_Paint_1
   6071                  {
   6072                     Tp=32;
   \   00000060   2026               MOVS     R6,#+32
   6073                     Tb=33;
   \   00000062   6846               MOV      R0,SP
   \   00000064   2121               MOVS     R1,#+33
   \   00000066   8170               STRB     R1,[R0, #+2]
   6074                     Tk=29;
   \   00000068   1D24               MOVS     R4,#+29
   6075                     Ap=0;
   \   0000006A   0027               MOVS     R7,#+0
   6076                     Ab=1;
   \   0000006C   0125               MOVS     R5,#+1
   6077                     Ak=6;
   \   0000006E   6846               MOV      R0,SP
   \   00000070   0621               MOVS     R1,#+6
   \   00000072   0170               STRB     R1,[R0, #+0]
   6078                  }
   6079                  
   6080                  V_line(31,10,85,1); 
   \                     ??AnalogGraph_Paint_1:
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   5522               MOVS     R2,#+85
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   1F20               MOVS     R0,#+31
   \   0000007C   ........           BL       V_line
   6081                  
   6082                  Label("Text "  ,2,Tp+2 ,86,4,27,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   7F21               MOVS     R1,#+127
   \   00000088   0120               MOVS     R0,#+1
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   1B21               MOVS     R1,#+27
   \   0000008E   0420               MOVS     R0,#+4
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   5623               MOVS     R3,#+86
   \   00000094   B61C               ADDS     R6,R6,#+2
   \   00000096   3200               MOVS     R2,R6
   \   00000098   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000009A   120E               LSRS     R2,R2,#+24
   \   0000009C   0221               MOVS     R1,#+2
   \   0000009E   EA48               LDR      R0,??AnalogGraph_Paint_2  ;; `?<Constant "Text ">`
   \   000000A0   ........           BL       Label
   \   000000A4   06B0               ADD      SP,SP,#+24
   6083                  Label("Analog",2,Ap+1,86,7,27,1,127,0); 
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   7F21               MOVS     R1,#+127
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   1B21               MOVS     R1,#+27
   \   000000B4   0720               MOVS     R0,#+7
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   5623               MOVS     R3,#+86
   \   000000BA   7F1C               ADDS     R7,R7,#+1
   \   000000BC   3A00               MOVS     R2,R7
   \   000000BE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000C0   120E               LSRS     R2,R2,#+24
   \   000000C2   0221               MOVS     R1,#+2
   \   000000C4   E148               LDR      R0,??AnalogGraph_Paint_2+0x4  ;; `?<Constant "Analog">`
   \   000000C6   ........           BL       Label
   \   000000CA   06B0               ADD      SP,SP,#+24
   6084                  
   6085                  char LastChar=0;
   \   000000CC   0026               MOVS     R6,#+0
   6086                  char SumOfPixel=1;
   \   000000CE   6846               MOV      R0,SP
   \   000000D0   0121               MOVS     R1,#+1
   \   000000D2   4170               STRB     R1,[R0, #+1]
   6087                  for (char i=0; i<3; i++) if ((Anal->Text[i]>=30) && (Anal->Text[i]!=' ')) 
   \   000000D4   0021               MOVS     R1,#+0
   \   000000D6   22E0               B        ??AnalogGraph_Paint_3
   \                     ??AnalogGraph_Paint_4:
   \   000000D8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000DA   090E               LSRS     R1,R1,#+24
   \   000000DC   0498               LDR      R0,[SP, #+16]
   \   000000DE   4018               ADDS     R0,R0,R1
   \   000000E0   4078               LDRB     R0,[R0, #+1]
   \   000000E2   1E28               CMP      R0,#+30
   \   000000E4   1AD3               BCC      ??AnalogGraph_Paint_5
   \   000000E6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000E8   090E               LSRS     R1,R1,#+24
   \   000000EA   0498               LDR      R0,[SP, #+16]
   \   000000EC   4018               ADDS     R0,R0,R1
   \   000000EE   4078               LDRB     R0,[R0, #+1]
   \   000000F0   2028               CMP      R0,#+32
   \   000000F2   13D0               BEQ      ??AnalogGraph_Paint_5
   6088                  {
   6089                    LastChar=i+1;
   \   000000F4   0E00               MOVS     R6,R1
   \   000000F6   761C               ADDS     R6,R6,#+1
   6090                    SumOfPixel+= Arial_7[Anal->Text[i]-30][0]; 
   \   000000F8   6846               MOV      R0,SP
   \   000000FA   8446               MOV      R12,R0
   \   000000FC   6846               MOV      R0,SP
   \   000000FE   4278               LDRB     R2,[R0, #+1]
   \   00000100   D34B               LDR      R3,??AnalogGraph_Paint_2+0x8  ;; 0xfffffed4
   \   00000102   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000104   090E               LSRS     R1,R1,#+24
   \   00000106   0498               LDR      R0,[SP, #+16]
   \   00000108   4018               ADDS     R0,R0,R1
   \   0000010A   4078               LDRB     R0,[R0, #+1]
   \   0000010C   0A27               MOVS     R7,#+10
   \   0000010E   7843               MULS     R0,R7,R0
   \   00000110   D04F               LDR      R7,??AnalogGraph_Paint_2+0xC  ;; Arial_7
   \   00000112   3818               ADDS     R0,R7,R0
   \   00000114   C05C               LDRB     R0,[R0, R3]
   \   00000116   1218               ADDS     R2,R2,R0
   \   00000118   6046               MOV      R0,R12
   \   0000011A   4270               STRB     R2,[R0, #+1]
   6091                  }
   \                     ??AnalogGraph_Paint_5:
   \   0000011C   491C               ADDS     R1,R1,#+1
   \                     ??AnalogGraph_Paint_3:
   \   0000011E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000120   090E               LSRS     R1,R1,#+24
   \   00000122   0329               CMP      R1,#+3
   \   00000124   D8D3               BCC      ??AnalogGraph_Paint_4
   6092                  
   6093                  
   6094                  H_line(Tk+3,70,27,2); 
   \   00000126   0223               MOVS     R3,#+2
   \   00000128   1B22               MOVS     R2,#+27
   \   0000012A   4621               MOVS     R1,#+70
   \   0000012C   2000               MOVS     R0,R4
   \   0000012E   C01C               ADDS     R0,R0,#+3
   \   00000130   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000132   000E               LSRS     R0,R0,#+24
   \   00000134   ........           BL       H_line
   6095                  H_line(Tk+3,80,27,2); 
   \   00000138   0223               MOVS     R3,#+2
   \   0000013A   1B22               MOVS     R2,#+27
   \   0000013C   5021               MOVS     R1,#+80
   \   0000013E   2000               MOVS     R0,R4
   \   00000140   C01C               ADDS     R0,R0,#+3
   \   00000142   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000144   000E               LSRS     R0,R0,#+24
   \   00000146   ........           BL       H_line
   6096                  for (char i=0; i<=3; i++) V_line((Tk+30)-9*i,70,10,2);  
   \   0000014A   0027               MOVS     R7,#+0
   \   0000014C   12E0               B        ??AnalogGraph_Paint_6
   \                     ??AnalogGraph_Paint_7:
   \   0000014E   0223               MOVS     R3,#+2
   \   00000150   0A22               MOVS     R2,#+10
   \   00000152   4621               MOVS     R1,#+70
   \   00000154   8C46               MOV      R12,R1
   \   00000156   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000158   240E               LSRS     R4,R4,#+24
   \   0000015A   2100               MOVS     R1,R4
   \   0000015C   1E31               ADDS     R1,R1,#+30
   \   0000015E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000160   3F0E               LSRS     R7,R7,#+24
   \   00000162   0920               MOVS     R0,#+9
   \   00000164   7843               MULS     R0,R7,R0
   \   00000166   081A               SUBS     R0,R1,R0
   \   00000168   6146               MOV      R1,R12
   \   0000016A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000016C   000E               LSRS     R0,R0,#+24
   \   0000016E   ........           BL       V_line
   \   00000172   7F1C               ADDS     R7,R7,#+1
   \                     ??AnalogGraph_Paint_6:
   \   00000174   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000176   3F0E               LSRS     R7,R7,#+24
   \   00000178   042F               CMP      R7,#+4
   \   0000017A   E8D3               BCC      ??AnalogGraph_Paint_7
   6097                  for (char i=0; i<LastChar; i++) Label(&Anal->Text[i],2,(Tk+30)-((LastChar-i)*9),71,1,8,1,127,1); 
   \   0000017C   0027               MOVS     R7,#+0
   \   0000017E   1AE0               B        ??AnalogGraph_Paint_8
   \                     ??AnalogGraph_Paint_9:
   \   00000180   82B0               SUB      SP,SP,#+8
   \   00000182   0120               MOVS     R0,#+1
   \   00000184   0090               STR      R0,[SP, #+0]
   \   00000186   7F21               MOVS     R1,#+127
   \   00000188   0120               MOVS     R0,#+1
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   0821               MOVS     R1,#+8
   \   0000018E   0120               MOVS     R0,#+1
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   4723               MOVS     R3,#+71
   \   00000194   B81B               SUBS     R0,R7,R6
   \   00000196   0921               MOVS     R1,#+9
   \   00000198   4843               MULS     R0,R1,R0
   \   0000019A   2218               ADDS     R2,R4,R0
   \   0000019C   1E32               ADDS     R2,R2,#+30
   \   0000019E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001A0   120E               LSRS     R2,R2,#+24
   \   000001A2   0221               MOVS     R1,#+2
   \   000001A4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001A6   3F0E               LSRS     R7,R7,#+24
   \   000001A8   0A98               LDR      R0,[SP, #+40]
   \   000001AA   C019               ADDS     R0,R0,R7
   \   000001AC   401C               ADDS     R0,R0,#+1
   \   000001AE   ........           BL       Label
   \   000001B2   06B0               ADD      SP,SP,#+24
   \   000001B4   7F1C               ADDS     R7,R7,#+1
   \                     ??AnalogGraph_Paint_8:
   \   000001B6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001B8   3F0E               LSRS     R7,R7,#+24
   \   000001BA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001BC   360E               LSRS     R6,R6,#+24
   \   000001BE   B742               CMP      R7,R6
   \   000001C0   DED3               BCC      ??AnalogGraph_Paint_9
   6098          
   6099                  H_line(Ak,70,4*6,2); 
   \   000001C2   0223               MOVS     R3,#+2
   \   000001C4   1822               MOVS     R2,#+24
   \   000001C6   4621               MOVS     R1,#+70
   \   000001C8   6846               MOV      R0,SP
   \   000001CA   0078               LDRB     R0,[R0, #+0]
   \   000001CC   ........           BL       H_line
   6100                  H_line(Ak,80,4*6,2); 
   \   000001D0   0223               MOVS     R3,#+2
   \   000001D2   1822               MOVS     R2,#+24
   \   000001D4   5021               MOVS     R1,#+80
   \   000001D6   6846               MOV      R0,SP
   \   000001D8   0078               LDRB     R0,[R0, #+0]
   \   000001DA   ........           BL       H_line
   6101                  for (char i=0; i<=6; i++) V_line(Ak+4*i,70,11,2); 
   \   000001DE   0024               MOVS     R4,#+0
   \   000001E0   0EE0               B        ??AnalogGraph_Paint_10
   \                     ??AnalogGraph_Paint_11:
   \   000001E2   0223               MOVS     R3,#+2
   \   000001E4   0B22               MOVS     R2,#+11
   \   000001E6   4621               MOVS     R1,#+70
   \   000001E8   6846               MOV      R0,SP
   \   000001EA   0078               LDRB     R0,[R0, #+0]
   \   000001EC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001EE   240E               LSRS     R4,R4,#+24
   \   000001F0   0426               MOVS     R6,#+4
   \   000001F2   6643               MULS     R6,R4,R6
   \   000001F4   8019               ADDS     R0,R0,R6
   \   000001F6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001F8   000E               LSRS     R0,R0,#+24
   \   000001FA   ........           BL       V_line
   \   000001FE   641C               ADDS     R4,R4,#+1
   \                     ??AnalogGraph_Paint_10:
   \   00000200   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000202   240E               LSRS     R4,R4,#+24
   \   00000204   072C               CMP      R4,#+7
   \   00000206   ECD3               BCC      ??AnalogGraph_Paint_11
   6102                  
   6103                  
   6104                  char LastPixel=29-SumOfPixel;
   \   00000208   1D20               MOVS     R0,#+29
   \   0000020A   6946               MOV      R1,SP
   \   0000020C   4978               LDRB     R1,[R1, #+1]
   \   0000020E   401A               SUBS     R0,R0,R1
   6105                  char MaxCharTmp=LastPixel/4;
   \   00000210   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000212   000E               LSRS     R0,R0,#+24
   \   00000214   0421               MOVS     R1,#+4
   \   00000216   ........           BL       __aeabi_idivmod
   \   0000021A   0400               MOVS     R4,R0
   6106                  if (MaxCharTmp>6) MaxCharTmp=6;
   \   0000021C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000021E   240E               LSRS     R4,R4,#+24
   \   00000220   072C               CMP      R4,#+7
   \   00000222   00D3               BCC      ??AnalogGraph_Paint_12
   \   00000224   0624               MOVS     R4,#+6
   6107                  for (char i=0; i<MaxCharTmp; i++)
   \                     ??AnalogGraph_Paint_12:
   \   00000226   0026               MOVS     R6,#+0
   \   00000228   2EE0               B        ??AnalogGraph_Paint_13
   \   0000022A   C046               Nop      
   \                     ??AnalogGraph_Paint_0:
   \   0000022C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000230   ........           DC32     `?<Constant "Analog ">`
   \   00000234   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   6108                  {
   6109                    V_line(Ak+4*i+1,71,9,1); 
   \                     ??AnalogGraph_Paint_14:
   \   00000238   0123               MOVS     R3,#+1
   \   0000023A   0922               MOVS     R2,#+9
   \   0000023C   4721               MOVS     R1,#+71
   \   0000023E   6846               MOV      R0,SP
   \   00000240   0078               LDRB     R0,[R0, #+0]
   \   00000242   0427               MOVS     R7,#+4
   \   00000244   7743               MULS     R7,R6,R7
   \   00000246   C019               ADDS     R0,R0,R7
   \   00000248   401C               ADDS     R0,R0,#+1
   \   0000024A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000024C   000E               LSRS     R0,R0,#+24
   \   0000024E   ........           BL       V_line
   6110                    V_line(Ak+4*i+2,71,9,1); 
   \   00000252   0123               MOVS     R3,#+1
   \   00000254   0922               MOVS     R2,#+9
   \   00000256   4721               MOVS     R1,#+71
   \   00000258   6846               MOV      R0,SP
   \   0000025A   0078               LDRB     R0,[R0, #+0]
   \   0000025C   0427               MOVS     R7,#+4
   \   0000025E   7743               MULS     R7,R6,R7
   \   00000260   C019               ADDS     R0,R0,R7
   \   00000262   801C               ADDS     R0,R0,#+2
   \   00000264   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000266   000E               LSRS     R0,R0,#+24
   \   00000268   ........           BL       V_line
   6111                    V_line(Ak+4*i+3,71,9,1); 
   \   0000026C   0123               MOVS     R3,#+1
   \   0000026E   0922               MOVS     R2,#+9
   \   00000270   4721               MOVS     R1,#+71
   \   00000272   6846               MOV      R0,SP
   \   00000274   0078               LDRB     R0,[R0, #+0]
   \   00000276   0427               MOVS     R7,#+4
   \   00000278   7743               MULS     R7,R6,R7
   \   0000027A   C019               ADDS     R0,R0,R7
   \   0000027C   C01C               ADDS     R0,R0,#+3
   \   0000027E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000280   000E               LSRS     R0,R0,#+24
   \   00000282   ........           BL       V_line
   6112                  }
   \   00000286   761C               ADDS     R6,R6,#+1
   \                     ??AnalogGraph_Paint_13:
   \   00000288   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000028A   360E               LSRS     R6,R6,#+24
   \   0000028C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000028E   240E               LSRS     R4,R4,#+24
   \   00000290   A642               CMP      R6,R4
   \   00000292   D1D3               BCC      ??AnalogGraph_Paint_14
   6113                  
   6114                   Button("Text",Tb,50,26,15);
   \   00000294   82B0               SUB      SP,SP,#+8
   \   00000296   0F20               MOVS     R0,#+15
   \   00000298   0090               STR      R0,[SP, #+0]
   \   0000029A   1A23               MOVS     R3,#+26
   \   0000029C   3222               MOVS     R2,#+50
   \   0000029E   02A8               ADD      R0,SP,#+8
   \   000002A0   8178               LDRB     R1,[R0, #+2]
   \   000002A2   6D48               LDR      R0,??AnalogGraph_Paint_2+0x10  ;; `?<Constant "Text">`
   \   000002A4   ........           BL       Button
   \   000002A8   02B0               ADD      SP,SP,#+8
   6115                  
   6116                  
   6117                  txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=0;
   \   000002AA   6846               MOV      R0,SP
   \   000002AC   4921               MOVS     R1,#+73
   \   000002AE   0171               STRB     R1,[R0, #+4]
   \   000002B0   01A8               ADD      R0,SP,#+4
   \   000002B2   6421               MOVS     R1,#+100
   \   000002B4   4170               STRB     R1,[R0, #+1]
   \   000002B6   01A8               ADD      R0,SP,#+4
   \   000002B8   3A21               MOVS     R1,#+58
   \   000002BA   8170               STRB     R1,[R0, #+2]
   \   000002BC   01A8               ADD      R0,SP,#+4
   \   000002BE   0021               MOVS     R1,#+0
   \   000002C0   C170               STRB     R1,[R0, #+3]
   6118                    Label(txt,0,Ab+4, 53 ,3,10,1,127,0); 
   \   000002C2   82B0               SUB      SP,SP,#+8
   \   000002C4   0020               MOVS     R0,#+0
   \   000002C6   0090               STR      R0,[SP, #+0]
   \   000002C8   7F21               MOVS     R1,#+127
   \   000002CA   0120               MOVS     R0,#+1
   \   000002CC   03B4               PUSH     {R0,R1}
   \   000002CE   0A21               MOVS     R1,#+10
   \   000002D0   0320               MOVS     R0,#+3
   \   000002D2   03B4               PUSH     {R0,R1}
   \   000002D4   3523               MOVS     R3,#+53
   \   000002D6   2A00               MOVS     R2,R5
   \   000002D8   121D               ADDS     R2,R2,#+4
   \   000002DA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000002DC   120E               LSRS     R2,R2,#+24
   \   000002DE   0021               MOVS     R1,#+0
   \   000002E0   07A8               ADD      R0,SP,#+28
   \   000002E2   ........           BL       Label
   \   000002E6   06B0               ADD      SP,SP,#+24
   6119                    txt[1]=0;txt[2]=0;
   \   000002E8   01A8               ADD      R0,SP,#+4
   \   000002EA   0021               MOVS     R1,#+0
   \   000002EC   4170               STRB     R1,[R0, #+1]
   \   000002EE   01A8               ADD      R0,SP,#+4
   \   000002F0   0021               MOVS     R1,#+0
   \   000002F2   8170               STRB     R1,[R0, #+2]
   6120                    char ind=CharToStr(Anal->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000002F4   0222               MOVS     R2,#+2
   \   000002F6   01A9               ADD      R1,SP,#+4
   \   000002F8   0498               LDR      R0,[SP, #+16]
   \   000002FA   0079               LDRB     R0,[R0, #+4]
   \   000002FC   ........           BL       CharToStr
   \   00000300   0200               MOVS     R2,R0
   6121                    Label(txt,0,Ab+19, 53 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000302   82B0               SUB      SP,SP,#+8
   \   00000304   0020               MOVS     R0,#+0
   \   00000306   0090               STR      R0,[SP, #+0]
   \   00000308   7F21               MOVS     R1,#+127
   \   0000030A   0120               MOVS     R0,#+1
   \   0000030C   03B4               PUSH     {R0,R1}
   \   0000030E   0821               MOVS     R1,#+8
   \   00000310   1000               MOVS     R0,R2
   \   00000312   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000314   000E               LSRS     R0,R0,#+24
   \   00000316   03B4               PUSH     {R0,R1}
   \   00000318   3523               MOVS     R3,#+53
   \   0000031A   2A00               MOVS     R2,R5
   \   0000031C   1332               ADDS     R2,R2,#+19
   \   0000031E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000320   120E               LSRS     R2,R2,#+24
   \   00000322   0021               MOVS     R1,#+0
   \   00000324   07A8               ADD      R0,SP,#+28
   \   00000326   ........           BL       Label
   \   0000032A   06B0               ADD      SP,SP,#+24
   6122                                
   6123                    txt[0]='<';txt[1]=0;
   \   0000032C   6846               MOV      R0,SP
   \   0000032E   3C21               MOVS     R1,#+60
   \   00000330   0171               STRB     R1,[R0, #+4]
   \   00000332   01A8               ADD      R0,SP,#+4
   \   00000334   0021               MOVS     R1,#+0
   \   00000336   4170               STRB     R1,[R0, #+1]
   6124                    Button(txt,Ab+1,35,13,15); 
   \   00000338   82B0               SUB      SP,SP,#+8
   \   0000033A   0F20               MOVS     R0,#+15
   \   0000033C   0090               STR      R0,[SP, #+0]
   \   0000033E   0D23               MOVS     R3,#+13
   \   00000340   2322               MOVS     R2,#+35
   \   00000342   2900               MOVS     R1,R5
   \   00000344   491C               ADDS     R1,R1,#+1
   \   00000346   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000348   090E               LSRS     R1,R1,#+24
   \   0000034A   03A8               ADD      R0,SP,#+12
   \   0000034C   ........           BL       Button
   \   00000350   02B0               ADD      SP,SP,#+8
   6125                    txt[0]='>';
   \   00000352   6846               MOV      R0,SP
   \   00000354   3E21               MOVS     R1,#+62
   \   00000356   0171               STRB     R1,[R0, #+4]
   6126                    Button(txt,Ab+16,35,13,15); 
   \   00000358   82B0               SUB      SP,SP,#+8
   \   0000035A   0F20               MOVS     R0,#+15
   \   0000035C   0090               STR      R0,[SP, #+0]
   \   0000035E   0D23               MOVS     R3,#+13
   \   00000360   2322               MOVS     R2,#+35
   \   00000362   2900               MOVS     R1,R5
   \   00000364   1031               ADDS     R1,R1,#+16
   \   00000366   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000368   090E               LSRS     R1,R1,#+24
   \   0000036A   03A8               ADD      R0,SP,#+12
   \   0000036C   ........           BL       Button
   \   00000370   02B0               ADD      SP,SP,#+8
   6127                    
   6128                    
   6129                    txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=0;
   \   00000372   6846               MOV      R0,SP
   \   00000374   5221               MOVS     R1,#+82
   \   00000376   0171               STRB     R1,[R0, #+4]
   \   00000378   01A8               ADD      R0,SP,#+4
   \   0000037A   6521               MOVS     R1,#+101
   \   0000037C   4170               STRB     R1,[R0, #+1]
   \   0000037E   01A8               ADD      R0,SP,#+4
   \   00000380   6721               MOVS     R1,#+103
   \   00000382   8170               STRB     R1,[R0, #+2]
   \   00000384   01A8               ADD      R0,SP,#+4
   \   00000386   3A21               MOVS     R1,#+58
   \   00000388   C170               STRB     R1,[R0, #+3]
   \   0000038A   01A8               ADD      R0,SP,#+4
   \   0000038C   0021               MOVS     R1,#+0
   \   0000038E   0171               STRB     R1,[R0, #+4]
   6130                    Label(txt,0,Ab+1, 23 ,4,10,1,127,0); 
   \   00000390   82B0               SUB      SP,SP,#+8
   \   00000392   0020               MOVS     R0,#+0
   \   00000394   0090               STR      R0,[SP, #+0]
   \   00000396   7F21               MOVS     R1,#+127
   \   00000398   0120               MOVS     R0,#+1
   \   0000039A   03B4               PUSH     {R0,R1}
   \   0000039C   0A21               MOVS     R1,#+10
   \   0000039E   0420               MOVS     R0,#+4
   \   000003A0   03B4               PUSH     {R0,R1}
   \   000003A2   1723               MOVS     R3,#+23
   \   000003A4   2A00               MOVS     R2,R5
   \   000003A6   521C               ADDS     R2,R2,#+1
   \   000003A8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000003AA   120E               LSRS     R2,R2,#+24
   \   000003AC   0021               MOVS     R1,#+0
   \   000003AE   07A8               ADD      R0,SP,#+28
   \   000003B0   ........           BL       Label
   \   000003B4   06B0               ADD      SP,SP,#+24
   6131                    txt[1]=0;txt[2]=0;
   \   000003B6   01A8               ADD      R0,SP,#+4
   \   000003B8   0021               MOVS     R1,#+0
   \   000003BA   4170               STRB     R1,[R0, #+1]
   \   000003BC   01A8               ADD      R0,SP,#+4
   \   000003BE   0021               MOVS     R1,#+0
   \   000003C0   8170               STRB     R1,[R0, #+2]
   6132                    
   6133                    ind=CharToStr(Anal->Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   000003C2   0222               MOVS     R2,#+2
   \   000003C4   01A9               ADD      R1,SP,#+4
   \   000003C6   0498               LDR      R0,[SP, #+16]
   \   000003C8   4079               LDRB     R0,[R0, #+5]
   \   000003CA   ........           BL       CharToStr
   \   000003CE   0200               MOVS     R2,R0
   6134                    Label(txt,0,Ab+21, 23 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000003D0   82B0               SUB      SP,SP,#+8
   \   000003D2   0020               MOVS     R0,#+0
   \   000003D4   0090               STR      R0,[SP, #+0]
   \   000003D6   7F21               MOVS     R1,#+127
   \   000003D8   0120               MOVS     R0,#+1
   \   000003DA   03B4               PUSH     {R0,R1}
   \   000003DC   0821               MOVS     R1,#+8
   \   000003DE   1000               MOVS     R0,R2
   \   000003E0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003E2   000E               LSRS     R0,R0,#+24
   \   000003E4   03B4               PUSH     {R0,R1}
   \   000003E6   1723               MOVS     R3,#+23
   \   000003E8   2A00               MOVS     R2,R5
   \   000003EA   1532               ADDS     R2,R2,#+21
   \   000003EC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000003EE   120E               LSRS     R2,R2,#+24
   \   000003F0   0021               MOVS     R1,#+0
   \   000003F2   07A8               ADD      R0,SP,#+28
   \   000003F4   ........           BL       Label
   \   000003F8   06B0               ADD      SP,SP,#+24
   6135                  
   6136                    txt[0]='<';txt[1]=0;
   \   000003FA   6846               MOV      R0,SP
   \   000003FC   3C21               MOVS     R1,#+60
   \   000003FE   0171               STRB     R1,[R0, #+4]
   \   00000400   01A8               ADD      R0,SP,#+4
   \   00000402   0021               MOVS     R1,#+0
   \   00000404   4170               STRB     R1,[R0, #+1]
   6137                    Button(txt,Ab+1,5,13,15); 
   \   00000406   82B0               SUB      SP,SP,#+8
   \   00000408   0F20               MOVS     R0,#+15
   \   0000040A   0090               STR      R0,[SP, #+0]
   \   0000040C   0D23               MOVS     R3,#+13
   \   0000040E   0522               MOVS     R2,#+5
   \   00000410   2900               MOVS     R1,R5
   \   00000412   491C               ADDS     R1,R1,#+1
   \   00000414   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000416   090E               LSRS     R1,R1,#+24
   \   00000418   03A8               ADD      R0,SP,#+12
   \   0000041A   ........           BL       Button
   \   0000041E   02B0               ADD      SP,SP,#+8
   6138                    txt[0]='>';
   \   00000420   6846               MOV      R0,SP
   \   00000422   3E21               MOVS     R1,#+62
   \   00000424   0171               STRB     R1,[R0, #+4]
   6139                    Button(txt,Ab+16,5,13,15); 
   \   00000426   82B0               SUB      SP,SP,#+8
   \   00000428   0F20               MOVS     R0,#+15
   \   0000042A   0090               STR      R0,[SP, #+0]
   \   0000042C   0D23               MOVS     R3,#+13
   \   0000042E   0522               MOVS     R2,#+5
   \   00000430   1035               ADDS     R5,R5,#+16
   \   00000432   2900               MOVS     R1,R5
   \   00000434   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000436   090E               LSRS     R1,R1,#+24
   \   00000438   03A8               ADD      R0,SP,#+12
   \   0000043A   ........           BL       Button
   \   0000043E   02B0               ADD      SP,SP,#+8
   6140                  
   6141                  
   6142                }
   \   00000440   05B0               ADD      SP,SP,#+20
   \   00000442   F0BC               POP      {R4-R7}
   \   00000444   01BC               POP      {R0}
   \   00000446   0047               BX       R0               ;; return
   \                     ??AnalogGraph_Paint_2:
   \   00000448   ........           DC32     `?<Constant "Text ">`
   \   0000044C   ........           DC32     `?<Constant "Analog">`
   \   00000450   D4FEFFFF           DC32     0xfffffed4
   \   00000454   ........           DC32     Arial_7
   \   00000458   ........           DC32     `?<Constant "Text">`
   6143          

   \                                 In section Debug.txt, align 4, keep-with-next
   6144          void AnalogGraph_Event(_Analog *Anal)
   6145                {  
   \                     AnalogGraph_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   6146                  
   6147                 //List_Paint(Speech[g_leng].ZmAnalog,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   6148                 char txt[8];
   6149                 
   6150          
   6151                  char Tb=4;
   \   00000004   0425               MOVS     R5,#+4
   6152                  char Ab=32;
   \   00000006   2026               MOVS     R6,#+32
   6153                  
   6154                  if (Anal->Flip)
   \   00000008   A079               LDRB     R0,[R4, #+6]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D0               BEQ      ??AnalogGraph_Event_0
   6155                  {
   6156                     Tb=33;
   \   0000000E   2125               MOVS     R5,#+33
   6157                     Ab=1;
   \   00000010   0126               MOVS     R6,#+1
   6158                  }
   6159                 
   6160                 
   6161                         //zdarzenie typu down "X"
   6162                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??AnalogGraph_Event_0:
   \   00000012   AD48               LDR      R0,??AnalogGraph_Event_1  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   2F28               CMP      R0,#+47
   \   0000001A   38DB               BLT      ??AnalogGraph_Event_2
   \   0000001C   AA48               LDR      R0,??AnalogGraph_Event_1  ;; X_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   3F28               CMP      R0,#+63
   \   00000024   33DA               BGE      ??AnalogGraph_Event_2
   \   00000026   A948               LDR      R0,??AnalogGraph_Event_1+0x4  ;; Y_down
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   405E               LDRSH    R0,[R0, R1]
   \   0000002C   7128               CMP      R0,#+113
   \   0000002E   2EDB               BLT      ??AnalogGraph_Event_2
   \   00000030   A648               LDR      R0,??AnalogGraph_Event_1+0x4  ;; Y_down
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   405E               LDRSH    R0,[R0, R1]
   \   00000036   7F28               CMP      R0,#+127
   \   00000038   29DA               BGE      ??AnalogGraph_Event_2
   6163                  {
   6164                    //MenuPaint();
   6165                    H_line(49,114,10,0);
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7221               MOVS     R1,#+114
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       H_line
   6166                    H_line(49,123,10,0); 
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7B21               MOVS     R1,#+123
   \   0000004C   3120               MOVS     R0,#+49
   \   0000004E   ........           BL       H_line
   6167                    V_line(49,114,10,0); 
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   0A22               MOVS     R2,#+10
   \   00000056   7221               MOVS     R1,#+114
   \   00000058   3120               MOVS     R0,#+49
   \   0000005A   ........           BL       V_line
   6168                    V_line(58,114,10,0); 
   \   0000005E   0023               MOVS     R3,#+0
   \   00000060   0A22               MOVS     R2,#+10
   \   00000062   7221               MOVS     R1,#+114
   \   00000064   3A20               MOVS     R0,#+58
   \   00000066   ........           BL       V_line
   6169                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000006A   9948               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000070   000E               LSRS     R0,R0,#+24
   \   00000072   0028               CMP      R0,#+0
   \   00000074   0BD1               BNE      ??AnalogGraph_Event_2
   \   00000076   9748               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   00000078   8021               MOVS     R1,#+128
   \   0000007A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000007C   0160               STR      R1,[R0, #+0]
   \   0000007E   964A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   00000080   9648               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   00000082   03C8               LDM      R0!,{R0,R1}
   \   00000084   0023               MOVS     R3,#+0
   \   00000086   0830               ADDS     R0,R0,#+8
   \   00000088   5941               ADCS     R1,R1,R3
   \   0000008A   03C2               STM      R2!,{R0,R1}
   \   0000008C   083A               SUBS     R2,R2,#+8
   6170                    
   6171                  }
   6172            
   6173                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??AnalogGraph_Event_2:
   \   0000008E   9448               LDR      R0,??AnalogGraph_Event_1+0x18  ;; X_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   2F28               CMP      R0,#+47
   \   00000096   2ADB               BLT      ??AnalogGraph_Event_3
   \   00000098   9148               LDR      R0,??AnalogGraph_Event_1+0x18  ;; X_up
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   405E               LDRSH    R0,[R0, R1]
   \   0000009E   3F28               CMP      R0,#+63
   \   000000A0   25DA               BGE      ??AnalogGraph_Event_3
   \   000000A2   9048               LDR      R0,??AnalogGraph_Event_1+0x1C  ;; Y_up
   \   000000A4   0021               MOVS     R1,#+0
   \   000000A6   405E               LDRSH    R0,[R0, R1]
   \   000000A8   7128               CMP      R0,#+113
   \   000000AA   20DB               BLT      ??AnalogGraph_Event_3
   \   000000AC   8D48               LDR      R0,??AnalogGraph_Event_1+0x1C  ;; Y_up
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   405E               LDRSH    R0,[R0, R1]
   \   000000B2   7F28               CMP      R0,#+127
   \   000000B4   1BDA               BGE      ??AnalogGraph_Event_3
   6174                  {
   6175                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000B6   8648               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   000000B8   0078               LDRB     R0,[R0, #+0]
   \   000000BA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   0028               CMP      R0,#+0
   \   000000C0   0BD1               BNE      ??AnalogGraph_Event_4
   \   000000C2   8448               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   000000C4   8021               MOVS     R1,#+128
   \   000000C6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000C8   0160               STR      R1,[R0, #+0]
   \   000000CA   834A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   000000CC   8348               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   000000CE   03C8               LDM      R0!,{R0,R1}
   \   000000D0   0023               MOVS     R3,#+0
   \   000000D2   0830               ADDS     R0,R0,#+8
   \   000000D4   5941               ADCS     R1,R1,R3
   \   000000D6   03C2               STM      R2!,{R0,R1}
   \   000000D8   083A               SUBS     R2,R2,#+8
   6176                    MenuLevel=(MenuLevel/10);
   \                     ??AnalogGraph_Event_4:
   \   000000DA   8348               LDR      R0,??AnalogGraph_Event_1+0x20  ;; MenuLevel
   \   000000DC   0068               LDR      R0,[R0, #+0]
   \   000000DE   0A21               MOVS     R1,#+10
   \   000000E0   ........           BL       __aeabi_idivmod
   \   000000E4   8049               LDR      R1,??AnalogGraph_Event_1+0x20  ;; MenuLevel
   \   000000E6   0860               STR      R0,[R1, #+0]
   6177                    MenuPaint();
   \   000000E8   ........           BL       MenuPaint
   \   000000EC   E7E0               B        ??AnalogGraph_Event_5
   6178                  }  
   6179                  else
   6180                  {
   6181                    
   6182                    char ButtonDownNr=0;
   \                     ??AnalogGraph_Event_3:
   \   000000EE   0027               MOVS     R7,#+0
   6183                    
   6184                    
   6185                    if (Button("Text",Tb,50,26,15)==1) ButtonDownNr=1;
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   0F20               MOVS     R0,#+15
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   1A23               MOVS     R3,#+26
   \   000000F8   3222               MOVS     R2,#+50
   \   000000FA   2900               MOVS     R1,R5
   \   000000FC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000FE   090E               LSRS     R1,R1,#+24
   \   00000100   7A48               LDR      R0,??AnalogGraph_Event_1+0x24  ;; `?<Constant "Text">`
   \   00000102   ........           BL       Button
   \   00000106   02B0               ADD      SP,SP,#+8
   \   00000108   0128               CMP      R0,#+1
   \   0000010A   00D1               BNE      ??AnalogGraph_Event_6
   \   0000010C   0127               MOVS     R7,#+1
   6186                    txt[0]='>'; txt[1]=0; 
   \                     ??AnalogGraph_Event_6:
   \   0000010E   6846               MOV      R0,SP
   \   00000110   3E21               MOVS     R1,#+62
   \   00000112   0170               STRB     R1,[R0, #+0]
   \   00000114   6846               MOV      R0,SP
   \   00000116   0021               MOVS     R1,#+0
   \   00000118   4170               STRB     R1,[R0, #+1]
   6187                    if (Button(txt,Ab+16,35,13,15)==1) ButtonDownNr=2;
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   0F20               MOVS     R0,#+15
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   0D23               MOVS     R3,#+13
   \   00000122   2322               MOVS     R2,#+35
   \   00000124   3100               MOVS     R1,R6
   \   00000126   1031               ADDS     R1,R1,#+16
   \   00000128   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000012A   090E               LSRS     R1,R1,#+24
   \   0000012C   02A8               ADD      R0,SP,#+8
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   \   00000134   0128               CMP      R0,#+1
   \   00000136   00D1               BNE      ??AnalogGraph_Event_7
   \   00000138   0227               MOVS     R7,#+2
   6188                    txt[0]='<';txt[1]=0;
   \                     ??AnalogGraph_Event_7:
   \   0000013A   6846               MOV      R0,SP
   \   0000013C   3C21               MOVS     R1,#+60
   \   0000013E   0170               STRB     R1,[R0, #+0]
   \   00000140   6846               MOV      R0,SP
   \   00000142   0021               MOVS     R1,#+0
   \   00000144   4170               STRB     R1,[R0, #+1]
   6189                    if (Button(txt,Ab+1,35,13,15)==1) ButtonDownNr=3;
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   0F20               MOVS     R0,#+15
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   0D23               MOVS     R3,#+13
   \   0000014E   2322               MOVS     R2,#+35
   \   00000150   3100               MOVS     R1,R6
   \   00000152   491C               ADDS     R1,R1,#+1
   \   00000154   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000156   090E               LSRS     R1,R1,#+24
   \   00000158   02A8               ADD      R0,SP,#+8
   \   0000015A   ........           BL       Button
   \   0000015E   02B0               ADD      SP,SP,#+8
   \   00000160   0128               CMP      R0,#+1
   \   00000162   00D1               BNE      ??AnalogGraph_Event_8
   \   00000164   0327               MOVS     R7,#+3
   6190                    txt[0]='>'; txt[1]=0; 
   \                     ??AnalogGraph_Event_8:
   \   00000166   6846               MOV      R0,SP
   \   00000168   3E21               MOVS     R1,#+62
   \   0000016A   0170               STRB     R1,[R0, #+0]
   \   0000016C   6846               MOV      R0,SP
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   4170               STRB     R1,[R0, #+1]
   6191                    if (Button(txt,Ab+16,5,13,15)==1) ButtonDownNr=4;
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0F20               MOVS     R0,#+15
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   0D23               MOVS     R3,#+13
   \   0000017A   0522               MOVS     R2,#+5
   \   0000017C   3100               MOVS     R1,R6
   \   0000017E   1031               ADDS     R1,R1,#+16
   \   00000180   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000182   090E               LSRS     R1,R1,#+24
   \   00000184   02A8               ADD      R0,SP,#+8
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   \   0000018C   0128               CMP      R0,#+1
   \   0000018E   00D1               BNE      ??AnalogGraph_Event_9
   \   00000190   0427               MOVS     R7,#+4
   6192                    txt[0]='<';txt[1]=0;
   \                     ??AnalogGraph_Event_9:
   \   00000192   6846               MOV      R0,SP
   \   00000194   3C21               MOVS     R1,#+60
   \   00000196   0170               STRB     R1,[R0, #+0]
   \   00000198   6846               MOV      R0,SP
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   4170               STRB     R1,[R0, #+1]
   6193                    if (Button(txt,Ab+1,5,13,15)==1) ButtonDownNr=5;
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0F20               MOVS     R0,#+15
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   0D23               MOVS     R3,#+13
   \   000001A6   0522               MOVS     R2,#+5
   \   000001A8   761C               ADDS     R6,R6,#+1
   \   000001AA   3100               MOVS     R1,R6
   \   000001AC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001AE   090E               LSRS     R1,R1,#+24
   \   000001B0   02A8               ADD      R0,SP,#+8
   \   000001B2   ........           BL       Button
   \   000001B6   02B0               ADD      SP,SP,#+8
   \   000001B8   0128               CMP      R0,#+1
   \   000001BA   00D1               BNE      ??AnalogGraph_Event_10
   \   000001BC   0527               MOVS     R7,#+5
   6194                    if (Button ("<>",24,96,15,11)==1) ButtonDownNr=6;
   \                     ??AnalogGraph_Event_10:
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   0B20               MOVS     R0,#+11
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   0F23               MOVS     R3,#+15
   \   000001C6   6022               MOVS     R2,#+96
   \   000001C8   1821               MOVS     R1,#+24
   \   000001CA   49A0               ADR      R0,??AnalogGraph_Event_1+0x28  ;; 0x3C, 0x3E, 0x00, 0x00
   \   000001CC   ........           BL       Button
   \   000001D0   02B0               ADD      SP,SP,#+8
   \   000001D2   0128               CMP      R0,#+1
   \   000001D4   00D1               BNE      ??AnalogGraph_Event_11
   \   000001D6   0627               MOVS     R7,#+6
   6195                    
   6196                    if (ButtonDownNr==1)
   \                     ??AnalogGraph_Event_11:
   \   000001D8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001DA   3F0E               LSRS     R7,R7,#+24
   \   000001DC   012F               CMP      R7,#+1
   \   000001DE   12D1               BNE      ??AnalogGraph_Event_12
   6197                    {
   6198          
   6199                      ProgramChange=1;
   \   000001E0   4448               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; ProgramChange
   \   000001E2   0121               MOVS     R1,#+1
   \   000001E4   0170               STRB     R1,[R0, #+0]
   6200                      TextToChangeLength=3;
   \   000001E6   4448               LDR      R0,??AnalogGraph_Event_1+0x30  ;; TextToChangeLength
   \   000001E8   0321               MOVS     R1,#+3
   \   000001EA   0170               STRB     R1,[R0, #+0]
   6201                      TextToChange=Anal->Text;
   \   000001EC   4348               LDR      R0,??AnalogGraph_Event_1+0x34  ;; TextToChange
   \   000001EE   2100               MOVS     R1,R4
   \   000001F0   491C               ADDS     R1,R1,#+1
   \   000001F2   0160               STR      R1,[R0, #+0]
   6202                      MenuLevel=(MenuLevel*10+1); 
   \   000001F4   3C48               LDR      R0,??AnalogGraph_Event_1+0x20  ;; MenuLevel
   \   000001F6   3C49               LDR      R1,??AnalogGraph_Event_1+0x20  ;; MenuLevel
   \   000001F8   0968               LDR      R1,[R1, #+0]
   \   000001FA   0A22               MOVS     R2,#+10
   \   000001FC   5143               MULS     R1,R2,R1
   \   000001FE   491C               ADDS     R1,R1,#+1
   \   00000200   0160               STR      R1,[R0, #+0]
   6203                      MenuPaint(); 
   \   00000202   ........           BL       MenuPaint
   6204                    }
   6205                    
   6206                    
   6207                    if (ButtonDownNr==2) 
   \                     ??AnalogGraph_Event_12:
   \   00000206   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000208   3F0E               LSRS     R7,R7,#+24
   \   0000020A   022F               CMP      R7,#+2
   \   0000020C   10D1               BNE      ??AnalogGraph_Event_13
   6208                    {
   6209                      
   6210                        ProgramChange=1;
   \   0000020E   3948               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; ProgramChange
   \   00000210   0121               MOVS     R1,#+1
   \   00000212   0170               STRB     R1,[R0, #+0]
   6211                        if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;} 
   \   00000214   2079               LDRB     R0,[R4, #+4]
   \   00000216   401C               ADDS     R0,R0,#+1
   \   00000218   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   0000021A   000C               LSRS     R0,R0,#+16
   \   0000021C   2328               CMP      R0,#+35
   \   0000021E   03D2               BCS      ??AnalogGraph_Event_14
   \   00000220   2079               LDRB     R0,[R4, #+4]
   \   00000222   401C               ADDS     R0,R0,#+1
   \   00000224   2071               STRB     R0,[R4, #+4]
   \   00000226   01E0               B        ??AnalogGraph_Event_15
   \                     ??AnalogGraph_Event_14:
   \   00000228   0020               MOVS     R0,#+0
   \   0000022A   2071               STRB     R0,[R4, #+4]
   6212                        MenuPaint(); 
   \                     ??AnalogGraph_Event_15:
   \   0000022C   ........           BL       MenuPaint
   6213                    }
   6214                     
   6215                    
   6216                    
   6217                    if (ButtonDownNr==3) 
   \                     ??AnalogGraph_Event_13:
   \   00000230   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000232   3F0E               LSRS     R7,R7,#+24
   \   00000234   032F               CMP      R7,#+3
   \   00000236   0DD1               BNE      ??AnalogGraph_Event_16
   6218                    {
   6219                       ProgramChange=1;
   \   00000238   2E48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; ProgramChange
   \   0000023A   0121               MOVS     R1,#+1
   \   0000023C   0170               STRB     R1,[R0, #+0]
   6220                       if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;}
   \   0000023E   2079               LDRB     R0,[R4, #+4]
   \   00000240   0128               CMP      R0,#+1
   \   00000242   03D3               BCC      ??AnalogGraph_Event_17
   \   00000244   2079               LDRB     R0,[R4, #+4]
   \   00000246   401E               SUBS     R0,R0,#+1
   \   00000248   2071               STRB     R0,[R4, #+4]
   \   0000024A   01E0               B        ??AnalogGraph_Event_18
   \                     ??AnalogGraph_Event_17:
   \   0000024C   2320               MOVS     R0,#+35
   \   0000024E   2071               STRB     R0,[R4, #+4]
   6221                      MenuPaint(); 
   \                     ??AnalogGraph_Event_18:
   \   00000250   ........           BL       MenuPaint
   6222                    }
   6223                    
   6224                    
   6225                    if (ButtonDownNr==4) 
   \                     ??AnalogGraph_Event_16:
   \   00000254   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000256   3F0E               LSRS     R7,R7,#+24
   \   00000258   042F               CMP      R7,#+4
   \   0000025A   10D1               BNE      ??AnalogGraph_Event_19
   6226                    {
   6227                      
   6228                        ProgramChange=1;
   \   0000025C   2548               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; ProgramChange
   \   0000025E   0121               MOVS     R1,#+1
   \   00000260   0170               STRB     R1,[R0, #+0]
   6229                        if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;} 
   \   00000262   6079               LDRB     R0,[R4, #+5]
   \   00000264   401C               ADDS     R0,R0,#+1
   \   00000266   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000268   000C               LSRS     R0,R0,#+16
   \   0000026A   0B28               CMP      R0,#+11
   \   0000026C   03D2               BCS      ??AnalogGraph_Event_20
   \   0000026E   6079               LDRB     R0,[R4, #+5]
   \   00000270   401C               ADDS     R0,R0,#+1
   \   00000272   6071               STRB     R0,[R4, #+5]
   \   00000274   01E0               B        ??AnalogGraph_Event_21
   \                     ??AnalogGraph_Event_20:
   \   00000276   0120               MOVS     R0,#+1
   \   00000278   6071               STRB     R0,[R4, #+5]
   6230                        MenuPaint(); 
   \                     ??AnalogGraph_Event_21:
   \   0000027A   ........           BL       MenuPaint
   6231                    }
   6232                     
   6233                    
   6234                    
   6235                    if (ButtonDownNr==5) 
   \                     ??AnalogGraph_Event_19:
   \   0000027E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000280   3F0E               LSRS     R7,R7,#+24
   \   00000282   052F               CMP      R7,#+5
   \   00000284   0DD1               BNE      ??AnalogGraph_Event_22
   6236                    {
   6237                       ProgramChange=1;
   \   00000286   1B48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; ProgramChange
   \   00000288   0121               MOVS     R1,#+1
   \   0000028A   0170               STRB     R1,[R0, #+0]
   6238                       if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;}
   \   0000028C   6079               LDRB     R0,[R4, #+5]
   \   0000028E   0228               CMP      R0,#+2
   \   00000290   03D3               BCC      ??AnalogGraph_Event_23
   \   00000292   6079               LDRB     R0,[R4, #+5]
   \   00000294   401E               SUBS     R0,R0,#+1
   \   00000296   6071               STRB     R0,[R4, #+5]
   \   00000298   01E0               B        ??AnalogGraph_Event_24
   \                     ??AnalogGraph_Event_23:
   \   0000029A   0B20               MOVS     R0,#+11
   \   0000029C   6071               STRB     R0,[R4, #+5]
   6239                      MenuPaint(); 
   \                     ??AnalogGraph_Event_24:
   \   0000029E   ........           BL       MenuPaint
   6240                    }
   6241                    
   6242                    if (ButtonDownNr==6) 
   \                     ??AnalogGraph_Event_22:
   \   000002A2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002A4   3F0E               LSRS     R7,R7,#+24
   \   000002A6   062F               CMP      R7,#+6
   \   000002A8   09D1               BNE      ??AnalogGraph_Event_5
   6243                    {
   6244                       if (Anal->Flip) Anal->Flip=0; else Anal->Flip=1;
   \   000002AA   A079               LDRB     R0,[R4, #+6]
   \   000002AC   411E               SUBS     R1,R0,#+1
   \   000002AE   8941               SBCS     R1,R1,R1
   \   000002B0   C90F               LSRS     R1,R1,#+31
   \   000002B2   A171               STRB     R1,[R4, #+6]
   6245                       ProgramChange=1;
   \   000002B4   0F48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; ProgramChange
   \   000002B6   0121               MOVS     R1,#+1
   \   000002B8   0170               STRB     R1,[R0, #+0]
   6246          
   6247                      MenuPaint(); 
   \   000002BA   ........           BL       MenuPaint
   6248                    }
   6249                    
   6250                  }
   6251                 
   6252                 
   6253                }
   \                     ??AnalogGraph_Event_5:
   \   000002BE   03B0               ADD      SP,SP,#+12
   \   000002C0   F0BC               POP      {R4-R7}
   \   000002C2   01BC               POP      {R0}
   \   000002C4   0047               BX       R0               ;; return
   \   000002C6   C046               Nop      
   \                     ??AnalogGraph_Event_1:
   \   000002C8   ........           DC32     X_down
   \   000002CC   ........           DC32     Y_down
   \   000002D0   E9D71300           DC32     0x13d7e9
   \   000002D4   30F4FFFF           DC32     0xfffff430
   \   000002D8   ........           DC32     ButtonBipCounter
   \   000002DC   ........           DC32     g_counter
   \   000002E0   ........           DC32     X_up
   \   000002E4   ........           DC32     Y_up
   \   000002E8   ........           DC32     MenuLevel
   \   000002EC   ........           DC32     `?<Constant "Text">`
   \   000002F0   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   \   000002F4   ........           DC32     ProgramChange
   \   000002F8   ........           DC32     TextToChangeLength
   \   000002FC   ........           DC32     TextToChange
   6254          
   6255          
   6256          
   6257                
   6258                
   6259          //opcje  **************************************************************************************************************

   \                                 In section .rodata, align 4
   6260             const char ProgStopStartLabel[2][15]=
   \                     ProgStopStartLabel:
   \   00000000   50726F677261       DC8 "Program stop"
   \              6D2073746F70
   \              00          
   \   0000000D   0000               DC8 0, 0
   \   0000000F   50726F677261       DC8 "Program start "
   \              6D2073746172
   \              742000      
   \   0000001E   0000               DC8 0, 0
   6261             {
   6262                "Program stop",
   6263                "Program start ",
   6264             };
   6265          
   6266          
   6267                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6268                void Options_Paint(void)
   6269                {  
   \                     Options_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6270                  
   6271          
   6272                  #ifdef _ADMINISTRATOR_
   6273                       List_Paint(Speech[g_leng].Opcje,5,15,0,0,3,Speech[g_leng].RestartSter, ProgStopStartLabel[g_Stop_Program],Speech[g_leng].Zmienne ,"Tester", "Zmiana ID",0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   1948               LDR      R0,??Options_Paint_0  ;; `?<Constant "Zmiana ID">`
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1949               LDR      R1,??Options_Paint_0+0x4  ;; `?<Constant "Tester">`
   \   00000010   1948               LDR      R0,??Options_Paint_0+0x8  ;; 0xa6e
   \   00000012   1A4A               LDR      R2,??Options_Paint_0+0xC  ;; g_leng
   \   00000014   1268               LDR      R2,[R2, #+0]
   \   00000016   1A4B               LDR      R3,??Options_Paint_0+0x10  ;; 0xa7d
   \   00000018   5A43               MULS     R2,R3,R2
   \   0000001A   1A4B               LDR      R3,??Options_Paint_0+0x14  ;; Speech
   \   0000001C   9A18               ADDS     R2,R3,R2
   \   0000001E   1018               ADDS     R0,R2,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   1948               LDR      R0,??Options_Paint_0+0x18  ;; g_Stop_Program
   \   00000024   0078               LDRB     R0,[R0, #+0]
   \   00000026   0F21               MOVS     R1,#+15
   \   00000028   4843               MULS     R0,R1,R0
   \   0000002A   1849               LDR      R1,??Options_Paint_0+0x1C  ;; ProgStopStartLabel
   \   0000002C   0918               ADDS     R1,R1,R0
   \   0000002E   F020               MOVS     R0,#+240
   \   00000030   4000               LSLS     R0,R0,#+1        ;; #+480
   \   00000032   124A               LDR      R2,??Options_Paint_0+0xC  ;; g_leng
   \   00000034   1268               LDR      R2,[R2, #+0]
   \   00000036   124B               LDR      R3,??Options_Paint_0+0x10  ;; 0xa7d
   \   00000038   5A43               MULS     R2,R3,R2
   \   0000003A   124B               LDR      R3,??Options_Paint_0+0x14  ;; Speech
   \   0000003C   9A18               ADDS     R2,R3,R2
   \   0000003E   1018               ADDS     R0,R2,R0
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   0321               MOVS     R1,#+3
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   0023               MOVS     R3,#+0
   \   0000004A   0F22               MOVS     R2,#+15
   \   0000004C   0521               MOVS     R1,#+5
   \   0000004E   8720               MOVS     R0,#+135
   \   00000050   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000052   0A4C               LDR      R4,??Options_Paint_0+0xC  ;; g_leng
   \   00000054   2468               LDR      R4,[R4, #+0]
   \   00000056   0A4D               LDR      R5,??Options_Paint_0+0x10  ;; 0xa7d
   \   00000058   6C43               MULS     R4,R5,R4
   \   0000005A   0A4D               LDR      R5,??Options_Paint_0+0x14  ;; Speech
   \   0000005C   2C19               ADDS     R4,R5,R4
   \   0000005E   2018               ADDS     R0,R4,R0
   \   00000060   ........           BL       List_Paint
   \   00000064   0AB0               ADD      SP,SP,#+40
   6274                  #else
   6275                    #ifdef _TESTER_
   6276                          List_Paint(Speech[g_leng].Opcje,4,15,0,0,3,Speech[g_leng].RestartSter, ProgStopStartLabel[g_Stop_Program], Speech[g_leng].Zmienne, "Tester",0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   6277                    #else
   6278                          List_Paint(Speech[g_leng].Opcje,3,15,0,0,3,Speech[g_leng].RestartSter, ProgStopStartLabel[g_Stop_Program],Speech[g_leng].Zmienne,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   6279                    #endif
   6280                  #endif
   6281          
   6282                  
   6283                  
   6284                  
   6285              
   6286                }//________________________________________________________________________
   \   00000066   01B0               ADD      SP,SP,#+4
   \   00000068   30BC               POP      {R4,R5}
   \   0000006A   01BC               POP      {R0}
   \   0000006C   0047               BX       R0               ;; return
   \   0000006E   C046               Nop      
   \                     ??Options_Paint_0:
   \   00000070   ........           DC32     `?<Constant "Zmiana ID">`
   \   00000074   ........           DC32     `?<Constant "Tester">`
   \   00000078   6E0A0000           DC32     0xa6e
   \   0000007C   ........           DC32     g_leng
   \   00000080   7D0A0000           DC32     0xa7d
   \   00000084   ........           DC32     Speech
   \   00000088   ........           DC32     g_Stop_Program
   \   0000008C   ........           DC32     ProgStopStartLabel
   6287          
   6288              
   6289          
   6290                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6291                void Options_Event(void)
   6292                {
   \                     Options_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   6293                  int ans;
   6294                  #ifdef _ADMINISTRATOR_
   6295                    ans= List_Event(X_up, Y_up, X_down, Y_down, 5 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0520               MOVS     R0,#+5
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   3648               LDR      R0,??Options_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   3548               LDR      R0,??Options_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   3548               LDR      R0,??Options_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   3448               LDR      R0,??Options_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0400               MOVS     R4,R0
   6296                  #else
   6297                    #ifdef _TESTER_
   6298                      ans= List_Event(X_up, Y_up, X_down, Y_down, 4 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   6299                    #else  
   6300                      ans= List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   6301                    #endif
   6302                  #endif
   6303          
   6304                  if (ans)
   \   0000002E   002C               CMP      R4,#+0
   \   00000030   56D0               BEQ      ??Options_Event_1
   6305                    {
   6306                      
   6307                        if (ans==1) MenuLevel=(MenuLevel*10+ans);
   \   00000032   012C               CMP      R4,#+1
   \   00000034   06D1               BNE      ??Options_Event_2
   \   00000036   3048               LDR      R0,??Options_Event_0+0x10  ;; MenuLevel
   \   00000038   2F49               LDR      R1,??Options_Event_0+0x10  ;; MenuLevel
   \   0000003A   0968               LDR      R1,[R1, #+0]
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   5143               MULS     R1,R2,R1
   \   00000040   0919               ADDS     R1,R1,R4
   \   00000042   0160               STR      R1,[R0, #+0]
   6308                        if (ans==2) 
   \                     ??Options_Event_2:
   \   00000044   022C               CMP      R4,#+2
   \   00000046   0ED1               BNE      ??Options_Event_3
   6309                            {if (g_Stop_Program==0) 
   \   00000048   2C48               LDR      R0,??Options_Event_0+0x14  ;; g_Stop_Program
   \   0000004A   0078               LDRB     R0,[R0, #+0]
   \   0000004C   0028               CMP      R0,#+0
   \   0000004E   05D1               BNE      ??Options_Event_4
   6310                              {g_Stop_Program=1; MenuPaint();} else {g_Stop_Program=0; MenuPaint();}
   \   00000050   2A48               LDR      R0,??Options_Event_0+0x14  ;; g_Stop_Program
   \   00000052   0121               MOVS     R1,#+1
   \   00000054   0170               STRB     R1,[R0, #+0]
   \   00000056   ........           BL       MenuPaint
   \   0000005A   04E0               B        ??Options_Event_3
   \                     ??Options_Event_4:
   \   0000005C   2748               LDR      R0,??Options_Event_0+0x14  ;; g_Stop_Program
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   0170               STRB     R1,[R0, #+0]
   \   00000062   ........           BL       MenuPaint
   6311                            }
   6312                        #if (_ADMINISTRATOR_) || (_TESTER_)
   6313                        if (ans==3)
   \                     ??Options_Event_3:
   \   00000066   032C               CMP      R4,#+3
   \   00000068   06D1               BNE      ??Options_Event_5
   6314                            {
   6315                              MenuLevel=(MenuLevel*10+ans);
   \   0000006A   2348               LDR      R0,??Options_Event_0+0x10  ;; MenuLevel
   \   0000006C   2249               LDR      R1,??Options_Event_0+0x10  ;; MenuLevel
   \   0000006E   0968               LDR      R1,[R1, #+0]
   \   00000070   0A22               MOVS     R2,#+10
   \   00000072   5143               MULS     R1,R2,R1
   \   00000074   0919               ADDS     R1,R1,R4
   \   00000076   0160               STR      R1,[R0, #+0]
   6316                            }
   6317                        if (ans==4)
   \                     ??Options_Event_5:
   \   00000078   042C               CMP      R4,#+4
   \   0000007A   14D1               BNE      ??Options_Event_6
   6318                            {
   6319                               //NeuronIdToChange   =3100008;
   6320                               NeuronIdToChange   =9999999;
   \   0000007C   2048               LDR      R0,??Options_Event_0+0x18  ;; NeuronIdToChange
   \   0000007E   2149               LDR      R1,??Options_Event_0+0x1C  ;; 0x98967f
   \   00000080   0160               STR      R1,[R0, #+0]
   6321                               ChangeingIdMode=1;
   \   00000082   2148               LDR      R0,??Options_Event_0+0x20  ;; ChangeingIdMode
   \   00000084   0121               MOVS     R1,#+1
   \   00000086   0170               STRB     R1,[R0, #+0]
   6322                                NeuronNrChange=1;
   \   00000088   2048               LDR      R0,??Options_Event_0+0x24  ;; NeuronNrChange
   \   0000008A   0121               MOVS     R1,#+1
   \   0000008C   0170               STRB     R1,[R0, #+0]
   6323                                AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   0000008E   0022               MOVS     R2,#+0
   \   00000090   0121               MOVS     R1,#+1
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   ........           BL       AddRfTask
   6324                               MenuLevel=(MenuLevel*10+ans);
   \   00000098   1748               LDR      R0,??Options_Event_0+0x10  ;; MenuLevel
   \   0000009A   1749               LDR      R1,??Options_Event_0+0x10  ;; MenuLevel
   \   0000009C   0968               LDR      R1,[R1, #+0]
   \   0000009E   0A22               MOVS     R2,#+10
   \   000000A0   5143               MULS     R1,R2,R1
   \   000000A2   0919               ADDS     R1,R1,R4
   \   000000A4   0160               STR      R1,[R0, #+0]
   6325                            }
   6326                        #endif
   6327                        #ifdef _ADMINISTRATOR_
   6328                        if (ans==5)
   \                     ??Options_Event_6:
   \   000000A6   052C               CMP      R4,#+5
   \   000000A8   0FD1               BNE      ??Options_Event_7
   6329                            {
   6330                              NeuronNrChange=1;
   \   000000AA   1848               LDR      R0,??Options_Event_0+0x24  ;; NeuronNrChange
   \   000000AC   0121               MOVS     R1,#+1
   \   000000AE   0170               STRB     R1,[R0, #+0]
   6331                               NeuronIdToChange   =9999999;
   \   000000B0   1348               LDR      R0,??Options_Event_0+0x18  ;; NeuronIdToChange
   \   000000B2   1449               LDR      R1,??Options_Event_0+0x1C  ;; 0x98967f
   \   000000B4   0160               STR      R1,[R0, #+0]
   6332                               NeuronIdAfterChange=3100000;
   \   000000B6   1648               LDR      R0,??Options_Event_0+0x28  ;; NeuronIdAfterChange
   \   000000B8   1649               LDR      R1,??Options_Event_0+0x2C  ;; 0x2f4d60
   \   000000BA   0160               STR      R1,[R0, #+0]
   6333                               MenuLevel=(MenuLevel*10+ans);
   \   000000BC   0E48               LDR      R0,??Options_Event_0+0x10  ;; MenuLevel
   \   000000BE   0E49               LDR      R1,??Options_Event_0+0x10  ;; MenuLevel
   \   000000C0   0968               LDR      R1,[R1, #+0]
   \   000000C2   0A22               MOVS     R2,#+10
   \   000000C4   5143               MULS     R1,R2,R1
   \   000000C6   0919               ADDS     R1,R1,R4
   \   000000C8   0160               STR      R1,[R0, #+0]
   6334                            }
   6335                         #endif
   6336                        if (ans<0) MenuLevel=(MenuLevel/10);
   \                     ??Options_Event_7:
   \   000000CA   002C               CMP      R4,#+0
   \   000000CC   06D5               BPL      ??Options_Event_8
   \   000000CE   0A48               LDR      R0,??Options_Event_0+0x10  ;; MenuLevel
   \   000000D0   0068               LDR      R0,[R0, #+0]
   \   000000D2   0A21               MOVS     R1,#+10
   \   000000D4   ........           BL       __aeabi_idivmod
   \   000000D8   0749               LDR      R1,??Options_Event_0+0x10  ;; MenuLevel
   \   000000DA   0860               STR      R0,[R1, #+0]
   6337                        MenuPaint();
   \                     ??Options_Event_8:
   \   000000DC   ........           BL       MenuPaint
   6338                    } 
   6339                    
   6340          
   6341                  
   6342                }//________________________________________________________________________
   \                     ??Options_Event_1:
   \   000000E0   10BC               POP      {R4}
   \   000000E2   01BC               POP      {R0}
   \   000000E4   0047               BX       R0               ;; return
   \   000000E6   C046               Nop      
   \                     ??Options_Event_0:
   \   000000E8   ........           DC32     Y_down
   \   000000EC   ........           DC32     X_down
   \   000000F0   ........           DC32     Y_up
   \   000000F4   ........           DC32     X_up
   \   000000F8   ........           DC32     MenuLevel
   \   000000FC   ........           DC32     g_Stop_Program
   \   00000100   ........           DC32     NeuronIdToChange
   \   00000104   7F969800           DC32     0x98967f
   \   00000108   ........           DC32     ChangeingIdMode
   \   0000010C   ........           DC32     NeuronNrChange
   \   00000110   ........           DC32     NeuronIdAfterChange
   \   00000114   604D2F00           DC32     0x2f4d60
   6343              
   6344                      
   6345          
   6346          
   6347          
   6348          
   6349          
   6350          
   6351                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6352                void ChangeID_Paint(int *NeuronIdToChange, int *NeuronIdAfterChange)
   6353                {  
   \                     ChangeID_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   6354                      char Txt[9];
   6355          
   6356                      List_Paint("New ID",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   8EA0               ADR      R0,??ChangeID_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0321               MOVS     R1,#+3
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0023               MOVS     R3,#+0
   \   00000026   6C22               MOVS     R2,#+108
   \   00000028   0121               MOVS     R1,#+1
   \   0000002A   8B48               LDR      R0,??ChangeID_Paint_0+0x4  ;; `?<Constant "New ID">`
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   6357          
   6358                    
   6359                     //wyczyæ listê wêz³ów
   6360                     for (char i=0; i<NumberNeurons; i++) 
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   2FE0               B        ??ChangeID_Paint_1
   6361                     {
   6362                       NeuronsList[i].NeuronType=NoneNodeType;
   \                     ??ChangeID_Paint_2:
   \   00000036   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000038   000E               LSRS     R0,R0,#+24
   \   0000003A   0C21               MOVS     R1,#+12
   \   0000003C   4143               MULS     R1,R0,R1
   \   0000003E   874A               LDR      R2,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   00000040   0023               MOVS     R3,#+0
   \   00000042   5354               STRB     R3,[R2, R1]
   6363                       NeuronsList[i].NeuronID=0;
   \   00000044   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   0C21               MOVS     R1,#+12
   \   0000004A   4143               MULS     R1,R0,R1
   \   0000004C   834A               LDR      R2,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000004E   5118               ADDS     R1,R2,R1
   \   00000050   0022               MOVS     R2,#+0
   \   00000052   4A60               STR      R2,[R1, #+4]
   6364                       NeuronsList[i].ReadOften=0;
   \   00000054   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   0C21               MOVS     R1,#+12
   \   0000005A   4143               MULS     R1,R0,R1
   \   0000005C   7F4A               LDR      R2,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000005E   5118               ADDS     R1,R2,R1
   \   00000060   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000062   000E               LSRS     R0,R0,#+24
   \   00000064   0C22               MOVS     R2,#+12
   \   00000066   4243               MULS     R2,R0,R2
   \   00000068   7C4B               LDR      R3,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000006A   9A18               ADDS     R2,R3,R2
   \   0000006C   127A               LDRB     R2,[R2, #+8]
   \   0000006E   FE23               MOVS     R3,#+254
   \   00000070   1340               ANDS     R3,R3,R2
   \   00000072   0B72               STRB     R3,[R1, #+8]
   6365                       NeuronsList[i].ReadRarely=0;
   \   00000074   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000076   000E               LSRS     R0,R0,#+24
   \   00000078   0C21               MOVS     R1,#+12
   \   0000007A   4143               MULS     R1,R0,R1
   \   0000007C   774A               LDR      R2,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000007E   5118               ADDS     R1,R2,R1
   \   00000080   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000082   000E               LSRS     R0,R0,#+24
   \   00000084   0C22               MOVS     R2,#+12
   \   00000086   4243               MULS     R2,R0,R2
   \   00000088   744B               LDR      R3,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000008A   9A18               ADDS     R2,R3,R2
   \   0000008C   127A               LDRB     R2,[R2, #+8]
   \   0000008E   FD23               MOVS     R3,#+253
   \   00000090   1340               ANDS     R3,R3,R2
   \   00000092   0B72               STRB     R3,[R1, #+8]
   6366                     }
   \   00000094   401C               ADDS     R0,R0,#+1
   \                     ??ChangeID_Paint_1:
   \   00000096   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   2328               CMP      R0,#+35
   \   0000009C   CBD3               BCC      ??ChangeID_Paint_2
   6367                     
   6368                     //wyczyæ zadania
   6369                     for (char i=0; i<RF_Tasks-1; i++) 
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   37E0               B        ??ChangeID_Paint_3
   6370                     {
   6371                      RF_TaskTab[i].Node=0;
   \                     ??ChangeID_Paint_4:
   \   000000A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A4   000E               LSRS     R0,R0,#+24
   \   000000A6   0821               MOVS     R1,#+8
   \   000000A8   4143               MULS     R1,R0,R1
   \   000000AA   6D4A               LDR      R2,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   000000AC   0023               MOVS     R3,#+0
   \   000000AE   5354               STRB     R3,[R2, R1]
   6372                      RF_TaskTab[i].Command.ID=0;
   \   000000B0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   0821               MOVS     R1,#+8
   \   000000B6   4143               MULS     R1,R0,R1
   \   000000B8   694A               LDR      R2,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   000000BA   5118               ADDS     R1,R2,R1
   \   000000BC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BE   000E               LSRS     R0,R0,#+24
   \   000000C0   0822               MOVS     R2,#+8
   \   000000C2   4243               MULS     R2,R0,R2
   \   000000C4   664B               LDR      R3,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   000000C6   9A18               ADDS     R2,R3,R2
   \   000000C8   5268               LDR      R2,[R2, #+4]
   \   000000CA   120D               LSRS     R2,R2,#+20
   \   000000CC   1205               LSLS     R2,R2,#+20
   \   000000CE   4A60               STR      R2,[R1, #+4]
   6373                      RF_TaskTab[i].Command.Order=0;
   \   000000D0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D2   000E               LSRS     R0,R0,#+24
   \   000000D4   0821               MOVS     R1,#+8
   \   000000D6   4143               MULS     R1,R0,R1
   \   000000D8   614A               LDR      R2,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   000000DA   5118               ADDS     R1,R2,R1
   \   000000DC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000DE   000E               LSRS     R0,R0,#+24
   \   000000E0   0822               MOVS     R2,#+8
   \   000000E2   4243               MULS     R2,R0,R2
   \   000000E4   5E4B               LDR      R3,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   000000E6   9A18               ADDS     R2,R3,R2
   \   000000E8   5268               LDR      R2,[R2, #+4]
   \   000000EA   5E4B               LDR      R3,??ChangeID_Paint_0+0x10  ;; 0xff0fffff
   \   000000EC   1340               ANDS     R3,R3,R2
   \   000000EE   4B60               STR      R3,[R1, #+4]
   6374                      RF_TaskTab[i].Command.Auxi=0;
   \   000000F0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F2   000E               LSRS     R0,R0,#+24
   \   000000F4   0821               MOVS     R1,#+8
   \   000000F6   4143               MULS     R1,R0,R1
   \   000000F8   594A               LDR      R2,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   000000FA   5118               ADDS     R1,R2,R1
   \   000000FC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   0822               MOVS     R2,#+8
   \   00000102   4243               MULS     R2,R0,R2
   \   00000104   564B               LDR      R3,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   00000106   9A18               ADDS     R2,R3,R2
   \   00000108   5268               LDR      R2,[R2, #+4]
   \   0000010A   1202               LSLS     R2,R2,#+8        ;; ZeroExtS R2,R2,#+8,#+8
   \   0000010C   120A               LSRS     R2,R2,#+8
   \   0000010E   4A60               STR      R2,[R1, #+4]
   6375                     }
   \   00000110   401C               ADDS     R0,R0,#+1
   \                     ??ChangeID_Paint_3:
   \   00000112   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000114   000E               LSRS     R0,R0,#+24
   \   00000116   4528               CMP      R0,#+69
   \   00000118   C3D3               BCC      ??ChangeID_Paint_4
   6376                                
   6377                      
   6378                     
   6379                      
   6380                     //dodanie numeru ID do zmiany
   6381                     NeuronsList[0].NeuronType=(_NeuronType)(*NeuronIdToChange/1000000);
   \   0000011A   2068               LDR      R0,[R4, #+0]
   \   0000011C   5249               LDR      R1,??ChangeID_Paint_0+0x14  ;; 0xf4240
   \   0000011E   ........           BL       __aeabi_idivmod
   \   00000122   4E49               LDR      R1,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   00000124   0870               STRB     R0,[R1, #+0]
   6382                     NeuronsList[0].NeuronID=(*NeuronIdToChange)-(NeuronsList[0].NeuronType*1000000);
   \   00000126   5148               LDR      R0,??ChangeID_Paint_0+0x18  ;; NeuronsList + 4
   \   00000128   2168               LDR      R1,[R4, #+0]
   \   0000012A   4C4A               LDR      R2,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000012C   1278               LDRB     R2,[R2, #+0]
   \   0000012E   4E4B               LDR      R3,??ChangeID_Paint_0+0x14  ;; 0xf4240
   \   00000130   5A43               MULS     R2,R3,R2
   \   00000132   891A               SUBS     R1,R1,R2
   \   00000134   0160               STR      R1,[R0, #+0]
   6383                     NeuronsList[0].ReadOften=1;
   \   00000136   4E48               LDR      R0,??ChangeID_Paint_0+0x1C  ;; NeuronsList + 8
   \   00000138   4D49               LDR      R1,??ChangeID_Paint_0+0x1C  ;; NeuronsList + 8
   \   0000013A   0978               LDRB     R1,[R1, #+0]
   \   0000013C   0122               MOVS     R2,#+1
   \   0000013E   0A43               ORRS     R2,R2,R1
   \   00000140   0270               STRB     R2,[R0, #+0]
   6384                     
   6385                     //dodanie nowego numeru
   6386                     NeuronsList[1].NeuronType=(_NeuronType)(*NeuronIdAfterChange/1000000);
   \   00000142   2868               LDR      R0,[R5, #+0]
   \   00000144   4849               LDR      R1,??ChangeID_Paint_0+0x14  ;; 0xf4240
   \   00000146   ........           BL       __aeabi_idivmod
   \   0000014A   4A49               LDR      R1,??ChangeID_Paint_0+0x20  ;; NeuronsList + 12
   \   0000014C   0870               STRB     R0,[R1, #+0]
   6387                     NeuronsList[1].NeuronID=(*NeuronIdAfterChange)-(NeuronsList[1].NeuronType*1000000);
   \   0000014E   4A48               LDR      R0,??ChangeID_Paint_0+0x24  ;; NeuronsList + 16
   \   00000150   2968               LDR      R1,[R5, #+0]
   \   00000152   484A               LDR      R2,??ChangeID_Paint_0+0x20  ;; NeuronsList + 12
   \   00000154   1278               LDRB     R2,[R2, #+0]
   \   00000156   444B               LDR      R3,??ChangeID_Paint_0+0x14  ;; 0xf4240
   \   00000158   5A43               MULS     R2,R3,R2
   \   0000015A   891A               SUBS     R1,R1,R2
   \   0000015C   0160               STR      R1,[R0, #+0]
   6388                     NeuronsList[1].ReadOften=1;
   \   0000015E   4748               LDR      R0,??ChangeID_Paint_0+0x28  ;; NeuronsList + 20
   \   00000160   4649               LDR      R1,??ChangeID_Paint_0+0x28  ;; NeuronsList + 20
   \   00000162   0978               LDRB     R1,[R1, #+0]
   \   00000164   0122               MOVS     R2,#+1
   \   00000166   0A43               ORRS     R2,R2,R1
   \   00000168   0270               STRB     R2,[R0, #+0]
   6389                     
   6390                      
   6391                      
   6392                      
   6393                      Label("ID do zmiany",0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0120               MOVS     R0,#+1
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   7F21               MOVS     R1,#+127
   \   00000172   0120               MOVS     R0,#+1
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   3E21               MOVS     R1,#+62
   \   00000178   0F20               MOVS     R0,#+15
   \   0000017A   03B4               PUSH     {R0,R1}
   \   0000017C   6123               MOVS     R3,#+97
   \   0000017E   0122               MOVS     R2,#+1
   \   00000180   0021               MOVS     R1,#+0
   \   00000182   3F48               LDR      R0,??ChangeID_Paint_0+0x2C  ;; `?<Constant "ID do zmiany">`
   \   00000184   ........           BL       Label
   \   00000188   06B0               ADD      SP,SP,#+24
   6394                      sprintf(&Txt, "%d",  *NeuronIdToChange, 'B');
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000018A   4223               MOVS     R3,#+66
   \   0000018C   2268               LDR      R2,[R4, #+0]
   \   0000018E   3DA1               ADR      R1,??ChangeID_Paint_0+0x30  ;; 0x25, 0x64, 0x00, 0x00
   \   00000190   6846               MOV      R0,SP
   \   00000192   ........           BL       sprintf
   6395                      Label(Txt,0,10,86,7,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000196   82B0               SUB      SP,SP,#+8
   \   00000198   0020               MOVS     R0,#+0
   \   0000019A   0090               STR      R0,[SP, #+0]
   \   0000019C   7F21               MOVS     R1,#+127
   \   0000019E   0120               MOVS     R0,#+1
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   2821               MOVS     R1,#+40
   \   000001A4   0720               MOVS     R0,#+7
   \   000001A6   03B4               PUSH     {R0,R1}
   \   000001A8   5623               MOVS     R3,#+86
   \   000001AA   0A22               MOVS     R2,#+10
   \   000001AC   0021               MOVS     R1,#+0
   \   000001AE   06A8               ADD      R0,SP,#+24
   \   000001B0   ........           BL       Label
   \   000001B4   06B0               ADD      SP,SP,#+24
   6396          
   6397                      Button("...",45,81,16,15);
   \   000001B6   82B0               SUB      SP,SP,#+8
   \   000001B8   0F20               MOVS     R0,#+15
   \   000001BA   0090               STR      R0,[SP, #+0]
   \   000001BC   1023               MOVS     R3,#+16
   \   000001BE   5122               MOVS     R2,#+81
   \   000001C0   2D21               MOVS     R1,#+45
   \   000001C2   31A0               ADR      R0,??ChangeID_Paint_0+0x34  ;; "..."
   \   000001C4   ........           BL       Button
   \   000001C8   02B0               ADD      SP,SP,#+8
   6398                      
   6399                      Label("ID po zmianie",0,1,67,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001CA   82B0               SUB      SP,SP,#+8
   \   000001CC   0120               MOVS     R0,#+1
   \   000001CE   0090               STR      R0,[SP, #+0]
   \   000001D0   7F21               MOVS     R1,#+127
   \   000001D2   0120               MOVS     R0,#+1
   \   000001D4   03B4               PUSH     {R0,R1}
   \   000001D6   3E21               MOVS     R1,#+62
   \   000001D8   0F20               MOVS     R0,#+15
   \   000001DA   03B4               PUSH     {R0,R1}
   \   000001DC   4323               MOVS     R3,#+67
   \   000001DE   0122               MOVS     R2,#+1
   \   000001E0   0021               MOVS     R1,#+0
   \   000001E2   2A48               LDR      R0,??ChangeID_Paint_0+0x38  ;; `?<Constant "ID po zmianie">`
   \   000001E4   ........           BL       Label
   \   000001E8   06B0               ADD      SP,SP,#+24
   6400                      sprintf(&Txt, "%d",  *NeuronIdAfterChange, 'B');
   \   000001EA   4223               MOVS     R3,#+66
   \   000001EC   2A68               LDR      R2,[R5, #+0]
   \   000001EE   25A1               ADR      R1,??ChangeID_Paint_0+0x30  ;; 0x25, 0x64, 0x00, 0x00
   \   000001F0   6846               MOV      R0,SP
   \   000001F2   ........           BL       sprintf
   6401                      Label(Txt,0,10,56,7,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000001F6   82B0               SUB      SP,SP,#+8
   \   000001F8   0020               MOVS     R0,#+0
   \   000001FA   0090               STR      R0,[SP, #+0]
   \   000001FC   7F21               MOVS     R1,#+127
   \   000001FE   0120               MOVS     R0,#+1
   \   00000200   03B4               PUSH     {R0,R1}
   \   00000202   2821               MOVS     R1,#+40
   \   00000204   0720               MOVS     R0,#+7
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   3823               MOVS     R3,#+56
   \   0000020A   0A22               MOVS     R2,#+10
   \   0000020C   0021               MOVS     R1,#+0
   \   0000020E   06A8               ADD      R0,SP,#+24
   \   00000210   ........           BL       Label
   \   00000214   06B0               ADD      SP,SP,#+24
   6402            
   6403                      Button("...",45,51,16,15); 
   \   00000216   82B0               SUB      SP,SP,#+8
   \   00000218   0F20               MOVS     R0,#+15
   \   0000021A   0090               STR      R0,[SP, #+0]
   \   0000021C   1023               MOVS     R3,#+16
   \   0000021E   3322               MOVS     R2,#+51
   \   00000220   2D21               MOVS     R1,#+45
   \   00000222   19A0               ADR      R0,??ChangeID_Paint_0+0x34  ;; "..."
   \   00000224   ........           BL       Button
   \   00000228   02B0               ADD      SP,SP,#+8
   6404                      
   6405                      AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   0000022A   0022               MOVS     R2,#+0
   \   0000022C   0121               MOVS     R1,#+1
   \   0000022E   0120               MOVS     R0,#+1
   \   00000230   ........           BL       AddRfTask
   6406                      AddRfTask(SI, 2, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   00000234   0022               MOVS     R2,#+0
   \   00000236   0221               MOVS     R1,#+2
   \   00000238   0120               MOVS     R0,#+1
   \   0000023A   ........           BL       AddRfTask
   6407                      
   6408                      TransQuality.Mensur[0]=0;
   \   0000023E   1448               LDR      R0,??ChangeID_Paint_0+0x3C  ;; TransQuality + 76
   \   00000240   0021               MOVS     R1,#+0
   \   00000242   0160               STR      R1,[R0, #+0]
   6409                      TransQuality.Mensur[1]=0;
   \   00000244   1348               LDR      R0,??ChangeID_Paint_0+0x40  ;; TransQuality + 80
   \   00000246   0021               MOVS     R1,#+0
   \   00000248   0160               STR      R1,[R0, #+0]
   6410                      
   6411                      
   6412                      
   6413                      
   6414                      
   6415                }//_______________________________________________________________________ 
   \   0000024A   03B0               ADD      SP,SP,#+12
   \   0000024C   30BC               POP      {R4,R5}
   \   0000024E   01BC               POP      {R0}
   \   00000250   0047               BX       R0               ;; return
   \   00000252   C046               Nop      
   \                     ??ChangeID_Paint_0:
   \   00000254   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000258   ........           DC32     `?<Constant "New ID">`
   \   0000025C   ........           DC32     NeuronsList
   \   00000260   ........           DC32     RF_TaskTab
   \   00000264   FFFF0FFF           DC32     0xff0fffff
   \   00000268   40420F00           DC32     0xf4240
   \   0000026C   ........           DC32     NeuronsList + 4
   \   00000270   ........           DC32     NeuronsList + 8
   \   00000274   ........           DC32     NeuronsList + 12
   \   00000278   ........           DC32     NeuronsList + 16
   \   0000027C   ........           DC32     NeuronsList + 20
   \   00000280   ........           DC32     `?<Constant "ID do zmiany">`
   \   00000284   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000288   2E2E2E00           DC8      "..."
   \   0000028C   ........           DC32     `?<Constant "ID po zmianie">`
   \   00000290   ........           DC32     TransQuality + 76
   \   00000294   ........           DC32     TransQuality + 80
   6416          
   6417          
   6418          
   6419          
   6420                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6421                void ChangeID_Event(int *NeuronIdToChange, int*NeuronIdAfterChange)
   6422                {
   \                     ChangeID_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   6423                  int ans;
   6424          
   6425                 
   6426                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   4048               LDR      R0,??ChangeID_Event_0  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   3F48               LDR      R0,??ChangeID_Event_0+0x4  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   3F48               LDR      R0,??ChangeID_Event_0+0x8  ;; Y_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   3E48               LDR      R0,??ChangeID_Event_0+0xC  ;; X_up
   \   00000026   0026               MOVS     R6,#+0
   \   00000028   805F               LDRSH    R0,[R0, R6]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   6427            
   6428                  char Repaint=0;
   \   00000030   0026               MOVS     R6,#+0
   6429          
   6430                  
   6431                  
   6432                  if (ans)
   \   00000032   0028               CMP      R0,#+0
   \   00000034   13D0               BEQ      ??ChangeID_Event_1
   6433                    {
   6434                    if (ans<0) {
   \   00000036   0028               CMP      R0,#+0
   \   00000038   62D5               BPL      ??ChangeID_Event_2
   6435                      
   6436                      
   6437                      SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   0000003A   3A48               LDR      R0,??ChangeID_Event_0+0x10  ;; gProg
   \   0000003C   ........           BL       SetTask
   6438                      RefreshNeuronsList(&gProg); 
   \   00000040   3848               LDR      R0,??ChangeID_Event_0+0x10  ;; gProg
   \   00000042   ........           BL       RefreshNeuronsList
   6439                      MenuLevel=(MenuLevel/10);
   \   00000046   3848               LDR      R0,??ChangeID_Event_0+0x14  ;; MenuLevel
   \   00000048   0068               LDR      R0,[R0, #+0]
   \   0000004A   0A21               MOVS     R1,#+10
   \   0000004C   ........           BL       __aeabi_idivmod
   \   00000050   3549               LDR      R1,??ChangeID_Event_0+0x14  ;; MenuLevel
   \   00000052   0860               STR      R0,[R1, #+0]
   6440                      ChangeingIdMode=0;
   \   00000054   3548               LDR      R0,??ChangeID_Event_0+0x18  ;; ChangeingIdMode
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0170               STRB     R1,[R0, #+0]
   6441                       Repaint=1;
   \   0000005A   0126               MOVS     R6,#+1
   \   0000005C   50E0               B        ??ChangeID_Event_2
   6442          
   6443                    }
   6444                    
   6445                    }else{
   6446                    
   6447                      //zmien -id pierwotne
   6448                      if (Button("...",45,81,16,15)==1)
   \                     ??ChangeID_Event_1:
   \   0000005E   82B0               SUB      SP,SP,#+8
   \   00000060   0F20               MOVS     R0,#+15
   \   00000062   0090               STR      R0,[SP, #+0]
   \   00000064   1023               MOVS     R3,#+16
   \   00000066   5122               MOVS     R2,#+81
   \   00000068   2D21               MOVS     R1,#+45
   \   0000006A   31A0               ADR      R0,??ChangeID_Event_0+0x1C  ;; "..."
   \   0000006C   ........           BL       Button
   \   00000070   02B0               ADD      SP,SP,#+8
   \   00000072   0128               CMP      R0,#+1
   \   00000074   09D1               BNE      ??ChangeID_Event_3
   6449                      {
   6450                        NeuronIdChange=NeuronIdToChange;
   \   00000076   2F48               LDR      R0,??ChangeID_Event_0+0x20  ;; NeuronIdChange
   \   00000078   0460               STR      R4,[R0, #+0]
   6451                        MenuLevel=(MenuLevel*10+1);
   \   0000007A   2B48               LDR      R0,??ChangeID_Event_0+0x14  ;; MenuLevel
   \   0000007C   2A49               LDR      R1,??ChangeID_Event_0+0x14  ;; MenuLevel
   \   0000007E   0968               LDR      R1,[R1, #+0]
   \   00000080   0A22               MOVS     R2,#+10
   \   00000082   5143               MULS     R1,R2,R1
   \   00000084   491C               ADDS     R1,R1,#+1
   \   00000086   0160               STR      R1,[R0, #+0]
   6452                        Repaint=1;
   \   00000088   0126               MOVS     R6,#+1
   6453                      }
   6454                    
   6455                      //zmien na id 
   6456                      if (Button("...",45,51,16,15)==1)
   \                     ??ChangeID_Event_3:
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0F20               MOVS     R0,#+15
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   1023               MOVS     R3,#+16
   \   00000092   3322               MOVS     R2,#+51
   \   00000094   2D21               MOVS     R1,#+45
   \   00000096   26A0               ADR      R0,??ChangeID_Event_0+0x1C  ;; "..."
   \   00000098   ........           BL       Button
   \   0000009C   02B0               ADD      SP,SP,#+8
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   09D1               BNE      ??ChangeID_Event_4
   6457                      {
   6458                        NeuronIdChange=NeuronIdAfterChange;
   \   000000A2   2448               LDR      R0,??ChangeID_Event_0+0x20  ;; NeuronIdChange
   \   000000A4   0560               STR      R5,[R0, #+0]
   6459                        MenuLevel=(MenuLevel*10+1);
   \   000000A6   2048               LDR      R0,??ChangeID_Event_0+0x14  ;; MenuLevel
   \   000000A8   1F49               LDR      R1,??ChangeID_Event_0+0x14  ;; MenuLevel
   \   000000AA   0968               LDR      R1,[R1, #+0]
   \   000000AC   0A22               MOVS     R2,#+10
   \   000000AE   5143               MULS     R1,R2,R1
   \   000000B0   491C               ADDS     R1,R1,#+1
   \   000000B2   0160               STR      R1,[R0, #+0]
   6460                        Repaint=1;
   \   000000B4   0126               MOVS     R6,#+1
   6461                      }
   6462                    
   6463                      //przycisk konwertuj
   6464                      if ((TransQuality.QuickMensur[0]!=0) && (TransQuality.QuickMensur[1]==0))
   \                     ??ChangeID_Event_4:
   \   000000B6   2048               LDR      R0,??ChangeID_Event_0+0x24  ;; TransQuality + 38
   \   000000B8   0078               LDRB     R0,[R0, #+0]
   \   000000BA   0028               CMP      R0,#+0
   \   000000BC   20D0               BEQ      ??ChangeID_Event_2
   \   000000BE   1F48               LDR      R0,??ChangeID_Event_0+0x28  ;; TransQuality + 39
   \   000000C0   0078               LDRB     R0,[R0, #+0]
   \   000000C2   0028               CMP      R0,#+0
   \   000000C4   1CD1               BNE      ??ChangeID_Event_2
   6465                      {
   6466                        if (Button("Konwertuj",3,10,58,20)==1)
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   1420               MOVS     R0,#+20
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   3A23               MOVS     R3,#+58
   \   000000CE   0A22               MOVS     R2,#+10
   \   000000D0   0321               MOVS     R1,#+3
   \   000000D2   1B48               LDR      R0,??ChangeID_Event_0+0x2C  ;; `?<Constant "Konwertuj">`
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   10D1               BNE      ??ChangeID_Event_2
   6467                        {
   6468                          TransQuality.QuickMensur[1]=0;
   \   000000DE   1748               LDR      R0,??ChangeID_Event_0+0x28  ;; TransQuality + 39
   \   000000E0   0021               MOVS     R1,#+0
   \   000000E2   0170               STRB     R1,[R0, #+0]
   6469                          TransQuality.SlowMensur[1]=0; 
   \   000000E4   1748               LDR      R0,??ChangeID_Event_0+0x30  ;; TransQuality + 4
   \   000000E6   0021               MOVS     R1,#+0
   \   000000E8   0170               STRB     R1,[R0, #+0]
   6470                          
   6471                          AddRfTask(SNewId, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   000000EA   0022               MOVS     R2,#+0
   \   000000EC   0121               MOVS     R1,#+1
   \   000000EE   0420               MOVS     R0,#+4
   \   000000F0   ........           BL       AddRfTask
   6472                          TransQuality.Mensur[0]=0;
   \   000000F4   1448               LDR      R0,??ChangeID_Event_0+0x34  ;; TransQuality + 76
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   0160               STR      R1,[R0, #+0]
   6473                          TransQuality.Mensur[1]=0;
   \   000000FA   1448               LDR      R0,??ChangeID_Event_0+0x38  ;; TransQuality + 80
   \   000000FC   0021               MOVS     R1,#+0
   \   000000FE   0160               STR      R1,[R0, #+0]
   6474                        }
   6475                      }
   6476                      
   6477                      
   6478                     
   6479                    
   6480                      
   6481                    } 
   6482                  
   6483                    if (Repaint) MenuPaint();
   \                     ??ChangeID_Event_2:
   \   00000100   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000102   360E               LSRS     R6,R6,#+24
   \   00000104   002E               CMP      R6,#+0
   \   00000106   01D0               BEQ      ??ChangeID_Event_5
   \   00000108   ........           BL       MenuPaint
   6484                  
   6485                  
   6486                }//_______________________________________________________________________
   \                     ??ChangeID_Event_5:
   \   0000010C   70BC               POP      {R4-R6}
   \   0000010E   01BC               POP      {R0}
   \   00000110   0047               BX       R0               ;; return
   \   00000112   C046               Nop      
   \                     ??ChangeID_Event_0:
   \   00000114   ........           DC32     Y_down
   \   00000118   ........           DC32     X_down
   \   0000011C   ........           DC32     Y_up
   \   00000120   ........           DC32     X_up
   \   00000124   ........           DC32     gProg
   \   00000128   ........           DC32     MenuLevel
   \   0000012C   ........           DC32     ChangeingIdMode
   \   00000130   2E2E2E00           DC8      "..."
   \   00000134   ........           DC32     NeuronIdChange
   \   00000138   ........           DC32     TransQuality + 38
   \   0000013C   ........           DC32     TransQuality + 39
   \   00000140   ........           DC32     `?<Constant "Konwertuj">`
   \   00000144   ........           DC32     TransQuality + 4
   \   00000148   ........           DC32     TransQuality + 76
   \   0000014C   ........           DC32     TransQuality + 80
   6487          
   6488          
   6489          
   6490                
   6491          

   \                                 In section Debug.txt, align 4, keep-with-next
   6492                 void ChangeID_Refresh(int *NeuronIdToChange, int*NeuronIdAfterChange)
   6493                 {
   \                     ChangeID_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   6494                     static char Dziel5=0;
   6495                     if (Dziel5<5)
   \   00000002   C148               LDR      R0,??ChangeID_Refresh_0  ;; ??Dziel5
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0528               CMP      R0,#+5
   \   00000008   05D2               BCS      ??ChangeID_Refresh_1
   6496                     {
   6497                        Dziel5++;
   \   0000000A   BF48               LDR      R0,??ChangeID_Refresh_0  ;; ??Dziel5
   \   0000000C   BE49               LDR      R1,??ChangeID_Refresh_0  ;; ??Dziel5
   \   0000000E   0978               LDRB     R1,[R1, #+0]
   \   00000010   491C               ADDS     R1,R1,#+1
   \   00000012   0170               STRB     R1,[R0, #+0]
   6498                        return;
   \   00000014   9AE1               B        ??ChangeID_Refresh_2
   6499                     }
   6500                     Dziel5=0;
   \                     ??ChangeID_Refresh_1:
   \   00000016   BC48               LDR      R0,??ChangeID_Refresh_0  ;; ??Dziel5
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0170               STRB     R1,[R0, #+0]
   6501                     
   6502                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   \   0000001C   0024               MOVS     R4,#+0
   6503                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   \   0000001E   0025               MOVS     R5,#+0
   6504                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   \   00000020   0026               MOVS     R6,#+0
   6505                  char CurErr=0;
   \   00000022   0027               MOVS     R7,#+0
   6506                     
   6507                     
   6508                      //wywietl jakoæ transmisji starego ID
   6509                      char Ypoz=87;  
   \   00000024   6846               MOV      R0,SP
   \   00000026   5721               MOVS     R1,#+87
   \   00000028   0170               STRB     R1,[R0, #+0]
   6510                                 
   6511                                CleanCanvasArea(2,Ypoz-1,8,9,0);
   \   0000002A   82B0               SUB      SP,SP,#+8
   \   0000002C   0020               MOVS     R0,#+0
   \   0000002E   0090               STR      R0,[SP, #+0]
   \   00000030   0923               MOVS     R3,#+9
   \   00000032   0822               MOVS     R2,#+8
   \   00000034   02A8               ADD      R0,SP,#+8
   \   00000036   0078               LDRB     R0,[R0, #+0]
   \   00000038   411E               SUBS     R1,R0,#+1
   \   0000003A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000003C   090E               LSRS     R1,R1,#+24
   \   0000003E   0220               MOVS     R0,#+2
   \   00000040   ........           BL       CleanCanvasArea
   \   00000044   02B0               ADD      SP,SP,#+8
   6512                                for (char b=0; b<32; b++)
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   13E0               B        ??ChangeID_Refresh_3
   6513                                {
   6514                                  if ((TransQuality.Mensur[0]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   6515                                  {  
   6516                                    CurErr=0;
   6517                                  }else{
   6518                                    CurErr++;
   \                     ??ChangeID_Refresh_4:
   \   0000004A   7F1C               ADDS     R7,R7,#+1
   6519                                    if (CurErr==1) {ERRx1++;}
   \   0000004C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000004E   3F0E               LSRS     R7,R7,#+24
   \   00000050   012F               CMP      R7,#+1
   \   00000052   00D1               BNE      ??ChangeID_Refresh_5
   \   00000054   641C               ADDS     R4,R4,#+1
   6520                                    if (CurErr==2) {ERRx2++; ERRx1--; }
   \                     ??ChangeID_Refresh_5:
   \   00000056   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000058   3F0E               LSRS     R7,R7,#+24
   \   0000005A   022F               CMP      R7,#+2
   \   0000005C   01D1               BNE      ??ChangeID_Refresh_6
   \   0000005E   6D1C               ADDS     R5,R5,#+1
   \   00000060   641E               SUBS     R4,R4,#+1
   6521                                    if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   \                     ??ChangeID_Refresh_6:
   \   00000062   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000064   3F0E               LSRS     R7,R7,#+24
   \   00000066   032F               CMP      R7,#+3
   \   00000068   02D1               BNE      ??ChangeID_Refresh_7
   \   0000006A   761C               ADDS     R6,R6,#+1
   \   0000006C   6D1E               SUBS     R5,R5,#+1
   \   0000006E   0027               MOVS     R7,#+0
   6522                  
   6523                                  }
   \                     ??ChangeID_Refresh_7:
   \   00000070   401C               ADDS     R0,R0,#+1
   \                     ??ChangeID_Refresh_3:
   \   00000072   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000074   000E               LSRS     R0,R0,#+24
   \   00000076   2028               CMP      R0,#+32
   \   00000078   08D2               BCS      ??ChangeID_Refresh_8
   \   0000007A   B649               LDR      R1,??ChangeID_Refresh_9  ;; TransQuality + 76
   \   0000007C   0968               LDR      R1,[R1, #+0]
   \   0000007E   0122               MOVS     R2,#+1
   \   00000080   8240               LSLS     R2,R2,R0
   \   00000082   0A40               ANDS     R2,R2,R1
   \   00000084   002A               CMP      R2,#+0
   \   00000086   E0D0               BEQ      ??ChangeID_Refresh_4
   \   00000088   0027               MOVS     R7,#+0
   \   0000008A   F1E7               B        ??ChangeID_Refresh_7
   6524                                  
   6525                                }
   6526                     
   6527                                //wskanik jakoci              
   6528                                if (TransQuality.Mensur[0]) 
   \                     ??ChangeID_Refresh_8:
   \   0000008C   B148               LDR      R0,??ChangeID_Refresh_9  ;; TransQuality + 76
   \   0000008E   0068               LDR      R0,[R0, #+0]
   \   00000090   0028               CMP      R0,#+0
   \   00000092   0ED0               BEQ      ??ChangeID_Refresh_10
   6529                                {
   6530                                  H_line(5,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \   00000094   0123               MOVS     R3,#+1
   \   00000096   0122               MOVS     R2,#+1
   \   00000098   6846               MOV      R0,SP
   \   0000009A   0178               LDRB     R1,[R0, #+0]
   \   0000009C   0520               MOVS     R0,#+5
   \   0000009E   ........           BL       H_line
   6531                                  H_line(4,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   \   000000A2   0123               MOVS     R3,#+1
   \   000000A4   0322               MOVS     R2,#+3
   \   000000A6   6846               MOV      R0,SP
   \   000000A8   0178               LDRB     R1,[R0, #+0]
   \   000000AA   891C               ADDS     R1,R1,#+2
   \   000000AC   0420               MOVS     R0,#+4
   \   000000AE   ........           BL       H_line
   6532                                }
   6533                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(3,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \                     ??ChangeID_Refresh_10:
   \   000000B2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000B4   240E               LSRS     R4,R4,#+24
   \   000000B6   0B2C               CMP      R4,#+11
   \   000000B8   0FD2               BCS      ??ChangeID_Refresh_11
   \   000000BA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000BC   2D0E               LSRS     R5,R5,#+24
   \   000000BE   072D               CMP      R5,#+7
   \   000000C0   0BD2               BCS      ??ChangeID_Refresh_11
   \   000000C2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000C4   360E               LSRS     R6,R6,#+24
   \   000000C6   022E               CMP      R6,#+2
   \   000000C8   07D2               BCS      ??ChangeID_Refresh_11
   \   000000CA   0123               MOVS     R3,#+1
   \   000000CC   0522               MOVS     R2,#+5
   \   000000CE   6846               MOV      R0,SP
   \   000000D0   0178               LDRB     R1,[R0, #+0]
   \   000000D2   091D               ADDS     R1,R1,#+4
   \   000000D4   0320               MOVS     R0,#+3
   \   000000D6   ........           BL       H_line
   6534                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(2,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)
   \                     ??ChangeID_Refresh_11:
   \   000000DA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000DC   240E               LSRS     R4,R4,#+24
   \   000000DE   052C               CMP      R4,#+5
   \   000000E0   0FD2               BCS      ??ChangeID_Refresh_12
   \   000000E2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E4   2D0E               LSRS     R5,R5,#+24
   \   000000E6   022D               CMP      R5,#+2
   \   000000E8   0BD2               BCS      ??ChangeID_Refresh_12
   \   000000EA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000EC   360E               LSRS     R6,R6,#+24
   \   000000EE   002E               CMP      R6,#+0
   \   000000F0   07D1               BNE      ??ChangeID_Refresh_12
   \   000000F2   0123               MOVS     R3,#+1
   \   000000F4   0722               MOVS     R2,#+7
   \   000000F6   6846               MOV      R0,SP
   \   000000F8   0178               LDRB     R1,[R0, #+0]
   \   000000FA   891D               ADDS     R1,R1,#+6
   \   000000FC   0220               MOVS     R0,#+2
   \   000000FE   ........           BL       H_line
   6535                     
   6536                      
   6537                             
   6538                                if (TransQuality.Mensur[0])  Button("Konwertuj",3,10,58,20);    
   \                     ??ChangeID_Refresh_12:
   \   00000102   9448               LDR      R0,??ChangeID_Refresh_9  ;; TransQuality + 76
   \   00000104   0068               LDR      R0,[R0, #+0]
   \   00000106   0028               CMP      R0,#+0
   \   00000108   09D0               BEQ      ??ChangeID_Refresh_13
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   1420               MOVS     R0,#+20
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   3A23               MOVS     R3,#+58
   \   00000112   0A22               MOVS     R2,#+10
   \   00000114   0321               MOVS     R1,#+3
   \   00000116   9048               LDR      R0,??ChangeID_Refresh_9+0x4  ;; `?<Constant "Konwertuj">`
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   6539                                
   6540                              
   6541                           char NewN=1;
   \                     ??ChangeID_Refresh_13:
   \   0000011E   6846               MOV      R0,SP
   \   00000120   0121               MOVS     R1,#+1
   \   00000122   4170               STRB     R1,[R0, #+1]
   6542                           if (NeuronsList[0].NeuronID==NeuronsList[1].NeuronID) NewN=0;
   \   00000124   8D48               LDR      R0,??ChangeID_Refresh_9+0x8  ;; NeuronsList + 4
   \   00000126   0068               LDR      R0,[R0, #+0]
   \   00000128   8D49               LDR      R1,??ChangeID_Refresh_9+0xC  ;; NeuronsList + 16
   \   0000012A   0968               LDR      R1,[R1, #+0]
   \   0000012C   8842               CMP      R0,R1
   \   0000012E   02D1               BNE      ??ChangeID_Refresh_14
   \   00000130   6846               MOV      R0,SP
   \   00000132   0021               MOVS     R1,#+0
   \   00000134   4170               STRB     R1,[R0, #+1]
   6543                           
   6544                                
   6545                        //wywietl jakoæ transmisji nowego ID
   6546                                Ypoz=57;
   \                     ??ChangeID_Refresh_14:
   \   00000136   6846               MOV      R0,SP
   \   00000138   3921               MOVS     R1,#+57
   \   0000013A   0170               STRB     R1,[R0, #+0]
   6547                                ERRx1=0; 
   \   0000013C   0024               MOVS     R4,#+0
   6548                                ERRx2=0;  
   \   0000013E   0025               MOVS     R5,#+0
   6549                                ERRx3=0;  
   \   00000140   0026               MOVS     R6,#+0
   6550                                CurErr=0;
   \   00000142   0027               MOVS     R7,#+0
   6551                                CleanCanvasArea(2,Ypoz-1,8,9,0);
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0020               MOVS     R0,#+0
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   0923               MOVS     R3,#+9
   \   0000014C   0822               MOVS     R2,#+8
   \   0000014E   02A8               ADD      R0,SP,#+8
   \   00000150   0078               LDRB     R0,[R0, #+0]
   \   00000152   411E               SUBS     R1,R0,#+1
   \   00000154   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000156   090E               LSRS     R1,R1,#+24
   \   00000158   0220               MOVS     R0,#+2
   \   0000015A   ........           BL       CleanCanvasArea
   \   0000015E   02B0               ADD      SP,SP,#+8
   6552                                for (char b=0; b<32; b++)
   \   00000160   0020               MOVS     R0,#+0
   \   00000162   13E0               B        ??ChangeID_Refresh_15
   6553                                {
   6554                                  if ((TransQuality.Mensur[NewN]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   6555                                  {  
   6556                                    CurErr=0;
   6557                                  }else{
   6558                                    CurErr++;
   \                     ??ChangeID_Refresh_16:
   \   00000164   7F1C               ADDS     R7,R7,#+1
   6559                                    if (CurErr==1) {ERRx1++;}
   \   00000166   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000168   3F0E               LSRS     R7,R7,#+24
   \   0000016A   012F               CMP      R7,#+1
   \   0000016C   00D1               BNE      ??ChangeID_Refresh_17
   \   0000016E   641C               ADDS     R4,R4,#+1
   6560                                    if (CurErr==2) {ERRx2++; ERRx1--; }
   \                     ??ChangeID_Refresh_17:
   \   00000170   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000172   3F0E               LSRS     R7,R7,#+24
   \   00000174   022F               CMP      R7,#+2
   \   00000176   01D1               BNE      ??ChangeID_Refresh_18
   \   00000178   6D1C               ADDS     R5,R5,#+1
   \   0000017A   641E               SUBS     R4,R4,#+1
   6561                                    if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   \                     ??ChangeID_Refresh_18:
   \   0000017C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000017E   3F0E               LSRS     R7,R7,#+24
   \   00000180   032F               CMP      R7,#+3
   \   00000182   02D1               BNE      ??ChangeID_Refresh_19
   \   00000184   761C               ADDS     R6,R6,#+1
   \   00000186   6D1E               SUBS     R5,R5,#+1
   \   00000188   0027               MOVS     R7,#+0
   6562                  
   6563                                  }
   \                     ??ChangeID_Refresh_19:
   \   0000018A   401C               ADDS     R0,R0,#+1
   \                     ??ChangeID_Refresh_15:
   \   0000018C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000018E   000E               LSRS     R0,R0,#+24
   \   00000190   2028               CMP      R0,#+32
   \   00000192   0DD2               BCS      ??ChangeID_Refresh_20
   \   00000194   6946               MOV      R1,SP
   \   00000196   4978               LDRB     R1,[R1, #+1]
   \   00000198   0422               MOVS     R2,#+4
   \   0000019A   5143               MULS     R1,R2,R1
   \   0000019C   714A               LDR      R2,??ChangeID_Refresh_9+0x10  ;; TransQuality
   \   0000019E   5118               ADDS     R1,R2,R1
   \   000001A0   C96C               LDR      R1,[R1, #+76]
   \   000001A2   0122               MOVS     R2,#+1
   \   000001A4   8240               LSLS     R2,R2,R0
   \   000001A6   0A40               ANDS     R2,R2,R1
   \   000001A8   002A               CMP      R2,#+0
   \   000001AA   DBD0               BEQ      ??ChangeID_Refresh_16
   \   000001AC   0027               MOVS     R7,#+0
   \   000001AE   ECE7               B        ??ChangeID_Refresh_19
   6564                                  
   6565                                }
   6566                     
   6567                                //wskanik jakoci              
   6568                                if (TransQuality.Mensur[NewN]) 
   \                     ??ChangeID_Refresh_20:
   \   000001B0   6846               MOV      R0,SP
   \   000001B2   4078               LDRB     R0,[R0, #+1]
   \   000001B4   0421               MOVS     R1,#+4
   \   000001B6   4843               MULS     R0,R1,R0
   \   000001B8   6A49               LDR      R1,??ChangeID_Refresh_9+0x10  ;; TransQuality
   \   000001BA   0818               ADDS     R0,R1,R0
   \   000001BC   C06C               LDR      R0,[R0, #+76]
   \   000001BE   0028               CMP      R0,#+0
   \   000001C0   0ED0               BEQ      ??ChangeID_Refresh_21
   6569                                {  
   6570                                  H_line(5,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \   000001C2   0123               MOVS     R3,#+1
   \   000001C4   0122               MOVS     R2,#+1
   \   000001C6   6846               MOV      R0,SP
   \   000001C8   0178               LDRB     R1,[R0, #+0]
   \   000001CA   0520               MOVS     R0,#+5
   \   000001CC   ........           BL       H_line
   6571                                  H_line(4,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)  
   \   000001D0   0123               MOVS     R3,#+1
   \   000001D2   0322               MOVS     R2,#+3
   \   000001D4   6846               MOV      R0,SP
   \   000001D6   0178               LDRB     R1,[R0, #+0]
   \   000001D8   891C               ADDS     R1,R1,#+2
   \   000001DA   0420               MOVS     R0,#+4
   \   000001DC   ........           BL       H_line
   6572                                }
   6573                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(3,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \                     ??ChangeID_Refresh_21:
   \   000001E0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001E2   240E               LSRS     R4,R4,#+24
   \   000001E4   0B2C               CMP      R4,#+11
   \   000001E6   0FD2               BCS      ??ChangeID_Refresh_22
   \   000001E8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001EA   2D0E               LSRS     R5,R5,#+24
   \   000001EC   072D               CMP      R5,#+7
   \   000001EE   0BD2               BCS      ??ChangeID_Refresh_22
   \   000001F0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001F2   360E               LSRS     R6,R6,#+24
   \   000001F4   022E               CMP      R6,#+2
   \   000001F6   07D2               BCS      ??ChangeID_Refresh_22
   \   000001F8   0123               MOVS     R3,#+1
   \   000001FA   0522               MOVS     R2,#+5
   \   000001FC   6846               MOV      R0,SP
   \   000001FE   0178               LDRB     R1,[R0, #+0]
   \   00000200   091D               ADDS     R1,R1,#+4
   \   00000202   0320               MOVS     R0,#+3
   \   00000204   ........           BL       H_line
   6574                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(2,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)    
   \                     ??ChangeID_Refresh_22:
   \   00000208   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000020A   240E               LSRS     R4,R4,#+24
   \   0000020C   052C               CMP      R4,#+5
   \   0000020E   0FD2               BCS      ??ChangeID_Refresh_23
   \   00000210   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000212   2D0E               LSRS     R5,R5,#+24
   \   00000214   022D               CMP      R5,#+2
   \   00000216   0BD2               BCS      ??ChangeID_Refresh_23
   \   00000218   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000021A   360E               LSRS     R6,R6,#+24
   \   0000021C   002E               CMP      R6,#+0
   \   0000021E   07D1               BNE      ??ChangeID_Refresh_23
   \   00000220   0123               MOVS     R3,#+1
   \   00000222   0722               MOVS     R2,#+7
   \   00000224   6846               MOV      R0,SP
   \   00000226   0178               LDRB     R1,[R0, #+0]
   \   00000228   891D               ADDS     R1,R1,#+6
   \   0000022A   0220               MOVS     R0,#+2
   \   0000022C   ........           BL       H_line
   6575                                
   6576                          
   6577                                
   6578                        if ((TransQuality.QuickMensur[0]!=0) && (TransQuality.QuickMensur[1]==0))
   \                     ??ChangeID_Refresh_23:
   \   00000230   4D48               LDR      R0,??ChangeID_Refresh_9+0x14  ;; TransQuality + 38
   \   00000232   0078               LDRB     R0,[R0, #+0]
   \   00000234   0028               CMP      R0,#+0
   \   00000236   0ED0               BEQ      ??ChangeID_Refresh_24
   \   00000238   4C48               LDR      R0,??ChangeID_Refresh_9+0x18  ;; TransQuality + 39
   \   0000023A   0078               LDRB     R0,[R0, #+0]
   \   0000023C   0028               CMP      R0,#+0
   \   0000023E   0AD1               BNE      ??ChangeID_Refresh_24
   6579                        {
   6580                         Button("Konwertuj",3,10,58,20);
   \   00000240   82B0               SUB      SP,SP,#+8
   \   00000242   1420               MOVS     R0,#+20
   \   00000244   0090               STR      R0,[SP, #+0]
   \   00000246   3A23               MOVS     R3,#+58
   \   00000248   0A22               MOVS     R2,#+10
   \   0000024A   0321               MOVS     R1,#+3
   \   0000024C   4248               LDR      R0,??ChangeID_Refresh_9+0x4  ;; `?<Constant "Konwertuj">`
   \   0000024E   ........           BL       Button
   \   00000252   02B0               ADD      SP,SP,#+8
   \   00000254   7AE0               B        ??ChangeID_Refresh_2
   6581                        } 
   6582                        else if ((TransQuality.QuickMensur[0]!=0) && (TransQuality.QuickMensur[1]!=0))
   \                     ??ChangeID_Refresh_24:
   \   00000256   4448               LDR      R0,??ChangeID_Refresh_9+0x14  ;; TransQuality + 38
   \   00000258   0078               LDRB     R0,[R0, #+0]
   \   0000025A   0028               CMP      R0,#+0
   \   0000025C   24D0               BEQ      ??ChangeID_Refresh_25
   \   0000025E   4348               LDR      R0,??ChangeID_Refresh_9+0x18  ;; TransQuality + 39
   \   00000260   0078               LDRB     R0,[R0, #+0]
   \   00000262   0028               CMP      R0,#+0
   \   00000264   20D0               BEQ      ??ChangeID_Refresh_25
   6583                        {
   6584                           Label("Konflikt ID",2,3,19,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000266   82B0               SUB      SP,SP,#+8
   \   00000268   0020               MOVS     R0,#+0
   \   0000026A   0090               STR      R0,[SP, #+0]
   \   0000026C   7F21               MOVS     R1,#+127
   \   0000026E   0120               MOVS     R0,#+1
   \   00000270   03B4               PUSH     {R0,R1}
   \   00000272   3A21               MOVS     R1,#+58
   \   00000274   0F20               MOVS     R0,#+15
   \   00000276   03B4               PUSH     {R0,R1}
   \   00000278   1323               MOVS     R3,#+19
   \   0000027A   0322               MOVS     R2,#+3
   \   0000027C   0221               MOVS     R1,#+2
   \   0000027E   3C48               LDR      R0,??ChangeID_Refresh_9+0x1C  ;; `?<Constant "Konflikt ID">`
   \   00000280   ........           BL       Label
   \   00000284   06B0               ADD      SP,SP,#+24
   6585                           Label("po zmianie",2,3,10,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000286   82B0               SUB      SP,SP,#+8
   \   00000288   0020               MOVS     R0,#+0
   \   0000028A   0090               STR      R0,[SP, #+0]
   \   0000028C   7F21               MOVS     R1,#+127
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   03B4               PUSH     {R0,R1}
   \   00000292   3A21               MOVS     R1,#+58
   \   00000294   0F20               MOVS     R0,#+15
   \   00000296   03B4               PUSH     {R0,R1}
   \   00000298   0A23               MOVS     R3,#+10
   \   0000029A   0322               MOVS     R2,#+3
   \   0000029C   0221               MOVS     R1,#+2
   \   0000029E   3548               LDR      R0,??ChangeID_Refresh_9+0x20  ;; `?<Constant "po zmianie">`
   \   000002A0   ........           BL       Label
   \   000002A4   06B0               ADD      SP,SP,#+24
   \   000002A6   51E0               B        ??ChangeID_Refresh_2
   6586                        }
   6587                        else{
   6588                          CleanCanvasArea(3,10,58,20,0); 
   \                     ??ChangeID_Refresh_25:
   \   000002A8   82B0               SUB      SP,SP,#+8
   \   000002AA   0020               MOVS     R0,#+0
   \   000002AC   0090               STR      R0,[SP, #+0]
   \   000002AE   1423               MOVS     R3,#+20
   \   000002B0   3A22               MOVS     R2,#+58
   \   000002B2   0A21               MOVS     R1,#+10
   \   000002B4   0320               MOVS     R0,#+3
   \   000002B6   ........           BL       CleanCanvasArea
   \   000002BA   02B0               ADD      SP,SP,#+8
   6589                          
   6590                          if (TransQuality.QuickMensur[1]!=0)
   \   000002BC   2B48               LDR      R0,??ChangeID_Refresh_9+0x18  ;; TransQuality + 39
   \   000002BE   0078               LDRB     R0,[R0, #+0]
   \   000002C0   0028               CMP      R0,#+0
   \   000002C2   23D0               BEQ      ??ChangeID_Refresh_26
   6591                          {
   6592                            Label("Konwersja",2,3,19,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000002C4   82B0               SUB      SP,SP,#+8
   \   000002C6   0020               MOVS     R0,#+0
   \   000002C8   0090               STR      R0,[SP, #+0]
   \   000002CA   7F21               MOVS     R1,#+127
   \   000002CC   0120               MOVS     R0,#+1
   \   000002CE   03B4               PUSH     {R0,R1}
   \   000002D0   3A21               MOVS     R1,#+58
   \   000002D2   0F20               MOVS     R0,#+15
   \   000002D4   03B4               PUSH     {R0,R1}
   \   000002D6   1323               MOVS     R3,#+19
   \   000002D8   0322               MOVS     R2,#+3
   \   000002DA   0221               MOVS     R1,#+2
   \   000002DC   2648               LDR      R0,??ChangeID_Refresh_9+0x24  ;; `?<Constant "Konwersja">`
   \   000002DE   ........           BL       Label
   \   000002E2   06B0               ADD      SP,SP,#+24
   6593                            Label("dokonana",2,3,10,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000002E4   82B0               SUB      SP,SP,#+8
   \   000002E6   0020               MOVS     R0,#+0
   \   000002E8   0090               STR      R0,[SP, #+0]
   \   000002EA   7F21               MOVS     R1,#+127
   \   000002EC   0120               MOVS     R0,#+1
   \   000002EE   03B4               PUSH     {R0,R1}
   \   000002F0   3A21               MOVS     R1,#+58
   \   000002F2   0F20               MOVS     R0,#+15
   \   000002F4   03B4               PUSH     {R0,R1}
   \   000002F6   0A23               MOVS     R3,#+10
   \   000002F8   0322               MOVS     R2,#+3
   \   000002FA   0221               MOVS     R1,#+2
   \   000002FC   1F48               LDR      R0,??ChangeID_Refresh_9+0x28  ;; `?<Constant "dokonana">`
   \   000002FE   ........           BL       Label
   \   00000302   06B0               ADD      SP,SP,#+24
   \   00000304   22E0               B        ??ChangeID_Refresh_2
   \   00000306   C046               Nop      
   \                     ??ChangeID_Refresh_0:
   \   00000308   ........           DC32     ??Dziel5
   6594                          }else{
   6595                            Label("Nawiazywanie",2,3,19,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??ChangeID_Refresh_26:
   \   0000030C   82B0               SUB      SP,SP,#+8
   \   0000030E   0020               MOVS     R0,#+0
   \   00000310   0090               STR      R0,[SP, #+0]
   \   00000312   7F21               MOVS     R1,#+127
   \   00000314   0120               MOVS     R0,#+1
   \   00000316   03B4               PUSH     {R0,R1}
   \   00000318   3A21               MOVS     R1,#+58
   \   0000031A   0F20               MOVS     R0,#+15
   \   0000031C   03B4               PUSH     {R0,R1}
   \   0000031E   1323               MOVS     R3,#+19
   \   00000320   0322               MOVS     R2,#+3
   \   00000322   0221               MOVS     R1,#+2
   \   00000324   1648               LDR      R0,??ChangeID_Refresh_9+0x2C  ;; `?<Constant "Nawiazywanie">`
   \   00000326   ........           BL       Label
   \   0000032A   06B0               ADD      SP,SP,#+24
   6596                            Label("polaczenia ",2,3,10,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000032C   82B0               SUB      SP,SP,#+8
   \   0000032E   0020               MOVS     R0,#+0
   \   00000330   0090               STR      R0,[SP, #+0]
   \   00000332   7F21               MOVS     R1,#+127
   \   00000334   0120               MOVS     R0,#+1
   \   00000336   03B4               PUSH     {R0,R1}
   \   00000338   3A21               MOVS     R1,#+58
   \   0000033A   0F20               MOVS     R0,#+15
   \   0000033C   03B4               PUSH     {R0,R1}
   \   0000033E   0A23               MOVS     R3,#+10
   \   00000340   0322               MOVS     R2,#+3
   \   00000342   0221               MOVS     R1,#+2
   \   00000344   0F48               LDR      R0,??ChangeID_Refresh_9+0x30  ;; `?<Constant "polaczenia ">`
   \   00000346   ........           BL       Label
   \   0000034A   06B0               ADD      SP,SP,#+24
   \                     ??ChangeID_Refresh_2:
   \   0000034C   01B0               ADD      SP,SP,#+4
   \   0000034E   F0BC               POP      {R4-R7}
   \   00000350   01BC               POP      {R0}
   \   00000352   0047               BX       R0               ;; return
   \                     ??ChangeID_Refresh_9:
   \   00000354   ........           DC32     TransQuality + 76
   \   00000358   ........           DC32     `?<Constant "Konwertuj">`
   \   0000035C   ........           DC32     NeuronsList + 4
   \   00000360   ........           DC32     NeuronsList + 16
   \   00000364   ........           DC32     TransQuality
   \   00000368   ........           DC32     TransQuality + 38
   \   0000036C   ........           DC32     TransQuality + 39
   \   00000370   ........           DC32     `?<Constant "Konflikt ID">`
   \   00000374   ........           DC32     `?<Constant "po zmianie">`
   \   00000378   ........           DC32     `?<Constant "Konwersja">`
   \   0000037C   ........           DC32     `?<Constant "dokonana">`
   \   00000380   ........           DC32     `?<Constant "Nawiazywanie">`
   \   00000384   ........           DC32     `?<Constant "polaczenia ">`
   6597                          }
   6598                          
   6599                        }        
   6600                                
   6601                 }

   \                                 In section .bss, align 1
   \                     ??Dziel5:
   \   00000000                      DS8 1
   6602                
   6603                
   6604                
   6605                
   6606                
   6607                
   6608                
   6609                
   6610                
   6611                
   6612          
   6613          
   6614          //Testowanie modu³ów
   6615                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6616                void CheckingModule_Paint(int *NeuronId)
   6617                {  
   \                     CheckingModule_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   \   00000002   0400               MOVS     R4,R0
   6618                      char Txt[9];
   6619          
   6620                      List_Paint("TESTER",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   92A0               ADR      R0,??CheckingModule_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   8F48               LDR      R0,??CheckingModule_Paint_0+0x4  ;; `?<Constant "TESTER">`
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   6621          
   6622          
   6623                      
   6624                    
   6625                      RF_NodeTest.NodeNr=1;
   \   00000030   8E48               LDR      R0,??CheckingModule_Paint_0+0x8  ;; RF_NodeTest
   \   00000032   0121               MOVS     R1,#+1
   \   00000034   0170               STRB     R1,[R0, #+0]
   6626                      RF_NodeTest.Sent=0;
   \   00000036   8E48               LDR      R0,??CheckingModule_Paint_0+0xC  ;; RF_NodeTest + 4
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0160               STR      R1,[R0, #+0]
   6627                      RF_NodeTest.SentSyn=0;   
   \   0000003C   8D48               LDR      R0,??CheckingModule_Paint_0+0x10  ;; RF_NodeTest + 8
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   0160               STR      R1,[R0, #+0]
   6628                      RF_NodeTest.Recived=0;
   \   00000042   8D48               LDR      R0,??CheckingModule_Paint_0+0x14  ;; RF_NodeTest + 12
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0160               STR      R1,[R0, #+0]
   6629                      
   6630                     //wyczyæ listê wêz³ów
   6631                     for (char i=0; i<NumberNeurons; i++) 
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   2FE0               B        ??CheckingModule_Paint_1
   6632                     {
   6633                       NeuronsList[i].NeuronType=NoneNodeType;
   \                     ??CheckingModule_Paint_2:
   \   0000004C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004E   000E               LSRS     R0,R0,#+24
   \   00000050   0C21               MOVS     R1,#+12
   \   00000052   4143               MULS     R1,R0,R1
   \   00000054   894A               LDR      R2,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   00000056   0023               MOVS     R3,#+0
   \   00000058   5354               STRB     R3,[R2, R1]
   6634                       NeuronsList[i].NeuronID=0;
   \   0000005A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   0C21               MOVS     R1,#+12
   \   00000060   4143               MULS     R1,R0,R1
   \   00000062   864A               LDR      R2,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   00000064   5118               ADDS     R1,R2,R1
   \   00000066   0022               MOVS     R2,#+0
   \   00000068   4A60               STR      R2,[R1, #+4]
   6635                       NeuronsList[i].ReadOften=0;
   \   0000006A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000006C   000E               LSRS     R0,R0,#+24
   \   0000006E   0C21               MOVS     R1,#+12
   \   00000070   4143               MULS     R1,R0,R1
   \   00000072   824A               LDR      R2,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   00000074   5118               ADDS     R1,R2,R1
   \   00000076   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000078   000E               LSRS     R0,R0,#+24
   \   0000007A   0C22               MOVS     R2,#+12
   \   0000007C   4243               MULS     R2,R0,R2
   \   0000007E   7F4B               LDR      R3,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   00000080   9A18               ADDS     R2,R3,R2
   \   00000082   127A               LDRB     R2,[R2, #+8]
   \   00000084   FE23               MOVS     R3,#+254
   \   00000086   1340               ANDS     R3,R3,R2
   \   00000088   0B72               STRB     R3,[R1, #+8]
   6636                       NeuronsList[i].ReadRarely=0;
   \   0000008A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   0C21               MOVS     R1,#+12
   \   00000090   4143               MULS     R1,R0,R1
   \   00000092   7A4A               LDR      R2,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   00000094   5118               ADDS     R1,R2,R1
   \   00000096   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   0C22               MOVS     R2,#+12
   \   0000009C   4243               MULS     R2,R0,R2
   \   0000009E   774B               LDR      R3,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   000000A0   9A18               ADDS     R2,R3,R2
   \   000000A2   127A               LDRB     R2,[R2, #+8]
   \   000000A4   FD23               MOVS     R3,#+253
   \   000000A6   1340               ANDS     R3,R3,R2
   \   000000A8   0B72               STRB     R3,[R1, #+8]
   6637                     }
   \   000000AA   401C               ADDS     R0,R0,#+1
   \                     ??CheckingModule_Paint_1:
   \   000000AC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AE   000E               LSRS     R0,R0,#+24
   \   000000B0   2328               CMP      R0,#+35
   \   000000B2   CBD3               BCC      ??CheckingModule_Paint_2
   6638                     
   6639                     //wyczyæ zadania
   6640                     for (char i=0; i<RF_Tasks-1; i++) 
   \   000000B4   0020               MOVS     R0,#+0
   \   000000B6   37E0               B        ??CheckingModule_Paint_3
   6641                     {
   6642                      RF_TaskTab[i].Node=0;
   \                     ??CheckingModule_Paint_4:
   \   000000B8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BA   000E               LSRS     R0,R0,#+24
   \   000000BC   0821               MOVS     R1,#+8
   \   000000BE   4143               MULS     R1,R0,R1
   \   000000C0   6F4A               LDR      R2,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   000000C2   0023               MOVS     R3,#+0
   \   000000C4   5354               STRB     R3,[R2, R1]
   6643                      RF_TaskTab[i].Command.ID=0;
   \   000000C6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C8   000E               LSRS     R0,R0,#+24
   \   000000CA   0821               MOVS     R1,#+8
   \   000000CC   4143               MULS     R1,R0,R1
   \   000000CE   6C4A               LDR      R2,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   000000D0   5118               ADDS     R1,R2,R1
   \   000000D2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D4   000E               LSRS     R0,R0,#+24
   \   000000D6   0822               MOVS     R2,#+8
   \   000000D8   4243               MULS     R2,R0,R2
   \   000000DA   694B               LDR      R3,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   000000DC   9A18               ADDS     R2,R3,R2
   \   000000DE   5268               LDR      R2,[R2, #+4]
   \   000000E0   120D               LSRS     R2,R2,#+20
   \   000000E2   1205               LSLS     R2,R2,#+20
   \   000000E4   4A60               STR      R2,[R1, #+4]
   6644                      RF_TaskTab[i].Command.Order=0;
   \   000000E6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E8   000E               LSRS     R0,R0,#+24
   \   000000EA   0821               MOVS     R1,#+8
   \   000000EC   4143               MULS     R1,R0,R1
   \   000000EE   644A               LDR      R2,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   000000F0   5118               ADDS     R1,R2,R1
   \   000000F2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F4   000E               LSRS     R0,R0,#+24
   \   000000F6   0822               MOVS     R2,#+8
   \   000000F8   4243               MULS     R2,R0,R2
   \   000000FA   614B               LDR      R3,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   000000FC   9A18               ADDS     R2,R3,R2
   \   000000FE   5268               LDR      R2,[R2, #+4]
   \   00000100   604B               LDR      R3,??CheckingModule_Paint_0+0x20  ;; 0xff0fffff
   \   00000102   1340               ANDS     R3,R3,R2
   \   00000104   4B60               STR      R3,[R1, #+4]
   6645                      RF_TaskTab[i].Command.Auxi=0;
   \   00000106   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000108   000E               LSRS     R0,R0,#+24
   \   0000010A   0821               MOVS     R1,#+8
   \   0000010C   4143               MULS     R1,R0,R1
   \   0000010E   5C4A               LDR      R2,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   00000110   5118               ADDS     R1,R2,R1
   \   00000112   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000114   000E               LSRS     R0,R0,#+24
   \   00000116   0822               MOVS     R2,#+8
   \   00000118   4243               MULS     R2,R0,R2
   \   0000011A   594B               LDR      R3,??CheckingModule_Paint_0+0x1C  ;; RF_TaskTab
   \   0000011C   9A18               ADDS     R2,R3,R2
   \   0000011E   5268               LDR      R2,[R2, #+4]
   \   00000120   1202               LSLS     R2,R2,#+8        ;; ZeroExtS R2,R2,#+8,#+8
   \   00000122   120A               LSRS     R2,R2,#+8
   \   00000124   4A60               STR      R2,[R1, #+4]
   6646                     }
   \   00000126   401C               ADDS     R0,R0,#+1
   \                     ??CheckingModule_Paint_3:
   \   00000128   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000012A   000E               LSRS     R0,R0,#+24
   \   0000012C   4528               CMP      R0,#+69
   \   0000012E   C3D3               BCC      ??CheckingModule_Paint_4
   6647                                
   6648                      
   6649                      
   6650                     //dodanie numeru ID do testowania
   6651                     NeuronsList[0].NeuronType=(_NeuronType)(*NeuronId/1000000);
   \   00000130   2068               LDR      R0,[R4, #+0]
   \   00000132   5549               LDR      R1,??CheckingModule_Paint_0+0x24  ;; 0xf4240
   \   00000134   ........           BL       __aeabi_idivmod
   \   00000138   5049               LDR      R1,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   0000013A   0870               STRB     R0,[R1, #+0]
   6652                     NeuronsList[0].NeuronID=(*NeuronId)-(NeuronsList[0].NeuronType*1000000);
   \   0000013C   5348               LDR      R0,??CheckingModule_Paint_0+0x28  ;; NeuronsList + 4
   \   0000013E   2168               LDR      R1,[R4, #+0]
   \   00000140   4E4A               LDR      R2,??CheckingModule_Paint_0+0x18  ;; NeuronsList
   \   00000142   1278               LDRB     R2,[R2, #+0]
   \   00000144   504B               LDR      R3,??CheckingModule_Paint_0+0x24  ;; 0xf4240
   \   00000146   5A43               MULS     R2,R3,R2
   \   00000148   891A               SUBS     R1,R1,R2
   \   0000014A   0160               STR      R1,[R0, #+0]
   6653                     NeuronsList[0].ReadOften=1;
   \   0000014C   5048               LDR      R0,??CheckingModule_Paint_0+0x2C  ;; NeuronsList + 8
   \   0000014E   5049               LDR      R1,??CheckingModule_Paint_0+0x2C  ;; NeuronsList + 8
   \   00000150   0978               LDRB     R1,[R1, #+0]
   \   00000152   0122               MOVS     R2,#+1
   \   00000154   0A43               ORRS     R2,R2,R1
   \   00000156   0270               STRB     R2,[R0, #+0]
   6654                     
   6655                     //dodanie modu³ów o innych ID dla testu odpornoci na inne ID
   6656                     NeuronsList[1].NeuronType=(_NeuronType)3;
   \   00000158   4E48               LDR      R0,??CheckingModule_Paint_0+0x30  ;; NeuronsList + 12
   \   0000015A   0321               MOVS     R1,#+3
   \   0000015C   0170               STRB     R1,[R0, #+0]
   6657                     NeuronsList[1].NeuronID=999998;
   \   0000015E   4E48               LDR      R0,??CheckingModule_Paint_0+0x34  ;; NeuronsList + 16
   \   00000160   4E49               LDR      R1,??CheckingModule_Paint_0+0x38  ;; 0xf423e
   \   00000162   0160               STR      R1,[R0, #+0]
   6658                     NeuronsList[1].ReadOften=1;
   \   00000164   4E48               LDR      R0,??CheckingModule_Paint_0+0x3C  ;; NeuronsList + 20
   \   00000166   4E49               LDR      R1,??CheckingModule_Paint_0+0x3C  ;; NeuronsList + 20
   \   00000168   0978               LDRB     R1,[R1, #+0]
   \   0000016A   0122               MOVS     R2,#+1
   \   0000016C   0A43               ORRS     R2,R2,R1
   \   0000016E   0270               STRB     R2,[R0, #+0]
   6659                     NeuronsList[2].NeuronType=(_NeuronType)3;
   \   00000170   4C48               LDR      R0,??CheckingModule_Paint_0+0x40  ;; NeuronsList + 24
   \   00000172   0321               MOVS     R1,#+3
   \   00000174   0170               STRB     R1,[R0, #+0]
   6660                     NeuronsList[2].NeuronID=999997;
   \   00000176   4C48               LDR      R0,??CheckingModule_Paint_0+0x44  ;; NeuronsList + 28
   \   00000178   4C49               LDR      R1,??CheckingModule_Paint_0+0x48  ;; 0xf423d
   \   0000017A   0160               STR      R1,[R0, #+0]
   6661                     NeuronsList[2].ReadOften=1;
   \   0000017C   4C48               LDR      R0,??CheckingModule_Paint_0+0x4C  ;; NeuronsList + 32
   \   0000017E   4C49               LDR      R1,??CheckingModule_Paint_0+0x4C  ;; NeuronsList + 32
   \   00000180   0978               LDRB     R1,[R1, #+0]
   \   00000182   0122               MOVS     R2,#+1
   \   00000184   0A43               ORRS     R2,R2,R1
   \   00000186   0270               STRB     R2,[R0, #+0]
   6662                     NeuronsList[3].NeuronType=(_NeuronType)3;
   \   00000188   4A48               LDR      R0,??CheckingModule_Paint_0+0x50  ;; NeuronsList + 36
   \   0000018A   0321               MOVS     R1,#+3
   \   0000018C   0170               STRB     R1,[R0, #+0]
   6663                     NeuronsList[3].NeuronID=999996;
   \   0000018E   4A48               LDR      R0,??CheckingModule_Paint_0+0x54  ;; NeuronsList + 40
   \   00000190   4A49               LDR      R1,??CheckingModule_Paint_0+0x58  ;; 0xf423c
   \   00000192   0160               STR      R1,[R0, #+0]
   6664                     NeuronsList[3].ReadOften=1;
   \   00000194   4A48               LDR      R0,??CheckingModule_Paint_0+0x5C  ;; NeuronsList + 44
   \   00000196   4A49               LDR      R1,??CheckingModule_Paint_0+0x5C  ;; NeuronsList + 44
   \   00000198   0978               LDRB     R1,[R1, #+0]
   \   0000019A   0122               MOVS     R2,#+1
   \   0000019C   0A43               ORRS     R2,R2,R1
   \   0000019E   0270               STRB     R2,[R0, #+0]
   6665          
   6666                     AddRfTask(SI, 2, 0);                //Dodaj rozkaz do tablicy zadañ RF   
   \   000001A0   0022               MOVS     R2,#+0
   \   000001A2   0221               MOVS     R1,#+2
   \   000001A4   0120               MOVS     R0,#+1
   \   000001A6   ........           BL       AddRfTask
   6667                     AddRfTask(SI, 3, 0);                //Dodaj rozkaz do tablicy zadañ RF   
   \   000001AA   0022               MOVS     R2,#+0
   \   000001AC   0321               MOVS     R1,#+3
   \   000001AE   0120               MOVS     R0,#+1
   \   000001B0   ........           BL       AddRfTask
   6668                      
   6669                     
   6670                     AddRfTask(SI, 4, 0);                //Dodaj rozkaz do tablicy zadañ RF 
   \   000001B4   0022               MOVS     R2,#+0
   \   000001B6   0421               MOVS     R1,#+4
   \   000001B8   0120               MOVS     R0,#+1
   \   000001BA   ........           BL       AddRfTask
   6671                      
   6672                      
   6673                      
   6674                      Label("ID modulu",0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   0120               MOVS     R0,#+1
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   7F21               MOVS     R1,#+127
   \   000001C6   0120               MOVS     R0,#+1
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   3E21               MOVS     R1,#+62
   \   000001CC   0F20               MOVS     R0,#+15
   \   000001CE   03B4               PUSH     {R0,R1}
   \   000001D0   6123               MOVS     R3,#+97
   \   000001D2   0122               MOVS     R2,#+1
   \   000001D4   0021               MOVS     R1,#+0
   \   000001D6   3B48               LDR      R0,??CheckingModule_Paint_0+0x60  ;; `?<Constant "ID modulu">`
   \   000001D8   ........           BL       Label
   \   000001DC   06B0               ADD      SP,SP,#+24
   6675                      sprintf(&Txt, "%d",  *NeuronId, 'B');
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000001DE   4223               MOVS     R3,#+66
   \   000001E0   2268               LDR      R2,[R4, #+0]
   \   000001E2   39A1               ADR      R1,??CheckingModule_Paint_0+0x64  ;; 0x25, 0x64, 0x00, 0x00
   \   000001E4   6846               MOV      R0,SP
   \   000001E6   ........           BL       sprintf
   6676                      Label(Txt,0,10,86,7,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0020               MOVS     R0,#+0
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   7F21               MOVS     R1,#+127
   \   000001F2   0120               MOVS     R0,#+1
   \   000001F4   03B4               PUSH     {R0,R1}
   \   000001F6   2821               MOVS     R1,#+40
   \   000001F8   0720               MOVS     R0,#+7
   \   000001FA   03B4               PUSH     {R0,R1}
   \   000001FC   5623               MOVS     R3,#+86
   \   000001FE   0A22               MOVS     R2,#+10
   \   00000200   0021               MOVS     R1,#+0
   \   00000202   06A8               ADD      R0,SP,#+24
   \   00000204   ........           BL       Label
   \   00000208   06B0               ADD      SP,SP,#+24
   6677          
   6678                      Button("...",45,84,16,12);
   \   0000020A   82B0               SUB      SP,SP,#+8
   \   0000020C   0C20               MOVS     R0,#+12
   \   0000020E   0090               STR      R0,[SP, #+0]
   \   00000210   1023               MOVS     R3,#+16
   \   00000212   5422               MOVS     R2,#+84
   \   00000214   2D21               MOVS     R1,#+45
   \   00000216   2DA0               ADR      R0,??CheckingModule_Paint_0+0x68  ;; "..."
   \   00000218   ........           BL       Button
   \   0000021C   02B0               ADD      SP,SP,#+8
   6679                      
   6680          
   6681                      
   6682                      AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF          
   \   0000021E   0022               MOVS     R2,#+0
   \   00000220   0121               MOVS     R1,#+1
   \   00000222   0120               MOVS     R0,#+1
   \   00000224   ........           BL       AddRfTask
   6683                      AddRfTask(SI, 2, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   00000228   0022               MOVS     R2,#+0
   \   0000022A   0221               MOVS     R1,#+2
   \   0000022C   0120               MOVS     R0,#+1
   \   0000022E   ........           BL       AddRfTask
   6684                      AddRfTask(SI, 3, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   00000232   0022               MOVS     R2,#+0
   \   00000234   0321               MOVS     R1,#+3
   \   00000236   0120               MOVS     R0,#+1
   \   00000238   ........           BL       AddRfTask
   6685                      AddRfTask(SI, 4, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   0000023C   0022               MOVS     R2,#+0
   \   0000023E   0421               MOVS     R1,#+4
   \   00000240   0120               MOVS     R0,#+1
   \   00000242   ........           BL       AddRfTask
   6686                      AddRfTask(SI, 5, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   00000246   0022               MOVS     R2,#+0
   \   00000248   0521               MOVS     R1,#+5
   \   0000024A   0120               MOVS     R0,#+1
   \   0000024C   ........           BL       AddRfTask
   6687                      
   6688                      
   6689                      
   6690                      TransQuality.Mensur[0]=0;
   \   00000250   1F48               LDR      R0,??CheckingModule_Paint_0+0x6C  ;; TransQuality + 76
   \   00000252   0021               MOVS     R1,#+0
   \   00000254   0160               STR      R1,[R0, #+0]
   6691          
   6692          
   6693          
   6694                      
   6695                      
   6696                      NeuronNrChange=1;
   \   00000256   1F48               LDR      R0,??CheckingModule_Paint_0+0x70  ;; NeuronNrChange
   \   00000258   0121               MOVS     R1,#+1
   \   0000025A   0170               STRB     R1,[R0, #+0]
   6697                      
   6698                      
   6699                }//_______________________________________________________________________ 
   \   0000025C   04B0               ADD      SP,SP,#+16
   \   0000025E   10BC               POP      {R4}
   \   00000260   01BC               POP      {R0}
   \   00000262   0047               BX       R0               ;; return
   \                     ??CheckingModule_Paint_0:
   \   00000264   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000268   ........           DC32     `?<Constant "TESTER">`
   \   0000026C   ........           DC32     RF_NodeTest
   \   00000270   ........           DC32     RF_NodeTest + 4
   \   00000274   ........           DC32     RF_NodeTest + 8
   \   00000278   ........           DC32     RF_NodeTest + 12
   \   0000027C   ........           DC32     NeuronsList
   \   00000280   ........           DC32     RF_TaskTab
   \   00000284   FFFF0FFF           DC32     0xff0fffff
   \   00000288   40420F00           DC32     0xf4240
   \   0000028C   ........           DC32     NeuronsList + 4
   \   00000290   ........           DC32     NeuronsList + 8
   \   00000294   ........           DC32     NeuronsList + 12
   \   00000298   ........           DC32     NeuronsList + 16
   \   0000029C   3E420F00           DC32     0xf423e
   \   000002A0   ........           DC32     NeuronsList + 20
   \   000002A4   ........           DC32     NeuronsList + 24
   \   000002A8   ........           DC32     NeuronsList + 28
   \   000002AC   3D420F00           DC32     0xf423d
   \   000002B0   ........           DC32     NeuronsList + 32
   \   000002B4   ........           DC32     NeuronsList + 36
   \   000002B8   ........           DC32     NeuronsList + 40
   \   000002BC   3C420F00           DC32     0xf423c
   \   000002C0   ........           DC32     NeuronsList + 44
   \   000002C4   ........           DC32     `?<Constant "ID modulu">`
   \   000002C8   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000002CC   2E2E2E00           DC8      "..."
   \   000002D0   ........           DC32     TransQuality + 76
   \   000002D4   ........           DC32     NeuronNrChange
   6700          
   6701          
   6702          
   6703          
   6704                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6705                void CheckingModule_Event(int *NeuronId)
   6706                {
   \                     CheckingModule_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   6707                  int ans;
   6708          
   6709                 
   6710                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   4248               LDR      R0,??CheckingModule_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   4248               LDR      R0,??CheckingModule_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   4148               LDR      R0,??CheckingModule_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   4148               LDR      R0,??CheckingModule_Event_0+0xC  ;; X_up
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   405F               LDRSH    R0,[R0, R5]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   6711            
   6712                  char Repaint=0;
   \   0000002E   0025               MOVS     R5,#+0
   6713          
   6714                  
   6715                  
   6716                  if (ans)
   \   00000030   0028               CMP      R0,#+0
   \   00000032   10D0               BEQ      ??CheckingModule_Event_1
   6717                    {
   6718                    if (ans<0) {
   \   00000034   0028               CMP      R0,#+0
   \   00000036   66D5               BPL      ??CheckingModule_Event_2
   6719                      
   6720                      
   6721                      SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000038   3C48               LDR      R0,??CheckingModule_Event_0+0x10  ;; gProg
   \   0000003A   ........           BL       SetTask
   6722                      RefreshNeuronsList(&gProg); 
   \   0000003E   3B48               LDR      R0,??CheckingModule_Event_0+0x10  ;; gProg
   \   00000040   ........           BL       RefreshNeuronsList
   6723                      MenuLevel=(MenuLevel/100);
   \   00000044   3A48               LDR      R0,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   00000046   0068               LDR      R0,[R0, #+0]
   \   00000048   6421               MOVS     R1,#+100
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   3849               LDR      R1,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   00000050   0860               STR      R0,[R1, #+0]
   6724          
   6725                       Repaint=1;
   \   00000052   0125               MOVS     R5,#+1
   \   00000054   57E0               B        ??CheckingModule_Event_2
   6726          
   6727                    }
   6728                    
   6729                    }else{
   6730                    
   6731                      //zmien -id pierwotne
   6732                      if (Button("...",45,84,16,12)==1)
   \                     ??CheckingModule_Event_1:
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   0C20               MOVS     R0,#+12
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   1023               MOVS     R3,#+16
   \   0000005E   5422               MOVS     R2,#+84
   \   00000060   2D21               MOVS     R1,#+45
   \   00000062   34A0               ADR      R0,??CheckingModule_Event_0+0x18  ;; "..."
   \   00000064   ........           BL       Button
   \   00000068   02B0               ADD      SP,SP,#+8
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   09D1               BNE      ??CheckingModule_Event_3
   6733                      {
   6734                        NeuronIdChange=NeuronId;
   \   0000006E   3248               LDR      R0,??CheckingModule_Event_0+0x1C  ;; NeuronIdChange
   \   00000070   0460               STR      R4,[R0, #+0]
   6735                        MenuLevel=(MenuLevel*10+1);
   \   00000072   2F48               LDR      R0,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   00000074   2E49               LDR      R1,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   00000076   0968               LDR      R1,[R1, #+0]
   \   00000078   0A22               MOVS     R2,#+10
   \   0000007A   5143               MULS     R1,R2,R1
   \   0000007C   491C               ADDS     R1,R1,#+1
   \   0000007E   0160               STR      R1,[R0, #+0]
   6736                        Repaint=1;
   \   00000080   0125               MOVS     R5,#+1
   6737                      }
   6738                    
   6739                      if  (Button("We/Wy",3,51,58,15)==1)
   \                     ??CheckingModule_Event_3:
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0F20               MOVS     R0,#+15
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   3A23               MOVS     R3,#+58
   \   0000008A   3322               MOVS     R2,#+51
   \   0000008C   0321               MOVS     R1,#+3
   \   0000008E   2B48               LDR      R0,??CheckingModule_Event_0+0x20  ;; `?<Constant "We/Wy">`
   \   00000090   ........           BL       Button
   \   00000094   02B0               ADD      SP,SP,#+8
   \   00000096   0128               CMP      R0,#+1
   \   00000098   09D1               BNE      ??CheckingModule_Event_4
   6740                      {
   6741                        NeuronIdChange=NeuronId;
   \   0000009A   2748               LDR      R0,??CheckingModule_Event_0+0x1C  ;; NeuronIdChange
   \   0000009C   0460               STR      R4,[R0, #+0]
   6742                        MenuLevel=(MenuLevel*100+21);
   \   0000009E   2448               LDR      R0,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   000000A0   2349               LDR      R1,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   000000A2   0968               LDR      R1,[R1, #+0]
   \   000000A4   6422               MOVS     R2,#+100
   \   000000A6   5143               MULS     R1,R2,R1
   \   000000A8   1531               ADDS     R1,R1,#+21
   \   000000AA   0160               STR      R1,[R0, #+0]
   6743                        Repaint=1;
   \   000000AC   0125               MOVS     R5,#+1
   6744                      }
   6745                    
   6746                      if  (Button("We analog.",3,35,58,15)==1)
   \                     ??CheckingModule_Event_4:
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0F20               MOVS     R0,#+15
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   3A23               MOVS     R3,#+58
   \   000000B6   2322               MOVS     R2,#+35
   \   000000B8   0321               MOVS     R1,#+3
   \   000000BA   2148               LDR      R0,??CheckingModule_Event_0+0x24  ;; `?<Constant "We analog.">`
   \   000000BC   ........           BL       Button
   \   000000C0   02B0               ADD      SP,SP,#+8
   \   000000C2   0128               CMP      R0,#+1
   \   000000C4   09D1               BNE      ??CheckingModule_Event_5
   6747                      {
   6748                        NeuronIdChange=NeuronId;
   \   000000C6   1C48               LDR      R0,??CheckingModule_Event_0+0x1C  ;; NeuronIdChange
   \   000000C8   0460               STR      R4,[R0, #+0]
   6749                        MenuLevel=(MenuLevel*100+31);
   \   000000CA   1948               LDR      R0,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   000000CC   1849               LDR      R1,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   000000CE   0968               LDR      R1,[R1, #+0]
   \   000000D0   6422               MOVS     R2,#+100
   \   000000D2   5143               MULS     R1,R2,R1
   \   000000D4   1F31               ADDS     R1,R1,#+31
   \   000000D6   0160               STR      R1,[R0, #+0]
   6750                        Repaint=1;
   \   000000D8   0125               MOVS     R5,#+1
   6751                      }
   6752                      
   6753                      if  (Button("Test MG1",3,19,58,15)==1)
   \                     ??CheckingModule_Event_5:
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   3A23               MOVS     R3,#+58
   \   000000E2   1322               MOVS     R2,#+19
   \   000000E4   0321               MOVS     R1,#+3
   \   000000E6   1748               LDR      R0,??CheckingModule_Event_0+0x28  ;; `?<Constant "Test MG1">`
   \   000000E8   ........           BL       Button
   \   000000EC   02B0               ADD      SP,SP,#+8
   \   000000EE   0128               CMP      R0,#+1
   \   000000F0   09D1               BNE      ??CheckingModule_Event_2
   6754                      {
   6755                        NeuronIdChange=NeuronId;
   \   000000F2   1148               LDR      R0,??CheckingModule_Event_0+0x1C  ;; NeuronIdChange
   \   000000F4   0460               STR      R4,[R0, #+0]
   6756                        MenuLevel=(MenuLevel*10+4);
   \   000000F6   0E48               LDR      R0,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   000000F8   0D49               LDR      R1,??CheckingModule_Event_0+0x14  ;; MenuLevel
   \   000000FA   0968               LDR      R1,[R1, #+0]
   \   000000FC   0A22               MOVS     R2,#+10
   \   000000FE   5143               MULS     R1,R2,R1
   \   00000100   091D               ADDS     R1,R1,#+4
   \   00000102   0160               STR      R1,[R0, #+0]
   6757                        Repaint=1;
   \   00000104   0125               MOVS     R5,#+1
   6758                      }
   6759                      
   6760                    } 
   6761                  
   6762                    if (Repaint) MenuPaint();
   \                     ??CheckingModule_Event_2:
   \   00000106   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000108   2D0E               LSRS     R5,R5,#+24
   \   0000010A   002D               CMP      R5,#+0
   \   0000010C   01D0               BEQ      ??CheckingModule_Event_6
   \   0000010E   ........           BL       MenuPaint
   6763                  
   6764                  
   6765                }//_______________________________________________________________________
   \                     ??CheckingModule_Event_6:
   \   00000112   01B0               ADD      SP,SP,#+4
   \   00000114   30BC               POP      {R4,R5}
   \   00000116   01BC               POP      {R0}
   \   00000118   0047               BX       R0               ;; return
   \   0000011A   C046               Nop      
   \                     ??CheckingModule_Event_0:
   \   0000011C   ........           DC32     Y_down
   \   00000120   ........           DC32     X_down
   \   00000124   ........           DC32     Y_up
   \   00000128   ........           DC32     X_up
   \   0000012C   ........           DC32     gProg
   \   00000130   ........           DC32     MenuLevel
   \   00000134   2E2E2E00           DC8      "..."
   \   00000138   ........           DC32     NeuronIdChange
   \   0000013C   ........           DC32     `?<Constant "We/Wy">`
   \   00000140   ........           DC32     `?<Constant "We analog.">`
   \   00000144   ........           DC32     `?<Constant "Test MG1">`
   6766          
   6767                
   6768                
   6769                
   6770          

   \                                 In section Debug.txt, align 4, keep-with-next
   6771                 void CheckingModule_Refresh(int *NeuronId)
   6772                 {
   \                     CheckingModule_Refresh:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   6773                     static char Dziel5=0;
   6774                     if (Dziel5<5)
   \   00000004   8B48               LDR      R0,??CheckingModule_Refresh_0  ;; ??Dziel5_1
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0528               CMP      R0,#+5
   \   0000000A   05D2               BCS      ??CheckingModule_Refresh_1
   6775                     {
   6776                        Dziel5++;
   \   0000000C   8948               LDR      R0,??CheckingModule_Refresh_0  ;; ??Dziel5_1
   \   0000000E   8949               LDR      R1,??CheckingModule_Refresh_0  ;; ??Dziel5_1
   \   00000010   0978               LDRB     R1,[R1, #+0]
   \   00000012   491C               ADDS     R1,R1,#+1
   \   00000014   0170               STRB     R1,[R0, #+0]
   6777                        return;
   \   00000016   08E1               B        ??CheckingModule_Refresh_2
   6778                     }
   6779                     Dziel5=0;
   \                     ??CheckingModule_Refresh_1:
   \   00000018   8648               LDR      R0,??CheckingModule_Refresh_0  ;; ??Dziel5_1
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0170               STRB     R1,[R0, #+0]
   6780                     char txt[15];
   6781                     
   6782                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   \   0000001E   0024               MOVS     R4,#+0
   6783                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   \   00000020   0025               MOVS     R5,#+0
   6784                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   \   00000022   0026               MOVS     R6,#+0
   6785                  char CurErr=0;
   \   00000024   0027               MOVS     R7,#+0
   6786                     
   6787                     
   6788                      //wywietl jakoæ transmisji starego ID
   6789                      char Ypoz=87;  
   \   00000026   6846               MOV      R0,SP
   \   00000028   5721               MOVS     R1,#+87
   \   0000002A   0170               STRB     R1,[R0, #+0]
   6790                                 
   6791                                CleanCanvasArea(2,Ypoz-1,8,9,0);
   \   0000002C   82B0               SUB      SP,SP,#+8
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   0090               STR      R0,[SP, #+0]
   \   00000032   0923               MOVS     R3,#+9
   \   00000034   0822               MOVS     R2,#+8
   \   00000036   02A8               ADD      R0,SP,#+8
   \   00000038   0078               LDRB     R0,[R0, #+0]
   \   0000003A   411E               SUBS     R1,R0,#+1
   \   0000003C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000003E   090E               LSRS     R1,R1,#+24
   \   00000040   0220               MOVS     R0,#+2
   \   00000042   ........           BL       CleanCanvasArea
   \   00000046   02B0               ADD      SP,SP,#+8
   6792                                for (char b=0; b<32; b++)
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   13E0               B        ??CheckingModule_Refresh_3
   6793                                {
   6794                                  if ((TransQuality.Mensur[0]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   6795                                  {  
   6796                                    CurErr=0;
   6797                                  }else{
   6798                                    CurErr++;
   \                     ??CheckingModule_Refresh_4:
   \   0000004C   7F1C               ADDS     R7,R7,#+1
   6799                                    if (CurErr==1) {ERRx1++;}
   \   0000004E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000050   3F0E               LSRS     R7,R7,#+24
   \   00000052   012F               CMP      R7,#+1
   \   00000054   00D1               BNE      ??CheckingModule_Refresh_5
   \   00000056   641C               ADDS     R4,R4,#+1
   6800                                    if (CurErr==2) {ERRx2++; ERRx1--; }
   \                     ??CheckingModule_Refresh_5:
   \   00000058   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000005A   3F0E               LSRS     R7,R7,#+24
   \   0000005C   022F               CMP      R7,#+2
   \   0000005E   01D1               BNE      ??CheckingModule_Refresh_6
   \   00000060   6D1C               ADDS     R5,R5,#+1
   \   00000062   641E               SUBS     R4,R4,#+1
   6801                                    if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   \                     ??CheckingModule_Refresh_6:
   \   00000064   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000066   3F0E               LSRS     R7,R7,#+24
   \   00000068   032F               CMP      R7,#+3
   \   0000006A   02D1               BNE      ??CheckingModule_Refresh_7
   \   0000006C   761C               ADDS     R6,R6,#+1
   \   0000006E   6D1E               SUBS     R5,R5,#+1
   \   00000070   0027               MOVS     R7,#+0
   6802                  
   6803                                  }
   \                     ??CheckingModule_Refresh_7:
   \   00000072   401C               ADDS     R0,R0,#+1
   \                     ??CheckingModule_Refresh_3:
   \   00000074   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000076   000E               LSRS     R0,R0,#+24
   \   00000078   2028               CMP      R0,#+32
   \   0000007A   08D2               BCS      ??CheckingModule_Refresh_8
   \   0000007C   6E49               LDR      R1,??CheckingModule_Refresh_0+0x4  ;; TransQuality + 76
   \   0000007E   0968               LDR      R1,[R1, #+0]
   \   00000080   0122               MOVS     R2,#+1
   \   00000082   8240               LSLS     R2,R2,R0
   \   00000084   0A40               ANDS     R2,R2,R1
   \   00000086   002A               CMP      R2,#+0
   \   00000088   E0D0               BEQ      ??CheckingModule_Refresh_4
   \   0000008A   0027               MOVS     R7,#+0
   \   0000008C   F1E7               B        ??CheckingModule_Refresh_7
   6804                                  
   6805                                }
   6806                     
   6807                                //wskanik jakoci              
   6808                                if (TransQuality.Mensur[0]) H_line(5,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \                     ??CheckingModule_Refresh_8:
   \   0000008E   6A48               LDR      R0,??CheckingModule_Refresh_0+0x4  ;; TransQuality + 76
   \   00000090   0068               LDR      R0,[R0, #+0]
   \   00000092   0028               CMP      R0,#+0
   \   00000094   06D0               BEQ      ??CheckingModule_Refresh_9
   \   00000096   0123               MOVS     R3,#+1
   \   00000098   0122               MOVS     R2,#+1
   \   0000009A   6846               MOV      R0,SP
   \   0000009C   0178               LDRB     R1,[R0, #+0]
   \   0000009E   0520               MOVS     R0,#+5
   \   000000A0   ........           BL       H_line
   6809                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(4,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   \                     ??CheckingModule_Refresh_9:
   \   000000A4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A6   240E               LSRS     R4,R4,#+24
   \   000000A8   0D2C               CMP      R4,#+13
   \   000000AA   0FD2               BCS      ??CheckingModule_Refresh_10
   \   000000AC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000AE   2D0E               LSRS     R5,R5,#+24
   \   000000B0   0B2D               CMP      R5,#+11
   \   000000B2   0BD2               BCS      ??CheckingModule_Refresh_10
   \   000000B4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000B6   360E               LSRS     R6,R6,#+24
   \   000000B8   062E               CMP      R6,#+6
   \   000000BA   07D2               BCS      ??CheckingModule_Refresh_10
   \   000000BC   0123               MOVS     R3,#+1
   \   000000BE   0322               MOVS     R2,#+3
   \   000000C0   6846               MOV      R0,SP
   \   000000C2   0178               LDRB     R1,[R0, #+0]
   \   000000C4   891C               ADDS     R1,R1,#+2
   \   000000C6   0420               MOVS     R0,#+4
   \   000000C8   ........           BL       H_line
   6810                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(3,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \                     ??CheckingModule_Refresh_10:
   \   000000CC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000CE   240E               LSRS     R4,R4,#+24
   \   000000D0   0B2C               CMP      R4,#+11
   \   000000D2   0FD2               BCS      ??CheckingModule_Refresh_11
   \   000000D4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000D6   2D0E               LSRS     R5,R5,#+24
   \   000000D8   072D               CMP      R5,#+7
   \   000000DA   0BD2               BCS      ??CheckingModule_Refresh_11
   \   000000DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \   000000E0   022E               CMP      R6,#+2
   \   000000E2   07D2               BCS      ??CheckingModule_Refresh_11
   \   000000E4   0123               MOVS     R3,#+1
   \   000000E6   0522               MOVS     R2,#+5
   \   000000E8   6846               MOV      R0,SP
   \   000000EA   0178               LDRB     R1,[R0, #+0]
   \   000000EC   091D               ADDS     R1,R1,#+4
   \   000000EE   0320               MOVS     R0,#+3
   \   000000F0   ........           BL       H_line
   6811                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(2,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)
   \                     ??CheckingModule_Refresh_11:
   \   000000F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F6   240E               LSRS     R4,R4,#+24
   \   000000F8   052C               CMP      R4,#+5
   \   000000FA   0FD2               BCS      ??CheckingModule_Refresh_12
   \   000000FC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000FE   2D0E               LSRS     R5,R5,#+24
   \   00000100   022D               CMP      R5,#+2
   \   00000102   0BD2               BCS      ??CheckingModule_Refresh_12
   \   00000104   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000106   360E               LSRS     R6,R6,#+24
   \   00000108   002E               CMP      R6,#+0
   \   0000010A   07D1               BNE      ??CheckingModule_Refresh_12
   \   0000010C   0123               MOVS     R3,#+1
   \   0000010E   0722               MOVS     R2,#+7
   \   00000110   6846               MOV      R0,SP
   \   00000112   0178               LDRB     R1,[R0, #+0]
   \   00000114   891D               ADDS     R1,R1,#+6
   \   00000116   0220               MOVS     R0,#+2
   \   00000118   ........           BL       H_line
   6812                     
   6813                      
   6814                                
   6815                                
   6816                                
   6817                         if (TransQuality.Mensur[0])
   \                     ??CheckingModule_Refresh_12:
   \   0000011C   4648               LDR      R0,??CheckingModule_Refresh_0+0x4  ;; TransQuality + 76
   \   0000011E   0068               LDR      R0,[R0, #+0]
   \   00000120   0028               CMP      R0,#+0
   \   00000122   79D0               BEQ      ??CheckingModule_Refresh_13
   6818                        { 
   6819                            unsigned short Sent=RF_NodeTest.SentSyn; 
   \   00000124   4548               LDR      R0,??CheckingModule_Refresh_0+0x8  ;; RF_NodeTest + 8
   \   00000126   0468               LDR      R4,[R0, #+0]
   6820                            unsigned short Recived=RF_NodeTest.Recived; 
   \   00000128   4548               LDR      R0,??CheckingModule_Refresh_0+0xC  ;; RF_NodeTest + 12
   \   0000012A   0268               LDR      R2,[R0, #+0]
   6821                         
   6822                           
   6823                            sprintf(txt, "%d", Recived);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000012C   1204               LSLS     R2,R2,#+16       ;; ZeroExtS R2,R2,#+16,#+16
   \   0000012E   120C               LSRS     R2,R2,#+16
   \   00000130   44A1               ADR      R1,??CheckingModule_Refresh_0+0x10  ;; 0x25, 0x64, 0x00, 0x00
   \   00000132   01A8               ADD      R0,SP,#+4
   \   00000134   ........           BL       sprintf
   6824                            Label("Ode:",0,3,66,10,30,1,127,0);  
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   7F21               MOVS     R1,#+127
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   1E21               MOVS     R1,#+30
   \   00000146   0A20               MOVS     R0,#+10
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   4223               MOVS     R3,#+66
   \   0000014C   0322               MOVS     R2,#+3
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   3D48               LDR      R0,??CheckingModule_Refresh_0+0x14  ;; `?<Constant "Ode:">`
   \   00000152   ........           BL       Label
   \   00000156   06B0               ADD      SP,SP,#+24
   6825                            Label(txt,0,27,66,10,34,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000158   82B0               SUB      SP,SP,#+8
   \   0000015A   0020               MOVS     R0,#+0
   \   0000015C   0090               STR      R0,[SP, #+0]
   \   0000015E   7F21               MOVS     R1,#+127
   \   00000160   0120               MOVS     R0,#+1
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   2221               MOVS     R1,#+34
   \   00000166   0A20               MOVS     R0,#+10
   \   00000168   03B4               PUSH     {R0,R1}
   \   0000016A   4223               MOVS     R3,#+66
   \   0000016C   1B22               MOVS     R2,#+27
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   07A8               ADD      R0,SP,#+28
   \   00000172   ........           BL       Label
   \   00000176   06B0               ADD      SP,SP,#+24
   6826                                         
   6827                            sprintf(txt, "%d", Sent);
   \   00000178   2404               LSLS     R4,R4,#+16       ;; ZeroExtS R4,R4,#+16,#+16
   \   0000017A   240C               LSRS     R4,R4,#+16
   \   0000017C   2200               MOVS     R2,R4
   \   0000017E   31A1               ADR      R1,??CheckingModule_Refresh_0+0x10  ;; 0x25, 0x64, 0x00, 0x00
   \   00000180   01A8               ADD      R0,SP,#+4
   \   00000182   ........           BL       sprintf
   6828                            Label("Wys:",0,3,75,10,30,1,127,0); 
   \   00000186   82B0               SUB      SP,SP,#+8
   \   00000188   0020               MOVS     R0,#+0
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   7F21               MOVS     R1,#+127
   \   0000018E   0120               MOVS     R0,#+1
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   1E21               MOVS     R1,#+30
   \   00000194   0A20               MOVS     R0,#+10
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   4B23               MOVS     R3,#+75
   \   0000019A   0322               MOVS     R2,#+3
   \   0000019C   0021               MOVS     R1,#+0
   \   0000019E   2B48               LDR      R0,??CheckingModule_Refresh_0+0x18  ;; `?<Constant "Wys:">`
   \   000001A0   ........           BL       Label
   \   000001A4   06B0               ADD      SP,SP,#+24
   6829                            Label(txt,0,27,75,10,34,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A6   82B0               SUB      SP,SP,#+8
   \   000001A8   0020               MOVS     R0,#+0
   \   000001AA   0090               STR      R0,[SP, #+0]
   \   000001AC   7F21               MOVS     R1,#+127
   \   000001AE   0120               MOVS     R0,#+1
   \   000001B0   03B4               PUSH     {R0,R1}
   \   000001B2   2221               MOVS     R1,#+34
   \   000001B4   0A20               MOVS     R0,#+10
   \   000001B6   03B4               PUSH     {R0,R1}
   \   000001B8   4B23               MOVS     R3,#+75
   \   000001BA   1B22               MOVS     R2,#+27
   \   000001BC   0021               MOVS     R1,#+0
   \   000001BE   07A8               ADD      R0,SP,#+28
   \   000001C0   ........           BL       Label
   \   000001C4   06B0               ADD      SP,SP,#+24
   6830                            
   6831                            Button("We/Wy",3,51,58,15);
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   0F20               MOVS     R0,#+15
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   3A23               MOVS     R3,#+58
   \   000001CE   3322               MOVS     R2,#+51
   \   000001D0   0321               MOVS     R1,#+3
   \   000001D2   1F48               LDR      R0,??CheckingModule_Refresh_0+0x1C  ;; `?<Constant "We/Wy">`
   \   000001D4   ........           BL       Button
   \   000001D8   02B0               ADD      SP,SP,#+8
   6832                            Button("We analog.",3,35,58,15);
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0F20               MOVS     R0,#+15
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   3A23               MOVS     R3,#+58
   \   000001E2   2322               MOVS     R2,#+35
   \   000001E4   0321               MOVS     R1,#+3
   \   000001E6   1B48               LDR      R0,??CheckingModule_Refresh_0+0x20  ;; `?<Constant "We analog.">`
   \   000001E8   ........           BL       Button
   \   000001EC   02B0               ADD      SP,SP,#+8
   6833                            Button("Test MG1",3,19,58,15);
   \   000001EE   82B0               SUB      SP,SP,#+8
   \   000001F0   0F20               MOVS     R0,#+15
   \   000001F2   0090               STR      R0,[SP, #+0]
   \   000001F4   3A23               MOVS     R3,#+58
   \   000001F6   1322               MOVS     R2,#+19
   \   000001F8   0321               MOVS     R1,#+3
   \   000001FA   1748               LDR      R0,??CheckingModule_Refresh_0+0x24  ;; `?<Constant "Test MG1">`
   \   000001FC   ........           BL       Button
   \   00000200   02B0               ADD      SP,SP,#+8
   6834                            Button("Test MR1.",3,3,58,15);
   \   00000202   82B0               SUB      SP,SP,#+8
   \   00000204   0F20               MOVS     R0,#+15
   \   00000206   0090               STR      R0,[SP, #+0]
   \   00000208   3A23               MOVS     R3,#+58
   \   0000020A   0322               MOVS     R2,#+3
   \   0000020C   0321               MOVS     R1,#+3
   \   0000020E   1348               LDR      R0,??CheckingModule_Refresh_0+0x28  ;; `?<Constant "Test MR1.">`
   \   00000210   ........           BL       Button
   \   00000214   02B0               ADD      SP,SP,#+8
   \   00000216   08E0               B        ??CheckingModule_Refresh_2
   6835                            
   6836                        }else{           
   6837                           
   6838                          RF_NodeTest.Sent=0;
   \                     ??CheckingModule_Refresh_13:
   \   00000218   1148               LDR      R0,??CheckingModule_Refresh_0+0x2C  ;; RF_NodeTest + 4
   \   0000021A   0021               MOVS     R1,#+0
   \   0000021C   0160               STR      R1,[R0, #+0]
   6839                          RF_NodeTest.SentSyn=0;   
   \   0000021E   0748               LDR      R0,??CheckingModule_Refresh_0+0x8  ;; RF_NodeTest + 8
   \   00000220   0021               MOVS     R1,#+0
   \   00000222   0160               STR      R1,[R0, #+0]
   6840                          RF_NodeTest.Recived=0;
   \   00000224   0648               LDR      R0,??CheckingModule_Refresh_0+0xC  ;; RF_NodeTest + 12
   \   00000226   0021               MOVS     R1,#+0
   \   00000228   0160               STR      R1,[R0, #+0]
   \                     ??CheckingModule_Refresh_2:
   \   0000022A   05B0               ADD      SP,SP,#+20
   \   0000022C   F0BC               POP      {R4-R7}
   \   0000022E   01BC               POP      {R0}
   \   00000230   0047               BX       R0               ;; return
   \   00000232   C046               Nop      
   \                     ??CheckingModule_Refresh_0:
   \   00000234   ........           DC32     ??Dziel5_1
   \   00000238   ........           DC32     TransQuality + 76
   \   0000023C   ........           DC32     RF_NodeTest + 8
   \   00000240   ........           DC32     RF_NodeTest + 12
   \   00000244   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000248   ........           DC32     `?<Constant "Ode:">`
   \   0000024C   ........           DC32     `?<Constant "Wys:">`
   \   00000250   ........           DC32     `?<Constant "We/Wy">`
   \   00000254   ........           DC32     `?<Constant "We analog.">`
   \   00000258   ........           DC32     `?<Constant "Test MG1">`
   \   0000025C   ........           DC32     `?<Constant "Test MR1.">`
   \   00000260   ........           DC32     RF_NodeTest + 4
   6841                        }
   6842          
   6843                                
   6844                 }

   \                                 In section .bss, align 1
   \                     ??Dziel5_1:
   \   00000000                      DS8 1
   6845                
   6846                
   6847                
   6848           
   6849                
   6850                
   6851                
   6852                
   6853                      
   6854                
   6855                
   6856                
   6857                
   6858          
   6859          //Ustawienia ******************************************************************************************************************

   \                                 In section .bss, align 1
   6860          char RF_Channel_nr_tmp;
   \                     RF_Channel_nr_tmp:
   \   00000000                      DS8 1
   6861          
   6862          
   6863                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6864                void Setup_Paint(void)
   6865                {  
   \                     Setup_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   6866                   char *MS="Slave";
   \   00000004   5D4A               LDR      R2,??Setup_Paint_0  ;; `?<Constant "Slave">`
   6867                   /*
   6868                   if (AT91C_IFLASH_MEM->Config.SlaveMode)
   6869                   {
   6870                     MS="Master";    
   6871                   }else{
   6872                     MS="Slave";
   6873                   } 
   6874                   */
   6875                  
   6876                   if (!AT91C_IFLASH_MEM->Config.SlaveMode) 
   \   00000006   5E48               LDR      R0,??Setup_Paint_0+0x4  ;; 0x13d7e8
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000C   000E               LSRS     R0,R0,#+24
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   43D1               BNE      ??Setup_Paint_1
   6877                    {
   6878                      List_Paint(Speech[g_leng].Ustawienia,7,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Ekran,Speech[g_leng].Dzwiek, MS, Speech[g_leng].RfChannel,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   5B48               LDR      R0,??Setup_Paint_0+0x8  ;; 0x645
   \   00000016   5C4B               LDR      R3,??Setup_Paint_0+0xC  ;; g_leng
   \   00000018   1B68               LDR      R3,[R3, #+0]
   \   0000001A   5C4C               LDR      R4,??Setup_Paint_0+0x10  ;; 0xa7d
   \   0000001C   6343               MULS     R3,R4,R3
   \   0000001E   5C4C               LDR      R4,??Setup_Paint_0+0x14  ;; Speech
   \   00000020   E318               ADDS     R3,R4,R3
   \   00000022   1818               ADDS     R0,R3,R0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   1100               MOVS     R1,R2
   \   00000028   5A48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x6cc
   \   0000002A   574A               LDR      R2,??Setup_Paint_0+0xC  ;; g_leng
   \   0000002C   1268               LDR      R2,[R2, #+0]
   \   0000002E   574B               LDR      R3,??Setup_Paint_0+0x10  ;; 0xa7d
   \   00000030   5A43               MULS     R2,R3,R2
   \   00000032   574B               LDR      R3,??Setup_Paint_0+0x14  ;; Speech
   \   00000034   9A18               ADDS     R2,R3,R2
   \   00000036   1018               ADDS     R0,R2,R0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5748               LDR      R0,??Setup_Paint_0+0x1C  ;; 0x4dd
   \   0000003C   5249               LDR      R1,??Setup_Paint_0+0xC  ;; g_leng
   \   0000003E   0968               LDR      R1,[R1, #+0]
   \   00000040   524A               LDR      R2,??Setup_Paint_0+0x10  ;; 0xa7d
   \   00000042   5143               MULS     R1,R2,R1
   \   00000044   524A               LDR      R2,??Setup_Paint_0+0x14  ;; Speech
   \   00000046   5118               ADDS     R1,R2,R1
   \   00000048   0918               ADDS     R1,R1,R0
   \   0000004A   4F48               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   0000004C   0068               LDR      R0,[R0, #+0]
   \   0000004E   4F4A               LDR      R2,??Setup_Paint_0+0x10  ;; 0xa7d
   \   00000050   5043               MULS     R0,R2,R0
   \   00000052   4F4A               LDR      R2,??Setup_Paint_0+0x14  ;; Speech
   \   00000054   1018               ADDS     R0,R2,R0
   \   00000056   C330               ADDS     R0,R0,#+195
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   4B48               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   0000005C   0068               LDR      R0,[R0, #+0]
   \   0000005E   4B49               LDR      R1,??Setup_Paint_0+0x10  ;; 0xa7d
   \   00000060   4843               MULS     R0,R1,R0
   \   00000062   4B49               LDR      R1,??Setup_Paint_0+0x14  ;; Speech
   \   00000064   0918               ADDS     R1,R1,R0
   \   00000066   B431               ADDS     R1,R1,#+180
   \   00000068   4748               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   0000006A   0068               LDR      R0,[R0, #+0]
   \   0000006C   474A               LDR      R2,??Setup_Paint_0+0x10  ;; 0xa7d
   \   0000006E   5043               MULS     R0,R2,R0
   \   00000070   474A               LDR      R2,??Setup_Paint_0+0x14  ;; Speech
   \   00000072   1018               ADDS     R0,R2,R0
   \   00000074   6930               ADDS     R0,R0,#+105
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   0021               MOVS     R1,#+0
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0023               MOVS     R3,#+0
   \   00000080   0D22               MOVS     R2,#+13
   \   00000082   0721               MOVS     R1,#+7
   \   00000084   4048               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   00000086   0068               LDR      R0,[R0, #+0]
   \   00000088   404C               LDR      R4,??Setup_Paint_0+0x10  ;; 0xa7d
   \   0000008A   6043               MULS     R0,R4,R0
   \   0000008C   404C               LDR      R4,??Setup_Paint_0+0x14  ;; Speech
   \   0000008E   2018               ADDS     R0,R4,R0
   \   00000090   3C30               ADDS     R0,R0,#+60
   \   00000092   ........           BL       List_Paint
   \   00000096   0AB0               ADD      SP,SP,#+40
   \   00000098   3BE0               B        ??Setup_Paint_2
   6879                    }else{
   6880                      List_Paint(Speech[g_leng].Ustawienia,6,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Ekran, Speech[g_leng].Dzwiek,MS,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Setup_Paint_1:
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   1100               MOVS     R1,R2
   \   000000A2   3C48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x6cc
   \   000000A4   384A               LDR      R2,??Setup_Paint_0+0xC  ;; g_leng
   \   000000A6   1268               LDR      R2,[R2, #+0]
   \   000000A8   384B               LDR      R3,??Setup_Paint_0+0x10  ;; 0xa7d
   \   000000AA   5A43               MULS     R2,R3,R2
   \   000000AC   384B               LDR      R3,??Setup_Paint_0+0x14  ;; Speech
   \   000000AE   9A18               ADDS     R2,R3,R2
   \   000000B0   1018               ADDS     R0,R2,R0
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   3848               LDR      R0,??Setup_Paint_0+0x1C  ;; 0x4dd
   \   000000B6   3449               LDR      R1,??Setup_Paint_0+0xC  ;; g_leng
   \   000000B8   0968               LDR      R1,[R1, #+0]
   \   000000BA   344A               LDR      R2,??Setup_Paint_0+0x10  ;; 0xa7d
   \   000000BC   5143               MULS     R1,R2,R1
   \   000000BE   344A               LDR      R2,??Setup_Paint_0+0x14  ;; Speech
   \   000000C0   5118               ADDS     R1,R2,R1
   \   000000C2   0918               ADDS     R1,R1,R0
   \   000000C4   3048               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   000000C6   0068               LDR      R0,[R0, #+0]
   \   000000C8   304A               LDR      R2,??Setup_Paint_0+0x10  ;; 0xa7d
   \   000000CA   5043               MULS     R0,R2,R0
   \   000000CC   304A               LDR      R2,??Setup_Paint_0+0x14  ;; Speech
   \   000000CE   1018               ADDS     R0,R2,R0
   \   000000D0   C330               ADDS     R0,R0,#+195
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   2C48               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   000000D6   0068               LDR      R0,[R0, #+0]
   \   000000D8   2C49               LDR      R1,??Setup_Paint_0+0x10  ;; 0xa7d
   \   000000DA   4843               MULS     R0,R1,R0
   \   000000DC   2C49               LDR      R1,??Setup_Paint_0+0x14  ;; Speech
   \   000000DE   0918               ADDS     R1,R1,R0
   \   000000E0   B431               ADDS     R1,R1,#+180
   \   000000E2   2948               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   000000E4   0068               LDR      R0,[R0, #+0]
   \   000000E6   294A               LDR      R2,??Setup_Paint_0+0x10  ;; 0xa7d
   \   000000E8   5043               MULS     R0,R2,R0
   \   000000EA   294A               LDR      R2,??Setup_Paint_0+0x14  ;; Speech
   \   000000EC   1018               ADDS     R0,R2,R0
   \   000000EE   6930               ADDS     R0,R0,#+105
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   0020               MOVS     R0,#+0
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   0023               MOVS     R3,#+0
   \   000000FA   0D22               MOVS     R2,#+13
   \   000000FC   0621               MOVS     R1,#+6
   \   000000FE   2248               LDR      R0,??Setup_Paint_0+0xC  ;; g_leng
   \   00000100   0068               LDR      R0,[R0, #+0]
   \   00000102   224C               LDR      R4,??Setup_Paint_0+0x10  ;; 0xa7d
   \   00000104   6043               MULS     R0,R4,R0
   \   00000106   224C               LDR      R4,??Setup_Paint_0+0x14  ;; Speech
   \   00000108   2018               ADDS     R0,R4,R0
   \   0000010A   3C30               ADDS     R0,R0,#+60
   \   0000010C   ........           BL       List_Paint
   \   00000110   0AB0               ADD      SP,SP,#+40
   6881                    }
   6882                    RF_Channel_nr_tmp=RF_Status.Ch;
   \                     ??Setup_Paint_2:
   \   00000112   2248               LDR      R0,??Setup_Paint_0+0x20  ;; RF_Channel_nr_tmp
   \   00000114   2249               LDR      R1,??Setup_Paint_0+0x24  ;; RF_Status + 14
   \   00000116   0978               LDRB     R1,[R1, #+0]
   \   00000118   0170               STRB     R1,[R0, #+0]
   6883                   
   6884                   //znacznik dzwieku
   6885                   if (!(AT91C_IFLASH_MEM->Config.SoundOff))
   \   0000011A   2248               LDR      R0,??Setup_Paint_0+0x28  ;; 0x13d7e9
   \   0000011C   0078               LDRB     R0,[R0, #+0]
   \   0000011E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000120   000E               LSRS     R0,R0,#+24
   \   00000122   0028               CMP      R0,#+0
   \   00000124   0FD1               BNE      ??Setup_Paint_3
   6886                        {
   6887                              
   6888                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000126   03A8               ADD      R0,SP,#+12
   \   00000128   1F49               LDR      R1,??Setup_Paint_0+0x2C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   \   0000012A   1CC9               LDM      R1!,{R2-R4}
   \   0000012C   1CC0               STM      R0!,{R2-R4}
   \   0000012E   0C39               SUBS     R1,R1,#+12
   \   00000130   0C38               SUBS     R0,R0,#+12
   6889                          CopyToCanvasPoint((char *)ekran_tab,45,99-(13*(4)),8,10); 
   \   00000132   82B0               SUB      SP,SP,#+8
   \   00000134   0A20               MOVS     R0,#+10
   \   00000136   0090               STR      R0,[SP, #+0]
   \   00000138   0823               MOVS     R3,#+8
   \   0000013A   2F22               MOVS     R2,#+47
   \   0000013C   2D21               MOVS     R1,#+45
   \   0000013E   05A8               ADD      R0,SP,#+20
   \   00000140   ........           BL       CopyToCanvasPoint
   \   00000144   02B0               ADD      SP,SP,#+8
   6890                        }
   6891                            //znacznik dzwieku
   6892                   if (AT91C_IFLASH_MEM->Config.SlaveMode)
   \                     ??Setup_Paint_3:
   \   00000146   0E48               LDR      R0,??Setup_Paint_0+0x4  ;; 0x13d7e8
   \   00000148   0078               LDRB     R0,[R0, #+0]
   \   0000014A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000014C   000E               LSRS     R0,R0,#+24
   \   0000014E   0028               CMP      R0,#+0
   \   00000150   0FD0               BEQ      ??Setup_Paint_4
   6893                        {
   6894                              
   6895                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000152   6846               MOV      R0,SP
   \   00000154   1549               LDR      R1,??Setup_Paint_0+0x30  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   \   00000156   1CC9               LDM      R1!,{R2-R4}
   \   00000158   1CC0               STM      R0!,{R2-R4}
   \   0000015A   0C39               SUBS     R1,R1,#+12
   \   0000015C   0C38               SUBS     R0,R0,#+12
   6896                          CopyToCanvasPoint((char *)ekran_tab,45,99-(13*(5)),8,10); 
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   0A20               MOVS     R0,#+10
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   0823               MOVS     R3,#+8
   \   00000166   2222               MOVS     R2,#+34
   \   00000168   2D21               MOVS     R1,#+45
   \   0000016A   02A8               ADD      R0,SP,#+8
   \   0000016C   ........           BL       CopyToCanvasPoint
   \   00000170   02B0               ADD      SP,SP,#+8
   6897                        }
   6898                   
   6899                }//________________________________________________________________________
   \                     ??Setup_Paint_4:
   \   00000172   06B0               ADD      SP,SP,#+24
   \   00000174   10BC               POP      {R4}
   \   00000176   01BC               POP      {R0}
   \   00000178   0047               BX       R0               ;; return
   \   0000017A   C046               Nop      
   \                     ??Setup_Paint_0:
   \   0000017C   ........           DC32     `?<Constant "Slave">`
   \   00000180   E8D71300           DC32     0x13d7e8
   \   00000184   45060000           DC32     0x645
   \   00000188   ........           DC32     g_leng
   \   0000018C   7D0A0000           DC32     0xa7d
   \   00000190   ........           DC32     Speech
   \   00000194   CC060000           DC32     0x6cc
   \   00000198   DD040000           DC32     0x4dd
   \   0000019C   ........           DC32     RF_Channel_nr_tmp
   \   000001A0   ........           DC32     RF_Status + 14
   \   000001A4   E9D71300           DC32     0x13d7e9
   \   000001A8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   \   000001AC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   6900          
   6901          
   6902          
   6903                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6904                void Setup_Event(void)
   6905                {
   \                     Setup_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6906                  int ans;
   6907                  char repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   6908                  if (!AT91C_IFLASH_MEM->Config.SlaveMode) 
   \   00000004   8348               LDR      R0,??Setup_Event_0  ;; 0x13d7e8
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   15D1               BNE      ??Setup_Event_1
   6909                    {
   6910                      ans=List_Event(X_up, Y_up, X_down, Y_down, 7 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0D21               MOVS     R1,#+13
   \   00000018   0720               MOVS     R0,#+7
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   7E48               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   435E               LDRSH    R3,[R0, R1]
   \   00000022   7E48               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   425E               LDRSH    R2,[R0, R1]
   \   00000028   7D48               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   415E               LDRSH    R1,[R0, R1]
   \   0000002E   7D48               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   00000030   0025               MOVS     R5,#+0
   \   00000032   405F               LDRSH    R0,[R0, R5]
   \   00000034   ........           BL       List_Event
   \   00000038   04B0               ADD      SP,SP,#+16
   \   0000003A   14E0               B        ??Setup_Event_2
   6911                    }else{
   6912                      ans=List_Event(X_up, Y_up, X_down, Y_down, 6 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Setup_Event_1:
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   0D21               MOVS     R1,#+13
   \   00000044   0620               MOVS     R0,#+6
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   7348               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   435E               LDRSH    R3,[R0, R1]
   \   0000004E   7348               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   425E               LDRSH    R2,[R0, R1]
   \   00000054   7248               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   415E               LDRSH    R1,[R0, R1]
   \   0000005A   7248               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   0000005C   0025               MOVS     R5,#+0
   \   0000005E   405F               LDRSH    R0,[R0, R5]
   \   00000060   ........           BL       List_Event
   \   00000064   04B0               ADD      SP,SP,#+16
   6913                    }
   6914                  if (ans>0)
   \                     ??Setup_Event_2:
   \   00000066   0128               CMP      R0,#+1
   \   00000068   00DA               BGE      .+4
   \   0000006A   BEE0               B        ??Setup_Event_3
   6915                    {
   6916          
   6917                          if (ans==5)
   \   0000006C   0528               CMP      R0,#+5
   \   0000006E   1AD1               BNE      ??Setup_Event_4
   6918                          {
   6919                            char SoundOff;
   6920                            if (AT91C_IFLASH_MEM->Config.SoundOff)
   \   00000070   6846               MOV      R0,SP
   \   00000072   6D49               LDR      R1,??Setup_Event_0+0x14  ;; 0x13d7e9
   \   00000074   0978               LDRB     R1,[R1, #+0]
   \   00000076   0A00               MOVS     R2,R1
   \   00000078   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000007A   120E               LSRS     R2,R2,#+24
   \   0000007C   521E               SUBS     R2,R2,#+1
   \   0000007E   9241               SBCS     R2,R2,R2
   \   00000080   D20F               LSRS     R2,R2,#+31
   \   00000082   4270               STRB     R2,[R0, #+1]
   6921                              {
   6922                                SoundOff=0;
   6923                              }else{
   6924                                SoundOff=1; 
   6925                              }
   6926                            
   6927                            //zapis do flash
   6928                              unsigned int Save = __get_interrupt_state();  
   \   00000084   ........           BL       __iar_get_interrupt_state
   \   00000088   0500               MOVS     R5,R0
   6929                              __disable_interrupt();
   \   0000008A   ........           BL       __iar_disable_interrupt
   6930                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SoundOff)), (char*) (&(SoundOff)), 1);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000008E   0122               MOVS     R2,#+1
   \   00000090   00A9               ADD      R1,SP,#+0
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   6448               LDR      R0,??Setup_Event_0+0x14  ;; 0x13d7e9
   \   00000096   ........           BL       FlashWrite
   6931                              __set_interrupt_state(Save);
   \   0000009A   2800               MOVS     R0,R5
   \   0000009C   ........           BL       __iar_set_interrupt_state
   6932                              __enable_interrupt();
   \   000000A0   ........           BL       __iar_enable_interrupt
   \   000000A4   ABE0               B        ??Setup_Event_5
   6933                              //koniec zapisu do flash
   6934                             
   6935                          } else if (ans==6)
   \                     ??Setup_Event_4:
   \   000000A6   0628               CMP      R0,#+6
   \   000000A8   00D0               BEQ      .+4
   \   000000AA   95E0               B        ??Setup_Event_6
   6936                          {
   6937                              char SlaveModeTmp;
   6938                              if (AT91C_IFLASH_MEM->Config.SlaveMode)
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   5949               LDR      R1,??Setup_Event_0  ;; 0x13d7e8
   \   000000B0   0978               LDRB     R1,[R1, #+0]
   \   000000B2   0A00               MOVS     R2,R1
   \   000000B4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000B6   120E               LSRS     R2,R2,#+24
   \   000000B8   521E               SUBS     R2,R2,#+1
   \   000000BA   9241               SBCS     R2,R2,R2
   \   000000BC   D20F               LSRS     R2,R2,#+31
   \   000000BE   0270               STRB     R2,[R0, #+0]
   6939                              {
   6940                                SlaveModeTmp=0;
   6941                              }else{
   6942                                SlaveModeTmp=1;
   6943                              }
   6944                              SlaveMode=SlaveModeTmp;
   \   000000C0   5A48               LDR      R0,??Setup_Event_0+0x18  ;; SlaveMode
   \   000000C2   6946               MOV      R1,SP
   \   000000C4   0978               LDRB     R1,[R1, #+0]
   \   000000C6   0170               STRB     R1,[R0, #+0]
   6945                              
   6946                              //zapis do flash
   6947                              unsigned int Save = __get_interrupt_state();  
   \   000000C8   ........           BL       __iar_get_interrupt_state
   \   000000CC   0400               MOVS     R4,R0
   6948                              __disable_interrupt();
   \   000000CE   ........           BL       __iar_disable_interrupt
   6949                              //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)),0, &SlaveMode,1);
   6950                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)), (char*) (&(SlaveModeTmp)), 1);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000D2   0122               MOVS     R2,#+1
   \   000000D4   6946               MOV      R1,SP
   \   000000D6   4F48               LDR      R0,??Setup_Event_0  ;; 0x13d7e8
   \   000000D8   ........           BL       FlashWrite
   6951                              __set_interrupt_state(Save);
   \   000000DC   2000               MOVS     R0,R4
   \   000000DE   ........           BL       __iar_set_interrupt_state
   6952                              __enable_interrupt(); 
   \   000000E2   ........           BL       __iar_enable_interrupt
   6953                              //koniec zapisu do flash
   6954                              
   6955                              if (!AT91C_IFLASH_MEM->Config.SlaveMode) //je¿eli master 
   \   000000E6   4B48               LDR      R0,??Setup_Event_0  ;; 0x13d7e8
   \   000000E8   0078               LDRB     R0,[R0, #+0]
   \   000000EA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000EC   000E               LSRS     R0,R0,#+24
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   13D1               BNE      ??Setup_Event_7
   6956                              {
   6957                                RF_Status.MasterMode=1;
   \   000000F2   4F48               LDR      R0,??Setup_Event_0+0x1C  ;; RF_Status + 13
   \   000000F4   0121               MOVS     R1,#+1
   \   000000F6   0170               STRB     R1,[R0, #+0]
   6958                                _RF_EnableRX(); 
                                       ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   000000F8   ........           BL       _RF_EnableRX
   6959                               for (char i=0; i<NumberNeurons; i++) TransQuality.Mensur[i]=0; 
   \   000000FC   0020               MOVS     R0,#+0
   \                     ??Setup_Event_8:
   \   000000FE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000100   000E               LSRS     R0,R0,#+24
   \   00000102   2328               CMP      R0,#+35
   \   00000104   0CD2               BCS      ??Setup_Event_9
   \   00000106   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000108   000E               LSRS     R0,R0,#+24
   \   0000010A   0421               MOVS     R1,#+4
   \   0000010C   4143               MULS     R1,R0,R1
   \   0000010E   494A               LDR      R2,??Setup_Event_0+0x20  ;; TransQuality
   \   00000110   5118               ADDS     R1,R2,R1
   \   00000112   0022               MOVS     R2,#+0
   \   00000114   CA64               STR      R2,[R1, #+76]
   \   00000116   401C               ADDS     R0,R0,#+1
   \   00000118   F1E7               B        ??Setup_Event_8
   6960                              }else{
   6961                                RF_Status.MasterMode=0; 
   \                     ??Setup_Event_7:
   \   0000011A   4548               LDR      R0,??Setup_Event_0+0x1C  ;; RF_Status + 13
   \   0000011C   0021               MOVS     R1,#+0
   \   0000011E   0170               STRB     R1,[R0, #+0]
   6962                              }
   6963                                 AT91PS_MEM pAT91C_IFLASH_MEM=AT91C_IFLASH_MEM;
   \                     ??Setup_Event_9:
   \   00000120   9820               MOVS     R0,#+152
   \   00000122   4003               LSLS     R0,R0,#+13       ;; #+1245184
   6964                                RF_Status.Ch=pAT91C_IFLASH_MEM->Config.RF_channel;
   \   00000124   4449               LDR      R1,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   00000126   454A               LDR      R2,??Setup_Event_0+0x28  ;; 0xd7e6
   \   00000128   805C               LDRB     R0,[R0, R2]
   \   0000012A   0870               STRB     R0,[R1, #+0]
   6965                                SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
                                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000012C   0221               MOVS     R1,#+2
   \   0000012E   0C00               MOVS     R4,R1
   \   00000130   4148               LDR      R0,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   00000132   0078               LDRB     R0,[R0, #+0]
   \   00000134   ........           BL       __aeabi_ui2d
   \   00000138   414A               LDR      R2,??Setup_Event_0+0x2C  ;; 0x33333333
   \   0000013A   424B               LDR      R3,??Setup_Event_0+0x30  ;; 0x3fd33333
   \   0000013C   ........           BL       __aeabi_dmul
   \   00000140   414A               LDR      R2,??Setup_Event_0+0x34  ;; 0x5c28f5c3
   \   00000142   424B               LDR      R3,??Setup_Event_0+0x38  ;; 0x408ae28f
   \   00000144   ........           BL       __aeabi_dadd
   \   00000148   0022               MOVS     R2,#+0
   \   0000014A   414B               LDR      R3,??Setup_Event_0+0x3C  ;; 0x40690000
   \   0000014C   ........           BL       __aeabi_dmul
   \   00000150   0022               MOVS     R2,#+0
   \   00000152   404B               LDR      R3,??Setup_Event_0+0x40  ;; 0xc104ff00
   \   00000154   ........           BL       __aeabi_dadd
   \   00000158   ........           BL       __aeabi_d2iz
   \   0000015C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000015E   0014               ASRS     R0,R0,#+16
   \   00000160   A021               MOVS     R1,#+160
   \   00000162   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   00000164   0143               ORRS     R1,R1,R0
   \   00000166   0800               MOVS     R0,R1
   \   00000168   2100               MOVS     R1,R4
   \   0000016A   ........           BL       SPI_SendWord
   \   0000016E   23E0               B        ??Setup_Event_10
   6966                                while (RF_CheckChannel())
   6967                                {
   6968                                  if (RF_Status.Ch<RF_ChannelQuanti-1) {RF_Status.Ch++;} else {RF_Status.Ch=1;}
   \                     ??Setup_Event_11:
   \   00000170   3148               LDR      R0,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   00000172   0121               MOVS     R1,#+1
   \   00000174   0170               STRB     R1,[R0, #+0]
   6969                                  SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
   \                     ??Setup_Event_12:
   \   00000176   0221               MOVS     R1,#+2
   \   00000178   0C00               MOVS     R4,R1
   \   0000017A   2F48               LDR      R0,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   ........           BL       __aeabi_ui2d
   \   00000182   2F4A               LDR      R2,??Setup_Event_0+0x2C  ;; 0x33333333
   \   00000184   2F4B               LDR      R3,??Setup_Event_0+0x30  ;; 0x3fd33333
   \   00000186   ........           BL       __aeabi_dmul
   \   0000018A   2F4A               LDR      R2,??Setup_Event_0+0x34  ;; 0x5c28f5c3
   \   0000018C   2F4B               LDR      R3,??Setup_Event_0+0x38  ;; 0x408ae28f
   \   0000018E   ........           BL       __aeabi_dadd
   \   00000192   0022               MOVS     R2,#+0
   \   00000194   2E4B               LDR      R3,??Setup_Event_0+0x3C  ;; 0x40690000
   \   00000196   ........           BL       __aeabi_dmul
   \   0000019A   0022               MOVS     R2,#+0
   \   0000019C   2D4B               LDR      R3,??Setup_Event_0+0x40  ;; 0xc104ff00
   \   0000019E   ........           BL       __aeabi_dadd
   \   000001A2   ........           BL       __aeabi_d2iz
   \   000001A6   0100               MOVS     R1,R0
   \   000001A8   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   000001AA   0914               ASRS     R1,R1,#+16
   \   000001AC   A020               MOVS     R0,#+160
   \   000001AE   0002               LSLS     R0,R0,#+8        ;; #+40960
   \   000001B0   0843               ORRS     R0,R0,R1
   \   000001B2   2100               MOVS     R1,R4
   \   000001B4   ........           BL       SPI_SendWord
   \                     ??Setup_Event_10:
   \   000001B8   ........           BL       RF_CheckChannel
   \   000001BC   0028               CMP      R0,#+0
   \   000001BE   09D0               BEQ      ??Setup_Event_13
   \   000001C0   1D48               LDR      R0,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   000001C2   0078               LDRB     R0,[R0, #+0]
   \   000001C4   2728               CMP      R0,#+39
   \   000001C6   D3D2               BCS      ??Setup_Event_11
   \   000001C8   1B48               LDR      R0,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   000001CA   1B49               LDR      R1,??Setup_Event_0+0x24  ;; RF_Status + 14
   \   000001CC   0978               LDRB     R1,[R1, #+0]
   \   000001CE   491C               ADDS     R1,R1,#+1
   \   000001D0   0170               STRB     R1,[R0, #+0]
   \   000001D2   D0E7               B        ??Setup_Event_12
   6970                                } 
   6971                               
   6972                             repaint=1;
   \                     ??Setup_Event_13:
   \   000001D4   0124               MOVS     R4,#+1
   \   000001D6   12E0               B        ??Setup_Event_5
   6973                          }else{
   6974                              repaint=1;
   \                     ??Setup_Event_6:
   \   000001D8   0124               MOVS     R4,#+1
   6975                              MenuLevel=(MenuLevel*10+ans);
   \   000001DA   1F49               LDR      R1,??Setup_Event_0+0x44  ;; MenuLevel
   \   000001DC   1E4A               LDR      R2,??Setup_Event_0+0x44  ;; MenuLevel
   \   000001DE   1268               LDR      R2,[R2, #+0]
   \   000001E0   0A23               MOVS     R3,#+10
   \   000001E2   5A43               MULS     R2,R3,R2
   \   000001E4   1018               ADDS     R0,R2,R0
   \   000001E6   0860               STR      R0,[R1, #+0]
   \   000001E8   09E0               B        ??Setup_Event_5
   6976                            
   6977                          }
   6978                    
   6979                    }else if (ans<0){
   \                     ??Setup_Event_3:
   \   000001EA   0028               CMP      R0,#+0
   \   000001EC   07D5               BPL      ??Setup_Event_5
   6980                      MenuLevel=(MenuLevel/10);
   \   000001EE   1A48               LDR      R0,??Setup_Event_0+0x44  ;; MenuLevel
   \   000001F0   0068               LDR      R0,[R0, #+0]
   \   000001F2   0A21               MOVS     R1,#+10
   \   000001F4   ........           BL       __aeabi_idivmod
   \   000001F8   1749               LDR      R1,??Setup_Event_0+0x44  ;; MenuLevel
   \   000001FA   0860               STR      R0,[R1, #+0]
   6981                      repaint=1;
   \   000001FC   0124               MOVS     R4,#+1
   6982                    } 
   6983                  
   6984                   if (repaint) MenuPaint();
   \                     ??Setup_Event_5:
   \   000001FE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000200   240E               LSRS     R4,R4,#+24
   \   00000202   002C               CMP      R4,#+0
   \   00000204   01D0               BEQ      ??Setup_Event_14
   \   00000206   ........           BL       MenuPaint
   6985                }//_______________________________________________________________________
   \                     ??Setup_Event_14:
   \   0000020A   01B0               ADD      SP,SP,#+4
   \   0000020C   30BC               POP      {R4,R5}
   \   0000020E   01BC               POP      {R0}
   \   00000210   0047               BX       R0               ;; return
   \   00000212   C046               Nop      
   \                     ??Setup_Event_0:
   \   00000214   E8D71300           DC32     0x13d7e8
   \   00000218   ........           DC32     Y_down
   \   0000021C   ........           DC32     X_down
   \   00000220   ........           DC32     Y_up
   \   00000224   ........           DC32     X_up
   \   00000228   E9D71300           DC32     0x13d7e9
   \   0000022C   ........           DC32     SlaveMode
   \   00000230   ........           DC32     RF_Status + 13
   \   00000234   ........           DC32     TransQuality
   \   00000238   ........           DC32     RF_Status + 14
   \   0000023C   E6D70000           DC32     0xd7e6
   \   00000240   33333333           DC32     0x33333333
   \   00000244   3333D33F           DC32     0x3fd33333
   \   00000248   C3F5285C           DC32     0x5c28f5c3
   \   0000024C   8FE28A40           DC32     0x408ae28f
   \   00000250   00006940           DC32     0x40690000
   \   00000254   00FF04C1           DC32     0xc104ff00
   \   00000258   ........           DC32     MenuLevel
   6986          
   6987          
   6988          
   6989          //Ustawienia jêzyka******************************************************************************************************************
   6990          
   6991                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6992                void SetupLang_Paint(void)
   6993                {  
   \                     SetupLang_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   6994                    //char Y=3;
   6995                    int Y_tmp = 3;   //przesuniêcie w dó³
   \   00000002   0324               MOVS     R4,#+3
   6996          
   6997                    List_Paint("Jezyk",2,15,Y_tmp,7,0,Speech[g_leng].Polski, Speech[g_leng].Angielski,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   1B48               LDR      R0,??SetupLang_Paint_0  ;; g_leng
   \   00000018   0068               LDR      R0,[R0, #+0]
   \   0000001A   1B49               LDR      R1,??SetupLang_Paint_0+0x4  ;; 0xa7d
   \   0000001C   4843               MULS     R0,R1,R0
   \   0000001E   1B49               LDR      R1,??SetupLang_Paint_0+0x8  ;; Speech
   \   00000020   0918               ADDS     R1,R1,R0
   \   00000022   E131               ADDS     R1,R1,#+225
   \   00000024   1748               LDR      R0,??SetupLang_Paint_0  ;; g_leng
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   174A               LDR      R2,??SetupLang_Paint_0+0x4  ;; 0xa7d
   \   0000002A   5043               MULS     R0,R2,R0
   \   0000002C   174A               LDR      R2,??SetupLang_Paint_0+0x8  ;; Speech
   \   0000002E   1018               ADDS     R0,R2,R0
   \   00000030   D230               ADDS     R0,R0,#+210
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   0720               MOVS     R0,#+7
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   2300               MOVS     R3,R4
   \   0000003C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000003E   1B0E               LSRS     R3,R3,#+24
   \   00000040   0F22               MOVS     R2,#+15
   \   00000042   0221               MOVS     R1,#+2
   \   00000044   1248               LDR      R0,??SetupLang_Paint_0+0xC  ;; `?<Constant "Jezyk">`
   \   00000046   ........           BL       List_Paint
   \   0000004A   0AB0               ADD      SP,SP,#+40
   6998                
   6999                    
   7000                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000004C   6846               MOV      R0,SP
   \   0000004E   1149               LDR      R1,??SetupLang_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   \   00000050   2CC9               LDM      R1!,{R2,R3,R5}
   \   00000052   2CC0               STM      R0!,{R2,R3,R5}
   \   00000054   0C39               SUBS     R1,R1,#+12
   \   00000056   0C38               SUBS     R0,R0,#+12
   7001                 
   7002                  
   7003                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(g_leng)),8,10); 
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   0A20               MOVS     R0,#+10
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   0823               MOVS     R3,#+8
   \   00000060   6120               MOVS     R0,#+97
   \   00000062   001B               SUBS     R0,R0,R4
   \   00000064   0749               LDR      R1,??SetupLang_Paint_0  ;; g_leng
   \   00000066   0968               LDR      R1,[R1, #+0]
   \   00000068   0F22               MOVS     R2,#+15
   \   0000006A   5143               MULS     R1,R2,R1
   \   0000006C   421A               SUBS     R2,R0,R1
   \   0000006E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   2D21               MOVS     R1,#+45
   \   00000074   02A8               ADD      R0,SP,#+8
   \   00000076   ........           BL       CopyToCanvasPoint
   \   0000007A   02B0               ADD      SP,SP,#+8
   7004                    
   7005                }//________________________________________________________________________
   \   0000007C   03B0               ADD      SP,SP,#+12
   \   0000007E   30BC               POP      {R4,R5}
   \   00000080   01BC               POP      {R0}
   \   00000082   0047               BX       R0               ;; return
   \                     ??SetupLang_Paint_0:
   \   00000084   ........           DC32     g_leng
   \   00000088   7D0A0000           DC32     0xa7d
   \   0000008C   ........           DC32     Speech
   \   00000090   ........           DC32     `?<Constant "Jezyk">`
   \   00000094   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   7006          
   7007          
   7008          
   7009                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7010                void SetupLang_Event(void)
   7011                {
   \                     SetupLang_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7012                  int ans;
   7013           
   7014                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,3); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0321               MOVS     R1,#+3
   \   00000004   0720               MOVS     R0,#+7
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1C48               LDR      R0,??SetupLang_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1B48               LDR      R0,??SetupLang_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1B48               LDR      R0,??SetupLang_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1A48               LDR      R0,??SetupLang_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   7015            
   7016                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   10D0               BEQ      ??SetupLang_Event_1
   7017                    {
   7018                      if ((ans>0) && (ans<3))
   \   00000030   0128               CMP      R0,#+1
   \   00000032   21DB               BLT      ??SetupLang_Event_2
   \   00000034   0328               CMP      R0,#+3
   \   00000036   1FDA               BGE      ??SetupLang_Event_2
   7019                      {
   7020                        g_leng=ans-1;
   \   00000038   1549               LDR      R1,??SetupLang_Event_0+0x10  ;; g_leng
   \   0000003A   401E               SUBS     R0,R0,#+1
   \   0000003C   0860               STR      R0,[R1, #+0]
   7021                        MenuLevel=(MenuLevel/10);
   \   0000003E   1548               LDR      R0,??SetupLang_Event_0+0x14  ;; MenuLevel
   \   00000040   0068               LDR      R0,[R0, #+0]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   1249               LDR      R1,??SetupLang_Event_0+0x14  ;; MenuLevel
   \   0000004A   0860               STR      R0,[R1, #+0]
   7022                        MenuPaint();
   \   0000004C   ........           BL       MenuPaint
   \   00000050   12E0               B        ??SetupLang_Event_2
   7023                      }
   7024                    } 
   7025                  else
   7026                    {
   7027                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??SetupLang_Event_1:
   \   00000052   0E48               LDR      R0,??SetupLang_Event_0+0xC  ;; X_up
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   405E               LDRSH    R0,[R0, R1]
   \   00000058   0128               CMP      R0,#+1
   \   0000005A   0DDB               BLT      ??SetupLang_Event_2
   \   0000005C   0A48               LDR      R0,??SetupLang_Event_0+0x8  ;; Y_up
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   405E               LDRSH    R0,[R0, R1]
   \   00000062   0128               CMP      R0,#+1
   \   00000064   08DB               BLT      ??SetupLang_Event_2
   7028                      {
   7029                        MenuLevel=(MenuLevel/10);
   \   00000066   0B48               LDR      R0,??SetupLang_Event_0+0x14  ;; MenuLevel
   \   00000068   0068               LDR      R0,[R0, #+0]
   \   0000006A   0A21               MOVS     R1,#+10
   \   0000006C   ........           BL       __aeabi_idivmod
   \   00000070   0849               LDR      R1,??SetupLang_Event_0+0x14  ;; MenuLevel
   \   00000072   0860               STR      R0,[R1, #+0]
   7030                        MenuPaint();
   \   00000074   ........           BL       MenuPaint
   7031                      }
   7032                    }
   7033                }//_______________________________________________________________________
   \                     ??SetupLang_Event_2:
   \   00000078   10BC               POP      {R4}
   \   0000007A   01BC               POP      {R0}
   \   0000007C   0047               BX       R0               ;; return
   \   0000007E   C046               Nop      
   \                     ??SetupLang_Event_0:
   \   00000080   ........           DC32     Y_down
   \   00000084   ........           DC32     X_down
   \   00000088   ........           DC32     Y_up
   \   0000008C   ........           DC32     X_up
   \   00000090   ........           DC32     g_leng
   \   00000094   ........           DC32     MenuLevel
   7034          
   7035          
   7036          
   7037          
   7038          
   7039          
   7040          
   7041          //Ustawienia hasla wybór poziomu******************************************************************************************************************
   7042          
   7043                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7044                void SetupPass_Paint(void)
   7045                {  
   \                     SetupPass_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   7046          
   7047            
   7048                     
   7049                    if (g_NeedPass==1)
   \   00000002   3348               LDR      R0,??SetupPass_Paint_0  ;; g_NeedPass
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   3BD1               BNE      ??SetupPass_Paint_1
   7050                    {
   7051                      List_Paint(Speech[g_leng].Hasla     ,2,15,10,0,0,Speech[g_leng].HasloWl, Speech[g_leng].ZmHasla,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   FF20               MOVS     R0,#+255
   \   0000001E   1E30               ADDS     R0,R0,#+30       ;; #+285
   \   00000020   2C49               LDR      R1,??SetupPass_Paint_0+0x4  ;; g_leng
   \   00000022   0968               LDR      R1,[R1, #+0]
   \   00000024   2C4A               LDR      R2,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   00000026   5143               MULS     R1,R2,R1
   \   00000028   2C4A               LDR      R2,??SetupPass_Paint_0+0xC  ;; Speech
   \   0000002A   5118               ADDS     R1,R2,R1
   \   0000002C   0918               ADDS     R1,R1,R0
   \   0000002E   2C48               LDR      R0,??SetupPass_Paint_0+0x10  ;; 0x555
   \   00000030   284A               LDR      R2,??SetupPass_Paint_0+0x4  ;; g_leng
   \   00000032   1268               LDR      R2,[R2, #+0]
   \   00000034   284B               LDR      R3,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   00000036   5A43               MULS     R2,R3,R2
   \   00000038   284B               LDR      R3,??SetupPass_Paint_0+0xC  ;; Speech
   \   0000003A   9A18               ADDS     R2,R3,R2
   \   0000003C   1018               ADDS     R0,R2,R0
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   0A23               MOVS     R3,#+10
   \   00000048   0F22               MOVS     R2,#+15
   \   0000004A   0221               MOVS     R1,#+2
   \   0000004C   2148               LDR      R0,??SetupPass_Paint_0+0x4  ;; g_leng
   \   0000004E   0068               LDR      R0,[R0, #+0]
   \   00000050   214C               LDR      R4,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   00000052   6043               MULS     R0,R4,R0
   \   00000054   214C               LDR      R4,??SetupPass_Paint_0+0xC  ;; Speech
   \   00000056   2018               ADDS     R0,R4,R0
   \   00000058   C330               ADDS     R0,R0,#+195
   \   0000005A   ........           BL       List_Paint
   \   0000005E   0AB0               ADD      SP,SP,#+40
   7052                      char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};  
   \   00000060   6846               MOV      R0,SP
   \   00000062   2049               LDR      R1,??SetupPass_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000064   1CC9               LDM      R1!,{R2-R4}
   \   00000066   1CC0               STM      R0!,{R2-R4}
   \   00000068   0C39               SUBS     R1,R1,#+12
   \   0000006A   0C38               SUBS     R0,R0,#+12
   7053                      CopyToCanvasPoint((char *)ekran_tab,50,97-(10),8,10); 
   \   0000006C   82B0               SUB      SP,SP,#+8
   \   0000006E   0A20               MOVS     R0,#+10
   \   00000070   0090               STR      R0,[SP, #+0]
   \   00000072   0823               MOVS     R3,#+8
   \   00000074   5722               MOVS     R2,#+87
   \   00000076   3221               MOVS     R1,#+50
   \   00000078   02A8               ADD      R0,SP,#+8
   \   0000007A   ........           BL       CopyToCanvasPoint
   \   0000007E   02B0               ADD      SP,SP,#+8
   \   00000080   22E0               B        ??SetupPass_Paint_2
   7054                    }else
   7055                    {
   7056                      List_Paint(Speech[g_leng].Hasla     ,1,15,10,0,0,Speech[g_leng].HasloWl, 0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12]) 
   \                     ??SetupPass_Paint_1:
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   0021               MOVS     R1,#+0
   \   00000090   0020               MOVS     R0,#+0
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   1248               LDR      R0,??SetupPass_Paint_0+0x10  ;; 0x555
   \   00000098   0E4A               LDR      R2,??SetupPass_Paint_0+0x4  ;; g_leng
   \   0000009A   1268               LDR      R2,[R2, #+0]
   \   0000009C   0E4B               LDR      R3,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   0000009E   5A43               MULS     R2,R3,R2
   \   000000A0   0E4B               LDR      R3,??SetupPass_Paint_0+0xC  ;; Speech
   \   000000A2   9A18               ADDS     R2,R3,R2
   \   000000A4   1018               ADDS     R0,R2,R0
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   0A23               MOVS     R3,#+10
   \   000000B0   0F22               MOVS     R2,#+15
   \   000000B2   0121               MOVS     R1,#+1
   \   000000B4   0748               LDR      R0,??SetupPass_Paint_0+0x4  ;; g_leng
   \   000000B6   0068               LDR      R0,[R0, #+0]
   \   000000B8   074C               LDR      R4,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   000000BA   6043               MULS     R0,R4,R0
   \   000000BC   074C               LDR      R4,??SetupPass_Paint_0+0xC  ;; Speech
   \   000000BE   2018               ADDS     R0,R4,R0
   \   000000C0   C330               ADDS     R0,R0,#+195
   \   000000C2   ........           BL       List_Paint
   \   000000C6   0AB0               ADD      SP,SP,#+40
   7057                    }
   7058                  
   7059                }//________________________________________________________________________
   \                     ??SetupPass_Paint_2:
   \   000000C8   04B0               ADD      SP,SP,#+16
   \   000000CA   10BC               POP      {R4}
   \   000000CC   01BC               POP      {R0}
   \   000000CE   0047               BX       R0               ;; return
   \                     ??SetupPass_Paint_0:
   \   000000D0   ........           DC32     g_NeedPass
   \   000000D4   ........           DC32     g_leng
   \   000000D8   7D0A0000           DC32     0xa7d
   \   000000DC   ........           DC32     Speech
   \   000000E0   55050000           DC32     0x555
   \   000000E4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   7060          
   7061          
   7062          
   7063                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7064                void SetupPass_Event(void)
   7065                {
   \                     SetupPass_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7066                  int ans;
   7067          
   7068                  if (g_NeedPass==1)
   \   00000002   4448               LDR      R0,??SetupPass_Event_0  ;; g_NeedPass
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   16D1               BNE      ??SetupPass_Event_1
   7069                    {  
   7070                      ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000A   0A21               MOVS     R1,#+10
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   0220               MOVS     R0,#+2
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   4048               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   3F48               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   425E               LDRSH    R2,[R0, R1]
   \   00000022   3F48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   415E               LDRSH    R1,[R0, R1]
   \   00000028   3E48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   0000002A   0024               MOVS     R4,#+0
   \   0000002C   005F               LDRSH    R0,[R0, R4]
   \   0000002E   ........           BL       List_Event
   \   00000032   04B0               ADD      SP,SP,#+16
   \   00000034   0400               MOVS     R4,R0
   \   00000036   15E0               B        ??SetupPass_Event_2
   7071                    }else{
   7072                      ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??SetupPass_Event_1:
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   0F21               MOVS     R1,#+15
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   3448               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   435E               LDRSH    R3,[R0, R1]
   \   0000004A   3448               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   425E               LDRSH    R2,[R0, R1]
   \   00000050   3348               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   415E               LDRSH    R1,[R0, R1]
   \   00000056   3348               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000058   0024               MOVS     R4,#+0
   \   0000005A   005F               LDRSH    R0,[R0, R4]
   \   0000005C   ........           BL       List_Event
   \   00000060   04B0               ADD      SP,SP,#+16
   \   00000062   0400               MOVS     R4,R0
   7073                    }
   7074                  
   7075                  if (ans)          {
   \                     ??SetupPass_Event_2:
   \   00000064   002C               CMP      R4,#+0
   \   00000066   3CD0               BEQ      ??SetupPass_Event_3
   7076                      if (ans==1)
   \   00000068   012C               CMP      R4,#+1
   \   0000006A   2FD1               BNE      ??SetupPass_Event_4
   7077                      
   7078                        
   7079                      if (g_NeedPass) 
   \   0000006C   2948               LDR      R0,??SetupPass_Event_0  ;; g_NeedPass
   \   0000006E   0078               LDRB     R0,[R0, #+0]
   \   00000070   0028               CMP      R0,#+0
   \   00000072   16D0               BEQ      ??SetupPass_Event_5
   7080                      {
   7081                        char NeedPassFlag=0xEC;
   \   00000074   6846               MOV      R0,SP
   \   00000076   EC21               MOVS     R1,#+236
   \   00000078   4170               STRB     R1,[R0, #+1]
   7082                        g_NeedPass=0; 
   \   0000007A   2648               LDR      R0,??SetupPass_Event_0  ;; g_NeedPass
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   0170               STRB     R1,[R0, #+0]
   7083                        //zapis do flash
   7084                        unsigned int Save = __get_interrupt_state();  
   \   00000080   ........           BL       __iar_get_interrupt_state
   \   00000084   0500               MOVS     R5,R0
   7085                        __disable_interrupt();
   \   00000086   ........           BL       __iar_disable_interrupt
   7086                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000008A   0122               MOVS     R2,#+1
   \   0000008C   00A9               ADD      R1,SP,#+0
   \   0000008E   491C               ADDS     R1,R1,#+1
   \   00000090   2548               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   00000092   ........           BL       FlashWrite
   7087                        __set_interrupt_state(Save);
   \   00000096   2800               MOVS     R0,R5
   \   00000098   ........           BL       __iar_set_interrupt_state
   7088                        __enable_interrupt(); 
   \   0000009C   ........           BL       __iar_enable_interrupt
   \   000000A0   14E0               B        ??SetupPass_Event_4
   7089                        //koniec zapisu do flash
   7090                      }else
   7091                      {
   7092                        g_NeedPass=1;
   \                     ??SetupPass_Event_5:
   \   000000A2   1C48               LDR      R0,??SetupPass_Event_0  ;; g_NeedPass
   \   000000A4   0121               MOVS     R1,#+1
   \   000000A6   0170               STRB     R1,[R0, #+0]
   7093                        char NeedPassFlag=0xEB;
   \   000000A8   6846               MOV      R0,SP
   \   000000AA   EB21               MOVS     R1,#+235
   \   000000AC   0170               STRB     R1,[R0, #+0]
   7094                        //zapis do flash
   7095                        unsigned int Save = __get_interrupt_state();  
   \   000000AE   ........           BL       __iar_get_interrupt_state
   \   000000B2   0500               MOVS     R5,R0
   7096                        __disable_interrupt();
   \   000000B4   ........           BL       __iar_disable_interrupt
   7097                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000B8   0122               MOVS     R2,#+1
   \   000000BA   6946               MOV      R1,SP
   \   000000BC   1A48               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   000000BE   ........           BL       FlashWrite
   7098                        __set_interrupt_state(Save);
   \   000000C2   2800               MOVS     R0,R5
   \   000000C4   ........           BL       __iar_set_interrupt_state
   7099                        __enable_interrupt(); 
   \   000000C8   ........           BL       __iar_enable_interrupt
   7100                        //koniec zapisu do flash
   7101                      }
   7102                       
   7103                    
   7104                      if (ans==2)
   \                     ??SetupPass_Event_4:
   \   000000CC   022C               CMP      R4,#+2
   \   000000CE   06D1               BNE      ??SetupPass_Event_6
   7105                      {
   7106                         MenuLevel=(MenuLevel*10+1);
   \   000000D0   1648               LDR      R0,??SetupPass_Event_0+0x18  ;; MenuLevel
   \   000000D2   1649               LDR      R1,??SetupPass_Event_0+0x18  ;; MenuLevel
   \   000000D4   0968               LDR      R1,[R1, #+0]
   \   000000D6   0A22               MOVS     R2,#+10
   \   000000D8   5143               MULS     R1,R2,R1
   \   000000DA   491C               ADDS     R1,R1,#+1
   \   000000DC   0160               STR      R1,[R0, #+0]
   7107                      }
   7108                      
   7109                      
   7110                      MenuPaint();
   \                     ??SetupPass_Event_6:
   \   000000DE   ........           BL       MenuPaint
   7111                    }
   7112                    if (ans<0)
   \                     ??SetupPass_Event_3:
   \   000000E2   002C               CMP      R4,#+0
   \   000000E4   12D5               BPL      ??SetupPass_Event_7
   7113                    {
   7114                      if ((X_up>0) &&(Y_up>0)) 
   \   000000E6   0F48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   000000E8   0021               MOVS     R1,#+0
   \   000000EA   405E               LDRSH    R0,[R0, R1]
   \   000000EC   0128               CMP      R0,#+1
   \   000000EE   0DDB               BLT      ??SetupPass_Event_7
   \   000000F0   0B48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   405E               LDRSH    R0,[R0, R1]
   \   000000F6   0128               CMP      R0,#+1
   \   000000F8   08DB               BLT      ??SetupPass_Event_7
   7115                      {
   7116                        MenuLevel=(MenuLevel/10);
   \   000000FA   0C48               LDR      R0,??SetupPass_Event_0+0x18  ;; MenuLevel
   \   000000FC   0068               LDR      R0,[R0, #+0]
   \   000000FE   0A21               MOVS     R1,#+10
   \   00000100   ........           BL       __aeabi_idivmod
   \   00000104   0949               LDR      R1,??SetupPass_Event_0+0x18  ;; MenuLevel
   \   00000106   0860               STR      R0,[R1, #+0]
   7117                        MenuPaint();
   \   00000108   ........           BL       MenuPaint
   7118                      }
   7119                    }
   7120                }//_______________________________________________________________________
   \                     ??SetupPass_Event_7:
   \   0000010C   01B0               ADD      SP,SP,#+4
   \   0000010E   30BC               POP      {R4,R5}
   \   00000110   01BC               POP      {R0}
   \   00000112   0047               BX       R0               ;; return
   \                     ??SetupPass_Event_0:
   \   00000114   ........           DC32     g_NeedPass
   \   00000118   ........           DC32     Y_down
   \   0000011C   ........           DC32     X_down
   \   00000120   ........           DC32     Y_up
   \   00000124   ........           DC32     X_up
   \   00000128   DCD71300           DC32     0x13d7dc
   \   0000012C   ........           DC32     MenuLevel
   7121          
   7122          
   7123                
   7124          
   7125          
   7126          
   7127          
   7128          //Wpisanie obecnego has³a  poziom 1/2**************************************************************************************************************

   \                                 In section .bss, align 4
   7129                char InsertOldPass1[9]={0,0,0,0,0,0,0,0,0};
   \                     InsertOldPass1:
   \   00000000                      DS8 12
   7130              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7131              void SetupOldPass_Paint()
   7132              {  
   \                     SetupOldPass_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7133                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   1EA2               ADR      R2,??SetupOldPass_Paint_0  ;; 0x45, 0x00, 0x00, 0x00
   \   00000004   1EA1               ADR      R1,??SetupOldPass_Paint_0+0x4  ;; 0x43, 0x00, 0x00, 0x00
   \   00000006   FF20               MOVS     R0,#+255
   \   00000008   9630               ADDS     R0,R0,#+150      ;; #+405
   \   0000000A   1E4B               LDR      R3,??SetupOldPass_Paint_0+0x8  ;; g_leng
   \   0000000C   1B68               LDR      R3,[R3, #+0]
   \   0000000E   1E4C               LDR      R4,??SetupOldPass_Paint_0+0xC  ;; 0xa7d
   \   00000010   6343               MULS     R3,R4,R3
   \   00000012   1E4C               LDR      R4,??SetupOldPass_Paint_0+0x10  ;; Speech
   \   00000014   E318               ADDS     R3,R4,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   7134                    
   7135                    Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3A21               MOVS     R1,#+58
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   6623               MOVS     R3,#+102
   \   00000030   0322               MOVS     R2,#+3
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   FF20               MOVS     R0,#+255
   \   00000036   7830               ADDS     R0,R0,#+120      ;; #+375
   \   00000038   124C               LDR      R4,??SetupOldPass_Paint_0+0x8  ;; g_leng
   \   0000003A   2468               LDR      R4,[R4, #+0]
   \   0000003C   124D               LDR      R5,??SetupOldPass_Paint_0+0xC  ;; 0xa7d
   \   0000003E   6C43               MULS     R4,R5,R4
   \   00000040   124D               LDR      R5,??SetupOldPass_Paint_0+0x10  ;; Speech
   \   00000042   2C19               ADDS     R4,R5,R4
   \   00000044   2018               ADDS     R0,R4,R0
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
   7136              
   7137                    if (InsertOldPass1[8])  Label(InsertOldPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000004C   1048               LDR      R0,??SetupOldPass_Paint_0+0x14  ;; InsertOldPass1 + 8
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   0FD0               BEQ      ??SetupOldPass_Paint_1
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0020               MOVS     R0,#+0
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   7F21               MOVS     R1,#+127
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   3721               MOVS     R1,#+55
   \   00000062   0820               MOVS     R0,#+8
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   5A23               MOVS     R3,#+90
   \   00000068   0422               MOVS     R2,#+4
   \   0000006A   0221               MOVS     R1,#+2
   \   0000006C   0948               LDR      R0,??SetupOldPass_Paint_0+0x18  ;; InsertOldPass1
   \   0000006E   ........           BL       Label
   \   00000072   06B0               ADD      SP,SP,#+24
   7138          
   7139                    
   7140              }//________________________________________________________________________
   \                     ??SetupOldPass_Paint_1:
   \   00000074   01B0               ADD      SP,SP,#+4
   \   00000076   30BC               POP      {R4,R5}
   \   00000078   01BC               POP      {R0}
   \   0000007A   0047               BX       R0               ;; return
   \                     ??SetupOldPass_Paint_0:
   \   0000007C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000080   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000084   ........           DC32     g_leng
   \   00000088   7D0A0000           DC32     0xa7d
   \   0000008C   ........           DC32     Speech
   \   00000090   ........           DC32     InsertOldPass1 + 8
   \   00000094   ........           DC32     InsertOldPass1
   7141          
   7142          
   7143              
   7144              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7145              void SetupOldPass_Event(char level)
   7146              {
   \                     SetupOldPass_Event:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
   7147                  int ans;
   7148                  char roz=0;
   \   00000004   0026               MOVS     R6,#+0
   7149          
   7150                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000006   7348               LDR      R0,??SetupOldPass_Event_0  ;; Y_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   435E               LDRSH    R3,[R0, R1]
   \   0000000C   7248               LDR      R0,??SetupOldPass_Event_0+0x4  ;; X_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   425E               LDRSH    R2,[R0, R1]
   \   00000012   7248               LDR      R0,??SetupOldPass_Event_0+0x8  ;; Y_up
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   7148               LDR      R0,??SetupOldPass_Event_0+0xC  ;; X_up
   \   0000001A   0024               MOVS     R4,#+0
   \   0000001C   005F               LDRSH    R0,[R0, R4]
   \   0000001E   ........           BL       Number_Event
   \   00000022   0400               MOVS     R4,R0
   7151            
   7152                  if (ans>0)
   \   00000024   012C               CMP      R4,#+1
   \   00000026   00DA               BGE      .+4
   \   00000028   BAE0               B        ??SetupOldPass_Event_1
   7153                    {
   7154                      
   7155                      //MenuPaint();
   7156                      if (InsertOldPass1[8]<=7) 
   \   0000002A   6E48               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   0000002C   0078               LDRB     R0,[R0, #+0]
   \   0000002E   0828               CMP      R0,#+8
   \   00000030   18D2               BCS      ??SetupOldPass_Event_2
   7157                      { 
   7158                          if ((ans<10) || (ans==11)) 
   \   00000032   0A2C               CMP      R4,#+10
   \   00000034   01DB               BLT      ??SetupOldPass_Event_3
   \   00000036   0B2C               CMP      R4,#+11
   \   00000038   14D1               BNE      ??SetupOldPass_Event_2
   7159                          {
   7160                            if (ans<10) InsertOldPass1[InsertOldPass1[8]]=ans+48;
   \                     ??SetupOldPass_Event_3:
   \   0000003A   0A2C               CMP      R4,#+10
   \   0000003C   05DA               BGE      ??SetupOldPass_Event_4
   \   0000003E   6948               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   6949               LDR      R1,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   00000044   2200               MOVS     R2,R4
   \   00000046   3032               ADDS     R2,R2,#+48
   \   00000048   0A54               STRB     R2,[R1, R0]
   7161                            if (ans==11) InsertOldPass1[InsertOldPass1[8]]=ans+37;
   \                     ??SetupOldPass_Event_4:
   \   0000004A   0B2C               CMP      R4,#+11
   \   0000004C   05D1               BNE      ??SetupOldPass_Event_5
   \   0000004E   6548               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   6549               LDR      R1,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   00000054   2200               MOVS     R2,R4
   \   00000056   2532               ADDS     R2,R2,#+37
   \   00000058   0A54               STRB     R2,[R1, R0]
   7162                            InsertOldPass1[8]++;
   \                     ??SetupOldPass_Event_5:
   \   0000005A   6248               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   0000005C   6149               LDR      R1,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   0000005E   0978               LDRB     R1,[R1, #+0]
   \   00000060   491C               ADDS     R1,R1,#+1
   \   00000062   0170               STRB     R1,[R0, #+0]
   7163                            
   7164                          }
   7165                          
   7166                      }
   7167                      
   7168                      if ((ans==10) && (InsertOldPass1[8]>0) ) 
   \                     ??SetupOldPass_Event_2:
   \   00000064   0A2C               CMP      R4,#+10
   \   00000066   0DD1               BNE      ??SetupOldPass_Event_6
   \   00000068   5E48               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   0000006A   0078               LDRB     R0,[R0, #+0]
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   09D3               BCC      ??SetupOldPass_Event_6
   7169                      {InsertOldPass1[8]--; 
   \   00000070   5C48               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   00000072   5C49               LDR      R1,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   00000074   0978               LDRB     R1,[R1, #+0]
   \   00000076   491E               SUBS     R1,R1,#+1
   \   00000078   0170               STRB     R1,[R0, #+0]
   7170                      InsertOldPass1[InsertOldPass1[8]]=0;
   \   0000007A   5A48               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   0000007C   0078               LDRB     R0,[R0, #+0]
   \   0000007E   5A49               LDR      R1,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   00000080   0022               MOVS     R2,#+0
   \   00000082   0A54               STRB     R2,[R1, R0]
   7171                      }
   7172                      
   7173                      if (ans==12)
   \                     ??SetupOldPass_Event_6:
   \   00000084   0C2C               CMP      R4,#+12
   \   00000086   74D1               BNE      ??SetupOldPass_Event_7
   7174                      {
   7175                        roz=0;
   \   00000088   0026               MOVS     R6,#+0
   7176                        for (int i=0; i<=7; i++)
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   16E0               B        ??SetupOldPass_Event_8
   7177                        {
   7178                            if ((g_Password_1[i]!=InsertOldPass1[i]) && (level==1)) roz=1;
   \                     ??SetupOldPass_Event_9:
   \   0000008E   5749               LDR      R1,??SetupOldPass_Event_0+0x18  ;; g_Password_1
   \   00000090   095C               LDRB     R1,[R1, R0]
   \   00000092   554A               LDR      R2,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   00000094   125C               LDRB     R2,[R2, R0]
   \   00000096   9142               CMP      R1,R2
   \   00000098   04D0               BEQ      ??SetupOldPass_Event_10
   \   0000009A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000009C   2D0E               LSRS     R5,R5,#+24
   \   0000009E   012D               CMP      R5,#+1
   \   000000A0   00D1               BNE      ??SetupOldPass_Event_10
   \   000000A2   0126               MOVS     R6,#+1
   7179                            if ((g_Password_2[i]!=InsertOldPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_10:
   \   000000A4   5249               LDR      R1,??SetupOldPass_Event_0+0x1C  ;; g_Password_2
   \   000000A6   095C               LDRB     R1,[R1, R0]
   \   000000A8   4F4A               LDR      R2,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   000000AA   125C               LDRB     R2,[R2, R0]
   \   000000AC   9142               CMP      R1,R2
   \   000000AE   04D0               BEQ      ??SetupOldPass_Event_11
   \   000000B0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B2   2D0E               LSRS     R5,R5,#+24
   \   000000B4   022D               CMP      R5,#+2
   \   000000B6   00D1               BNE      ??SetupOldPass_Event_11
   \   000000B8   0126               MOVS     R6,#+1
   7180                        }
   \                     ??SetupOldPass_Event_11:
   \   000000BA   401C               ADDS     R0,R0,#+1
   \                     ??SetupOldPass_Event_8:
   \   000000BC   0828               CMP      R0,#+8
   \   000000BE   E6DB               BLT      ??SetupOldPass_Event_9
   7181                        
   7182                        //has³o programisty
   7183                        if (roz)
   \   000000C0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000C2   360E               LSRS     R6,R6,#+24
   \   000000C4   002E               CMP      R6,#+0
   \   000000C6   21D0               BEQ      ??SetupOldPass_Event_12
   7184                        {
   7185                          roz=0;
   \   000000C8   0026               MOVS     R6,#+0
   7186                          char MHS[]="060480";
   \   000000CA   6846               MOV      R0,SP
   \   000000CC   4949               LDR      R1,??SetupOldPass_Event_0+0x20  ;; `?<Constant "060480">_1`
   \   000000CE   0CC9               LDM      R1!,{R2,R3}
   \   000000D0   0CC0               STM      R0!,{R2,R3}
   \   000000D2   0839               SUBS     R1,R1,#+8
   \   000000D4   0838               SUBS     R0,R0,#+8
   7187                            for (int i=0; i<6; i++)
   \   000000D6   0020               MOVS     R0,#+0
   \   000000D8   16E0               B        ??SetupOldPass_Event_13
   7188                            {
   7189                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??SetupOldPass_Event_14:
   \   000000DA   6946               MOV      R1,SP
   \   000000DC   095C               LDRB     R1,[R1, R0]
   \   000000DE   464A               LDR      R2,??SetupOldPass_Event_0+0x24  ;; InsertPass1
   \   000000E0   125C               LDRB     R2,[R2, R0]
   \   000000E2   9142               CMP      R1,R2
   \   000000E4   04D0               BEQ      ??SetupOldPass_Event_15
   \   000000E6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E8   2D0E               LSRS     R5,R5,#+24
   \   000000EA   012D               CMP      R5,#+1
   \   000000EC   00D1               BNE      ??SetupOldPass_Event_15
   \   000000EE   0126               MOVS     R6,#+1
   7190                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_15:
   \   000000F0   6946               MOV      R1,SP
   \   000000F2   095C               LDRB     R1,[R1, R0]
   \   000000F4   404A               LDR      R2,??SetupOldPass_Event_0+0x24  ;; InsertPass1
   \   000000F6   125C               LDRB     R2,[R2, R0]
   \   000000F8   9142               CMP      R1,R2
   \   000000FA   04D0               BEQ      ??SetupOldPass_Event_16
   \   000000FC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000FE   2D0E               LSRS     R5,R5,#+24
   \   00000100   022D               CMP      R5,#+2
   \   00000102   00D1               BNE      ??SetupOldPass_Event_16
   \   00000104   0126               MOVS     R6,#+1
   7191                            }              
   \                     ??SetupOldPass_Event_16:
   \   00000106   401C               ADDS     R0,R0,#+1
   \                     ??SetupOldPass_Event_13:
   \   00000108   0628               CMP      R0,#+6
   \   0000010A   E6DB               BLT      ??SetupOldPass_Event_14
   7192                        }
   7193                        
   7194                        if (roz==0)
   \                     ??SetupOldPass_Event_12:
   \   0000010C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000010E   360E               LSRS     R6,R6,#+24
   \   00000110   002E               CMP      R6,#+0
   \   00000112   14D1               BNE      ??SetupOldPass_Event_17
   7195                        {
   7196                           MenuLevel=(MenuLevel*10+1);
   \   00000114   3948               LDR      R0,??SetupOldPass_Event_0+0x28  ;; MenuLevel
   \   00000116   3949               LDR      R1,??SetupOldPass_Event_0+0x28  ;; MenuLevel
   \   00000118   0968               LDR      R1,[R1, #+0]
   \   0000011A   0A22               MOVS     R2,#+10
   \   0000011C   5143               MULS     R1,R2,R1
   \   0000011E   491C               ADDS     R1,R1,#+1
   \   00000120   0160               STR      R1,[R0, #+0]
   7197                           for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   03E0               B        ??SetupOldPass_Event_18
   \                     ??SetupOldPass_Event_19:
   \   00000126   3049               LDR      R1,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   00000128   0022               MOVS     R2,#+0
   \   0000012A   0A54               STRB     R2,[R1, R0]
   \   0000012C   401C               ADDS     R0,R0,#+1
   \                     ??SetupOldPass_Event_18:
   \   0000012E   0828               CMP      R0,#+8
   \   00000130   F9DB               BLT      ??SetupOldPass_Event_19
   7198                           InsertOldPass1[8]=0;
   \   00000132   2C48               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   0170               STRB     R1,[R0, #+0]
   7199                           MenuPaint();
   \   00000138   ........           BL       MenuPaint
   \   0000013C   19E0               B        ??SetupOldPass_Event_7
   7200                        } 
   7201                        else
   7202                        {
   7203                           //informacja o b³ednym hale
   7204                          Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \                     ??SetupOldPass_Event_17:
   \   0000013E   30A1               ADR      R1,??SetupOldPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000140   2FA0               ADR      R0,??SetupOldPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   FF20               MOVS     R0,#+255
   \   00000146   B430               ADDS     R0,R0,#+180      ;; #+435
   \   00000148   2E49               LDR      R1,??SetupOldPass_Event_0+0x30  ;; g_leng
   \   0000014A   0968               LDR      R1,[R1, #+0]
   \   0000014C   2E4A               LDR      R2,??SetupOldPass_Event_0+0x34  ;; 0xa7d
   \   0000014E   5143               MULS     R1,R2,R1
   \   00000150   2E4A               LDR      R2,??SetupOldPass_Event_0+0x38  ;; Speech
   \   00000152   5118               ADDS     R1,R2,R1
   \   00000154   0B18               ADDS     R3,R1,R0
   \   00000156   D220               MOVS     R0,#+210
   \   00000158   4000               LSLS     R0,R0,#+1        ;; #+420
   \   0000015A   2A49               LDR      R1,??SetupOldPass_Event_0+0x30  ;; g_leng
   \   0000015C   0968               LDR      R1,[R1, #+0]
   \   0000015E   2A4A               LDR      R2,??SetupOldPass_Event_0+0x34  ;; 0xa7d
   \   00000160   5143               MULS     R1,R2,R1
   \   00000162   2A4A               LDR      R2,??SetupOldPass_Event_0+0x38  ;; Speech
   \   00000164   5118               ADDS     R1,R2,R1
   \   00000166   0A18               ADDS     R2,R1,R0
   \   00000168   25A1               ADR      R1,??SetupOldPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   0000016A   0220               MOVS     R0,#+2
   \   0000016C   ........           BL       Message_Paint
   \   00000170   02B0               ADD      SP,SP,#+8
   7205                        }
   7206               
   7207                      }
   7208                      
   7209                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupOldPass_Event_7:
   \   00000172   012C               CMP      R4,#+1
   \   00000174   14DB               BLT      ??SetupOldPass_Event_1
   \   00000176   0C2C               CMP      R4,#+12
   \   00000178   12DA               BGE      ??SetupOldPass_Event_1
   7210                      {
   7211                        MenuPaint();
   \   0000017A   ........           BL       MenuPaint
   7212                        Label(InsertOldPass1,2,4,90,InsertOldPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0020               MOVS     R0,#+0
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   7F21               MOVS     R1,#+127
   \   00000186   0020               MOVS     R0,#+0
   \   00000188   03B4               PUSH     {R0,R1}
   \   0000018A   3721               MOVS     R1,#+55
   \   0000018C   1548               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   0000018E   0078               LDRB     R0,[R0, #+0]
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   5A23               MOVS     R3,#+90
   \   00000194   0422               MOVS     R2,#+4
   \   00000196   0221               MOVS     R1,#+2
   \   00000198   1348               LDR      R0,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   0000019A   ........           BL       Label
   \   0000019E   06B0               ADD      SP,SP,#+24
   7213                      }
   7214                      
   7215                      
   7216                    }
   7217                  if (ans<0)
   \                     ??SetupOldPass_Event_1:
   \   000001A0   002C               CMP      R4,#+0
   \   000001A2   13D5               BPL      ??SetupOldPass_Event_20
   7218                    {
   7219                        MenuLevel=(MenuLevel/100);
   \   000001A4   1548               LDR      R0,??SetupOldPass_Event_0+0x28  ;; MenuLevel
   \   000001A6   0068               LDR      R0,[R0, #+0]
   \   000001A8   6421               MOVS     R1,#+100
   \   000001AA   ........           BL       __aeabi_idivmod
   \   000001AE   1349               LDR      R1,??SetupOldPass_Event_0+0x28  ;; MenuLevel
   \   000001B0   0860               STR      R0,[R1, #+0]
   7220                        MenuPaint();
   \   000001B2   ........           BL       MenuPaint
   7221                        for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   000001B6   0020               MOVS     R0,#+0
   \   000001B8   03E0               B        ??SetupOldPass_Event_21
   \                     ??SetupOldPass_Event_22:
   \   000001BA   0B49               LDR      R1,??SetupOldPass_Event_0+0x14  ;; InsertOldPass1
   \   000001BC   0022               MOVS     R2,#+0
   \   000001BE   0A54               STRB     R2,[R1, R0]
   \   000001C0   401C               ADDS     R0,R0,#+1
   \                     ??SetupOldPass_Event_21:
   \   000001C2   0828               CMP      R0,#+8
   \   000001C4   F9DB               BLT      ??SetupOldPass_Event_22
   7222                        InsertOldPass1[8]=0;
   \   000001C6   0748               LDR      R0,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1 + 8
   \   000001C8   0021               MOVS     R1,#+0
   \   000001CA   0170               STRB     R1,[R0, #+0]
   7223                    }
   7224               
   7225              }//________________________________________________________________________
   \                     ??SetupOldPass_Event_20:
   \   000001CC   02B0               ADD      SP,SP,#+8
   \   000001CE   70BC               POP      {R4-R6}
   \   000001D0   01BC               POP      {R0}
   \   000001D2   0047               BX       R0               ;; return
   \                     ??SetupOldPass_Event_0:
   \   000001D4   ........           DC32     Y_down
   \   000001D8   ........           DC32     X_down
   \   000001DC   ........           DC32     Y_up
   \   000001E0   ........           DC32     X_up
   \   000001E4   ........           DC32     InsertOldPass1 + 8
   \   000001E8   ........           DC32     InsertOldPass1
   \   000001EC   ........           DC32     g_Password_1
   \   000001F0   ........           DC32     g_Password_2
   \   000001F4   ........           DC32     `?<Constant "060480">_1`
   \   000001F8   ........           DC32     InsertPass1
   \   000001FC   ........           DC32     MenuLevel
   \   00000200   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000204   ........           DC32     g_leng
   \   00000208   7D0A0000           DC32     0xa7d
   \   0000020C   ........           DC32     Speech
   7226          
   7227              
   7228          
   7229          
   7230          //Wpisanie nowego has³a  poziom 1**************************************************************************************************************

   \                                 In section .bss, align 4
   7231              char InsertNewPass1[9]={0,0,0,0,0,0,0,0,0};
   \                     InsertNewPass1:
   \   00000000                      DS8 12
   7232              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7233              void SetupNewPass_Paint(void)
   7234              {  
   \                     SetupNewPass_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7235                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   1EA2               ADR      R2,??SetupNewPass_Paint_0  ;; 0x45, 0x00, 0x00, 0x00
   \   00000004   1EA1               ADR      R1,??SetupNewPass_Paint_0+0x4  ;; 0x43, 0x00, 0x00, 0x00
   \   00000006   FF20               MOVS     R0,#+255
   \   00000008   9630               ADDS     R0,R0,#+150      ;; #+405
   \   0000000A   1E4B               LDR      R3,??SetupNewPass_Paint_0+0x8  ;; g_leng
   \   0000000C   1B68               LDR      R3,[R3, #+0]
   \   0000000E   1E4C               LDR      R4,??SetupNewPass_Paint_0+0xC  ;; 0xa7d
   \   00000010   6343               MULS     R3,R4,R3
   \   00000012   1E4C               LDR      R4,??SetupNewPass_Paint_0+0x10  ;; Speech
   \   00000014   E318               ADDS     R3,R4,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   7236                    
   7237                    Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3A21               MOVS     R1,#+58
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   6623               MOVS     R3,#+102
   \   00000030   0322               MOVS     R2,#+3
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   C320               MOVS     R0,#+195
   \   00000036   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000038   124C               LDR      R4,??SetupNewPass_Paint_0+0x8  ;; g_leng
   \   0000003A   2468               LDR      R4,[R4, #+0]
   \   0000003C   124D               LDR      R5,??SetupNewPass_Paint_0+0xC  ;; 0xa7d
   \   0000003E   6C43               MULS     R4,R5,R4
   \   00000040   124D               LDR      R5,??SetupNewPass_Paint_0+0x10  ;; Speech
   \   00000042   2C19               ADDS     R4,R5,R4
   \   00000044   2018               ADDS     R0,R4,R0
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
   7238              
   7239                    if (InsertNewPass1[8])  Label(InsertNewPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000004C   1048               LDR      R0,??SetupNewPass_Paint_0+0x14  ;; InsertNewPass1 + 8
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   0FD0               BEQ      ??SetupNewPass_Paint_1
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0020               MOVS     R0,#+0
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   7F21               MOVS     R1,#+127
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   3721               MOVS     R1,#+55
   \   00000062   0820               MOVS     R0,#+8
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   5A23               MOVS     R3,#+90
   \   00000068   0422               MOVS     R2,#+4
   \   0000006A   0221               MOVS     R1,#+2
   \   0000006C   0948               LDR      R0,??SetupNewPass_Paint_0+0x18  ;; InsertNewPass1
   \   0000006E   ........           BL       Label
   \   00000072   06B0               ADD      SP,SP,#+24
   7240          
   7241                    
   7242              }//________________________________________________________________________
   \                     ??SetupNewPass_Paint_1:
   \   00000074   01B0               ADD      SP,SP,#+4
   \   00000076   30BC               POP      {R4,R5}
   \   00000078   01BC               POP      {R0}
   \   0000007A   0047               BX       R0               ;; return
   \                     ??SetupNewPass_Paint_0:
   \   0000007C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000080   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000084   ........           DC32     g_leng
   \   00000088   7D0A0000           DC32     0xa7d
   \   0000008C   ........           DC32     Speech
   \   00000090   ........           DC32     InsertNewPass1 + 8
   \   00000094   ........           DC32     InsertNewPass1
   7243          
   7244          
   7245          
   7246              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7247              void SetupNewPass_Event(char level)
   7248              {
   \                     SetupNewPass_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   7249                  int ans;
   7250                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   7148               LDR      R0,??SetupNewPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   7148               LDR      R0,??SetupNewPass_Event_0+0x4  ;; X_down
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   425E               LDRSH    R2,[R0, R1]
   \   00000010   7048               LDR      R0,??SetupNewPass_Event_0+0x8  ;; Y_up
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   415E               LDRSH    R1,[R0, R1]
   \   00000016   7048               LDR      R0,??SetupNewPass_Event_0+0xC  ;; X_up
   \   00000018   0025               MOVS     R5,#+0
   \   0000001A   405F               LDRSH    R0,[R0, R5]
   \   0000001C   ........           BL       Number_Event
   \   00000020   0500               MOVS     R5,R0
   7251            
   7252                  if (ans>0)
   \   00000022   012D               CMP      R5,#+1
   \   00000024   00DA               BGE      .+4
   \   00000026   B7E0               B        ??SetupNewPass_Event_1
   7253                    {
   7254                      //MenuPaint();
   7255                      if (InsertNewPass1[8]<=7) 
   \   00000028   6C48               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   0000002A   0078               LDRB     R0,[R0, #+0]
   \   0000002C   0828               CMP      R0,#+8
   \   0000002E   18D2               BCS      ??SetupNewPass_Event_2
   7256                      { 
   7257                          if ((ans<10) || (ans==11)) 
   \   00000030   0A2D               CMP      R5,#+10
   \   00000032   01DB               BLT      ??SetupNewPass_Event_3
   \   00000034   0B2D               CMP      R5,#+11
   \   00000036   14D1               BNE      ??SetupNewPass_Event_2
   7258                          {
   7259                            if (ans<10) InsertNewPass1[InsertNewPass1[8]]=ans+48;
   \                     ??SetupNewPass_Event_3:
   \   00000038   0A2D               CMP      R5,#+10
   \   0000003A   05DA               BGE      ??SetupNewPass_Event_4
   \   0000003C   6748               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   6749               LDR      R1,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   00000042   2A00               MOVS     R2,R5
   \   00000044   3032               ADDS     R2,R2,#+48
   \   00000046   0A54               STRB     R2,[R1, R0]
   7260                            if (ans==11) InsertNewPass1[InsertNewPass1[8]]=ans+37;
   \                     ??SetupNewPass_Event_4:
   \   00000048   0B2D               CMP      R5,#+11
   \   0000004A   05D1               BNE      ??SetupNewPass_Event_5
   \   0000004C   6348               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   6349               LDR      R1,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   00000052   2A00               MOVS     R2,R5
   \   00000054   2532               ADDS     R2,R2,#+37
   \   00000056   0A54               STRB     R2,[R1, R0]
   7261                            InsertNewPass1[8]++;
   \                     ??SetupNewPass_Event_5:
   \   00000058   6048               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   0000005A   6049               LDR      R1,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   0000005C   0978               LDRB     R1,[R1, #+0]
   \   0000005E   491C               ADDS     R1,R1,#+1
   \   00000060   0170               STRB     R1,[R0, #+0]
   7262                          }
   7263                          
   7264                      }
   7265                      if ((ans==10) && (InsertNewPass1[8]>0) ) {InsertNewPass1[8]--; InsertNewPass1[InsertOldPass1[8]]=0;}
   \                     ??SetupNewPass_Event_2:
   \   00000062   0A2D               CMP      R5,#+10
   \   00000064   0DD1               BNE      ??SetupNewPass_Event_6
   \   00000066   5D48               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   00000068   0078               LDRB     R0,[R0, #+0]
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   09D3               BCC      ??SetupNewPass_Event_6
   \   0000006E   5B48               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   00000070   5A49               LDR      R1,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   00000072   0978               LDRB     R1,[R1, #+0]
   \   00000074   491E               SUBS     R1,R1,#+1
   \   00000076   0170               STRB     R1,[R0, #+0]
   \   00000078   5A48               LDR      R0,??SetupNewPass_Event_0+0x18  ;; InsertOldPass1 + 8
   \   0000007A   0078               LDRB     R0,[R0, #+0]
   \   0000007C   5849               LDR      R1,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   0000007E   0022               MOVS     R2,#+0
   \   00000080   0A54               STRB     R2,[R1, R0]
   7266                      //Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   7267                      
   7268                      
   7269                      
   7270                      
   7271                      
   7272                      if ((ans==12) && (InsertNewPass1[8]>0))
   \                     ??SetupNewPass_Event_6:
   \   00000082   0C2D               CMP      R5,#+12
   \   00000084   71D1               BNE      ??SetupNewPass_Event_7
   \   00000086   5548               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   00000088   0078               LDRB     R0,[R0, #+0]
   \   0000008A   0128               CMP      R0,#+1
   \   0000008C   6DD3               BCC      ??SetupNewPass_Event_7
   7273                      {
   7274                        
   7275                        for (int i=0; i<=7; i++)
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   13E0               B        ??SetupNewPass_Event_8
   7276                        {
   7277                            if (level==1) g_Password_1[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_9:
   \   00000092   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000094   240E               LSRS     R4,R4,#+24
   \   00000096   012C               CMP      R4,#+1
   \   00000098   03D1               BNE      ??SetupNewPass_Event_10
   \   0000009A   5349               LDR      R1,??SetupNewPass_Event_0+0x1C  ;; g_Password_1
   \   0000009C   504A               LDR      R2,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   0000009E   125C               LDRB     R2,[R2, R0]
   \   000000A0   0A54               STRB     R2,[R1, R0]
   7278                            if (level==2) g_Password_2[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_10:
   \   000000A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   022C               CMP      R4,#+2
   \   000000A8   03D1               BNE      ??SetupNewPass_Event_11
   \   000000AA   5049               LDR      R1,??SetupNewPass_Event_0+0x20  ;; g_Password_2
   \   000000AC   4C4A               LDR      R2,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   000000AE   125C               LDRB     R2,[R2, R0]
   \   000000B0   0A54               STRB     R2,[R1, R0]
   7279                            InsertNewPass1[i]=0;
   \                     ??SetupNewPass_Event_11:
   \   000000B2   4B49               LDR      R1,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   000000B4   0022               MOVS     R2,#+0
   \   000000B6   0A54               STRB     R2,[R1, R0]
   7280                        }
   \   000000B8   401C               ADDS     R0,R0,#+1
   \                     ??SetupNewPass_Event_8:
   \   000000BA   0828               CMP      R0,#+8
   \   000000BC   E9DB               BLT      ??SetupNewPass_Event_9
   7281                        InsertNewPass1[8]=0;
   \   000000BE   4748               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   000000C0   0021               MOVS     R1,#+0
   \   000000C2   0170               STRB     R1,[R0, #+0]
   7282          
   7283                        //zapis has³a do flash
   7284                        unsigned int Save = __get_interrupt_state();  
   \   000000C4   ........           BL       __iar_get_interrupt_state
   \   000000C8   0600               MOVS     R6,R0
   7285                        __disable_interrupt();
   \   000000CA   ........           BL       __iar_disable_interrupt
   7286                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])),0,g_Password_1,9);
   7287                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])), (char*) (&(g_Password_1)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000CE   0122               MOVS     R2,#+1
   \   000000D0   4549               LDR      R1,??SetupNewPass_Event_0+0x1C  ;; g_Password_1
   \   000000D2   4748               LDR      R0,??SetupNewPass_Event_0+0x24  ;; 0x13d7dd
   \   000000D4   ........           BL       FlashWrite
   7288                        __set_interrupt_state(Save);
   \   000000D8   3000               MOVS     R0,R6
   \   000000DA   ........           BL       __iar_set_interrupt_state
   7289                        __enable_interrupt(); 
   \   000000DE   ........           BL       __iar_enable_interrupt
   7290                        //koniec zapisu do flash
   7291                        
   7292          
   7293                        
   7294                           //informacja o zmianie hasla
   7295                         MenuLevel=(MenuLevel/1000);
   \   000000E2   4448               LDR      R0,??SetupNewPass_Event_0+0x28  ;; MenuLevel
   \   000000E4   0068               LDR      R0,[R0, #+0]
   \   000000E6   FA21               MOVS     R1,#+250
   \   000000E8   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   000000EA   ........           BL       __aeabi_idivmod
   \   000000EE   4149               LDR      R1,??SetupNewPass_Event_0+0x28  ;; MenuLevel
   \   000000F0   0860               STR      R0,[R1, #+0]
   7296                          if (level==1) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_1,"");
   \   000000F2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F4   240E               LSRS     R4,R4,#+24
   \   000000F6   012C               CMP      R4,#+1
   \   000000F8   19D1               BNE      ??SetupNewPass_Event_12
   \   000000FA   3FA1               ADR      R1,??SetupNewPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   000000FC   3A48               LDR      R0,??SetupNewPass_Event_0+0x1C  ;; g_Password_1
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   3E4B               LDR      R3,??SetupNewPass_Event_0+0x30  ;; `?<Constant "------------">`
   \   00000102   FF20               MOVS     R0,#+255
   \   00000104   B430               ADDS     R0,R0,#+180      ;; #+435
   \   00000106   3E49               LDR      R1,??SetupNewPass_Event_0+0x34  ;; g_leng
   \   00000108   0968               LDR      R1,[R1, #+0]
   \   0000010A   3E4A               LDR      R2,??SetupNewPass_Event_0+0x38  ;; 0xa7d
   \   0000010C   5143               MULS     R1,R2,R1
   \   0000010E   3E4A               LDR      R2,??SetupNewPass_Event_0+0x3C  ;; Speech
   \   00000110   5118               ADDS     R1,R2,R1
   \   00000112   0A18               ADDS     R2,R1,R0
   \   00000114   E120               MOVS     R0,#+225
   \   00000116   4000               LSLS     R0,R0,#+1        ;; #+450
   \   00000118   3949               LDR      R1,??SetupNewPass_Event_0+0x34  ;; g_leng
   \   0000011A   0968               LDR      R1,[R1, #+0]
   \   0000011C   394E               LDR      R6,??SetupNewPass_Event_0+0x38  ;; 0xa7d
   \   0000011E   7143               MULS     R1,R6,R1
   \   00000120   394E               LDR      R6,??SetupNewPass_Event_0+0x3C  ;; Speech
   \   00000122   7118               ADDS     R1,R6,R1
   \   00000124   0918               ADDS     R1,R1,R0
   \   00000126   0220               MOVS     R0,#+2
   \   00000128   ........           BL       Message_Paint
   \   0000012C   02B0               ADD      SP,SP,#+8
   7297                          if (level==2) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_2,"");
   \                     ??SetupNewPass_Event_12:
   \   0000012E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000130   240E               LSRS     R4,R4,#+24
   \   00000132   022C               CMP      R4,#+2
   \   00000134   19D1               BNE      ??SetupNewPass_Event_7
   \   00000136   30A1               ADR      R1,??SetupNewPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000138   2C48               LDR      R0,??SetupNewPass_Event_0+0x20  ;; g_Password_2
   \   0000013A   03B4               PUSH     {R0,R1}
   \   0000013C   2F4B               LDR      R3,??SetupNewPass_Event_0+0x30  ;; `?<Constant "------------">`
   \   0000013E   FF20               MOVS     R0,#+255
   \   00000140   B430               ADDS     R0,R0,#+180      ;; #+435
   \   00000142   2F49               LDR      R1,??SetupNewPass_Event_0+0x34  ;; g_leng
   \   00000144   0968               LDR      R1,[R1, #+0]
   \   00000146   2F4A               LDR      R2,??SetupNewPass_Event_0+0x38  ;; 0xa7d
   \   00000148   5143               MULS     R1,R2,R1
   \   0000014A   2F4A               LDR      R2,??SetupNewPass_Event_0+0x3C  ;; Speech
   \   0000014C   5118               ADDS     R1,R2,R1
   \   0000014E   0A18               ADDS     R2,R1,R0
   \   00000150   E120               MOVS     R0,#+225
   \   00000152   4000               LSLS     R0,R0,#+1        ;; #+450
   \   00000154   2A49               LDR      R1,??SetupNewPass_Event_0+0x34  ;; g_leng
   \   00000156   0968               LDR      R1,[R1, #+0]
   \   00000158   2A4C               LDR      R4,??SetupNewPass_Event_0+0x38  ;; 0xa7d
   \   0000015A   6143               MULS     R1,R4,R1
   \   0000015C   2A4C               LDR      R4,??SetupNewPass_Event_0+0x3C  ;; Speech
   \   0000015E   6118               ADDS     R1,R4,R1
   \   00000160   0918               ADDS     R1,R1,R0
   \   00000162   0220               MOVS     R0,#+2
   \   00000164   ........           BL       Message_Paint
   \   00000168   02B0               ADD      SP,SP,#+8
   7298                      
   7299                        
   7300                        //MenuPaint();
   7301                      } 
   7302                      
   7303                      
   7304                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupNewPass_Event_7:
   \   0000016A   012D               CMP      R5,#+1
   \   0000016C   14DB               BLT      ??SetupNewPass_Event_1
   \   0000016E   0C2D               CMP      R5,#+12
   \   00000170   12DA               BGE      ??SetupNewPass_Event_1
   7305                      {
   7306                        MenuPaint();
   \   00000172   ........           BL       MenuPaint
   7307                        Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000176   82B0               SUB      SP,SP,#+8
   \   00000178   0020               MOVS     R0,#+0
   \   0000017A   0090               STR      R0,[SP, #+0]
   \   0000017C   7F21               MOVS     R1,#+127
   \   0000017E   0020               MOVS     R0,#+0
   \   00000180   03B4               PUSH     {R0,R1}
   \   00000182   3721               MOVS     R1,#+55
   \   00000184   1548               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   00000186   0078               LDRB     R0,[R0, #+0]
   \   00000188   03B4               PUSH     {R0,R1}
   \   0000018A   5A23               MOVS     R3,#+90
   \   0000018C   0422               MOVS     R2,#+4
   \   0000018E   0221               MOVS     R1,#+2
   \   00000190   1348               LDR      R0,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   00000192   ........           BL       Label
   \   00000196   06B0               ADD      SP,SP,#+24
   7308                      }
   7309                      
   7310                      
   7311                     }
   7312                    
   7313                  if (ans<0)
   \                     ??SetupNewPass_Event_1:
   \   00000198   002D               CMP      R5,#+0
   \   0000019A   13D5               BPL      ??SetupNewPass_Event_13
   7314                    {
   7315                        MenuLevel=(MenuLevel/100);
   \   0000019C   1548               LDR      R0,??SetupNewPass_Event_0+0x28  ;; MenuLevel
   \   0000019E   0068               LDR      R0,[R0, #+0]
   \   000001A0   6421               MOVS     R1,#+100
   \   000001A2   ........           BL       __aeabi_idivmod
   \   000001A6   1349               LDR      R1,??SetupNewPass_Event_0+0x28  ;; MenuLevel
   \   000001A8   0860               STR      R0,[R1, #+0]
   7316                        MenuPaint();
   \   000001AA   ........           BL       MenuPaint
   7317                        for (int i=0; i<=7; i++) InsertNewPass1[i]=0;
   \   000001AE   0020               MOVS     R0,#+0
   \   000001B0   03E0               B        ??SetupNewPass_Event_14
   \                     ??SetupNewPass_Event_15:
   \   000001B2   0B49               LDR      R1,??SetupNewPass_Event_0+0x14  ;; InsertNewPass1
   \   000001B4   0022               MOVS     R2,#+0
   \   000001B6   0A54               STRB     R2,[R1, R0]
   \   000001B8   401C               ADDS     R0,R0,#+1
   \                     ??SetupNewPass_Event_14:
   \   000001BA   0828               CMP      R0,#+8
   \   000001BC   F9DB               BLT      ??SetupNewPass_Event_15
   7318                        InsertNewPass1[8]=0;
   \   000001BE   0748               LDR      R0,??SetupNewPass_Event_0+0x10  ;; InsertNewPass1 + 8
   \   000001C0   0021               MOVS     R1,#+0
   \   000001C2   0170               STRB     R1,[R0, #+0]
   7319                    }
   7320                
   7321              }//________________________________________________________________________
   \                     ??SetupNewPass_Event_13:
   \   000001C4   70BC               POP      {R4-R6}
   \   000001C6   01BC               POP      {R0}
   \   000001C8   0047               BX       R0               ;; return
   \   000001CA   C046               Nop      
   \                     ??SetupNewPass_Event_0:
   \   000001CC   ........           DC32     Y_down
   \   000001D0   ........           DC32     X_down
   \   000001D4   ........           DC32     Y_up
   \   000001D8   ........           DC32     X_up
   \   000001DC   ........           DC32     InsertNewPass1 + 8
   \   000001E0   ........           DC32     InsertNewPass1
   \   000001E4   ........           DC32     InsertOldPass1 + 8
   \   000001E8   ........           DC32     g_Password_1
   \   000001EC   ........           DC32     g_Password_2
   \   000001F0   DDD71300           DC32     0x13d7dd
   \   000001F4   ........           DC32     MenuLevel
   \   000001F8   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001FC   ........           DC32     `?<Constant "------------">`
   \   00000200   ........           DC32     g_leng
   \   00000204   7D0A0000           DC32     0xa7d
   \   00000208   ........           DC32     Speech
   7322          
   7323          
   7324              
   7325              
   7326              
   7327          
   7328              
   7329              
   7330              
   7331              
   7332          
   7333          //Ustawienia ******************************************************************************************************************
   7334          
   7335          
   7336              
   7337          
   7338          
   7339              
   7340          //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7341          void ScreenSetup_Paint(void)
   7342          {  
   \                     ScreenSetup_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7343              List_Paint(Speech[g_leng].Ekran,3,13,0,0,0,Speech[g_leng].Jasnosc,Speech[g_leng].ScreenSever,Speech[g_leng].Dotyk,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   1748               LDR      R0,??ScreenSetup_Paint_0  ;; 0x519
   \   00000012   184A               LDR      R2,??ScreenSetup_Paint_0+0x4  ;; g_leng
   \   00000014   1268               LDR      R2,[R2, #+0]
   \   00000016   184B               LDR      R3,??ScreenSetup_Paint_0+0x8  ;; 0xa7d
   \   00000018   5A43               MULS     R2,R3,R2
   \   0000001A   184B               LDR      R3,??ScreenSetup_Paint_0+0xC  ;; Speech
   \   0000001C   9A18               ADDS     R2,R3,R2
   \   0000001E   1018               ADDS     R0,R2,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   1748               LDR      R0,??ScreenSetup_Paint_0+0x10  ;; 0x663
   \   00000024   1349               LDR      R1,??ScreenSetup_Paint_0+0x4  ;; g_leng
   \   00000026   0968               LDR      R1,[R1, #+0]
   \   00000028   134A               LDR      R2,??ScreenSetup_Paint_0+0x8  ;; 0xa7d
   \   0000002A   5143               MULS     R1,R2,R1
   \   0000002C   134A               LDR      R2,??ScreenSetup_Paint_0+0xC  ;; Speech
   \   0000002E   5118               ADDS     R1,R2,R1
   \   00000030   0918               ADDS     R1,R1,R0
   \   00000032   1448               LDR      R0,??ScreenSetup_Paint_0+0x14  ;; 0xa23
   \   00000034   0F4A               LDR      R2,??ScreenSetup_Paint_0+0x4  ;; g_leng
   \   00000036   1268               LDR      R2,[R2, #+0]
   \   00000038   0F4B               LDR      R3,??ScreenSetup_Paint_0+0x8  ;; 0xa7d
   \   0000003A   5A43               MULS     R2,R3,R2
   \   0000003C   0F4B               LDR      R3,??ScreenSetup_Paint_0+0xC  ;; Speech
   \   0000003E   9A18               ADDS     R2,R3,R2
   \   00000040   1018               ADDS     R0,R2,R0
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   0D22               MOVS     R2,#+13
   \   0000004E   0321               MOVS     R1,#+3
   \   00000050   0D48               LDR      R0,??ScreenSetup_Paint_0+0x18  ;; 0x4dd
   \   00000052   084C               LDR      R4,??ScreenSetup_Paint_0+0x4  ;; g_leng
   \   00000054   2468               LDR      R4,[R4, #+0]
   \   00000056   084D               LDR      R5,??ScreenSetup_Paint_0+0x8  ;; 0xa7d
   \   00000058   6C43               MULS     R4,R5,R4
   \   0000005A   084D               LDR      R5,??ScreenSetup_Paint_0+0xC  ;; Speech
   \   0000005C   2C19               ADDS     R4,R5,R4
   \   0000005E   2018               ADDS     R0,R4,R0
   \   00000060   ........           BL       List_Paint
   \   00000064   0AB0               ADD      SP,SP,#+40
   7344          }//________________________________________________________________________
   \   00000066   01B0               ADD      SP,SP,#+4
   \   00000068   30BC               POP      {R4,R5}
   \   0000006A   01BC               POP      {R0}
   \   0000006C   0047               BX       R0               ;; return
   \   0000006E   C046               Nop      
   \                     ??ScreenSetup_Paint_0:
   \   00000070   19050000           DC32     0x519
   \   00000074   ........           DC32     g_leng
   \   00000078   7D0A0000           DC32     0xa7d
   \   0000007C   ........           DC32     Speech
   \   00000080   63060000           DC32     0x663
   \   00000084   230A0000           DC32     0xa23
   \   00000088   DD040000           DC32     0x4dd
   7345          
   7346              
   7347              
   7348          //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7349          void ScreenSetup_Event(void)
   7350                {
   \                     ScreenSetup_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7351                  int ans;
   7352                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0D21               MOVS     R1,#+13
   \   0000000A   0320               MOVS     R0,#+3
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??ScreenSetup_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??ScreenSetup_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1348               LDR      R0,??ScreenSetup_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1248               LDR      R0,??ScreenSetup_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   7353          
   7354                  if (ans>0)
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   09DB               BLT      ??ScreenSetup_Event_1
   7355                    {
   7356                      MenuLevel=(MenuLevel*10+ans);
   \   00000030   0F49               LDR      R1,??ScreenSetup_Event_0+0x10  ;; MenuLevel
   \   00000032   0F4A               LDR      R2,??ScreenSetup_Event_0+0x10  ;; MenuLevel
   \   00000034   1268               LDR      R2,[R2, #+0]
   \   00000036   0A23               MOVS     R3,#+10
   \   00000038   5A43               MULS     R2,R3,R2
   \   0000003A   1018               ADDS     R0,R2,R0
   \   0000003C   0860               STR      R0,[R1, #+0]
   7357                      MenuPaint();
   \   0000003E   ........           BL       MenuPaint
   \   00000042   0AE0               B        ??ScreenSetup_Event_2
   7358                    
   7359                    }else if (ans<0){
   \                     ??ScreenSetup_Event_1:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   08D5               BPL      ??ScreenSetup_Event_2
   7360                      MenuLevel=(MenuLevel/10);
   \   00000048   0948               LDR      R0,??ScreenSetup_Event_0+0x10  ;; MenuLevel
   \   0000004A   0068               LDR      R0,[R0, #+0]
   \   0000004C   0A21               MOVS     R1,#+10
   \   0000004E   ........           BL       __aeabi_idivmod
   \   00000052   0749               LDR      R1,??ScreenSetup_Event_0+0x10  ;; MenuLevel
   \   00000054   0860               STR      R0,[R1, #+0]
   7361                      MenuPaint();
   \   00000056   ........           BL       MenuPaint
   7362                    } 
   7363                  
   7364                }//_______________________________________________________________________
   \                     ??ScreenSetup_Event_2:
   \   0000005A   10BC               POP      {R4}
   \   0000005C   01BC               POP      {R0}
   \   0000005E   0047               BX       R0               ;; return
   \                     ??ScreenSetup_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     MenuLevel
   7365          
   7366          
   7367          
   7368              
   7369              
   7370          //*-----------------------------------------------------------------------------
   7371          //* Nazwa funkcji :    SetTouchScreen_Paint
   7372          //* Funkcja sustawienia ekranu dotykowego
   7373          //*-----------------------------------------------------------------------------
   7374          //*-----------------------------------------------------------------------------

   \                                 In section .bss, align 1
   7375          char SetTouchStep=0;
   \                     SetTouchStep:
   \   00000000                      DS8 1
   7376          
   7377          

   \                                 In section Debug.txt, align 4, keep-with-next
   7378          void SetTouchScreen_Paint(void)
   7379          {
   \                     SetTouchScreen_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7380          
   7381          if (SetTouchStep==0)
   \   00000002   7B48               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   0DD1               BNE      ??SetTouchScreen_Paint_1
   7382          {
   7383                   korekta_X.A=1;
   \   0000000A   7A48               LDR      R0,??SetTouchScreen_Paint_0+0x4  ;; korekta_X
   \   0000000C   FE21               MOVS     R1,#+254
   \   0000000E   8905               LSLS     R1,R1,#+22       ;; #+1065353216
   \   00000010   0160               STR      R1,[R0, #+0]
   7384                  korekta_X.B=0;
   \   00000012   7948               LDR      R0,??SetTouchScreen_Paint_0+0x8  ;; korekta_X + 4
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0160               STR      R1,[R0, #+0]
   7385                  korekta_Y.A=1;
   \   00000018   7848               LDR      R0,??SetTouchScreen_Paint_0+0xC  ;; korekta_Y
   \   0000001A   FE21               MOVS     R1,#+254
   \   0000001C   8905               LSLS     R1,R1,#+22       ;; #+1065353216
   \   0000001E   0160               STR      R1,[R0, #+0]
   7386                  korekta_Y.B=0; 
   \   00000020   7748               LDR      R0,??SetTouchScreen_Paint_0+0x10  ;; korekta_Y + 4
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   0160               STR      R1,[R0, #+0]
   7387          }
   7388            
   7389          if (SetTouchStep==MaxTouchTest)
   \                     ??SetTouchScreen_Paint_1:
   \   00000026   7248               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   00000028   0078               LDRB     R0,[R0, #+0]
   \   0000002A   0428               CMP      R0,#+4
   \   0000002C   2AD1               BNE      ??SetTouchScreen_Paint_2
   7390          {
   7391                H_line(0,15,127,1);
   \   0000002E   0123               MOVS     R3,#+1
   \   00000030   7F22               MOVS     R2,#+127
   \   00000032   0F21               MOVS     R1,#+15
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   ........           BL       H_line
   7392                H_line(0,45,127,1);
   \   0000003A   0123               MOVS     R3,#+1
   \   0000003C   7F22               MOVS     R2,#+127
   \   0000003E   2D21               MOVS     R1,#+45
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   ........           BL       H_line
   7393                H_line(0,75,127,1);
   \   00000046   0123               MOVS     R3,#+1
   \   00000048   7F22               MOVS     R2,#+127
   \   0000004A   4B21               MOVS     R1,#+75
   \   0000004C   0020               MOVS     R0,#+0
   \   0000004E   ........           BL       H_line
   7394                H_line(0,110,127,1);
   \   00000052   0123               MOVS     R3,#+1
   \   00000054   7F22               MOVS     R2,#+127
   \   00000056   6E21               MOVS     R1,#+110
   \   00000058   0020               MOVS     R0,#+0
   \   0000005A   ........           BL       H_line
   7395                V_line(15,0,127,1);
   \   0000005E   0123               MOVS     R3,#+1
   \   00000060   7F22               MOVS     R2,#+127
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   ........           BL       V_line
   7396                V_line(32,0,127,1);
   \   0000006A   0123               MOVS     R3,#+1
   \   0000006C   7F22               MOVS     R2,#+127
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   2020               MOVS     R0,#+32
   \   00000072   ........           BL       V_line
   7397                V_line(50,0,127,1);
   \   00000076   0123               MOVS     R3,#+1
   \   00000078   7F22               MOVS     R2,#+127
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   3220               MOVS     R0,#+50
   \   0000007E   ........           BL       V_line
   \   00000082   B0E0               B        ??SetTouchScreen_Paint_3
   7398          }  
   7399          else
   7400          {
   7401              CleanCanvas();
   \                     ??SetTouchScreen_Paint_2:
   \   00000084   ........           BL       CleanCanvas
   7402            
   7403              Label(Speech[g_leng].Dotknij,    2,1,70,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000088   82B0               SUB      SP,SP,#+8
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   0090               STR      R0,[SP, #+0]
   \   0000008E   8021               MOVS     R1,#+128
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   3E21               MOVS     R1,#+62
   \   00000096   0F20               MOVS     R0,#+15
   \   00000098   03B4               PUSH     {R0,R1}
   \   0000009A   4623               MOVS     R3,#+70
   \   0000009C   0122               MOVS     R2,#+1
   \   0000009E   0221               MOVS     R1,#+2
   \   000000A0   A520               MOVS     R0,#+165
   \   000000A2   C000               LSLS     R0,R0,#+3        ;; #+1320
   \   000000A4   574C               LDR      R4,??SetTouchScreen_Paint_0+0x14  ;; g_leng
   \   000000A6   2468               LDR      R4,[R4, #+0]
   \   000000A8   574D               LDR      R5,??SetTouchScreen_Paint_0+0x18  ;; 0xa7d
   \   000000AA   6C43               MULS     R4,R5,R4
   \   000000AC   574D               LDR      R5,??SetTouchScreen_Paint_0+0x1C  ;; Speech
   \   000000AE   2C19               ADDS     R4,R5,R4
   \   000000B0   2018               ADDS     R0,R4,R0
   \   000000B2   ........           BL       Label
   \   000000B6   06B0               ADD      SP,SP,#+24
   7404              Label(Speech[g_leng].precyzyjnie,2,1,60,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   8021               MOVS     R1,#+128
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   3E21               MOVS     R1,#+62
   \   000000C6   0F20               MOVS     R0,#+15
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   3C23               MOVS     R3,#+60
   \   000000CC   0122               MOVS     R2,#+1
   \   000000CE   0221               MOVS     R1,#+2
   \   000000D0   4F48               LDR      R0,??SetTouchScreen_Paint_0+0x20  ;; 0x537
   \   000000D2   4C4C               LDR      R4,??SetTouchScreen_Paint_0+0x14  ;; g_leng
   \   000000D4   2468               LDR      R4,[R4, #+0]
   \   000000D6   4C4D               LDR      R5,??SetTouchScreen_Paint_0+0x18  ;; 0xa7d
   \   000000D8   6C43               MULS     R4,R5,R4
   \   000000DA   4C4D               LDR      R5,??SetTouchScreen_Paint_0+0x1C  ;; Speech
   \   000000DC   2C19               ADDS     R4,R5,R4
   \   000000DE   2018               ADDS     R0,R4,R0
   \   000000E0   ........           BL       Label
   \   000000E4   06B0               ADD      SP,SP,#+24
   7405              Label(Speech[g_leng].wskaznik,   2,1,50,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   0020               MOVS     R0,#+0
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   8021               MOVS     R1,#+128
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   3E21               MOVS     R1,#+62
   \   000000F4   0F20               MOVS     R0,#+15
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   3223               MOVS     R3,#+50
   \   000000FA   0122               MOVS     R2,#+1
   \   000000FC   0221               MOVS     R1,#+2
   \   000000FE   4548               LDR      R0,??SetTouchScreen_Paint_0+0x24  ;; 0x546
   \   00000100   404C               LDR      R4,??SetTouchScreen_Paint_0+0x14  ;; g_leng
   \   00000102   2468               LDR      R4,[R4, #+0]
   \   00000104   404D               LDR      R5,??SetTouchScreen_Paint_0+0x18  ;; 0xa7d
   \   00000106   6C43               MULS     R4,R5,R4
   \   00000108   404D               LDR      R5,??SetTouchScreen_Paint_0+0x1C  ;; Speech
   \   0000010A   2C19               ADDS     R4,R5,R4
   \   0000010C   2018               ADDS     R0,R4,R0
   \   0000010E   ........           BL       Label
   \   00000112   06B0               ADD      SP,SP,#+24
   7406          
   7407               CanvasPixel(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y,1);   //(char X, char Y, char Colour)
   \   00000114   0122               MOVS     R2,#+1
   \   00000116   0120               MOVS     R0,#+1
   \   00000118   3549               LDR      R1,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   0000011A   0978               LDRB     R1,[R1, #+0]
   \   0000011C   0223               MOVS     R3,#+2
   \   0000011E   5943               MULS     R1,R3,R1
   \   00000120   3D4B               LDR      R3,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   00000122   5918               ADDS     R1,R3,R1
   \   00000124   0956               LDRSB    R1,[R1, R0]
   \   00000126   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000128   090E               LSRS     R1,R1,#+24
   \   0000012A   3148               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   0000012C   0078               LDRB     R0,[R0, #+0]
   \   0000012E   0223               MOVS     R3,#+2
   \   00000130   5843               MULS     R0,R3,R0
   \   00000132   394B               LDR      R3,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   00000134   1856               LDRSB    R0,[R3, R0]
   \   00000136   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000138   000E               LSRS     R0,R0,#+24
   \   0000013A   ........           BL       CanvasPixel
   7408               H_line(TouchTestSor[SetTouchStep].x+2,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ)
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   0522               MOVS     R2,#+5
   \   00000142   0120               MOVS     R0,#+1
   \   00000144   2A49               LDR      R1,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   00000146   0978               LDRB     R1,[R1, #+0]
   \   00000148   0224               MOVS     R4,#+2
   \   0000014A   6143               MULS     R1,R4,R1
   \   0000014C   324C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   0000014E   6118               ADDS     R1,R4,R1
   \   00000150   0956               LDRSB    R1,[R1, R0]
   \   00000152   2748               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   00000154   0078               LDRB     R0,[R0, #+0]
   \   00000156   0224               MOVS     R4,#+2
   \   00000158   6043               MULS     R0,R4,R0
   \   0000015A   2F4C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   0000015C   2056               LDRSB    R0,[R4, R0]
   \   0000015E   801C               ADDS     R0,R0,#+2
   \   00000160   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000162   000E               LSRS     R0,R0,#+24
   \   00000164   ........           BL       H_line
   7409               H_line(TouchTestSor[SetTouchStep].x-6,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000168   0123               MOVS     R3,#+1
   \   0000016A   0522               MOVS     R2,#+5
   \   0000016C   0120               MOVS     R0,#+1
   \   0000016E   2049               LDR      R1,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   00000170   0978               LDRB     R1,[R1, #+0]
   \   00000172   0224               MOVS     R4,#+2
   \   00000174   6143               MULS     R1,R4,R1
   \   00000176   284C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   00000178   6118               ADDS     R1,R4,R1
   \   0000017A   0956               LDRSB    R1,[R1, R0]
   \   0000017C   1C48               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   0000017E   0078               LDRB     R0,[R0, #+0]
   \   00000180   0224               MOVS     R4,#+2
   \   00000182   6043               MULS     R0,R4,R0
   \   00000184   244C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   00000186   2056               LDRSB    R0,[R4, R0]
   \   00000188   801F               SUBS     R0,R0,#+6
   \   0000018A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000018C   000E               LSRS     R0,R0,#+24
   \   0000018E   ........           BL       H_line
   7410               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y+2,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000192   0123               MOVS     R3,#+1
   \   00000194   0522               MOVS     R2,#+5
   \   00000196   0120               MOVS     R0,#+1
   \   00000198   1549               LDR      R1,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   0000019A   0978               LDRB     R1,[R1, #+0]
   \   0000019C   0224               MOVS     R4,#+2
   \   0000019E   6143               MULS     R1,R4,R1
   \   000001A0   1D4C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   000001A2   6118               ADDS     R1,R4,R1
   \   000001A4   0956               LDRSB    R1,[R1, R0]
   \   000001A6   891C               ADDS     R1,R1,#+2
   \   000001A8   1148               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   000001AA   0078               LDRB     R0,[R0, #+0]
   \   000001AC   0224               MOVS     R4,#+2
   \   000001AE   6043               MULS     R0,R4,R0
   \   000001B0   194C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   000001B2   2056               LDRSB    R0,[R4, R0]
   \   000001B4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001B6   000E               LSRS     R0,R0,#+24
   \   000001B8   ........           BL       V_line
   7411               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y-6,5,1); // (char X, int Y, char lenght, char typ) 
   \   000001BC   0123               MOVS     R3,#+1
   \   000001BE   0522               MOVS     R2,#+5
   \   000001C0   0120               MOVS     R0,#+1
   \   000001C2   0B49               LDR      R1,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   000001C4   0978               LDRB     R1,[R1, #+0]
   \   000001C6   0224               MOVS     R4,#+2
   \   000001C8   6143               MULS     R1,R4,R1
   \   000001CA   134C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   000001CC   6118               ADDS     R1,R4,R1
   \   000001CE   0956               LDRSB    R1,[R1, R0]
   \   000001D0   891F               SUBS     R1,R1,#+6
   \   000001D2   0748               LDR      R0,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   000001D4   0078               LDRB     R0,[R0, #+0]
   \   000001D6   0224               MOVS     R4,#+2
   \   000001D8   6043               MULS     R0,R4,R0
   \   000001DA   0F4C               LDR      R4,??SetTouchScreen_Paint_0+0x28  ;; TouchTestSor
   \   000001DC   2056               LDRSB    R0,[R4, R0]
   \   000001DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001E0   000E               LSRS     R0,R0,#+24
   \   000001E2   ........           BL       V_line
   7412          }
   7413          }
   \                     ??SetTouchScreen_Paint_3:
   \   000001E6   01B0               ADD      SP,SP,#+4
   \   000001E8   30BC               POP      {R4,R5}
   \   000001EA   01BC               POP      {R0}
   \   000001EC   0047               BX       R0               ;; return
   \   000001EE   C046               Nop      
   \                     ??SetTouchScreen_Paint_0:
   \   000001F0   ........           DC32     SetTouchStep
   \   000001F4   ........           DC32     korekta_X
   \   000001F8   ........           DC32     korekta_X + 4
   \   000001FC   ........           DC32     korekta_Y
   \   00000200   ........           DC32     korekta_Y + 4
   \   00000204   ........           DC32     g_leng
   \   00000208   7D0A0000           DC32     0xa7d
   \   0000020C   ........           DC32     Speech
   \   00000210   37050000           DC32     0x537
   \   00000214   46050000           DC32     0x546
   \   00000218   ........           DC32     TouchTestSor
   7414          
   7415          
   7416          extern _Correct korekta_Y;
   7417          extern _Correct korekta_X;

   \                                 In section .bss, align 4
   7418          signed short Diff_X[MaxTouchTest];
   \                     Diff_X:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   7419          signed short Diff_Y[MaxTouchTest];
   \                     Diff_Y:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   7420          float Xo1, Xo2, Yo1, Yo2;
   \                     Xo1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Xo2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Yo1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Yo2:
   \   00000000                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
   7421          void SetTouchScreen_Event(void)
   7422          {
   \                     SetTouchScreen_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7423          
   7424          
   7425          if (SetTouchStep==MaxTouchTest)
   \   00000002   8D48               LDR      R0,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0428               CMP      R0,#+4
   \   00000008   19D1               BNE      ??SetTouchScreen_Event_1
   7426          {
   7427             if ((X_down>0) && (Y_down>0))
   \   0000000A   8C48               LDR      R0,??SetTouchScreen_Event_0+0x4  ;; X_down
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   405E               LDRSH    R0,[R0, R1]
   \   00000010   0128               CMP      R0,#+1
   \   00000012   00DA               BGE      .+4
   \   00000014   0BE1               B        ??SetTouchScreen_Event_2
   \   00000016   8A48               LDR      R0,??SetTouchScreen_Event_0+0x8  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   405E               LDRSH    R0,[R0, R1]
   \   0000001C   0128               CMP      R0,#+1
   \   0000001E   00DA               BGE      .+4
   \   00000020   05E1               B        ??SetTouchScreen_Event_2
   7428             {
   7429                CanvasPixel(X_down,Y_down,1);
   \   00000022   0122               MOVS     R2,#+1
   \   00000024   8648               LDR      R0,??SetTouchScreen_Event_0+0x8  ;; Y_down
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   415E               LDRSH    R1,[R0, R1]
   \   0000002A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000002C   090E               LSRS     R1,R1,#+24
   \   0000002E   8348               LDR      R0,??SetTouchScreen_Event_0+0x4  ;; X_down
   \   00000030   0023               MOVS     R3,#+0
   \   00000032   C05E               LDRSH    R0,[R0, R3]
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   ........           BL       CanvasPixel
   \   0000003C   F7E0               B        ??SetTouchScreen_Event_2
   7430               
   7431             }
   7432          }else{
   7433            
   7434            if ((X_up>0) && (Y_up>0)&& ((g_counter>Touch_EventTime+400) || (Touch_EventTime>g_counter)) )
   \                     ??SetTouchScreen_Event_1:
   \   0000003E   8148               LDR      R0,??SetTouchScreen_Event_0+0xC  ;; X_up
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   405E               LDRSH    R0,[R0, R1]
   \   00000044   0128               CMP      R0,#+1
   \   00000046   00DA               BGE      .+4
   \   00000048   F1E0               B        ??SetTouchScreen_Event_2
   \   0000004A   7F48               LDR      R0,??SetTouchScreen_Event_0+0x10  ;; Y_up
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   0128               CMP      R0,#+1
   \   00000052   00DA               BGE      .+4
   \   00000054   EBE0               B        ??SetTouchScreen_Event_2
   \   00000056   7D48               LDR      R0,??SetTouchScreen_Event_0+0x14  ;; Touch_EventTime
   \   00000058   03C8               LDM      R0!,{R0,R1}
   \   0000005A   C822               MOVS     R2,#+200
   \   0000005C   5200               LSLS     R2,R2,#+1        ;; #+400
   \   0000005E   0023               MOVS     R3,#+0
   \   00000060   1218               ADDS     R2,R2,R0
   \   00000062   4B41               ADCS     R3,R3,R1
   \   00000064   7A48               LDR      R0,??SetTouchScreen_Event_0+0x18  ;; g_counter
   \   00000066   03C8               LDM      R0!,{R0,R1}
   \   00000068   8B42               CMP      R3,R1
   \   0000006A   0ED3               BCC      ??SetTouchScreen_Event_3
   \   0000006C   01D8               BHI      ??SetTouchScreen_Event_4
   \   0000006E   8242               CMP      R2,R0
   \   00000070   0BD3               BCC      ??SetTouchScreen_Event_3
   \                     ??SetTouchScreen_Event_4:
   \   00000072   7748               LDR      R0,??SetTouchScreen_Event_0+0x18  ;; g_counter
   \   00000074   0CC8               LDM      R0!,{R2,R3}
   \   00000076   0838               SUBS     R0,R0,#+8
   \   00000078   7448               LDR      R0,??SetTouchScreen_Event_0+0x14  ;; Touch_EventTime
   \   0000007A   03C8               LDM      R0!,{R0,R1}
   \   0000007C   8B42               CMP      R3,R1
   \   0000007E   00D9               BLS      .+4
   \   00000080   D5E0               B        ??SetTouchScreen_Event_2
   \   00000082   02D3               BCC      ??SetTouchScreen_Event_5
   \   00000084   8242               CMP      R2,R0
   \   00000086   00D3               BCC      .+4
   \   00000088   D1E0               B        ??SetTouchScreen_Event_2
   7435            {
   7436                Touch_EventTime=g_counter;
   \                     ??SetTouchScreen_Event_5:
   \                     ??SetTouchScreen_Event_3:
   \   0000008A   704A               LDR      R2,??SetTouchScreen_Event_0+0x14  ;; Touch_EventTime
   \   0000008C   7048               LDR      R0,??SetTouchScreen_Event_0+0x18  ;; g_counter
   \   0000008E   03C8               LDM      R0!,{R0,R1}
   \   00000090   03C2               STM      R2!,{R0,R1}
   \   00000092   083A               SUBS     R2,R2,#+8
   7437                Diff_X[SetTouchStep]=X_up;
   \   00000094   6848               LDR      R0,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0221               MOVS     R1,#+2
   \   0000009A   4843               MULS     R0,R1,R0
   \   0000009C   6D49               LDR      R1,??SetTouchScreen_Event_0+0x1C  ;; Diff_X
   \   0000009E   694A               LDR      R2,??SetTouchScreen_Event_0+0xC  ;; X_up
   \   000000A0   1288               LDRH     R2,[R2, #+0]
   \   000000A2   0A52               STRH     R2,[R1, R0]
   7438                Diff_Y[SetTouchStep]=Y_up;
   \   000000A4   6448               LDR      R0,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   000000A6   0078               LDRB     R0,[R0, #+0]
   \   000000A8   0221               MOVS     R1,#+2
   \   000000AA   4843               MULS     R0,R1,R0
   \   000000AC   6A49               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; Diff_Y
   \   000000AE   664A               LDR      R2,??SetTouchScreen_Event_0+0x10  ;; Y_up
   \   000000B0   1288               LDRH     R2,[R2, #+0]
   \   000000B2   0A52               STRH     R2,[R1, R0]
   7439                
   7440                if (SetTouchStep<MaxTouchTest-1)
   \   000000B4   6048               LDR      R0,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   000000B6   0078               LDRB     R0,[R0, #+0]
   \   000000B8   0328               CMP      R0,#+3
   \   000000BA   07D2               BCS      ??SetTouchScreen_Event_6
   7441                {
   7442                  SetTouchStep++;
   \   000000BC   5E48               LDR      R0,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   000000BE   5E49               LDR      R1,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   000000C0   0978               LDRB     R1,[R1, #+0]
   \   000000C2   491C               ADDS     R1,R1,#+1
   \   000000C4   0170               STRB     R1,[R0, #+0]
   7443                  MenuPaint();
   \   000000C6   ........           BL       MenuPaint
   \   000000CA   B0E0               B        ??SetTouchScreen_Event_2
   7444                }else{
   7445                  
   7446                  
   7447                  Xo1=(Diff_X[0]+Diff_X[2])/2;
   \                     ??SetTouchScreen_Event_6:
   \   000000CC   6148               LDR      R0,??SetTouchScreen_Event_0+0x1C  ;; Diff_X
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   405E               LDRSH    R0,[R0, R1]
   \   000000D2   0421               MOVS     R1,#+4
   \   000000D4   5F4A               LDR      R2,??SetTouchScreen_Event_0+0x1C  ;; Diff_X
   \   000000D6   515E               LDRSH    R1,[R2, R1]
   \   000000D8   4018               ADDS     R0,R0,R1
   \   000000DA   0221               MOVS     R1,#+2
   \   000000DC   ........           BL       __aeabi_idivmod
   \   000000E0   ........           BL       __aeabi_i2f
   \   000000E4   5D49               LDR      R1,??SetTouchScreen_Event_0+0x24  ;; Xo1
   \   000000E6   0860               STR      R0,[R1, #+0]
   7448                  Xo2=(Diff_X[1]+Diff_X[3])/2;
   \   000000E8   0220               MOVS     R0,#+2
   \   000000EA   5A49               LDR      R1,??SetTouchScreen_Event_0+0x1C  ;; Diff_X
   \   000000EC   085E               LDRSH    R0,[R1, R0]
   \   000000EE   0621               MOVS     R1,#+6
   \   000000F0   584A               LDR      R2,??SetTouchScreen_Event_0+0x1C  ;; Diff_X
   \   000000F2   515E               LDRSH    R1,[R2, R1]
   \   000000F4   4018               ADDS     R0,R0,R1
   \   000000F6   0221               MOVS     R1,#+2
   \   000000F8   ........           BL       __aeabi_idivmod
   \   000000FC   ........           BL       __aeabi_i2f
   \   00000100   5749               LDR      R1,??SetTouchScreen_Event_0+0x28  ;; Xo2
   \   00000102   0860               STR      R0,[R1, #+0]
   7449                  Yo1=(Diff_Y[0]+Diff_Y[1])/2;
   \   00000104   5448               LDR      R0,??SetTouchScreen_Event_0+0x20  ;; Diff_Y
   \   00000106   0021               MOVS     R1,#+0
   \   00000108   405E               LDRSH    R0,[R0, R1]
   \   0000010A   0221               MOVS     R1,#+2
   \   0000010C   524A               LDR      R2,??SetTouchScreen_Event_0+0x20  ;; Diff_Y
   \   0000010E   515E               LDRSH    R1,[R2, R1]
   \   00000110   4018               ADDS     R0,R0,R1
   \   00000112   0221               MOVS     R1,#+2
   \   00000114   ........           BL       __aeabi_idivmod
   \   00000118   ........           BL       __aeabi_i2f
   \   0000011C   5149               LDR      R1,??SetTouchScreen_Event_0+0x2C  ;; Yo1
   \   0000011E   0860               STR      R0,[R1, #+0]
   7450                  Yo2=(Diff_Y[2]+Diff_Y[3])/2;
   \   00000120   0420               MOVS     R0,#+4
   \   00000122   4D49               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; Diff_Y
   \   00000124   085E               LDRSH    R0,[R1, R0]
   \   00000126   0621               MOVS     R1,#+6
   \   00000128   4B4A               LDR      R2,??SetTouchScreen_Event_0+0x20  ;; Diff_Y
   \   0000012A   515E               LDRSH    R1,[R2, R1]
   \   0000012C   4018               ADDS     R0,R0,R1
   \   0000012E   0221               MOVS     R1,#+2
   \   00000130   ........           BL       __aeabi_idivmod
   \   00000134   ........           BL       __aeabi_i2f
   \   00000138   4B49               LDR      R1,??SetTouchScreen_Event_0+0x30  ;; Yo2
   \   0000013A   0860               STR      R0,[R1, #+0]
   7451                  
   7452                  float Xw1=TouchTestSor[0].x;
   \   0000013C   4B48               LDR      R0,??SetTouchScreen_Event_0+0x34  ;; TouchTestSor
   \   0000013E   0021               MOVS     R1,#+0
   \   00000140   4056               LDRSB    R0,[R0, R1]
   \   00000142   ........           BL       __aeabi_i2f
   \   00000146   0400               MOVS     R4,R0
   7453                  float Xw2=TouchTestSor[1].x;
   \   00000148   0220               MOVS     R0,#+2
   \   0000014A   4849               LDR      R1,??SetTouchScreen_Event_0+0x34  ;; TouchTestSor
   \   0000014C   0856               LDRSB    R0,[R1, R0]
   \   0000014E   ........           BL       __aeabi_i2f
   \   00000152   0700               MOVS     R7,R0
   7454                  float Yw1=TouchTestSor[0].y;
   \   00000154   0120               MOVS     R0,#+1
   \   00000156   4549               LDR      R1,??SetTouchScreen_Event_0+0x34  ;; TouchTestSor
   \   00000158   0856               LDRSB    R0,[R1, R0]
   \   0000015A   ........           BL       __aeabi_i2f
   \   0000015E   0500               MOVS     R5,R0
   7455                  float Yw2=TouchTestSor[3].y;
   \   00000160   0720               MOVS     R0,#+7
   \   00000162   4249               LDR      R1,??SetTouchScreen_Event_0+0x34  ;; TouchTestSor
   \   00000164   0856               LDRSB    R0,[R1, R0]
   \   00000166   ........           BL       __aeabi_i2f
   \   0000016A   0600               MOVS     R6,R0
   7456                  
   7457                  
   7458                  korekta_X.A=(Xw2-Xw1)/(Xo2-Xo1);
   \   0000016C   3800               MOVS     R0,R7
   \   0000016E   2100               MOVS     R1,R4
   \   00000170   ........           BL       __aeabi_fsub
   \   00000174   0700               MOVS     R7,R0
   \   00000176   3A48               LDR      R0,??SetTouchScreen_Event_0+0x28  ;; Xo2
   \   00000178   0068               LDR      R0,[R0, #+0]
   \   0000017A   3849               LDR      R1,??SetTouchScreen_Event_0+0x24  ;; Xo1
   \   0000017C   0968               LDR      R1,[R1, #+0]
   \   0000017E   ........           BL       __aeabi_fsub
   \   00000182   0100               MOVS     R1,R0
   \   00000184   3800               MOVS     R0,R7
   \   00000186   ........           BL       __aeabi_fdiv
   \   0000018A   3949               LDR      R1,??SetTouchScreen_Event_0+0x38  ;; korekta_X
   \   0000018C   0860               STR      R0,[R1, #+0]
   7459                  korekta_X.B=Xw1-korekta_X.A*Xo1;
   \   0000018E   3848               LDR      R0,??SetTouchScreen_Event_0+0x38  ;; korekta_X
   \   00000190   0068               LDR      R0,[R0, #+0]
   \   00000192   3249               LDR      R1,??SetTouchScreen_Event_0+0x24  ;; Xo1
   \   00000194   0968               LDR      R1,[R1, #+0]
   \   00000196   ........           BL       __aeabi_fmul
   \   0000019A   0100               MOVS     R1,R0
   \   0000019C   2000               MOVS     R0,R4
   \   0000019E   ........           BL       __aeabi_fsub
   \   000001A2   3449               LDR      R1,??SetTouchScreen_Event_0+0x3C  ;; korekta_X + 4
   \   000001A4   0860               STR      R0,[R1, #+0]
   7460                  korekta_Y.A=(Yw2-Yw1)/(Yo2-Yo1);
   \   000001A6   3000               MOVS     R0,R6
   \   000001A8   2900               MOVS     R1,R5
   \   000001AA   ........           BL       __aeabi_fsub
   \   000001AE   0400               MOVS     R4,R0
   \   000001B0   2D48               LDR      R0,??SetTouchScreen_Event_0+0x30  ;; Yo2
   \   000001B2   0068               LDR      R0,[R0, #+0]
   \   000001B4   2B49               LDR      R1,??SetTouchScreen_Event_0+0x2C  ;; Yo1
   \   000001B6   0968               LDR      R1,[R1, #+0]
   \   000001B8   ........           BL       __aeabi_fsub
   \   000001BC   0100               MOVS     R1,R0
   \   000001BE   2000               MOVS     R0,R4
   \   000001C0   ........           BL       __aeabi_fdiv
   \   000001C4   2C49               LDR      R1,??SetTouchScreen_Event_0+0x40  ;; korekta_Y
   \   000001C6   0860               STR      R0,[R1, #+0]
   7461                  korekta_Y.B=Yw1-korekta_Y.A*Yo1;
   \   000001C8   2B48               LDR      R0,??SetTouchScreen_Event_0+0x40  ;; korekta_Y
   \   000001CA   0068               LDR      R0,[R0, #+0]
   \   000001CC   2549               LDR      R1,??SetTouchScreen_Event_0+0x2C  ;; Yo1
   \   000001CE   0968               LDR      R1,[R1, #+0]
   \   000001D0   ........           BL       __aeabi_fmul
   \   000001D4   0100               MOVS     R1,R0
   \   000001D6   2800               MOVS     R0,R5
   \   000001D8   ........           BL       __aeabi_fsub
   \   000001DC   2749               LDR      R1,??SetTouchScreen_Event_0+0x44  ;; korekta_Y + 4
   \   000001DE   0860               STR      R0,[R1, #+0]
   7462                  
   7463                       
   7464                  //zapis korekt do flash
   7465                  unsigned int Save = __get_interrupt_state();  
   \   000001E0   ........           BL       __iar_get_interrupt_state
   \   000001E4   0400               MOVS     R4,R0
   7466                  __disable_interrupt();
   \   000001E6   ........           BL       __iar_disable_interrupt
   7467                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001EA   0822               MOVS     R2,#+8
   \   000001EC   2049               LDR      R1,??SetTouchScreen_Event_0+0x38  ;; korekta_X
   \   000001EE   2448               LDR      R0,??SetTouchScreen_Event_0+0x48  ;; 0x13d828
   \   000001F0   ........           BL       FlashWrite
   7468                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   000001F4   0822               MOVS     R2,#+8
   \   000001F6   2049               LDR      R1,??SetTouchScreen_Event_0+0x40  ;; korekta_Y
   \   000001F8   2248               LDR      R0,??SetTouchScreen_Event_0+0x4C  ;; 0x13d820
   \   000001FA   ........           BL       FlashWrite
   7469                  __set_interrupt_state(Save);
   \   000001FE   2000               MOVS     R0,R4
   \   00000200   ........           BL       __iar_set_interrupt_state
   7470                  __enable_interrupt(); 
   \   00000204   ........           BL       __iar_enable_interrupt
   7471                  //koniec zapisu do flash
   7472                
   7473                  //je¿eli wejcie w opcje zaawansowane
   7474                  if (StartAdvance)
   \   00000208   1F48               LDR      R0,??SetTouchScreen_Event_0+0x50  ;; StartAdvance
   \   0000020A   0078               LDRB     R0,[R0, #+0]
   \   0000020C   0028               CMP      R0,#+0
   \   0000020E   06D0               BEQ      ??SetTouchScreen_Event_7
   7475                  {
   7476                    StartAdvance=0;
   \   00000210   1D48               LDR      R0,??SetTouchScreen_Event_0+0x50  ;; StartAdvance
   \   00000212   0021               MOVS     R1,#+0
   \   00000214   0170               STRB     R1,[R0, #+0]
   7477                    MenuLevel=5;
   \   00000216   1D48               LDR      R0,??SetTouchScreen_Event_0+0x54  ;; MenuLevel
   \   00000218   0521               MOVS     R1,#+5
   \   0000021A   0160               STR      R1,[R0, #+0]
   \   0000021C   02E0               B        ??SetTouchScreen_Event_8
   7478                  }else{
   7479                    MenuLevel=1;
   \                     ??SetTouchScreen_Event_7:
   \   0000021E   1B48               LDR      R0,??SetTouchScreen_Event_0+0x54  ;; MenuLevel
   \   00000220   0121               MOVS     R1,#+1
   \   00000222   0160               STR      R1,[R0, #+0]
   7480                  }
   7481                  //SetTouchStep=MaxTouchTest;
   7482                  //CleanCanvas();
   7483                  SetTouchStep=0;
   \                     ??SetTouchScreen_Event_8:
   \   00000224   0448               LDR      R0,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   00000226   0021               MOVS     R1,#+0
   \   00000228   0170               STRB     R1,[R0, #+0]
   7484                  MenuPaint();
   \   0000022A   ........           BL       MenuPaint
   7485                }
   7486            }
   7487          }
   7488          
   7489          }
   \                     ??SetTouchScreen_Event_2:
   \   0000022E   01B0               ADD      SP,SP,#+4
   \   00000230   F0BC               POP      {R4-R7}
   \   00000232   01BC               POP      {R0}
   \   00000234   0047               BX       R0               ;; return
   \   00000236   C046               Nop      
   \                     ??SetTouchScreen_Event_0:
   \   00000238   ........           DC32     SetTouchStep
   \   0000023C   ........           DC32     X_down
   \   00000240   ........           DC32     Y_down
   \   00000244   ........           DC32     X_up
   \   00000248   ........           DC32     Y_up
   \   0000024C   ........           DC32     Touch_EventTime
   \   00000250   ........           DC32     g_counter
   \   00000254   ........           DC32     Diff_X
   \   00000258   ........           DC32     Diff_Y
   \   0000025C   ........           DC32     Xo1
   \   00000260   ........           DC32     Xo2
   \   00000264   ........           DC32     Yo1
   \   00000268   ........           DC32     Yo2
   \   0000026C   ........           DC32     TouchTestSor
   \   00000270   ........           DC32     korekta_X
   \   00000274   ........           DC32     korekta_X + 4
   \   00000278   ........           DC32     korekta_Y
   \   0000027C   ........           DC32     korekta_Y + 4
   \   00000280   28D81300           DC32     0x13d828
   \   00000284   20D81300           DC32     0x13d820
   \   00000288   ........           DC32     StartAdvance
   \   0000028C   ........           DC32     MenuLevel
   7490              
   7491              
   7492              
   7493              
   7494          
   7495          //restart
   7496                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7497                void Restart_Event(void)
   7498                {
   \                     Restart_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7499                  AT91S_RSTC  g_AT91S_RSTC;
   7500                  int ans;
   7501           
   7502                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1248               LDR      R0,??Restart_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1148               LDR      R0,??Restart_Event_0+0x4  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   1148               LDR      R0,??Restart_Event_0+0x8  ;; Y_up
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   415E               LDRSH    R1,[R0, R1]
   \   00000014   1048               LDR      R0,??Restart_Event_0+0xC  ;; X_up
   \   00000016   0024               MOVS     R4,#+0
   \   00000018   005F               LDRSH    R0,[R0, R4]
   \   0000001A   ........           BL       Ask_Event
   7503            
   7504                  if (ans)
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   11D0               BEQ      ??Restart_Event_1
   7505                    {
   7506                    if (ans==2) 
   \   00000022   0228               CMP      R0,#+2
   \   00000024   02D1               BNE      ??Restart_Event_2
   7507                    {
   7508          
   7509                      //restart
   7510                      AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000026   0D49               LDR      R1,??Restart_Event_0+0x10  ;; 0xfffffd00
   \   00000028   0D4A               LDR      R2,??Restart_Event_0+0x14  ;; 0xa5000005
   \   0000002A   0A60               STR      R2,[R1, #+0]
   7511                    }
   7512                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??Restart_Event_2:
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   01D4               BMI      ??Restart_Event_3
   \   00000030   0128               CMP      R0,#+1
   \   00000032   06D1               BNE      ??Restart_Event_4
   \                     ??Restart_Event_3:
   \   00000034   0B48               LDR      R0,??Restart_Event_0+0x18  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   0949               LDR      R1,??Restart_Event_0+0x18  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
   7513                    MenuPaint();
   \                     ??Restart_Event_4:
   \   00000042   ........           BL       MenuPaint
   7514                    } 
   7515                }//_______________________________________________________________________
   \                     ??Restart_Event_1:
   \   00000046   10BC               POP      {R4}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
   \                     ??Restart_Event_0:
   \   0000004C   ........           DC32     Y_down
   \   00000050   ........           DC32     X_down
   \   00000054   ........           DC32     Y_up
   \   00000058   ........           DC32     X_up
   \   0000005C   00FDFFFF           DC32     0xfffffd00
   \   00000060   050000A5           DC32     0xa5000005
   \   00000064   ........           DC32     MenuLevel
   7516              
   7517              
   7518          
   7519              
   7520          
   7521          
   7522              
   7523          //czyæ rejestr
   7524                //*-----------------------------------------------------------------------
   7525              

   \                                 In section Debug.txt, align 4, keep-with-next
   7526                void CleanReg_Event(void)
   7527                {
   \                     CleanReg_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7528                  int ans;
   7529           
   7530                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1748               LDR      R0,??CleanReg_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1648               LDR      R0,??CleanReg_Event_0+0x4  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   1648               LDR      R0,??CleanReg_Event_0+0x8  ;; Y_up
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   415E               LDRSH    R1,[R0, R1]
   \   00000014   1548               LDR      R0,??CleanReg_Event_0+0xC  ;; X_up
   \   00000016   0024               MOVS     R4,#+0
   \   00000018   005F               LDRSH    R0,[R0, R4]
   \   0000001A   ........           BL       Ask_Event
   \   0000001E   0400               MOVS     R4,R0
   7531            
   7532                  if (ans)
   \   00000020   002C               CMP      R4,#+0
   \   00000022   19D0               BEQ      ??CleanReg_Event_1
   7533                    {
   7534                    if (ans==2) 
   \   00000024   022C               CMP      R4,#+2
   \   00000026   0AD1               BNE      ??CleanReg_Event_2
   7535                    {
   7536                      //czyszczenie rejestru
   7537                      CleanReg();
   \   00000028   ........           BL       CleanReg
   7538                      MenuLevel=(MenuLevel/10);
   \   0000002C   1048               LDR      R0,??CleanReg_Event_0+0x10  ;; MenuLevel
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   0E49               LDR      R1,??CleanReg_Event_0+0x10  ;; MenuLevel
   \   00000038   0860               STR      R0,[R1, #+0]
   7539                      MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   7540                    }
   7541                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanReg_Event_2:
   \   0000003E   002C               CMP      R4,#+0
   \   00000040   01D4               BMI      ??CleanReg_Event_3
   \   00000042   012C               CMP      R4,#+1
   \   00000044   06D1               BNE      ??CleanReg_Event_4
   \                     ??CleanReg_Event_3:
   \   00000046   0A48               LDR      R0,??CleanReg_Event_0+0x10  ;; MenuLevel
   \   00000048   0068               LDR      R0,[R0, #+0]
   \   0000004A   0A21               MOVS     R1,#+10
   \   0000004C   ........           BL       __aeabi_idivmod
   \   00000050   0749               LDR      R1,??CleanReg_Event_0+0x10  ;; MenuLevel
   \   00000052   0860               STR      R0,[R1, #+0]
   7542                    MenuPaint();
   \                     ??CleanReg_Event_4:
   \   00000054   ........           BL       MenuPaint
   7543                    } 
   7544                }//_______________________________________________________________________
   \                     ??CleanReg_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??CleanReg_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     MenuLevel
   7545                   
   7546              
   7547              
   7548          //Ustawienia czasu  **************************************************************************************************************
   7549              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7550              void SetupTime_Paint(void)
   7551              {  
   \                     SetupTime_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   7552                 List_Paint(Speech[g_leng].DataCzas,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   BBA0               ADR      R0,??SetupTime_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   B848               LDR      R0,??SetupTime_Paint_0+0x4  ;; g_leng
   \   00000028   0068               LDR      R0,[R0, #+0]
   \   0000002A   B84C               LDR      R4,??SetupTime_Paint_0+0x8  ;; 0xa7d
   \   0000002C   6043               MULS     R0,R4,R0
   \   0000002E   B84C               LDR      R4,??SetupTime_Paint_0+0xC  ;; Speech
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   B430               ADDS     R0,R0,#+180
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   7553                 
   7554          
   7555                 
   7556                 Label(Speech[g_leng].CzasGMS,0,3,99,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003A   82B0               SUB      SP,SP,#+8
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   0090               STR      R0,[SP, #+0]
   \   00000040   7F21               MOVS     R1,#+127
   \   00000042   0120               MOVS     R0,#+1
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   2121               MOVS     R1,#+33
   \   00000048   0A20               MOVS     R0,#+10
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   6323               MOVS     R3,#+99
   \   0000004E   0322               MOVS     R2,#+3
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   AD48               LDR      R0,??SetupTime_Paint_0+0x4  ;; g_leng
   \   00000054   0068               LDR      R0,[R0, #+0]
   \   00000056   AD4C               LDR      R4,??SetupTime_Paint_0+0x8  ;; 0xa7d
   \   00000058   6043               MULS     R0,R4,R0
   \   0000005A   AD4C               LDR      R4,??SetupTime_Paint_0+0xC  ;; Speech
   \   0000005C   2018               ADDS     R0,R4,R0
   \   0000005E   8730               ADDS     R0,R0,#+135
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   7557                    
   7558                    
   7559                 char time_char[3];
   7560                  
   7561                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000066   0222               MOVS     R2,#+2
   \   00000068   6946               MOV      R1,SP
   \   0000006A   AA48               LDR      R0,??SetupTime_Paint_0+0x10  ;; DateTime + 3
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   ........           BL       CharToStr
   7562                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000072   82B0               SUB      SP,SP,#+8
   \   00000074   A848               LDR      R0,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   00000076   0078               LDRB     R0,[R0, #+0]
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   0140               ANDS     R1,R1,R0
   \   0000007C   0091               STR      R1,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0B21               MOVS     R1,#+11
   \   00000086   0220               MOVS     R0,#+2
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   5723               MOVS     R3,#+87
   \   0000008C   0C22               MOVS     R2,#+12
   \   0000008E   0221               MOVS     R1,#+2
   \   00000090   06A8               ADD      R0,SP,#+24
   \   00000092   ........           BL       Label
   \   00000096   06B0               ADD      SP,SP,#+24
   7563                 CharToStr(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000098   0222               MOVS     R2,#+2
   \   0000009A   6946               MOV      R1,SP
   \   0000009C   9F48               LDR      R0,??SetupTime_Paint_0+0x18  ;; DateTime + 4
   \   0000009E   0078               LDRB     R0,[R0, #+0]
   \   000000A0   ........           BL       CharToStr
   7564                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   9C48               LDR      R0,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   000000A8   0078               LDRB     R0,[R0, #+0]
   \   000000AA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AC   000E               LSRS     R0,R0,#+24
   \   000000AE   4008               LSRS     R0,R0,#+1
   \   000000B0   0121               MOVS     R1,#+1
   \   000000B2   0140               ANDS     R1,R1,R0
   \   000000B4   0091               STR      R1,[SP, #+0]
   \   000000B6   7F21               MOVS     R1,#+127
   \   000000B8   0120               MOVS     R0,#+1
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   0B21               MOVS     R1,#+11
   \   000000BE   0220               MOVS     R0,#+2
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   5723               MOVS     R3,#+87
   \   000000C4   1B22               MOVS     R2,#+27
   \   000000C6   0221               MOVS     R1,#+2
   \   000000C8   06A8               ADD      R0,SP,#+24
   \   000000CA   ........           BL       Label
   \   000000CE   06B0               ADD      SP,SP,#+24
   7565                 CharToStr(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   000000D0   0222               MOVS     R2,#+2
   \   000000D2   6946               MOV      R1,SP
   \   000000D4   9248               LDR      R0,??SetupTime_Paint_0+0x1C  ;; DateTime + 5
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   ........           BL       CharToStr
   7566                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   8E48               LDR      R0,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   000000E0   0078               LDRB     R0,[R0, #+0]
   \   000000E2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E4   000E               LSRS     R0,R0,#+24
   \   000000E6   8008               LSRS     R0,R0,#+2
   \   000000E8   0121               MOVS     R1,#+1
   \   000000EA   0140               ANDS     R1,R1,R0
   \   000000EC   0091               STR      R1,[SP, #+0]
   \   000000EE   7F21               MOVS     R1,#+127
   \   000000F0   0120               MOVS     R0,#+1
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   0B21               MOVS     R1,#+11
   \   000000F6   0220               MOVS     R0,#+2
   \   000000F8   03B4               PUSH     {R0,R1}
   \   000000FA   5723               MOVS     R3,#+87
   \   000000FC   2A22               MOVS     R2,#+42
   \   000000FE   0221               MOVS     R1,#+2
   \   00000100   06A8               ADD      R0,SP,#+24
   \   00000102   ........           BL       Label
   \   00000106   06B0               ADD      SP,SP,#+24
   7567                  
   7568                 
   7569                 Label(Speech[g_leng].DataDMR,0,3,74,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000108   82B0               SUB      SP,SP,#+8
   \   0000010A   0020               MOVS     R0,#+0
   \   0000010C   0090               STR      R0,[SP, #+0]
   \   0000010E   7F21               MOVS     R1,#+127
   \   00000110   0120               MOVS     R0,#+1
   \   00000112   03B4               PUSH     {R0,R1}
   \   00000114   2121               MOVS     R1,#+33
   \   00000116   0A20               MOVS     R0,#+10
   \   00000118   03B4               PUSH     {R0,R1}
   \   0000011A   4A23               MOVS     R3,#+74
   \   0000011C   0322               MOVS     R2,#+3
   \   0000011E   0021               MOVS     R1,#+0
   \   00000120   7948               LDR      R0,??SetupTime_Paint_0+0x4  ;; g_leng
   \   00000122   0068               LDR      R0,[R0, #+0]
   \   00000124   794C               LDR      R4,??SetupTime_Paint_0+0x8  ;; 0xa7d
   \   00000126   6043               MULS     R0,R4,R0
   \   00000128   794C               LDR      R4,??SetupTime_Paint_0+0xC  ;; Speech
   \   0000012A   2018               ADDS     R0,R4,R0
   \   0000012C   A530               ADDS     R0,R0,#+165
   \   0000012E   ........           BL       Label
   \   00000132   06B0               ADD      SP,SP,#+24
   7570                
   7571                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   00000134   6946               MOV      R1,SP
   \   00000136   7B48               LDR      R0,??SetupTime_Paint_0+0x20  ;; DateTime + 2
   \   00000138   0078               LDRB     R0,[R0, #+0]
   \   0000013A   ........           BL       CharToStrData
   7572                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   7548               LDR      R0,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   00000142   0078               LDRB     R0,[R0, #+0]
   \   00000144   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000146   000E               LSRS     R0,R0,#+24
   \   00000148   C008               LSRS     R0,R0,#+3
   \   0000014A   0121               MOVS     R1,#+1
   \   0000014C   0140               ANDS     R1,R1,R0
   \   0000014E   0091               STR      R1,[SP, #+0]
   \   00000150   7F21               MOVS     R1,#+127
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   03B4               PUSH     {R0,R1}
   \   00000156   0A21               MOVS     R1,#+10
   \   00000158   0220               MOVS     R0,#+2
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   3E23               MOVS     R3,#+62
   \   0000015E   0C22               MOVS     R2,#+12
   \   00000160   0221               MOVS     R1,#+2
   \   00000162   06A8               ADD      R0,SP,#+24
   \   00000164   ........           BL       Label
   \   00000168   06B0               ADD      SP,SP,#+24
   7573                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   0000016A   6946               MOV      R1,SP
   \   0000016C   6E48               LDR      R0,??SetupTime_Paint_0+0x24  ;; DateTime + 1
   \   0000016E   0078               LDRB     R0,[R0, #+0]
   \   00000170   ........           BL       CharToStrData
   7574                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000174   82B0               SUB      SP,SP,#+8
   \   00000176   6848               LDR      R0,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   00000178   0078               LDRB     R0,[R0, #+0]
   \   0000017A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000017C   000E               LSRS     R0,R0,#+24
   \   0000017E   0009               LSRS     R0,R0,#+4
   \   00000180   0121               MOVS     R1,#+1
   \   00000182   0140               ANDS     R1,R1,R0
   \   00000184   0091               STR      R1,[SP, #+0]
   \   00000186   7F21               MOVS     R1,#+127
   \   00000188   0120               MOVS     R0,#+1
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   0A21               MOVS     R1,#+10
   \   0000018E   0220               MOVS     R0,#+2
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   3E23               MOVS     R3,#+62
   \   00000194   1B22               MOVS     R2,#+27
   \   00000196   0221               MOVS     R1,#+2
   \   00000198   06A8               ADD      R0,SP,#+24
   \   0000019A   ........           BL       Label
   \   0000019E   06B0               ADD      SP,SP,#+24
   7575                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   000001A0   6946               MOV      R1,SP
   \   000001A2   6248               LDR      R0,??SetupTime_Paint_0+0x28  ;; DateTime
   \   000001A4   0078               LDRB     R0,[R0, #+0]
   \   000001A6   ........           BL       CharToStrData
   7576                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001AA   82B0               SUB      SP,SP,#+8
   \   000001AC   5A48               LDR      R0,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   000001AE   0078               LDRB     R0,[R0, #+0]
   \   000001B0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001B2   000E               LSRS     R0,R0,#+24
   \   000001B4   4009               LSRS     R0,R0,#+5
   \   000001B6   0121               MOVS     R1,#+1
   \   000001B8   0140               ANDS     R1,R1,R0
   \   000001BA   0091               STR      R1,[SP, #+0]
   \   000001BC   7F21               MOVS     R1,#+127
   \   000001BE   0120               MOVS     R0,#+1
   \   000001C0   03B4               PUSH     {R0,R1}
   \   000001C2   0A21               MOVS     R1,#+10
   \   000001C4   0220               MOVS     R0,#+2
   \   000001C6   03B4               PUSH     {R0,R1}
   \   000001C8   3E23               MOVS     R3,#+62
   \   000001CA   2A22               MOVS     R2,#+42
   \   000001CC   0221               MOVS     R1,#+2
   \   000001CE   06A8               ADD      R0,SP,#+24
   \   000001D0   ........           BL       Label
   \   000001D4   06B0               ADD      SP,SP,#+24
   7577                  
   7578              
   7579                 
   7580                 H_line(10,97,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001D6   0123               MOVS     R3,#+1
   \   000001D8   2E22               MOVS     R2,#+46
   \   000001DA   6121               MOVS     R1,#+97
   \   000001DC   0A20               MOVS     R0,#+10
   \   000001DE   ........           BL       H_line
   7581                 H_line(10,85,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001E2   0123               MOVS     R3,#+1
   \   000001E4   2E22               MOVS     R2,#+46
   \   000001E6   5521               MOVS     R1,#+85
   \   000001E8   0A20               MOVS     R0,#+10
   \   000001EA   ........           BL       H_line
   7582                 V_line(10,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   000001EE   0123               MOVS     R3,#+1
   \   000001F0   0B22               MOVS     R2,#+11
   \   000001F2   5621               MOVS     R1,#+86
   \   000001F4   0A20               MOVS     R0,#+10
   \   000001F6   ........           BL       V_line
   7583                 Label(":",0,25,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001FA   82B0               SUB      SP,SP,#+8
   \   000001FC   0020               MOVS     R0,#+0
   \   000001FE   0090               STR      R0,[SP, #+0]
   \   00000200   7F21               MOVS     R1,#+127
   \   00000202   0120               MOVS     R0,#+1
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   0121               MOVS     R1,#+1
   \   00000208   0120               MOVS     R0,#+1
   \   0000020A   03B4               PUSH     {R0,R1}
   \   0000020C   5823               MOVS     R3,#+88
   \   0000020E   1922               MOVS     R2,#+25
   \   00000210   0021               MOVS     R1,#+0
   \   00000212   47A0               ADR      R0,??SetupTime_Paint_0+0x2C  ;; 0x3A, 0x00, 0x00, 0x00
   \   00000214   ........           BL       Label
   \   00000218   06B0               ADD      SP,SP,#+24
   7584                 Label(":",0,40,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000021A   82B0               SUB      SP,SP,#+8
   \   0000021C   0020               MOVS     R0,#+0
   \   0000021E   0090               STR      R0,[SP, #+0]
   \   00000220   7F21               MOVS     R1,#+127
   \   00000222   0120               MOVS     R0,#+1
   \   00000224   03B4               PUSH     {R0,R1}
   \   00000226   0121               MOVS     R1,#+1
   \   00000228   0120               MOVS     R0,#+1
   \   0000022A   03B4               PUSH     {R0,R1}
   \   0000022C   5823               MOVS     R3,#+88
   \   0000022E   2822               MOVS     R2,#+40
   \   00000230   0021               MOVS     R1,#+0
   \   00000232   3FA0               ADR      R0,??SetupTime_Paint_0+0x2C  ;; 0x3A, 0x00, 0x00, 0x00
   \   00000234   ........           BL       Label
   \   00000238   06B0               ADD      SP,SP,#+24
   7585                   
   7586                 //V_line(25,86,11,1); // (char X, int Y, char lenght, char typ) 
   7587                 //V_line(40,86,11,1); // (char X, int Y, char lenght, char typ) 
   7588                 V_line(55,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   0000023A   0123               MOVS     R3,#+1
   \   0000023C   0B22               MOVS     R2,#+11
   \   0000023E   5621               MOVS     R1,#+86
   \   00000240   3720               MOVS     R0,#+55
   \   00000242   ........           BL       V_line
   7589                 
   7590                 H_line(10,72,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000246   0123               MOVS     R3,#+1
   \   00000248   2E22               MOVS     R2,#+46
   \   0000024A   4821               MOVS     R1,#+72
   \   0000024C   0A20               MOVS     R0,#+10
   \   0000024E   ........           BL       H_line
   7591                 H_line(10,60,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000252   0123               MOVS     R3,#+1
   \   00000254   2E22               MOVS     R2,#+46
   \   00000256   3C21               MOVS     R1,#+60
   \   00000258   0A20               MOVS     R0,#+10
   \   0000025A   ........           BL       H_line
   7592                 V_line(10,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   0000025E   0123               MOVS     R3,#+1
   \   00000260   0B22               MOVS     R2,#+11
   \   00000262   3D21               MOVS     R1,#+61
   \   00000264   0A20               MOVS     R0,#+10
   \   00000266   ........           BL       V_line
   7593                 H_line(23,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   0000026A   0123               MOVS     R3,#+1
   \   0000026C   0422               MOVS     R2,#+4
   \   0000026E   4221               MOVS     R1,#+66
   \   00000270   1720               MOVS     R0,#+23
   \   00000272   ........           BL       H_line
   7594                 H_line(38,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   00000276   0123               MOVS     R3,#+1
   \   00000278   0422               MOVS     R2,#+4
   \   0000027A   4221               MOVS     R1,#+66
   \   0000027C   2620               MOVS     R0,#+38
   \   0000027E   ........           BL       H_line
   7595                 //V_line(25,61,11,1); // (char X, int Y, char lenght, char typ) 
   7596                 //V_line(40,61,11,1); // (char X, int Y, char lenght, char typ) 
   7597                 V_line(55,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000282   0123               MOVS     R3,#+1
   \   00000284   0B22               MOVS     R2,#+11
   \   00000286   3D21               MOVS     R1,#+61
   \   00000288   3720               MOVS     R0,#+55
   \   0000028A   ........           BL       V_line
   7598                 
   7599                
   7600                // Button("> ",42,5,18,18);
   7601                // Button("< ",3,5,18,18);
   7602          
   7603                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000028E   82B0               SUB      SP,SP,#+8
   \   00000290   0020               MOVS     R0,#+0
   \   00000292   0090               STR      R0,[SP, #+0]
   \   00000294   6921               MOVS     R1,#+105
   \   00000296   0020               MOVS     R0,#+0
   \   00000298   03B4               PUSH     {R0,R1}
   \   0000029A   3A21               MOVS     R1,#+58
   \   0000029C   0C20               MOVS     R0,#+12
   \   0000029E   03B4               PUSH     {R0,R1}
   \   000002A0   0923               MOVS     R3,#+9
   \   000002A2   0222               MOVS     R2,#+2
   \   000002A4   0221               MOVS     R1,#+2
   \   000002A6   2348               LDR      R0,??SetupTime_Paint_0+0x30  ;; DateTime + 6
   \   000002A8   0078               LDRB     R0,[R0, #+0]
   \   000002AA   0C24               MOVS     R4,#+12
   \   000002AC   6043               MULS     R0,R4,R0
   \   000002AE   164C               LDR      R4,??SetupTime_Paint_0+0x4  ;; g_leng
   \   000002B0   2468               LDR      R4,[R4, #+0]
   \   000002B2   6025               MOVS     R5,#+96
   \   000002B4   6C43               MULS     R4,R5,R4
   \   000002B6   204D               LDR      R5,??SetupTime_Paint_0+0x34  ;; DeyOfWeekLongStr
   \   000002B8   2C19               ADDS     R4,R5,R4
   \   000002BA   2018               ADDS     R0,R4,R0
   \   000002BC   ........           BL       Label
   \   000002C0   06B0               ADD      SP,SP,#+24
   7604                        
   7605                 
   7606                 
   7607                 char LabelButt[2];
   7608                 LabelButt[1]=0;
   \   000002C2   01A8               ADD      R0,SP,#+4
   \   000002C4   0021               MOVS     R1,#+0
   \   000002C6   4170               STRB     R1,[R0, #+1]
   7609                 LabelButt[0]=30;
   \   000002C8   6846               MOV      R0,SP
   \   000002CA   1E21               MOVS     R1,#+30
   \   000002CC   0171               STRB     R1,[R0, #+4]
   7610                 Button(LabelButt,33,30,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000002CE   82B0               SUB      SP,SP,#+8
   \   000002D0   1920               MOVS     R0,#+25
   \   000002D2   0090               STR      R0,[SP, #+0]
   \   000002D4   1323               MOVS     R3,#+19
   \   000002D6   1E22               MOVS     R2,#+30
   \   000002D8   2121               MOVS     R1,#+33
   \   000002DA   03A8               ADD      R0,SP,#+12
   \   000002DC   ........           BL       Button
   \   000002E0   02B0               ADD      SP,SP,#+8
   7611                 LabelButt[0]=31;
   \   000002E2   6846               MOV      R0,SP
   \   000002E4   1F21               MOVS     R1,#+31
   \   000002E6   0171               STRB     R1,[R0, #+4]
   7612                 Button(LabelButt,12,30,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000002E8   82B0               SUB      SP,SP,#+8
   \   000002EA   1920               MOVS     R0,#+25
   \   000002EC   0090               STR      R0,[SP, #+0]
   \   000002EE   1323               MOVS     R3,#+19
   \   000002F0   1E22               MOVS     R2,#+30
   \   000002F2   0C21               MOVS     R1,#+12
   \   000002F4   03A8               ADD      R0,SP,#+12
   \   000002F6   ........           BL       Button
   \   000002FA   02B0               ADD      SP,SP,#+8
   7613                 
   7614                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   7615              }//________________________________________________________________________
   \   000002FC   03B0               ADD      SP,SP,#+12
   \   000002FE   30BC               POP      {R4,R5}
   \   00000300   01BC               POP      {R0}
   \   00000302   0047               BX       R0               ;; return
   \                     ??SetupTime_Paint_0:
   \   00000304   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000308   ........           DC32     g_leng
   \   0000030C   7D0A0000           DC32     0xa7d
   \   00000310   ........           DC32     Speech
   \   00000314   ........           DC32     DateTime + 3
   \   00000318   ........           DC32     SetupTimeCarPoz
   \   0000031C   ........           DC32     DateTime + 4
   \   00000320   ........           DC32     DateTime + 5
   \   00000324   ........           DC32     DateTime + 2
   \   00000328   ........           DC32     DateTime + 1
   \   0000032C   ........           DC32     DateTime
   \   00000330   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   \   00000334   ........           DC32     DateTime + 6
   \   00000338   ........           DC32     DeyOfWeekLongStr
   7616          

   \                                 In section Debug.txt, align 4, keep-with-next
   7617              void SetupTime_Refresh(void)
   7618              {  
   \                     SetupTime_Refresh:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7619          
   7620                 char time_char[3];
   7621                  
   7622                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000002   0222               MOVS     R2,#+2
   \   00000004   6946               MOV      R1,SP
   \   00000006   5F48               LDR      R0,??SetupTime_Refresh_0  ;; DateTime + 3
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   ........           BL       CharToStr
   7623                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000000E   82B0               SUB      SP,SP,#+8
   \   00000010   5D48               LDR      R0,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   00000012   0078               LDRB     R0,[R0, #+0]
   \   00000014   0121               MOVS     R1,#+1
   \   00000016   0140               ANDS     R1,R1,R0
   \   00000018   0091               STR      R1,[SP, #+0]
   \   0000001A   7F21               MOVS     R1,#+127
   \   0000001C   0120               MOVS     R0,#+1
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0B21               MOVS     R1,#+11
   \   00000022   0220               MOVS     R0,#+2
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   5723               MOVS     R3,#+87
   \   00000028   0C22               MOVS     R2,#+12
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   06A8               ADD      R0,SP,#+24
   \   0000002E   ........           BL       Label
   \   00000032   06B0               ADD      SP,SP,#+24
   7624                 CharToStr2(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   00000034   0222               MOVS     R2,#+2
   \   00000036   6946               MOV      R1,SP
   \   00000038   5448               LDR      R0,??SetupTime_Refresh_0+0x8  ;; DateTime + 4
   \   0000003A   0078               LDRB     R0,[R0, #+0]
   \   0000003C   ........           BL       CharToStr2
   7625                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   5148               LDR      R0,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   00000044   0078               LDRB     R0,[R0, #+0]
   \   00000046   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   4008               LSRS     R0,R0,#+1
   \   0000004C   0121               MOVS     R1,#+1
   \   0000004E   0140               ANDS     R1,R1,R0
   \   00000050   0091               STR      R1,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   0120               MOVS     R0,#+1
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0B21               MOVS     R1,#+11
   \   0000005A   0220               MOVS     R0,#+2
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   5723               MOVS     R3,#+87
   \   00000060   1B22               MOVS     R2,#+27
   \   00000062   0221               MOVS     R1,#+2
   \   00000064   06A8               ADD      R0,SP,#+24
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   7626                 CharToStr2(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   0000006C   0222               MOVS     R2,#+2
   \   0000006E   6946               MOV      R1,SP
   \   00000070   4748               LDR      R0,??SetupTime_Refresh_0+0xC  ;; DateTime + 5
   \   00000072   0078               LDRB     R0,[R0, #+0]
   \   00000074   ........           BL       CharToStr2
   7627                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   4348               LDR      R0,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   0000007C   0078               LDRB     R0,[R0, #+0]
   \   0000007E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000080   000E               LSRS     R0,R0,#+24
   \   00000082   8008               LSRS     R0,R0,#+2
   \   00000084   0121               MOVS     R1,#+1
   \   00000086   0140               ANDS     R1,R1,R0
   \   00000088   0091               STR      R1,[SP, #+0]
   \   0000008A   7F21               MOVS     R1,#+127
   \   0000008C   0120               MOVS     R0,#+1
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   0B21               MOVS     R1,#+11
   \   00000092   0220               MOVS     R0,#+2
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   5723               MOVS     R3,#+87
   \   00000098   2A22               MOVS     R2,#+42
   \   0000009A   0221               MOVS     R1,#+2
   \   0000009C   06A8               ADD      R0,SP,#+24
   \   0000009E   ........           BL       Label
   \   000000A2   06B0               ADD      SP,SP,#+24
   7628                  
   7629          
   7630                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   000000A4   6946               MOV      R1,SP
   \   000000A6   3B48               LDR      R0,??SetupTime_Refresh_0+0x10  ;; DateTime + 2
   \   000000A8   0078               LDRB     R0,[R0, #+0]
   \   000000AA   ........           BL       CharToStrData
   7631                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   3548               LDR      R0,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   000000B2   0078               LDRB     R0,[R0, #+0]
   \   000000B4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B6   000E               LSRS     R0,R0,#+24
   \   000000B8   C008               LSRS     R0,R0,#+3
   \   000000BA   0121               MOVS     R1,#+1
   \   000000BC   0140               ANDS     R1,R1,R0
   \   000000BE   0091               STR      R1,[SP, #+0]
   \   000000C0   7F21               MOVS     R1,#+127
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   03B4               PUSH     {R0,R1}
   \   000000C6   0A21               MOVS     R1,#+10
   \   000000C8   0220               MOVS     R0,#+2
   \   000000CA   03B4               PUSH     {R0,R1}
   \   000000CC   3E23               MOVS     R3,#+62
   \   000000CE   0C22               MOVS     R2,#+12
   \   000000D0   0221               MOVS     R1,#+2
   \   000000D2   06A8               ADD      R0,SP,#+24
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
   7632                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   000000DA   6946               MOV      R1,SP
   \   000000DC   2E48               LDR      R0,??SetupTime_Refresh_0+0x14  ;; DateTime + 1
   \   000000DE   0078               LDRB     R0,[R0, #+0]
   \   000000E0   ........           BL       CharToStrData
   7633                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   2848               LDR      R0,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   000000E8   0078               LDRB     R0,[R0, #+0]
   \   000000EA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000EC   000E               LSRS     R0,R0,#+24
   \   000000EE   0009               LSRS     R0,R0,#+4
   \   000000F0   0121               MOVS     R1,#+1
   \   000000F2   0140               ANDS     R1,R1,R0
   \   000000F4   0091               STR      R1,[SP, #+0]
   \   000000F6   7F21               MOVS     R1,#+127
   \   000000F8   0120               MOVS     R0,#+1
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   0A21               MOVS     R1,#+10
   \   000000FE   0220               MOVS     R0,#+2
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   3E23               MOVS     R3,#+62
   \   00000104   1B22               MOVS     R2,#+27
   \   00000106   0221               MOVS     R1,#+2
   \   00000108   06A8               ADD      R0,SP,#+24
   \   0000010A   ........           BL       Label
   \   0000010E   06B0               ADD      SP,SP,#+24
   7634                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   00000110   6946               MOV      R1,SP
   \   00000112   2248               LDR      R0,??SetupTime_Refresh_0+0x18  ;; DateTime
   \   00000114   0078               LDRB     R0,[R0, #+0]
   \   00000116   ........           BL       CharToStrData
   7635                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   1A48               LDR      R0,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   0000011E   0078               LDRB     R0,[R0, #+0]
   \   00000120   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000122   000E               LSRS     R0,R0,#+24
   \   00000124   4009               LSRS     R0,R0,#+5
   \   00000126   0121               MOVS     R1,#+1
   \   00000128   0140               ANDS     R1,R1,R0
   \   0000012A   0091               STR      R1,[SP, #+0]
   \   0000012C   7F21               MOVS     R1,#+127
   \   0000012E   0120               MOVS     R0,#+1
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   0A21               MOVS     R1,#+10
   \   00000134   0220               MOVS     R0,#+2
   \   00000136   03B4               PUSH     {R0,R1}
   \   00000138   3E23               MOVS     R3,#+62
   \   0000013A   2A22               MOVS     R2,#+42
   \   0000013C   0221               MOVS     R1,#+2
   \   0000013E   06A8               ADD      R0,SP,#+24
   \   00000140   ........           BL       Label
   \   00000144   06B0               ADD      SP,SP,#+24
   7636                  
   7637                 
   7638                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   0020               MOVS     R0,#+0
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   6921               MOVS     R1,#+105
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   3A21               MOVS     R1,#+58
   \   00000154   0C20               MOVS     R0,#+12
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   0923               MOVS     R3,#+9
   \   0000015A   0222               MOVS     R2,#+2
   \   0000015C   0221               MOVS     R1,#+2
   \   0000015E   1048               LDR      R0,??SetupTime_Refresh_0+0x1C  ;; DateTime + 6
   \   00000160   0078               LDRB     R0,[R0, #+0]
   \   00000162   0C24               MOVS     R4,#+12
   \   00000164   6043               MULS     R0,R4,R0
   \   00000166   0F4C               LDR      R4,??SetupTime_Refresh_0+0x20  ;; g_leng
   \   00000168   2468               LDR      R4,[R4, #+0]
   \   0000016A   6025               MOVS     R5,#+96
   \   0000016C   6C43               MULS     R4,R5,R4
   \   0000016E   0E4D               LDR      R5,??SetupTime_Refresh_0+0x24  ;; DeyOfWeekLongStr
   \   00000170   2C19               ADDS     R4,R5,R4
   \   00000172   2018               ADDS     R0,R4,R0
   \   00000174   ........           BL       Label
   \   00000178   06B0               ADD      SP,SP,#+24
   7639                        
   7640              }//________________________________________________________________________
   \   0000017A   01B0               ADD      SP,SP,#+4
   \   0000017C   30BC               POP      {R4,R5}
   \   0000017E   01BC               POP      {R0}
   \   00000180   0047               BX       R0               ;; return
   \   00000182   C046               Nop      
   \                     ??SetupTime_Refresh_0:
   \   00000184   ........           DC32     DateTime + 3
   \   00000188   ........           DC32     SetupTimeCarPoz
   \   0000018C   ........           DC32     DateTime + 4
   \   00000190   ........           DC32     DateTime + 5
   \   00000194   ........           DC32     DateTime + 2
   \   00000198   ........           DC32     DateTime + 1
   \   0000019C   ........           DC32     DateTime
   \   000001A0   ........           DC32     DateTime + 6
   \   000001A4   ........           DC32     g_leng
   \   000001A8   ........           DC32     DeyOfWeekLongStr
   7641          
   7642          

   \                                 In section Debug.txt, align 4, keep-with-next
   7643          int przestepny(int rok) {
   \                     przestepny:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   7644          	return ((rok % 4 == 0  &&  rok % 100 != 0) || rok % 400 == 0);
   \   00000004   2000               MOVS     R0,R4
   \   00000006   0421               MOVS     R1,#+4
   \   00000008   ........           BL       __aeabi_idivmod
   \   0000000C   0029               CMP      R1,#+0
   \   0000000E   05D1               BNE      ??przestepny_0
   \   00000010   2000               MOVS     R0,R4
   \   00000012   6421               MOVS     R1,#+100
   \   00000014   ........           BL       __aeabi_idivmod
   \   00000018   0029               CMP      R1,#+0
   \   0000001A   09D1               BNE      ??przestepny_1
   \                     ??przestepny_0:
   \   0000001C   2000               MOVS     R0,R4
   \   0000001E   C821               MOVS     R1,#+200
   \   00000020   4900               LSLS     R1,R1,#+1        ;; #+400
   \   00000022   ........           BL       __aeabi_idivmod
   \   00000026   0800               MOVS     R0,R1
   \   00000028   401E               SUBS     R0,R0,#+1
   \   0000002A   8041               SBCS     R0,R0,R0
   \   0000002C   C00F               LSRS     R0,R0,#+31
   \   0000002E   00E0               B        ??przestepny_2
   \                     ??przestepny_1:
   \   00000030   0120               MOVS     R0,#+1
   \                     ??przestepny_2:
   \   00000032   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   10BC               POP      {R4}
   \   00000038   02BC               POP      {R1}
   \   0000003A   0847               BX       R1               ;; return
   7645          }
   7646          
   7647          

   \                                 In section Debug.txt, align 4, keep-with-next
   7648          int dzienTygodnia(int dzien, int miesiac, int rok) 
   7649          {
   \                     dzienTygodnia:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8CB0               SUB      SP,SP,#+48
   \   00000004   0500               MOVS     R5,R0
   \   00000006   0E00               MOVS     R6,R1
   \   00000008   1400               MOVS     R4,R2
   7650          	int dr, yy, c, g, wynik;
   7651          	int liczbaDni[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   1B49               LDR      R1,??dzienTygodnia_0  ;; `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   \   0000000E   3022               MOVS     R2,#+48
   \   00000010   ........           BL       __aeabi_memcpy4
   7652          	dr = dzien + liczbaDni[miesiac-1];
   \   00000014   0420               MOVS     R0,#+4
   \   00000016   7043               MULS     R0,R6,R0
   \   00000018   6946               MOV      R1,SP
   \   0000001A   0818               ADDS     R0,R1,R0
   \   0000001C   001F               SUBS     R0,R0,#+4
   \   0000001E   0068               LDR      R0,[R0, #+0]
   \   00000020   2D18               ADDS     R5,R5,R0
   7653          	if ((miesiac > 2) && (przestepny(rok) == 1))
   \   00000022   032E               CMP      R6,#+3
   \   00000024   05DB               BLT      ??dzienTygodnia_1
   \   00000026   2000               MOVS     R0,R4
   \   00000028   ........           BL       przestepny
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   00D1               BNE      ??dzienTygodnia_1
   7654          		dr++;
   \   00000030   6D1C               ADDS     R5,R5,#+1
   7655          	yy = (rok - 1) % 100;
   \                     ??dzienTygodnia_1:
   \   00000032   601E               SUBS     R0,R4,#+1
   \   00000034   6421               MOVS     R1,#+100
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   0E00               MOVS     R6,R1
   7656          	c = (rok - 1) - yy;
   \   0000003C   641E               SUBS     R4,R4,#+1
   \   0000003E   A41B               SUBS     R4,R4,R6
   7657          	g = yy + (yy / 4);
   \   00000040   3000               MOVS     R0,R6
   \   00000042   0421               MOVS     R1,#+4
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   3618               ADDS     R6,R6,R0
   7658          	wynik = (((((c / 100) % 4) * 5) + g) % 7);
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   6421               MOVS     R1,#+100
   \   0000004E   ........           BL       __aeabi_idivmod
   \   00000052   0421               MOVS     R1,#+4
   \   00000054   ........           BL       __aeabi_idivmod
   \   00000058   0520               MOVS     R0,#+5
   \   0000005A   4143               MULS     R1,R0,R1
   \   0000005C   8819               ADDS     R0,R1,R6
   \   0000005E   0721               MOVS     R1,#+7
   \   00000060   ........           BL       __aeabi_idivmod
   \   00000064   0800               MOVS     R0,R1
   7659          	wynik += dr - 1;
   \   00000066   6D1E               SUBS     R5,R5,#+1
   \   00000068   4019               ADDS     R0,R0,R5
   7660          	wynik %= 7;
   \   0000006A   0721               MOVS     R1,#+7
   \   0000006C   ........           BL       __aeabi_idivmod
   \   00000070   0800               MOVS     R0,R1
   7661          	return wynik+1;
   \   00000072   401C               ADDS     R0,R0,#+1
   \   00000074   0CB0               ADD      SP,SP,#+48
   \   00000076   70BC               POP      {R4-R6}
   \   00000078   02BC               POP      {R1}
   \   0000007A   0847               BX       R1               ;; return
   \                     ??dzienTygodnia_0:
   \   0000007C   ........           DC32     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   7662          }
   7663          
   7664          
   7665          
   7666              //*-----------------------------------------------------------------------------

   \                                 In section .bss, align 1
   7667              char SleepModTime=0;
   \                     SleepModTime:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   7668              void SetupTime_Event(void)
   7669              {
   \                     SetupTime_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   7670                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0);  //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   BB48               LDR      R0,??SetupTime_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   BB48               LDR      R0,??SetupTime_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   BA48               LDR      R0,??SetupTime_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   BA48               LDR      R0,??SetupTime_Event_0+0xC  ;; X_up
   \   00000024   0024               MOVS     R4,#+0
   \   00000026   005F               LDRSH    R0,[R0, R4]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   \   0000002E   0400               MOVS     R4,R0
   7671                  
   7672                  char  SetupPozTmp=0;
   \   00000030   0020               MOVS     R0,#+0
   7673                  if ((X_up>10) && (X_up<56) &&  (Y_up>85) && (Y_up<97))  
   \   00000032   B649               LDR      R1,??SetupTime_Event_0+0xC  ;; X_up
   \   00000034   0022               MOVS     R2,#+0
   \   00000036   895E               LDRSH    R1,[R1, R2]
   \   00000038   0B29               CMP      R1,#+11
   \   0000003A   2EDB               BLT      ??SetupTime_Event_1
   \   0000003C   B348               LDR      R0,??SetupTime_Event_0+0xC  ;; X_up
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   405E               LDRSH    R0,[R0, R1]
   \   00000042   3828               CMP      R0,#+56
   \   00000044   29DA               BGE      ??SetupTime_Event_1
   \   00000046   B048               LDR      R0,??SetupTime_Event_0+0x8  ;; Y_up
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   405E               LDRSH    R0,[R0, R1]
   \   0000004C   5628               CMP      R0,#+86
   \   0000004E   24DB               BLT      ??SetupTime_Event_1
   \   00000050   AD48               LDR      R0,??SetupTime_Event_0+0x8  ;; Y_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   6128               CMP      R0,#+97
   \   00000058   1FDA               BGE      ??SetupTime_Event_1
   7674                  {
   7675                     SetupPozTmp = (X_up-10)/15;
   \   0000005A   AC48               LDR      R0,??SetupTime_Event_0+0xC  ;; X_up
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   405E               LDRSH    R0,[R0, R1]
   \   00000060   0A38               SUBS     R0,R0,#+10
   \   00000062   0F21               MOVS     R1,#+15
   \   00000064   ........           BL       __aeabi_idivmod
   7676                     SetupTimeCarPoz=0;
   \   00000068   A949               LDR      R1,??SetupTime_Event_0+0x10  ;; SetupTimeCarPoz
   \   0000006A   0022               MOVS     R2,#+0
   \   0000006C   0A70               STRB     R2,[R1, #+0]
   7677                     SetupTimeCarPoz=1<<SetupPozTmp;
   \   0000006E   A849               LDR      R1,??SetupTime_Event_0+0x10  ;; SetupTimeCarPoz
   \   00000070   0122               MOVS     R2,#+1
   \   00000072   8240               LSLS     R2,R2,R0
   \   00000074   0A70               STRB     R2,[R1, #+0]
   7678                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000076   A748               LDR      R0,??SetupTime_Event_0+0x14  ;; 0x13d7e9
   \   00000078   0078               LDRB     R0,[R0, #+0]
   \   0000007A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000007C   000E               LSRS     R0,R0,#+24
   \   0000007E   0028               CMP      R0,#+0
   \   00000080   0BD1               BNE      ??SetupTime_Event_1
   \   00000082   A548               LDR      R0,??SetupTime_Event_0+0x18  ;; 0xfffff430
   \   00000084   8021               MOVS     R1,#+128
   \   00000086   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000088   0160               STR      R1,[R0, #+0]
   \   0000008A   A44A               LDR      R2,??SetupTime_Event_0+0x1C  ;; ButtonBipCounter
   \   0000008C   A448               LDR      R0,??SetupTime_Event_0+0x20  ;; g_counter
   \   0000008E   03C8               LDM      R0!,{R0,R1}
   \   00000090   0023               MOVS     R3,#+0
   \   00000092   0830               ADDS     R0,R0,#+8
   \   00000094   5941               ADCS     R1,R1,R3
   \   00000096   03C2               STM      R2!,{R0,R1}
   \   00000098   083A               SUBS     R2,R2,#+8
   7679                  }
   7680                  if ((X_up>10) && (X_up<56) &&  (Y_up>60) && (Y_up<72))  
   \                     ??SetupTime_Event_1:
   \   0000009A   9C48               LDR      R0,??SetupTime_Event_0+0xC  ;; X_up
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   405E               LDRSH    R0,[R0, R1]
   \   000000A0   0B28               CMP      R0,#+11
   \   000000A2   2FDB               BLT      ??SetupTime_Event_2
   \   000000A4   9948               LDR      R0,??SetupTime_Event_0+0xC  ;; X_up
   \   000000A6   0021               MOVS     R1,#+0
   \   000000A8   405E               LDRSH    R0,[R0, R1]
   \   000000AA   3828               CMP      R0,#+56
   \   000000AC   2ADA               BGE      ??SetupTime_Event_2
   \   000000AE   9648               LDR      R0,??SetupTime_Event_0+0x8  ;; Y_up
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   405E               LDRSH    R0,[R0, R1]
   \   000000B4   3D28               CMP      R0,#+61
   \   000000B6   25DB               BLT      ??SetupTime_Event_2
   \   000000B8   9348               LDR      R0,??SetupTime_Event_0+0x8  ;; Y_up
   \   000000BA   0021               MOVS     R1,#+0
   \   000000BC   405E               LDRSH    R0,[R0, R1]
   \   000000BE   4828               CMP      R0,#+72
   \   000000C0   20DA               BGE      ??SetupTime_Event_2
   7681                  {
   7682                     SetupPozTmp = (X_up-10)/15;
   \   000000C2   9248               LDR      R0,??SetupTime_Event_0+0xC  ;; X_up
   \   000000C4   0021               MOVS     R1,#+0
   \   000000C6   405E               LDRSH    R0,[R0, R1]
   \   000000C8   0A38               SUBS     R0,R0,#+10
   \   000000CA   0F21               MOVS     R1,#+15
   \   000000CC   ........           BL       __aeabi_idivmod
   7683                     SetupTimeCarPoz=0;
   \   000000D0   8F49               LDR      R1,??SetupTime_Event_0+0x10  ;; SetupTimeCarPoz
   \   000000D2   0022               MOVS     R2,#+0
   \   000000D4   0A70               STRB     R2,[R1, #+0]
   7684                     SetupTimeCarPoz=1<<SetupPozTmp+3;
   \   000000D6   8E49               LDR      R1,??SetupTime_Event_0+0x10  ;; SetupTimeCarPoz
   \   000000D8   0122               MOVS     R2,#+1
   \   000000DA   C01C               ADDS     R0,R0,#+3
   \   000000DC   8240               LSLS     R2,R2,R0
   \   000000DE   0A70               STRB     R2,[R1, #+0]
   7685                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000E0   8C48               LDR      R0,??SetupTime_Event_0+0x14  ;; 0x13d7e9
   \   000000E2   0078               LDRB     R0,[R0, #+0]
   \   000000E4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E6   000E               LSRS     R0,R0,#+24
   \   000000E8   0028               CMP      R0,#+0
   \   000000EA   0BD1               BNE      ??SetupTime_Event_2
   \   000000EC   8A48               LDR      R0,??SetupTime_Event_0+0x18  ;; 0xfffff430
   \   000000EE   8021               MOVS     R1,#+128
   \   000000F0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000F2   0160               STR      R1,[R0, #+0]
   \   000000F4   894A               LDR      R2,??SetupTime_Event_0+0x1C  ;; ButtonBipCounter
   \   000000F6   8A48               LDR      R0,??SetupTime_Event_0+0x20  ;; g_counter
   \   000000F8   03C8               LDM      R0!,{R0,R1}
   \   000000FA   0023               MOVS     R3,#+0
   \   000000FC   0830               ADDS     R0,R0,#+8
   \   000000FE   5941               ADCS     R1,R1,R3
   \   00000100   03C2               STM      R2!,{R0,R1}
   \   00000102   083A               SUBS     R2,R2,#+8
   7686                  }
   7687                  
   7688                 if (ans<0)  
   \                     ??SetupTime_Event_2:
   \   00000104   002C               CMP      R4,#+0
   \   00000106   0BD5               BPL      ??SetupTime_Event_3
   7689                 {
   7690                    SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   \   00000108   ........           BL       SetRTC_DateTime
   7691                    MenuLevel=(MenuLevel/10);
   \   0000010C   8548               LDR      R0,??SetupTime_Event_0+0x24  ;; MenuLevel
   \   0000010E   0068               LDR      R0,[R0, #+0]
   \   00000110   0A21               MOVS     R1,#+10
   \   00000112   ........           BL       __aeabi_idivmod
   \   00000116   8349               LDR      R1,??SetupTime_Event_0+0x24  ;; MenuLevel
   \   00000118   0860               STR      R0,[R1, #+0]
   7692                    MenuPaint();
   \   0000011A   ........           BL       MenuPaint
   \   0000011E   9BE1               B        ??SetupTime_Event_4
   7693                 }
   7694                 else
   7695                 {
   7696                  char odp=0;
   \                     ??SetupTime_Event_3:
   \   00000120   0024               MOVS     R4,#+0
   7697                  int set_zm=0;
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   0090               STR      R0,[SP, #+0]
   7698                  char LabelButt[1]={30};
   \   00000126   03A8               ADD      R0,SP,#+12
   \   00000128   7F49               LDR      R1,??SetupTime_Event_0+0x28  ;; `?<Constant {30}>`
   \   0000012A   0A68               LDR      R2,[R1, #0]
   \   0000012C   0260               STR      R2,[R0, #0]
   7699                  odp = (Button(LabelButt,33,30,19,25));
   \   0000012E   82B0               SUB      SP,SP,#+8
   \   00000130   1920               MOVS     R0,#+25
   \   00000132   0090               STR      R0,[SP, #+0]
   \   00000134   1323               MOVS     R3,#+19
   \   00000136   1E22               MOVS     R2,#+30
   \   00000138   2121               MOVS     R1,#+33
   \   0000013A   05A8               ADD      R0,SP,#+20
   \   0000013C   ........           BL       Button
   \   00000140   02B0               ADD      SP,SP,#+8
   \   00000142   0400               MOVS     R4,R0
   7700                  if ((odp==2) && (SleepModTime==0)) set_zm=1;
   \   00000144   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000146   240E               LSRS     R4,R4,#+24
   \   00000148   022C               CMP      R4,#+2
   \   0000014A   05D1               BNE      ??SetupTime_Event_5
   \   0000014C   7748               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   0000014E   0078               LDRB     R0,[R0, #+0]
   \   00000150   0028               CMP      R0,#+0
   \   00000152   01D1               BNE      ??SetupTime_Event_5
   \   00000154   0120               MOVS     R0,#+1
   \   00000156   0090               STR      R0,[SP, #+0]
   7701                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_5:
   \   00000158   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000015A   240E               LSRS     R4,R4,#+24
   \   0000015C   022C               CMP      R4,#+2
   \   0000015E   0BD1               BNE      ??SetupTime_Event_6
   \   00000160   7248               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   00000162   7249               LDR      R1,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   00000164   0978               LDRB     R1,[R1, #+0]
   \   00000166   491C               ADDS     R1,R1,#+1
   \   00000168   0170               STRB     R1,[R0, #+0]
   \   0000016A   7048               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   0000016C   0078               LDRB     R0,[R0, #+0]
   \   0000016E   0B28               CMP      R0,#+11
   \   00000170   02D3               BCC      ??SetupTime_Event_6
   \   00000172   6E48               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   0170               STRB     R1,[R0, #+0]
   7702                  
   7703                  
   7704                  if (odp==1) {SleepModTime=0;}
   \                     ??SetupTime_Event_6:
   \   00000178   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000017A   240E               LSRS     R4,R4,#+24
   \   0000017C   012C               CMP      R4,#+1
   \   0000017E   02D1               BNE      ??SetupTime_Event_7
   \   00000180   6A48               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   00000182   0021               MOVS     R1,#+0
   \   00000184   0170               STRB     R1,[R0, #+0]
   7705                  
   7706                  LabelButt[0]=31;
   \                     ??SetupTime_Event_7:
   \   00000186   6846               MOV      R0,SP
   \   00000188   1F21               MOVS     R1,#+31
   \   0000018A   0173               STRB     R1,[R0, #+12]
   7707                  odp=0;
   \   0000018C   0024               MOVS     R4,#+0
   7708                  odp = (Button(LabelButt,12,30,19,25));
   \   0000018E   82B0               SUB      SP,SP,#+8
   \   00000190   1920               MOVS     R0,#+25
   \   00000192   0090               STR      R0,[SP, #+0]
   \   00000194   1323               MOVS     R3,#+19
   \   00000196   1E22               MOVS     R2,#+30
   \   00000198   0C21               MOVS     R1,#+12
   \   0000019A   05A8               ADD      R0,SP,#+20
   \   0000019C   ........           BL       Button
   \   000001A0   02B0               ADD      SP,SP,#+8
   \   000001A2   0400               MOVS     R4,R0
   7709                  if ((odp==2)&& (SleepModTime==0))  set_zm=-1;
   \   000001A4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001A6   240E               LSRS     R4,R4,#+24
   \   000001A8   022C               CMP      R4,#+2
   \   000001AA   06D1               BNE      ??SetupTime_Event_8
   \   000001AC   5F48               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   000001AE   0078               LDRB     R0,[R0, #+0]
   \   000001B0   0028               CMP      R0,#+0
   \   000001B2   02D1               BNE      ??SetupTime_Event_8
   \   000001B4   0020               MOVS     R0,#+0
   \   000001B6   C043               MVNS     R0,R0            ;; #-1
   \   000001B8   0090               STR      R0,[SP, #+0]
   7710                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_8:
   \   000001BA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001BC   240E               LSRS     R4,R4,#+24
   \   000001BE   022C               CMP      R4,#+2
   \   000001C0   0BD1               BNE      ??SetupTime_Event_9
   \   000001C2   5A48               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   000001C4   5949               LDR      R1,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   000001C6   0978               LDRB     R1,[R1, #+0]
   \   000001C8   491C               ADDS     R1,R1,#+1
   \   000001CA   0170               STRB     R1,[R0, #+0]
   \   000001CC   5748               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   000001CE   0078               LDRB     R0,[R0, #+0]
   \   000001D0   0B28               CMP      R0,#+11
   \   000001D2   02D3               BCC      ??SetupTime_Event_9
   \   000001D4   5548               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   000001D6   0021               MOVS     R1,#+0
   \   000001D8   0170               STRB     R1,[R0, #+0]
   7711                  
   7712                  if (odp==1) {SleepModTime=0;} 
   \                     ??SetupTime_Event_9:
   \   000001DA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001DC   240E               LSRS     R4,R4,#+24
   \   000001DE   012C               CMP      R4,#+1
   \   000001E0   02D1               BNE      ??SetupTime_Event_10
   \   000001E2   5248               LDR      R0,??SetupTime_Event_0+0x2C  ;; SleepModTime
   \   000001E4   0021               MOVS     R1,#+0
   \   000001E6   0170               STRB     R1,[R0, #+0]
   7713                  
   7714                  
   7715                  signed int dzien_tmp= DateTime.Day;
   \                     ??SetupTime_Event_10:
   \   000001E8   9D48               LDR      R0,??SetupTime_Event_11  ;; DateTime + 2
   \   000001EA   0478               LDRB     R4,[R0, #+0]
   7716                  signed int mies_tmp=DateTime.Mounth;
   \   000001EC   9D48               LDR      R0,??SetupTime_Event_11+0x4  ;; DateTime + 1
   \   000001EE   0578               LDRB     R5,[R0, #+0]
   7717                  signed int rok_tmp=DateTime.Year;
   \   000001F0   9D48               LDR      R0,??SetupTime_Event_11+0x8  ;; DateTime
   \   000001F2   0678               LDRB     R6,[R0, #+0]
   7718                  signed int godz_tmp=DateTime.Hour;
   \   000001F4   9D48               LDR      R0,??SetupTime_Event_11+0xC  ;; DateTime + 3
   \   000001F6   0078               LDRB     R0,[R0, #+0]
   \   000001F8   0190               STR      R0,[SP, #+4]
   7719                  signed int mi_tmp=DateTime.Minute;
   \   000001FA   9D48               LDR      R0,??SetupTime_Event_11+0x10  ;; DateTime + 4
   \   000001FC   0078               LDRB     R0,[R0, #+0]
   \   000001FE   0290               STR      R0,[SP, #+8]
   7720                  signed int sek_tmp=DateTime.Second;
   \   00000200   9C48               LDR      R0,??SetupTime_Event_11+0x14  ;; DateTime + 5
   \   00000202   0778               LDRB     R7,[R0, #+0]
   7721                  
   7722                  
   7723                  switch (SetupTimeCarPoz)
   \   00000204   4248               LDR      R0,??SetupTime_Event_0+0x10  ;; SetupTimeCarPoz
   \   00000206   0078               LDRB     R0,[R0, #+0]
   \   00000208   0128               CMP      R0,#+1
   \   0000020A   0AD0               BEQ      ??SetupTime_Event_12
   \   0000020C   0228               CMP      R0,#+2
   \   0000020E   0DD0               BEQ      ??SetupTime_Event_13
   \   00000210   0428               CMP      R0,#+4
   \   00000212   10D0               BEQ      ??SetupTime_Event_14
   \   00000214   0828               CMP      R0,#+8
   \   00000216   11D0               BEQ      ??SetupTime_Event_15
   \   00000218   1028               CMP      R0,#+16
   \   0000021A   12D0               BEQ      ??SetupTime_Event_16
   \   0000021C   2028               CMP      R0,#+32
   \   0000021E   13D0               BEQ      ??SetupTime_Event_17
   \   00000220   14E0               B        ??SetupTime_Event_18
   7724                  {
   7725                    case 1: godz_tmp+=set_zm;  break;
   \                     ??SetupTime_Event_12:
   \   00000222   0198               LDR      R0,[SP, #+4]
   \   00000224   0099               LDR      R1,[SP, #+0]
   \   00000226   4018               ADDS     R0,R0,R1
   \   00000228   0190               STR      R0,[SP, #+4]
   \   0000022A   0FE0               B        ??SetupTime_Event_18
   7726                    case 2: mi_tmp+=set_zm;     break;
   \                     ??SetupTime_Event_13:
   \   0000022C   0298               LDR      R0,[SP, #+8]
   \   0000022E   0099               LDR      R1,[SP, #+0]
   \   00000230   4018               ADDS     R0,R0,R1
   \   00000232   0290               STR      R0,[SP, #+8]
   \   00000234   0AE0               B        ??SetupTime_Event_18
   7727                    case 4: sek_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_14:
   \   00000236   0098               LDR      R0,[SP, #+0]
   \   00000238   3F18               ADDS     R7,R7,R0
   \   0000023A   07E0               B        ??SetupTime_Event_18
   7728                    case 8: dzien_tmp+=set_zm;  /*DateTime.DayOfWeek+=set_zm;*/  break;
   \                     ??SetupTime_Event_15:
   \   0000023C   0098               LDR      R0,[SP, #+0]
   \   0000023E   2418               ADDS     R4,R4,R0
   \   00000240   04E0               B        ??SetupTime_Event_18
   7729                    case 16: mies_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_16:
   \   00000242   0098               LDR      R0,[SP, #+0]
   \   00000244   2D18               ADDS     R5,R5,R0
   \   00000246   01E0               B        ??SetupTime_Event_18
   7730                    case 32: rok_tmp+=set_zm;   break; 
   \                     ??SetupTime_Event_17:
   \   00000248   0098               LDR      R0,[SP, #+0]
   \   0000024A   3618               ADDS     R6,R6,R0
   7731                  }
   7732                  
   7733                  if (sek_tmp>59) {sek_tmp=0;} 
   \                     ??SetupTime_Event_18:
   \   0000024C   3C2F               CMP      R7,#+60
   \   0000024E   00DB               BLT      ??SetupTime_Event_19
   \   00000250   0027               MOVS     R7,#+0
   7734                  if (mi_tmp>59)  {mi_tmp=0;}
   \                     ??SetupTime_Event_19:
   \   00000252   0298               LDR      R0,[SP, #+8]
   \   00000254   3C28               CMP      R0,#+60
   \   00000256   01DB               BLT      ??SetupTime_Event_20
   \   00000258   0020               MOVS     R0,#+0
   \   0000025A   0290               STR      R0,[SP, #+8]
   7735                  if (godz_tmp>23) godz_tmp=0;  
   \                     ??SetupTime_Event_20:
   \   0000025C   0198               LDR      R0,[SP, #+4]
   \   0000025E   1828               CMP      R0,#+24
   \   00000260   01DB               BLT      ??SetupTime_Event_21
   \   00000262   0020               MOVS     R0,#+0
   \   00000264   0190               STR      R0,[SP, #+4]
   7736                  
   7737                  if (sek_tmp<0) {sek_tmp=59;}
   \                     ??SetupTime_Event_21:
   \   00000266   002F               CMP      R7,#+0
   \   00000268   00D5               BPL      ??SetupTime_Event_22
   \   0000026A   3B27               MOVS     R7,#+59
   7738                  if (mi_tmp<0)  {mi_tmp=59;}
   \                     ??SetupTime_Event_22:
   \   0000026C   0298               LDR      R0,[SP, #+8]
   \   0000026E   0028               CMP      R0,#+0
   \   00000270   01D5               BPL      ??SetupTime_Event_23
   \   00000272   3B20               MOVS     R0,#+59
   \   00000274   0290               STR      R0,[SP, #+8]
   7739                  if (godz_tmp<0) godz_tmp=23;
   \                     ??SetupTime_Event_23:
   \   00000276   0198               LDR      R0,[SP, #+4]
   \   00000278   0028               CMP      R0,#+0
   \   0000027A   01D5               BPL      ??SetupTime_Event_24
   \   0000027C   1720               MOVS     R0,#+23
   \   0000027E   0190               STR      R0,[SP, #+4]
   7740                 
   7741                  char mies_tmp2 = mies_tmp;
   \                     ??SetupTime_Event_24:
   \   00000280   2800               MOVS     R0,R5
   7742                  switch (mies_tmp2)
   \   00000282   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000284   000E               LSRS     R0,R0,#+24
   \   00000286   0128               CMP      R0,#+1
   \   00000288   16D0               BEQ      ??SetupTime_Event_25
   \   0000028A   0228               CMP      R0,#+2
   \   0000028C   18D0               BEQ      ??SetupTime_Event_26
   \   0000028E   0328               CMP      R0,#+3
   \   00000290   31D0               BEQ      ??SetupTime_Event_27
   \   00000292   0428               CMP      R0,#+4
   \   00000294   4CD0               BEQ      ??SetupTime_Event_28
   \   00000296   0528               CMP      R0,#+5
   \   00000298   4ED0               BEQ      ??SetupTime_Event_29
   \   0000029A   0628               CMP      R0,#+6
   \   0000029C   50D0               BEQ      ??SetupTime_Event_30
   \   0000029E   0728               CMP      R0,#+7
   \   000002A0   52D0               BEQ      ??SetupTime_Event_31
   \   000002A2   0828               CMP      R0,#+8
   \   000002A4   54D0               BEQ      ??SetupTime_Event_32
   \   000002A6   0928               CMP      R0,#+9
   \   000002A8   56D0               BEQ      ??SetupTime_Event_33
   \   000002AA   0A28               CMP      R0,#+10
   \   000002AC   58D0               BEQ      ??SetupTime_Event_34
   \   000002AE   0B28               CMP      R0,#+11
   \   000002B0   5AD0               BEQ      ??SetupTime_Event_35
   \   000002B2   0C28               CMP      R0,#+12
   \   000002B4   5CD0               BEQ      ??SetupTime_Event_36
   \   000002B6   5EE0               B        ??SetupTime_Event_37
   7743                  {
   7744                    case 1  : if (dzien_tmp>31) {dzien_tmp=1;} break;
   \                     ??SetupTime_Event_25:
   \   000002B8   202C               CMP      R4,#+32
   \   000002BA   5CDB               BLT      ??SetupTime_Event_37
   \   000002BC   0124               MOVS     R4,#+1
   \   000002BE   5AE0               B        ??SetupTime_Event_37
   7745                    case 2  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_26:
   \   000002C0   3000               MOVS     R0,R6
   \   000002C2   0421               MOVS     R1,#+4
   \   000002C4   ........           BL       __aeabi_idivmod
   \   000002C8   0029               CMP      R1,#+0
   \   000002CA   05D1               BNE      ??SetupTime_Event_38
   \   000002CC   3000               MOVS     R0,R6
   \   000002CE   6421               MOVS     R1,#+100
   \   000002D0   ........           BL       __aeabi_idivmod
   \   000002D4   0029               CMP      R1,#+0
   \   000002D6   06D1               BNE      ??SetupTime_Event_39
   \                     ??SetupTime_Event_38:
   \   000002D8   3000               MOVS     R0,R6
   \   000002DA   C821               MOVS     R1,#+200
   \   000002DC   4900               LSLS     R1,R1,#+1        ;; #+400
   \   000002DE   ........           BL       __aeabi_idivmod
   \   000002E2   0029               CMP      R1,#+0
   \   000002E4   03D1               BNE      ??SetupTime_Event_40
   7746                                {  
   7747                                  if (dzien_tmp>29) {dzien_tmp=1; } 
   \                     ??SetupTime_Event_39:
   \   000002E6   1E2C               CMP      R4,#+30
   \   000002E8   45DB               BLT      ??SetupTime_Event_37
   \   000002EA   0124               MOVS     R4,#+1
   \   000002EC   43E0               B        ??SetupTime_Event_37
   7748                                  }else {if (dzien_tmp>28) {dzien_tmp=1; } 
   \                     ??SetupTime_Event_40:
   \   000002EE   1D2C               CMP      R4,#+29
   \   000002F0   41DB               BLT      ??SetupTime_Event_37
   \   000002F2   0124               MOVS     R4,#+1
   \   000002F4   3FE0               B        ??SetupTime_Event_37
   7749                                  }     
   7750                              break;
   7751                    case 3  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_27:
   \   000002F6   202C               CMP      R4,#+32
   \   000002F8   3DDB               BLT      ??SetupTime_Event_37
   \   000002FA   0124               MOVS     R4,#+1
   \   000002FC   3BE0               B        ??SetupTime_Event_37
   \   000002FE   C046               Nop      
   \                     ??SetupTime_Event_0:
   \   00000300   ........           DC32     Y_down
   \   00000304   ........           DC32     X_down
   \   00000308   ........           DC32     Y_up
   \   0000030C   ........           DC32     X_up
   \   00000310   ........           DC32     SetupTimeCarPoz
   \   00000314   E9D71300           DC32     0x13d7e9
   \   00000318   30F4FFFF           DC32     0xfffff430
   \   0000031C   ........           DC32     ButtonBipCounter
   \   00000320   ........           DC32     g_counter
   \   00000324   ........           DC32     MenuLevel
   \   00000328   ........           DC32     `?<Constant {30}>`
   \   0000032C   ........           DC32     SleepModTime
   7752                    case 4  : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_28:
   \   00000330   1F2C               CMP      R4,#+31
   \   00000332   20DB               BLT      ??SetupTime_Event_37
   \   00000334   0124               MOVS     R4,#+1
   \   00000336   1EE0               B        ??SetupTime_Event_37
   7753                    case 5  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_29:
   \   00000338   202C               CMP      R4,#+32
   \   0000033A   1CDB               BLT      ??SetupTime_Event_37
   \   0000033C   0124               MOVS     R4,#+1
   \   0000033E   1AE0               B        ??SetupTime_Event_37
   7754                    case 6  : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_30:
   \   00000340   1F2C               CMP      R4,#+31
   \   00000342   18DB               BLT      ??SetupTime_Event_37
   \   00000344   0124               MOVS     R4,#+1
   \   00000346   16E0               B        ??SetupTime_Event_37
   7755                    case 7  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_31:
   \   00000348   202C               CMP      R4,#+32
   \   0000034A   14DB               BLT      ??SetupTime_Event_37
   \   0000034C   0124               MOVS     R4,#+1
   \   0000034E   12E0               B        ??SetupTime_Event_37
   7756                    case 8  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_32:
   \   00000350   202C               CMP      R4,#+32
   \   00000352   10DB               BLT      ??SetupTime_Event_37
   \   00000354   0124               MOVS     R4,#+1
   \   00000356   0EE0               B        ??SetupTime_Event_37
   7757                    case 9  : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_33:
   \   00000358   1F2C               CMP      R4,#+31
   \   0000035A   0CDB               BLT      ??SetupTime_Event_37
   \   0000035C   0124               MOVS     R4,#+1
   \   0000035E   0AE0               B        ??SetupTime_Event_37
   7758                    case 10 : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_34:
   \   00000360   202C               CMP      R4,#+32
   \   00000362   08DB               BLT      ??SetupTime_Event_37
   \   00000364   0124               MOVS     R4,#+1
   \   00000366   06E0               B        ??SetupTime_Event_37
   7759                    case 11 : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_35:
   \   00000368   1F2C               CMP      R4,#+31
   \   0000036A   04DB               BLT      ??SetupTime_Event_37
   \   0000036C   0124               MOVS     R4,#+1
   \   0000036E   02E0               B        ??SetupTime_Event_37
   7760                    case 12 : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_36:
   \   00000370   202C               CMP      R4,#+32
   \   00000372   00DB               BLT      ??SetupTime_Event_37
   \   00000374   0124               MOVS     R4,#+1
   7761                  }  
   7762                  
   7763                  if (mies_tmp>12)  {mies_tmp=1; }
   \                     ??SetupTime_Event_37:
   \   00000376   0D2D               CMP      R5,#+13
   \   00000378   00DB               BLT      ??SetupTime_Event_41
   \   0000037A   0125               MOVS     R5,#+1
   7764                  if (rok_tmp>99) rok_tmp=0;  
   \                     ??SetupTime_Event_41:
   \   0000037C   642E               CMP      R6,#+100
   \   0000037E   00DB               BLT      ??SetupTime_Event_42
   \   00000380   0026               MOVS     R6,#+0
   7765                 
   7766                  mies_tmp2 = mies_tmp;
   \                     ??SetupTime_Event_42:
   \   00000382   2800               MOVS     R0,R5
   7767                  if (dzien_tmp<=0)
   \   00000384   012C               CMP      R4,#+1
   \   00000386   46DA               BGE      ??SetupTime_Event_43
   7768                  switch (mies_tmp2)
   \   00000388   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000038A   000E               LSRS     R0,R0,#+24
   \   0000038C   0128               CMP      R0,#+1
   \   0000038E   16D0               BEQ      ??SetupTime_Event_44
   \   00000390   0228               CMP      R0,#+2
   \   00000392   16D0               BEQ      ??SetupTime_Event_45
   \   00000394   0328               CMP      R0,#+3
   \   00000396   16D0               BEQ      ??SetupTime_Event_46
   \   00000398   0428               CMP      R0,#+4
   \   0000039A   2BD0               BEQ      ??SetupTime_Event_47
   \   0000039C   0528               CMP      R0,#+5
   \   0000039E   2BD0               BEQ      ??SetupTime_Event_48
   \   000003A0   0628               CMP      R0,#+6
   \   000003A2   2BD0               BEQ      ??SetupTime_Event_49
   \   000003A4   0728               CMP      R0,#+7
   \   000003A6   2BD0               BEQ      ??SetupTime_Event_50
   \   000003A8   0828               CMP      R0,#+8
   \   000003AA   2BD0               BEQ      ??SetupTime_Event_51
   \   000003AC   0928               CMP      R0,#+9
   \   000003AE   2BD0               BEQ      ??SetupTime_Event_52
   \   000003B0   0A28               CMP      R0,#+10
   \   000003B2   2BD0               BEQ      ??SetupTime_Event_53
   \   000003B4   0B28               CMP      R0,#+11
   \   000003B6   2BD0               BEQ      ??SetupTime_Event_54
   \   000003B8   0C28               CMP      R0,#+12
   \   000003BA   2BD0               BEQ      ??SetupTime_Event_55
   \   000003BC   2BE0               B        ??SetupTime_Event_43
   7769                  {
   7770                    case 1  : dzien_tmp=31; break;
   \                     ??SetupTime_Event_44:
   \   000003BE   1F24               MOVS     R4,#+31
   \   000003C0   29E0               B        ??SetupTime_Event_43
   7771                    case 2  : dzien_tmp=31; break;
   \                     ??SetupTime_Event_45:
   \   000003C2   1F24               MOVS     R4,#+31
   \   000003C4   27E0               B        ??SetupTime_Event_43
   7772                    case 3  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_46:
   \   000003C6   3000               MOVS     R0,R6
   \   000003C8   0421               MOVS     R1,#+4
   \   000003CA   ........           BL       __aeabi_idivmod
   \   000003CE   0029               CMP      R1,#+0
   \   000003D0   05D1               BNE      ??SetupTime_Event_56
   \   000003D2   3000               MOVS     R0,R6
   \   000003D4   6421               MOVS     R1,#+100
   \   000003D6   ........           BL       __aeabi_idivmod
   \   000003DA   0029               CMP      R1,#+0
   \   000003DC   06D1               BNE      ??SetupTime_Event_57
   \                     ??SetupTime_Event_56:
   \   000003DE   3000               MOVS     R0,R6
   \   000003E0   C821               MOVS     R1,#+200
   \   000003E2   4900               LSLS     R1,R1,#+1        ;; #+400
   \   000003E4   ........           BL       __aeabi_idivmod
   \   000003E8   0029               CMP      R1,#+0
   \   000003EA   01D1               BNE      ??SetupTime_Event_58
   7773                             { dzien_tmp=29;} else { dzien_tmp=28; }  break;
   \                     ??SetupTime_Event_57:
   \   000003EC   1D24               MOVS     R4,#+29
   \   000003EE   12E0               B        ??SetupTime_Event_43
   \                     ??SetupTime_Event_58:
   \   000003F0   1C24               MOVS     R4,#+28
   \   000003F2   10E0               B        ??SetupTime_Event_43
   7774                    case 4  : dzien_tmp=31;  break;
   \                     ??SetupTime_Event_47:
   \   000003F4   1F24               MOVS     R4,#+31
   \   000003F6   0EE0               B        ??SetupTime_Event_43
   7775                    case 5  : dzien_tmp=30; break;
   \                     ??SetupTime_Event_48:
   \   000003F8   1E24               MOVS     R4,#+30
   \   000003FA   0CE0               B        ??SetupTime_Event_43
   7776                    case 6  : dzien_tmp=31; break;
   \                     ??SetupTime_Event_49:
   \   000003FC   1F24               MOVS     R4,#+31
   \   000003FE   0AE0               B        ??SetupTime_Event_43
   7777                    case 7  : dzien_tmp=30; break;
   \                     ??SetupTime_Event_50:
   \   00000400   1E24               MOVS     R4,#+30
   \   00000402   08E0               B        ??SetupTime_Event_43
   7778                    case 8  : dzien_tmp=31; break;
   \                     ??SetupTime_Event_51:
   \   00000404   1F24               MOVS     R4,#+31
   \   00000406   06E0               B        ??SetupTime_Event_43
   7779                    case 9  : dzien_tmp=31; break;
   \                     ??SetupTime_Event_52:
   \   00000408   1F24               MOVS     R4,#+31
   \   0000040A   04E0               B        ??SetupTime_Event_43
   7780                    case 10 : dzien_tmp=30; break;
   \                     ??SetupTime_Event_53:
   \   0000040C   1E24               MOVS     R4,#+30
   \   0000040E   02E0               B        ??SetupTime_Event_43
   7781                    case 11 : dzien_tmp=31; break;
   \                     ??SetupTime_Event_54:
   \   00000410   1F24               MOVS     R4,#+31
   \   00000412   00E0               B        ??SetupTime_Event_43
   7782                    case 12 : dzien_tmp=30; break;
   \                     ??SetupTime_Event_55:
   \   00000414   1E24               MOVS     R4,#+30
   7783                  } 
   7784                   
   7785                  if (mies_tmp<0)  {mies_tmp=12;}
   \                     ??SetupTime_Event_43:
   \   00000416   002D               CMP      R5,#+0
   \   00000418   00D5               BPL      ??SetupTime_Event_59
   \   0000041A   0C25               MOVS     R5,#+12
   7786                  if (rok_tmp<0) rok_tmp=0;
   \                     ??SetupTime_Event_59:
   \   0000041C   002E               CMP      R6,#+0
   \   0000041E   00D5               BPL      ??SetupTime_Event_60
   \   00000420   0026               MOVS     R6,#+0
   7787          
   7788          
   7789                  if (dzien_tmp>31) dzien_tmp=31;
   \                     ??SetupTime_Event_60:
   \   00000422   202C               CMP      R4,#+32
   \   00000424   00DB               BLT      ??SetupTime_Event_61
   \   00000426   1F24               MOVS     R4,#+31
   7790                  
   7791                  DateTime.Day= dzien_tmp;
   \                     ??SetupTime_Event_61:
   \   00000428   0D48               LDR      R0,??SetupTime_Event_11  ;; DateTime + 2
   \   0000042A   0470               STRB     R4,[R0, #+0]
   7792                  DateTime.Mounth=mies_tmp;
   \   0000042C   0D48               LDR      R0,??SetupTime_Event_11+0x4  ;; DateTime + 1
   \   0000042E   0570               STRB     R5,[R0, #+0]
   7793                  DateTime.Year=rok_tmp;
   \   00000430   0D48               LDR      R0,??SetupTime_Event_11+0x8  ;; DateTime
   \   00000432   0670               STRB     R6,[R0, #+0]
   7794                  DateTime.Hour=godz_tmp;
   \   00000434   0D48               LDR      R0,??SetupTime_Event_11+0xC  ;; DateTime + 3
   \   00000436   0199               LDR      R1,[SP, #+4]
   \   00000438   0170               STRB     R1,[R0, #+0]
   7795                  DateTime.Minute=mi_tmp;
   \   0000043A   0D48               LDR      R0,??SetupTime_Event_11+0x10  ;; DateTime + 4
   \   0000043C   0299               LDR      R1,[SP, #+8]
   \   0000043E   0170               STRB     R1,[R0, #+0]
   7796                  DateTime.Second=sek_tmp;
   \   00000440   0C48               LDR      R0,??SetupTime_Event_11+0x14  ;; DateTime + 5
   \   00000442   0770               STRB     R7,[R0, #+0]
   7797                  
   7798          
   7799                 
   7800                 
   7801                 DateTime.DayOfWeek=dzienTygodnia(DateTime.Day,DateTime.Mounth,DateTime.Year ); //(int dzien, int miesiac, int rok) 
   \   00000444   0848               LDR      R0,??SetupTime_Event_11+0x8  ;; DateTime
   \   00000446   0278               LDRB     R2,[R0, #+0]
   \   00000448   0648               LDR      R0,??SetupTime_Event_11+0x4  ;; DateTime + 1
   \   0000044A   0178               LDRB     R1,[R0, #+0]
   \   0000044C   0448               LDR      R0,??SetupTime_Event_11  ;; DateTime + 2
   \   0000044E   0078               LDRB     R0,[R0, #+0]
   \   00000450   ........           BL       dzienTygodnia
   \   00000454   0849               LDR      R1,??SetupTime_Event_11+0x18  ;; DateTime + 6
   \   00000456   0870               STRB     R0,[R1, #+0]
   7802          
   7803                 }
   7804              }//________________________________________________________________________
   \                     ??SetupTime_Event_4:
   \   00000458   05B0               ADD      SP,SP,#+20
   \   0000045A   F0BC               POP      {R4-R7}
   \   0000045C   01BC               POP      {R0}
   \   0000045E   0047               BX       R0               ;; return
   \                     ??SetupTime_Event_11:
   \   00000460   ........           DC32     DateTime + 2
   \   00000464   ........           DC32     DateTime + 1
   \   00000468   ........           DC32     DateTime
   \   0000046C   ........           DC32     DateTime + 3
   \   00000470   ........           DC32     DateTime + 4
   \   00000474   ........           DC32     DateTime + 5
   \   00000478   ........           DC32     DateTime + 6
   7805          
   7806          
   7807              
   7808              
   7809          //ustawienie podwietlenia
   7810          #define TAPozY 80
   7811          #define TNPozY 40
   7812          //*---------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
   7813          void ScreenBrightness_Paint(void)
   7814              {  
   \                     ScreenBrightness_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   7815                 List_Paint(Speech[g_leng].Jasnosc,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   9EA0               ADR      R0,??ScreenBrightness_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   9B48               LDR      R0,??ScreenBrightness_Paint_0+0x4  ;; 0xa23
   \   00000028   9B4C               LDR      R4,??ScreenBrightness_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   9B4D               LDR      R5,??ScreenBrightness_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   9B4D               LDR      R5,??ScreenBrightness_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   7816                    
   7817                 
   7818                //tryb aktywny wywietlacza --------------------------------------------------
   7819                 Label(Speech[g_leng].Tryb_aktywny,0,1,TAPozY+5,15,33,1,127,0);    //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7F21               MOVS     R1,#+127
   \   00000044   0120               MOVS     R0,#+1
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   2121               MOVS     R1,#+33
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   5523               MOVS     R3,#+85
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   9348               LDR      R0,??ScreenBrightness_Paint_0+0x14  ;; 0xa32
   \   00000056   904C               LDR      R4,??ScreenBrightness_Paint_0+0x8  ;; g_leng
   \   00000058   2468               LDR      R4,[R4, #+0]
   \   0000005A   904D               LDR      R5,??ScreenBrightness_Paint_0+0xC  ;; 0xa7d
   \   0000005C   6C43               MULS     R4,R5,R4
   \   0000005E   904D               LDR      R5,??ScreenBrightness_Paint_0+0x10  ;; Speech
   \   00000060   2C19               ADDS     R4,R5,R4
   \   00000062   2018               ADDS     R0,R4,R0
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   7820          
   7821                 H_line(4,TAPozY+1,54,1); // (char X, int Y, char lenght, char typ) 
   \   0000006A   0123               MOVS     R3,#+1
   \   0000006C   3622               MOVS     R2,#+54
   \   0000006E   5121               MOVS     R1,#+81
   \   00000070   0420               MOVS     R0,#+4
   \   00000072   ........           BL       H_line
   7822                 H_line(4,TAPozY-1,54,1); // (char X, int Y, char lenght, char typ) 
   \   00000076   0123               MOVS     R3,#+1
   \   00000078   3622               MOVS     R2,#+54
   \   0000007A   4F21               MOVS     R1,#+79
   \   0000007C   0420               MOVS     R0,#+4
   \   0000007E   ........           BL       H_line
   7823                 CanvasPixel(3, TAPozY, 1);
   \   00000082   0122               MOVS     R2,#+1
   \   00000084   5021               MOVS     R1,#+80
   \   00000086   0320               MOVS     R0,#+3
   \   00000088   ........           BL       CanvasPixel
   7824                 CanvasPixel(58, TAPozY, 1);
   \   0000008C   0122               MOVS     R2,#+1
   \   0000008E   5021               MOVS     R1,#+80
   \   00000090   3A20               MOVS     R0,#+58
   \   00000092   ........           BL       CanvasPixel
   7825                 
   7826                 char WypMaxJasnosciTMP=((WypMaxJasnosci-3)*2);
   \   00000096   8448               LDR      R0,??ScreenBrightness_Paint_0+0x18  ;; WypMaxJasnosci
   \   00000098   0078               LDRB     R0,[R0, #+0]
   \   0000009A   C41E               SUBS     R4,R0,#+3
   \   0000009C   0220               MOVS     R0,#+2
   \   0000009E   4443               MULS     R4,R0,R4
   7827                 if (WypMaxJasnosciTMP>100) WypMaxJasnosciTMP=100;
   \   000000A0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A2   240E               LSRS     R4,R4,#+24
   \   000000A4   652C               CMP      R4,#+101
   \   000000A6   00D3               BCC      ??ScreenBrightness_Paint_1
   \   000000A8   6424               MOVS     R4,#+100
   7828                 char poz1=  (48 * WypMaxJasnosciTMP/100)+7;
   \                     ??ScreenBrightness_Paint_1:
   \   000000AA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000AC   240E               LSRS     R4,R4,#+24
   \   000000AE   3020               MOVS     R0,#+48
   \   000000B0   6043               MULS     R0,R4,R0
   \   000000B2   6421               MOVS     R1,#+100
   \   000000B4   ........           BL       __aeabi_idivmod
   \   000000B8   0500               MOVS     R5,R0
   \   000000BA   ED1D               ADDS     R5,R5,#+7
   7829                 H_line(poz1-1,TAPozY+3,3,1); // (char X, int Y, char lenght, char typ)
   \   000000BC   0123               MOVS     R3,#+1
   \   000000BE   0322               MOVS     R2,#+3
   \   000000C0   5321               MOVS     R1,#+83
   \   000000C2   681E               SUBS     R0,R5,#+1
   \   000000C4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C6   000E               LSRS     R0,R0,#+24
   \   000000C8   ........           BL       H_line
   7830                 H_line(poz1-2,TAPozY+2,5,1); // (char X, int Y, char lenght, char typ)
   \   000000CC   0123               MOVS     R3,#+1
   \   000000CE   0522               MOVS     R2,#+5
   \   000000D0   5221               MOVS     R1,#+82
   \   000000D2   A81E               SUBS     R0,R5,#+2
   \   000000D4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D6   000E               LSRS     R0,R0,#+24
   \   000000D8   ........           BL       H_line
   7831                 H_line(poz1-2,TAPozY,5,1); // (char X, int Y, char lenght, char typ)
   \   000000DC   0123               MOVS     R3,#+1
   \   000000DE   0522               MOVS     R2,#+5
   \   000000E0   5021               MOVS     R1,#+80
   \   000000E2   A81E               SUBS     R0,R5,#+2
   \   000000E4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E6   000E               LSRS     R0,R0,#+24
   \   000000E8   ........           BL       H_line
   7832                 H_line(poz1-2,TAPozY-2,5,1); // (char X, int Y, char lenght, char typ)
   \   000000EC   0123               MOVS     R3,#+1
   \   000000EE   0522               MOVS     R2,#+5
   \   000000F0   4E21               MOVS     R1,#+78
   \   000000F2   A81E               SUBS     R0,R5,#+2
   \   000000F4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F6   000E               LSRS     R0,R0,#+24
   \   000000F8   ........           BL       H_line
   7833                 H_line(poz1-1,TAPozY-3,3,1); // (char X, int Y, char lenght, char typ)
   \   000000FC   0123               MOVS     R3,#+1
   \   000000FE   0322               MOVS     R2,#+3
   \   00000100   4D21               MOVS     R1,#+77
   \   00000102   681E               SUBS     R0,R5,#+1
   \   00000104   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000106   000E               LSRS     R0,R0,#+24
   \   00000108   ........           BL       H_line
   7834                 
   7835                 if (poz1<10)
   \   0000010C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000010E   2D0E               LSRS     R5,R5,#+24
   \   00000110   0A2D               CMP      R5,#+10
   \   00000112   01D2               BCS      ??ScreenBrightness_Paint_2
   7836                 {
   7837                   poz1=10; 
   \   00000114   0A25               MOVS     R5,#+10
   \   00000116   04E0               B        ??ScreenBrightness_Paint_3
   7838                 }else if (poz1>55)
   \                     ??ScreenBrightness_Paint_2:
   \   00000118   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000011A   2D0E               LSRS     R5,R5,#+24
   \   0000011C   382D               CMP      R5,#+56
   \   0000011E   00D3               BCC      ??ScreenBrightness_Paint_3
   7839                 {
   7840                   poz1=55; 
   \   00000120   3725               MOVS     R5,#+55
   7841                 }
   7842                 
   7843                 char TXT[5];
   7844                 char IL=CharToStr(WypMaxJasnosciTMP, TXT, 3); //(char Value, char *Vstring, char ill)
   \                     ??ScreenBrightness_Paint_3:
   \   00000122   0322               MOVS     R2,#+3
   \   00000124   6946               MOV      R1,SP
   \   00000126   2000               MOVS     R0,R4
   \   00000128   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000012A   000E               LSRS     R0,R0,#+24
   \   0000012C   ........           BL       CharToStr
   \   00000130   0200               MOVS     R2,R0
   7845                 TXT[IL++]='%';
   \   00000132   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000134   120E               LSRS     R2,R2,#+24
   \   00000136   6846               MOV      R0,SP
   \   00000138   2521               MOVS     R1,#+37
   \   0000013A   8154               STRB     R1,[R0, R2]
   \   0000013C   521C               ADDS     R2,R2,#+1
   7846                 //Label(TXT,2,poz1,TAPozY-12,IL,33,1,127,0);                               //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   7847                 Label(TXT,0,26,TAPozY-13,IL,20,1,127,0);                               //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0020               MOVS     R0,#+0
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   7F21               MOVS     R1,#+127
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   1421               MOVS     R1,#+20
   \   0000014C   1000               MOVS     R0,R2
   \   0000014E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000150   000E               LSRS     R0,R0,#+24
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   4323               MOVS     R3,#+67
   \   00000156   1A22               MOVS     R2,#+26
   \   00000158   0021               MOVS     R1,#+0
   \   0000015A   06A8               ADD      R0,SP,#+24
   \   0000015C   ........           BL       Label
   \   00000160   06B0               ADD      SP,SP,#+24
   7848          
   7849                 
   7850                 
   7851                //tryb nieaktywny wywietlacza -------------------------------------------------- 
   7852                 Label(Speech[g_leng].Tryb_nieaktywny,0,1,TNPozY+5,15,33,1,127,0);       //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0020               MOVS     R0,#+0
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   7F21               MOVS     R1,#+127
   \   0000016A   0120               MOVS     R0,#+1
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   2121               MOVS     R1,#+33
   \   00000170   0F20               MOVS     R0,#+15
   \   00000172   03B4               PUSH     {R0,R1}
   \   00000174   2D23               MOVS     R3,#+45
   \   00000176   0122               MOVS     R2,#+1
   \   00000178   0021               MOVS     R1,#+0
   \   0000017A   4C48               LDR      R0,??ScreenBrightness_Paint_0+0x1C  ;; 0xa41
   \   0000017C   464C               LDR      R4,??ScreenBrightness_Paint_0+0x8  ;; g_leng
   \   0000017E   2468               LDR      R4,[R4, #+0]
   \   00000180   464D               LDR      R5,??ScreenBrightness_Paint_0+0xC  ;; 0xa7d
   \   00000182   6C43               MULS     R4,R5,R4
   \   00000184   464D               LDR      R5,??ScreenBrightness_Paint_0+0x10  ;; Speech
   \   00000186   2C19               ADDS     R4,R5,R4
   \   00000188   2018               ADDS     R0,R4,R0
   \   0000018A   ........           BL       Label
   \   0000018E   06B0               ADD      SP,SP,#+24
   7853          
   7854                 H_line(4,TNPozY+1,54,1);                                                 // (char X, int Y, char lenght, char typ) 
   \   00000190   0123               MOVS     R3,#+1
   \   00000192   3622               MOVS     R2,#+54
   \   00000194   2921               MOVS     R1,#+41
   \   00000196   0420               MOVS     R0,#+4
   \   00000198   ........           BL       H_line
   7855                 H_line(4,TNPozY-1,54,1);                                                 // (char X, int Y, char lenght, char typ) 
   \   0000019C   0123               MOVS     R3,#+1
   \   0000019E   3622               MOVS     R2,#+54
   \   000001A0   2721               MOVS     R1,#+39
   \   000001A2   0420               MOVS     R0,#+4
   \   000001A4   ........           BL       H_line
   7856                 CanvasPixel(3, TNPozY, 1);
   \   000001A8   0122               MOVS     R2,#+1
   \   000001AA   2821               MOVS     R1,#+40
   \   000001AC   0320               MOVS     R0,#+3
   \   000001AE   ........           BL       CanvasPixel
   7857                 CanvasPixel(58, TNPozY, 1);
   \   000001B2   0122               MOVS     R2,#+1
   \   000001B4   2821               MOVS     R1,#+40
   \   000001B6   3A20               MOVS     R0,#+58
   \   000001B8   ........           BL       CanvasPixel
   7858                 
   7859                 char WypMinJasnosciTMP=((WypMinJasnosci-3)*2);
   \   000001BC   3C48               LDR      R0,??ScreenBrightness_Paint_0+0x20  ;; WypMinJasnosci
   \   000001BE   0078               LDRB     R0,[R0, #+0]
   \   000001C0   C41E               SUBS     R4,R0,#+3
   \   000001C2   0220               MOVS     R0,#+2
   \   000001C4   4443               MULS     R4,R0,R4
   7860                 if (WypMinJasnosciTMP>100) WypMinJasnosciTMP=100;
   \   000001C6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001C8   240E               LSRS     R4,R4,#+24
   \   000001CA   652C               CMP      R4,#+101
   \   000001CC   00D3               BCC      ??ScreenBrightness_Paint_4
   \   000001CE   6424               MOVS     R4,#+100
   7861                 poz1=  (48 * WypMinJasnosciTMP/100)+7;
   \                     ??ScreenBrightness_Paint_4:
   \   000001D0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001D2   240E               LSRS     R4,R4,#+24
   \   000001D4   3020               MOVS     R0,#+48
   \   000001D6   6043               MULS     R0,R4,R0
   \   000001D8   6421               MOVS     R1,#+100
   \   000001DA   ........           BL       __aeabi_idivmod
   \   000001DE   0500               MOVS     R5,R0
   \   000001E0   ED1D               ADDS     R5,R5,#+7
   7862                 H_line(poz1-1,TNPozY+3,3,1); // (char X, int Y, char lenght, char typ)
   \   000001E2   0123               MOVS     R3,#+1
   \   000001E4   0322               MOVS     R2,#+3
   \   000001E6   2B21               MOVS     R1,#+43
   \   000001E8   681E               SUBS     R0,R5,#+1
   \   000001EA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001EC   000E               LSRS     R0,R0,#+24
   \   000001EE   ........           BL       H_line
   7863                 H_line(poz1-2,TNPozY+2,5,1); // (char X, int Y, char lenght, char typ)
   \   000001F2   0123               MOVS     R3,#+1
   \   000001F4   0522               MOVS     R2,#+5
   \   000001F6   2A21               MOVS     R1,#+42
   \   000001F8   A81E               SUBS     R0,R5,#+2
   \   000001FA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001FC   000E               LSRS     R0,R0,#+24
   \   000001FE   ........           BL       H_line
   7864                 H_line(poz1-2,TNPozY,5,1); // (char X, int Y, char lenght, char typ)
   \   00000202   0123               MOVS     R3,#+1
   \   00000204   0522               MOVS     R2,#+5
   \   00000206   2821               MOVS     R1,#+40
   \   00000208   A81E               SUBS     R0,R5,#+2
   \   0000020A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000020C   000E               LSRS     R0,R0,#+24
   \   0000020E   ........           BL       H_line
   7865                 H_line(poz1-2,TNPozY-2,5,1); // (char X, int Y, char lenght, char typ)
   \   00000212   0123               MOVS     R3,#+1
   \   00000214   0522               MOVS     R2,#+5
   \   00000216   2621               MOVS     R1,#+38
   \   00000218   A81E               SUBS     R0,R5,#+2
   \   0000021A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000021C   000E               LSRS     R0,R0,#+24
   \   0000021E   ........           BL       H_line
   7866                 H_line(poz1-1,TNPozY-3,3,1); // (char X, int Y, char lenght, char typ)
   \   00000222   0123               MOVS     R3,#+1
   \   00000224   0322               MOVS     R2,#+3
   \   00000226   2521               MOVS     R1,#+37
   \   00000228   681E               SUBS     R0,R5,#+1
   \   0000022A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000022C   000E               LSRS     R0,R0,#+24
   \   0000022E   ........           BL       H_line
   7867                 
   7868                 if (poz1<10)
   \   00000232   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000234   2D0E               LSRS     R5,R5,#+24
   \   00000236   0A2D               CMP      R5,#+10
   \   00000238   01D2               BCS      ??ScreenBrightness_Paint_5
   7869                 {
   7870                   poz1=10; 
   \   0000023A   0A25               MOVS     R5,#+10
   \   0000023C   04E0               B        ??ScreenBrightness_Paint_6
   7871                 }else if (poz1>55)
   \                     ??ScreenBrightness_Paint_5:
   \   0000023E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000240   2D0E               LSRS     R5,R5,#+24
   \   00000242   382D               CMP      R5,#+56
   \   00000244   00D3               BCC      ??ScreenBrightness_Paint_6
   7872                 {
   7873                   poz1=55; 
   \   00000246   3725               MOVS     R5,#+55
   7874                 }
   7875                 
   7876                 IL=CharToStr(WypMinJasnosciTMP, TXT, 3); //(char Value, char *Vstring, char ill)
   \                     ??ScreenBrightness_Paint_6:
   \   00000248   0322               MOVS     R2,#+3
   \   0000024A   6946               MOV      R1,SP
   \   0000024C   2000               MOVS     R0,R4
   \   0000024E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000250   000E               LSRS     R0,R0,#+24
   \   00000252   ........           BL       CharToStr
   \   00000256   0200               MOVS     R2,R0
   7877                 TXT[IL++]='%';
   \   00000258   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000025A   120E               LSRS     R2,R2,#+24
   \   0000025C   6846               MOV      R0,SP
   \   0000025E   2521               MOVS     R1,#+37
   \   00000260   8154               STRB     R1,[R0, R2]
   \   00000262   521C               ADDS     R2,R2,#+1
   7878                 //Label(TXT,2,poz1,TNPozY-12,IL,33,1,127,0);                                     //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   7879                 Label(TXT,0,26,TNPozY-13,IL,20,1,127,0);                                     //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000264   82B0               SUB      SP,SP,#+8
   \   00000266   0020               MOVS     R0,#+0
   \   00000268   0090               STR      R0,[SP, #+0]
   \   0000026A   7F21               MOVS     R1,#+127
   \   0000026C   0120               MOVS     R0,#+1
   \   0000026E   03B4               PUSH     {R0,R1}
   \   00000270   1421               MOVS     R1,#+20
   \   00000272   1000               MOVS     R0,R2
   \   00000274   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000276   000E               LSRS     R0,R0,#+24
   \   00000278   03B4               PUSH     {R0,R1}
   \   0000027A   1B23               MOVS     R3,#+27
   \   0000027C   1A22               MOVS     R2,#+26
   \   0000027E   0021               MOVS     R1,#+0
   \   00000280   06A8               ADD      R0,SP,#+24
   \   00000282   ........           BL       Label
   \   00000286   06B0               ADD      SP,SP,#+24
   7880           
   7881          }//________________________________________________________________________
   \   00000288   03B0               ADD      SP,SP,#+12
   \   0000028A   30BC               POP      {R4,R5}
   \   0000028C   01BC               POP      {R0}
   \   0000028E   0047               BX       R0               ;; return
   \                     ??ScreenBrightness_Paint_0:
   \   00000290   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000294   230A0000           DC32     0xa23
   \   00000298   ........           DC32     g_leng
   \   0000029C   7D0A0000           DC32     0xa7d
   \   000002A0   ........           DC32     Speech
   \   000002A4   320A0000           DC32     0xa32
   \   000002A8   ........           DC32     WypMaxJasnosci
   \   000002AC   410A0000           DC32     0xa41
   \   000002B0   ........           DC32     WypMinJasnosci
   7882              
   7883              
   7884              
   7885              
   7886              
   7887            
   7888          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7889          void ScreenBrightness_Event(void)
   7890              {
   \                     ScreenBrightness_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7891                char RepaintTMP=0;
   \   00000002   0024               MOVS     R4,#+0
   7892                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   8548               LDR      R0,??ScreenBrightness_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   8548               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8448               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   8448               LDR      R0,??ScreenBrightness_Event_0+0xC  ;; X_up
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   405F               LDRSH    R0,[R0, R5]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   7893                if (ans<0)  
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   15D5               BPL      ??ScreenBrightness_Event_1
   7894                 {
   7895                    MenuLevel=(MenuLevel/10);
   \   00000032   8148               LDR      R0,??ScreenBrightness_Event_0+0x10  ;; MenuLevel
   \   00000034   0068               LDR      R0,[R0, #+0]
   \   00000036   0A21               MOVS     R1,#+10
   \   00000038   ........           BL       __aeabi_idivmod
   \   0000003C   7E49               LDR      R1,??ScreenBrightness_Event_0+0x10  ;; MenuLevel
   \   0000003E   0860               STR      R0,[R1, #+0]
   7896                    gWypMinJasnosciTest=0;
   \   00000040   7E48               LDR      R0,??ScreenBrightness_Event_0+0x14  ;; gWypMinJasnosciTest
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   0170               STRB     R1,[R0, #+0]
   7897                    AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   00000046   7E48               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0160               STR      R1,[R0, #+0]
   7898                    Set_LCD_Light_PWM_Fill(WypMaxJasnosci); 
                           ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   0000004C   7D48               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   ........           BL       Set_LCD_Light_PWM_Fill
   7899                    AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   00000054   7C48               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   00000056   0121               MOVS     R1,#+1
   \   00000058   0160               STR      R1,[R0, #+0]
   7900                    RepaintTMP=1;
   \   0000005A   0124               MOVS     R4,#+1
   \   0000005C   D9E0               B        ??ScreenBrightness_Event_2
   7901                 }else{
   7902                     char Xtym=0;
   \                     ??ScreenBrightness_Event_1:
   \   0000005E   0020               MOVS     R0,#+0
   7903                     if ((X_down>1) && (X_down<63) && (Y_down>TAPozY-10) && (Y_down<TAPozY+5))                    //ustawienie wype³nienia podwietlenia ekranu aktywnego
   \   00000060   7249               LDR      R1,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   00000062   0022               MOVS     R2,#+0
   \   00000064   895E               LDRSH    R1,[R1, R2]
   \   00000066   0229               CMP      R1,#+2
   \   00000068   49DB               BLT      ??ScreenBrightness_Event_3
   \   0000006A   7048               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   405E               LDRSH    R0,[R0, R1]
   \   00000070   3F28               CMP      R0,#+63
   \   00000072   44DA               BGE      ??ScreenBrightness_Event_3
   \   00000074   6C48               LDR      R0,??ScreenBrightness_Event_0  ;; Y_down
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   405E               LDRSH    R0,[R0, R1]
   \   0000007A   4728               CMP      R0,#+71
   \   0000007C   3FDB               BLT      ??ScreenBrightness_Event_3
   \   0000007E   6A48               LDR      R0,??ScreenBrightness_Event_0  ;; Y_down
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   405E               LDRSH    R0,[R0, R1]
   \   00000084   5528               CMP      R0,#+85
   \   00000086   3ADA               BGE      ??ScreenBrightness_Event_3
   7904                     {
   7905                          Xtym=X_down;
   \   00000088   6848               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   0000008A   0088               LDRH     R0,[R0, #+0]
   7906                          if (Xtym<7) Xtym=7;
   \   0000008C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000008E   000E               LSRS     R0,R0,#+24
   \   00000090   0728               CMP      R0,#+7
   \   00000092   00D2               BCS      ??ScreenBrightness_Event_4
   \   00000094   0720               MOVS     R0,#+7
   7907                          if (Xtym>55) Xtym=55;
   \                     ??ScreenBrightness_Event_4:
   \   00000096   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   3828               CMP      R0,#+56
   \   0000009C   00D3               BCC      ??ScreenBrightness_Event_5
   \   0000009E   3720               MOVS     R0,#+55
   7908                          Xtym -=7;
   \                     ??ScreenBrightness_Event_5:
   \   000000A0   C01F               SUBS     R0,R0,#+7
   7909                          Xtym=(Xtym *100)/48;
   \   000000A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A4   000E               LSRS     R0,R0,#+24
   \   000000A6   6421               MOVS     R1,#+100
   \   000000A8   4843               MULS     R0,R1,R0
   \   000000AA   3021               MOVS     R1,#+48
   \   000000AC   ........           BL       __aeabi_idivmod
   7910                          if (Xtym<10) Xtym=10;                                           //ograniczeni minimalnej jasnoci wywietlacza w trybie aktywnym 
   \   000000B0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   0A28               CMP      R0,#+10
   \   000000B6   00D2               BCS      ??ScreenBrightness_Event_6
   \   000000B8   0A20               MOVS     R0,#+10
   7911                          
   7912                          char WypMaxJasnosciTMP=Xtym/2 +3;
   \                     ??ScreenBrightness_Event_6:
   \   000000BA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   ........           BL       __aeabi_idivmod
   \   000000C4   C01C               ADDS     R0,R0,#+3
   7913                          if (WypMaxJasnosciTMP>50) WypMaxJasnosciTMP=100;
   \   000000C6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C8   000E               LSRS     R0,R0,#+24
   \   000000CA   3328               CMP      R0,#+51
   \   000000CC   00D3               BCC      ??ScreenBrightness_Event_7
   \   000000CE   6420               MOVS     R0,#+100
   7914                          WypMaxJasnosci=WypMaxJasnosciTMP;
   \                     ??ScreenBrightness_Event_7:
   \   000000D0   5C49               LDR      R1,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   000000D2   0870               STRB     R0,[R1, #+0]
   7915                          if (WypMaxJasnosci<WypMinJasnosci) WypMinJasnosci=WypMaxJasnosci;
   \   000000D4   5B48               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   5C49               LDR      R1,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   000000DA   0978               LDRB     R1,[R1, #+0]
   \   000000DC   8842               CMP      R0,R1
   \   000000DE   03D2               BCS      ??ScreenBrightness_Event_8
   \   000000E0   5A48               LDR      R0,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   000000E2   5849               LDR      R1,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   000000E4   0978               LDRB     R1,[R1, #+0]
   \   000000E6   0170               STRB     R1,[R0, #+0]
   7916                          RepaintTMP=1;
   \                     ??ScreenBrightness_Event_8:
   \   000000E8   0124               MOVS     R4,#+1
   7917                          
   7918                          AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   000000EA   5548               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   000000EC   0121               MOVS     R1,#+1
   \   000000EE   0160               STR      R1,[R0, #+0]
   7919                          Set_LCD_Light_PWM_Fill(WypMaxJasnosci); 
                                 ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   000000F0   5448               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   000000F2   0078               LDRB     R0,[R0, #+0]
   \   000000F4   ........           BL       Set_LCD_Light_PWM_Fill
   7920                          AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   000000F8   5348               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   000000FA   0121               MOVS     R1,#+1
   \   000000FC   0160               STR      R1,[R0, #+0]
   7921                     }
   7922                     if ((X_down>1) && (X_down<63) && (Y_down>TNPozY-10) && (Y_down<TNPozY+5))                    //ustawienie wype³nienia podwietlenia ekranu nieaktywnego
   \                     ??ScreenBrightness_Event_3:
   \   000000FE   4B48               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   00000100   0021               MOVS     R1,#+0
   \   00000102   405E               LDRSH    R0,[R0, R1]
   \   00000104   0228               CMP      R0,#+2
   \   00000106   45DB               BLT      ??ScreenBrightness_Event_9
   \   00000108   4848               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   405E               LDRSH    R0,[R0, R1]
   \   0000010E   3F28               CMP      R0,#+63
   \   00000110   40DA               BGE      ??ScreenBrightness_Event_9
   \   00000112   4548               LDR      R0,??ScreenBrightness_Event_0  ;; Y_down
   \   00000114   0021               MOVS     R1,#+0
   \   00000116   405E               LDRSH    R0,[R0, R1]
   \   00000118   1F28               CMP      R0,#+31
   \   0000011A   3BDB               BLT      ??ScreenBrightness_Event_9
   \   0000011C   4248               LDR      R0,??ScreenBrightness_Event_0  ;; Y_down
   \   0000011E   0021               MOVS     R1,#+0
   \   00000120   405E               LDRSH    R0,[R0, R1]
   \   00000122   2D28               CMP      R0,#+45
   \   00000124   36DA               BGE      ??ScreenBrightness_Event_9
   7923                     {
   7924                          Xtym=X_down;
   \   00000126   4148               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   00000128   0088               LDRH     R0,[R0, #+0]
   7925                          if (Xtym<7) Xtym=7;
   \   0000012A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000012C   000E               LSRS     R0,R0,#+24
   \   0000012E   0728               CMP      R0,#+7
   \   00000130   00D2               BCS      ??ScreenBrightness_Event_10
   \   00000132   0720               MOVS     R0,#+7
   7926                          if (Xtym>55) Xtym=55;
   \                     ??ScreenBrightness_Event_10:
   \   00000134   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   3828               CMP      R0,#+56
   \   0000013A   00D3               BCC      ??ScreenBrightness_Event_11
   \   0000013C   3720               MOVS     R0,#+55
   7927                          Xtym -=7;
   \                     ??ScreenBrightness_Event_11:
   \   0000013E   C01F               SUBS     R0,R0,#+7
   7928                          char WypMinJasnosciTMP=(((Xtym *100)/48))/2+3;
   \   00000140   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000142   000E               LSRS     R0,R0,#+24
   \   00000144   6421               MOVS     R1,#+100
   \   00000146   4843               MULS     R0,R1,R0
   \   00000148   3021               MOVS     R1,#+48
   \   0000014A   ........           BL       __aeabi_idivmod
   \   0000014E   0221               MOVS     R1,#+2
   \   00000150   ........           BL       __aeabi_idivmod
   \   00000154   C01C               ADDS     R0,R0,#+3
   7929                          if (WypMinJasnosciTMP>50) WypMinJasnosciTMP=100;
   \   00000156   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000158   000E               LSRS     R0,R0,#+24
   \   0000015A   3328               CMP      R0,#+51
   \   0000015C   00D3               BCC      ??ScreenBrightness_Event_12
   \   0000015E   6420               MOVS     R0,#+100
   7930                          WypMinJasnosci=WypMinJasnosciTMP;
   \                     ??ScreenBrightness_Event_12:
   \   00000160   3A49               LDR      R1,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   00000162   0870               STRB     R0,[R1, #+0]
   7931                          if (WypMaxJasnosci<WypMinJasnosci) WypMaxJasnosci=WypMinJasnosci;
   \   00000164   3748               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   00000166   0078               LDRB     R0,[R0, #+0]
   \   00000168   3849               LDR      R1,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   0000016A   0978               LDRB     R1,[R1, #+0]
   \   0000016C   8842               CMP      R0,R1
   \   0000016E   03D2               BCS      ??ScreenBrightness_Event_13
   \   00000170   3448               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   00000172   3649               LDR      R1,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   00000174   0978               LDRB     R1,[R1, #+0]
   \   00000176   0170               STRB     R1,[R0, #+0]
   7932                          RepaintTMP=1;
   \                     ??ScreenBrightness_Event_13:
   \   00000178   0124               MOVS     R4,#+1
   7933                          gWypMinJasnosciTest=1;
   \   0000017A   3048               LDR      R0,??ScreenBrightness_Event_0+0x14  ;; gWypMinJasnosciTest
   \   0000017C   0121               MOVS     R1,#+1
   \   0000017E   0170               STRB     R1,[R0, #+0]
   7934                          
   7935                          AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   00000180   2F48               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   00000182   0121               MOVS     R1,#+1
   \   00000184   0160               STR      R1,[R0, #+0]
   7936                          Set_LCD_Light_PWM_Fill(WypMinJasnosci); 
                                 ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   00000186   3148               LDR      R0,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   00000188   0078               LDRB     R0,[R0, #+0]
   \   0000018A   ........           BL       Set_LCD_Light_PWM_Fill
   7937                          AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   0000018E   2E48               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   00000190   0121               MOVS     R1,#+1
   \   00000192   0160               STR      R1,[R0, #+0]
   7938                     }
   7939                     
   7940                     if ((X_up>0) && (X_up<63) && (((Y_up>TAPozY-10) && (Y_up<TAPozY+5)) ||  ((Y_up>TNPozY-10) && (Y_up<TNPozY+5))))                    //zapamiêtanie wype³nienia podwietlenia ekranu 
   \                     ??ScreenBrightness_Event_9:
   \   00000194   2748               LDR      R0,??ScreenBrightness_Event_0+0xC  ;; X_up
   \   00000196   0021               MOVS     R1,#+0
   \   00000198   405E               LDRSH    R0,[R0, R1]
   \   0000019A   0128               CMP      R0,#+1
   \   0000019C   39DB               BLT      ??ScreenBrightness_Event_2
   \   0000019E   2548               LDR      R0,??ScreenBrightness_Event_0+0xC  ;; X_up
   \   000001A0   0021               MOVS     R1,#+0
   \   000001A2   405E               LDRSH    R0,[R0, R1]
   \   000001A4   3F28               CMP      R0,#+63
   \   000001A6   34DA               BGE      ??ScreenBrightness_Event_2
   \   000001A8   2148               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   000001AA   0021               MOVS     R1,#+0
   \   000001AC   405E               LDRSH    R0,[R0, R1]
   \   000001AE   4728               CMP      R0,#+71
   \   000001B0   04DB               BLT      ??ScreenBrightness_Event_14
   \   000001B2   1F48               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   000001B4   0021               MOVS     R1,#+0
   \   000001B6   405E               LDRSH    R0,[R0, R1]
   \   000001B8   5528               CMP      R0,#+85
   \   000001BA   09DB               BLT      ??ScreenBrightness_Event_15
   \                     ??ScreenBrightness_Event_14:
   \   000001BC   1C48               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   000001BE   0021               MOVS     R1,#+0
   \   000001C0   405E               LDRSH    R0,[R0, R1]
   \   000001C2   1F28               CMP      R0,#+31
   \   000001C4   25DB               BLT      ??ScreenBrightness_Event_2
   \   000001C6   1A48               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   000001C8   0021               MOVS     R1,#+0
   \   000001CA   405E               LDRSH    R0,[R0, R1]
   \   000001CC   2D28               CMP      R0,#+45
   \   000001CE   20DA               BGE      ??ScreenBrightness_Event_2
   7941                     {
   7942                         
   7943                        //zapis do flash
   7944                        unsigned int Save = __get_interrupt_state();  
   \                     ??ScreenBrightness_Event_15:
   \   000001D0   ........           BL       __iar_get_interrupt_state
   \   000001D4   0500               MOVS     R5,R0
   7945                        __disable_interrupt();
   \   000001D6   ........           BL       __iar_disable_interrupt
   7946                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenBrightActive)), (char*) (&(WypMaxJasnosci)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001DA   0122               MOVS     R2,#+1
   \   000001DC   1949               LDR      R1,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   000001DE   1C48               LDR      R0,??ScreenBrightness_Event_0+0x28  ;; 0x13d80e
   \   000001E0   ........           BL       FlashWrite
   7947                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenBrightInactive)), (char*) (&(WypMinJasnosci)), 1);
   \   000001E4   0122               MOVS     R2,#+1
   \   000001E6   1949               LDR      R1,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   000001E8   1A48               LDR      R0,??ScreenBrightness_Event_0+0x2C  ;; 0x13d80f
   \   000001EA   ........           BL       FlashWrite
   7948                        __set_interrupt_state(Save);
   \   000001EE   2800               MOVS     R0,R5
   \   000001F0   ........           BL       __iar_set_interrupt_state
   7949                        __enable_interrupt(); 
   \   000001F4   ........           BL       __iar_enable_interrupt
   7950                        //koniec zapisu do flash
   7951                      
   7952                        
   7953                        AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   000001F8   1148               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   000001FA   0121               MOVS     R1,#+1
   \   000001FC   0160               STR      R1,[R0, #+0]
   7954                          Set_LCD_Light_PWM_Fill(WypMaxJasnosci); 
                                 ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   000001FE   1148               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   00000200   0078               LDRB     R0,[R0, #+0]
   \   00000202   ........           BL       Set_LCD_Light_PWM_Fill
   7955                          AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   00000206   1048               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   00000208   0121               MOVS     R1,#+1
   \   0000020A   0160               STR      R1,[R0, #+0]
   7956                        gWypMinJasnosciTest=0;
   \   0000020C   0B48               LDR      R0,??ScreenBrightness_Event_0+0x14  ;; gWypMinJasnosciTest
   \   0000020E   0021               MOVS     R1,#+0
   \   00000210   0170               STRB     R1,[R0, #+0]
   7957                       
   7958                     }
   7959                     
   7960                   
   7961                 }
   7962                 
   7963                
   7964                 if (RepaintTMP) MenuPaint();  
   \                     ??ScreenBrightness_Event_2:
   \   00000212   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000214   240E               LSRS     R4,R4,#+24
   \   00000216   002C               CMP      R4,#+0
   \   00000218   01D0               BEQ      ??ScreenBrightness_Event_16
   \   0000021A   ........           BL       MenuPaint
   7965              }//________________________________________________________________________
   \                     ??ScreenBrightness_Event_16:
   \   0000021E   01B0               ADD      SP,SP,#+4
   \   00000220   30BC               POP      {R4,R5}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??ScreenBrightness_Event_0:
   \   00000228   ........           DC32     Y_down
   \   0000022C   ........           DC32     X_down
   \   00000230   ........           DC32     Y_up
   \   00000234   ........           DC32     X_up
   \   00000238   ........           DC32     MenuLevel
   \   0000023C   ........           DC32     gWypMinJasnosciTest
   \   00000240   08C0FCFF           DC32     0xfffcc008
   \   00000244   ........           DC32     WypMaxJasnosci
   \   00000248   04C0FCFF           DC32     0xfffcc004
   \   0000024C   ........           DC32     WypMinJasnosci
   \   00000250   0ED81300           DC32     0x13d80e
   \   00000254   0FD81300           DC32     0x13d80f
   7966              
   7967          
   7968          
   7969              
   7970              
   7971              
   7972          //Ustawienia wygaszacza  **************************************************************************************************************
   7973          extern char g_ScreenSever_On;
   7974          extern char g_ScreenSever_Time_On;
   7975          extern char g_ScreenSever_Time_Off;
   7976          //*---------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
   7977              void ScreenSever_Paint(void)
   7978              {  
   \                     ScreenSever_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   7979                
   7980                 List_Paint(Speech[g_leng].ScreenSever,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   7BA0               ADR      R0,??ScreenSever_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   7848               LDR      R0,??ScreenSever_Paint_0+0x4  ;; 0x663
   \   00000028   784C               LDR      R4,??ScreenSever_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   784D               LDR      R5,??ScreenSever_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   784D               LDR      R5,??ScreenSever_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   7981                 
   7982                 g_Stop_Program=1;
   \   0000003C   7648               LDR      R0,??ScreenSever_Paint_0+0x14  ;; g_Stop_Program
   \   0000003E   0121               MOVS     R1,#+1
   \   00000040   0170               STRB     R1,[R0, #+0]
   7983                 
   7984                 //Speech[g_leng].RfChannel
   7985                 Label("On/off",0,6,90,10,33,1,127,0);
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   2121               MOVS     R1,#+33
   \   00000050   0A20               MOVS     R0,#+10
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   5A23               MOVS     R3,#+90
   \   00000056   0622               MOVS     R2,#+6
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   7048               LDR      R0,??ScreenSever_Paint_0+0x18  ;; `?<Constant "On/off">`
   \   0000005C   ........           BL       Label
   \   00000060   06B0               ADD      SP,SP,#+24
   7986                 if (g_ScreenSever_On==0)
   \   00000062   6F48               LDR      R0,??ScreenSever_Paint_0+0x1C  ;; g_ScreenSever_On
   \   00000064   0078               LDRB     R0,[R0, #+0]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   0AD1               BNE      ??ScreenSever_Paint_1
   7987                 {
   7988                    Zone(" ",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   0000006A   0121               MOVS     R1,#+1
   \   0000006C   1020               MOVS     R0,#+16
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   0F23               MOVS     R3,#+15
   \   00000072   5622               MOVS     R2,#+86
   \   00000074   2821               MOVS     R1,#+40
   \   00000076   63A0               ADR      R0,??ScreenSever_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000078   ........           BL       Zone
   \   0000007C   02B0               ADD      SP,SP,#+8
   \   0000007E   BDE0               B        ??ScreenSever_Paint_2
   7989                 }else{
   7990                    Zone("X",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Paint_1:
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   1020               MOVS     R0,#+16
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   0F23               MOVS     R3,#+15
   \   00000088   5622               MOVS     R2,#+86
   \   0000008A   2821               MOVS     R1,#+40
   \   0000008C   65A0               ADR      R0,??ScreenSever_Paint_0+0x20  ;; 0x58, 0x00, 0x00, 0x00
   \   0000008E   ........           BL       Zone
   \   00000092   02B0               ADD      SP,SP,#+8
   7991                
   7992                 char tmp_char[3];
   7993                 Label(Speech[g_leng].TimeOn,0,5,73,15,33,1,127,0);
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   7F21               MOVS     R1,#+127
   \   0000009C   0120               MOVS     R0,#+1
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   2121               MOVS     R1,#+33
   \   000000A2   0F20               MOVS     R0,#+15
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   4923               MOVS     R3,#+73
   \   000000A8   0522               MOVS     R2,#+5
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   5E48               LDR      R0,??ScreenSever_Paint_0+0x24  ;; 0x672
   \   000000AE   574C               LDR      R4,??ScreenSever_Paint_0+0x8  ;; g_leng
   \   000000B0   2468               LDR      R4,[R4, #+0]
   \   000000B2   574D               LDR      R5,??ScreenSever_Paint_0+0xC  ;; 0xa7d
   \   000000B4   6C43               MULS     R4,R5,R4
   \   000000B6   574D               LDR      R5,??ScreenSever_Paint_0+0x10  ;; Speech
   \   000000B8   2C19               ADDS     R4,R5,R4
   \   000000BA   2018               ADDS     R0,R4,R0
   \   000000BC   ........           BL       Label
   \   000000C0   06B0               ADD      SP,SP,#+24
   7994                 CharToStr(g_ScreenSever_Time_On, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   000000C2   0222               MOVS     R2,#+2
   \   000000C4   01A9               ADD      R1,SP,#+4
   \   000000C6   5948               LDR      R0,??ScreenSever_Paint_0+0x28  ;; g_ScreenSever_Time_On
   \   000000C8   0078               LDRB     R0,[R0, #+0]
   \   000000CA   ........           BL       CharToStr
   7995                 Label(tmp_char,1,29,54,2,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CE   82B0               SUB      SP,SP,#+8
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0090               STR      R0,[SP, #+0]
   \   000000D4   7F21               MOVS     R1,#+127
   \   000000D6   0120               MOVS     R0,#+1
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   0A21               MOVS     R1,#+10
   \   000000DC   0220               MOVS     R0,#+2
   \   000000DE   03B4               PUSH     {R0,R1}
   \   000000E0   3623               MOVS     R3,#+54
   \   000000E2   1D22               MOVS     R2,#+29
   \   000000E4   0121               MOVS     R1,#+1
   \   000000E6   07A8               ADD      R0,SP,#+28
   \   000000E8   ........           BL       Label
   \   000000EC   06B0               ADD      SP,SP,#+24
   7996                 Label(":00",0,30,54,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0020               MOVS     R0,#+0
   \   000000F2   0090               STR      R0,[SP, #+0]
   \   000000F4   7F21               MOVS     R1,#+127
   \   000000F6   0120               MOVS     R0,#+1
   \   000000F8   03B4               PUSH     {R0,R1}
   \   000000FA   0A21               MOVS     R1,#+10
   \   000000FC   0320               MOVS     R0,#+3
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   3623               MOVS     R3,#+54
   \   00000102   1E22               MOVS     R2,#+30
   \   00000104   0021               MOVS     R1,#+0
   \   00000106   4AA0               ADR      R0,??ScreenSever_Paint_0+0x2C  ;; ":00"
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
   7997                          
   7998                 
   7999                 char LabelButt[2];
   8000                 LabelButt[1]=0;
   \   0000010E   6846               MOV      R0,SP
   \   00000110   0021               MOVS     R1,#+0
   \   00000112   4170               STRB     R1,[R0, #+1]
   8001                 LabelButt[0]=30;
   \   00000114   6846               MOV      R0,SP
   \   00000116   1E21               MOVS     R1,#+30
   \   00000118   0170               STRB     R1,[R0, #+0]
   8002                 Button(LabelButt,44,47,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   1920               MOVS     R0,#+25
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   1123               MOVS     R3,#+17
   \   00000122   2F22               MOVS     R2,#+47
   \   00000124   2C21               MOVS     R1,#+44
   \   00000126   02A8               ADD      R0,SP,#+8
   \   00000128   ........           BL       Button
   \   0000012C   02B0               ADD      SP,SP,#+8
   8003                 LabelButt[0]=31;
   \   0000012E   6846               MOV      R0,SP
   \   00000130   1F21               MOVS     R1,#+31
   \   00000132   0170               STRB     R1,[R0, #+0]
   8004                 Button(LabelButt,2,47,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000134   82B0               SUB      SP,SP,#+8
   \   00000136   1920               MOVS     R0,#+25
   \   00000138   0090               STR      R0,[SP, #+0]
   \   0000013A   1123               MOVS     R3,#+17
   \   0000013C   2F22               MOVS     R2,#+47
   \   0000013E   0221               MOVS     R1,#+2
   \   00000140   02A8               ADD      R0,SP,#+8
   \   00000142   ........           BL       Button
   \   00000146   02B0               ADD      SP,SP,#+8
   8005                 
   8006                 Label(Speech[g_leng].TimeOff,0,5,34,15,33,1,127,0);
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   0020               MOVS     R0,#+0
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   7F21               MOVS     R1,#+127
   \   00000150   0120               MOVS     R0,#+1
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   2121               MOVS     R1,#+33
   \   00000156   0F20               MOVS     R0,#+15
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   2223               MOVS     R3,#+34
   \   0000015C   0522               MOVS     R2,#+5
   \   0000015E   0021               MOVS     R1,#+0
   \   00000160   3448               LDR      R0,??ScreenSever_Paint_0+0x30  ;; 0x681
   \   00000162   2A4C               LDR      R4,??ScreenSever_Paint_0+0x8  ;; g_leng
   \   00000164   2468               LDR      R4,[R4, #+0]
   \   00000166   2A4D               LDR      R5,??ScreenSever_Paint_0+0xC  ;; 0xa7d
   \   00000168   6C43               MULS     R4,R5,R4
   \   0000016A   2A4D               LDR      R5,??ScreenSever_Paint_0+0x10  ;; Speech
   \   0000016C   2C19               ADDS     R4,R5,R4
   \   0000016E   2018               ADDS     R0,R4,R0
   \   00000170   ........           BL       Label
   \   00000174   06B0               ADD      SP,SP,#+24
   8007                 CharToStr(g_ScreenSever_Time_Off, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000176   0222               MOVS     R2,#+2
   \   00000178   01A9               ADD      R1,SP,#+4
   \   0000017A   2F48               LDR      R0,??ScreenSever_Paint_0+0x34  ;; g_ScreenSever_Time_Off
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   ........           BL       CharToStr
   8008                 Label(tmp_char,1,29,16,2,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   0020               MOVS     R0,#+0
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   7F21               MOVS     R1,#+127
   \   0000018A   0120               MOVS     R0,#+1
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   1221               MOVS     R1,#+18
   \   00000190   0220               MOVS     R0,#+2
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   1023               MOVS     R3,#+16
   \   00000196   1D22               MOVS     R2,#+29
   \   00000198   0121               MOVS     R1,#+1
   \   0000019A   07A8               ADD      R0,SP,#+28
   \   0000019C   ........           BL       Label
   \   000001A0   06B0               ADD      SP,SP,#+24
   8009                 Label(":00",0,30,16,3,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A2   82B0               SUB      SP,SP,#+8
   \   000001A4   0020               MOVS     R0,#+0
   \   000001A6   0090               STR      R0,[SP, #+0]
   \   000001A8   7F21               MOVS     R1,#+127
   \   000001AA   0120               MOVS     R0,#+1
   \   000001AC   03B4               PUSH     {R0,R1}
   \   000001AE   1221               MOVS     R1,#+18
   \   000001B0   0320               MOVS     R0,#+3
   \   000001B2   03B4               PUSH     {R0,R1}
   \   000001B4   1023               MOVS     R3,#+16
   \   000001B6   1E22               MOVS     R2,#+30
   \   000001B8   0021               MOVS     R1,#+0
   \   000001BA   1DA0               ADR      R0,??ScreenSever_Paint_0+0x2C  ;; ":00"
   \   000001BC   ........           BL       Label
   \   000001C0   06B0               ADD      SP,SP,#+24
   8010                                     
   8011               
   8012                 LabelButt[1]=0;
   \   000001C2   6846               MOV      R0,SP
   \   000001C4   0021               MOVS     R1,#+0
   \   000001C6   4170               STRB     R1,[R0, #+1]
   8013                 LabelButt[0]=30;
   \   000001C8   6846               MOV      R0,SP
   \   000001CA   1E21               MOVS     R1,#+30
   \   000001CC   0170               STRB     R1,[R0, #+0]
   8014                 Button(LabelButt,44,8,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   1920               MOVS     R0,#+25
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   1123               MOVS     R3,#+17
   \   000001D6   0822               MOVS     R2,#+8
   \   000001D8   2C21               MOVS     R1,#+44
   \   000001DA   02A8               ADD      R0,SP,#+8
   \   000001DC   ........           BL       Button
   \   000001E0   02B0               ADD      SP,SP,#+8
   8015                 LabelButt[0]=31;
   \   000001E2   6846               MOV      R0,SP
   \   000001E4   1F21               MOVS     R1,#+31
   \   000001E6   0170               STRB     R1,[R0, #+0]
   8016                 Button(LabelButt,2,8,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000001E8   82B0               SUB      SP,SP,#+8
   \   000001EA   1920               MOVS     R0,#+25
   \   000001EC   0090               STR      R0,[SP, #+0]
   \   000001EE   1123               MOVS     R3,#+17
   \   000001F0   0822               MOVS     R2,#+8
   \   000001F2   0221               MOVS     R1,#+2
   \   000001F4   02A8               ADD      R0,SP,#+8
   \   000001F6   ........           BL       Button
   \   000001FA   02B0               ADD      SP,SP,#+8
   8017                 }
   8018          
   8019                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   8020              }//________________________________________________________________________
   \                     ??ScreenSever_Paint_2:
   \   000001FC   03B0               ADD      SP,SP,#+12
   \   000001FE   30BC               POP      {R4,R5}
   \   00000200   01BC               POP      {R0}
   \   00000202   0047               BX       R0               ;; return
   \                     ??ScreenSever_Paint_0:
   \   00000204   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000208   63060000           DC32     0x663
   \   0000020C   ........           DC32     g_leng
   \   00000210   7D0A0000           DC32     0xa7d
   \   00000214   ........           DC32     Speech
   \   00000218   ........           DC32     g_Stop_Program
   \   0000021C   ........           DC32     `?<Constant "On/off">`
   \   00000220   ........           DC32     g_ScreenSever_On
   \   00000224   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   00000228   72060000           DC32     0x672
   \   0000022C   ........           DC32     g_ScreenSever_Time_On
   \   00000230   3A303000           DC8      ":00"
   \   00000234   81060000           DC32     0x681
   \   00000238   ........           DC32     g_ScreenSever_Time_Off
   8021          
   8022          
   8023              
   8024          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8025              void ScreenSever_Event(void)
   8026              {
   \                     ScreenSever_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   8027                char RepaintTMP=0;
   \   00000002   0024               MOVS     R4,#+0
   8028                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   6848               LDR      R0,??ScreenSever_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   6848               LDR      R0,??ScreenSever_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   6748               LDR      R0,??ScreenSever_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   6748               LDR      R0,??ScreenSever_Event_0+0xC  ;; X_up
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   405F               LDRSH    R0,[R0, R5]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   8029                if (ans<0)  
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   24D5               BPL      ??ScreenSever_Event_1
   8030                 {
   8031                    //zapis do flash
   8032                        unsigned int Save = __get_interrupt_state();  
   \   00000032   ........           BL       __iar_get_interrupt_state
   \   00000036   0400               MOVS     R4,R0
   8033                        __disable_interrupt();
   \   00000038   ........           BL       __iar_disable_interrupt
   8034                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)),0, &g_ScreenSever_On,1);
   8035                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)),0, &g_ScreenSever_Time_On,1);
   8036                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)),0, &g_ScreenSever_Time_Off,1);
   8037                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)), (char*) (&(g_ScreenSever_On)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000003C   0122               MOVS     R2,#+1
   \   0000003E   6149               LDR      R1,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   00000040   6148               LDR      R0,??ScreenSever_Event_0+0x14  ;; 0x13d7ea
   \   00000042   ........           BL       FlashWrite
   8038                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   6049               LDR      R1,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   0000004A   6148               LDR      R0,??ScreenSever_Event_0+0x1C  ;; 0x13d7eb
   \   0000004C   ........           BL       FlashWrite
   8039                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   5E49               LDR      R1,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000054   5F48               LDR      R0,??ScreenSever_Event_0+0x20  ;; 0x13d7ec
   \   00000056   ........           BL       FlashWrite
   8040                        __set_interrupt_state(Save);
   \   0000005A   2000               MOVS     R0,R4
   \   0000005C   ........           BL       __iar_set_interrupt_state
   8041                        __enable_interrupt(); 
   \   00000060   ........           BL       __iar_enable_interrupt
   8042                        //koniec zapisu do flash
   8043                   
   8044                    g_Stop_Program=0;
   \   00000064   5C48               LDR      R0,??ScreenSever_Event_0+0x24  ;; g_Stop_Program
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   0170               STRB     R1,[R0, #+0]
   8045                    MenuLevel=(MenuLevel/10);
   \   0000006A   5C48               LDR      R0,??ScreenSever_Event_0+0x28  ;; MenuLevel
   \   0000006C   0068               LDR      R0,[R0, #+0]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   5949               LDR      R1,??ScreenSever_Event_0+0x28  ;; MenuLevel
   \   00000076   0860               STR      R0,[R1, #+0]
   8046                    RepaintTMP=1;
   \   00000078   0124               MOVS     R4,#+1
   \   0000007A   91E0               B        ??ScreenSever_Event_2
   8047                 }else{
   8048                
   8049                   if (g_ScreenSever_On==1)
   \                     ??ScreenSever_Event_1:
   \   0000007C   5148               LDR      R0,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   0000007E   0078               LDRB     R0,[R0, #+0]
   \   00000080   0128               CMP      R0,#+1
   \   00000082   77D1               BNE      ??ScreenSever_Event_3
   8050                   {
   8051                    if (Zone("X",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000084   0121               MOVS     R1,#+1
   \   00000086   1020               MOVS     R0,#+16
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   0F23               MOVS     R3,#+15
   \   0000008C   5622               MOVS     R2,#+86
   \   0000008E   2821               MOVS     R1,#+40
   \   00000090   53A0               ADR      R0,??ScreenSever_Event_0+0x2C  ;; 0x58, 0x00, 0x00, 0x00
   \   00000092   ........           BL       Zone
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0128               CMP      R0,#+1
   \   0000009A   03D1               BNE      ??ScreenSever_Event_4
   8052                    {
   8053                      g_ScreenSever_On=0;
   \   0000009C   4948               LDR      R0,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   0000009E   0021               MOVS     R1,#+0
   \   000000A0   0170               STRB     R1,[R0, #+0]
   8054                      RepaintTMP=1;
   \   000000A2   0124               MOVS     R4,#+1
   8055                    }
   8056                    
   8057                    char LabelButt[2];
   8058                      LabelButt[1]=0;
   \                     ??ScreenSever_Event_4:
   \   000000A4   6846               MOV      R0,SP
   \   000000A6   0021               MOVS     R1,#+0
   \   000000A8   4170               STRB     R1,[R0, #+1]
   8059                      LabelButt[0]=30;
   \   000000AA   6846               MOV      R0,SP
   \   000000AC   1E21               MOVS     R1,#+30
   \   000000AE   0170               STRB     R1,[R0, #+0]
   8060                      if (Button(LabelButt,44,47,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1920               MOVS     R0,#+25
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1123               MOVS     R3,#+17
   \   000000B8   2F22               MOVS     R2,#+47
   \   000000BA   2C21               MOVS     R1,#+44
   \   000000BC   02A8               ADD      R0,SP,#+8
   \   000000BE   ........           BL       Button
   \   000000C2   02B0               ADD      SP,SP,#+8
   \   000000C4   0128               CMP      R0,#+1
   \   000000C6   09D1               BNE      ??ScreenSever_Event_5
   8061                      {
   8062                        if (g_ScreenSever_Time_On<23) 
   \   000000C8   4048               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000CA   0078               LDRB     R0,[R0, #+0]
   \   000000CC   1728               CMP      R0,#+23
   \   000000CE   04D2               BCS      ??ScreenSever_Event_6
   8063                        {
   8064                          g_ScreenSever_Time_On++;
   \   000000D0   3E48               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000D2   3E49               LDR      R1,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000D4   0978               LDRB     R1,[R1, #+0]
   \   000000D6   491C               ADDS     R1,R1,#+1
   \   000000D8   0170               STRB     R1,[R0, #+0]
   8065                        }
   8066                        RepaintTMP=1;
   \                     ??ScreenSever_Event_6:
   \   000000DA   0124               MOVS     R4,#+1
   8067                      }
   8068                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_5:
   \   000000DC   6846               MOV      R0,SP
   \   000000DE   1F21               MOVS     R1,#+31
   \   000000E0   0170               STRB     R1,[R0, #+0]
   8069                      if (Button(LabelButt,2,47,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   1920               MOVS     R0,#+25
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   1123               MOVS     R3,#+17
   \   000000EA   2F22               MOVS     R2,#+47
   \   000000EC   0221               MOVS     R1,#+2
   \   000000EE   02A8               ADD      R0,SP,#+8
   \   000000F0   ........           BL       Button
   \   000000F4   02B0               ADD      SP,SP,#+8
   \   000000F6   0128               CMP      R0,#+1
   \   000000F8   09D1               BNE      ??ScreenSever_Event_7
   8070                      {
   8071                         if (g_ScreenSever_Time_On>0) g_ScreenSever_Time_On--;
   \   000000FA   3448               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000FC   0078               LDRB     R0,[R0, #+0]
   \   000000FE   0128               CMP      R0,#+1
   \   00000100   04D3               BCC      ??ScreenSever_Event_8
   \   00000102   3248               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000104   3149               LDR      R1,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000106   0978               LDRB     R1,[R1, #+0]
   \   00000108   491E               SUBS     R1,R1,#+1
   \   0000010A   0170               STRB     R1,[R0, #+0]
   8072                        RepaintTMP=1;
   \                     ??ScreenSever_Event_8:
   \   0000010C   0124               MOVS     R4,#+1
   8073                      }
   8074                      LabelButt[0]=30;
   \                     ??ScreenSever_Event_7:
   \   0000010E   6846               MOV      R0,SP
   \   00000110   1E21               MOVS     R1,#+30
   \   00000112   0170               STRB     R1,[R0, #+0]
   8075                      if (Button(LabelButt,44,8,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   1920               MOVS     R0,#+25
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   1123               MOVS     R3,#+17
   \   0000011C   0822               MOVS     R2,#+8
   \   0000011E   2C21               MOVS     R1,#+44
   \   00000120   02A8               ADD      R0,SP,#+8
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   \   00000128   0128               CMP      R0,#+1
   \   0000012A   09D1               BNE      ??ScreenSever_Event_9
   8076                      {
   8077                        if (g_ScreenSever_Time_Off<23) g_ScreenSever_Time_Off++;
   \   0000012C   2D48               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   0000012E   0078               LDRB     R0,[R0, #+0]
   \   00000130   1728               CMP      R0,#+23
   \   00000132   04D2               BCS      ??ScreenSever_Event_10
   \   00000134   2B48               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000136   2B49               LDR      R1,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000138   0978               LDRB     R1,[R1, #+0]
   \   0000013A   491C               ADDS     R1,R1,#+1
   \   0000013C   0170               STRB     R1,[R0, #+0]
   8078                        RepaintTMP=1;
   \                     ??ScreenSever_Event_10:
   \   0000013E   0124               MOVS     R4,#+1
   8079                      }
   8080                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_9:
   \   00000140   6846               MOV      R0,SP
   \   00000142   1F21               MOVS     R1,#+31
   \   00000144   0170               STRB     R1,[R0, #+0]
   8081                      if (Button(LabelButt,2,8,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   1920               MOVS     R0,#+25
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   1123               MOVS     R3,#+17
   \   0000014E   0822               MOVS     R2,#+8
   \   00000150   0221               MOVS     R1,#+2
   \   00000152   02A8               ADD      R0,SP,#+8
   \   00000154   ........           BL       Button
   \   00000158   02B0               ADD      SP,SP,#+8
   \   0000015A   0128               CMP      R0,#+1
   \   0000015C   20D1               BNE      ??ScreenSever_Event_2
   8082                      {
   8083                         if (g_ScreenSever_Time_Off>0) 
   \   0000015E   2148               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000160   0078               LDRB     R0,[R0, #+0]
   \   00000162   0128               CMP      R0,#+1
   \   00000164   04D3               BCC      ??ScreenSever_Event_11
   8084                         {
   8085                           g_ScreenSever_Time_Off--;
   \   00000166   1F48               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000168   1E49               LDR      R1,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   0000016A   0978               LDRB     R1,[R1, #+0]
   \   0000016C   491E               SUBS     R1,R1,#+1
   \   0000016E   0170               STRB     R1,[R0, #+0]
   8086                         }
   8087                        RepaintTMP=1;
   \                     ??ScreenSever_Event_11:
   \   00000170   0124               MOVS     R4,#+1
   \   00000172   15E0               B        ??ScreenSever_Event_2
   8088                      }
   8089                   }else{
   8090                     if (Zone(" ",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Event_3:
   \   00000174   0121               MOVS     R1,#+1
   \   00000176   1020               MOVS     R0,#+16
   \   00000178   03B4               PUSH     {R0,R1}
   \   0000017A   0F23               MOVS     R3,#+15
   \   0000017C   5622               MOVS     R2,#+86
   \   0000017E   2821               MOVS     R1,#+40
   \   00000180   19A0               ADR      R0,??ScreenSever_Event_0+0x34  ;; 0x20, 0x00, 0x00, 0x00
   \   00000182   ........           BL       Zone
   \   00000186   02B0               ADD      SP,SP,#+8
   \   00000188   0128               CMP      R0,#+1
   \   0000018A   09D1               BNE      ??ScreenSever_Event_2
   8091                    {
   8092                      g_ScreenSever_On=1;
   \   0000018C   0D48               LDR      R0,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   0000018E   0121               MOVS     R1,#+1
   \   00000190   0170               STRB     R1,[R0, #+0]
   8093                      g_ScreenSever_Time_On=0;
   \   00000192   0E48               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000194   0021               MOVS     R1,#+0
   \   00000196   0170               STRB     R1,[R0, #+0]
   8094                      g_ScreenSever_Time_Off=0;
   \   00000198   1248               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   0170               STRB     R1,[R0, #+0]
   8095                      RepaintTMP=1;
   \   0000019E   0124               MOVS     R4,#+1
   8096                    }
   8097                   }
   8098                   
   8099                   
   8100                 }
   8101                 
   8102               
   8103                
   8104                 if (RepaintTMP) MenuPaint();  
   \                     ??ScreenSever_Event_2:
   \   000001A0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001A2   240E               LSRS     R4,R4,#+24
   \   000001A4   002C               CMP      R4,#+0
   \   000001A6   01D0               BEQ      ??ScreenSever_Event_12
   \   000001A8   ........           BL       MenuPaint
   8105                 
   8106               
   8107              }//________________________________________________________________________
   \                     ??ScreenSever_Event_12:
   \   000001AC   01B0               ADD      SP,SP,#+4
   \   000001AE   30BC               POP      {R4,R5}
   \   000001B0   01BC               POP      {R0}
   \   000001B2   0047               BX       R0               ;; return
   \                     ??ScreenSever_Event_0:
   \   000001B4   ........           DC32     Y_down
   \   000001B8   ........           DC32     X_down
   \   000001BC   ........           DC32     Y_up
   \   000001C0   ........           DC32     X_up
   \   000001C4   ........           DC32     g_ScreenSever_On
   \   000001C8   EAD71300           DC32     0x13d7ea
   \   000001CC   ........           DC32     g_ScreenSever_Time_On
   \   000001D0   EBD71300           DC32     0x13d7eb
   \   000001D4   ECD71300           DC32     0x13d7ec
   \   000001D8   ........           DC32     g_Stop_Program
   \   000001DC   ........           DC32     MenuLevel
   \   000001E0   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   000001E4   ........           DC32     g_ScreenSever_Time_Off
   \   000001E8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   8108              
   8109              
   8110              
   8111          //Ustawienia jêzyka******************************************************************************************************************
   8112          
   8113                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8114                void MasterSlave_Paint(void)
   8115                {  
   \                     MasterSlave_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   8116                    //char Y=3;
   8117                    int Y_tmp = 66;   //przesuniêcie w dó³
   \   00000002   4224               MOVS     R4,#+66
   8118          
   8119                    List_Paint("Mode",2,15,Y_tmp,7,0,"Master ", "Slave ",0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   1549               LDR      R1,??MasterSlave_Paint_0  ;; `?<Constant "Slave ">`
   \   00000018   1548               LDR      R0,??MasterSlave_Paint_0+0x4  ;; `?<Constant "Master ">`
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   0720               MOVS     R0,#+7
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   2300               MOVS     R3,R4
   \   00000024   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000026   1B0E               LSRS     R3,R3,#+24
   \   00000028   0F22               MOVS     R2,#+15
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   1148               LDR      R0,??MasterSlave_Paint_0+0x8  ;; `?<Constant "Mode">`
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   8120                
   8121                    
   8122                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000034   6846               MOV      R0,SP
   \   00000036   1049               LDR      R1,??MasterSlave_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_9`
   \   00000038   2CC9               LDM      R1!,{R2,R3,R5}
   \   0000003A   2CC0               STM      R0!,{R2,R3,R5}
   \   0000003C   0C39               SUBS     R1,R1,#+12
   \   0000003E   0C38               SUBS     R0,R0,#+12
   8123                 
   8124                  
   8125                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(SlaveMode)),8,10); 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0A20               MOVS     R0,#+10
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0823               MOVS     R3,#+8
   \   00000048   6120               MOVS     R0,#+97
   \   0000004A   001B               SUBS     R0,R0,R4
   \   0000004C   0B49               LDR      R1,??MasterSlave_Paint_0+0x10  ;; SlaveMode
   \   0000004E   0978               LDRB     R1,[R1, #+0]
   \   00000050   0F22               MOVS     R2,#+15
   \   00000052   5143               MULS     R1,R2,R1
   \   00000054   421A               SUBS     R2,R0,R1
   \   00000056   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000058   120E               LSRS     R2,R2,#+24
   \   0000005A   2D21               MOVS     R1,#+45
   \   0000005C   02A8               ADD      R0,SP,#+8
   \   0000005E   ........           BL       CopyToCanvasPoint
   \   00000062   02B0               ADD      SP,SP,#+8
   8126                    
   8127                }//________________________________________________________________________
   \   00000064   03B0               ADD      SP,SP,#+12
   \   00000066   30BC               POP      {R4,R5}
   \   00000068   01BC               POP      {R0}
   \   0000006A   0047               BX       R0               ;; return
   \                     ??MasterSlave_Paint_0:
   \   0000006C   ........           DC32     `?<Constant "Slave ">`
   \   00000070   ........           DC32     `?<Constant "Master ">`
   \   00000074   ........           DC32     `?<Constant "Mode">`
   \   00000078   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_9`
   \   0000007C   ........           DC32     SlaveMode
   8128          
   8129          
   8130          
   8131                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8132                void MasterSlave_Event(void)
   8133                {
   \                     MasterSlave_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8134                  int ans;
   8135           
   8136                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,66); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   4221               MOVS     R1,#+66
   \   00000004   0720               MOVS     R0,#+7
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   6048               LDR      R0,??MasterSlave_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   5F48               LDR      R0,??MasterSlave_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   5F48               LDR      R0,??MasterSlave_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   5E48               LDR      R0,??MasterSlave_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   8137            
   8138                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   00D1               BNE      .+4
   \   00000030   98E0               B        ??MasterSlave_Event_1
   8139                    {
   8140                      if ((ans>0) && (ans<3))
   \   00000032   0128               CMP      R0,#+1
   \   00000034   00DA               BGE      .+4
   \   00000036   A8E0               B        ??MasterSlave_Event_2
   \   00000038   0328               CMP      R0,#+3
   \   0000003A   00DB               BLT      .+4
   \   0000003C   A5E0               B        ??MasterSlave_Event_2
   8141                      {
   8142                        SlaveMode=ans-1;
   \   0000003E   5849               LDR      R1,??MasterSlave_Event_0+0x10  ;; SlaveMode
   \   00000040   401E               SUBS     R0,R0,#+1
   \   00000042   0870               STRB     R0,[R1, #+0]
   8143                        
   8144                        //zapis do flash
   8145                        unsigned int Save = __get_interrupt_state();  
   \   00000044   ........           BL       __iar_get_interrupt_state
   \   00000048   0400               MOVS     R4,R0
   8146                        __disable_interrupt();
   \   0000004A   ........           BL       __iar_disable_interrupt
   8147                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)),0, &SlaveMode,1);
   8148                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)), (char*) (&(SlaveMode)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000004E   0122               MOVS     R2,#+1
   \   00000050   5349               LDR      R1,??MasterSlave_Event_0+0x10  ;; SlaveMode
   \   00000052   5448               LDR      R0,??MasterSlave_Event_0+0x14  ;; 0x13d7e8
   \   00000054   ........           BL       FlashWrite
   8149                        __set_interrupt_state(Save);
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   ........           BL       __iar_set_interrupt_state
   8150                        __enable_interrupt(); 
   \   0000005E   ........           BL       __iar_enable_interrupt
   8151                        //koniec zapisu do flash
   8152                        
   8153                        if (!AT91C_IFLASH_MEM->Config.SlaveMode) //je¿eli master 
   \   00000062   5048               LDR      R0,??MasterSlave_Event_0+0x14  ;; 0x13d7e8
   \   00000064   0078               LDRB     R0,[R0, #+0]
   \   00000066   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   0028               CMP      R0,#+0
   \   0000006C   13D1               BNE      ??MasterSlave_Event_3
   8154                        {
   8155                          RF_Status.MasterMode=1;
   \   0000006E   4E48               LDR      R0,??MasterSlave_Event_0+0x18  ;; RF_Status + 13
   \   00000070   0121               MOVS     R1,#+1
   \   00000072   0170               STRB     R1,[R0, #+0]
   8156                          _RF_EnableRX(); 
                                 ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000074   ........           BL       _RF_EnableRX
   8157                         for (char i=0; i<NumberNeurons; i++) TransQuality.Mensur[i]=0; 
   \   00000078   0020               MOVS     R0,#+0
   \                     ??MasterSlave_Event_4:
   \   0000007A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000007C   000E               LSRS     R0,R0,#+24
   \   0000007E   2328               CMP      R0,#+35
   \   00000080   0CD2               BCS      ??MasterSlave_Event_5
   \   00000082   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000084   000E               LSRS     R0,R0,#+24
   \   00000086   0421               MOVS     R1,#+4
   \   00000088   4143               MULS     R1,R0,R1
   \   0000008A   484A               LDR      R2,??MasterSlave_Event_0+0x1C  ;; TransQuality
   \   0000008C   5118               ADDS     R1,R2,R1
   \   0000008E   0022               MOVS     R2,#+0
   \   00000090   CA64               STR      R2,[R1, #+76]
   \   00000092   401C               ADDS     R0,R0,#+1
   \   00000094   F1E7               B        ??MasterSlave_Event_4
   8158                        }else{
   8159                          RF_Status.MasterMode=0; 
   \                     ??MasterSlave_Event_3:
   \   00000096   4448               LDR      R0,??MasterSlave_Event_0+0x18  ;; RF_Status + 13
   \   00000098   0021               MOVS     R1,#+0
   \   0000009A   0170               STRB     R1,[R0, #+0]
   8160                        }
   8161                           AT91PS_MEM pAT91C_IFLASH_MEM=AT91C_IFLASH_MEM;
   \                     ??MasterSlave_Event_5:
   \   0000009C   9820               MOVS     R0,#+152
   \   0000009E   4003               LSLS     R0,R0,#+13       ;; #+1245184
   8162                          RF_Status.Ch=pAT91C_IFLASH_MEM->Config.RF_channel;
   \   000000A0   4349               LDR      R1,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   000000A2   444A               LDR      R2,??MasterSlave_Event_0+0x24  ;; 0xd7e6
   \   000000A4   805C               LDRB     R0,[R0, R2]
   \   000000A6   0870               STRB     R0,[R1, #+0]
   8163                          SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
                                 ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000A8   0221               MOVS     R1,#+2
   \   000000AA   0C00               MOVS     R4,R1
   \   000000AC   4048               LDR      R0,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   000000AE   0078               LDRB     R0,[R0, #+0]
   \   000000B0   ........           BL       __aeabi_ui2d
   \   000000B4   404A               LDR      R2,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000B6   414B               LDR      R3,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000B8   ........           BL       __aeabi_dmul
   \   000000BC   404A               LDR      R2,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000BE   414B               LDR      R3,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000C0   ........           BL       __aeabi_dadd
   \   000000C4   0022               MOVS     R2,#+0
   \   000000C6   404B               LDR      R3,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   000000C8   ........           BL       __aeabi_dmul
   \   000000CC   0022               MOVS     R2,#+0
   \   000000CE   3F4B               LDR      R3,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   000000D0   ........           BL       __aeabi_dadd
   \   000000D4   ........           BL       __aeabi_d2iz
   \   000000D8   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000DA   0014               ASRS     R0,R0,#+16
   \   000000DC   A021               MOVS     R1,#+160
   \   000000DE   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000E0   0143               ORRS     R1,R1,R0
   \   000000E2   0800               MOVS     R0,R1
   \   000000E4   2100               MOVS     R1,R4
   \   000000E6   ........           BL       SPI_SendWord
   \   000000EA   23E0               B        ??MasterSlave_Event_6
   8164                          while (RF_CheckChannel())
   8165                          {
   8166                            if (RF_Status.Ch<RF_ChannelQuanti-1) {RF_Status.Ch++;} else {RF_Status.Ch=1;}
   \                     ??MasterSlave_Event_7:
   \   000000EC   3048               LDR      R0,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   000000EE   0121               MOVS     R1,#+1
   \   000000F0   0170               STRB     R1,[R0, #+0]
   8167                            SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
   \                     ??MasterSlave_Event_8:
   \   000000F2   0221               MOVS     R1,#+2
   \   000000F4   0C00               MOVS     R4,R1
   \   000000F6   2E48               LDR      R0,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   000000F8   0078               LDRB     R0,[R0, #+0]
   \   000000FA   ........           BL       __aeabi_ui2d
   \   000000FE   2E4A               LDR      R2,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   00000100   2E4B               LDR      R3,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   00000102   ........           BL       __aeabi_dmul
   \   00000106   2E4A               LDR      R2,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   00000108   2E4B               LDR      R3,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   0000010A   ........           BL       __aeabi_dadd
   \   0000010E   0022               MOVS     R2,#+0
   \   00000110   2D4B               LDR      R3,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   00000112   ........           BL       __aeabi_dmul
   \   00000116   0022               MOVS     R2,#+0
   \   00000118   2C4B               LDR      R3,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   0000011A   ........           BL       __aeabi_dadd
   \   0000011E   ........           BL       __aeabi_d2iz
   \   00000122   0100               MOVS     R1,R0
   \   00000124   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000126   0914               ASRS     R1,R1,#+16
   \   00000128   A020               MOVS     R0,#+160
   \   0000012A   0002               LSLS     R0,R0,#+8        ;; #+40960
   \   0000012C   0843               ORRS     R0,R0,R1
   \   0000012E   2100               MOVS     R1,R4
   \   00000130   ........           BL       SPI_SendWord
   \                     ??MasterSlave_Event_6:
   \   00000134   ........           BL       RF_CheckChannel
   \   00000138   0028               CMP      R0,#+0
   \   0000013A   09D0               BEQ      ??MasterSlave_Event_9
   \   0000013C   1C48               LDR      R0,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   0000013E   0078               LDRB     R0,[R0, #+0]
   \   00000140   2728               CMP      R0,#+39
   \   00000142   D3D2               BCS      ??MasterSlave_Event_7
   \   00000144   1A48               LDR      R0,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   00000146   1A49               LDR      R1,??MasterSlave_Event_0+0x20  ;; RF_Status + 14
   \   00000148   0978               LDRB     R1,[R1, #+0]
   \   0000014A   491C               ADDS     R1,R1,#+1
   \   0000014C   0170               STRB     R1,[R0, #+0]
   \   0000014E   D0E7               B        ??MasterSlave_Event_8
   8168                          } 
   8169                        
   8170                        MenuLevel=(MenuLevel/10);
   \                     ??MasterSlave_Event_9:
   \   00000150   1F48               LDR      R0,??MasterSlave_Event_0+0x40  ;; MenuLevel
   \   00000152   0068               LDR      R0,[R0, #+0]
   \   00000154   0A21               MOVS     R1,#+10
   \   00000156   ........           BL       __aeabi_idivmod
   \   0000015A   1D49               LDR      R1,??MasterSlave_Event_0+0x40  ;; MenuLevel
   \   0000015C   0860               STR      R0,[R1, #+0]
   8171                        MenuPaint();
   \   0000015E   ........           BL       MenuPaint
   \   00000162   12E0               B        ??MasterSlave_Event_2
   8172                      }
   8173                    } 
   8174                  else
   8175                    {
   8176                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MasterSlave_Event_1:
   \   00000164   0D48               LDR      R0,??MasterSlave_Event_0+0xC  ;; X_up
   \   00000166   0021               MOVS     R1,#+0
   \   00000168   405E               LDRSH    R0,[R0, R1]
   \   0000016A   0128               CMP      R0,#+1
   \   0000016C   0DDB               BLT      ??MasterSlave_Event_2
   \   0000016E   0A48               LDR      R0,??MasterSlave_Event_0+0x8  ;; Y_up
   \   00000170   0021               MOVS     R1,#+0
   \   00000172   405E               LDRSH    R0,[R0, R1]
   \   00000174   0128               CMP      R0,#+1
   \   00000176   08DB               BLT      ??MasterSlave_Event_2
   8177                      {
   8178                        MenuLevel=(MenuLevel/10);
   \   00000178   1548               LDR      R0,??MasterSlave_Event_0+0x40  ;; MenuLevel
   \   0000017A   0068               LDR      R0,[R0, #+0]
   \   0000017C   0A21               MOVS     R1,#+10
   \   0000017E   ........           BL       __aeabi_idivmod
   \   00000182   1349               LDR      R1,??MasterSlave_Event_0+0x40  ;; MenuLevel
   \   00000184   0860               STR      R0,[R1, #+0]
   8179                        MenuPaint();
   \   00000186   ........           BL       MenuPaint
   8180                      }
   8181                    }
   8182                }//_______________________________________________________________________
   \                     ??MasterSlave_Event_2:
   \   0000018A   10BC               POP      {R4}
   \   0000018C   01BC               POP      {R0}
   \   0000018E   0047               BX       R0               ;; return
   \                     ??MasterSlave_Event_0:
   \   00000190   ........           DC32     Y_down
   \   00000194   ........           DC32     X_down
   \   00000198   ........           DC32     Y_up
   \   0000019C   ........           DC32     X_up
   \   000001A0   ........           DC32     SlaveMode
   \   000001A4   E8D71300           DC32     0x13d7e8
   \   000001A8   ........           DC32     RF_Status + 13
   \   000001AC   ........           DC32     TransQuality
   \   000001B0   ........           DC32     RF_Status + 14
   \   000001B4   E6D70000           DC32     0xd7e6
   \   000001B8   33333333           DC32     0x33333333
   \   000001BC   3333D33F           DC32     0x3fd33333
   \   000001C0   C3F5285C           DC32     0x5c28f5c3
   \   000001C4   8FE28A40           DC32     0x408ae28f
   \   000001C8   00006940           DC32     0x40690000
   \   000001CC   00FF04C1           DC32     0xc104ff00
   \   000001D0   ........           DC32     MenuLevel
   8183          
   8184              
   8185              
   8186              
   8187           
   8188          //Ustawienia kana³u transmisji WiFi  **************************************************************************************************************
   8189          
   8190              //*----------------------------------------------------------------------------

   \                                 In section .bss, align 1
   8191              char RF_ChOkBlock=0;
   \                     RF_ChOkBlock:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   8192              void RF_Channel_Paint(void)
   8193              {  
   \                     RF_Channel_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   8194                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   63A0               ADR      R0,??RF_Channel_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   6048               LDR      R0,??RF_Channel_Paint_0+0x4  ;; 0x645
   \   00000028   604C               LDR      R4,??RF_Channel_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   604D               LDR      R5,??RF_Channel_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   604D               LDR      R5,??RF_Channel_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   8195                if (!AT91C_IFLASH_MEM->Config.SlaveMode)  //je¿eli tryb master
   \   0000003C   5E48               LDR      R0,??RF_Channel_Paint_0+0x14  ;; 0x13d7e8
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000042   000E               LSRS     R0,R0,#+24
   \   00000044   0028               CMP      R0,#+0
   \   00000046   7BD1               BNE      ??RF_Channel_Paint_1
   8196                {
   8197                 _RF_EnableRX();
                        ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000048   ........           BL       _RF_EnableRX
   8198                 g_Stop_Program=1;
   \   0000004C   5B48               LDR      R0,??RF_Channel_Paint_0+0x18  ;; g_Stop_Program
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   0170               STRB     R1,[R0, #+0]
   8199                 
   8200                 //Speech[g_leng].RfChannel
   8201                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   7F21               MOVS     R1,#+127
   \   0000005A   0120               MOVS     R0,#+1
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   2121               MOVS     R1,#+33
   \   00000060   0A20               MOVS     R0,#+10
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   5A23               MOVS     R3,#+90
   \   00000066   0322               MOVS     R2,#+3
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   4F48               LDR      R0,??RF_Channel_Paint_0+0x4  ;; 0x645
   \   0000006C   4F4C               LDR      R4,??RF_Channel_Paint_0+0x8  ;; g_leng
   \   0000006E   2468               LDR      R4,[R4, #+0]
   \   00000070   4F4D               LDR      R5,??RF_Channel_Paint_0+0xC  ;; 0xa7d
   \   00000072   6C43               MULS     R4,R5,R4
   \   00000074   4F4D               LDR      R5,??RF_Channel_Paint_0+0x10  ;; Speech
   \   00000076   2C19               ADDS     R4,R5,R4
   \   00000078   2018               ADDS     R0,R4,R0
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   8202            
   8203                 char tmp_char[3];
   8204                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000080   0222               MOVS     R2,#+2
   \   00000082   01A9               ADD      R1,SP,#+4
   \   00000084   4E48               LDR      R0,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   00000086   0078               LDRB     R0,[R0, #+0]
   \   00000088   ........           BL       CharToStr
   8205                 
   8206                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   2121               MOVS     R1,#+33
   \   0000009A   0220               MOVS     R0,#+2
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   4D23               MOVS     R3,#+77
   \   000000A0   1E22               MOVS     R2,#+30
   \   000000A2   0121               MOVS     R1,#+1
   \   000000A4   07A8               ADD      R0,SP,#+28
   \   000000A6   ........           BL       Label
   \   000000AA   06B0               ADD      SP,SP,#+24
   8207                    
   8208                 
   8209                 char LabelButt[2];
   8210                 LabelButt[1]=0;
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   4170               STRB     R1,[R0, #+1]
   8211                 LabelButt[0]=30;
   \   000000B2   6846               MOV      R0,SP
   \   000000B4   1E21               MOVS     R1,#+30
   \   000000B6   0170               STRB     R1,[R0, #+0]
   8212                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   1920               MOVS     R0,#+25
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   1323               MOVS     R3,#+19
   \   000000C0   3022               MOVS     R2,#+48
   \   000000C2   2121               MOVS     R1,#+33
   \   000000C4   02A8               ADD      R0,SP,#+8
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   8213                 LabelButt[0]=31;
   \   000000CC   6846               MOV      R0,SP
   \   000000CE   1F21               MOVS     R1,#+31
   \   000000D0   0170               STRB     R1,[R0, #+0]
   8214                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000D2   82B0               SUB      SP,SP,#+8
   \   000000D4   1920               MOVS     R0,#+25
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   1323               MOVS     R3,#+19
   \   000000DA   3022               MOVS     R2,#+48
   \   000000DC   0C21               MOVS     R1,#+12
   \   000000DE   02A8               ADD      R0,SP,#+8
   \   000000E0   ........           BL       Button
   \   000000E4   02B0               ADD      SP,SP,#+8
   8215                 
   8216                 if ((RF_ChOkBlock) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000E6   3748               LDR      R0,??RF_Channel_Paint_0+0x20  ;; RF_ChOkBlock
   \   000000E8   0078               LDRB     R0,[R0, #+0]
   \   000000EA   0028               CMP      R0,#+0
   \   000000EC   1DD0               BEQ      ??RF_Channel_Paint_2
   \   000000EE   3648               LDR      R0,??RF_Channel_Paint_0+0x24  ;; RF_Status + 14
   \   000000F0   0078               LDRB     R0,[R0, #+0]
   \   000000F2   3349               LDR      R1,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   000000F4   0978               LDRB     R1,[R1, #+0]
   \   000000F6   8842               CMP      R0,R1
   \   000000F8   17D0               BEQ      ??RF_Channel_Paint_2
   8217                 {
   8218                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0020               MOVS     R0,#+0
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   7F21               MOVS     R1,#+127
   \   00000102   0120               MOVS     R0,#+1
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   2121               MOVS     R1,#+33
   \   00000108   0E20               MOVS     R0,#+14
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   1E23               MOVS     R3,#+30
   \   0000010E   0622               MOVS     R2,#+6
   \   00000110   0021               MOVS     R1,#+0
   \   00000112   2E48               LDR      R0,??RF_Channel_Paint_0+0x28  ;; 0x654
   \   00000114   254C               LDR      R4,??RF_Channel_Paint_0+0x8  ;; g_leng
   \   00000116   2468               LDR      R4,[R4, #+0]
   \   00000118   254D               LDR      R5,??RF_Channel_Paint_0+0xC  ;; 0xa7d
   \   0000011A   6C43               MULS     R4,R5,R4
   \   0000011C   254D               LDR      R5,??RF_Channel_Paint_0+0x10  ;; Speech
   \   0000011E   2C19               ADDS     R4,R5,R4
   \   00000120   2018               ADDS     R0,R4,R0
   \   00000122   ........           BL       Label
   \   00000126   06B0               ADD      SP,SP,#+24
   \   00000128   38E0               B        ??RF_Channel_Paint_3
   8219                 }else{
   8220                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Paint_2:
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   1920               MOVS     R0,#+25
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   2823               MOVS     R3,#+40
   \   00000132   0C22               MOVS     R2,#+12
   \   00000134   0C21               MOVS     R1,#+12
   \   00000136   26A0               ADR      R0,??RF_Channel_Paint_0+0x2C  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   \   0000013E   2DE0               B        ??RF_Channel_Paint_3
   8221                 }
   8222                }else{ //je¿eli tryb slave
   8223                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   \                     ??RF_Channel_Paint_1:
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0020               MOVS     R0,#+0
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   7F21               MOVS     R1,#+127
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   3B21               MOVS     R1,#+59
   \   0000014E   0E20               MOVS     R0,#+14
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   4623               MOVS     R3,#+70
   \   00000154   0222               MOVS     R2,#+2
   \   00000156   0221               MOVS     R1,#+2
   \   00000158   1E48               LDR      R0,??RF_Channel_Paint_0+0x30  ;; 0x6ae
   \   0000015A   144C               LDR      R4,??RF_Channel_Paint_0+0x8  ;; g_leng
   \   0000015C   2468               LDR      R4,[R4, #+0]
   \   0000015E   144D               LDR      R5,??RF_Channel_Paint_0+0xC  ;; 0xa7d
   \   00000160   6C43               MULS     R4,R5,R4
   \   00000162   144D               LDR      R5,??RF_Channel_Paint_0+0x10  ;; Speech
   \   00000164   2C19               ADDS     R4,R5,R4
   \   00000166   2018               ADDS     R0,R4,R0
   \   00000168   ........           BL       Label
   \   0000016C   06B0               ADD      SP,SP,#+24
   8224                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,56,1,127,0);
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0020               MOVS     R0,#+0
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   7F21               MOVS     R1,#+127
   \   00000176   0120               MOVS     R0,#+1
   \   00000178   03B4               PUSH     {R0,R1}
   \   0000017A   3821               MOVS     R1,#+56
   \   0000017C   0E20               MOVS     R0,#+14
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   3C23               MOVS     R3,#+60
   \   00000182   0222               MOVS     R2,#+2
   \   00000184   0221               MOVS     R1,#+2
   \   00000186   1448               LDR      R0,??RF_Channel_Paint_0+0x34  ;; 0x6bd
   \   00000188   084C               LDR      R4,??RF_Channel_Paint_0+0x8  ;; g_leng
   \   0000018A   2468               LDR      R4,[R4, #+0]
   \   0000018C   084D               LDR      R5,??RF_Channel_Paint_0+0xC  ;; 0xa7d
   \   0000018E   6C43               MULS     R4,R5,R4
   \   00000190   084D               LDR      R5,??RF_Channel_Paint_0+0x10  ;; Speech
   \   00000192   2C19               ADDS     R4,R5,R4
   \   00000194   2018               ADDS     R0,R4,R0
   \   00000196   ........           BL       Label
   \   0000019A   06B0               ADD      SP,SP,#+24
   8225                }
   8226                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   8227              }//________________________________________________________________________
   \                     ??RF_Channel_Paint_3:
   \   0000019C   03B0               ADD      SP,SP,#+12
   \   0000019E   30BC               POP      {R4,R5}
   \   000001A0   01BC               POP      {R0}
   \   000001A2   0047               BX       R0               ;; return
   \                     ??RF_Channel_Paint_0:
   \   000001A4   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001A8   45060000           DC32     0x645
   \   000001AC   ........           DC32     g_leng
   \   000001B0   7D0A0000           DC32     0xa7d
   \   000001B4   ........           DC32     Speech
   \   000001B8   E8D71300           DC32     0x13d7e8
   \   000001BC   ........           DC32     g_Stop_Program
   \   000001C0   ........           DC32     RF_Channel_nr_tmp
   \   000001C4   ........           DC32     RF_ChOkBlock
   \   000001C8   ........           DC32     RF_Status + 14
   \   000001CC   54060000           DC32     0x654
   \   000001D0   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   000001D4   AE060000           DC32     0x6ae
   \   000001D8   BD060000           DC32     0x6bd
   8228          
   8229          

   \                                 In section Debug.txt, align 4, keep-with-next
   8230              void RF_Channel_Refresh(void)
   8231              {  
   \                     RF_Channel_Refresh:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   8232                if (AT91C_IFLASH_MEM->Config.SlaveMode)  //je¿eli tryb master
   \   00000002   5048               LDR      R0,??RF_Channel_Refresh_0  ;; 0x13d7e8
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000008   000E               LSRS     R0,R0,#+24
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   00D1               BNE      .+4
   \   0000000E   95E0               B        ??RF_Channel_Refresh_1
   8233                {
   8234                
   8235                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   48A0               ADR      R0,??RF_Channel_Refresh_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0121               MOVS     R1,#+1
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   6C22               MOVS     R2,#+108
   \   00000032   0121               MOVS     R1,#+1
   \   00000034   4548               LDR      R0,??RF_Channel_Refresh_0+0x8  ;; 0x645
   \   00000036   464C               LDR      R4,??RF_Channel_Refresh_0+0xC  ;; g_leng
   \   00000038   2468               LDR      R4,[R4, #+0]
   \   0000003A   464D               LDR      R5,??RF_Channel_Refresh_0+0x10  ;; 0xa7d
   \   0000003C   6C43               MULS     R4,R5,R4
   \   0000003E   464D               LDR      R5,??RF_Channel_Refresh_0+0x14  ;; Speech
   \   00000040   2C19               ADDS     R4,R5,R4
   \   00000042   2018               ADDS     R0,R4,R0
   \   00000044   ........           BL       List_Paint
   \   00000048   0AB0               ADD      SP,SP,#+40
   8236                 
   8237                 g_Stop_Program=1;
   \   0000004A   4448               LDR      R0,??RF_Channel_Refresh_0+0x18  ;; g_Stop_Program
   \   0000004C   0121               MOVS     R1,#+1
   \   0000004E   0170               STRB     R1,[R0, #+0]
   8238                 
   8239                 //Speech[g_leng].RfChannel
   8240                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   7F21               MOVS     R1,#+127
   \   00000058   0120               MOVS     R0,#+1
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   2121               MOVS     R1,#+33
   \   0000005E   0A20               MOVS     R0,#+10
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   5A23               MOVS     R3,#+90
   \   00000064   0322               MOVS     R2,#+3
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   3848               LDR      R0,??RF_Channel_Refresh_0+0x8  ;; 0x645
   \   0000006A   394C               LDR      R4,??RF_Channel_Refresh_0+0xC  ;; g_leng
   \   0000006C   2468               LDR      R4,[R4, #+0]
   \   0000006E   394D               LDR      R5,??RF_Channel_Refresh_0+0x10  ;; 0xa7d
   \   00000070   6C43               MULS     R4,R5,R4
   \   00000072   394D               LDR      R5,??RF_Channel_Refresh_0+0x14  ;; Speech
   \   00000074   2C19               ADDS     R4,R5,R4
   \   00000076   2018               ADDS     R0,R4,R0
   \   00000078   ........           BL       Label
   \   0000007C   06B0               ADD      SP,SP,#+24
   8241            
   8242                 char tmp_char[3];
   8243                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   0000007E   0222               MOVS     R2,#+2
   \   00000080   01A9               ADD      R1,SP,#+4
   \   00000082   3748               LDR      R0,??RF_Channel_Refresh_0+0x1C  ;; RF_Channel_nr_tmp
   \   00000084   0078               LDRB     R0,[R0, #+0]
   \   00000086   ........           BL       CharToStr
   8244                 
   8245                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   7F21               MOVS     R1,#+127
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   2121               MOVS     R1,#+33
   \   00000098   0220               MOVS     R0,#+2
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   4D23               MOVS     R3,#+77
   \   0000009E   1E22               MOVS     R2,#+30
   \   000000A0   0121               MOVS     R1,#+1
   \   000000A2   07A8               ADD      R0,SP,#+28
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   8246                    
   8247                 
   8248                 char LabelButt[2];
   8249                 LabelButt[1]=0;
   \   000000AA   6846               MOV      R0,SP
   \   000000AC   0021               MOVS     R1,#+0
   \   000000AE   4170               STRB     R1,[R0, #+1]
   8250                 LabelButt[0]=30;
   \   000000B0   6846               MOV      R0,SP
   \   000000B2   1E21               MOVS     R1,#+30
   \   000000B4   0170               STRB     R1,[R0, #+0]
   8251                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   1920               MOVS     R0,#+25
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   1323               MOVS     R3,#+19
   \   000000BE   3022               MOVS     R2,#+48
   \   000000C0   2121               MOVS     R1,#+33
   \   000000C2   02A8               ADD      R0,SP,#+8
   \   000000C4   ........           BL       Button
   \   000000C8   02B0               ADD      SP,SP,#+8
   8252                 LabelButt[0]=31;
   \   000000CA   6846               MOV      R0,SP
   \   000000CC   1F21               MOVS     R1,#+31
   \   000000CE   0170               STRB     R1,[R0, #+0]
   8253                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   1920               MOVS     R0,#+25
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   1323               MOVS     R3,#+19
   \   000000D8   3022               MOVS     R2,#+48
   \   000000DA   0C21               MOVS     R1,#+12
   \   000000DC   02A8               ADD      R0,SP,#+8
   \   000000DE   ........           BL       Button
   \   000000E2   02B0               ADD      SP,SP,#+8
   8254                 
   8255                 if ((RF_Status.ConfResive) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000E4   1F48               LDR      R0,??RF_Channel_Refresh_0+0x20  ;; RF_Status + 11
   \   000000E6   0078               LDRB     R0,[R0, #+0]
   \   000000E8   0028               CMP      R0,#+0
   \   000000EA   1DD0               BEQ      ??RF_Channel_Refresh_2
   \   000000EC   1E48               LDR      R0,??RF_Channel_Refresh_0+0x24  ;; RF_Status + 14
   \   000000EE   0078               LDRB     R0,[R0, #+0]
   \   000000F0   1B49               LDR      R1,??RF_Channel_Refresh_0+0x1C  ;; RF_Channel_nr_tmp
   \   000000F2   0978               LDRB     R1,[R1, #+0]
   \   000000F4   8842               CMP      R0,R1
   \   000000F6   17D0               BEQ      ??RF_Channel_Refresh_2
   8256                 {
   8257                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000F8   82B0               SUB      SP,SP,#+8
   \   000000FA   0020               MOVS     R0,#+0
   \   000000FC   0090               STR      R0,[SP, #+0]
   \   000000FE   7F21               MOVS     R1,#+127
   \   00000100   0120               MOVS     R0,#+1
   \   00000102   03B4               PUSH     {R0,R1}
   \   00000104   2121               MOVS     R1,#+33
   \   00000106   0E20               MOVS     R0,#+14
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   1E23               MOVS     R3,#+30
   \   0000010C   0622               MOVS     R2,#+6
   \   0000010E   0021               MOVS     R1,#+0
   \   00000110   1648               LDR      R0,??RF_Channel_Refresh_0+0x28  ;; 0x654
   \   00000112   0F4C               LDR      R4,??RF_Channel_Refresh_0+0xC  ;; g_leng
   \   00000114   2468               LDR      R4,[R4, #+0]
   \   00000116   0F4D               LDR      R5,??RF_Channel_Refresh_0+0x10  ;; 0xa7d
   \   00000118   6C43               MULS     R4,R5,R4
   \   0000011A   0F4D               LDR      R5,??RF_Channel_Refresh_0+0x14  ;; Speech
   \   0000011C   2C19               ADDS     R4,R5,R4
   \   0000011E   2018               ADDS     R0,R4,R0
   \   00000120   ........           BL       Label
   \   00000124   06B0               ADD      SP,SP,#+24
   \   00000126   09E0               B        ??RF_Channel_Refresh_1
   8258                 }else{
   8259                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Refresh_2:
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   1920               MOVS     R0,#+25
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   2823               MOVS     R3,#+40
   \   00000130   0C22               MOVS     R2,#+12
   \   00000132   0C21               MOVS     R1,#+12
   \   00000134   0EA0               ADR      R0,??RF_Channel_Refresh_0+0x2C  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000136   ........           BL       Button
   \   0000013A   02B0               ADD      SP,SP,#+8
   8260                 }
   8261          
   8262                } 
   8263              }//________________________________________________________________________
   \                     ??RF_Channel_Refresh_1:
   \   0000013C   03B0               ADD      SP,SP,#+12
   \   0000013E   30BC               POP      {R4,R5}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??RF_Channel_Refresh_0:
   \   00000144   E8D71300           DC32     0x13d7e8
   \   00000148   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000014C   45060000           DC32     0x645
   \   00000150   ........           DC32     g_leng
   \   00000154   7D0A0000           DC32     0xa7d
   \   00000158   ........           DC32     Speech
   \   0000015C   ........           DC32     g_Stop_Program
   \   00000160   ........           DC32     RF_Channel_nr_tmp
   \   00000164   ........           DC32     RF_Status + 11
   \   00000168   ........           DC32     RF_Status + 14
   \   0000016C   54060000           DC32     0x654
   \   00000170   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   8264              
   8265              
   8266              
   8267              //*-----------------------------------------------------------------------------
   8268          

   \                                 In section Debug.txt, align 4, keep-with-next
   8269              void RF_Channel_Event(void)
   8270              {
   \                     RF_Channel_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   8271                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0120               MOVS     R0,#+1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   7948               LDR      R0,??RF_Channel_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   7848               LDR      R0,??RF_Channel_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   7848               LDR      R0,??RF_Channel_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   7748               LDR      R0,??RF_Channel_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   8272                if (ans<0)  
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   0CD5               BPL      ??RF_Channel_Event_1
   8273                 {
   8274                    g_Stop_Program=0;
   \   00000030   7448               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   0170               STRB     R1,[R0, #+0]
   8275                    MenuLevel=(MenuLevel/10);
   \   00000036   7448               LDR      R0,??RF_Channel_Event_0+0x14  ;; MenuLevel
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   0A21               MOVS     R1,#+10
   \   0000003C   ........           BL       __aeabi_idivmod
   \   00000040   7149               LDR      R1,??RF_Channel_Event_0+0x14  ;; MenuLevel
   \   00000042   0860               STR      R0,[R1, #+0]
   8276                    MenuPaint();
   \   00000044   ........           BL       MenuPaint
   \   00000048   CFE0               B        ??RF_Channel_Event_2
   8277                 }else{
   8278                
   8279          
   8280                 char LabelButt[2];
   8281                 LabelButt[1]=0;
   \                     ??RF_Channel_Event_1:
   \   0000004A   6846               MOV      R0,SP
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   4170               STRB     R1,[R0, #+1]
   8282                 LabelButt[0]=30;
   \   00000050   6846               MOV      R0,SP
   \   00000052   1E21               MOVS     R1,#+30
   \   00000054   0170               STRB     R1,[R0, #+0]
   8283          
   8284                 if (Button(LabelButt,33,48,19,25)==1) 
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   1920               MOVS     R0,#+25
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   1323               MOVS     R3,#+19
   \   0000005E   3022               MOVS     R2,#+48
   \   00000060   2121               MOVS     R1,#+33
   \   00000062   02A8               ADD      R0,SP,#+8
   \   00000064   ........           BL       Button
   \   00000068   02B0               ADD      SP,SP,#+8
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   33D1               BNE      ??RF_Channel_Event_3
   8285                 {
   8286                    if (RF_Channel_nr_tmp<RF_ChannelQuanti-1) {RF_Channel_nr_tmp++;} else {RF_Channel_nr_tmp=1;}
   \   0000006E   6748               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   00000070   0078               LDRB     R0,[R0, #+0]
   \   00000072   2728               CMP      R0,#+39
   \   00000074   05D2               BCS      ??RF_Channel_Event_4
   \   00000076   6548               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   00000078   6449               LDR      R1,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   0000007A   0978               LDRB     R1,[R1, #+0]
   \   0000007C   491C               ADDS     R1,R1,#+1
   \   0000007E   0170               STRB     R1,[R0, #+0]
   \   00000080   02E0               B        ??RF_Channel_Event_5
   \                     ??RF_Channel_Event_4:
   \   00000082   6248               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   00000084   0121               MOVS     R1,#+1
   \   00000086   0170               STRB     R1,[R0, #+0]
   8287                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_5:
   \   00000088   0221               MOVS     R1,#+2
   \   0000008A   0C00               MOVS     R4,R1
   \   0000008C   5F48               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   0000008E   0078               LDRB     R0,[R0, #+0]
   \   00000090   ........           BL       __aeabi_ui2d
   \   00000094   5E4A               LDR      R2,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   00000096   5F4B               LDR      R3,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   00000098   ........           BL       __aeabi_dmul
   \   0000009C   5E4A               LDR      R2,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   0000009E   5F4B               LDR      R3,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   000000A0   ........           BL       __aeabi_dadd
   \   000000A4   0022               MOVS     R2,#+0
   \   000000A6   5E4B               LDR      R3,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   000000A8   ........           BL       __aeabi_dmul
   \   000000AC   0022               MOVS     R2,#+0
   \   000000AE   5D4B               LDR      R3,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   000000B0   ........           BL       __aeabi_dadd
   \   000000B4   ........           BL       __aeabi_d2iz
   \   000000B8   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000BA   0014               ASRS     R0,R0,#+16
   \   000000BC   A021               MOVS     R1,#+160
   \   000000BE   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000C0   0143               ORRS     R1,R1,R0
   \   000000C2   0800               MOVS     R0,R1
   \   000000C4   2100               MOVS     R1,R4
   \   000000C6   ........           BL       SPI_SendWord
   8288          
   8289                    RF_ChOkBlock=RF_CheckChannel();
   \   000000CA   ........           BL       RF_CheckChannel
   \   000000CE   5649               LDR      R1,??RF_Channel_Event_0+0x34  ;; RF_ChOkBlock
   \   000000D0   0870               STRB     R0,[R1, #+0]
   8290                    MenuPaint(); 
   \   000000D2   ........           BL       MenuPaint
   8291                 }
   8292                 LabelButt[0]=31;
   \                     ??RF_Channel_Event_3:
   \   000000D6   6846               MOV      R0,SP
   \   000000D8   1F21               MOVS     R1,#+31
   \   000000DA   0170               STRB     R1,[R0, #+0]
   8293          
   8294                 if (Button(LabelButt,12,48,19,25)==1)
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   1920               MOVS     R0,#+25
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   1323               MOVS     R3,#+19
   \   000000E4   3022               MOVS     R2,#+48
   \   000000E6   0C21               MOVS     R1,#+12
   \   000000E8   02A8               ADD      R0,SP,#+8
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   \   000000F0   0128               CMP      R0,#+1
   \   000000F2   33D1               BNE      ??RF_Channel_Event_6
   8295                 {
   8296                    if (RF_Channel_nr_tmp>1) {RF_Channel_nr_tmp--;} else {RF_Channel_nr_tmp=RF_ChannelQuanti-1;}
   \   000000F4   4548               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   000000F6   0078               LDRB     R0,[R0, #+0]
   \   000000F8   0228               CMP      R0,#+2
   \   000000FA   05D3               BCC      ??RF_Channel_Event_7
   \   000000FC   4348               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   000000FE   4349               LDR      R1,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   00000100   0978               LDRB     R1,[R1, #+0]
   \   00000102   491E               SUBS     R1,R1,#+1
   \   00000104   0170               STRB     R1,[R0, #+0]
   \   00000106   02E0               B        ??RF_Channel_Event_8
   \                     ??RF_Channel_Event_7:
   \   00000108   4048               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   0000010A   2721               MOVS     R1,#+39
   \   0000010C   0170               STRB     R1,[R0, #+0]
   8297          
   8298                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_8:
   \   0000010E   0221               MOVS     R1,#+2
   \   00000110   0C00               MOVS     R4,R1
   \   00000112   3E48               LDR      R0,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   00000114   0078               LDRB     R0,[R0, #+0]
   \   00000116   ........           BL       __aeabi_ui2d
   \   0000011A   3D4A               LDR      R2,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   0000011C   3D4B               LDR      R3,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   0000011E   ........           BL       __aeabi_dmul
   \   00000122   3D4A               LDR      R2,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000124   3D4B               LDR      R3,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   00000126   ........           BL       __aeabi_dadd
   \   0000012A   0022               MOVS     R2,#+0
   \   0000012C   3C4B               LDR      R3,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   0000012E   ........           BL       __aeabi_dmul
   \   00000132   0022               MOVS     R2,#+0
   \   00000134   3B4B               LDR      R3,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   00000136   ........           BL       __aeabi_dadd
   \   0000013A   ........           BL       __aeabi_d2iz
   \   0000013E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000140   0014               ASRS     R0,R0,#+16
   \   00000142   A021               MOVS     R1,#+160
   \   00000144   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   00000146   0143               ORRS     R1,R1,R0
   \   00000148   0800               MOVS     R0,R1
   \   0000014A   2100               MOVS     R1,R4
   \   0000014C   ........           BL       SPI_SendWord
   8299                    
   8300           
   8301                  
   8302          
   8303          
   8304                 
   8305          
   8306                    RF_ChOkBlock=RF_CheckChannel();
   \   00000150   ........           BL       RF_CheckChannel
   \   00000154   3449               LDR      R1,??RF_Channel_Event_0+0x34  ;; RF_ChOkBlock
   \   00000156   0870               STRB     R0,[R1, #+0]
   8307                    MenuPaint(); 
   \   00000158   ........           BL       MenuPaint
   8308                 }       
   8309                 
   8310                 
   8311                 if (RF_ChOkBlock)
   \                     ??RF_Channel_Event_6:
   \   0000015C   3248               LDR      R0,??RF_Channel_Event_0+0x34  ;; RF_ChOkBlock
   \   0000015E   0078               LDRB     R0,[R0, #+0]
   \   00000160   0028               CMP      R0,#+0
   \   00000162   17D0               BEQ      ??RF_Channel_Event_9
   8312                 {
   8313                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   00000164   82B0               SUB      SP,SP,#+8
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   0090               STR      R0,[SP, #+0]
   \   0000016A   7F21               MOVS     R1,#+127
   \   0000016C   0120               MOVS     R0,#+1
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   2121               MOVS     R1,#+33
   \   00000172   0E20               MOVS     R0,#+14
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   1E23               MOVS     R3,#+30
   \   00000178   0622               MOVS     R2,#+6
   \   0000017A   0021               MOVS     R1,#+0
   \   0000017C   2B48               LDR      R0,??RF_Channel_Event_0+0x38  ;; 0x654
   \   0000017E   2C4C               LDR      R4,??RF_Channel_Event_0+0x3C  ;; g_leng
   \   00000180   2468               LDR      R4,[R4, #+0]
   \   00000182   2C4D               LDR      R5,??RF_Channel_Event_0+0x40  ;; 0xa7d
   \   00000184   6C43               MULS     R4,R5,R4
   \   00000186   2C4D               LDR      R5,??RF_Channel_Event_0+0x44  ;; Speech
   \   00000188   2C19               ADDS     R4,R5,R4
   \   0000018A   2018               ADDS     R0,R4,R0
   \   0000018C   ........           BL       Label
   \   00000190   06B0               ADD      SP,SP,#+24
   \   00000192   2AE0               B        ??RF_Channel_Event_2
   8314                 }else{
   8315                  if (Button("OK",12,12,40,25)==1)
   \                     ??RF_Channel_Event_9:
   \   00000194   82B0               SUB      SP,SP,#+8
   \   00000196   1920               MOVS     R0,#+25
   \   00000198   0090               STR      R0,[SP, #+0]
   \   0000019A   2823               MOVS     R3,#+40
   \   0000019C   0C22               MOVS     R2,#+12
   \   0000019E   0C21               MOVS     R1,#+12
   \   000001A0   26A0               ADR      R0,??RF_Channel_Event_0+0x48  ;; 0x4F, 0x4B, 0x00, 0x00
   \   000001A2   ........           BL       Button
   \   000001A6   02B0               ADD      SP,SP,#+8
   \   000001A8   0128               CMP      R0,#+1
   \   000001AA   1ED1               BNE      ??RF_Channel_Event_2
   8316                  {
   8317                   g_Stop_Program=0;
   \   000001AC   1548               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   000001AE   0021               MOVS     R1,#+0
   \   000001B0   0170               STRB     R1,[R0, #+0]
   8318                   RF_Status.Ch=RF_Channel_nr_tmp;
   \   000001B2   2348               LDR      R0,??RF_Channel_Event_0+0x4C  ;; RF_Status + 14
   \   000001B4   1549               LDR      R1,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   000001B6   0978               LDRB     R1,[R1, #+0]
   \   000001B8   0170               STRB     R1,[R0, #+0]
   8319                   
   8320          
   8321                        //zapis do flash
   8322                        unsigned int Save = __get_interrupt_state();  
   \   000001BA   ........           BL       __iar_get_interrupt_state
   \   000001BE   0400               MOVS     R4,R0
   8323                        __disable_interrupt();
   \   000001C0   ........           BL       __iar_disable_interrupt
   8324                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.RF_channel)),0, &RF_Channel_nr_tmp,1);
   8325                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.RF_channel)), (char*) (&(RF_Channel_nr_tmp)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001C4   0122               MOVS     R2,#+1
   \   000001C6   1149               LDR      R1,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   000001C8   1E48               LDR      R0,??RF_Channel_Event_0+0x50  ;; 0x13d7e6
   \   000001CA   ........           BL       FlashWrite
   8326                        __set_interrupt_state(Save);
   \   000001CE   2000               MOVS     R0,R4
   \   000001D0   ........           BL       __iar_set_interrupt_state
   8327                        __enable_interrupt(); 
   \   000001D4   ........           BL       __iar_enable_interrupt
   8328                        //koniec zapisu do flash
   8329                   
   8330                   
   8331                   MenuLevel=(MenuLevel/10);
   \   000001D8   0B48               LDR      R0,??RF_Channel_Event_0+0x14  ;; MenuLevel
   \   000001DA   0068               LDR      R0,[R0, #+0]
   \   000001DC   0A21               MOVS     R1,#+10
   \   000001DE   ........           BL       __aeabi_idivmod
   \   000001E2   0949               LDR      R1,??RF_Channel_Event_0+0x14  ;; MenuLevel
   \   000001E4   0860               STR      R0,[R1, #+0]
   8332                   MenuPaint();
   \   000001E6   ........           BL       MenuPaint
   8333                   
   8334                  }
   8335                 }
   8336                 
   8337                 
   8338                
   8339                 
   8340                 
   8341                 }
   8342              }//________________________________________________________________________
   \                     ??RF_Channel_Event_2:
   \   000001EA   01B0               ADD      SP,SP,#+4
   \   000001EC   30BC               POP      {R4,R5}
   \   000001EE   01BC               POP      {R0}
   \   000001F0   0047               BX       R0               ;; return
   \   000001F2   C046               Nop      
   \                     ??RF_Channel_Event_0:
   \   000001F4   ........           DC32     Y_down
   \   000001F8   ........           DC32     X_down
   \   000001FC   ........           DC32     Y_up
   \   00000200   ........           DC32     X_up
   \   00000204   ........           DC32     g_Stop_Program
   \   00000208   ........           DC32     MenuLevel
   \   0000020C   ........           DC32     RF_Channel_nr_tmp
   \   00000210   33333333           DC32     0x33333333
   \   00000214   3333D33F           DC32     0x3fd33333
   \   00000218   C3F5285C           DC32     0x5c28f5c3
   \   0000021C   8FE28A40           DC32     0x408ae28f
   \   00000220   00006940           DC32     0x40690000
   \   00000224   00FF04C1           DC32     0xc104ff00
   \   00000228   ........           DC32     RF_ChOkBlock
   \   0000022C   54060000           DC32     0x654
   \   00000230   ........           DC32     g_leng
   \   00000234   7D0A0000           DC32     0xa7d
   \   00000238   ........           DC32     Speech
   \   0000023C   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000240   ........           DC32     RF_Status + 14
   \   00000244   E6D71300           DC32     0x13d7e6
   8343              
   8344              
   8345              
   8346              
   8347              
   8348              
   8349              
   8350              
   8351              
   8352              
   8353              
   8354          
   8355          //Wybór poziomu dostêpu *************************************************************************************************************
   8356                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8357                void Sygnal_Paint(void)
   8358                {
   \                     Sygnal_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   8359                    #define _Y   10   //przesuniêcie w dó³
   8360                    List_Paint(Speech[g_leng].Sygnaly,4,15,_Y,0,3,Speech[g_leng].Obserwowane,Speech[g_leng].WeWy, Speech[g_leng].ZmAnalog, Speech[g_leng].ZmDwust,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1B48               LDR      R0,??Sygnal_Paint_0  ;; g_leng
   \   00000010   0068               LDR      R0,[R0, #+0]
   \   00000012   1B49               LDR      R1,??Sygnal_Paint_0+0x4  ;; 0xa7d
   \   00000014   4843               MULS     R0,R1,R0
   \   00000016   1B49               LDR      R1,??Sygnal_Paint_0+0x8  ;; Speech
   \   00000018   0918               ADDS     R1,R1,R0
   \   0000001A   1E31               ADDS     R1,R1,#+30
   \   0000001C   1748               LDR      R0,??Sygnal_Paint_0  ;; g_leng
   \   0000001E   0068               LDR      R0,[R0, #+0]
   \   00000020   174A               LDR      R2,??Sygnal_Paint_0+0x4  ;; 0xa7d
   \   00000022   5043               MULS     R0,R2,R0
   \   00000024   174A               LDR      R2,??Sygnal_Paint_0+0x8  ;; Speech
   \   00000026   1018               ADDS     R0,R2,R0
   \   00000028   0F30               ADDS     R0,R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   FF20               MOVS     R0,#+255
   \   0000002E   5A30               ADDS     R0,R0,#+90       ;; #+345
   \   00000030   1249               LDR      R1,??Sygnal_Paint_0  ;; g_leng
   \   00000032   0968               LDR      R1,[R1, #+0]
   \   00000034   124A               LDR      R2,??Sygnal_Paint_0+0x4  ;; 0xa7d
   \   00000036   5143               MULS     R1,R2,R1
   \   00000038   124A               LDR      R2,??Sygnal_Paint_0+0x8  ;; Speech
   \   0000003A   5118               ADDS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   1248               LDR      R0,??Sygnal_Paint_0+0xC  ;; 0x20d
   \   00000040   0E4A               LDR      R2,??Sygnal_Paint_0  ;; g_leng
   \   00000042   1268               LDR      R2,[R2, #+0]
   \   00000044   0E4B               LDR      R3,??Sygnal_Paint_0+0x4  ;; 0xa7d
   \   00000046   5A43               MULS     R2,R3,R2
   \   00000048   0E4B               LDR      R3,??Sygnal_Paint_0+0x8  ;; Speech
   \   0000004A   9A18               ADDS     R2,R3,R2
   \   0000004C   1018               ADDS     R0,R2,R0
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   0321               MOVS     R1,#+3
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   0A23               MOVS     R3,#+10
   \   00000058   0F22               MOVS     R2,#+15
   \   0000005A   0421               MOVS     R1,#+4
   \   0000005C   FF20               MOVS     R0,#+255
   \   0000005E   4000               LSLS     R0,R0,#+1        ;; #+510
   \   00000060   064C               LDR      R4,??Sygnal_Paint_0  ;; g_leng
   \   00000062   2468               LDR      R4,[R4, #+0]
   \   00000064   064D               LDR      R5,??Sygnal_Paint_0+0x4  ;; 0xa7d
   \   00000066   6C43               MULS     R4,R5,R4
   \   00000068   064D               LDR      R5,??Sygnal_Paint_0+0x8  ;; Speech
   \   0000006A   2C19               ADDS     R4,R5,R4
   \   0000006C   2018               ADDS     R0,R4,R0
   \   0000006E   ........           BL       List_Paint
   \   00000072   0AB0               ADD      SP,SP,#+40
   8361                }//_______________________ Koniec funkcji MainSide_Paint __________________________    
   \   00000074   01B0               ADD      SP,SP,#+4
   \   00000076   30BC               POP      {R4,R5}
   \   00000078   01BC               POP      {R0}
   \   0000007A   0047               BX       R0               ;; return
   \                     ??Sygnal_Paint_0:
   \   0000007C   ........           DC32     g_leng
   \   00000080   7D0A0000           DC32     0xa7d
   \   00000084   ........           DC32     Speech
   \   00000088   0D020000           DC32     0x20d
   8362              
   8363              
   8364                    //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8365                void Sygnal_Event(void)
   8366                {
   \                     Sygnal_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8367                  int Y_tmp = 10;   //przesuniêcie w dó³
   \   00000002   0A21               MOVS     R1,#+10
   8368                  int ans;
   8369          
   8370                  ans=List_Event(X_up, Y_up, X_down, Y_down, 4 , 15,0,Y_tmp); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000008   090E               LSRS     R1,R1,#+24
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0420               MOVS     R0,#+4
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   1648               LDR      R0,??Sygnal_Event_0  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   1548               LDR      R0,??Sygnal_Event_0+0x4  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   1548               LDR      R0,??Sygnal_Event_0+0x8  ;; Y_up
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   1448               LDR      R0,??Sygnal_Event_0+0xC  ;; X_up
   \   00000026   0024               MOVS     R4,#+0
   \   00000028   005F               LDRSH    R0,[R0, R4]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0400               MOVS     R4,R0
   8371            
   8372                  if (ans)
   \   00000032   002C               CMP      R4,#+0
   \   00000034   17D0               BEQ      ??Sygnal_Event_1
   8373                    {
   8374                      if ((ans>0) && (ans<5))
   \   00000036   012C               CMP      R4,#+1
   \   00000038   0ADB               BLT      ??Sygnal_Event_2
   \   0000003A   052C               CMP      R4,#+5
   \   0000003C   08DA               BGE      ??Sygnal_Event_2
   8375                      {
   8376                          MenuLevel=(MenuLevel*10+ans);
   \   0000003E   0F48               LDR      R0,??Sygnal_Event_0+0x10  ;; MenuLevel
   \   00000040   0E49               LDR      R1,??Sygnal_Event_0+0x10  ;; MenuLevel
   \   00000042   0968               LDR      R1,[R1, #+0]
   \   00000044   0A22               MOVS     R2,#+10
   \   00000046   5143               MULS     R1,R2,R1
   \   00000048   0919               ADDS     R1,R1,R4
   \   0000004A   0160               STR      R1,[R0, #+0]
   8377                          MenuPaint();
   \   0000004C   ........           BL       MenuPaint
   8378                      }
   8379                      if (ans<0)
   \                     ??Sygnal_Event_2:
   \   00000050   002C               CMP      R4,#+0
   \   00000052   08D5               BPL      ??Sygnal_Event_1
   8380                      {
   8381                        MenuLevel=(MenuLevel/10);
   \   00000054   0948               LDR      R0,??Sygnal_Event_0+0x10  ;; MenuLevel
   \   00000056   0068               LDR      R0,[R0, #+0]
   \   00000058   0A21               MOVS     R1,#+10
   \   0000005A   ........           BL       __aeabi_idivmod
   \   0000005E   0749               LDR      R1,??Sygnal_Event_0+0x10  ;; MenuLevel
   \   00000060   0860               STR      R0,[R1, #+0]
   8382                        MenuPaint();
   \   00000062   ........           BL       MenuPaint
   8383                      }
   8384                    }
   8385          
   8386                }//_______________________________________________________________________
   \                     ??Sygnal_Event_1:
   \   00000066   10BC               POP      {R4}
   \   00000068   01BC               POP      {R0}
   \   0000006A   0047               BX       R0               ;; return
   \                     ??Sygnal_Event_0:
   \   0000006C   ........           DC32     Y_down
   \   00000070   ........           DC32     X_down
   \   00000074   ........           DC32     Y_up
   \   00000078   ........           DC32     X_up
   \   0000007C   ........           DC32     MenuLevel
   8387          
   8388          
   8389          
   8390          
   8391              
   8392              

   \                                 In section .bss, align 8
   8393            long long int WaitOnCheckNode=0;     
   \                     WaitOnCheckNode:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
   8394            char OpisWezl=0;    
   \                     OpisWezl:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   8395            void NeuronsList_Paint(void)
   8396            {  
   \                     NeuronsList_Paint:
   \   00000000   7FB5               PUSH     {R0-R6,LR}
   8397                 if (WaitOnCheckNode==0) WaitOnCheckNode=g_counter+1000+TimeUnitQual*32; 
   \   00000002   9448               LDR      R0,??NeuronsList_Paint_0  ;; WaitOnCheckNode
   \   00000004   03C8               LDM      R0!,{R0,R1}
   \   00000006   0029               CMP      R1,#+0
   \   00000008   0BD1               BNE      ??NeuronsList_Paint_1
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   09D1               BNE      ??NeuronsList_Paint_1
   \   0000000E   914C               LDR      R4,??NeuronsList_Paint_0  ;; WaitOnCheckNode
   \   00000010   9148               LDR      R0,??NeuronsList_Paint_0+0x4  ;; g_counter
   \   00000012   0CC8               LDM      R0!,{R2,R3}
   \   00000014   0838               SUBS     R0,R0,#+8
   \   00000016   9148               LDR      R0,??NeuronsList_Paint_0+0x8  ;; 0x4ee8
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   8018               ADDS     R0,R0,R2
   \   0000001C   5941               ADCS     R1,R1,R3
   \   0000001E   03C4               STM      R4!,{R0,R1}
   \   00000020   083C               SUBS     R4,R4,#+8
   8398          
   8399                char txt[8];
   8400                 
   8401                
   8402                 List_Paint(Speech[g_leng].Wezly,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \                     ??NeuronsList_Paint_1:
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   8AA0               ADR      R0,??NeuronsList_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0321               MOVS     R1,#+3
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0023               MOVS     R3,#+0
   \   00000042   6C22               MOVS     R2,#+108
   \   00000044   0121               MOVS     R1,#+1
   \   00000046   8748               LDR      R0,??NeuronsList_Paint_0+0x10  ;; 0x636
   \   00000048   874C               LDR      R4,??NeuronsList_Paint_0+0x14  ;; g_leng
   \   0000004A   2468               LDR      R4,[R4, #+0]
   \   0000004C   874D               LDR      R5,??NeuronsList_Paint_0+0x18  ;; 0xa7d
   \   0000004E   6C43               MULS     R4,R5,R4
   \   00000050   874D               LDR      R5,??NeuronsList_Paint_0+0x1C  ;; Speech
   \   00000052   2C19               ADDS     R4,R5,R4
   \   00000054   2018               ADDS     R0,R4,R0
   \   00000056   ........           BL       List_Paint
   \   0000005A   0AB0               ADD      SP,SP,#+40
   8403               
   8404                
   8405              //  if (!SlaveMode)//je¿eli tryb Master
   8406              //  {
   8407          
   8408                 char LabelButt[2];
   8409                 LabelButt[1]=0;
   \   0000005C   6846               MOV      R0,SP
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   4170               STRB     R1,[R0, #+1]
   8410                 LabelButt[0]=30;
   \   00000062   6846               MOV      R0,SP
   \   00000064   1E21               MOVS     R1,#+30
   \   00000066   0170               STRB     R1,[R0, #+0]
   8411                 Button(LabelButt,24,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   1320               MOVS     R0,#+19
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   1323               MOVS     R3,#+19
   \   00000070   0322               MOVS     R2,#+3
   \   00000072   1821               MOVS     R1,#+24
   \   00000074   02A8               ADD      R0,SP,#+8
   \   00000076   ........           BL       Button
   \   0000007A   02B0               ADD      SP,SP,#+8
   8412                 LabelButt[0]=31;
   \   0000007C   6846               MOV      R0,SP
   \   0000007E   1F21               MOVS     R1,#+31
   \   00000080   0170               STRB     R1,[R0, #+0]
   8413                 Button(LabelButt,3,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   1320               MOVS     R0,#+19
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   1323               MOVS     R3,#+19
   \   0000008A   0322               MOVS     R2,#+3
   \   0000008C   0321               MOVS     R1,#+3
   \   0000008E   02A8               ADD      R0,SP,#+8
   \   00000090   ........           BL       Button
   \   00000094   02B0               ADD      SP,SP,#+8
   8414                 
   8415                 if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   \   00000096   7748               LDR      R0,??NeuronsList_Paint_0+0x20  ;; OpisWezl
   \   00000098   0078               LDRB     R0,[R0, #+0]
   \   0000009A   0028               CMP      R0,#+0
   \   0000009C   03D0               BEQ      ??NeuronsList_Paint_2
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   2421               MOVS     R1,#+36
   \   000000A2   0170               STRB     R1,[R0, #+0]
   \   000000A4   02E0               B        ??NeuronsList_Paint_3
   \                     ??NeuronsList_Paint_2:
   \   000000A6   6846               MOV      R0,SP
   \   000000A8   2321               MOVS     R1,#+35
   \   000000AA   0170               STRB     R1,[R0, #+0]
   8416                 Button(LabelButt,46,3,14,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??NeuronsList_Paint_3:
   \   000000AC   82B0               SUB      SP,SP,#+8
   \   000000AE   1320               MOVS     R0,#+19
   \   000000B0   0090               STR      R0,[SP, #+0]
   \   000000B2   0E23               MOVS     R3,#+14
   \   000000B4   0322               MOVS     R2,#+3
   \   000000B6   2E21               MOVS     R1,#+46
   \   000000B8   02A8               ADD      R0,SP,#+8
   \   000000BA   ........           BL       Button
   \   000000BE   02B0               ADD      SP,SP,#+8
   8417                  
   8418                 H_line(1,25+6*12,62,3); 
   \   000000C0   0323               MOVS     R3,#+3
   \   000000C2   3E22               MOVS     R2,#+62
   \   000000C4   6121               MOVS     R1,#+97
   \   000000C6   0120               MOVS     R0,#+1
   \   000000C8   ........           BL       H_line
   8419                 for (char i=0; i<6; i++) 
   \   000000CC   0024               MOVS     R4,#+0
   \   000000CE   24E0               B        ??NeuronsList_Paint_4
   8420                 {H_line(1,25+i*12,62,3); 
   8421                     CharToStr(NeuronsListLine+6-i, txt, 2); //(char Value, char *Vstring, char ill);
   8422                     Label(txt,0,2,27+i*12,2,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8423                     
   8424                     if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   8425                     {
   8426                         if (OpisWezl)
   8427                         {//opiski
   8428                            Label(gProg.NodeLabel[(5-i)+NeuronsListLine],0,14,27+i*12,NodeLabelLethers,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8429          
   8430                         }else{
   8431                           #ifdef  DIRECT_Q_MESURE 
   8432                              sprintf(txt, "%d",  TransQuality.DirectkMensur[RF_TaskTab[RF_CurrentTask].Node-1]);
   8433                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8434                           #else
   8435                            //numery nodów 
   8436                            sprintf(txt, "%d", gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \                     ??NeuronsList_Paint_5:
   \   000000D0   6948               LDR      R0,??NeuronsList_Paint_0+0x24  ;; 0xc0ac
   \   000000D2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D4   240E               LSRS     R4,R4,#+24
   \   000000D6   6142               RSBS     R1,R4,#+0
   \   000000D8   684A               LDR      R2,??NeuronsList_Paint_0+0x28  ;; NeuronsListLine
   \   000000DA   1278               LDRB     R2,[R2, #+0]
   \   000000DC   8918               ADDS     R1,R1,R2
   \   000000DE   0422               MOVS     R2,#+4
   \   000000E0   5143               MULS     R1,R2,R1
   \   000000E2   674A               LDR      R2,??NeuronsList_Paint_0+0x2C  ;; gProg
   \   000000E4   5118               ADDS     R1,R2,R1
   \   000000E6   0A58               LDR      R2,[R1, R0]
   \   000000E8   66A1               ADR      R1,??NeuronsList_Paint_0+0x30  ;; 0x25, 0x64, 0x00, 0x00
   \   000000EA   01A8               ADD      R0,SP,#+4
   \   000000EC   ........           BL       sprintf
   8437                            Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   6921               MOVS     R1,#+105
   \   000000F8   1020               MOVS     R0,#+16
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   1721               MOVS     R1,#+23
   \   000000FE   0820               MOVS     R0,#+8
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000104   240E               LSRS     R4,R4,#+24
   \   00000106   0C23               MOVS     R3,#+12
   \   00000108   6343               MULS     R3,R4,R3
   \   0000010A   1B33               ADDS     R3,R3,#+27
   \   0000010C   1622               MOVS     R2,#+22
   \   0000010E   0021               MOVS     R1,#+0
   \   00000110   07A8               ADD      R0,SP,#+28
   \   00000112   ........           BL       Label
   \   00000116   06B0               ADD      SP,SP,#+24
   8438                          #endif
   8439                         }
   \                     ??NeuronsList_Paint_6:
   \   00000118   641C               ADDS     R4,R4,#+1
   \                     ??NeuronsList_Paint_4:
   \   0000011A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000011C   240E               LSRS     R4,R4,#+24
   \   0000011E   062C               CMP      R4,#+6
   \   00000120   59D2               BCS      ??NeuronsList_Paint_7
   \   00000122   0323               MOVS     R3,#+3
   \   00000124   3E22               MOVS     R2,#+62
   \   00000126   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000128   240E               LSRS     R4,R4,#+24
   \   0000012A   0C21               MOVS     R1,#+12
   \   0000012C   6143               MULS     R1,R4,R1
   \   0000012E   1931               ADDS     R1,R1,#+25
   \   00000130   0120               MOVS     R0,#+1
   \   00000132   ........           BL       H_line
   \   00000136   0222               MOVS     R2,#+2
   \   00000138   01A9               ADD      R1,SP,#+4
   \   0000013A   5048               LDR      R0,??NeuronsList_Paint_0+0x28  ;; NeuronsListLine
   \   0000013C   0078               LDRB     R0,[R0, #+0]
   \   0000013E   801D               ADDS     R0,R0,#+6
   \   00000140   001B               SUBS     R0,R0,R4
   \   00000142   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000144   000E               LSRS     R0,R0,#+24
   \   00000146   ........           BL       CharToStr
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   0020               MOVS     R0,#+0
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   6921               MOVS     R1,#+105
   \   00000152   1020               MOVS     R0,#+16
   \   00000154   03B4               PUSH     {R0,R1}
   \   00000156   1721               MOVS     R1,#+23
   \   00000158   0220               MOVS     R0,#+2
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000015E   240E               LSRS     R4,R4,#+24
   \   00000160   0C23               MOVS     R3,#+12
   \   00000162   6343               MULS     R3,R4,R3
   \   00000164   1B33               ADDS     R3,R3,#+27
   \   00000166   0222               MOVS     R2,#+2
   \   00000168   0021               MOVS     R1,#+0
   \   0000016A   07A8               ADD      R0,SP,#+28
   \   0000016C   ........           BL       Label
   \   00000170   06B0               ADD      SP,SP,#+24
   \   00000172   4148               LDR      R0,??NeuronsList_Paint_0+0x24  ;; 0xc0ac
   \   00000174   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000176   240E               LSRS     R4,R4,#+24
   \   00000178   6142               RSBS     R1,R4,#+0
   \   0000017A   404A               LDR      R2,??NeuronsList_Paint_0+0x28  ;; NeuronsListLine
   \   0000017C   1278               LDRB     R2,[R2, #+0]
   \   0000017E   8918               ADDS     R1,R1,R2
   \   00000180   0422               MOVS     R2,#+4
   \   00000182   5143               MULS     R1,R2,R1
   \   00000184   3E4A               LDR      R2,??NeuronsList_Paint_0+0x2C  ;; gProg
   \   00000186   5118               ADDS     R1,R2,R1
   \   00000188   0858               LDR      R0,[R1, R0]
   \   0000018A   0128               CMP      R0,#+1
   \   0000018C   C4DB               BLT      ??NeuronsList_Paint_6
   \   0000018E   3948               LDR      R0,??NeuronsList_Paint_0+0x20  ;; OpisWezl
   \   00000190   0078               LDRB     R0,[R0, #+0]
   \   00000192   0028               CMP      R0,#+0
   \   00000194   9CD0               BEQ      ??NeuronsList_Paint_5
   \   00000196   82B0               SUB      SP,SP,#+8
   \   00000198   0020               MOVS     R0,#+0
   \   0000019A   0090               STR      R0,[SP, #+0]
   \   0000019C   6921               MOVS     R1,#+105
   \   0000019E   1020               MOVS     R0,#+16
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   1721               MOVS     R1,#+23
   \   000001A4   0A20               MOVS     R0,#+10
   \   000001A6   03B4               PUSH     {R0,R1}
   \   000001A8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001AA   240E               LSRS     R4,R4,#+24
   \   000001AC   0C23               MOVS     R3,#+12
   \   000001AE   6343               MULS     R3,R4,R3
   \   000001B0   1B33               ADDS     R3,R3,#+27
   \   000001B2   0E22               MOVS     R2,#+14
   \   000001B4   0021               MOVS     R1,#+0
   \   000001B6   3448               LDR      R0,??NeuronsList_Paint_0+0x34  ;; 0xc156
   \   000001B8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001BA   240E               LSRS     R4,R4,#+24
   \   000001BC   6542               RSBS     R5,R4,#+0
   \   000001BE   2F4E               LDR      R6,??NeuronsList_Paint_0+0x28  ;; NeuronsListLine
   \   000001C0   3678               LDRB     R6,[R6, #+0]
   \   000001C2   AD19               ADDS     R5,R5,R6
   \   000001C4   0A26               MOVS     R6,#+10
   \   000001C6   7543               MULS     R5,R6,R5
   \   000001C8   2D4E               LDR      R6,??NeuronsList_Paint_0+0x2C  ;; gProg
   \   000001CA   7519               ADDS     R5,R6,R5
   \   000001CC   2818               ADDS     R0,R5,R0
   \   000001CE   ........           BL       Label
   \   000001D2   06B0               ADD      SP,SP,#+24
   \   000001D4   A0E7               B        ??NeuronsList_Paint_6
   8440                     }
   8441            
   8442               
   8443                 }
   8444                 if(OpisWezl)
   \                     ??NeuronsList_Paint_7:
   \   000001D6   2748               LDR      R0,??NeuronsList_Paint_0+0x20  ;; OpisWezl
   \   000001D8   0078               LDRB     R0,[R0, #+0]
   \   000001DA   0028               CMP      R0,#+0
   \   000001DC   06D0               BEQ      ??NeuronsList_Paint_8
   8445                       {
   8446                           V_line(12,25,73,1);
   \   000001DE   0123               MOVS     R3,#+1
   \   000001E0   4922               MOVS     R2,#+73
   \   000001E2   1921               MOVS     R1,#+25
   \   000001E4   0C20               MOVS     R0,#+12
   \   000001E6   ........           BL       V_line
   \   000001EA   0BE0               B        ??NeuronsList_Paint_9
   8447                     
   8448                       }else{
   8449                           V_line(20,25,73,1); 
   \                     ??NeuronsList_Paint_8:
   \   000001EC   0123               MOVS     R3,#+1
   \   000001EE   4922               MOVS     R2,#+73
   \   000001F0   1921               MOVS     R1,#+25
   \   000001F2   1420               MOVS     R0,#+20
   \   000001F4   ........           BL       V_line
   8450                           V_line(58,25,73,1); 
   \   000001F8   0123               MOVS     R3,#+1
   \   000001FA   4922               MOVS     R2,#+73
   \   000001FC   1921               MOVS     R1,#+25
   \   000001FE   3A20               MOVS     R0,#+58
   \   00000200   ........           BL       V_line
   8451                       }
   8452                     
   8453                     
   8454                 Label("Node ",0,2,99,4,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??NeuronsList_Paint_9:
   \   00000204   82B0               SUB      SP,SP,#+8
   \   00000206   0020               MOVS     R0,#+0
   \   00000208   0090               STR      R0,[SP, #+0]
   \   0000020A   8021               MOVS     R1,#+128
   \   0000020C   1020               MOVS     R0,#+16
   \   0000020E   03B4               PUSH     {R0,R1}
   \   00000210   1721               MOVS     R1,#+23
   \   00000212   0420               MOVS     R0,#+4
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   6323               MOVS     R3,#+99
   \   00000218   0222               MOVS     R2,#+2
   \   0000021A   0021               MOVS     R1,#+0
   \   0000021C   1B48               LDR      R0,??NeuronsList_Paint_0+0x38  ;; `?<Constant "Node ">`
   \   0000021E   ........           BL       Label
   \   00000222   06B0               ADD      SP,SP,#+24
   8455                 if(OpisWezl==0) Label("Id ",0,37,99,2,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000224   1348               LDR      R0,??NeuronsList_Paint_0+0x20  ;; OpisWezl
   \   00000226   0078               LDRB     R0,[R0, #+0]
   \   00000228   0028               CMP      R0,#+0
   \   0000022A   0FD1               BNE      ??NeuronsList_Paint_10
   \   0000022C   82B0               SUB      SP,SP,#+8
   \   0000022E   0020               MOVS     R0,#+0
   \   00000230   0090               STR      R0,[SP, #+0]
   \   00000232   8021               MOVS     R1,#+128
   \   00000234   1020               MOVS     R0,#+16
   \   00000236   03B4               PUSH     {R0,R1}
   \   00000238   1721               MOVS     R1,#+23
   \   0000023A   0220               MOVS     R0,#+2
   \   0000023C   03B4               PUSH     {R0,R1}
   \   0000023E   6323               MOVS     R3,#+99
   \   00000240   2522               MOVS     R2,#+37
   \   00000242   0021               MOVS     R1,#+0
   \   00000244   12A0               ADR      R0,??NeuronsList_Paint_0+0x3C  ;; "Id "
   \   00000246   ........           BL       Label
   \   0000024A   06B0               ADD      SP,SP,#+24
   8456          
   8457                /*     
   8458                }else{ //je¿eli tryb slave
   8459                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   8460                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,55,1,127,0);
   8461                } 
   8462                 */
   8463                 
   8464                }//________________________________________________________________________
   \                     ??NeuronsList_Paint_10:
   \   0000024C   04B0               ADD      SP,SP,#+16
   \   0000024E   70BC               POP      {R4-R6}
   \   00000250   01BC               POP      {R0}
   \   00000252   0047               BX       R0               ;; return
   \                     ??NeuronsList_Paint_0:
   \   00000254   ........           DC32     WaitOnCheckNode
   \   00000258   ........           DC32     g_counter
   \   0000025C   E84E0000           DC32     0x4ee8
   \   00000260   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000264   36060000           DC32     0x636
   \   00000268   ........           DC32     g_leng
   \   0000026C   7D0A0000           DC32     0xa7d
   \   00000270   ........           DC32     Speech
   \   00000274   ........           DC32     OpisWezl
   \   00000278   ACC00000           DC32     0xc0ac
   \   0000027C   ........           DC32     NeuronsListLine
   \   00000280   ........           DC32     gProg
   \   00000284   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000288   56C10000           DC32     0xc156
   \   0000028C   ........           DC32     `?<Constant "Node ">`
   \   00000290   49642000           DC8      "Id "

   \                                 In section .bss, align 4
   8465          int wpistmp=0;
   \                     wpistmp:
   \   00000000                      DS8 4
   8466          
   8467          
   8468                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8469                void NeuronsList_Event(void)
   8470                {
   \                     NeuronsList_Event:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   8471          
   8472                      
   8473          
   8474                  //zdarzenie typu down "X"
   8475                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000002   9548               LDR      R0,??NeuronsList_Event_0  ;; X_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   38DB               BLT      ??NeuronsList_Event_1
   \   0000000C   9248               LDR      R0,??NeuronsList_Event_0  ;; X_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   3F28               CMP      R0,#+63
   \   00000014   33DA               BGE      ??NeuronsList_Event_1
   \   00000016   9148               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   405E               LDRSH    R0,[R0, R1]
   \   0000001C   7128               CMP      R0,#+113
   \   0000001E   2EDB               BLT      ??NeuronsList_Event_1
   \   00000020   8E48               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   405E               LDRSH    R0,[R0, R1]
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   29DA               BGE      ??NeuronsList_Event_1
   8476                  {
   8477                    
   8478                    
   8479                    //MenuPaint();
   8480                    H_line(49,114,10,0);
   \   0000002A   0023               MOVS     R3,#+0
   \   0000002C   0A22               MOVS     R2,#+10
   \   0000002E   7221               MOVS     R1,#+114
   \   00000030   3120               MOVS     R0,#+49
   \   00000032   ........           BL       H_line
   8481                    H_line(49,123,10,0); 
   \   00000036   0023               MOVS     R3,#+0
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   7B21               MOVS     R1,#+123
   \   0000003C   3120               MOVS     R0,#+49
   \   0000003E   ........           BL       H_line
   8482                    V_line(49,114,10,0); 
   \   00000042   0023               MOVS     R3,#+0
   \   00000044   0A22               MOVS     R2,#+10
   \   00000046   7221               MOVS     R1,#+114
   \   00000048   3120               MOVS     R0,#+49
   \   0000004A   ........           BL       V_line
   8483                    V_line(58,114,10,0); 
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   0A22               MOVS     R2,#+10
   \   00000052   7221               MOVS     R1,#+114
   \   00000054   3A20               MOVS     R0,#+58
   \   00000056   ........           BL       V_line
   8484                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000005A   8148               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   0000005C   0078               LDRB     R0,[R0, #+0]
   \   0000005E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000060   000E               LSRS     R0,R0,#+24
   \   00000062   0028               CMP      R0,#+0
   \   00000064   0BD1               BNE      ??NeuronsList_Event_1
   \   00000066   7F48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   00000068   8021               MOVS     R1,#+128
   \   0000006A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000006C   0160               STR      R1,[R0, #+0]
   \   0000006E   7E4A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   00000070   7E48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000072   03C8               LDM      R0!,{R0,R1}
   \   00000074   0023               MOVS     R3,#+0
   \   00000076   0830               ADDS     R0,R0,#+8
   \   00000078   5941               ADCS     R1,R1,R3
   \   0000007A   03C2               STM      R2!,{R0,R1}
   \   0000007C   083A               SUBS     R2,R2,#+8
   8485                    
   8486                  }
   8487            
   8488                  
   8489          
   8490          
   8491          
   8492              
   8493                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??NeuronsList_Event_1:
   \   0000007E   7C48               LDR      R0,??NeuronsList_Event_0+0x18  ;; X_up
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   405E               LDRSH    R0,[R0, R1]
   \   00000084   2F28               CMP      R0,#+47
   \   00000086   55DB               BLT      ??NeuronsList_Event_2
   \   00000088   7948               LDR      R0,??NeuronsList_Event_0+0x18  ;; X_up
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   405E               LDRSH    R0,[R0, R1]
   \   0000008E   3F28               CMP      R0,#+63
   \   00000090   50DA               BGE      ??NeuronsList_Event_2
   \   00000092   7848               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   405E               LDRSH    R0,[R0, R1]
   \   00000098   7128               CMP      R0,#+113
   \   0000009A   4BDB               BLT      ??NeuronsList_Event_2
   \   0000009C   7548               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   0000009E   0021               MOVS     R1,#+0
   \   000000A0   405E               LDRSH    R0,[R0, R1]
   \   000000A2   7F28               CMP      R0,#+127
   \   000000A4   46DA               BGE      ??NeuronsList_Event_2
   8494                  {
   8495                    OpisWezl=0;
   \   000000A6   7448               LDR      R0,??NeuronsList_Event_0+0x20  ;; OpisWezl
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   0170               STRB     R1,[R0, #+0]
   8496                    Rej_poz=0;
   \   000000AC   7348               LDR      R0,??NeuronsList_Event_0+0x24  ;; Rej_poz
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   0160               STR      R1,[R0, #+0]
   8497                    if (ProgramChange) 
   \   000000B2   7348               LDR      R0,??NeuronsList_Event_0+0x28  ;; ProgramChange
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   18D0               BEQ      ??NeuronsList_Event_3
   8498                    {
   8499                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000BA   6948               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C0   000E               LSRS     R0,R0,#+24
   \   000000C2   0028               CMP      R0,#+0
   \   000000C4   0BD1               BNE      ??NeuronsList_Event_4
   \   000000C6   6748               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   000000C8   8021               MOVS     R1,#+128
   \   000000CA   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000CC   0160               STR      R1,[R0, #+0]
   \   000000CE   664A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000D0   6648               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000D2   03C8               LDM      R0!,{R0,R1}
   \   000000D4   0023               MOVS     R3,#+0
   \   000000D6   0830               ADDS     R0,R0,#+8
   \   000000D8   5941               ADCS     R1,R1,R3
   \   000000DA   03C2               STM      R2!,{R0,R1}
   \   000000DC   083A               SUBS     R2,R2,#+8
   8500                      MenuLevel=(MenuLevel*10+0);
   \                     ??NeuronsList_Event_4:
   \   000000DE   6948               LDR      R0,??NeuronsList_Event_0+0x2C  ;; MenuLevel
   \   000000E0   6849               LDR      R1,??NeuronsList_Event_0+0x2C  ;; MenuLevel
   \   000000E2   0968               LDR      R1,[R1, #+0]
   \   000000E4   0A22               MOVS     R2,#+10
   \   000000E6   5143               MULS     R1,R2,R1
   \   000000E8   0160               STR      R1,[R0, #+0]
   \   000000EA   18E0               B        ??NeuronsList_Event_5
   8501                       
   8502                      
   8503                    }else{
   8504                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \                     ??NeuronsList_Event_3:
   \   000000EC   5C48               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   000000EE   0078               LDRB     R0,[R0, #+0]
   \   000000F0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F2   000E               LSRS     R0,R0,#+24
   \   000000F4   0028               CMP      R0,#+0
   \   000000F6   0BD1               BNE      ??NeuronsList_Event_6
   \   000000F8   5A48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   000000FA   8021               MOVS     R1,#+128
   \   000000FC   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000FE   0160               STR      R1,[R0, #+0]
   \   00000100   594A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   00000102   5A48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000104   03C8               LDM      R0!,{R0,R1}
   \   00000106   0023               MOVS     R3,#+0
   \   00000108   0830               ADDS     R0,R0,#+8
   \   0000010A   5941               ADCS     R1,R1,R3
   \   0000010C   03C2               STM      R2!,{R0,R1}
   \   0000010E   083A               SUBS     R2,R2,#+8
   8505                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronsList_Event_6:
   \   00000110   5C48               LDR      R0,??NeuronsList_Event_0+0x2C  ;; MenuLevel
   \   00000112   0068               LDR      R0,[R0, #+0]
   \   00000114   0A21               MOVS     R1,#+10
   \   00000116   ........           BL       __aeabi_idivmod
   \   0000011A   5A49               LDR      R1,??NeuronsList_Event_0+0x2C  ;; MenuLevel
   \   0000011C   0860               STR      R0,[R1, #+0]
   8506                    }
   8507                    
   8508                    MenuPaint();
   \                     ??NeuronsList_Event_5:
   \   0000011E   ........           BL       MenuPaint
   8509                    WaitOnCheckNode=0;
   \   00000122   D24A               LDR      R2,??NeuronsList_Event_7  ;; WaitOnCheckNode
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0021               MOVS     R1,#+0
   \   00000128   03C2               STM      R2!,{R0,R1}
   \   0000012A   083A               SUBS     R2,R2,#+8
   8510                  }
   8511                  else{
   8512            
   8513                           
   8514             //   if (!SlaveMode)//je¿eli tryb Master
   8515            //    {
   8516                      char LabelButt[2]; LabelButt[1]=0;
   8517                      LabelButt[0]=30;
   8518                      if ((Button(LabelButt,24,3,19,19))  && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine>0))            
   8519                      {
   8520                        Touch_EventTime=g_counter;
   8521                        NeuronsListLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   8522                        MenuPaint();
   8523                      } 
   8524                      
   8525                      LabelButt[0]=31;
   8526                      if ((Button(LabelButt,3,3,19,19)) && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine<NumberNeurons-6))
   8527                      {
   8528                        Touch_EventTime=g_counter;
   8529                        NeuronsListLine++;    
   8530                        MenuPaint();
   8531                      }
   8532                      
   8533                      
   8534                      if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   8535                      if (Button(LabelButt,46,3,14,19)==1){if (OpisWezl) OpisWezl=0; else OpisWezl=1;  MenuPaint();}
   8536                      
   8537                      
   8538                      for (char i=0; i<6; i++) 
   8539                      {
   8540                       if ((Y_down>25+i*12) && (Y_down<25+((i+1)*12)))                
   8541                        {
   8542                           MenuPaint();
   8543                           H_line(1,26+i*12,62,1); 
   8544                           H_line(1,24+(i+1)*12,62,1); 
   8545                        }
   8546                        if ((Y_up>25+i*12) && (Y_up<25+((i+1)*12)))                
   8547                        { 
   8548                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   8549                          if (OpisWezl==0)
   8550                          {
   8551                              NeuronIdChange=&(gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
   8552                              NeuronNrChange=(5-i)+NeuronsListLine;
   8553                              //je¿eli jest ju¿ nadany ID
   8554                              if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   8555                              {
   8556                                NeuronNrChange=(6-i)+NeuronsListLine;
   8557                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   8558                                TextToChangeLength=NodeLabelLethers;
   8559                                
   8560                                MenuLevel=(MenuLevel*10+3);
   8561                              }else{
   8562                                MenuLevel=(MenuLevel*10+1);
   8563                              }
   8564                          }else{
   8565                              if (gProg.NodeLabel[(5-i)+NeuronsListLine][0]!=0)
   8566                              {
   8567                                NeuronNrChange=(6-i)+NeuronsListLine;
   8568                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   8569                                TextToChangeLength=NodeLabelLethers;
   8570                                MenuLevel=(MenuLevel*10+3);
   8571                              }else{  
   8572                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   8573                                TextToChangeLength=NodeLabelLethers;
   8574                                MenuLevel=(MenuLevel*10+2); 
   8575                                ProgramChange=1;
   8576                              }
   8577                              
   8578                          }
   8579                          MenuPaint();
   8580                        }
   8581                       
   8582                      }
   8583               // }
   8584                  }
   8585          
   8586                }//________________________________________________________________________
   \                     ??NeuronsList_Event_8:
   \   0000012C   02B0               ADD      SP,SP,#+8
   \   0000012E   10BC               POP      {R4}
   \   00000130   01BC               POP      {R0}
   \   00000132   0047               BX       R0               ;; return
   \                     ??NeuronsList_Event_2:
   \   00000134   6846               MOV      R0,SP
   \   00000136   0021               MOVS     R1,#+0
   \   00000138   4170               STRB     R1,[R0, #+1]
   \   0000013A   6846               MOV      R0,SP
   \   0000013C   1E21               MOVS     R1,#+30
   \   0000013E   0170               STRB     R1,[R0, #+0]
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   1320               MOVS     R0,#+19
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   1323               MOVS     R3,#+19
   \   00000148   0322               MOVS     R2,#+3
   \   0000014A   1821               MOVS     R1,#+24
   \   0000014C   02A8               ADD      R0,SP,#+8
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0028               CMP      R0,#+0
   \   00000156   26D0               BEQ      ??NeuronsList_Event_9
   \   00000158   C548               LDR      R0,??NeuronsList_Event_7+0x4  ;; Touch_EventTime
   \   0000015A   0CC8               LDM      R0!,{R2,R3}
   \   0000015C   0838               SUBS     R0,R0,#+8
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   6432               ADDS     R2,R2,#+100
   \   00000162   4341               ADCS     R3,R3,R0
   \   00000164   4148               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000166   03C8               LDM      R0!,{R0,R1}
   \   00000168   8B42               CMP      R3,R1
   \   0000016A   0CD3               BCC      ??NeuronsList_Event_10
   \   0000016C   01D8               BHI      ??NeuronsList_Event_11
   \   0000016E   8242               CMP      R2,R0
   \   00000170   09D3               BCC      ??NeuronsList_Event_10
   \                     ??NeuronsList_Event_11:
   \   00000172   3E48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000174   0CC8               LDM      R0!,{R2,R3}
   \   00000176   0838               SUBS     R0,R0,#+8
   \   00000178   BD48               LDR      R0,??NeuronsList_Event_7+0x4  ;; Touch_EventTime
   \   0000017A   03C8               LDM      R0!,{R0,R1}
   \   0000017C   8B42               CMP      R3,R1
   \   0000017E   12D8               BHI      ??NeuronsList_Event_9
   \   00000180   01D3               BCC      ??NeuronsList_Event_12
   \   00000182   8242               CMP      R2,R0
   \   00000184   0FD2               BCS      ??NeuronsList_Event_9
   \                     ??NeuronsList_Event_12:
   \                     ??NeuronsList_Event_10:
   \   00000186   BB48               LDR      R0,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000188   0078               LDRB     R0,[R0, #+0]
   \   0000018A   0128               CMP      R0,#+1
   \   0000018C   0BD3               BCC      ??NeuronsList_Event_9
   \   0000018E   B84A               LDR      R2,??NeuronsList_Event_7+0x4  ;; Touch_EventTime
   \   00000190   3648               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000192   03C8               LDM      R0!,{R0,R1}
   \   00000194   03C2               STM      R2!,{R0,R1}
   \   00000196   083A               SUBS     R2,R2,#+8
   \   00000198   B648               LDR      R0,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   0000019A   B649               LDR      R1,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   0000019C   0978               LDRB     R1,[R1, #+0]
   \   0000019E   491E               SUBS     R1,R1,#+1
   \   000001A0   0170               STRB     R1,[R0, #+0]
   \   000001A2   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_9:
   \   000001A6   6846               MOV      R0,SP
   \   000001A8   1F21               MOVS     R1,#+31
   \   000001AA   0170               STRB     R1,[R0, #+0]
   \   000001AC   82B0               SUB      SP,SP,#+8
   \   000001AE   1320               MOVS     R0,#+19
   \   000001B0   0090               STR      R0,[SP, #+0]
   \   000001B2   1323               MOVS     R3,#+19
   \   000001B4   0322               MOVS     R2,#+3
   \   000001B6   0321               MOVS     R1,#+3
   \   000001B8   02A8               ADD      R0,SP,#+8
   \   000001BA   ........           BL       Button
   \   000001BE   02B0               ADD      SP,SP,#+8
   \   000001C0   0028               CMP      R0,#+0
   \   000001C2   26D0               BEQ      ??NeuronsList_Event_13
   \   000001C4   AA48               LDR      R0,??NeuronsList_Event_7+0x4  ;; Touch_EventTime
   \   000001C6   0CC8               LDM      R0!,{R2,R3}
   \   000001C8   0838               SUBS     R0,R0,#+8
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   6432               ADDS     R2,R2,#+100
   \   000001CE   4341               ADCS     R3,R3,R0
   \   000001D0   2648               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000001D2   03C8               LDM      R0!,{R0,R1}
   \   000001D4   8B42               CMP      R3,R1
   \   000001D6   0CD3               BCC      ??NeuronsList_Event_14
   \   000001D8   01D8               BHI      ??NeuronsList_Event_15
   \   000001DA   8242               CMP      R2,R0
   \   000001DC   09D3               BCC      ??NeuronsList_Event_14
   \                     ??NeuronsList_Event_15:
   \   000001DE   2348               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000001E0   0CC8               LDM      R0!,{R2,R3}
   \   000001E2   0838               SUBS     R0,R0,#+8
   \   000001E4   A248               LDR      R0,??NeuronsList_Event_7+0x4  ;; Touch_EventTime
   \   000001E6   03C8               LDM      R0!,{R0,R1}
   \   000001E8   8B42               CMP      R3,R1
   \   000001EA   12D8               BHI      ??NeuronsList_Event_13
   \   000001EC   01D3               BCC      ??NeuronsList_Event_16
   \   000001EE   8242               CMP      R2,R0
   \   000001F0   0FD2               BCS      ??NeuronsList_Event_13
   \                     ??NeuronsList_Event_16:
   \                     ??NeuronsList_Event_14:
   \   000001F2   A048               LDR      R0,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   000001F4   0078               LDRB     R0,[R0, #+0]
   \   000001F6   1D28               CMP      R0,#+29
   \   000001F8   0BD2               BCS      ??NeuronsList_Event_13
   \   000001FA   9D4A               LDR      R2,??NeuronsList_Event_7+0x4  ;; Touch_EventTime
   \   000001FC   1B48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000001FE   03C8               LDM      R0!,{R0,R1}
   \   00000200   03C2               STM      R2!,{R0,R1}
   \   00000202   083A               SUBS     R2,R2,#+8
   \   00000204   9B48               LDR      R0,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000206   9B49               LDR      R1,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000208   0978               LDRB     R1,[R1, #+0]
   \   0000020A   491C               ADDS     R1,R1,#+1
   \   0000020C   0170               STRB     R1,[R0, #+0]
   \   0000020E   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_13:
   \   00000212   1948               LDR      R0,??NeuronsList_Event_0+0x20  ;; OpisWezl
   \   00000214   0078               LDRB     R0,[R0, #+0]
   \   00000216   0028               CMP      R0,#+0
   \   00000218   03D0               BEQ      ??NeuronsList_Event_17
   \   0000021A   6846               MOV      R0,SP
   \   0000021C   2421               MOVS     R1,#+36
   \   0000021E   0170               STRB     R1,[R0, #+0]
   \   00000220   02E0               B        ??NeuronsList_Event_18
   \                     ??NeuronsList_Event_17:
   \   00000222   6846               MOV      R0,SP
   \   00000224   2321               MOVS     R1,#+35
   \   00000226   0170               STRB     R1,[R0, #+0]
   \                     ??NeuronsList_Event_18:
   \   00000228   82B0               SUB      SP,SP,#+8
   \   0000022A   1320               MOVS     R0,#+19
   \   0000022C   0090               STR      R0,[SP, #+0]
   \   0000022E   0E23               MOVS     R3,#+14
   \   00000230   0322               MOVS     R2,#+3
   \   00000232   2E21               MOVS     R1,#+46
   \   00000234   02A8               ADD      R0,SP,#+8
   \   00000236   ........           BL       Button
   \   0000023A   02B0               ADD      SP,SP,#+8
   \   0000023C   0128               CMP      R0,#+1
   \   0000023E   08D1               BNE      ??NeuronsList_Event_19
   \   00000240   0D48               LDR      R0,??NeuronsList_Event_0+0x20  ;; OpisWezl
   \   00000242   0D49               LDR      R1,??NeuronsList_Event_0+0x20  ;; OpisWezl
   \   00000244   0978               LDRB     R1,[R1, #+0]
   \   00000246   4A1E               SUBS     R2,R1,#+1
   \   00000248   9241               SBCS     R2,R2,R2
   \   0000024A   D20F               LSRS     R2,R2,#+31
   \   0000024C   0270               STRB     R2,[R0, #+0]
   \   0000024E   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_19:
   \   00000252   0024               MOVS     R4,#+0
   \   00000254   36E0               B        ??NeuronsList_Event_20
   \   00000256   C046               Nop      
   \                     ??NeuronsList_Event_0:
   \   00000258   ........           DC32     X_down
   \   0000025C   ........           DC32     Y_down
   \   00000260   E9D71300           DC32     0x13d7e9
   \   00000264   30F4FFFF           DC32     0xfffff430
   \   00000268   ........           DC32     ButtonBipCounter
   \   0000026C   ........           DC32     g_counter
   \   00000270   ........           DC32     X_up
   \   00000274   ........           DC32     Y_up
   \   00000278   ........           DC32     OpisWezl
   \   0000027C   ........           DC32     Rej_poz
   \   00000280   ........           DC32     ProgramChange
   \   00000284   ........           DC32     MenuLevel
   \                     ??NeuronsList_Event_21:
   \   00000288   7B48               LDR      R0,??NeuronsList_Event_7+0xC  ;; TextToChange
   \   0000028A   7C49               LDR      R1,??NeuronsList_Event_7+0x10  ;; 0xc156
   \   0000028C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000028E   240E               LSRS     R4,R4,#+24
   \   00000290   6242               RSBS     R2,R4,#+0
   \   00000292   784B               LDR      R3,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000294   1B78               LDRB     R3,[R3, #+0]
   \   00000296   D218               ADDS     R2,R2,R3
   \   00000298   0A23               MOVS     R3,#+10
   \   0000029A   5A43               MULS     R2,R3,R2
   \   0000029C   784B               LDR      R3,??NeuronsList_Event_7+0x14  ;; gProg
   \   0000029E   9A18               ADDS     R2,R3,R2
   \   000002A0   5118               ADDS     R1,R2,R1
   \   000002A2   0160               STR      R1,[R0, #+0]
   \   000002A4   7748               LDR      R0,??NeuronsList_Event_7+0x18  ;; TextToChangeLength
   \   000002A6   0A21               MOVS     R1,#+10
   \   000002A8   0170               STRB     R1,[R0, #+0]
   \   000002AA   7748               LDR      R0,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   000002AC   7649               LDR      R1,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   000002AE   0968               LDR      R1,[R1, #+0]
   \   000002B0   0A22               MOVS     R2,#+10
   \   000002B2   5143               MULS     R1,R2,R1
   \   000002B4   891C               ADDS     R1,R1,#+2
   \   000002B6   0160               STR      R1,[R0, #+0]
   \   000002B8   7448               LDR      R0,??NeuronsList_Event_7+0x20  ;; ProgramChange
   \   000002BA   0121               MOVS     R1,#+1
   \   000002BC   0170               STRB     R1,[R0, #+0]
   \                     ??NeuronsList_Event_22:
   \   000002BE   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_23:
   \   000002C2   641C               ADDS     R4,R4,#+1
   \                     ??NeuronsList_Event_20:
   \   000002C4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002C6   240E               LSRS     R4,R4,#+24
   \   000002C8   062C               CMP      R4,#+6
   \   000002CA   00D3               BCC      .+4
   \   000002CC   2EE7               B        ??NeuronsList_Event_8
   \   000002CE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002D0   240E               LSRS     R4,R4,#+24
   \   000002D2   0C20               MOVS     R0,#+12
   \   000002D4   6043               MULS     R0,R4,R0
   \   000002D6   1930               ADDS     R0,R0,#+25
   \   000002D8   6D49               LDR      R1,??NeuronsList_Event_7+0x24  ;; Y_down
   \   000002DA   0022               MOVS     R2,#+0
   \   000002DC   895E               LDRSH    R1,[R1, R2]
   \   000002DE   8842               CMP      R0,R1
   \   000002E0   1FDA               BGE      ??NeuronsList_Event_24
   \   000002E2   6B48               LDR      R0,??NeuronsList_Event_7+0x24  ;; Y_down
   \   000002E4   0021               MOVS     R1,#+0
   \   000002E6   405E               LDRSH    R0,[R0, R1]
   \   000002E8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002EA   240E               LSRS     R4,R4,#+24
   \   000002EC   0C21               MOVS     R1,#+12
   \   000002EE   6143               MULS     R1,R4,R1
   \   000002F0   2531               ADDS     R1,R1,#+37
   \   000002F2   8842               CMP      R0,R1
   \   000002F4   15DA               BGE      ??NeuronsList_Event_24
   \   000002F6   ........           BL       MenuPaint
   \   000002FA   0123               MOVS     R3,#+1
   \   000002FC   3E22               MOVS     R2,#+62
   \   000002FE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000300   240E               LSRS     R4,R4,#+24
   \   00000302   0C21               MOVS     R1,#+12
   \   00000304   6143               MULS     R1,R4,R1
   \   00000306   1A31               ADDS     R1,R1,#+26
   \   00000308   0120               MOVS     R0,#+1
   \   0000030A   ........           BL       H_line
   \   0000030E   0123               MOVS     R3,#+1
   \   00000310   3E22               MOVS     R2,#+62
   \   00000312   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000314   240E               LSRS     R4,R4,#+24
   \   00000316   0C21               MOVS     R1,#+12
   \   00000318   6143               MULS     R1,R4,R1
   \   0000031A   2431               ADDS     R1,R1,#+36
   \   0000031C   0120               MOVS     R0,#+1
   \   0000031E   ........           BL       H_line
   \                     ??NeuronsList_Event_24:
   \   00000322   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000324   240E               LSRS     R4,R4,#+24
   \   00000326   0C20               MOVS     R0,#+12
   \   00000328   6043               MULS     R0,R4,R0
   \   0000032A   1930               ADDS     R0,R0,#+25
   \   0000032C   5949               LDR      R1,??NeuronsList_Event_7+0x28  ;; Y_up
   \   0000032E   0022               MOVS     R2,#+0
   \   00000330   895E               LDRSH    R1,[R1, R2]
   \   00000332   8842               CMP      R0,R1
   \   00000334   C5DA               BGE      ??NeuronsList_Event_23
   \   00000336   5748               LDR      R0,??NeuronsList_Event_7+0x28  ;; Y_up
   \   00000338   0021               MOVS     R1,#+0
   \   0000033A   405E               LDRSH    R0,[R0, R1]
   \   0000033C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000033E   240E               LSRS     R4,R4,#+24
   \   00000340   0C21               MOVS     R1,#+12
   \   00000342   6143               MULS     R1,R4,R1
   \   00000344   2531               ADDS     R1,R1,#+37
   \   00000346   8842               CMP      R0,R1
   \   00000348   BBDA               BGE      ??NeuronsList_Event_23
   \   0000034A   5348               LDR      R0,??NeuronsList_Event_7+0x2C  ;; 0x13d7e9
   \   0000034C   0078               LDRB     R0,[R0, #+0]
   \   0000034E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000350   000E               LSRS     R0,R0,#+24
   \   00000352   0028               CMP      R0,#+0
   \   00000354   0BD1               BNE      ??NeuronsList_Event_25
   \   00000356   5148               LDR      R0,??NeuronsList_Event_7+0x30  ;; 0xfffff430
   \   00000358   8021               MOVS     R1,#+128
   \   0000035A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000035C   0160               STR      R1,[R0, #+0]
   \   0000035E   504A               LDR      R2,??NeuronsList_Event_7+0x34  ;; ButtonBipCounter
   \   00000360   5048               LDR      R0,??NeuronsList_Event_7+0x38  ;; g_counter
   \   00000362   03C8               LDM      R0!,{R0,R1}
   \   00000364   0023               MOVS     R3,#+0
   \   00000366   0830               ADDS     R0,R0,#+8
   \   00000368   5941               ADCS     R1,R1,R3
   \   0000036A   03C2               STM      R2!,{R0,R1}
   \   0000036C   083A               SUBS     R2,R2,#+8
   \                     ??NeuronsList_Event_25:
   \   0000036E   4E48               LDR      R0,??NeuronsList_Event_7+0x3C  ;; OpisWezl
   \   00000370   0078               LDRB     R0,[R0, #+0]
   \   00000372   0028               CMP      R0,#+0
   \   00000374   4AD1               BNE      ??NeuronsList_Event_26
   \   00000376   4D48               LDR      R0,??NeuronsList_Event_7+0x40  ;; NeuronIdChange
   \   00000378   4D49               LDR      R1,??NeuronsList_Event_7+0x44  ;; 0xc0ac
   \   0000037A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000037C   240E               LSRS     R4,R4,#+24
   \   0000037E   6242               RSBS     R2,R4,#+0
   \   00000380   3C4B               LDR      R3,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000382   1B78               LDRB     R3,[R3, #+0]
   \   00000384   D218               ADDS     R2,R2,R3
   \   00000386   0423               MOVS     R3,#+4
   \   00000388   5A43               MULS     R2,R3,R2
   \   0000038A   3D4B               LDR      R3,??NeuronsList_Event_7+0x14  ;; gProg
   \   0000038C   9A18               ADDS     R2,R3,R2
   \   0000038E   5118               ADDS     R1,R2,R1
   \   00000390   0160               STR      R1,[R0, #+0]
   \   00000392   4848               LDR      R0,??NeuronsList_Event_7+0x48  ;; NeuronNrChange
   \   00000394   0521               MOVS     R1,#+5
   \   00000396   091B               SUBS     R1,R1,R4
   \   00000398   364A               LDR      R2,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   0000039A   1278               LDRB     R2,[R2, #+0]
   \   0000039C   8918               ADDS     R1,R1,R2
   \   0000039E   0170               STRB     R1,[R0, #+0]
   \   000003A0   4348               LDR      R0,??NeuronsList_Event_7+0x44  ;; 0xc0ac
   \   000003A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003A4   240E               LSRS     R4,R4,#+24
   \   000003A6   6142               RSBS     R1,R4,#+0
   \   000003A8   324A               LDR      R2,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   000003AA   1278               LDRB     R2,[R2, #+0]
   \   000003AC   8918               ADDS     R1,R1,R2
   \   000003AE   0422               MOVS     R2,#+4
   \   000003B0   5143               MULS     R1,R2,R1
   \   000003B2   334A               LDR      R2,??NeuronsList_Event_7+0x14  ;; gProg
   \   000003B4   5118               ADDS     R1,R2,R1
   \   000003B6   0858               LDR      R0,[R1, R0]
   \   000003B8   0128               CMP      R0,#+1
   \   000003BA   1FDB               BLT      ??NeuronsList_Event_27
   \   000003BC   3D48               LDR      R0,??NeuronsList_Event_7+0x48  ;; NeuronNrChange
   \   000003BE   0621               MOVS     R1,#+6
   \   000003C0   091B               SUBS     R1,R1,R4
   \   000003C2   2C4A               LDR      R2,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   000003C4   1278               LDRB     R2,[R2, #+0]
   \   000003C6   8918               ADDS     R1,R1,R2
   \   000003C8   0170               STRB     R1,[R0, #+0]
   \   000003CA   2B48               LDR      R0,??NeuronsList_Event_7+0xC  ;; TextToChange
   \   000003CC   2B49               LDR      R1,??NeuronsList_Event_7+0x10  ;; 0xc156
   \   000003CE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003D0   240E               LSRS     R4,R4,#+24
   \   000003D2   6242               RSBS     R2,R4,#+0
   \   000003D4   274B               LDR      R3,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   000003D6   1B78               LDRB     R3,[R3, #+0]
   \   000003D8   D218               ADDS     R2,R2,R3
   \   000003DA   0A23               MOVS     R3,#+10
   \   000003DC   5A43               MULS     R2,R3,R2
   \   000003DE   284B               LDR      R3,??NeuronsList_Event_7+0x14  ;; gProg
   \   000003E0   9A18               ADDS     R2,R3,R2
   \   000003E2   5118               ADDS     R1,R2,R1
   \   000003E4   0160               STR      R1,[R0, #+0]
   \   000003E6   2748               LDR      R0,??NeuronsList_Event_7+0x18  ;; TextToChangeLength
   \   000003E8   0A21               MOVS     R1,#+10
   \   000003EA   0170               STRB     R1,[R0, #+0]
   \   000003EC   2648               LDR      R0,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   000003EE   2649               LDR      R1,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   000003F0   0968               LDR      R1,[R1, #+0]
   \   000003F2   0A22               MOVS     R2,#+10
   \   000003F4   5143               MULS     R1,R2,R1
   \   000003F6   C91C               ADDS     R1,R1,#+3
   \   000003F8   0160               STR      R1,[R0, #+0]
   \   000003FA   60E7               B        ??NeuronsList_Event_22
   \                     ??NeuronsList_Event_27:
   \   000003FC   2248               LDR      R0,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   000003FE   2249               LDR      R1,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   00000400   0968               LDR      R1,[R1, #+0]
   \   00000402   0A22               MOVS     R2,#+10
   \   00000404   5143               MULS     R1,R2,R1
   \   00000406   491C               ADDS     R1,R1,#+1
   \   00000408   0160               STR      R1,[R0, #+0]
   \   0000040A   58E7               B        ??NeuronsList_Event_22
   \                     ??NeuronsList_Event_26:
   \   0000040C   1B48               LDR      R0,??NeuronsList_Event_7+0x10  ;; 0xc156
   \   0000040E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000410   240E               LSRS     R4,R4,#+24
   \   00000412   6142               RSBS     R1,R4,#+0
   \   00000414   174A               LDR      R2,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000416   1278               LDRB     R2,[R2, #+0]
   \   00000418   8918               ADDS     R1,R1,R2
   \   0000041A   0A22               MOVS     R2,#+10
   \   0000041C   5143               MULS     R1,R2,R1
   \   0000041E   184A               LDR      R2,??NeuronsList_Event_7+0x14  ;; gProg
   \   00000420   5118               ADDS     R1,R2,R1
   \   00000422   085C               LDRB     R0,[R1, R0]
   \   00000424   0028               CMP      R0,#+0
   \   00000426   00D1               BNE      .+4
   \   00000428   2EE7               B        ??NeuronsList_Event_21
   \   0000042A   2248               LDR      R0,??NeuronsList_Event_7+0x48  ;; NeuronNrChange
   \   0000042C   0621               MOVS     R1,#+6
   \   0000042E   091B               SUBS     R1,R1,R4
   \   00000430   104A               LDR      R2,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000432   1278               LDRB     R2,[R2, #+0]
   \   00000434   8918               ADDS     R1,R1,R2
   \   00000436   0170               STRB     R1,[R0, #+0]
   \   00000438   0F48               LDR      R0,??NeuronsList_Event_7+0xC  ;; TextToChange
   \   0000043A   1049               LDR      R1,??NeuronsList_Event_7+0x10  ;; 0xc156
   \   0000043C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000043E   240E               LSRS     R4,R4,#+24
   \   00000440   6242               RSBS     R2,R4,#+0
   \   00000442   0C4B               LDR      R3,??NeuronsList_Event_7+0x8  ;; NeuronsListLine
   \   00000444   1B78               LDRB     R3,[R3, #+0]
   \   00000446   D218               ADDS     R2,R2,R3
   \   00000448   0A23               MOVS     R3,#+10
   \   0000044A   5A43               MULS     R2,R3,R2
   \   0000044C   0C4B               LDR      R3,??NeuronsList_Event_7+0x14  ;; gProg
   \   0000044E   9A18               ADDS     R2,R3,R2
   \   00000450   5118               ADDS     R1,R2,R1
   \   00000452   0160               STR      R1,[R0, #+0]
   \   00000454   0B48               LDR      R0,??NeuronsList_Event_7+0x18  ;; TextToChangeLength
   \   00000456   0A21               MOVS     R1,#+10
   \   00000458   0170               STRB     R1,[R0, #+0]
   \   0000045A   0B48               LDR      R0,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   0000045C   0A49               LDR      R1,??NeuronsList_Event_7+0x1C  ;; MenuLevel
   \   0000045E   0968               LDR      R1,[R1, #+0]
   \   00000460   0A22               MOVS     R2,#+10
   \   00000462   5143               MULS     R1,R2,R1
   \   00000464   C91C               ADDS     R1,R1,#+3
   \   00000466   0160               STR      R1,[R0, #+0]
   \   00000468   29E7               B        ??NeuronsList_Event_22
   \   0000046A   C046               Nop      
   \                     ??NeuronsList_Event_7:
   \   0000046C   ........           DC32     WaitOnCheckNode
   \   00000470   ........           DC32     Touch_EventTime
   \   00000474   ........           DC32     NeuronsListLine
   \   00000478   ........           DC32     TextToChange
   \   0000047C   56C10000           DC32     0xc156
   \   00000480   ........           DC32     gProg
   \   00000484   ........           DC32     TextToChangeLength
   \   00000488   ........           DC32     MenuLevel
   \   0000048C   ........           DC32     ProgramChange
   \   00000490   ........           DC32     Y_down
   \   00000494   ........           DC32     Y_up
   \   00000498   E9D71300           DC32     0x13d7e9
   \   0000049C   30F4FFFF           DC32     0xfffff430
   \   000004A0   ........           DC32     ButtonBipCounter
   \   000004A4   ........           DC32     g_counter
   \   000004A8   ........           DC32     OpisWezl
   \   000004AC   ........           DC32     NeuronIdChange
   \   000004B0   ACC00000           DC32     0xc0ac
   \   000004B4   ........           DC32     NeuronNrChange
   8587              
   8588          
   8589          

   \                                 In section Debug.txt, align 4, keep-with-next
   8590              void NeuronsList_Refresh(void)
   8591              {  
   \                     NeuronsList_Refresh:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   8592                
   8593                //for (char i=0; i<NumberNeurons; i++)  MainStage.SendStageChange[i]=20;
   8594                
   8595                
   8596                
   8597                static char Dzielnik20;
   8598                
   8599                //char CheckTrans=0;
   8600                //if (WaitOnCheckNode>g_counter) CheckTrans=1;
   8601                
   8602                
   8603                if (Dzielnik20<20) Dzielnik20++; else Dzielnik20=0;
   \   00000004   D848               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   1428               CMP      R0,#+20
   \   0000000A   05D2               BCS      ??NeuronsList_Refresh_1
   \   0000000C   D648               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000000E   D649               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000010   0978               LDRB     R1,[R1, #+0]
   \   00000012   491C               ADDS     R1,R1,#+1
   \   00000014   0170               STRB     R1,[R0, #+0]
   \   00000016   02E0               B        ??NeuronsList_Refresh_2
   \                     ??NeuronsList_Refresh_1:
   \   00000018   D348               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0170               STRB     R1,[R0, #+0]
   8604                
   8605                if (/*(!SlaveMode) &&*/ (OpisWezl==0))//je¿eli tryb Master
   \                     ??NeuronsList_Refresh_2:
   \   0000001E   D348               LDR      R0,??NeuronsList_Refresh_0+0x4  ;; OpisWezl
   \   00000020   0078               LDRB     R0,[R0, #+0]
   \   00000022   0028               CMP      R0,#+0
   \   00000024   00D0               BEQ      .+4
   \   00000026   59E2               B        ??NeuronsList_Refresh_3
   8606                {
   8607                  
   8608                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   \   00000028   6846               MOV      R0,SP
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   0170               STRB     R1,[R0, #+0]
   8609                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   \   0000002E   0021               MOVS     R1,#+0
   8610                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   \   00000030   0022               MOVS     R2,#+0
   8611                  char CurErr=0;
   \   00000032   0023               MOVS     R3,#+0
   8612                  char LIC=0;
   \   00000034   0025               MOVS     R5,#+0
   8613                  unsigned int Qality=0;
   \   00000036   0027               MOVS     R7,#+0
   8614                  char QIdx=TransQuality.MensurIndex;
   \   00000038   CD48               LDR      R0,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   0000003A   0078               LDRB     R0,[R0, #+0]
   8615                  char Ypoz;
   8616                    for (char i=0; i<6; i++) 
   \   0000003C   0024               MOVS     R4,#+0
   \   0000003E   57E0               B        ??NeuronsList_Refresh_4
   8617                    {
   8618                      ERRx1=0; ERRx2=0; ERRx3=0; CurErr=0;
   8619                      Ypoz=28+i*12;
   8620                     
   8621                      
   8622                      char Pen=1;
   8623                      if ((NeuronsList[(5-i)+NeuronsListLine].Bridge) && (TransQuality.SlowMensur[(5-i)+NeuronsListLine]))
   8624                      {
   8625                        CleanCanvasArea(12,Ypoz-1,7,9,1);
   8626                        //numer wêz³a dla wêz³ów mostowych
   8627                                char txt[9];
   8628                                sprintf(txt, "x%d", NeuronsList[(5-i)+NeuronsListLine].NeuronID);
                                       ^
Warning[Pe223]: function "sprintf" declared implicitly

          char ERRx1=0;  //iloæ b³êdów pojedyñczych
               ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c",8608  Warning[Pe550]: 
          variable "ERRx1" was set but never used

          char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
               ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c",8609  Warning[Pe550]: 
          variable "ERRx2" was set but never used

          char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
               ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c",8610  Warning[Pe550]: 
          variable "ERRx3" was set but never used

          char CurErr=0;
               ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c",8611  Warning[Pe550]: 
          variable "CurErr" was set but never used

          char LIC=0;
               ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c",8612  Warning[Pe177]: 
          variable "LIC" was declared but never referenced
   8629                                Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8630                           
   8631                        Pen=0;
   8632                      }else{
   8633                        CleanCanvasArea(12,Ypoz-1,8,9,0);
   8634                      }
   8635                      
   8636                      //ocena jakoci
   8637                      if (TransQuality.Mensur[(5-i)+NeuronsListLine])  //jezeli wykryta transmisja
   8638                      {
   8639                        if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Remote)
   8640                        {      
   8641                           
   8642                            if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && ((MainStage.StageI[(6-i)+NeuronsListLine].Port)!=0x8AAA))
   8643                            {
   8644                                CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   8645                            }
   8646                          else
   8647                            {
   8648                          
   8649                          
   8650                                char MI=TransQuality.MensurIndex;
   8651                                char PT=0;
   8652                                for (char b=0; b<5; b++)
   8653                                {
   8654                                  if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1 << MI)) PT++;
   8655                                  if (MI>0) MI--; else MI=31;   
   8656                                }
   8657                            
   8658                                  H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   8659                                  if (PT>1)H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   8660                                  if (PT>2)H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   8661                                  if (PT>3)H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)  
   8662                           }
   8663           
   8664                       
   8665                        }
   8666                        else if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   8667                        {
   8668                        }
   8669                        else{
   8670                              
   8671                                /*
   8672                                for (char b=0; b<32; b++)
   8673                                      {
   8674                                        if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   8675                                        {  
   8676                                          CurErr=0;
   8677                                        }else{
   8678                                          CurErr++;
   8679                                          if (CurErr==1) {ERRx1++;}
   8680                                          if (CurErr==2) {ERRx2++; ERRx1--; }
   8681                                          if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   8682                        
   8683                                        }
   8684                                        
   8685                                      }
   8686                     
   8687                                //wskanik jakoci              
   8688                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   8689                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   8690                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   8691                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)  
   8692                                */
   8693                          
   8694                                Qality=0;
   8695                                QIdx=TransQuality.MensurIndex;
   8696                                
   8697                                for (char k=1; k<31; k++)
   8698                                {
   8699                                  if (QIdx>0) {QIdx--;} else {QIdx=31;}
   8700                                  Qality+=(((TransQuality.Mensur[(5-i)+NeuronsListLine]>>(QIdx))&0x1)*(31-k));
   8701                                }
   8702                                
   8703                                //wskanik jakoci  
   8704                                if (Qality>300) H_line(12,Ypoz+6,7,Pen);                  //najwy¿sza jakoæ
   8705                                if (Qality>150) H_line(13,Ypoz+4,5,Pen);  //rednia jakoæ
   8706                                if (Qality>50) H_line(14,Ypoz+2,3,Pen);   //niska jakoæ  
   8707                                H_line(15,Ypoz,1,Pen);                    //jest/by³o po³¹czenie w badanym okresie
   8708                                
   8709                                
   8710                                if (NeuronsList[(5-i)+NeuronsListLine].IndirectCon) V_line(18,Ypoz,2,Pen);
   8711                                
   8712                                
   8713                        }       
   8714                                     
   8715                      }
   8716                      
   8717                      if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   8718                        {
   8719              
   8720                          if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && (((unsigned short)(MainStage.StageI[(6-i)+NeuronsListLine].Port))!=0x8AAA))
   8721                          {
   8722                              CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   8723                          }
   8724                        else
   8725                          {
   8726                              char SlowMensurTMP=0;
   8727                              
   8728                              
   8729                              //przepisanie kolejno bit po bicie TransQuality.SlowMensur. Po przepisaniu 0bit -okrela bierz¹c¹ minutê, 1Bit -poprzedni¹ minutê, 2Bit jeszcze wczeniejsz¹ itd.
   8730                              char idx=TransQuality.SlowMensurIndex;
   8731                              char Stan=0;
   8732                              for (char bit=0; bit<7; bit++) 
   8733                              {
   8734                                Stan=(TransQuality.SlowMensur[(5-i)+NeuronsListLine]>>idx)&0x1;
   8735                                SlowMensurTMP |= Stan<<bit; 
   8736                                
   8737                                if (idx>0) {idx--;} else {idx=7;}
   8738                              }
   8739                              
   8740                              if (((SlowMensurTMP&0x1) &&  (SlowMensurTMP&0x2)) || ((SlowMensurTMP&0x2) &&  (SlowMensurTMP&0x4)))     H_line(12,Ypoz+6,7,Pen); //najwy¿sza jakoæ  - je¿eli w dwuch z ostatnich trzech minut by³o po³¹czenie
   \                     ??NeuronsList_Refresh_5:
   \   00000040   B807               LSLS     R0,R7,#+30       ;; ZeroExtS R0,R7,#+30,#+30
   \   00000042   800F               LSRS     R0,R0,#+30
   \   00000044   0328               CMP      R0,#+3
   \   00000046   03D0               BEQ      ??NeuronsList_Refresh_6
   \   00000048   0620               MOVS     R0,#+6
   \   0000004A   3840               ANDS     R0,R0,R7
   \   0000004C   0628               CMP      R0,#+6
   \   0000004E   0AD1               BNE      ??NeuronsList_Refresh_7
   \                     ??NeuronsList_Refresh_6:
   \   00000050   3300               MOVS     R3,R6
   \   00000052   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000054   1B0E               LSRS     R3,R3,#+24
   \   00000056   0722               MOVS     R2,#+7
   \   00000058   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000005A   2D0E               LSRS     R5,R5,#+24
   \   0000005C   2900               MOVS     R1,R5
   \   0000005E   891D               ADDS     R1,R1,#+6
   \   00000060   0C20               MOVS     R0,#+12
   \   00000062   ........           BL       H_line
   8741                              if (SlowMensurTMP&0xF)                                                                                  H_line(13,Ypoz+4,5,Pen); //rednia jakoæ - je¿eli w jednym z ci¹gu ostatnich czterech minut by³o po³¹czenie
   \                     ??NeuronsList_Refresh_7:
   \   00000066   3807               LSLS     R0,R7,#+28
   \   00000068   0AD0               BEQ      ??NeuronsList_Refresh_8
   \   0000006A   3300               MOVS     R3,R6
   \   0000006C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000006E   1B0E               LSRS     R3,R3,#+24
   \   00000070   0522               MOVS     R2,#+5
   \   00000072   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000074   2D0E               LSRS     R5,R5,#+24
   \   00000076   2900               MOVS     R1,R5
   \   00000078   091D               ADDS     R1,R1,#+4
   \   0000007A   0D20               MOVS     R0,#+13
   \   0000007C   ........           BL       H_line
   8742                              if (SlowMensurTMP&0x3F)                                                                                 H_line(14,Ypoz+2,3,Pen); //niska jakoæ- je¿eli w jednym z ci¹gu ostatnich szeciu minut by³o po³¹czenie  
   \                     ??NeuronsList_Refresh_8:
   \   00000080   B806               LSLS     R0,R7,#+26
   \   00000082   0AD0               BEQ      ??NeuronsList_Refresh_9
   \   00000084   3300               MOVS     R3,R6
   \   00000086   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000088   1B0E               LSRS     R3,R3,#+24
   \   0000008A   0322               MOVS     R2,#+3
   \   0000008C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000008E   2D0E               LSRS     R5,R5,#+24
   \   00000090   2900               MOVS     R1,R5
   \   00000092   891C               ADDS     R1,R1,#+2
   \   00000094   0E20               MOVS     R0,#+14
   \   00000096   ........           BL       H_line
   8743                              if (SlowMensurTMP) H_line(15,Ypoz,1,Pen);                                                                                        //najni¿sza jakoæ- je¿eli w jednym z ci¹gu ostatnich omiu minut by³o po³¹czenie  
   \                     ??NeuronsList_Refresh_9:
   \   0000009A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000009C   3F0E               LSRS     R7,R7,#+24
   \   0000009E   002F               CMP      R7,#+0
   \   000000A0   09D0               BEQ      ??NeuronsList_Refresh_10
   \   000000A2   3300               MOVS     R3,R6
   \   000000A4   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000A6   1B0E               LSRS     R3,R3,#+24
   \   000000A8   0122               MOVS     R2,#+1
   \   000000AA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000AC   2D0E               LSRS     R5,R5,#+24
   \   000000AE   2900               MOVS     R1,R5
   \   000000B0   0F20               MOVS     R0,#+15
   \   000000B2   ........           BL       H_line
   8744                                
   8745                              
   8746                              if ((SlowMensurTMP) && (NeuronsList[(5-i)+NeuronsListLine].IndirectCon)) V_line(18,Ypoz,2,Pen);
   \                     ??NeuronsList_Refresh_10:
   \   000000B6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000B8   3F0E               LSRS     R7,R7,#+24
   \   000000BA   002F               CMP      R7,#+0
   \   000000BC   17D0               BEQ      ??NeuronsList_Refresh_11
   \   000000BE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C0   240E               LSRS     R4,R4,#+24
   \   000000C2   6042               RSBS     R0,R4,#+0
   \   000000C4   AB49               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   000000C6   0978               LDRB     R1,[R1, #+0]
   \   000000C8   4018               ADDS     R0,R0,R1
   \   000000CA   0C21               MOVS     R1,#+12
   \   000000CC   4843               MULS     R0,R1,R0
   \   000000CE   AA49               LDR      R1,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   000000D0   0818               ADDS     R0,R1,R0
   \   000000D2   4430               ADDS     R0,R0,#+68
   \   000000D4   0078               LDRB     R0,[R0, #+0]
   \   000000D6   0007               LSLS     R0,R0,#+28
   \   000000D8   09D5               BPL      ??NeuronsList_Refresh_11
   \   000000DA   3300               MOVS     R3,R6
   \   000000DC   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000DE   1B0E               LSRS     R3,R3,#+24
   \   000000E0   0222               MOVS     R2,#+2
   \   000000E2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E4   2D0E               LSRS     R5,R5,#+24
   \   000000E6   2900               MOVS     R1,R5
   \   000000E8   1220               MOVS     R0,#+18
   \   000000EA   ........           BL       V_line
   \                     ??NeuronsList_Refresh_11:
   \   000000EE   641C               ADDS     R4,R4,#+1
   \                     ??NeuronsList_Refresh_4:
   \   000000F0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F2   240E               LSRS     R4,R4,#+24
   \   000000F4   062C               CMP      R4,#+6
   \   000000F6   00D3               BCC      .+4
   \   000000F8   F0E1               B        ??NeuronsList_Refresh_3
   \   000000FA   6846               MOV      R0,SP
   \   000000FC   0021               MOVS     R1,#+0
   \   000000FE   0170               STRB     R1,[R0, #+0]
   \   00000100   0021               MOVS     R1,#+0
   \   00000102   0022               MOVS     R2,#+0
   \   00000104   0023               MOVS     R3,#+0
   \   00000106   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000108   240E               LSRS     R4,R4,#+24
   \   0000010A   0C25               MOVS     R5,#+12
   \   0000010C   6543               MULS     R5,R4,R5
   \   0000010E   1C35               ADDS     R5,R5,#+28
   \   00000110   0126               MOVS     R6,#+1
   \   00000112   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000114   240E               LSRS     R4,R4,#+24
   \   00000116   6042               RSBS     R0,R4,#+0
   \   00000118   964F               LDR      R7,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   0000011A   3F78               LDRB     R7,[R7, #+0]
   \   0000011C   C019               ADDS     R0,R0,R7
   \   0000011E   0C27               MOVS     R7,#+12
   \   00000120   7843               MULS     R0,R7,R0
   \   00000122   954F               LDR      R7,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   00000124   3818               ADDS     R0,R7,R0
   \   00000126   4430               ADDS     R0,R0,#+68
   \   00000128   0078               LDRB     R0,[R0, #+0]
   \   0000012A   C006               LSLS     R0,R0,#+27
   \   0000012C   3BD5               BPL      ??NeuronsList_Refresh_12
   \   0000012E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000130   240E               LSRS     R4,R4,#+24
   \   00000132   6042               RSBS     R0,R4,#+0
   \   00000134   8F49               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   00000136   0978               LDRB     R1,[R1, #+0]
   \   00000138   4018               ADDS     R0,R0,R1
   \   0000013A   8D49               LDR      R1,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   0000013C   0818               ADDS     R0,R1,R0
   \   0000013E   007A               LDRB     R0,[R0, #+8]
   \   00000140   0028               CMP      R0,#+0
   \   00000142   30D0               BEQ      ??NeuronsList_Refresh_12
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   0923               MOVS     R3,#+9
   \   0000014C   0722               MOVS     R2,#+7
   \   0000014E   691E               SUBS     R1,R5,#+1
   \   00000150   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000152   090E               LSRS     R1,R1,#+24
   \   00000154   0C20               MOVS     R0,#+12
   \   00000156   ........           BL       CleanCanvasArea
   \   0000015A   02B0               ADD      SP,SP,#+8
   \   0000015C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000015E   240E               LSRS     R4,R4,#+24
   \   00000160   6042               RSBS     R0,R4,#+0
   \   00000162   8449               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   00000164   0978               LDRB     R1,[R1, #+0]
   \   00000166   4018               ADDS     R0,R0,R1
   \   00000168   0C21               MOVS     R1,#+12
   \   0000016A   4843               MULS     R0,R1,R0
   \   0000016C   8249               LDR      R1,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   0000016E   0818               ADDS     R0,R1,R0
   \   00000170   026C               LDR      R2,[R0, #+64]
   \   00000172   82A1               ADR      R1,??NeuronsList_Refresh_0+0x14  ;; "x%d"
   \   00000174   01A8               ADD      R0,SP,#+4
   \   00000176   ........           BL       sprintf
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   0020               MOVS     R0,#+0
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   6921               MOVS     R1,#+105
   \   00000182   1020               MOVS     R0,#+16
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   1721               MOVS     R1,#+23
   \   00000188   0820               MOVS     R0,#+8
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000018E   240E               LSRS     R4,R4,#+24
   \   00000190   0C23               MOVS     R3,#+12
   \   00000192   6343               MULS     R3,R4,R3
   \   00000194   1B33               ADDS     R3,R3,#+27
   \   00000196   1622               MOVS     R2,#+22
   \   00000198   0021               MOVS     R1,#+0
   \   0000019A   07A8               ADD      R0,SP,#+28
   \   0000019C   ........           BL       Label
   \   000001A0   06B0               ADD      SP,SP,#+24
   \   000001A2   0026               MOVS     R6,#+0
   \   000001A4   0BE0               B        ??NeuronsList_Refresh_13
   \                     ??NeuronsList_Refresh_12:
   \   000001A6   82B0               SUB      SP,SP,#+8
   \   000001A8   0020               MOVS     R0,#+0
   \   000001AA   0090               STR      R0,[SP, #+0]
   \   000001AC   0923               MOVS     R3,#+9
   \   000001AE   0822               MOVS     R2,#+8
   \   000001B0   691E               SUBS     R1,R5,#+1
   \   000001B2   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001B4   090E               LSRS     R1,R1,#+24
   \   000001B6   0C20               MOVS     R0,#+12
   \   000001B8   ........           BL       CleanCanvasArea
   \   000001BC   02B0               ADD      SP,SP,#+8
   \                     ??NeuronsList_Refresh_13:
   \   000001BE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001C0   240E               LSRS     R4,R4,#+24
   \   000001C2   6042               RSBS     R0,R4,#+0
   \   000001C4   6B49               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   000001C6   0978               LDRB     R1,[R1, #+0]
   \   000001C8   4018               ADDS     R0,R0,R1
   \   000001CA   0421               MOVS     R1,#+4
   \   000001CC   4843               MULS     R0,R1,R0
   \   000001CE   6849               LDR      R1,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   000001D0   0818               ADDS     R0,R1,R0
   \   000001D2   006E               LDR      R0,[R0, #+96]
   \   000001D4   0028               CMP      R0,#+0
   \   000001D6   00D1               BNE      .+4
   \   000001D8   1DE1               B        ??NeuronsList_Refresh_14
   \   000001DA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001DC   240E               LSRS     R4,R4,#+24
   \   000001DE   6042               RSBS     R0,R4,#+0
   \   000001E0   6449               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   000001E2   0978               LDRB     R1,[R1, #+0]
   \   000001E4   4018               ADDS     R0,R0,R1
   \   000001E6   0C21               MOVS     R1,#+12
   \   000001E8   4843               MULS     R0,R1,R0
   \   000001EA   6349               LDR      R1,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   000001EC   0818               ADDS     R0,R1,R0
   \   000001EE   3C30               ADDS     R0,R0,#+60
   \   000001F0   0078               LDRB     R0,[R0, #+0]
   \   000001F2   0428               CMP      R0,#+4
   \   000001F4   00D0               BEQ      .+4
   \   000001F6   82E0               B        ??NeuronsList_Refresh_15
   \   000001F8   5B48               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   000001FA   0078               LDRB     R0,[R0, #+0]
   \   000001FC   0A28               CMP      R0,#+10
   \   000001FE   2BD2               BCS      ??NeuronsList_Refresh_16
   \   00000200   9220               MOVS     R0,#+146
   \   00000202   4000               LSLS     R0,R0,#+1        ;; #+292
   \   00000204   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000206   240E               LSRS     R4,R4,#+24
   \   00000208   6142               RSBS     R1,R4,#+0
   \   0000020A   5A4A               LDR      R2,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   0000020C   1278               LDRB     R2,[R2, #+0]
   \   0000020E   8918               ADDS     R1,R1,R2
   \   00000210   1622               MOVS     R2,#+22
   \   00000212   5143               MULS     R1,R2,R1
   \   00000214   B34A               LDR      R2,??NeuronsList_Refresh_17  ;; MainStage
   \   00000216   5118               ADDS     R1,R2,R1
   \   00000218   085A               LDRH     R0,[R1, R0]
   \   0000021A   0004               LSLS     R0,R0,#+16
   \   0000021C   1CD5               BPL      ??NeuronsList_Refresh_16
   \   0000021E   9220               MOVS     R0,#+146
   \   00000220   4000               LSLS     R0,R0,#+1        ;; #+292
   \   00000222   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000224   240E               LSRS     R4,R4,#+24
   \   00000226   6142               RSBS     R1,R4,#+0
   \   00000228   524A               LDR      R2,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   0000022A   1278               LDRB     R2,[R2, #+0]
   \   0000022C   8918               ADDS     R1,R1,R2
   \   0000022E   1622               MOVS     R2,#+22
   \   00000230   5143               MULS     R1,R2,R1
   \   00000232   AC4A               LDR      R2,??NeuronsList_Refresh_17  ;; MainStage
   \   00000234   5118               ADDS     R1,R2,R1
   \   00000236   085A               LDRH     R0,[R1, R0]
   \   00000238   AB49               LDR      R1,??NeuronsList_Refresh_17+0x4  ;; 0x8aaa
   \   0000023A   8842               CMP      R0,R1
   \   0000023C   0CD0               BEQ      ??NeuronsList_Refresh_16
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0920               MOVS     R0,#+9
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   0623               MOVS     R3,#+6
   \   00000246   6A1E               SUBS     R2,R5,#+1
   \   00000248   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000024A   120E               LSRS     R2,R2,#+24
   \   0000024C   0C21               MOVS     R1,#+12
   \   0000024E   A748               LDR      R0,??NeuronsList_Refresh_17+0x8  ;; BateriaWyladowana
   \   00000250   ........           BL       CopyToCanvasPoint
   \   00000254   02B0               ADD      SP,SP,#+8
   \   00000256   DEE0               B        ??NeuronsList_Refresh_14
   \                     ??NeuronsList_Refresh_16:
   \   00000258   4548               LDR      R0,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   0000025A   0078               LDRB     R0,[R0, #+0]
   \   0000025C   0027               MOVS     R7,#+0
   \   0000025E   0021               MOVS     R1,#+0
   \   00000260   01E0               B        ??NeuronsList_Refresh_18
   \                     ??NeuronsList_Refresh_19:
   \   00000262   1F20               MOVS     R0,#+31
   \                     ??NeuronsList_Refresh_20:
   \   00000264   491C               ADDS     R1,R1,#+1
   \                     ??NeuronsList_Refresh_18:
   \   00000266   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000268   090E               LSRS     R1,R1,#+24
   \   0000026A   0529               CMP      R1,#+5
   \   0000026C   16D2               BCS      ??NeuronsList_Refresh_21
   \   0000026E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000270   240E               LSRS     R4,R4,#+24
   \   00000272   6242               RSBS     R2,R4,#+0
   \   00000274   3F4B               LDR      R3,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   00000276   1B78               LDRB     R3,[R3, #+0]
   \   00000278   D218               ADDS     R2,R2,R3
   \   0000027A   0423               MOVS     R3,#+4
   \   0000027C   5A43               MULS     R2,R3,R2
   \   0000027E   3C4B               LDR      R3,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   00000280   9A18               ADDS     R2,R3,R2
   \   00000282   126E               LDR      R2,[R2, #+96]
   \   00000284   0123               MOVS     R3,#+1
   \   00000286   8340               LSLS     R3,R3,R0
   \   00000288   1340               ANDS     R3,R3,R2
   \   0000028A   002B               CMP      R3,#+0
   \   0000028C   00D0               BEQ      ??NeuronsList_Refresh_22
   \   0000028E   7F1C               ADDS     R7,R7,#+1
   \                     ??NeuronsList_Refresh_22:
   \   00000290   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000292   000E               LSRS     R0,R0,#+24
   \   00000294   0128               CMP      R0,#+1
   \   00000296   E4D3               BCC      ??NeuronsList_Refresh_19
   \   00000298   401E               SUBS     R0,R0,#+1
   \   0000029A   E3E7               B        ??NeuronsList_Refresh_20
   \                     ??NeuronsList_Refresh_21:
   \   0000029C   0123               MOVS     R3,#+1
   \   0000029E   0122               MOVS     R2,#+1
   \   000002A0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002A2   2D0E               LSRS     R5,R5,#+24
   \   000002A4   2900               MOVS     R1,R5
   \   000002A6   0F20               MOVS     R0,#+15
   \   000002A8   ........           BL       H_line
   \   000002AC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002AE   3F0E               LSRS     R7,R7,#+24
   \   000002B0   022F               CMP      R7,#+2
   \   000002B2   08D3               BCC      ??NeuronsList_Refresh_23
   \   000002B4   0123               MOVS     R3,#+1
   \   000002B6   0322               MOVS     R2,#+3
   \   000002B8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002BA   2D0E               LSRS     R5,R5,#+24
   \   000002BC   2900               MOVS     R1,R5
   \   000002BE   891C               ADDS     R1,R1,#+2
   \   000002C0   0E20               MOVS     R0,#+14
   \   000002C2   ........           BL       H_line
   \                     ??NeuronsList_Refresh_23:
   \   000002C6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002C8   3F0E               LSRS     R7,R7,#+24
   \   000002CA   032F               CMP      R7,#+3
   \   000002CC   08D3               BCC      ??NeuronsList_Refresh_24
   \   000002CE   0123               MOVS     R3,#+1
   \   000002D0   0522               MOVS     R2,#+5
   \   000002D2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002D4   2D0E               LSRS     R5,R5,#+24
   \   000002D6   2900               MOVS     R1,R5
   \   000002D8   091D               ADDS     R1,R1,#+4
   \   000002DA   0D20               MOVS     R0,#+13
   \   000002DC   ........           BL       H_line
   \                     ??NeuronsList_Refresh_24:
   \   000002E0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002E2   3F0E               LSRS     R7,R7,#+24
   \   000002E4   042F               CMP      R7,#+4
   \   000002E6   00D2               BCS      .+4
   \   000002E8   95E0               B        ??NeuronsList_Refresh_14
   \   000002EA   0123               MOVS     R3,#+1
   \   000002EC   0722               MOVS     R2,#+7
   \   000002EE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002F0   2D0E               LSRS     R5,R5,#+24
   \   000002F2   2900               MOVS     R1,R5
   \   000002F4   891D               ADDS     R1,R1,#+6
   \   000002F6   0C20               MOVS     R0,#+12
   \   000002F8   ........           BL       H_line
   \   000002FC   8BE0               B        ??NeuronsList_Refresh_14
   \                     ??NeuronsList_Refresh_15:
   \   000002FE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000300   240E               LSRS     R4,R4,#+24
   \   00000302   6042               RSBS     R0,R4,#+0
   \   00000304   1B49               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   00000306   0978               LDRB     R1,[R1, #+0]
   \   00000308   4018               ADDS     R0,R0,R1
   \   0000030A   0C21               MOVS     R1,#+12
   \   0000030C   4843               MULS     R0,R1,R0
   \   0000030E   1A49               LDR      R1,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   00000310   0818               ADDS     R0,R1,R0
   \   00000312   3C30               ADDS     R0,R0,#+60
   \   00000314   0078               LDRB     R0,[R0, #+0]
   \   00000316   0528               CMP      R0,#+5
   \   00000318   00D1               BNE      .+4
   \   0000031A   7CE0               B        ??NeuronsList_Refresh_14
   \   0000031C   0027               MOVS     R7,#+0
   \   0000031E   1448               LDR      R0,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   00000320   0078               LDRB     R0,[R0, #+0]
   \   00000322   0121               MOVS     R1,#+1
   \   00000324   15E0               B        ??NeuronsList_Refresh_25
   \                     ??NeuronsList_Refresh_26:
   \   00000326   1F20               MOVS     R0,#+31
   \                     ??NeuronsList_Refresh_27:
   \   00000328   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000032A   240E               LSRS     R4,R4,#+24
   \   0000032C   6242               RSBS     R2,R4,#+0
   \   0000032E   114B               LDR      R3,??NeuronsList_Refresh_0+0xC  ;; NeuronsListLine
   \   00000330   1B78               LDRB     R3,[R3, #+0]
   \   00000332   D218               ADDS     R2,R2,R3
   \   00000334   0423               MOVS     R3,#+4
   \   00000336   5A43               MULS     R2,R3,R2
   \   00000338   0D4B               LDR      R3,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   0000033A   9A18               ADDS     R2,R3,R2
   \   0000033C   136E               LDR      R3,[R2, #+96]
   \   0000033E   C340               LSRS     R3,R3,R0
   \   00000340   0122               MOVS     R2,#+1
   \   00000342   1A40               ANDS     R2,R2,R3
   \   00000344   1F23               MOVS     R3,#+31
   \   00000346   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000348   090E               LSRS     R1,R1,#+24
   \   0000034A   5B1A               SUBS     R3,R3,R1
   \   0000034C   5A43               MULS     R2,R3,R2
   \   0000034E   BF18               ADDS     R7,R7,R2
   \   00000350   491C               ADDS     R1,R1,#+1
   \                     ??NeuronsList_Refresh_25:
   \   00000352   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000354   090E               LSRS     R1,R1,#+24
   \   00000356   1F29               CMP      R1,#+31
   \   00000358   12D2               BCS      ??NeuronsList_Refresh_28
   \   0000035A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000035C   000E               LSRS     R0,R0,#+24
   \   0000035E   0128               CMP      R0,#+1
   \   00000360   E1D3               BCC      ??NeuronsList_Refresh_26
   \   00000362   401E               SUBS     R0,R0,#+1
   \   00000364   E0E7               B        ??NeuronsList_Refresh_27
   \   00000366   C046               Nop      
   \                     ??NeuronsList_Refresh_0:
   \   00000368   ........           DC32     ??Dzielnik20
   \   0000036C   ........           DC32     OpisWezl
   \   00000370   ........           DC32     TransQuality
   \   00000374   ........           DC32     NeuronsListLine
   \   00000378   ........           DC32     NeuronsList
   \   0000037C   78256400           DC8      "x%d"
   \                     ??NeuronsList_Refresh_28:
   \   00000380   FF20               MOVS     R0,#+255
   \   00000382   2E30               ADDS     R0,R0,#+46       ;; #+301
   \   00000384   8742               CMP      R7,R0
   \   00000386   0AD3               BCC      ??NeuronsList_Refresh_29
   \   00000388   3300               MOVS     R3,R6
   \   0000038A   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000038C   1B0E               LSRS     R3,R3,#+24
   \   0000038E   0722               MOVS     R2,#+7
   \   00000390   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000392   2D0E               LSRS     R5,R5,#+24
   \   00000394   2900               MOVS     R1,R5
   \   00000396   891D               ADDS     R1,R1,#+6
   \   00000398   0C20               MOVS     R0,#+12
   \   0000039A   ........           BL       H_line
   \                     ??NeuronsList_Refresh_29:
   \   0000039E   972F               CMP      R7,#+151
   \   000003A0   0AD3               BCC      ??NeuronsList_Refresh_30
   \   000003A2   3300               MOVS     R3,R6
   \   000003A4   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000003A6   1B0E               LSRS     R3,R3,#+24
   \   000003A8   0522               MOVS     R2,#+5
   \   000003AA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003AC   2D0E               LSRS     R5,R5,#+24
   \   000003AE   2900               MOVS     R1,R5
   \   000003B0   091D               ADDS     R1,R1,#+4
   \   000003B2   0D20               MOVS     R0,#+13
   \   000003B4   ........           BL       H_line
   \                     ??NeuronsList_Refresh_30:
   \   000003B8   332F               CMP      R7,#+51
   \   000003BA   0AD3               BCC      ??NeuronsList_Refresh_31
   \   000003BC   3300               MOVS     R3,R6
   \   000003BE   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000003C0   1B0E               LSRS     R3,R3,#+24
   \   000003C2   0322               MOVS     R2,#+3
   \   000003C4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003C6   2D0E               LSRS     R5,R5,#+24
   \   000003C8   2900               MOVS     R1,R5
   \   000003CA   891C               ADDS     R1,R1,#+2
   \   000003CC   0E20               MOVS     R0,#+14
   \   000003CE   ........           BL       H_line
   \                     ??NeuronsList_Refresh_31:
   \   000003D2   3300               MOVS     R3,R6
   \   000003D4   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000003D6   1B0E               LSRS     R3,R3,#+24
   \   000003D8   0122               MOVS     R2,#+1
   \   000003DA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003DC   2D0E               LSRS     R5,R5,#+24
   \   000003DE   2900               MOVS     R1,R5
   \   000003E0   0F20               MOVS     R0,#+15
   \   000003E2   ........           BL       H_line
   \   000003E6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003E8   240E               LSRS     R4,R4,#+24
   \   000003EA   6042               RSBS     R0,R4,#+0
   \   000003EC   4049               LDR      R1,??NeuronsList_Refresh_17+0xC  ;; NeuronsListLine
   \   000003EE   0978               LDRB     R1,[R1, #+0]
   \   000003F0   4018               ADDS     R0,R0,R1
   \   000003F2   0C21               MOVS     R1,#+12
   \   000003F4   4843               MULS     R0,R1,R0
   \   000003F6   3F49               LDR      R1,??NeuronsList_Refresh_17+0x10  ;; NeuronsList
   \   000003F8   0818               ADDS     R0,R1,R0
   \   000003FA   4430               ADDS     R0,R0,#+68
   \   000003FC   0078               LDRB     R0,[R0, #+0]
   \   000003FE   0007               LSLS     R0,R0,#+28
   \   00000400   09D5               BPL      ??NeuronsList_Refresh_14
   \   00000402   3300               MOVS     R3,R6
   \   00000404   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000406   1B0E               LSRS     R3,R3,#+24
   \   00000408   0222               MOVS     R2,#+2
   \   0000040A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000040C   2D0E               LSRS     R5,R5,#+24
   \   0000040E   2900               MOVS     R1,R5
   \   00000410   1220               MOVS     R0,#+18
   \   00000412   ........           BL       V_line
   \                     ??NeuronsList_Refresh_14:
   \   00000416   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000418   240E               LSRS     R4,R4,#+24
   \   0000041A   6042               RSBS     R0,R4,#+0
   \   0000041C   3449               LDR      R1,??NeuronsList_Refresh_17+0xC  ;; NeuronsListLine
   \   0000041E   0978               LDRB     R1,[R1, #+0]
   \   00000420   4018               ADDS     R0,R0,R1
   \   00000422   0C21               MOVS     R1,#+12
   \   00000424   4843               MULS     R0,R1,R0
   \   00000426   3349               LDR      R1,??NeuronsList_Refresh_17+0x10  ;; NeuronsList
   \   00000428   0818               ADDS     R0,R1,R0
   \   0000042A   3C30               ADDS     R0,R0,#+60
   \   0000042C   0078               LDRB     R0,[R0, #+0]
   \   0000042E   0528               CMP      R0,#+5
   \   00000430   00D0               BEQ      .+4
   \   00000432   5CE6               B        ??NeuronsList_Refresh_11
   \   00000434   3048               LDR      R0,??NeuronsList_Refresh_17+0x14  ;; ??Dzielnik20
   \   00000436   0078               LDRB     R0,[R0, #+0]
   \   00000438   0A28               CMP      R0,#+10
   \   0000043A   2BD2               BCS      ??NeuronsList_Refresh_32
   \   0000043C   9220               MOVS     R0,#+146
   \   0000043E   4000               LSLS     R0,R0,#+1        ;; #+292
   \   00000440   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000442   240E               LSRS     R4,R4,#+24
   \   00000444   6142               RSBS     R1,R4,#+0
   \   00000446   2A4A               LDR      R2,??NeuronsList_Refresh_17+0xC  ;; NeuronsListLine
   \   00000448   1278               LDRB     R2,[R2, #+0]
   \   0000044A   8918               ADDS     R1,R1,R2
   \   0000044C   1622               MOVS     R2,#+22
   \   0000044E   5143               MULS     R1,R2,R1
   \   00000450   244A               LDR      R2,??NeuronsList_Refresh_17  ;; MainStage
   \   00000452   5118               ADDS     R1,R2,R1
   \   00000454   085A               LDRH     R0,[R1, R0]
   \   00000456   0004               LSLS     R0,R0,#+16
   \   00000458   1CD5               BPL      ??NeuronsList_Refresh_32
   \   0000045A   9220               MOVS     R0,#+146
   \   0000045C   4000               LSLS     R0,R0,#+1        ;; #+292
   \   0000045E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000460   240E               LSRS     R4,R4,#+24
   \   00000462   6142               RSBS     R1,R4,#+0
   \   00000464   224A               LDR      R2,??NeuronsList_Refresh_17+0xC  ;; NeuronsListLine
   \   00000466   1278               LDRB     R2,[R2, #+0]
   \   00000468   8918               ADDS     R1,R1,R2
   \   0000046A   1622               MOVS     R2,#+22
   \   0000046C   5143               MULS     R1,R2,R1
   \   0000046E   1D4A               LDR      R2,??NeuronsList_Refresh_17  ;; MainStage
   \   00000470   5118               ADDS     R1,R2,R1
   \   00000472   085A               LDRH     R0,[R1, R0]
   \   00000474   1C49               LDR      R1,??NeuronsList_Refresh_17+0x4  ;; 0x8aaa
   \   00000476   8842               CMP      R0,R1
   \   00000478   0CD0               BEQ      ??NeuronsList_Refresh_32
   \   0000047A   82B0               SUB      SP,SP,#+8
   \   0000047C   0920               MOVS     R0,#+9
   \   0000047E   0090               STR      R0,[SP, #+0]
   \   00000480   0623               MOVS     R3,#+6
   \   00000482   6A1E               SUBS     R2,R5,#+1
   \   00000484   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000486   120E               LSRS     R2,R2,#+24
   \   00000488   0C21               MOVS     R1,#+12
   \   0000048A   1848               LDR      R0,??NeuronsList_Refresh_17+0x8  ;; BateriaWyladowana
   \   0000048C   ........           BL       CopyToCanvasPoint
   \   00000490   02B0               ADD      SP,SP,#+8
   \   00000492   2CE6               B        ??NeuronsList_Refresh_11
   \                     ??NeuronsList_Refresh_32:
   \   00000494   0027               MOVS     R7,#+0
   \   00000496   1948               LDR      R0,??NeuronsList_Refresh_17+0x18  ;; TransQuality + 1
   \   00000498   0078               LDRB     R0,[R0, #+0]
   \   0000049A   0022               MOVS     R2,#+0
   \   0000049C   0021               MOVS     R1,#+0
   \   0000049E   01E0               B        ??NeuronsList_Refresh_33
   \                     ??NeuronsList_Refresh_34:
   \   000004A0   0720               MOVS     R0,#+7
   \                     ??NeuronsList_Refresh_35:
   \   000004A2   491C               ADDS     R1,R1,#+1
   \                     ??NeuronsList_Refresh_33:
   \   000004A4   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000004A6   090E               LSRS     R1,R1,#+24
   \   000004A8   0729               CMP      R1,#+7
   \   000004AA   00D3               BCC      .+4
   \   000004AC   C8E5               B        ??NeuronsList_Refresh_5
   \   000004AE   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000004B0   240E               LSRS     R4,R4,#+24
   \   000004B2   6242               RSBS     R2,R4,#+0
   \   000004B4   0E4B               LDR      R3,??NeuronsList_Refresh_17+0xC  ;; NeuronsListLine
   \   000004B6   1B78               LDRB     R3,[R3, #+0]
   \   000004B8   D218               ADDS     R2,R2,R3
   \   000004BA   114B               LDR      R3,??NeuronsList_Refresh_17+0x1C  ;; TransQuality
   \   000004BC   9A18               ADDS     R2,R3,R2
   \   000004BE   137A               LDRB     R3,[R2, #+8]
   \   000004C0   0341               ASRS     R3,R3,R0
   \   000004C2   0122               MOVS     R2,#+1
   \   000004C4   1A40               ANDS     R2,R2,R3
   \   000004C6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000004C8   120E               LSRS     R2,R2,#+24
   \   000004CA   8A40               LSLS     R2,R2,R1
   \   000004CC   3A43               ORRS     R2,R2,R7
   \   000004CE   1700               MOVS     R7,R2
   \   000004D0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000004D2   000E               LSRS     R0,R0,#+24
   \   000004D4   0128               CMP      R0,#+1
   \   000004D6   E3D3               BCC      ??NeuronsList_Refresh_34
   \   000004D8   401E               SUBS     R0,R0,#+1
   \   000004DA   E2E7               B        ??NeuronsList_Refresh_35
   8747                          }  
   8748                             
   8749                             /*
   8750                              LIC=0;
   8751                              for (char k=0; k<5; k++)
   8752                              {
   8753                                if ((TransQuality.SlowMensur[(5-i)+NeuronsListLine]>>k)&0x1) LIC++;
   8754                              }
   8755                              if (LIC>0) 
   8756                              {
   8757                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   8758                                H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)                      
   8759                              }
   8760                              if (LIC>1)
   8761                              {
   8762                                H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   8763                                H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ) 
   8764                              }
   8765                            }
   8766                            */
   8767                            
   8768                            
   8769                        
   8770                        }
   8771                      
   8772                        
   8773                        #ifdef  DIRECT_Q_MESURE 
   8774                        static char Div=0;
   8775                      
   8776                        if (Div<10)
   8777                        {
   8778                         Div++; 
   8779                        }else{
   8780                          Div=0;
   8781                        
   8782                              char txt[6];
   8783                              sprintf(txt, "%d",  TransQuality.DirectkMensur[(5-i)+NeuronsListLine]);
   8784                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8785                        }  
   8786                         #endif
   8787                      
   8788                        
   8789                    }
   8790                }
   8791                
   8792                
   8793              
   8794             }//________________________________________________________________________
   \                     ??NeuronsList_Refresh_3:
   \   000004DC   05B0               ADD      SP,SP,#+20
   \   000004DE   F0BC               POP      {R4-R7}
   \   000004E0   01BC               POP      {R0}
   \   000004E2   0047               BX       R0               ;; return
   \                     ??NeuronsList_Refresh_17:
   \   000004E4   ........           DC32     MainStage
   \   000004E8   AA8A0000           DC32     0x8aaa
   \   000004EC   ........           DC32     BateriaWyladowana
   \   000004F0   ........           DC32     NeuronsListLine
   \   000004F4   ........           DC32     NeuronsList
   \   000004F8   ........           DC32     ??Dzielnik20
   \   000004FC   ........           DC32     TransQuality + 1
   \   00000500   ........           DC32     TransQuality

   \                                 In section .bss, align 1
   \                     ??Dzielnik20:
   \   00000000                      DS8 1
   8795          
   8796          
   8797          
   8798              
   8799                
   8800                

   \                                 In section Debug.txt, align 4, keep-with-next
   8801          void NeuronNrChange_Paint( int *ValToChange)
   8802                { 
   \                     NeuronNrChange_Paint:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   8803                  List_Paint(" ID ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   4FA0               ADR      R0,??NeuronNrChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   4C48               LDR      R0,??NeuronNrChange_Paint_0+0x4  ;; `?<Constant " ID ">`
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   8804                  
   8805             
   8806                  if (VCTT_ill==0) for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002E   4B48               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000030   0078               LDRB     R0,[R0, #+0]
   \   00000032   0028               CMP      R0,#+0
   \   00000034   0BD1               BNE      ??NeuronNrChange_Paint_1
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   05E0               B        ??NeuronNrChange_Paint_2
   \                     ??NeuronNrChange_Paint_3:
   \   0000003A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \   0000003E   4849               LDR      R1,??NeuronNrChange_Paint_0+0xC  ;; ValueChangeTxtTmp
   \   00000040   0022               MOVS     R2,#+0
   \   00000042   0A54               STRB     R2,[R1, R0]
   \   00000044   401C               ADDS     R0,R0,#+1
   \                     ??NeuronNrChange_Paint_2:
   \   00000046   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   0828               CMP      R0,#+8
   \   0000004C   F5D3               BCC      ??NeuronNrChange_Paint_3
   8807                  
   8808                  H_line(12,106,39,1);
   \                     ??NeuronNrChange_Paint_1:
   \   0000004E   0123               MOVS     R3,#+1
   \   00000050   2722               MOVS     R2,#+39
   \   00000052   6A21               MOVS     R1,#+106
   \   00000054   0C20               MOVS     R0,#+12
   \   00000056   ........           BL       H_line
   8809                  H_line(12,96,39,1);
   \   0000005A   0123               MOVS     R3,#+1
   \   0000005C   2722               MOVS     R2,#+39
   \   0000005E   6021               MOVS     R1,#+96
   \   00000060   0C20               MOVS     R0,#+12
   \   00000062   ........           BL       H_line
   8810                  V_line(11,97,9,1); 
   \   00000066   0123               MOVS     R3,#+1
   \   00000068   0922               MOVS     R2,#+9
   \   0000006A   6121               MOVS     R1,#+97
   \   0000006C   0B20               MOVS     R0,#+11
   \   0000006E   ........           BL       V_line
   8811                  V_line(50,97,9,1); 
   \   00000072   0123               MOVS     R3,#+1
   \   00000074   0922               MOVS     R2,#+9
   \   00000076   6121               MOVS     R1,#+97
   \   00000078   3220               MOVS     R0,#+50
   \   0000007A   ........           BL       V_line
   8812          
   8813          
   8814                  
   8815                  Label(ValueChangeTxtTmp,1,48,97,8,34,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000007E   82B0               SUB      SP,SP,#+8
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   0090               STR      R0,[SP, #+0]
   \   00000084   8021               MOVS     R1,#+128
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   2221               MOVS     R1,#+34
   \   0000008C   0820               MOVS     R0,#+8
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   6123               MOVS     R3,#+97
   \   00000092   3022               MOVS     R2,#+48
   \   00000094   0121               MOVS     R1,#+1
   \   00000096   3248               LDR      R0,??NeuronNrChange_Paint_0+0xC  ;; ValueChangeTxtTmp
   \   00000098   ........           BL       Label
   \   0000009C   06B0               ADD      SP,SP,#+24
   8816                                
   8817          
   8818                  
   8819                  char txt[2];
   8820                  txt[1]=0;
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   4170               STRB     R1,[R0, #+1]
   8821                  char ind=0;
   \   000000A4   0026               MOVS     R6,#+0
   8822                  for (char j=0; j<3; j++)
   \   000000A6   0024               MOVS     R4,#+0
   \   000000A8   24E0               B        ??NeuronNrChange_Paint_4
   8823                    for (char i=0; i<3; i++)
   8824                    {
   8825                      ind++;
   \                     ??NeuronNrChange_Paint_5:
   \   000000AA   761C               ADDS     R6,R6,#+1
   8826                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000AC   0122               MOVS     R2,#+1
   \   000000AE   6946               MOV      R1,SP
   \   000000B0   3000               MOVS     R0,R6
   \   000000B2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B4   000E               LSRS     R0,R0,#+24
   \   000000B6   ........           BL       CharToStr
   8827                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000BA   82B0               SUB      SP,SP,#+8
   \   000000BC   1120               MOVS     R0,#+17
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   1223               MOVS     R3,#+18
   \   000000C2   4C20               MOVS     R0,#+76
   \   000000C4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C6   240E               LSRS     R4,R4,#+24
   \   000000C8   1321               MOVS     R1,#+19
   \   000000CA   6143               MULS     R1,R4,R1
   \   000000CC   421A               SUBS     R2,R0,R1
   \   000000CE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000D0   120E               LSRS     R2,R2,#+24
   \   000000D2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000D4   2D0E               LSRS     R5,R5,#+24
   \   000000D6   1421               MOVS     R1,#+20
   \   000000D8   6943               MULS     R1,R5,R1
   \   000000DA   891C               ADDS     R1,R1,#+2
   \   000000DC   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000DE   090E               LSRS     R1,R1,#+24
   \   000000E0   02A8               ADD      R0,SP,#+8
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   8828                    }
   \   000000E8   6D1C               ADDS     R5,R5,#+1
   \                     ??NeuronNrChange_Paint_6:
   \   000000EA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000EC   2D0E               LSRS     R5,R5,#+24
   \   000000EE   032D               CMP      R5,#+3
   \   000000F0   DBD3               BCC      ??NeuronNrChange_Paint_5
   \   000000F2   641C               ADDS     R4,R4,#+1
   \                     ??NeuronNrChange_Paint_4:
   \   000000F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F6   240E               LSRS     R4,R4,#+24
   \   000000F8   032C               CMP      R4,#+3
   \   000000FA   01D2               BCS      ??NeuronNrChange_Paint_7
   \   000000FC   0025               MOVS     R5,#+0
   \   000000FE   F4E7               B        ??NeuronNrChange_Paint_6
   8829                  //Button(" ",2+20*0,76-(19*3),18,17);
   8830                  Button("0",2+20*1,76-(19*3),18,17);
   \                     ??NeuronNrChange_Paint_7:
   \   00000100   82B0               SUB      SP,SP,#+8
   \   00000102   1120               MOVS     R0,#+17
   \   00000104   0090               STR      R0,[SP, #+0]
   \   00000106   1223               MOVS     R3,#+18
   \   00000108   1322               MOVS     R2,#+19
   \   0000010A   1621               MOVS     R1,#+22
   \   0000010C   15A0               ADR      R0,??NeuronNrChange_Paint_0+0x10  ;; 0x30, 0x00, 0x00, 0x00
   \   0000010E   ........           BL       Button
   \   00000112   02B0               ADD      SP,SP,#+8
   8831                  //Button("-",2+20*2,76-(19*3),18,17);
   8832                  
   8833                  
   8834                  Button("C ",3,4,17,13);
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0D20               MOVS     R0,#+13
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   1123               MOVS     R3,#+17
   \   0000011C   0422               MOVS     R2,#+4
   \   0000011E   0321               MOVS     R1,#+3
   \   00000120   11A0               ADR      R0,??NeuronNrChange_Paint_0+0x14  ;; 0x43, 0x20, 0x00, 0x00
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   8835                  if ((VCTT_ill==0) || (VCTT_ill>6)) Button("Ok ",22,4,38,13);
   \   00000128   0C48               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   0000012A   0078               LDRB     R0,[R0, #+0]
   \   0000012C   0028               CMP      R0,#+0
   \   0000012E   03D0               BEQ      ??NeuronNrChange_Paint_8
   \   00000130   0A48               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000132   0078               LDRB     R0,[R0, #+0]
   \   00000134   0728               CMP      R0,#+7
   \   00000136   09D3               BCC      ??NeuronNrChange_Paint_9
   \                     ??NeuronNrChange_Paint_8:
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0D20               MOVS     R0,#+13
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   2623               MOVS     R3,#+38
   \   00000140   0422               MOVS     R2,#+4
   \   00000142   1621               MOVS     R1,#+22
   \   00000144   09A0               ADR      R0,??NeuronNrChange_Paint_0+0x18  ;; "Ok "
   \   00000146   ........           BL       Button
   \   0000014A   02B0               ADD      SP,SP,#+8
   8836                }
   \                     ??NeuronNrChange_Paint_9:
   \   0000014C   02B0               ADD      SP,SP,#+8
   \   0000014E   70BC               POP      {R4-R6}
   \   00000150   01BC               POP      {R0}
   \   00000152   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Paint_0:
   \   00000154   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000158   ........           DC32     `?<Constant " ID ">`
   \   0000015C   ........           DC32     VCTT_ill
   \   00000160   ........           DC32     ValueChangeTxtTmp
   \   00000164   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000168   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000016C   4F6B2000           DC8      "Ok "
   8837          
   8838          
   8839          

   \                                 In section Debug.txt, align 4, keep-with-next
   8840          void NeuronNrChange_Evant(int *ValToChange)
   8841                { 
   \                     NeuronNrChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   8842                 int ValueTmp=0; 
   \   00000004   0025               MOVS     R5,#+0
   8843                 char ind=0;
   \   00000006   0027               MOVS     R7,#+0
   8844                 char txt[2];
   8845                 char Refresh=0;
   \   00000008   0024               MOVS     R4,#+0
   8846           
   8847                 
   8848                 
   8849                 
   8850          
   8851                 txt[1]=0;
   \   0000000A   01A8               ADD      R0,SP,#+4
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   4170               STRB     R1,[R0, #+1]
   8852                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000010   9848               LDR      R0,??NeuronNrChange_Evant_0  ;; X_up
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   2F28               CMP      R0,#+47
   \   00000018   3CDB               BLT      ??NeuronNrChange_Evant_1
   \   0000001A   9648               LDR      R0,??NeuronNrChange_Evant_0  ;; X_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   405E               LDRSH    R0,[R0, R1]
   \   00000020   3F28               CMP      R0,#+63
   \   00000022   37DA               BGE      ??NeuronNrChange_Evant_1
   \   00000024   9448               LDR      R0,??NeuronNrChange_Evant_0+0x4  ;; Y_up
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   405E               LDRSH    R0,[R0, R1]
   \   0000002A   7128               CMP      R0,#+113
   \   0000002C   32DB               BLT      ??NeuronNrChange_Evant_1
   \   0000002E   9248               LDR      R0,??NeuronNrChange_Evant_0+0x4  ;; Y_up
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   405E               LDRSH    R0,[R0, R1]
   \   00000034   7F28               CMP      R0,#+127
   \   00000036   2DDA               BGE      ??NeuronNrChange_Evant_1
   8853                  {
   8854                    
   8855                       for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   05E0               B        ??NeuronNrChange_Evant_2
   \                     ??NeuronNrChange_Evant_3:
   \   0000003C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   8E49               LDR      R1,??NeuronNrChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000042   0022               MOVS     R2,#+0
   \   00000044   0A54               STRB     R2,[R1, R0]
   \   00000046   401C               ADDS     R0,R0,#+1
   \                     ??NeuronNrChange_Evant_2:
   \   00000048   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004A   000E               LSRS     R0,R0,#+24
   \   0000004C   0828               CMP      R0,#+8
   \   0000004E   F5D3               BCC      ??NeuronNrChange_Evant_3
   8856                          ValueTmp=0;
   \   00000050   0025               MOVS     R5,#+0
   8857                          VCTT_ill=0;
   \   00000052   8B48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   0170               STRB     R1,[R0, #+0]
   8858                          VCTT_point_flag=0;
   \   00000058   8A48               LDR      R0,??NeuronNrChange_Evant_0+0x10  ;; VCTT_point_flag
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   0170               STRB     R1,[R0, #+0]
   8859                     
   8860                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000005E   8A48               LDR      R0,??NeuronNrChange_Evant_0+0x14  ;; 0x13d7e9
   \   00000060   0078               LDRB     R0,[R0, #+0]
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   0028               CMP      R0,#+0
   \   00000068   0BD1               BNE      ??NeuronNrChange_Evant_4
   \   0000006A   8848               LDR      R0,??NeuronNrChange_Evant_0+0x18  ;; 0xfffff430
   \   0000006C   8021               MOVS     R1,#+128
   \   0000006E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000070   0160               STR      R1,[R0, #+0]
   \   00000072   874A               LDR      R2,??NeuronNrChange_Evant_0+0x1C  ;; ButtonBipCounter
   \   00000074   8748               LDR      R0,??NeuronNrChange_Evant_0+0x20  ;; g_counter
   \   00000076   03C8               LDM      R0!,{R0,R1}
   \   00000078   0023               MOVS     R3,#+0
   \   0000007A   0830               ADDS     R0,R0,#+8
   \   0000007C   5941               ADCS     R1,R1,R3
   \   0000007E   03C2               STM      R2!,{R0,R1}
   \   00000080   083A               SUBS     R2,R2,#+8
   8861                          
   8862                          
   8863          
   8864                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronNrChange_Evant_4:
   \   00000082   8548               LDR      R0,??NeuronNrChange_Evant_0+0x24  ;; MenuLevel
   \   00000084   0068               LDR      R0,[R0, #+0]
   \   00000086   0A21               MOVS     R1,#+10
   \   00000088   ........           BL       __aeabi_idivmod
   \   0000008C   8249               LDR      R1,??NeuronNrChange_Evant_0+0x24  ;; MenuLevel
   \   0000008E   0860               STR      R0,[R1, #+0]
   8865                      Refresh=1;
   \   00000090   0124               MOVS     R4,#+1
   \   00000092   E5E0               B        ??NeuronNrChange_Evant_5
   8866                  } else {
   8867                    
   8868                           
   8869          
   8870                   
   8871                       
   8872                    for (char j=0; j<3; j++)
   \                     ??NeuronNrChange_Evant_1:
   \   00000094   6846               MOV      R0,SP
   \   00000096   0021               MOVS     R1,#+0
   \   00000098   0170               STRB     R1,[R0, #+0]
   \   0000009A   3AE0               B        ??NeuronNrChange_Evant_6
   8873                    {
   8874                    for (char i=0; i<3; i++)
   8875                    {
   8876                      ind++;
   \                     ??NeuronNrChange_Evant_7:
   \   0000009C   7F1C               ADDS     R7,R7,#+1
   8877                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   0000009E   0122               MOVS     R2,#+1
   \   000000A0   01A9               ADD      R1,SP,#+4
   \   000000A2   3800               MOVS     R0,R7
   \   000000A4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A6   000E               LSRS     R0,R0,#+24
   \   000000A8   ........           BL       CharToStr
   8878                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<7)  ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   000000AC   82B0               SUB      SP,SP,#+8
   \   000000AE   1120               MOVS     R0,#+17
   \   000000B0   0090               STR      R0,[SP, #+0]
   \   000000B2   1223               MOVS     R3,#+18
   \   000000B4   4C20               MOVS     R0,#+76
   \   000000B6   02A9               ADD      R1,SP,#+8
   \   000000B8   0978               LDRB     R1,[R1, #+0]
   \   000000BA   1322               MOVS     R2,#+19
   \   000000BC   5143               MULS     R1,R2,R1
   \   000000BE   421A               SUBS     R2,R0,R1
   \   000000C0   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000C2   120E               LSRS     R2,R2,#+24
   \   000000C4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000C6   360E               LSRS     R6,R6,#+24
   \   000000C8   1421               MOVS     R1,#+20
   \   000000CA   7143               MULS     R1,R6,R1
   \   000000CC   891C               ADDS     R1,R1,#+2
   \   000000CE   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000D0   090E               LSRS     R1,R1,#+24
   \   000000D2   03A8               ADD      R0,SP,#+12
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   0FD1               BNE      ??NeuronNrChange_Evant_8
   \   000000DE   6848               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   000000E0   0078               LDRB     R0,[R0, #+0]
   \   000000E2   0728               CMP      R0,#+7
   \   000000E4   0BD2               BCS      ??NeuronNrChange_Evant_8
   \   000000E6   6648               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   000000E8   0178               LDRB     R1,[R0, #+0]
   \   000000EA   644A               LDR      R2,??NeuronNrChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   000000EC   3800               MOVS     R0,R7
   \   000000EE   3030               ADDS     R0,R0,#+48
   \   000000F0   5054               STRB     R0,[R2, R1]
   \   000000F2   6348               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   000000F4   6249               LDR      R1,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   000000F6   0978               LDRB     R1,[R1, #+0]
   \   000000F8   491C               ADDS     R1,R1,#+1
   \   000000FA   0170               STRB     R1,[R0, #+0]
   \   000000FC   0124               MOVS     R4,#+1
   8879                      
   8880                     }
   \                     ??NeuronNrChange_Evant_8:
   \   000000FE   761C               ADDS     R6,R6,#+1
   \                     ??NeuronNrChange_Evant_9:
   \   00000100   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000102   360E               LSRS     R6,R6,#+24
   \   00000104   032E               CMP      R6,#+3
   \   00000106   C9D3               BCC      ??NeuronNrChange_Evant_7
   \   00000108   6846               MOV      R0,SP
   \   0000010A   6946               MOV      R1,SP
   \   0000010C   0978               LDRB     R1,[R1, #+0]
   \   0000010E   491C               ADDS     R1,R1,#+1
   \   00000110   0170               STRB     R1,[R0, #+0]
   \                     ??NeuronNrChange_Evant_6:
   \   00000112   6846               MOV      R0,SP
   \   00000114   0078               LDRB     R0,[R0, #+0]
   \   00000116   0328               CMP      R0,#+3
   \   00000118   01D2               BCS      ??NeuronNrChange_Evant_10
   \   0000011A   0026               MOVS     R6,#+0
   \   0000011C   F0E7               B        ??NeuronNrChange_Evant_9
   8881                    }
   8882          
   8883                     if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<7) ) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??NeuronNrChange_Evant_10:
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   1120               MOVS     R0,#+17
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   1223               MOVS     R3,#+18
   \   00000126   1322               MOVS     R2,#+19
   \   00000128   1621               MOVS     R1,#+22
   \   0000012A   5CA0               ADR      R0,??NeuronNrChange_Evant_0+0x28  ;; 0x30, 0x00, 0x00, 0x00
   \   0000012C   ........           BL       Button
   \   00000130   02B0               ADD      SP,SP,#+8
   \   00000132   0128               CMP      R0,#+1
   \   00000134   0ED1               BNE      ??NeuronNrChange_Evant_11
   \   00000136   5248               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000138   0078               LDRB     R0,[R0, #+0]
   \   0000013A   0728               CMP      R0,#+7
   \   0000013C   0AD2               BCS      ??NeuronNrChange_Evant_11
   \   0000013E   5048               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000140   0078               LDRB     R0,[R0, #+0]
   \   00000142   4E49               LDR      R1,??NeuronNrChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000144   3022               MOVS     R2,#+48
   \   00000146   0A54               STRB     R2,[R1, R0]
   \   00000148   4D48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   0000014A   4D49               LDR      R1,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   0000014C   0978               LDRB     R1,[R1, #+0]
   \   0000014E   491C               ADDS     R1,R1,#+1
   \   00000150   0170               STRB     R1,[R0, #+0]
   \   00000152   0124               MOVS     R4,#+1
   8884          
   8885                      
   8886                      
   8887                  
   8888                      
   8889                      if (Button("C ",3,4,17,13)==1)
   \                     ??NeuronNrChange_Evant_11:
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   0D20               MOVS     R0,#+13
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   1123               MOVS     R3,#+17
   \   0000015C   0422               MOVS     R2,#+4
   \   0000015E   0321               MOVS     R1,#+3
   \   00000160   4FA0               ADR      R0,??NeuronNrChange_Evant_0+0x2C  ;; 0x43, 0x20, 0x00, 0x00
   \   00000162   ........           BL       Button
   \   00000166   02B0               ADD      SP,SP,#+8
   \   00000168   0128               CMP      R0,#+1
   \   0000016A   0ED1               BNE      ??NeuronNrChange_Evant_12
   8890                      {
   8891                        if (VCTT_ill) VCTT_ill--;
   \   0000016C   4448               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   0000016E   0078               LDRB     R0,[R0, #+0]
   \   00000170   0028               CMP      R0,#+0
   \   00000172   04D0               BEQ      ??NeuronNrChange_Evant_13
   \   00000174   4248               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000176   4249               LDR      R1,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000178   0978               LDRB     R1,[R1, #+0]
   \   0000017A   491E               SUBS     R1,R1,#+1
   \   0000017C   0170               STRB     R1,[R0, #+0]
   8892                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??NeuronNrChange_Evant_13:
   \   0000017E   4048               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000180   0078               LDRB     R0,[R0, #+0]
   \   00000182   3E49               LDR      R1,??NeuronNrChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000184   0022               MOVS     R2,#+0
   \   00000186   0A54               STRB     R2,[R1, R0]
   8893          
   8894                        Refresh=1;
   \   00000188   0124               MOVS     R4,#+1
   8895                      }
   8896                    
   8897                  
   8898                      int mnz=1;     
   \                     ??NeuronNrChange_Evant_12:
   \   0000018A   0126               MOVS     R6,#+1
   8899                      char prs=0;
   \   0000018C   0027               MOVS     R7,#+0
   8900          
   8901                      //zapamiêtanie wartoci
   8902                      if ((VCTT_ill==0) || (VCTT_ill>6))
   \   0000018E   3C48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000190   0078               LDRB     R0,[R0, #+0]
   \   00000192   0028               CMP      R0,#+0
   \   00000194   03D0               BEQ      ??NeuronNrChange_Evant_14
   \   00000196   3A48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000198   0078               LDRB     R0,[R0, #+0]
   \   0000019A   0728               CMP      R0,#+7
   \   0000019C   60D3               BCC      ??NeuronNrChange_Evant_5
   8903                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??NeuronNrChange_Evant_14:
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0D20               MOVS     R0,#+13
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   2623               MOVS     R3,#+38
   \   000001A6   0422               MOVS     R2,#+4
   \   000001A8   1621               MOVS     R1,#+22
   \   000001AA   3EA0               ADR      R0,??NeuronNrChange_Evant_0+0x30  ;; "Ok "
   \   000001AC   ........           BL       Button
   \   000001B0   02B0               ADD      SP,SP,#+8
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   54D1               BNE      ??NeuronNrChange_Evant_5
   8904                      {
   8905                        
   8906          
   8907                          for (char i=0; i<VCTT_ill-prs; i++)
   \   000001B6   0020               MOVS     R0,#+0
   \   000001B8   0EE0               B        ??NeuronNrChange_Evant_15
   8908                          {
   8909                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \                     ??NeuronNrChange_Evant_16:
   \   000001BA   3149               LDR      R1,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   000001BC   0978               LDRB     R1,[R1, #+0]
   \   000001BE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001C0   000E               LSRS     R0,R0,#+24
   \   000001C2   091A               SUBS     R1,R1,R0
   \   000001C4   2D4A               LDR      R2,??NeuronNrChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   000001C6   5118               ADDS     R1,R2,R1
   \   000001C8   491E               SUBS     R1,R1,#+1
   \   000001CA   0978               LDRB     R1,[R1, #+0]
   \   000001CC   3039               SUBS     R1,R1,#+48
   \   000001CE   7143               MULS     R1,R6,R1
   \   000001D0   6D18               ADDS     R5,R5,R1
   8910                             mnz*=10;
   \   000001D2   0A21               MOVS     R1,#+10
   \   000001D4   4E43               MULS     R6,R1,R6
   8911                          }
   \   000001D6   401C               ADDS     R0,R0,#+1
   \                     ??NeuronNrChange_Evant_15:
   \   000001D8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001DA   000E               LSRS     R0,R0,#+24
   \   000001DC   2849               LDR      R1,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   000001DE   0978               LDRB     R1,[R1, #+0]
   \   000001E0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001E2   3F0E               LSRS     R7,R7,#+24
   \   000001E4   C91B               SUBS     R1,R1,R7
   \   000001E6   8842               CMP      R0,R1
   \   000001E8   E7DB               BLT      ??NeuronNrChange_Evant_16
   8912                          
   8913                          TransQuality.Mensur[NeuronNrChange-1]=0;
   \   000001EA   2F48               LDR      R0,??NeuronNrChange_Evant_0+0x34  ;; NeuronNrChange
   \   000001EC   0078               LDRB     R0,[R0, #+0]
   \   000001EE   0421               MOVS     R1,#+4
   \   000001F0   4843               MULS     R0,R1,R0
   \   000001F2   2E49               LDR      R1,??NeuronNrChange_Evant_0+0x38  ;; TransQuality
   \   000001F4   0818               ADDS     R0,R1,R0
   \   000001F6   0021               MOVS     R1,#+0
   \   000001F8   8164               STR      R1,[R0, #+72]
   8914                          TransQuality.SlowMensur[NeuronNrChange-1]=0;
   \   000001FA   2B48               LDR      R0,??NeuronNrChange_Evant_0+0x34  ;; NeuronNrChange
   \   000001FC   0078               LDRB     R0,[R0, #+0]
   \   000001FE   2B49               LDR      R1,??NeuronNrChange_Evant_0+0x38  ;; TransQuality
   \   00000200   0818               ADDS     R0,R1,R0
   \   00000202   0021               MOVS     R1,#+0
   \   00000204   8170               STRB     R1,[R0, #+2]
   8915                          TransQuality.QuickMensur[NeuronNrChange-1]=0;
   \   00000206   2848               LDR      R0,??NeuronNrChange_Evant_0+0x34  ;; NeuronNrChange
   \   00000208   0078               LDRB     R0,[R0, #+0]
   \   0000020A   2849               LDR      R1,??NeuronNrChange_Evant_0+0x38  ;; TransQuality
   \   0000020C   0818               ADDS     R0,R1,R0
   \   0000020E   2530               ADDS     R0,R0,#+37
   \   00000210   0021               MOVS     R1,#+0
   \   00000212   0170               STRB     R1,[R0, #+0]
   8916                          
   8917                          ProgramChange=1;
   \   00000214   2648               LDR      R0,??NeuronNrChange_Evant_0+0x3C  ;; ProgramChange
   \   00000216   0121               MOVS     R1,#+1
   \   00000218   0170               STRB     R1,[R0, #+0]
   8918                          MenuLevel/=10; 
   \   0000021A   1F48               LDR      R0,??NeuronNrChange_Evant_0+0x24  ;; MenuLevel
   \   0000021C   0068               LDR      R0,[R0, #+0]
   \   0000021E   0A21               MOVS     R1,#+10
   \   00000220   ........           BL       __aeabi_idivmod
   \   00000224   1C49               LDR      R1,??NeuronNrChange_Evant_0+0x24  ;; MenuLevel
   \   00000226   0860               STR      R0,[R1, #+0]
   8919                           
   8920                          *ValToChange=ValueTmp;
   \   00000228   0298               LDR      R0,[SP, #+8]
   \   0000022A   0560               STR      R5,[R0, #+0]
   8921                          
   8922                          for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000022C   0020               MOVS     R0,#+0
   \   0000022E   05E0               B        ??NeuronNrChange_Evant_17
   \                     ??NeuronNrChange_Evant_18:
   \   00000230   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000232   000E               LSRS     R0,R0,#+24
   \   00000234   1149               LDR      R1,??NeuronNrChange_Evant_0+0x8  ;; ValueChangeTxtTmp
   \   00000236   0022               MOVS     R2,#+0
   \   00000238   0A54               STRB     R2,[R1, R0]
   \   0000023A   401C               ADDS     R0,R0,#+1
   \                     ??NeuronNrChange_Evant_17:
   \   0000023C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000023E   000E               LSRS     R0,R0,#+24
   \   00000240   0828               CMP      R0,#+8
   \   00000242   F5D3               BCC      ??NeuronNrChange_Evant_18
   8923                          ValueTmp=0;
   \   00000244   0025               MOVS     R5,#+0
   8924                          VCTT_ill=0;
   \   00000246   0E48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; VCTT_ill
   \   00000248   0021               MOVS     R1,#+0
   \   0000024A   0170               STRB     R1,[R0, #+0]
   8925                          VCTT_point_flag=0;
   \   0000024C   0D48               LDR      R0,??NeuronNrChange_Evant_0+0x10  ;; VCTT_point_flag
   \   0000024E   0021               MOVS     R1,#+0
   \   00000250   0170               STRB     R1,[R0, #+0]
   8926                          
   8927                        
   8928                        
   8929                        
   8930                        Refresh=1;
   \   00000252   0124               MOVS     R4,#+1
   8931                        RefreshNeuronsList(&gProg);
   \   00000254   1748               LDR      R0,??NeuronNrChange_Evant_0+0x40  ;; gProg
   \   00000256   ........           BL       RefreshNeuronsList
   8932                        SetTask(&gProg);
   \   0000025A   1648               LDR      R0,??NeuronNrChange_Evant_0+0x40  ;; gProg
   \   0000025C   ........           BL       SetTask
   8933                        
   8934                      }
   8935                 
   8936                    
   8937                  }
   8938                  
   8939                  
   8940                  if (Refresh==1) MenuPaint();
   \                     ??NeuronNrChange_Evant_5:
   \   00000260   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000262   240E               LSRS     R4,R4,#+24
   \   00000264   012C               CMP      R4,#+1
   \   00000266   01D1               BNE      ??NeuronNrChange_Evant_19
   \   00000268   ........           BL       MenuPaint
   8941                  
   8942          }
   \                     ??NeuronNrChange_Evant_19:
   \   0000026C   03B0               ADD      SP,SP,#+12
   \   0000026E   F0BC               POP      {R4-R7}
   \   00000270   01BC               POP      {R0}
   \   00000272   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Evant_0:
   \   00000274   ........           DC32     X_up
   \   00000278   ........           DC32     Y_up
   \   0000027C   ........           DC32     ValueChangeTxtTmp
   \   00000280   ........           DC32     VCTT_ill
   \   00000284   ........           DC32     VCTT_point_flag
   \   00000288   E9D71300           DC32     0x13d7e9
   \   0000028C   30F4FFFF           DC32     0xfffff430
   \   00000290   ........           DC32     ButtonBipCounter
   \   00000294   ........           DC32     g_counter
   \   00000298   ........           DC32     MenuLevel
   \   0000029C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   000002A0   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   000002A4   4F6B2000           DC8      "Ok "
   \   000002A8   ........           DC32     NeuronNrChange
   \   000002AC   ........           DC32     TransQuality
   \   000002B0   ........           DC32     ProgramChange
   \   000002B4   ........           DC32     gProg
   8943          
   8944          
   8945          
   8946          
   8947          

   \                                 In section Debug.txt, align 4, keep-with-next
   8948          void Info_Paint(void)
   8949          {          
   \                     Info_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   8950                 char txt[8];
   8951                 char labsize;
   8952                 List_Paint("Info ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   64A0               ADR      R0,??Info_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   6148               LDR      R0,??Info_Paint_0+0x4  ;; `?<Constant "Info ">`
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   8953          
   8954                 Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   8021               MOVS     R1,#+128
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   3A21               MOVS     R1,#+58
   \   0000003C   0F20               MOVS     R0,#+15
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   6423               MOVS     R3,#+100
   \   00000042   0322               MOVS     R2,#+3
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   5A48               LDR      R0,??Info_Paint_0+0x8  ;; `?<Constant "Model: ">`
   \   00000048   ........           BL       Label
   \   0000004C   06B0               ADD      SP,SP,#+24
   8955                 Label((char*)&identyfikacja,0,10,89,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   8021               MOVS     R1,#+128
   \   00000056   0020               MOVS     R0,#+0
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   2821               MOVS     R1,#+40
   \   0000005C   0F20               MOVS     R0,#+15
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   5923               MOVS     R3,#+89
   \   00000062   0A22               MOVS     R2,#+10
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   5348               LDR      R0,??Info_Paint_0+0xC  ;; identyfikacja
   \   00000068   ........           BL       Label
   \   0000006C   06B0               ADD      SP,SP,#+24
   8956                 H_line(1,85,62,2);      
   \   0000006E   0223               MOVS     R3,#+2
   \   00000070   3E22               MOVS     R2,#+62
   \   00000072   5521               MOVS     R1,#+85
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   ........           BL       H_line
   8957                 Label("Node ID: ",0,3,75,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   8021               MOVS     R1,#+128
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   3A21               MOVS     R1,#+58
   \   00000088   0F20               MOVS     R0,#+15
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   4B23               MOVS     R3,#+75
   \   0000008E   0322               MOVS     R2,#+3
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   4948               LDR      R0,??Info_Paint_0+0x10  ;; `?<Constant "Node ID: ">`
   \   00000094   ........           BL       Label
   \   00000098   06B0               ADD      SP,SP,#+24
   8958                 sprintf(txt, "%d",RF_Status.RF_ID_R);
                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000009A   4848               LDR      R0,??Info_Paint_0+0x14  ;; RF_Status + 28
   \   0000009C   0268               LDR      R2,[R0, #+0]
   \   0000009E   48A1               ADR      R1,??Info_Paint_0+0x18  ;; 0x25, 0x64, 0x00, 0x00
   \   000000A0   6846               MOV      R0,SP
   \   000000A2   ........           BL       sprintf
   8959                 Label(txt,0,10,64,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   8021               MOVS     R1,#+128
   \   000000AE   0020               MOVS     R0,#+0
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   2821               MOVS     R1,#+40
   \   000000B4   0F20               MOVS     R0,#+15
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   4023               MOVS     R3,#+64
   \   000000BA   0A22               MOVS     R2,#+10
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   06A8               ADD      R0,SP,#+24
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
   8960                 H_line(1,60,62,2);    
   \   000000C6   0223               MOVS     R3,#+2
   \   000000C8   3E22               MOVS     R2,#+62
   \   000000CA   3C21               MOVS     R1,#+60
   \   000000CC   0120               MOVS     R0,#+1
   \   000000CE   ........           BL       H_line
   8961                 Label("Sys. version: ",0,3,50,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000D2   82B0               SUB      SP,SP,#+8
   \   000000D4   0020               MOVS     R0,#+0
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   8021               MOVS     R1,#+128
   \   000000DA   0020               MOVS     R0,#+0
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   3A21               MOVS     R1,#+58
   \   000000E0   0F20               MOVS     R0,#+15
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   3223               MOVS     R3,#+50
   \   000000E6   0322               MOVS     R2,#+3
   \   000000E8   0021               MOVS     R1,#+0
   \   000000EA   3648               LDR      R0,??Info_Paint_0+0x1C  ;; `?<Constant "Sys. version: ">`
   \   000000EC   ........           BL       Label
   \   000000F0   06B0               ADD      SP,SP,#+24
   8962                 Label((char*)&system,0,10,39,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0020               MOVS     R0,#+0
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   8021               MOVS     R1,#+128
   \   000000FA   0020               MOVS     R0,#+0
   \   000000FC   03B4               PUSH     {R0,R1}
   \   000000FE   2821               MOVS     R1,#+40
   \   00000100   0F20               MOVS     R0,#+15
   \   00000102   03B4               PUSH     {R0,R1}
   \   00000104   2723               MOVS     R3,#+39
   \   00000106   0A22               MOVS     R2,#+10
   \   00000108   0021               MOVS     R1,#+0
   \   0000010A   2F48               LDR      R0,??Info_Paint_0+0x20  ;; system
   \   0000010C   ........           BL       Label
   \   00000110   06B0               ADD      SP,SP,#+24
   8963                 H_line(1,35,62,2);  
   \   00000112   0223               MOVS     R3,#+2
   \   00000114   3E22               MOVS     R2,#+62
   \   00000116   2321               MOVS     R1,#+35
   \   00000118   0120               MOVS     R0,#+1
   \   0000011A   ........           BL       H_line
   8964                 Label("Trans. period: ",0,3,25,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0020               MOVS     R0,#+0
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   8021               MOVS     R1,#+128
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   03B4               PUSH     {R0,R1}
   \   0000012A   3A21               MOVS     R1,#+58
   \   0000012C   0F20               MOVS     R0,#+15
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   1923               MOVS     R3,#+25
   \   00000132   0322               MOVS     R2,#+3
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   2548               LDR      R0,??Info_Paint_0+0x24  ;; `?<Constant "Trans. period: ">`
   \   00000138   ........           BL       Label
   \   0000013C   06B0               ADD      SP,SP,#+24
   8965                 //labsize=sIntToStr(RF_Period*10,txt);
   8966                 labsize=sIntToStr((10000/(CyklPerSek)),txt);
   \   0000013E   6946               MOV      R1,SP
   \   00000140   0C00               MOVS     R4,R1
   \   00000142   2348               LDR      R0,??Info_Paint_0+0x28  ;; 0x2710
   \   00000144   2349               LDR      R1,??Info_Paint_0+0x2C  ;; CyklPerSek
   \   00000146   0968               LDR      R1,[R1, #+0]
   \   00000148   ........           BL       __aeabi_uidivmod
   \   0000014C   2100               MOVS     R1,R4
   \   0000014E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000150   0014               ASRS     R0,R0,#+16
   \   00000152   ........           BL       sIntToStr
   \   00000156   0200               MOVS     R2,R0
   8967                 txt[labsize++]='m'; txt[labsize++]='s';
   \   00000158   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000015A   120E               LSRS     R2,R2,#+24
   \   0000015C   6846               MOV      R0,SP
   \   0000015E   6D21               MOVS     R1,#+109
   \   00000160   8154               STRB     R1,[R0, R2]
   \   00000162   521C               ADDS     R2,R2,#+1
   \   00000164   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000166   120E               LSRS     R2,R2,#+24
   \   00000168   6846               MOV      R0,SP
   \   0000016A   7321               MOVS     R1,#+115
   \   0000016C   8154               STRB     R1,[R0, R2]
   \   0000016E   521C               ADDS     R2,R2,#+1
   8968                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0020               MOVS     R0,#+0
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   8021               MOVS     R1,#+128
   \   00000178   0020               MOVS     R0,#+0
   \   0000017A   03B4               PUSH     {R0,R1}
   \   0000017C   2821               MOVS     R1,#+40
   \   0000017E   1000               MOVS     R0,R2
   \   00000180   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000182   000E               LSRS     R0,R0,#+24
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   0E23               MOVS     R3,#+14
   \   00000188   0A22               MOVS     R2,#+10
   \   0000018A   0021               MOVS     R1,#+0
   \   0000018C   06A8               ADD      R0,SP,#+24
   \   0000018E   ........           BL       Label
   \   00000192   06B0               ADD      SP,SP,#+24
   8969                 H_line(1,10,62,2);  
   \   00000194   0223               MOVS     R3,#+2
   \   00000196   3E22               MOVS     R2,#+62
   \   00000198   0A21               MOVS     R1,#+10
   \   0000019A   0120               MOVS     R0,#+1
   \   0000019C   ........           BL       H_line
   8970                 
   8971            
   8972                 
   8973          }//________________________________________________________________________
   \   000001A0   02B0               ADD      SP,SP,#+8
   \   000001A2   10BC               POP      {R4}
   \   000001A4   01BC               POP      {R0}
   \   000001A6   0047               BX       R0               ;; return
   \                     ??Info_Paint_0:
   \   000001A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001AC   ........           DC32     `?<Constant "Info ">`
   \   000001B0   ........           DC32     `?<Constant "Model: ">`
   \   000001B4   ........           DC32     identyfikacja
   \   000001B8   ........           DC32     `?<Constant "Node ID: ">`
   \   000001BC   ........           DC32     RF_Status + 28
   \   000001C0   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001C4   ........           DC32     `?<Constant "Sys. version: ">`
   \   000001C8   ........           DC32     system
   \   000001CC   ........           DC32     `?<Constant "Trans. period: ">`
   \   000001D0   10270000           DC32     0x2710
   \   000001D4   ........           DC32     CyklPerSek
   8974          
   8975              
   8976          
   8977          

   \                                 In section Debug.txt, align 4, keep-with-next
   8978          void Info_Refresh(void)
   8979          {          
   \                     Info_Refresh:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   8980            static int IRdiv; 
   8981            
   8982            if (IRdiv<20) {IRdiv++;} else {
   \   00000002   1E48               LDR      R0,??Info_Refresh_0  ;; ??IRdiv
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1428               CMP      R0,#+20
   \   00000008   05DA               BGE      ??Info_Refresh_1
   \   0000000A   1C48               LDR      R0,??Info_Refresh_0  ;; ??IRdiv
   \   0000000C   1B49               LDR      R1,??Info_Refresh_0  ;; ??IRdiv
   \   0000000E   0968               LDR      R1,[R1, #+0]
   \   00000010   491C               ADDS     R1,R1,#+1
   \   00000012   0160               STR      R1,[R0, #+0]
   \   00000014   2DE0               B        ??Info_Refresh_2
   8983                 IRdiv=0;
   \                     ??Info_Refresh_1:
   \   00000016   1948               LDR      R0,??Info_Refresh_0  ;; ??IRdiv
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0160               STR      R1,[R0, #+0]
   8984                 char txt[8];
   8985                 char labsize;
   8986          
   8987                labsize=sIntToStr((10000/(CyklPerSek)),txt); 
   \   0000001C   6946               MOV      R1,SP
   \   0000001E   0C00               MOVS     R4,R1
   \   00000020   1748               LDR      R0,??Info_Refresh_0+0x4  ;; 0x2710
   \   00000022   1849               LDR      R1,??Info_Refresh_0+0x8  ;; CyklPerSek
   \   00000024   0968               LDR      R1,[R1, #+0]
   \   00000026   ........           BL       __aeabi_uidivmod
   \   0000002A   2100               MOVS     R1,R4
   \   0000002C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000002E   0014               ASRS     R0,R0,#+16
   \   00000030   ........           BL       sIntToStr
   \   00000034   0200               MOVS     R2,R0
   8988                 
   8989               
   8990                
   8991                 txt[labsize++]='m'; txt[labsize++]='s';
   \   00000036   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000038   120E               LSRS     R2,R2,#+24
   \   0000003A   6846               MOV      R0,SP
   \   0000003C   6D21               MOVS     R1,#+109
   \   0000003E   8154               STRB     R1,[R0, R2]
   \   00000040   521C               ADDS     R2,R2,#+1
   \   00000042   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000044   120E               LSRS     R2,R2,#+24
   \   00000046   6846               MOV      R0,SP
   \   00000048   7321               MOVS     R1,#+115
   \   0000004A   8154               STRB     R1,[R0, R2]
   \   0000004C   521C               ADDS     R2,R2,#+1
   8992                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   8021               MOVS     R1,#+128
   \   00000056   0020               MOVS     R0,#+0
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   2821               MOVS     R1,#+40
   \   0000005C   1000               MOVS     R0,R2
   \   0000005E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000060   000E               LSRS     R0,R0,#+24
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0E23               MOVS     R3,#+14
   \   00000066   0A22               MOVS     R2,#+10
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   06A8               ADD      R0,SP,#+24
   \   0000006C   ........           BL       Label
   \   00000070   06B0               ADD      SP,SP,#+24
   8993            }
   8994          }//________________________________________________________________________
   \                     ??Info_Refresh_2:
   \   00000072   02B0               ADD      SP,SP,#+8
   \   00000074   10BC               POP      {R4}
   \   00000076   01BC               POP      {R0}
   \   00000078   0047               BX       R0               ;; return
   \   0000007A   C046               Nop      
   \                     ??Info_Refresh_0:
   \   0000007C   ........           DC32     ??IRdiv
   \   00000080   10270000           DC32     0x2710
   \   00000084   ........           DC32     CyklPerSek

   \                                 In section .bss, align 4
   \                     ??IRdiv:
   \   00000000                      DS8 4
   8995          
   8996          
   8997          
   8998          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8999          void Info_Event(void)
   9000                {
   \                     Info_Event:
   \   00000000   01B5               PUSH     {R0,LR}
   9001                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000002   1048               LDR      R0,??Info_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   17DB               BLT      ??Info_Event_1
   \   0000000C   0D48               LDR      R0,??Info_Event_0  ;; X_up
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   3F28               CMP      R0,#+63
   \   00000014   12DA               BGE      ??Info_Event_1
   \   00000016   0C48               LDR      R0,??Info_Event_0+0x4  ;; Y_up
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   405E               LDRSH    R0,[R0, R1]
   \   0000001C   7128               CMP      R0,#+113
   \   0000001E   0DDB               BLT      ??Info_Event_1
   \   00000020   0948               LDR      R0,??Info_Event_0+0x4  ;; Y_up
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   405E               LDRSH    R0,[R0, R1]
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   08DA               BGE      ??Info_Event_1
   9002                  {
   9003                    MenuLevel=(MenuLevel/10);
   \   0000002A   0848               LDR      R0,??Info_Event_0+0x8  ;; MenuLevel
   \   0000002C   0068               LDR      R0,[R0, #+0]
   \   0000002E   0A21               MOVS     R1,#+10
   \   00000030   ........           BL       __aeabi_idivmod
   \   00000034   0549               LDR      R1,??Info_Event_0+0x8  ;; MenuLevel
   \   00000036   0860               STR      R0,[R1, #+0]
   9004                    MenuPaint();
   \   00000038   ........           BL       MenuPaint
   9005                  }  
   9006          
   9007          }//________________________________________________________________________
   \                     ??Info_Event_1:
   \   0000003C   01B0               ADD      SP,SP,#+4
   \   0000003E   01BC               POP      {R0}
   \   00000040   0047               BX       R0               ;; return
   \   00000042   C046               Nop      
   \                     ??Info_Event_0:
   \   00000044   ........           DC32     X_up
   \   00000048   ........           DC32     Y_up
   \   0000004C   ........           DC32     MenuLevel
   9008              
   9009          
   9010          
   9011          
   9012          
   9013          

   \                                 In section Debug.txt, align 4, keep-with-next
   9014          void ThermostatAutoSet_Paint(_Screen* Screen)
   9015          {          
   \                     ThermostatAutoSet_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   9016                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   E3A0               ADR      R0,??ThermostatAutoSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   E048               LDR      R0,??ThermostatAutoSet_Paint_0+0x4  ;; `?<Constant "Thermo">`
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   9017          
   9018                 //Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   9019                char txt[5]; txt[1]=0; 
   \   00000030   6846               MOV      R0,SP
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   4170               STRB     R1,[R0, #+1]
   9020                txt[0]=31;//dó³ 
   \   00000036   6846               MOV      R0,SP
   \   00000038   1F21               MOVS     R1,#+31
   \   0000003A   0170               STRB     R1,[R0, #+0]
   9021                Button(txt,2,89,18,18);
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   1220               MOVS     R0,#+18
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   1223               MOVS     R3,#+18
   \   00000044   5922               MOVS     R2,#+89
   \   00000046   0221               MOVS     R1,#+2
   \   00000048   02A8               ADD      R0,SP,#+8
   \   0000004A   ........           BL       Button
   \   0000004E   02B0               ADD      SP,SP,#+8
   9022                txt[1]=0; txt[0]=30;//góra 
   \   00000050   6846               MOV      R0,SP
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   4170               STRB     R1,[R0, #+1]
   \   00000056   6846               MOV      R0,SP
   \   00000058   1E21               MOVS     R1,#+30
   \   0000005A   0170               STRB     R1,[R0, #+0]
   9023                Button(txt,43,89,18,18);
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   1220               MOVS     R0,#+18
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   1223               MOVS     R3,#+18
   \   00000064   5922               MOVS     R2,#+89
   \   00000066   2B21               MOVS     R1,#+43
   \   00000068   02A8               ADD      R0,SP,#+8
   \   0000006A   ........           BL       Button
   \   0000006E   02B0               ADD      SP,SP,#+8
   9024                Label("T1",2,20,98,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   8021               MOVS     R1,#+128
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   1521               MOVS     R1,#+21
   \   0000007E   0220               MOVS     R0,#+2
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   6223               MOVS     R3,#+98
   \   00000084   1422               MOVS     R2,#+20
   \   00000086   0221               MOVS     R1,#+2
   \   00000088   C9A0               ADR      R0,??ThermostatAutoSet_Paint_0+0x8  ;; 0x54, 0x31, 0x00, 0x00
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   9025                
   9026                sIntToStr(Screen->Thermo.Temperature[0],txt); 
   \   00000090   6946               MOV      R1,SP
   \   00000092   9220               MOVS     R0,#+146
   \   00000094   205E               LDRSH    R0,[R4, R0]
   \   00000096   ........           BL       sIntToStr
   9027                Label(txt,2,20,89,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   8021               MOVS     R1,#+128
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   1521               MOVS     R1,#+21
   \   000000A8   0420               MOVS     R0,#+4
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   5923               MOVS     R3,#+89
   \   000000AE   1422               MOVS     R2,#+20
   \   000000B0   0221               MOVS     R1,#+2
   \   000000B2   06A8               ADD      R0,SP,#+24
   \   000000B4   ........           BL       Label
   \   000000B8   06B0               ADD      SP,SP,#+24
   9028                
   9029          
   9030                
   9031                
   9032                txt[1]=0; txt[0]=31;//dó³
   \   000000BA   6846               MOV      R0,SP
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   4170               STRB     R1,[R0, #+1]
   \   000000C0   6846               MOV      R0,SP
   \   000000C2   1F21               MOVS     R1,#+31
   \   000000C4   0170               STRB     R1,[R0, #+0]
   9033                Button(txt,2,69,18,18);
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   1220               MOVS     R0,#+18
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   1223               MOVS     R3,#+18
   \   000000CE   4522               MOVS     R2,#+69
   \   000000D0   0221               MOVS     R1,#+2
   \   000000D2   02A8               ADD      R0,SP,#+8
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   9034                txt[1]=0; txt[0]=30;//góra 
   \   000000DA   6846               MOV      R0,SP
   \   000000DC   0021               MOVS     R1,#+0
   \   000000DE   4170               STRB     R1,[R0, #+1]
   \   000000E0   6846               MOV      R0,SP
   \   000000E2   1E21               MOVS     R1,#+30
   \   000000E4   0170               STRB     R1,[R0, #+0]
   9035                Button(txt,43,69,18,18);
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   1220               MOVS     R0,#+18
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   1223               MOVS     R3,#+18
   \   000000EE   4522               MOVS     R2,#+69
   \   000000F0   2B21               MOVS     R1,#+43
   \   000000F2   02A8               ADD      R0,SP,#+8
   \   000000F4   ........           BL       Button
   \   000000F8   02B0               ADD      SP,SP,#+8
   9036                Label("T2",2,20,78,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0020               MOVS     R0,#+0
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   8021               MOVS     R1,#+128
   \   00000102   0020               MOVS     R0,#+0
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   1521               MOVS     R1,#+21
   \   00000108   0220               MOVS     R0,#+2
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   4E23               MOVS     R3,#+78
   \   0000010E   1422               MOVS     R2,#+20
   \   00000110   0221               MOVS     R1,#+2
   \   00000112   A8A0               ADR      R0,??ThermostatAutoSet_Paint_0+0xC  ;; 0x54, 0x32, 0x00, 0x00
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
   9037                sIntToStr(Screen->Thermo.Temperature[1],txt); 
   \   0000011A   6946               MOV      R1,SP
   \   0000011C   9420               MOVS     R0,#+148
   \   0000011E   205E               LDRSH    R0,[R4, R0]
   \   00000120   ........           BL       sIntToStr
   9038                Label(txt,2,20,69,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   8021               MOVS     R1,#+128
   \   0000012C   0020               MOVS     R0,#+0
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   1521               MOVS     R1,#+21
   \   00000132   0420               MOVS     R0,#+4
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   4523               MOVS     R3,#+69
   \   00000138   1422               MOVS     R2,#+20
   \   0000013A   0221               MOVS     R1,#+2
   \   0000013C   06A8               ADD      R0,SP,#+24
   \   0000013E   ........           BL       Label
   \   00000142   06B0               ADD      SP,SP,#+24
   9039                 
   9040                
   9041                
   9042                
   9043                char Ychart=54;
   \   00000144   3625               MOVS     R5,#+54
   9044                
   9045                H_line(1,Ychart+12,62,1);  
   \   00000146   0123               MOVS     R3,#+1
   \   00000148   3E22               MOVS     R2,#+62
   \   0000014A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000014C   2D0E               LSRS     R5,R5,#+24
   \   0000014E   2900               MOVS     R1,R5
   \   00000150   0C31               ADDS     R1,R1,#+12
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   ........           BL       H_line
   9046                H_line(1,Ychart+11,62,1);  
   \   00000158   0123               MOVS     R3,#+1
   \   0000015A   3E22               MOVS     R2,#+62
   \   0000015C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000015E   2D0E               LSRS     R5,R5,#+24
   \   00000160   2900               MOVS     R1,R5
   \   00000162   0B31               ADDS     R1,R1,#+11
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   ........           BL       H_line
   9047             
   9048                
   9049          
   9050                
   9051                for (char i=0; i<7; i++)
   \   0000016A   0026               MOVS     R6,#+0
   \   0000016C   29E0               B        ??ThermostatAutoSet_Paint_1
   9052                {
   9053                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((Screen->Thermo.Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_2:
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   9120               MOVS     R0,#+145
   \   00000172   205C               LDRB     R0,[R4, R0]
   \   00000174   3041               ASRS     R0,R0,R6
   \   00000176   0121               MOVS     R1,#+1
   \   00000178   0140               ANDS     R1,R1,R0
   \   0000017A   0091               STR      R1,[SP, #+0]
   \   0000017C   8021               MOVS     R1,#+128
   \   0000017E   0020               MOVS     R0,#+0
   \   00000180   03B4               PUSH     {R0,R1}
   \   00000182   0621               MOVS     R1,#+6
   \   00000184   0120               MOVS     R0,#+1
   \   00000186   03B4               PUSH     {R0,R1}
   \   00000188   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000018A   2D0E               LSRS     R5,R5,#+24
   \   0000018C   2B00               MOVS     R3,R5
   \   0000018E   9B1C               ADDS     R3,R3,#+2
   \   00000190   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000192   360E               LSRS     R6,R6,#+24
   \   00000194   0822               MOVS     R2,#+8
   \   00000196   7243               MULS     R2,R6,R2
   \   00000198   121D               ADDS     R2,R2,#+4
   \   0000019A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000019C   120E               LSRS     R2,R2,#+24
   \   0000019E   0221               MOVS     R1,#+2
   \   000001A0   8C46               MOV      R12,R1
   \   000001A2   DB49               LDR      R1,??ThermostatAutoSet_Paint_3  ;; 0x6ea
   \   000001A4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001A6   360E               LSRS     R6,R6,#+24
   \   000001A8   DA48               LDR      R0,??ThermostatAutoSet_Paint_3+0x4  ;; g_leng
   \   000001AA   0068               LDR      R0,[R0, #+0]
   \   000001AC   DA4F               LDR      R7,??ThermostatAutoSet_Paint_3+0x8  ;; 0xa7d
   \   000001AE   7843               MULS     R0,R7,R0
   \   000001B0   DA4F               LDR      R7,??ThermostatAutoSet_Paint_3+0xC  ;; Speech
   \   000001B2   3818               ADDS     R0,R7,R0
   \   000001B4   8019               ADDS     R0,R0,R6
   \   000001B6   4018               ADDS     R0,R0,R1
   \   000001B8   6146               MOV      R1,R12
   \   000001BA   ........           BL       Label
   \   000001BE   06B0               ADD      SP,SP,#+24
   9054                }
   \   000001C0   761C               ADDS     R6,R6,#+1
   \                     ??ThermostatAutoSet_Paint_1:
   \   000001C2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001C4   360E               LSRS     R6,R6,#+24
   \   000001C6   072E               CMP      R6,#+7
   \   000001C8   D1D3               BCC      ??ThermostatAutoSet_Paint_2
   9055                
   9056                
   9057                for (char i=0; i<24; i++)
   \   000001CA   0026               MOVS     R6,#+0
   \   000001CC   17E0               B        ??ThermostatAutoSet_Paint_4
   9058                {
   9059                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[0]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_5:
   \   000001CE   0123               MOVS     R3,#+1
   \   000001D0   9820               MOVS     R0,#+152
   \   000001D2   2058               LDR      R0,[R4, R0]
   \   000001D4   F040               LSRS     R0,R0,R6
   \   000001D6   0122               MOVS     R2,#+1
   \   000001D8   0240               ANDS     R2,R2,R0
   \   000001DA   0220               MOVS     R0,#+2
   \   000001DC   4243               MULS     R2,R0,R2
   \   000001DE   121D               ADDS     R2,R2,#+4
   \   000001E0   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001E2   120E               LSRS     R2,R2,#+24
   \   000001E4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001E6   2D0E               LSRS     R5,R5,#+24
   \   000001E8   E91F               SUBS     R1,R5,#+7
   \   000001EA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001EC   360E               LSRS     R6,R6,#+24
   \   000001EE   0220               MOVS     R0,#+2
   \   000001F0   7043               MULS     R0,R6,R0
   \   000001F2   0830               ADDS     R0,R0,#+8
   \   000001F4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001F6   000E               LSRS     R0,R0,#+24
   \   000001F8   ........           BL       V_line
   9060                }
   \   000001FC   761C               ADDS     R6,R6,#+1
   \                     ??ThermostatAutoSet_Paint_4:
   \   000001FE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000200   360E               LSRS     R6,R6,#+24
   \   00000202   182E               CMP      R6,#+24
   \   00000204   E3D3               BCC      ??ThermostatAutoSet_Paint_5
   9061                
   9062          
   9063                
   9064                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000206   82B0               SUB      SP,SP,#+8
   \   00000208   0020               MOVS     R0,#+0
   \   0000020A   0090               STR      R0,[SP, #+0]
   \   0000020C   8021               MOVS     R1,#+128
   \   0000020E   0020               MOVS     R0,#+0
   \   00000210   03B4               PUSH     {R0,R1}
   \   00000212   0521               MOVS     R1,#+5
   \   00000214   0120               MOVS     R0,#+1
   \   00000216   03B4               PUSH     {R0,R1}
   \   00000218   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000021A   2D0E               LSRS     R5,R5,#+24
   \   0000021C   2B00               MOVS     R3,R5
   \   0000021E   113B               SUBS     R3,R3,#+17
   \   00000220   0622               MOVS     R2,#+6
   \   00000222   0021               MOVS     R1,#+0
   \   00000224   BEA0               ADR      R0,??ThermostatAutoSet_Paint_3+0x10  ;; 0x30, 0x00, 0x00, 0x00
   \   00000226   ........           BL       Label
   \   0000022A   06B0               ADD      SP,SP,#+24
   9065                V_line(6+1*2,Ychart-9,1,1); 
   \   0000022C   0123               MOVS     R3,#+1
   \   0000022E   0122               MOVS     R2,#+1
   \   00000230   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000232   2D0E               LSRS     R5,R5,#+24
   \   00000234   2900               MOVS     R1,R5
   \   00000236   0939               SUBS     R1,R1,#+9
   \   00000238   0820               MOVS     R0,#+8
   \   0000023A   ........           BL       V_line
   9066                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0020               MOVS     R0,#+0
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   8021               MOVS     R1,#+128
   \   00000246   0020               MOVS     R0,#+0
   \   00000248   03B4               PUSH     {R0,R1}
   \   0000024A   0521               MOVS     R1,#+5
   \   0000024C   0120               MOVS     R0,#+1
   \   0000024E   03B4               PUSH     {R0,R1}
   \   00000250   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000252   2D0E               LSRS     R5,R5,#+24
   \   00000254   2B00               MOVS     R3,R5
   \   00000256   113B               SUBS     R3,R3,#+17
   \   00000258   1222               MOVS     R2,#+18
   \   0000025A   0021               MOVS     R1,#+0
   \   0000025C   B1A0               ADR      R0,??ThermostatAutoSet_Paint_3+0x14  ;; 0x36, 0x00, 0x00, 0x00
   \   0000025E   ........           BL       Label
   \   00000262   06B0               ADD      SP,SP,#+24
   9067                V_line(6+6*2,Ychart-9,1,1); 
   \   00000264   0123               MOVS     R3,#+1
   \   00000266   0122               MOVS     R2,#+1
   \   00000268   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000026A   2D0E               LSRS     R5,R5,#+24
   \   0000026C   2900               MOVS     R1,R5
   \   0000026E   0939               SUBS     R1,R1,#+9
   \   00000270   1220               MOVS     R0,#+18
   \   00000272   ........           BL       V_line
   9068                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000276   82B0               SUB      SP,SP,#+8
   \   00000278   0020               MOVS     R0,#+0
   \   0000027A   0090               STR      R0,[SP, #+0]
   \   0000027C   8021               MOVS     R1,#+128
   \   0000027E   0020               MOVS     R0,#+0
   \   00000280   03B4               PUSH     {R0,R1}
   \   00000282   0521               MOVS     R1,#+5
   \   00000284   0220               MOVS     R0,#+2
   \   00000286   03B4               PUSH     {R0,R1}
   \   00000288   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000028A   2D0E               LSRS     R5,R5,#+24
   \   0000028C   2B00               MOVS     R3,R5
   \   0000028E   113B               SUBS     R3,R3,#+17
   \   00000290   1C22               MOVS     R2,#+28
   \   00000292   0021               MOVS     R1,#+0
   \   00000294   A4A0               ADR      R0,??ThermostatAutoSet_Paint_3+0x18  ;; 0x31, 0x32, 0x00, 0x00
   \   00000296   ........           BL       Label
   \   0000029A   06B0               ADD      SP,SP,#+24
   9069                V_line(6+12*2,Ychart-9,1,1); 
   \   0000029C   0123               MOVS     R3,#+1
   \   0000029E   0122               MOVS     R2,#+1
   \   000002A0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002A2   2D0E               LSRS     R5,R5,#+24
   \   000002A4   2900               MOVS     R1,R5
   \   000002A6   0939               SUBS     R1,R1,#+9
   \   000002A8   1E20               MOVS     R0,#+30
   \   000002AA   ........           BL       V_line
   9070                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000002AE   82B0               SUB      SP,SP,#+8
   \   000002B0   0020               MOVS     R0,#+0
   \   000002B2   0090               STR      R0,[SP, #+0]
   \   000002B4   8021               MOVS     R1,#+128
   \   000002B6   0020               MOVS     R0,#+0
   \   000002B8   03B4               PUSH     {R0,R1}
   \   000002BA   0521               MOVS     R1,#+5
   \   000002BC   0220               MOVS     R0,#+2
   \   000002BE   03B4               PUSH     {R0,R1}
   \   000002C0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002C2   2D0E               LSRS     R5,R5,#+24
   \   000002C4   2B00               MOVS     R3,R5
   \   000002C6   113B               SUBS     R3,R3,#+17
   \   000002C8   2822               MOVS     R2,#+40
   \   000002CA   0021               MOVS     R1,#+0
   \   000002CC   97A0               ADR      R0,??ThermostatAutoSet_Paint_3+0x1C  ;; 0x31, 0x38, 0x00, 0x00
   \   000002CE   ........           BL       Label
   \   000002D2   06B0               ADD      SP,SP,#+24
   9071                V_line(6+18*2,Ychart-9,1,1); 
   \   000002D4   0123               MOVS     R3,#+1
   \   000002D6   0122               MOVS     R2,#+1
   \   000002D8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002DA   2D0E               LSRS     R5,R5,#+24
   \   000002DC   2900               MOVS     R1,R5
   \   000002DE   0939               SUBS     R1,R1,#+9
   \   000002E0   2A20               MOVS     R0,#+42
   \   000002E2   ........           BL       V_line
   9072                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000002E6   82B0               SUB      SP,SP,#+8
   \   000002E8   0020               MOVS     R0,#+0
   \   000002EA   0090               STR      R0,[SP, #+0]
   \   000002EC   8021               MOVS     R1,#+128
   \   000002EE   0020               MOVS     R0,#+0
   \   000002F0   03B4               PUSH     {R0,R1}
   \   000002F2   0521               MOVS     R1,#+5
   \   000002F4   0220               MOVS     R0,#+2
   \   000002F6   03B4               PUSH     {R0,R1}
   \   000002F8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002FA   2D0E               LSRS     R5,R5,#+24
   \   000002FC   2B00               MOVS     R3,R5
   \   000002FE   113B               SUBS     R3,R3,#+17
   \   00000300   3222               MOVS     R2,#+50
   \   00000302   0021               MOVS     R1,#+0
   \   00000304   8AA0               ADR      R0,??ThermostatAutoSet_Paint_3+0x20  ;; 0x32, 0x33, 0x00, 0x00
   \   00000306   ........           BL       Label
   \   0000030A   06B0               ADD      SP,SP,#+24
   9073                V_line(6+24*2,Ychart-9,1,1);             
   \   0000030C   0123               MOVS     R3,#+1
   \   0000030E   0122               MOVS     R2,#+1
   \   00000310   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000312   2D0E               LSRS     R5,R5,#+24
   \   00000314   093D               SUBS     R5,R5,#+9
   \   00000316   2900               MOVS     R1,R5
   \   00000318   3620               MOVS     R0,#+54
   \   0000031A   ........           BL       V_line
   9074                
   9075                
   9076                Ychart=21;
   \   0000031E   1525               MOVS     R5,#+21
   9077                H_line(1,Ychart+12,62,1); 
   \   00000320   0123               MOVS     R3,#+1
   \   00000322   3E22               MOVS     R2,#+62
   \   00000324   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000326   2D0E               LSRS     R5,R5,#+24
   \   00000328   2900               MOVS     R1,R5
   \   0000032A   0C31               ADDS     R1,R1,#+12
   \   0000032C   0120               MOVS     R0,#+1
   \   0000032E   ........           BL       H_line
   9078                 H_line(1,Ychart+11,62,1);  
   \   00000332   0123               MOVS     R3,#+1
   \   00000334   3E22               MOVS     R2,#+62
   \   00000336   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000338   2D0E               LSRS     R5,R5,#+24
   \   0000033A   2900               MOVS     R1,R5
   \   0000033C   0B31               ADDS     R1,R1,#+11
   \   0000033E   0120               MOVS     R0,#+1
   \   00000340   ........           BL       H_line
   9079                
   9080                for (char i=0; i<7; i++)
   \   00000344   0026               MOVS     R6,#+0
   \   00000346   29E0               B        ??ThermostatAutoSet_Paint_6
   9081                {
   9082                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((~(Screen->Thermo.Week>>i)) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_7:
   \   00000348   82B0               SUB      SP,SP,#+8
   \   0000034A   9120               MOVS     R0,#+145
   \   0000034C   205C               LDRB     R0,[R4, R0]
   \   0000034E   3041               ASRS     R0,R0,R6
   \   00000350   0121               MOVS     R1,#+1
   \   00000352   8143               BICS     R1,R1,R0
   \   00000354   0091               STR      R1,[SP, #+0]
   \   00000356   8021               MOVS     R1,#+128
   \   00000358   0020               MOVS     R0,#+0
   \   0000035A   03B4               PUSH     {R0,R1}
   \   0000035C   0621               MOVS     R1,#+6
   \   0000035E   0120               MOVS     R0,#+1
   \   00000360   03B4               PUSH     {R0,R1}
   \   00000362   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000364   2D0E               LSRS     R5,R5,#+24
   \   00000366   2B00               MOVS     R3,R5
   \   00000368   9B1C               ADDS     R3,R3,#+2
   \   0000036A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000036C   360E               LSRS     R6,R6,#+24
   \   0000036E   0822               MOVS     R2,#+8
   \   00000370   7243               MULS     R2,R6,R2
   \   00000372   121D               ADDS     R2,R2,#+4
   \   00000374   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000376   120E               LSRS     R2,R2,#+24
   \   00000378   0221               MOVS     R1,#+2
   \   0000037A   8C46               MOV      R12,R1
   \   0000037C   6449               LDR      R1,??ThermostatAutoSet_Paint_3  ;; 0x6ea
   \   0000037E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000380   360E               LSRS     R6,R6,#+24
   \   00000382   6448               LDR      R0,??ThermostatAutoSet_Paint_3+0x4  ;; g_leng
   \   00000384   0068               LDR      R0,[R0, #+0]
   \   00000386   644F               LDR      R7,??ThermostatAutoSet_Paint_3+0x8  ;; 0xa7d
   \   00000388   7843               MULS     R0,R7,R0
   \   0000038A   644F               LDR      R7,??ThermostatAutoSet_Paint_3+0xC  ;; Speech
   \   0000038C   3818               ADDS     R0,R7,R0
   \   0000038E   8019               ADDS     R0,R0,R6
   \   00000390   4018               ADDS     R0,R0,R1
   \   00000392   6146               MOV      R1,R12
   \   00000394   ........           BL       Label
   \   00000398   06B0               ADD      SP,SP,#+24
   9083                } 
   \   0000039A   761C               ADDS     R6,R6,#+1
   \                     ??ThermostatAutoSet_Paint_6:
   \   0000039C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000039E   360E               LSRS     R6,R6,#+24
   \   000003A0   072E               CMP      R6,#+7
   \   000003A2   D1D3               BCC      ??ThermostatAutoSet_Paint_7
   9084                 
   9085                for (char i=0; i<24; i++)
   \   000003A4   0026               MOVS     R6,#+0
   \   000003A6   1FE0               B        ??ThermostatAutoSet_Paint_8
   \                     ??ThermostatAutoSet_Paint_0:
   \   000003A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000003AC   ........           DC32     `?<Constant "Thermo">`
   \   000003B0   54310000           DC8      0x54, 0x31, 0x00, 0x00
   \   000003B4   54320000           DC8      0x54, 0x32, 0x00, 0x00
   9086                {
   9087                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[1]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_9:
   \   000003B8   0123               MOVS     R3,#+1
   \   000003BA   9C20               MOVS     R0,#+156
   \   000003BC   2058               LDR      R0,[R4, R0]
   \   000003BE   F040               LSRS     R0,R0,R6
   \   000003C0   0122               MOVS     R2,#+1
   \   000003C2   0240               ANDS     R2,R2,R0
   \   000003C4   0220               MOVS     R0,#+2
   \   000003C6   4243               MULS     R2,R0,R2
   \   000003C8   121D               ADDS     R2,R2,#+4
   \   000003CA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000003CC   120E               LSRS     R2,R2,#+24
   \   000003CE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000003D0   2D0E               LSRS     R5,R5,#+24
   \   000003D2   E91F               SUBS     R1,R5,#+7
   \   000003D4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003D6   360E               LSRS     R6,R6,#+24
   \   000003D8   0220               MOVS     R0,#+2
   \   000003DA   7043               MULS     R0,R6,R0
   \   000003DC   0830               ADDS     R0,R0,#+8
   \   000003DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003E0   000E               LSRS     R0,R0,#+24
   \   000003E2   ........           BL       V_line
   9088                }
   \   000003E6   761C               ADDS     R6,R6,#+1
   \                     ??ThermostatAutoSet_Paint_8:
   \   000003E8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003EA   360E               LSRS     R6,R6,#+24
   \   000003EC   182E               CMP      R6,#+24
   \   000003EE   E3D3               BCC      ??ThermostatAutoSet_Paint_9
   9089                
   9090                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003F0   82B0               SUB      SP,SP,#+8
   \   000003F2   0020               MOVS     R0,#+0
   \   000003F4   0090               STR      R0,[SP, #+0]
   \   000003F6   8021               MOVS     R1,#+128
   \   000003F8   0020               MOVS     R0,#+0
   \   000003FA   03B4               PUSH     {R0,R1}
   \   000003FC   0521               MOVS     R1,#+5
   \   000003FE   0120               MOVS     R0,#+1
   \   00000400   03B4               PUSH     {R0,R1}
   \   00000402   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000404   2D0E               LSRS     R5,R5,#+24
   \   00000406   2B00               MOVS     R3,R5
   \   00000408   113B               SUBS     R3,R3,#+17
   \   0000040A   0622               MOVS     R2,#+6
   \   0000040C   0021               MOVS     R1,#+0
   \   0000040E   44A0               ADR      R0,??ThermostatAutoSet_Paint_3+0x10  ;; 0x30, 0x00, 0x00, 0x00
   \   00000410   ........           BL       Label
   \   00000414   06B0               ADD      SP,SP,#+24
   9091                V_line(6+1*2,Ychart-9,1,1); 
   \   00000416   0123               MOVS     R3,#+1
   \   00000418   0122               MOVS     R2,#+1
   \   0000041A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000041C   2D0E               LSRS     R5,R5,#+24
   \   0000041E   2900               MOVS     R1,R5
   \   00000420   0939               SUBS     R1,R1,#+9
   \   00000422   0820               MOVS     R0,#+8
   \   00000424   ........           BL       V_line
   9092                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000428   82B0               SUB      SP,SP,#+8
   \   0000042A   0020               MOVS     R0,#+0
   \   0000042C   0090               STR      R0,[SP, #+0]
   \   0000042E   8021               MOVS     R1,#+128
   \   00000430   0020               MOVS     R0,#+0
   \   00000432   03B4               PUSH     {R0,R1}
   \   00000434   0521               MOVS     R1,#+5
   \   00000436   0120               MOVS     R0,#+1
   \   00000438   03B4               PUSH     {R0,R1}
   \   0000043A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000043C   2D0E               LSRS     R5,R5,#+24
   \   0000043E   2B00               MOVS     R3,R5
   \   00000440   113B               SUBS     R3,R3,#+17
   \   00000442   1222               MOVS     R2,#+18
   \   00000444   0021               MOVS     R1,#+0
   \   00000446   37A0               ADR      R0,??ThermostatAutoSet_Paint_3+0x14  ;; 0x36, 0x00, 0x00, 0x00
   \   00000448   ........           BL       Label
   \   0000044C   06B0               ADD      SP,SP,#+24
   9093                V_line(6+6*2,Ychart-9,1,1); 
   \   0000044E   0123               MOVS     R3,#+1
   \   00000450   0122               MOVS     R2,#+1
   \   00000452   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000454   2D0E               LSRS     R5,R5,#+24
   \   00000456   2900               MOVS     R1,R5
   \   00000458   0939               SUBS     R1,R1,#+9
   \   0000045A   1220               MOVS     R0,#+18
   \   0000045C   ........           BL       V_line
   9094                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000460   82B0               SUB      SP,SP,#+8
   \   00000462   0020               MOVS     R0,#+0
   \   00000464   0090               STR      R0,[SP, #+0]
   \   00000466   8021               MOVS     R1,#+128
   \   00000468   0020               MOVS     R0,#+0
   \   0000046A   03B4               PUSH     {R0,R1}
   \   0000046C   0521               MOVS     R1,#+5
   \   0000046E   0220               MOVS     R0,#+2
   \   00000470   03B4               PUSH     {R0,R1}
   \   00000472   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000474   2D0E               LSRS     R5,R5,#+24
   \   00000476   2B00               MOVS     R3,R5
   \   00000478   113B               SUBS     R3,R3,#+17
   \   0000047A   1C22               MOVS     R2,#+28
   \   0000047C   0021               MOVS     R1,#+0
   \   0000047E   2AA0               ADR      R0,??ThermostatAutoSet_Paint_3+0x18  ;; 0x31, 0x32, 0x00, 0x00
   \   00000480   ........           BL       Label
   \   00000484   06B0               ADD      SP,SP,#+24
   9095                V_line(6+12*2,Ychart-9,1,1); 
   \   00000486   0123               MOVS     R3,#+1
   \   00000488   0122               MOVS     R2,#+1
   \   0000048A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000048C   2D0E               LSRS     R5,R5,#+24
   \   0000048E   2900               MOVS     R1,R5
   \   00000490   0939               SUBS     R1,R1,#+9
   \   00000492   1E20               MOVS     R0,#+30
   \   00000494   ........           BL       V_line
   9096                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000498   82B0               SUB      SP,SP,#+8
   \   0000049A   0020               MOVS     R0,#+0
   \   0000049C   0090               STR      R0,[SP, #+0]
   \   0000049E   8021               MOVS     R1,#+128
   \   000004A0   0020               MOVS     R0,#+0
   \   000004A2   03B4               PUSH     {R0,R1}
   \   000004A4   0521               MOVS     R1,#+5
   \   000004A6   0220               MOVS     R0,#+2
   \   000004A8   03B4               PUSH     {R0,R1}
   \   000004AA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004AC   2D0E               LSRS     R5,R5,#+24
   \   000004AE   2B00               MOVS     R3,R5
   \   000004B0   113B               SUBS     R3,R3,#+17
   \   000004B2   2822               MOVS     R2,#+40
   \   000004B4   0021               MOVS     R1,#+0
   \   000004B6   1DA0               ADR      R0,??ThermostatAutoSet_Paint_3+0x1C  ;; 0x31, 0x38, 0x00, 0x00
   \   000004B8   ........           BL       Label
   \   000004BC   06B0               ADD      SP,SP,#+24
   9097                V_line(6+18*2,Ychart-9,1,1); 
   \   000004BE   0123               MOVS     R3,#+1
   \   000004C0   0122               MOVS     R2,#+1
   \   000004C2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004C4   2D0E               LSRS     R5,R5,#+24
   \   000004C6   2900               MOVS     R1,R5
   \   000004C8   0939               SUBS     R1,R1,#+9
   \   000004CA   2A20               MOVS     R0,#+42
   \   000004CC   ........           BL       V_line
   9098                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000004D0   82B0               SUB      SP,SP,#+8
   \   000004D2   0020               MOVS     R0,#+0
   \   000004D4   0090               STR      R0,[SP, #+0]
   \   000004D6   8021               MOVS     R1,#+128
   \   000004D8   0020               MOVS     R0,#+0
   \   000004DA   03B4               PUSH     {R0,R1}
   \   000004DC   0521               MOVS     R1,#+5
   \   000004DE   0220               MOVS     R0,#+2
   \   000004E0   03B4               PUSH     {R0,R1}
   \   000004E2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004E4   2D0E               LSRS     R5,R5,#+24
   \   000004E6   2B00               MOVS     R3,R5
   \   000004E8   113B               SUBS     R3,R3,#+17
   \   000004EA   3222               MOVS     R2,#+50
   \   000004EC   0021               MOVS     R1,#+0
   \   000004EE   10A0               ADR      R0,??ThermostatAutoSet_Paint_3+0x20  ;; 0x32, 0x33, 0x00, 0x00
   \   000004F0   ........           BL       Label
   \   000004F4   06B0               ADD      SP,SP,#+24
   9099                V_line(6+24*2,Ychart-9,1,1);             
   \   000004F6   0123               MOVS     R3,#+1
   \   000004F8   0122               MOVS     R2,#+1
   \   000004FA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000004FC   2D0E               LSRS     R5,R5,#+24
   \   000004FE   093D               SUBS     R5,R5,#+9
   \   00000500   2900               MOVS     R1,R5
   \   00000502   3620               MOVS     R0,#+54
   \   00000504   ........           BL       V_line
   9100                
   9101          }//________________________________________________________________________
   \   00000508   03B0               ADD      SP,SP,#+12
   \   0000050A   F0BC               POP      {R4-R7}
   \   0000050C   01BC               POP      {R0}
   \   0000050E   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Paint_3:
   \   00000510   EA060000           DC32     0x6ea
   \   00000514   ........           DC32     g_leng
   \   00000518   7D0A0000           DC32     0xa7d
   \   0000051C   ........           DC32     Speech
   \   00000520   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000524   36000000           DC8      0x36, 0x00, 0x00, 0x00
   \   00000528   31320000           DC8      0x31, 0x32, 0x00, 0x00
   \   0000052C   31380000           DC8      0x31, 0x38, 0x00, 0x00
   \   00000530   32330000           DC8      0x32, 0x33, 0x00, 0x00
   9102          
   9103              
   9104          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9105          void ThermostatAutoSet_Event(_Screen* Screen)
   9106                {
   \                     ThermostatAutoSet_Event:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   9107             
   9108                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   BF48               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   BF48               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   BE48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   BE48               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   405F               LDRSH    R0,[R0, R5]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   4BD5               BPL      ??ThermostatAutoSet_Event_1
   9109                  {
   9110                     if (ProgramChange) 
   \   00000032   BB48               LDR      R0,??ThermostatAutoSet_Event_0+0x10  ;; ProgramChange
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   3DD0               BEQ      ??ThermostatAutoSet_Event_2
   9111                    {
   9112                        
   9113                        if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   \   0000003A   BA48               LDR      R0,??ThermostatAutoSet_Event_0+0x14  ;; 0xbc30
   \   0000003C   BA49               LDR      R1,??ThermostatAutoSet_Event_0+0x18  ;; DateTime + 6
   \   0000003E   0978               LDRB     R1,[R1, #+0]
   \   00000040   0422               MOVS     R2,#+4
   \   00000042   5143               MULS     R1,R2,R1
   \   00000044   B94A               LDR      R2,??ThermostatAutoSet_Event_0+0x1C  ;; CurrentSheet
   \   00000046   1278               LDRB     R2,[R2, #+0]
   \   00000048   A023               MOVS     R3,#+160
   \   0000004A   5A43               MULS     R2,R3,R2
   \   0000004C   B84B               LDR      R3,??ThermostatAutoSet_Event_0+0x20  ;; gProg
   \   0000004E   9A18               ADDS     R2,R3,R2
   \   00000050   5118               ADDS     R1,R2,R1
   \   00000052   0858               LDR      R0,[R1, R0]
   \   00000054   B749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; DateTime + 3
   \   00000056   0978               LDRB     R1,[R1, #+0]
   \   00000058   C840               LSRS     R0,R0,R1
   \   0000005A   C007               LSLS     R0,R0,#+31
   \   0000005C   10D5               BPL      ??ThermostatAutoSet_Event_3
   9114                        {
   9115                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   0000005E   B648               LDR      R0,??ThermostatAutoSet_Event_0+0x28  ;; 0xbc2e
   \   00000060   B249               LDR      R1,??ThermostatAutoSet_Event_0+0x1C  ;; CurrentSheet
   \   00000062   0978               LDRB     R1,[R1, #+0]
   \   00000064   A022               MOVS     R2,#+160
   \   00000066   5143               MULS     R1,R2,R1
   \   00000068   B14A               LDR      R2,??ThermostatAutoSet_Event_0+0x20  ;; gProg
   \   0000006A   5118               ADDS     R1,R2,R1
   \   0000006C   B34A               LDR      R2,??ThermostatAutoSet_Event_0+0x2C  ;; 0xbc2a
   \   0000006E   AF4B               LDR      R3,??ThermostatAutoSet_Event_0+0x1C  ;; CurrentSheet
   \   00000070   1B78               LDRB     R3,[R3, #+0]
   \   00000072   A024               MOVS     R4,#+160
   \   00000074   6343               MULS     R3,R4,R3
   \   00000076   AE4C               LDR      R4,??ThermostatAutoSet_Event_0+0x20  ;; gProg
   \   00000078   E318               ADDS     R3,R4,R3
   \   0000007A   9A5A               LDRH     R2,[R3, R2]
   \   0000007C   0A52               STRH     R2,[R1, R0]
   \   0000007E   0FE0               B        ??ThermostatAutoSet_Event_4
   9116                        }else{
   9117                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??ThermostatAutoSet_Event_3:
   \   00000080   AD48               LDR      R0,??ThermostatAutoSet_Event_0+0x28  ;; 0xbc2e
   \   00000082   AA49               LDR      R1,??ThermostatAutoSet_Event_0+0x1C  ;; CurrentSheet
   \   00000084   0978               LDRB     R1,[R1, #+0]
   \   00000086   A022               MOVS     R2,#+160
   \   00000088   5143               MULS     R1,R2,R1
   \   0000008A   A94A               LDR      R2,??ThermostatAutoSet_Event_0+0x20  ;; gProg
   \   0000008C   5118               ADDS     R1,R2,R1
   \   0000008E   AC4A               LDR      R2,??ThermostatAutoSet_Event_0+0x30  ;; 0xbc2c
   \   00000090   A64B               LDR      R3,??ThermostatAutoSet_Event_0+0x1C  ;; CurrentSheet
   \   00000092   1B78               LDRB     R3,[R3, #+0]
   \   00000094   A024               MOVS     R4,#+160
   \   00000096   6343               MULS     R3,R4,R3
   \   00000098   A54C               LDR      R4,??ThermostatAutoSet_Event_0+0x20  ;; gProg
   \   0000009A   E318               ADDS     R3,R4,R3
   \   0000009C   9A5A               LDRH     R2,[R3, R2]
   \   0000009E   0A52               STRH     R2,[R1, R0]
   9118                        }
   9119                        
   9120                        ThermostatsTimeChartExecute(); 
   \                     ??ThermostatAutoSet_Event_4:
   \   000000A0   ........           BL       ThermostatsTimeChartExecute
   9121                        ThermostatsExecute();
   \   000000A4   ........           BL       ThermostatsExecute
   9122                        
   9123                        MenuLevel=(MenuLevel*10+0); 
   \   000000A8   A648               LDR      R0,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   000000AA   A649               LDR      R1,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   000000AC   0968               LDR      R1,[R1, #+0]
   \   000000AE   0A22               MOVS     R2,#+10
   \   000000B0   5143               MULS     R1,R2,R1
   \   000000B2   0160               STR      R1,[R0, #+0]
   \   000000B4   06E0               B        ??ThermostatAutoSet_Event_5
   9124                    }else{
   9125                      MenuLevel=(MenuLevel/10);
   \                     ??ThermostatAutoSet_Event_2:
   \   000000B6   A348               LDR      R0,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   000000B8   0068               LDR      R0,[R0, #+0]
   \   000000BA   0A21               MOVS     R1,#+10
   \   000000BC   ........           BL       __aeabi_idivmod
   \   000000C0   A049               LDR      R1,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   000000C2   0860               STR      R0,[R1, #+0]
   9126                    }
   9127                    MenuPaint();
   \                     ??ThermostatAutoSet_Event_5:
   \   000000C4   ........           BL       MenuPaint
   \   000000C8   1DE1               B        ??ThermostatAutoSet_Event_6
   9128                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatAutoSet_Event_1:
   \   000000CA   9148               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   000000CC   0021               MOVS     R1,#+0
   \   000000CE   405E               LDRSH    R0,[R0, R1]
   \   000000D0   7028               CMP      R0,#+112
   \   000000D2   05DB               BLT      ??ThermostatAutoSet_Event_7
   \   000000D4   9048               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   405E               LDRSH    R0,[R0, R1]
   \   000000DA   7028               CMP      R0,#+112
   \   000000DC   00DB               BLT      .+4
   \   000000DE   12E1               B        ??ThermostatAutoSet_Event_6
   9129                  {  
   9130                  
   9131                         char Refresh=0; 
   \                     ??ThermostatAutoSet_Event_7:
   \   000000E0   0025               MOVS     R5,#+0
   9132                        
   9133                        char txt[5]; txt[1]=0; 
   \   000000E2   6846               MOV      R0,SP
   \   000000E4   0021               MOVS     R1,#+0
   \   000000E6   4170               STRB     R1,[R0, #+1]
   9134                        txt[0]=31;//dó³ 
   \   000000E8   6846               MOV      R0,SP
   \   000000EA   1F21               MOVS     R1,#+31
   \   000000EC   0170               STRB     R1,[R0, #+0]
   9135                        if ((Button(txt,2,89,18,18)==2) && (Screen->Thermo.Temperature[0]>0)) {Screen->Thermo.Temperature[0]--; Refresh=1; ProgramChange=1;}
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   1220               MOVS     R0,#+18
   \   000000F2   0090               STR      R0,[SP, #+0]
   \   000000F4   1223               MOVS     R3,#+18
   \   000000F6   5922               MOVS     R2,#+89
   \   000000F8   0221               MOVS     R1,#+2
   \   000000FA   02A8               ADD      R0,SP,#+8
   \   000000FC   ........           BL       Button
   \   00000100   02B0               ADD      SP,SP,#+8
   \   00000102   0228               CMP      R0,#+2
   \   00000104   0CD1               BNE      ??ThermostatAutoSet_Event_8
   \   00000106   9220               MOVS     R0,#+146
   \   00000108   205E               LDRSH    R0,[R4, R0]
   \   0000010A   0128               CMP      R0,#+1
   \   0000010C   08DB               BLT      ??ThermostatAutoSet_Event_8
   \   0000010E   9220               MOVS     R0,#+146
   \   00000110   9221               MOVS     R1,#+146
   \   00000112   615E               LDRSH    R1,[R4, R1]
   \   00000114   491E               SUBS     R1,R1,#+1
   \   00000116   2152               STRH     R1,[R4, R0]
   \   00000118   0125               MOVS     R5,#+1
   \   0000011A   8148               LDR      R0,??ThermostatAutoSet_Event_0+0x10  ;; ProgramChange
   \   0000011C   0121               MOVS     R1,#+1
   \   0000011E   0170               STRB     R1,[R0, #+0]
   9136                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_8:
   \   00000120   6846               MOV      R0,SP
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   4170               STRB     R1,[R0, #+1]
   \   00000126   6846               MOV      R0,SP
   \   00000128   1E21               MOVS     R1,#+30
   \   0000012A   0170               STRB     R1,[R0, #+0]
   9137                        if ((Button(txt,43,89,18,18)==2) && (Screen->Thermo.Temperature[0]<500)) {Screen->Thermo.Temperature[0]++; Refresh=1; ProgramChange=1;}
   \   0000012C   82B0               SUB      SP,SP,#+8
   \   0000012E   1220               MOVS     R0,#+18
   \   00000130   0090               STR      R0,[SP, #+0]
   \   00000132   1223               MOVS     R3,#+18
   \   00000134   5922               MOVS     R2,#+89
   \   00000136   2B21               MOVS     R1,#+43
   \   00000138   02A8               ADD      R0,SP,#+8
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
   \   00000140   0228               CMP      R0,#+2
   \   00000142   0ED1               BNE      ??ThermostatAutoSet_Event_9
   \   00000144   9220               MOVS     R0,#+146
   \   00000146   205E               LDRSH    R0,[R4, R0]
   \   00000148   FA21               MOVS     R1,#+250
   \   0000014A   4900               LSLS     R1,R1,#+1        ;; #+500
   \   0000014C   8842               CMP      R0,R1
   \   0000014E   08DA               BGE      ??ThermostatAutoSet_Event_9
   \   00000150   9220               MOVS     R0,#+146
   \   00000152   9221               MOVS     R1,#+146
   \   00000154   615E               LDRSH    R1,[R4, R1]
   \   00000156   491C               ADDS     R1,R1,#+1
   \   00000158   2152               STRH     R1,[R4, R0]
   \   0000015A   0125               MOVS     R5,#+1
   \   0000015C   7048               LDR      R0,??ThermostatAutoSet_Event_0+0x10  ;; ProgramChange
   \   0000015E   0121               MOVS     R1,#+1
   \   00000160   0170               STRB     R1,[R0, #+0]
   9138                        
   9139                        txt[1]=0; txt[0]=31;//dó³
   \                     ??ThermostatAutoSet_Event_9:
   \   00000162   6846               MOV      R0,SP
   \   00000164   0021               MOVS     R1,#+0
   \   00000166   4170               STRB     R1,[R0, #+1]
   \   00000168   6846               MOV      R0,SP
   \   0000016A   1F21               MOVS     R1,#+31
   \   0000016C   0170               STRB     R1,[R0, #+0]
   9140                        if ((Button(txt,2,69,18,18)==2) && (Screen->Thermo.Temperature[1]>0)) {Screen->Thermo.Temperature[1]--;Refresh=1; ProgramChange=1;}
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   1220               MOVS     R0,#+18
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   1223               MOVS     R3,#+18
   \   00000176   4522               MOVS     R2,#+69
   \   00000178   0221               MOVS     R1,#+2
   \   0000017A   02A8               ADD      R0,SP,#+8
   \   0000017C   ........           BL       Button
   \   00000180   02B0               ADD      SP,SP,#+8
   \   00000182   0228               CMP      R0,#+2
   \   00000184   0CD1               BNE      ??ThermostatAutoSet_Event_10
   \   00000186   9420               MOVS     R0,#+148
   \   00000188   205E               LDRSH    R0,[R4, R0]
   \   0000018A   0128               CMP      R0,#+1
   \   0000018C   08DB               BLT      ??ThermostatAutoSet_Event_10
   \   0000018E   9420               MOVS     R0,#+148
   \   00000190   9421               MOVS     R1,#+148
   \   00000192   615E               LDRSH    R1,[R4, R1]
   \   00000194   491E               SUBS     R1,R1,#+1
   \   00000196   2152               STRH     R1,[R4, R0]
   \   00000198   0125               MOVS     R5,#+1
   \   0000019A   6148               LDR      R0,??ThermostatAutoSet_Event_0+0x10  ;; ProgramChange
   \   0000019C   0121               MOVS     R1,#+1
   \   0000019E   0170               STRB     R1,[R0, #+0]
   9141                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_10:
   \   000001A0   6846               MOV      R0,SP
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   4170               STRB     R1,[R0, #+1]
   \   000001A6   6846               MOV      R0,SP
   \   000001A8   1E21               MOVS     R1,#+30
   \   000001AA   0170               STRB     R1,[R0, #+0]
   9142                        if ((Button(txt,43,69,18,18)==2) && (Screen->Thermo.Temperature[1]<5000)) {Screen->Thermo.Temperature[1]++;Refresh=1; ProgramChange=1;}
   \   000001AC   82B0               SUB      SP,SP,#+8
   \   000001AE   1220               MOVS     R0,#+18
   \   000001B0   0090               STR      R0,[SP, #+0]
   \   000001B2   1223               MOVS     R3,#+18
   \   000001B4   4522               MOVS     R2,#+69
   \   000001B6   2B21               MOVS     R1,#+43
   \   000001B8   02A8               ADD      R0,SP,#+8
   \   000001BA   ........           BL       Button
   \   000001BE   02B0               ADD      SP,SP,#+8
   \   000001C0   0228               CMP      R0,#+2
   \   000001C2   0DD1               BNE      ??ThermostatAutoSet_Event_11
   \   000001C4   9420               MOVS     R0,#+148
   \   000001C6   205E               LDRSH    R0,[R4, R0]
   \   000001C8   5F49               LDR      R1,??ThermostatAutoSet_Event_0+0x38  ;; 0x1388
   \   000001CA   8842               CMP      R0,R1
   \   000001CC   08DA               BGE      ??ThermostatAutoSet_Event_11
   \   000001CE   9420               MOVS     R0,#+148
   \   000001D0   9421               MOVS     R1,#+148
   \   000001D2   615E               LDRSH    R1,[R4, R1]
   \   000001D4   491C               ADDS     R1,R1,#+1
   \   000001D6   2152               STRH     R1,[R4, R0]
   \   000001D8   0125               MOVS     R5,#+1
   \   000001DA   5148               LDR      R0,??ThermostatAutoSet_Event_0+0x10  ;; ProgramChange
   \   000001DC   0121               MOVS     R1,#+1
   \   000001DE   0170               STRB     R1,[R0, #+0]
   9143          
   9144                        //je¿eli klikniêto obszar Chart 0
   9145                        if ((Y_up>34) && (Y_up<62) && (X_up>0))  {CurentChartModyfi=0; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_11:
   \   000001E0   4D48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   000001E2   0021               MOVS     R1,#+0
   \   000001E4   405E               LDRSH    R0,[R0, R1]
   \   000001E6   2328               CMP      R0,#+35
   \   000001E8   14DB               BLT      ??ThermostatAutoSet_Event_12
   \   000001EA   4B48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   000001EC   0021               MOVS     R1,#+0
   \   000001EE   405E               LDRSH    R0,[R0, R1]
   \   000001F0   3E28               CMP      R0,#+62
   \   000001F2   0FDA               BGE      ??ThermostatAutoSet_Event_12
   \   000001F4   4948               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001F6   0021               MOVS     R1,#+0
   \   000001F8   405E               LDRSH    R0,[R0, R1]
   \   000001FA   0128               CMP      R0,#+1
   \   000001FC   0ADB               BLT      ??ThermostatAutoSet_Event_12
   \   000001FE   5348               LDR      R0,??ThermostatAutoSet_Event_0+0x3C  ;; CurentChartModyfi
   \   00000200   0021               MOVS     R1,#+0
   \   00000202   0170               STRB     R1,[R0, #+0]
   \   00000204   0125               MOVS     R5,#+1
   \   00000206   4F48               LDR      R0,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   00000208   4E49               LDR      R1,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   0000020A   0968               LDR      R1,[R1, #+0]
   \   0000020C   0A22               MOVS     R2,#+10
   \   0000020E   5143               MULS     R1,R2,R1
   \   00000210   491C               ADDS     R1,R1,#+1
   \   00000212   0160               STR      R1,[R0, #+0]
   9146                        if ((Y_up>0) && (Y_up<30) && (X_up>0))  {CurentChartModyfi=1; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_12:
   \   00000214   4048               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000216   0021               MOVS     R1,#+0
   \   00000218   405E               LDRSH    R0,[R0, R1]
   \   0000021A   0128               CMP      R0,#+1
   \   0000021C   14DB               BLT      ??ThermostatAutoSet_Event_13
   \   0000021E   3E48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000220   0021               MOVS     R1,#+0
   \   00000222   405E               LDRSH    R0,[R0, R1]
   \   00000224   1E28               CMP      R0,#+30
   \   00000226   0FDA               BGE      ??ThermostatAutoSet_Event_13
   \   00000228   3C48               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   0000022A   0021               MOVS     R1,#+0
   \   0000022C   405E               LDRSH    R0,[R0, R1]
   \   0000022E   0128               CMP      R0,#+1
   \   00000230   0ADB               BLT      ??ThermostatAutoSet_Event_13
   \   00000232   4648               LDR      R0,??ThermostatAutoSet_Event_0+0x3C  ;; CurentChartModyfi
   \   00000234   0121               MOVS     R1,#+1
   \   00000236   0170               STRB     R1,[R0, #+0]
   \   00000238   0125               MOVS     R5,#+1
   \   0000023A   4248               LDR      R0,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   0000023C   4149               LDR      R1,??ThermostatAutoSet_Event_0+0x34  ;; MenuLevel
   \   0000023E   0968               LDR      R1,[R1, #+0]
   \   00000240   0A22               MOVS     R2,#+10
   \   00000242   5143               MULS     R1,R2,R1
   \   00000244   491C               ADDS     R1,R1,#+1
   \   00000246   0160               STR      R1,[R0, #+0]
   9147                         
   9148                        if ((X_down>0) && (Y_down>0)) Refresh=1;
   \                     ??ThermostatAutoSet_Event_13:
   \   00000248   3248               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   0000024A   0021               MOVS     R1,#+0
   \   0000024C   405E               LDRSH    R0,[R0, R1]
   \   0000024E   0128               CMP      R0,#+1
   \   00000250   05DB               BLT      ??ThermostatAutoSet_Event_14
   \   00000252   2F48               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   00000254   0021               MOVS     R1,#+0
   \   00000256   405E               LDRSH    R0,[R0, R1]
   \   00000258   0128               CMP      R0,#+1
   \   0000025A   00DB               BLT      ??ThermostatAutoSet_Event_14
   \   0000025C   0125               MOVS     R5,#+1
   9149                        if (Refresh==1) MenuPaint();  
   \                     ??ThermostatAutoSet_Event_14:
   \   0000025E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000260   2D0E               LSRS     R5,R5,#+24
   \   00000262   012D               CMP      R5,#+1
   \   00000264   01D1               BNE      ??ThermostatAutoSet_Event_15
   \   00000266   ........           BL       MenuPaint
   9150                        if ((Y_down>34) && (Y_down<62) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_15:
   \   0000026A   2948               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   0000026C   0021               MOVS     R1,#+0
   \   0000026E   405E               LDRSH    R0,[R0, R1]
   \   00000270   2328               CMP      R0,#+35
   \   00000272   21DB               BLT      ??ThermostatAutoSet_Event_16
   \   00000274   2648               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   00000276   0021               MOVS     R1,#+0
   \   00000278   405E               LDRSH    R0,[R0, R1]
   \   0000027A   3E28               CMP      R0,#+62
   \   0000027C   1CDA               BGE      ??ThermostatAutoSet_Event_16
   \   0000027E   2548               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000280   0021               MOVS     R1,#+0
   \   00000282   405E               LDRSH    R0,[R0, R1]
   \   00000284   0128               CMP      R0,#+1
   \   00000286   17DB               BLT      ??ThermostatAutoSet_Event_16
   9151                            V_line(1,32,33,1);
   \   00000288   0123               MOVS     R3,#+1
   \   0000028A   2122               MOVS     R2,#+33
   \   0000028C   2021               MOVS     R1,#+32
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   ........           BL       V_line
   9152                            V_line(61,32,33,1);
   \   00000294   0123               MOVS     R3,#+1
   \   00000296   2122               MOVS     R2,#+33
   \   00000298   2021               MOVS     R1,#+32
   \   0000029A   3D20               MOVS     R0,#+61
   \   0000029C   ........           BL       V_line
   9153                            H_line(1,64,62,1);
   \   000002A0   0123               MOVS     R3,#+1
   \   000002A2   3E22               MOVS     R2,#+62
   \   000002A4   4021               MOVS     R1,#+64
   \   000002A6   0120               MOVS     R0,#+1
   \   000002A8   ........           BL       H_line
   9154                            H_line(1,34,62,1);
   \   000002AC   0123               MOVS     R3,#+1
   \   000002AE   3E22               MOVS     R2,#+62
   \   000002B0   2221               MOVS     R1,#+34
   \   000002B2   0120               MOVS     R0,#+1
   \   000002B4   ........           BL       H_line
   9155                         }
   9156                        if ((Y_down>0) && (Y_down<30) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_16:
   \   000002B8   1548               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   000002BA   0021               MOVS     R1,#+0
   \   000002BC   405E               LDRSH    R0,[R0, R1]
   \   000002BE   0128               CMP      R0,#+1
   \   000002C0   21DB               BLT      ??ThermostatAutoSet_Event_6
   \   000002C2   1348               LDR      R0,??ThermostatAutoSet_Event_0  ;; Y_down
   \   000002C4   0021               MOVS     R1,#+0
   \   000002C6   405E               LDRSH    R0,[R0, R1]
   \   000002C8   1E28               CMP      R0,#+30
   \   000002CA   1CDA               BGE      ??ThermostatAutoSet_Event_6
   \   000002CC   1148               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   000002CE   0021               MOVS     R1,#+0
   \   000002D0   405E               LDRSH    R0,[R0, R1]
   \   000002D2   0128               CMP      R0,#+1
   \   000002D4   17DB               BLT      ??ThermostatAutoSet_Event_6
   9157                            V_line(1,3,30,1);
   \   000002D6   0123               MOVS     R3,#+1
   \   000002D8   1E22               MOVS     R2,#+30
   \   000002DA   0321               MOVS     R1,#+3
   \   000002DC   0120               MOVS     R0,#+1
   \   000002DE   ........           BL       V_line
   9158                            V_line(61,3,30,1);
   \   000002E2   0123               MOVS     R3,#+1
   \   000002E4   1E22               MOVS     R2,#+30
   \   000002E6   0321               MOVS     R1,#+3
   \   000002E8   3D20               MOVS     R0,#+61
   \   000002EA   ........           BL       V_line
   9159                            H_line(1,31,62,1);
   \   000002EE   0123               MOVS     R3,#+1
   \   000002F0   3E22               MOVS     R2,#+62
   \   000002F2   1F21               MOVS     R1,#+31
   \   000002F4   0120               MOVS     R0,#+1
   \   000002F6   ........           BL       H_line
   9160                            H_line(1,2,62,1);
   \   000002FA   0123               MOVS     R3,#+1
   \   000002FC   3E22               MOVS     R2,#+62
   \   000002FE   0221               MOVS     R1,#+2
   \   00000300   0120               MOVS     R0,#+1
   \   00000302   ........           BL       H_line
   9161                         }
   9162                        
   9163                  }
   9164          }//________________________________________________________________________
   \                     ??ThermostatAutoSet_Event_6:
   \   00000306   03B0               ADD      SP,SP,#+12
   \   00000308   30BC               POP      {R4,R5}
   \   0000030A   01BC               POP      {R0}
   \   0000030C   0047               BX       R0               ;; return
   \   0000030E   C046               Nop      
   \                     ??ThermostatAutoSet_Event_0:
   \   00000310   ........           DC32     Y_down
   \   00000314   ........           DC32     X_down
   \   00000318   ........           DC32     Y_up
   \   0000031C   ........           DC32     X_up
   \   00000320   ........           DC32     ProgramChange
   \   00000324   30BC0000           DC32     0xbc30
   \   00000328   ........           DC32     DateTime + 6
   \   0000032C   ........           DC32     CurrentSheet
   \   00000330   ........           DC32     gProg
   \   00000334   ........           DC32     DateTime + 3
   \   00000338   2EBC0000           DC32     0xbc2e
   \   0000033C   2ABC0000           DC32     0xbc2a
   \   00000340   2CBC0000           DC32     0xbc2c
   \   00000344   ........           DC32     MenuLevel
   \   00000348   88130000           DC32     0x1388
   \   0000034C   ........           DC32     CurentChartModyfi
   9165              
   9166          
   9167          
   9168          
   9169          
   9170          

   \                                 In section .bss, align 1
   9171          char ThermHourModyfi;
   \                     ThermHourModyfi:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   9172          void ThermostatChartSet_Paint(_Screen* Screen, char Chart)
   9173          {          
   \                     ThermostatChartSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0C00               MOVS     R4,R1
   9174                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   97A0               ADR      R0,??ThermostatChartSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0321               MOVS     R1,#+3
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0023               MOVS     R3,#+0
   \   00000026   6C22               MOVS     R2,#+108
   \   00000028   0121               MOVS     R1,#+1
   \   0000002A   9448               LDR      R0,??ThermostatChartSet_Paint_0+0x4  ;; `?<Constant "Thermo">`
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   9175          
   9176          
   9177                
   9178                char day=0;
   \   00000032   0025               MOVS     R5,#+0
   9179                char hlight=0;
   \   00000034   0020               MOVS     R0,#+0
   9180          
   9181                for (char row=0; row<3; row++)
   \   00000036   0026               MOVS     R6,#+0
   \   00000038   00E0               B        ??ThermostatChartSet_Paint_1
   \                     ??ThermostatChartSet_Paint_2:
   \   0000003A   761C               ADDS     R6,R6,#+1
   \                     ??ThermostatChartSet_Paint_1:
   \   0000003C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000003E   360E               LSRS     R6,R6,#+24
   \   00000040   032E               CMP      R6,#+3
   \   00000042   00D3               BCC      .+4
   \   00000044   9EE0               B        ??ThermostatChartSet_Paint_3
   9182                for (char col=0; col<3; col++)
   \   00000046   0027               MOVS     R7,#+0
   \   00000048   34E0               B        ??ThermostatChartSet_Paint_4
   9183                { 
   9184                  if (++day<8)
   9185                  {
   9186                      H_line(4+col*18,105-row*14,19,1);
   9187                      H_line(4+col*18,105-(row+1)*14,19,1);
   9188                      V_line(4+col*18,105-(row+1)*14,14,1);
   9189                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   9190                      
   9191                      if (Chart==1) hlight=(~(Screen->Thermo.Week>>(day-1)) &0x1); else hlight=(((Screen->Thermo.Week>>(day-1))) &0x1);
   \                     ??ThermostatChartSet_Paint_5:
   \   0000004A   0298               LDR      R0,[SP, #+8]
   \   0000004C   9130               ADDS     R0,R0,#+145
   \   0000004E   0178               LDRB     R1,[R0, #+0]
   \   00000050   681E               SUBS     R0,R5,#+1
   \   00000052   0141               ASRS     R1,R1,R0
   \   00000054   0120               MOVS     R0,#+1
   \   00000056   0840               ANDS     R0,R0,R1
   9192                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatChartSet_Paint_6:
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   8021               MOVS     R1,#+128
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   0E21               MOVS     R1,#+14
   \   00000068   0220               MOVS     R0,#+2
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   6C20               MOVS     R0,#+108
   \   0000006E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000070   360E               LSRS     R6,R6,#+24
   \   00000072   3100               MOVS     R1,R6
   \   00000074   491C               ADDS     R1,R1,#+1
   \   00000076   0E22               MOVS     R2,#+14
   \   00000078   5143               MULS     R1,R2,R1
   \   0000007A   431A               SUBS     R3,R0,R1
   \   0000007C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000007E   3F0E               LSRS     R7,R7,#+24
   \   00000080   1222               MOVS     R2,#+18
   \   00000082   7A43               MULS     R2,R7,R2
   \   00000084   921D               ADDS     R2,R2,#+6
   \   00000086   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000088   120E               LSRS     R2,R2,#+24
   \   0000008A   0221               MOVS     R1,#+2
   \   0000008C   02B5               PUSH     {R1,LR}
   \   0000008E   9446               MOV      R12,R2
   \   00000090   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000092   2D0E               LSRS     R5,R5,#+24
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   6943               MULS     R1,R5,R1
   \   00000098   7948               LDR      R0,??ThermostatChartSet_Paint_0+0x8  ;; g_leng
   \   0000009A   0068               LDR      R0,[R0, #+0]
   \   0000009C   1022               MOVS     R2,#+16
   \   0000009E   5043               MULS     R0,R2,R0
   \   000000A0   784A               LDR      R2,??ThermostatChartSet_Paint_0+0xC  ;; DeyOfWeekStr
   \   000000A2   1018               ADDS     R0,R2,R0
   \   000000A4   4018               ADDS     R0,R0,R1
   \   000000A6   6246               MOV      R2,R12
   \   000000A8   0099               LDR      R1,[SP, #0]
   \   000000AA   02B0               ADD      SP,SP,#+8
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   \                     ??ThermostatChartSet_Paint_7:
   \   000000B2   7F1C               ADDS     R7,R7,#+1
   \                     ??ThermostatChartSet_Paint_4:
   \   000000B4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000B6   3F0E               LSRS     R7,R7,#+24
   \   000000B8   032F               CMP      R7,#+3
   \   000000BA   BED2               BCS      ??ThermostatChartSet_Paint_2
   \   000000BC   6D1C               ADDS     R5,R5,#+1
   \   000000BE   2800               MOVS     R0,R5
   \   000000C0   0500               MOVS     R5,R0
   \   000000C2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C4   000E               LSRS     R0,R0,#+24
   \   000000C6   0828               CMP      R0,#+8
   \   000000C8   F3D2               BCS      ??ThermostatChartSet_Paint_7
   \   000000CA   0123               MOVS     R3,#+1
   \   000000CC   1322               MOVS     R2,#+19
   \   000000CE   6920               MOVS     R0,#+105
   \   000000D0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000D2   360E               LSRS     R6,R6,#+24
   \   000000D4   0E21               MOVS     R1,#+14
   \   000000D6   7143               MULS     R1,R6,R1
   \   000000D8   411A               SUBS     R1,R0,R1
   \   000000DA   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000DC   3F0E               LSRS     R7,R7,#+24
   \   000000DE   1220               MOVS     R0,#+18
   \   000000E0   7843               MULS     R0,R7,R0
   \   000000E2   001D               ADDS     R0,R0,#+4
   \   000000E4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E6   000E               LSRS     R0,R0,#+24
   \   000000E8   ........           BL       H_line
   \   000000EC   0123               MOVS     R3,#+1
   \   000000EE   1322               MOVS     R2,#+19
   \   000000F0   6920               MOVS     R0,#+105
   \   000000F2   8446               MOV      R12,R0
   \   000000F4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000F6   360E               LSRS     R6,R6,#+24
   \   000000F8   3100               MOVS     R1,R6
   \   000000FA   491C               ADDS     R1,R1,#+1
   \   000000FC   0E20               MOVS     R0,#+14
   \   000000FE   4143               MULS     R1,R0,R1
   \   00000100   6046               MOV      R0,R12
   \   00000102   411A               SUBS     R1,R0,R1
   \   00000104   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000106   3F0E               LSRS     R7,R7,#+24
   \   00000108   1220               MOVS     R0,#+18
   \   0000010A   7843               MULS     R0,R7,R0
   \   0000010C   001D               ADDS     R0,R0,#+4
   \   0000010E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   ........           BL       H_line
   \   00000116   0123               MOVS     R3,#+1
   \   00000118   0E22               MOVS     R2,#+14
   \   0000011A   6920               MOVS     R0,#+105
   \   0000011C   8446               MOV      R12,R0
   \   0000011E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000120   360E               LSRS     R6,R6,#+24
   \   00000122   3100               MOVS     R1,R6
   \   00000124   491C               ADDS     R1,R1,#+1
   \   00000126   0E20               MOVS     R0,#+14
   \   00000128   4143               MULS     R1,R0,R1
   \   0000012A   6046               MOV      R0,R12
   \   0000012C   411A               SUBS     R1,R0,R1
   \   0000012E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000130   3F0E               LSRS     R7,R7,#+24
   \   00000132   1220               MOVS     R0,#+18
   \   00000134   7843               MULS     R0,R7,R0
   \   00000136   001D               ADDS     R0,R0,#+4
   \   00000138   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000013A   000E               LSRS     R0,R0,#+24
   \   0000013C   ........           BL       V_line
   \   00000140   0123               MOVS     R3,#+1
   \   00000142   0E22               MOVS     R2,#+14
   \   00000144   6920               MOVS     R0,#+105
   \   00000146   8446               MOV      R12,R0
   \   00000148   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000014A   360E               LSRS     R6,R6,#+24
   \   0000014C   3100               MOVS     R1,R6
   \   0000014E   491C               ADDS     R1,R1,#+1
   \   00000150   0E20               MOVS     R0,#+14
   \   00000152   4143               MULS     R1,R0,R1
   \   00000154   6046               MOV      R0,R12
   \   00000156   411A               SUBS     R1,R0,R1
   \   00000158   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000015A   3F0E               LSRS     R7,R7,#+24
   \   0000015C   1220               MOVS     R0,#+18
   \   0000015E   7843               MULS     R0,R7,R0
   \   00000160   1630               ADDS     R0,R0,#+22
   \   00000162   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000164   000E               LSRS     R0,R0,#+24
   \   00000166   ........           BL       V_line
   \   0000016A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000016C   240E               LSRS     R4,R4,#+24
   \   0000016E   012C               CMP      R4,#+1
   \   00000170   00D0               BEQ      .+4
   \   00000172   6AE7               B        ??ThermostatChartSet_Paint_5
   \   00000174   0298               LDR      R0,[SP, #+8]
   \   00000176   9130               ADDS     R0,R0,#+145
   \   00000178   0178               LDRB     R1,[R0, #+0]
   \   0000017A   681E               SUBS     R0,R5,#+1
   \   0000017C   0141               ASRS     R1,R1,R0
   \   0000017E   0120               MOVS     R0,#+1
   \   00000180   8843               BICS     R0,R0,R1
   \   00000182   69E7               B        ??ThermostatChartSet_Paint_6
   9193          
   9194                  }
   9195                }
   9196                
   9197               
   9198                 
   9199                 
   9200                
   9201                char Ychart=44;
   \                     ??ThermostatChartSet_Paint_3:
   \   00000184   2C25               MOVS     R5,#+44
   9202                
   9203                H_line(1,Ychart+14,62,1);  
   \   00000186   0123               MOVS     R3,#+1
   \   00000188   3E22               MOVS     R2,#+62
   \   0000018A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000018C   2D0E               LSRS     R5,R5,#+24
   \   0000018E   2900               MOVS     R1,R5
   \   00000190   0E31               ADDS     R1,R1,#+14
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   ........           BL       H_line
   9204                H_line(1,Ychart+13,62,1);  
   \   00000198   0123               MOVS     R3,#+1
   \   0000019A   3E22               MOVS     R2,#+62
   \   0000019C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000019E   2D0E               LSRS     R5,R5,#+24
   \   000001A0   2900               MOVS     R1,R5
   \   000001A2   0D31               ADDS     R1,R1,#+13
   \   000001A4   0120               MOVS     R0,#+1
   \   000001A6   ........           BL       H_line
   9205            
   9206                
   9207                for (char i=0; i<24; i++)
   \   000001AA   0026               MOVS     R6,#+0
   \   000001AC   1DE0               B        ??ThermostatChartSet_Paint_8
   9208                {
   9209                   V_line(8+(i*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>i) & 0x1 )*3,1);  
   \                     ??ThermostatChartSet_Paint_9:
   \   000001AE   0123               MOVS     R3,#+1
   \   000001B0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001B2   240E               LSRS     R4,R4,#+24
   \   000001B4   0420               MOVS     R0,#+4
   \   000001B6   6043               MULS     R0,R4,R0
   \   000001B8   0299               LDR      R1,[SP, #+8]
   \   000001BA   0818               ADDS     R0,R1,R0
   \   000001BC   9830               ADDS     R0,R0,#+152
   \   000001BE   0068               LDR      R0,[R0, #+0]
   \   000001C0   F040               LSRS     R0,R0,R6
   \   000001C2   0122               MOVS     R2,#+1
   \   000001C4   0240               ANDS     R2,R2,R0
   \   000001C6   0320               MOVS     R0,#+3
   \   000001C8   4243               MULS     R2,R0,R2
   \   000001CA   521D               ADDS     R2,R2,#+5
   \   000001CC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001CE   120E               LSRS     R2,R2,#+24
   \   000001D0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001D2   2D0E               LSRS     R5,R5,#+24
   \   000001D4   2900               MOVS     R1,R5
   \   000001D6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001D8   360E               LSRS     R6,R6,#+24
   \   000001DA   0220               MOVS     R0,#+2
   \   000001DC   7043               MULS     R0,R6,R0
   \   000001DE   0830               ADDS     R0,R0,#+8
   \   000001E0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001E2   000E               LSRS     R0,R0,#+24
   \   000001E4   ........           BL       V_line
   9210                }
   \   000001E8   761C               ADDS     R6,R6,#+1
   \                     ??ThermostatChartSet_Paint_8:
   \   000001EA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000001EC   360E               LSRS     R6,R6,#+24
   \   000001EE   182E               CMP      R6,#+24
   \   000001F0   DDD3               BCC      ??ThermostatChartSet_Paint_9
   9211                
   9212                Button("<",4,Ychart-32,17,18); 
   \   000001F2   82B0               SUB      SP,SP,#+8
   \   000001F4   1220               MOVS     R0,#+18
   \   000001F6   0090               STR      R0,[SP, #+0]
   \   000001F8   1123               MOVS     R3,#+17
   \   000001FA   2A00               MOVS     R2,R5
   \   000001FC   203A               SUBS     R2,R2,#+32
   \   000001FE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000200   120E               LSRS     R2,R2,#+24
   \   00000202   0421               MOVS     R1,#+4
   \   00000204   20A0               ADR      R0,??ThermostatChartSet_Paint_0+0x10  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000206   ........           BL       Button
   \   0000020A   02B0               ADD      SP,SP,#+8
   9213                char txt[2]; txt[1]=0; 
   \   0000020C   6846               MOV      R0,SP
   \   0000020E   0021               MOVS     R1,#+0
   \   00000210   4170               STRB     R1,[R0, #+1]
   9214                if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   00000212   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000214   240E               LSRS     R4,R4,#+24
   \   00000216   0420               MOVS     R0,#+4
   \   00000218   4443               MULS     R4,R0,R4
   \   0000021A   0298               LDR      R0,[SP, #+8]
   \   0000021C   0019               ADDS     R0,R0,R4
   \   0000021E   9830               ADDS     R0,R0,#+152
   \   00000220   0068               LDR      R0,[R0, #+0]
   \   00000222   1A49               LDR      R1,??ThermostatChartSet_Paint_0+0x14  ;; ThermHourModyfi
   \   00000224   0978               LDRB     R1,[R1, #+0]
   \   00000226   C840               LSRS     R0,R0,R1
   \   00000228   C007               LSLS     R0,R0,#+31
   \   0000022A   03D5               BPL      ??ThermostatChartSet_Paint_10
   \   0000022C   6846               MOV      R0,SP
   \   0000022E   1F21               MOVS     R1,#+31
   \   00000230   0170               STRB     R1,[R0, #+0]
   \   00000232   02E0               B        ??ThermostatChartSet_Paint_11
   \                     ??ThermostatChartSet_Paint_10:
   \   00000234   6846               MOV      R0,SP
   \   00000236   1E21               MOVS     R1,#+30
   \   00000238   0170               STRB     R1,[R0, #+0]
   9215                Button(txt,23,Ychart-32,17,18); 
   \                     ??ThermostatChartSet_Paint_11:
   \   0000023A   82B0               SUB      SP,SP,#+8
   \   0000023C   1220               MOVS     R0,#+18
   \   0000023E   0090               STR      R0,[SP, #+0]
   \   00000240   1123               MOVS     R3,#+17
   \   00000242   2A00               MOVS     R2,R5
   \   00000244   203A               SUBS     R2,R2,#+32
   \   00000246   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000248   120E               LSRS     R2,R2,#+24
   \   0000024A   1721               MOVS     R1,#+23
   \   0000024C   02A8               ADD      R0,SP,#+8
   \   0000024E   ........           BL       Button
   \   00000252   02B0               ADD      SP,SP,#+8
   9216                Button(">",42,Ychart-32,17,18); 
   \   00000254   82B0               SUB      SP,SP,#+8
   \   00000256   1220               MOVS     R0,#+18
   \   00000258   0090               STR      R0,[SP, #+0]
   \   0000025A   1123               MOVS     R3,#+17
   \   0000025C   203D               SUBS     R5,R5,#+32
   \   0000025E   2A00               MOVS     R2,R5
   \   00000260   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000262   120E               LSRS     R2,R2,#+24
   \   00000264   2A21               MOVS     R1,#+42
   \   00000266   0AA0               ADR      R0,??ThermostatChartSet_Paint_0+0x18  ;; 0x3E, 0x00, 0x00, 0x00
   \   00000268   ........           BL       Button
   \   0000026C   02B0               ADD      SP,SP,#+8
   9217                
   9218                
   9219                
   9220          }//________________________________________________________________________
   \   0000026E   03B0               ADD      SP,SP,#+12
   \   00000270   F0BC               POP      {R4-R7}
   \   00000272   01BC               POP      {R0}
   \   00000274   0047               BX       R0               ;; return
   \   00000276   C046               Nop      
   \                     ??ThermostatChartSet_Paint_0:
   \   00000278   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000027C   ........           DC32     `?<Constant "Thermo">`
   \   00000280   ........           DC32     g_leng
   \   00000284   ........           DC32     DeyOfWeekStr
   \   00000288   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   0000028C   ........           DC32     ThermHourModyfi
   \   00000290   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   9221          
   9222              
   9223          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9224          void ThermostatChartSet_Event(_Screen* Screen, char Chart)
   9225                {
   \                     ThermostatChartSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   9226                  char Repaint=0;
   \   00000006   0027               MOVS     R7,#+0
   9227                  
   9228                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0F21               MOVS     R1,#+15
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   9148               LDR      R0,??ThermostatChartSet_Event_0  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   9148               LDR      R0,??ThermostatChartSet_Event_0+0x4  ;; X_down
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   9048               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   415E               LDRSH    R1,[R0, R1]
   \   00000026   9048               LDR      R0,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000028   0026               MOVS     R6,#+0
   \   0000002A   805F               LDRSH    R0,[R0, R6]
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0028               CMP      R0,#+0
   \   00000034   09D5               BPL      ??ThermostatChartSet_Event_1
   9229                  {
   9230                    MenuLevel=(MenuLevel/10);
   \   00000036   8D48               LDR      R0,??ThermostatChartSet_Event_0+0x10  ;; MenuLevel
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   0A21               MOVS     R1,#+10
   \   0000003C   ........           BL       __aeabi_idivmod
   \   00000040   8A49               LDR      R1,??ThermostatChartSet_Event_0+0x10  ;; MenuLevel
   \   00000042   0860               STR      R0,[R1, #+0]
   9231                    MenuPaint();
   \   00000044   ........           BL       MenuPaint
   \   00000048   03E1               B        ??ThermostatChartSet_Event_2
   9232                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??ThermostatChartSet_Event_1:
   \   0000004A   8448               LDR      R0,??ThermostatChartSet_Event_0  ;; Y_down
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   7028               CMP      R0,#+112
   \   00000052   05DB               BLT      ??ThermostatChartSet_Event_3
   \   00000054   8348               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   405E               LDRSH    R0,[R0, R1]
   \   0000005A   7028               CMP      R0,#+112
   \   0000005C   00DB               BLT      .+4
   \   0000005E   F8E0               B        ??ThermostatChartSet_Event_2
   9233                  {  
   9234                     char Ychart=44;
   \                     ??ThermostatChartSet_Event_3:
   \   00000060   2C26               MOVS     R6,#+44
   9235                    
   9236                     if (Button("<",4,Ychart-32,17,18)==1) if (ThermHourModyfi>0) {ThermHourModyfi--; Repaint=1; ProgramChange=1;}
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   1220               MOVS     R0,#+18
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   1123               MOVS     R3,#+17
   \   0000006A   3200               MOVS     R2,R6
   \   0000006C   203A               SUBS     R2,R2,#+32
   \   0000006E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0421               MOVS     R1,#+4
   \   00000074   7EA0               ADR      R0,??ThermostatChartSet_Event_0+0x14  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000076   ........           BL       Button
   \   0000007A   02B0               ADD      SP,SP,#+8
   \   0000007C   0128               CMP      R0,#+1
   \   0000007E   0CD1               BNE      ??ThermostatChartSet_Event_4
   \   00000080   7C48               LDR      R0,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   00000082   0078               LDRB     R0,[R0, #+0]
   \   00000084   0128               CMP      R0,#+1
   \   00000086   08D3               BCC      ??ThermostatChartSet_Event_4
   \   00000088   7A48               LDR      R0,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   0000008A   7A49               LDR      R1,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   0000008C   0978               LDRB     R1,[R1, #+0]
   \   0000008E   491E               SUBS     R1,R1,#+1
   \   00000090   0170               STRB     R1,[R0, #+0]
   \   00000092   0127               MOVS     R7,#+1
   \   00000094   7848               LDR      R0,??ThermostatChartSet_Event_0+0x1C  ;; ProgramChange
   \   00000096   0121               MOVS     R1,#+1
   \   00000098   0170               STRB     R1,[R0, #+0]
   9237                     char txt[2]; txt[1]=0; 
   \                     ??ThermostatChartSet_Event_4:
   \   0000009A   6846               MOV      R0,SP
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   4170               STRB     R1,[R0, #+1]
   9238                      if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   000000A0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \   000000A4   0420               MOVS     R0,#+4
   \   000000A6   6843               MULS     R0,R5,R0
   \   000000A8   2018               ADDS     R0,R4,R0
   \   000000AA   9830               ADDS     R0,R0,#+152
   \   000000AC   0068               LDR      R0,[R0, #+0]
   \   000000AE   7149               LDR      R1,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   000000B0   0978               LDRB     R1,[R1, #+0]
   \   000000B2   C840               LSRS     R0,R0,R1
   \   000000B4   C007               LSLS     R0,R0,#+31
   \   000000B6   03D5               BPL      ??ThermostatChartSet_Event_5
   \   000000B8   6846               MOV      R0,SP
   \   000000BA   1F21               MOVS     R1,#+31
   \   000000BC   0170               STRB     R1,[R0, #+0]
   \   000000BE   02E0               B        ??ThermostatChartSet_Event_6
   \                     ??ThermostatChartSet_Event_5:
   \   000000C0   6846               MOV      R0,SP
   \   000000C2   1E21               MOVS     R1,#+30
   \   000000C4   0170               STRB     R1,[R0, #+0]
   9239                     if (Button(txt,23,Ychart-32,17,18)==1) 
   \                     ??ThermostatChartSet_Event_6:
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   1220               MOVS     R0,#+18
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   1123               MOVS     R3,#+17
   \   000000CE   3200               MOVS     R2,R6
   \   000000D0   203A               SUBS     R2,R2,#+32
   \   000000D2   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000D4   120E               LSRS     R2,R2,#+24
   \   000000D6   1721               MOVS     R1,#+23
   \   000000D8   02A8               ADD      R0,SP,#+8
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   37D1               BNE      ??ThermostatChartSet_Event_7
   9240                     {
   9241                        if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1)
   \   000000E4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E6   2D0E               LSRS     R5,R5,#+24
   \   000000E8   0420               MOVS     R0,#+4
   \   000000EA   6843               MULS     R0,R5,R0
   \   000000EC   2018               ADDS     R0,R4,R0
   \   000000EE   9830               ADDS     R0,R0,#+152
   \   000000F0   0068               LDR      R0,[R0, #+0]
   \   000000F2   6049               LDR      R1,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   000000F4   0978               LDRB     R1,[R1, #+0]
   \   000000F6   C840               LSRS     R0,R0,R1
   \   000000F8   C007               LSLS     R0,R0,#+31
   \   000000FA   14D5               BPL      ??ThermostatChartSet_Event_8
   9242                        {
   9243                          Screen->Thermo.Chart[Chart] &= ~(1<<ThermHourModyfi);
   \   000000FC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000FE   2D0E               LSRS     R5,R5,#+24
   \   00000100   0420               MOVS     R0,#+4
   \   00000102   6843               MULS     R0,R5,R0
   \   00000104   2018               ADDS     R0,R4,R0
   \   00000106   9830               ADDS     R0,R0,#+152
   \   00000108   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000010A   2D0E               LSRS     R5,R5,#+24
   \   0000010C   0421               MOVS     R1,#+4
   \   0000010E   4D43               MULS     R5,R1,R5
   \   00000110   6119               ADDS     R1,R4,R5
   \   00000112   9831               ADDS     R1,R1,#+152
   \   00000114   0968               LDR      R1,[R1, #+0]
   \   00000116   0122               MOVS     R2,#+1
   \   00000118   564B               LDR      R3,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   0000011A   1B78               LDRB     R3,[R3, #+0]
   \   0000011C   9A40               LSLS     R2,R2,R3
   \   0000011E   9143               BICS     R1,R1,R2
   \   00000120   0160               STR      R1,[R0, #+0]
   9244                          Repaint=1;
   \   00000122   0127               MOVS     R7,#+1
   \   00000124   13E0               B        ??ThermostatChartSet_Event_9
   9245                        }else{
   9246                          Screen->Thermo.Chart[Chart] |=  (1<<ThermHourModyfi);
   \                     ??ThermostatChartSet_Event_8:
   \   00000126   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000128   2D0E               LSRS     R5,R5,#+24
   \   0000012A   0420               MOVS     R0,#+4
   \   0000012C   6843               MULS     R0,R5,R0
   \   0000012E   2018               ADDS     R0,R4,R0
   \   00000130   9830               ADDS     R0,R0,#+152
   \   00000132   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000134   2D0E               LSRS     R5,R5,#+24
   \   00000136   0421               MOVS     R1,#+4
   \   00000138   4D43               MULS     R5,R1,R5
   \   0000013A   6119               ADDS     R1,R4,R5
   \   0000013C   9831               ADDS     R1,R1,#+152
   \   0000013E   0968               LDR      R1,[R1, #+0]
   \   00000140   0122               MOVS     R2,#+1
   \   00000142   4C4B               LDR      R3,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   00000144   1B78               LDRB     R3,[R3, #+0]
   \   00000146   9A40               LSLS     R2,R2,R3
   \   00000148   0A43               ORRS     R2,R2,R1
   \   0000014A   0260               STR      R2,[R0, #+0]
   9247                          Repaint=1;
   \   0000014C   0127               MOVS     R7,#+1
   9248                        }
   9249                        ProgramChange=1;
   \                     ??ThermostatChartSet_Event_9:
   \   0000014E   4A48               LDR      R0,??ThermostatChartSet_Event_0+0x1C  ;; ProgramChange
   \   00000150   0121               MOVS     R1,#+1
   \   00000152   0170               STRB     R1,[R0, #+0]
   9250                     }
   9251                     if (Button(">",42,Ychart-32,17,18)==1) {if (ThermHourModyfi<23) ThermHourModyfi++; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_7:
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   1220               MOVS     R0,#+18
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   1123               MOVS     R3,#+17
   \   0000015C   203E               SUBS     R6,R6,#+32
   \   0000015E   3200               MOVS     R2,R6
   \   00000160   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000162   120E               LSRS     R2,R2,#+24
   \   00000164   2A21               MOVS     R1,#+42
   \   00000166   45A0               ADR      R0,??ThermostatChartSet_Event_0+0x20  ;; 0x3E, 0x00, 0x00, 0x00
   \   00000168   ........           BL       Button
   \   0000016C   02B0               ADD      SP,SP,#+8
   \   0000016E   0128               CMP      R0,#+1
   \   00000170   0CD1               BNE      ??ThermostatChartSet_Event_10
   \   00000172   4048               LDR      R0,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   00000174   0078               LDRB     R0,[R0, #+0]
   \   00000176   1728               CMP      R0,#+23
   \   00000178   04D2               BCS      ??ThermostatChartSet_Event_11
   \   0000017A   3E48               LDR      R0,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   0000017C   3D49               LDR      R1,??ThermostatChartSet_Event_0+0x18  ;; ThermHourModyfi
   \   0000017E   0978               LDRB     R1,[R1, #+0]
   \   00000180   491C               ADDS     R1,R1,#+1
   \   00000182   0170               STRB     R1,[R0, #+0]
   \                     ??ThermostatChartSet_Event_11:
   \   00000184   0127               MOVS     R7,#+1
   \   00000186   3C48               LDR      R0,??ThermostatChartSet_Event_0+0x1C  ;; ProgramChange
   \   00000188   0121               MOVS     R1,#+1
   \   0000018A   0170               STRB     R1,[R0, #+0]
   9252                
   9253                
   9254                      char day;
   9255                      day=0;
   \                     ??ThermostatChartSet_Event_10:
   \   0000018C   0022               MOVS     R2,#+0
   9256                      for (char row=0; row<3; row++)
   \   0000018E   0020               MOVS     R0,#+0
   \   00000190   00E0               B        ??ThermostatChartSet_Event_12
   \                     ??ThermostatChartSet_Event_13:
   \   00000192   401C               ADDS     R0,R0,#+1
   \                     ??ThermostatChartSet_Event_12:
   \   00000194   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000196   000E               LSRS     R0,R0,#+24
   \   00000198   0328               CMP      R0,#+3
   \   0000019A   54D2               BCS      ??ThermostatChartSet_Event_14
   9257                      for (char col=0; col<3; col++)
   \   0000019C   0021               MOVS     R1,#+0
   \   0000019E   0CE0               B        ??ThermostatChartSet_Event_15
   9258                      { 
   9259                        if (++day<8)
   9260                        {
   9261                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   9262                            {
   9263                              if ((Screen->Thermo.Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   9264                              {
   9265                                 Screen->Thermo.Week &= ~(1<<(day-1));
   9266                              }else{
   9267                                Screen->Thermo.Week |= (1<<(day-1));
   \                     ??ThermostatChartSet_Event_16:
   \   000001A0   9123               MOVS     R3,#+145
   \   000001A2   9125               MOVS     R5,#+145
   \   000001A4   655D               LDRB     R5,[R4, R5]
   \   000001A6   0126               MOVS     R6,#+1
   \   000001A8   571E               SUBS     R7,R2,#+1
   \   000001AA   BE40               LSLS     R6,R6,R7
   \   000001AC   2E43               ORRS     R6,R6,R5
   \   000001AE   E654               STRB     R6,[R4, R3]
   9268                              }
   9269                              Repaint=1;
   \                     ??ThermostatChartSet_Event_17:
   \   000001B0   0127               MOVS     R7,#+1
   9270                              ProgramChange=1;
   \   000001B2   314B               LDR      R3,??ThermostatChartSet_Event_0+0x1C  ;; ProgramChange
   \   000001B4   0125               MOVS     R5,#+1
   \   000001B6   1D70               STRB     R5,[R3, #+0]
   \                     ??ThermostatChartSet_Event_18:
   \   000001B8   491C               ADDS     R1,R1,#+1
   \                     ??ThermostatChartSet_Event_15:
   \   000001BA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001BC   090E               LSRS     R1,R1,#+24
   \   000001BE   0329               CMP      R1,#+3
   \   000001C0   E7D2               BCS      ??ThermostatChartSet_Event_13
   \   000001C2   521C               ADDS     R2,R2,#+1
   \   000001C4   1300               MOVS     R3,R2
   \   000001C6   1A00               MOVS     R2,R3
   \   000001C8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000001CA   1B0E               LSRS     R3,R3,#+24
   \   000001CC   082B               CMP      R3,#+8
   \   000001CE   F3D2               BCS      ??ThermostatChartSet_Event_18
   \   000001D0   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001D2   090E               LSRS     R1,R1,#+24
   \   000001D4   1223               MOVS     R3,#+18
   \   000001D6   4B43               MULS     R3,R1,R3
   \   000001D8   1B1D               ADDS     R3,R3,#+4
   \   000001DA   234D               LDR      R5,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   000001DC   0026               MOVS     R6,#+0
   \   000001DE   AD5F               LDRSH    R5,[R5, R6]
   \   000001E0   AB42               CMP      R3,R5
   \   000001E2   E9DA               BGE      ??ThermostatChartSet_Event_18
   \   000001E4   204B               LDR      R3,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   000001E6   0025               MOVS     R5,#+0
   \   000001E8   5B5F               LDRSH    R3,[R3, R5]
   \   000001EA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000001EC   090E               LSRS     R1,R1,#+24
   \   000001EE   1225               MOVS     R5,#+18
   \   000001F0   4D43               MULS     R5,R1,R5
   \   000001F2   1635               ADDS     R5,R5,#+22
   \   000001F4   AB42               CMP      R3,R5
   \   000001F6   DFDA               BGE      ??ThermostatChartSet_Event_18
   \   000001F8   1A4B               LDR      R3,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   000001FA   0025               MOVS     R5,#+0
   \   000001FC   5B5F               LDRSH    R3,[R3, R5]
   \   000001FE   6925               MOVS     R5,#+105
   \   00000200   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000202   000E               LSRS     R0,R0,#+24
   \   00000204   0E26               MOVS     R6,#+14
   \   00000206   4643               MULS     R6,R0,R6
   \   00000208   AD1B               SUBS     R5,R5,R6
   \   0000020A   AB42               CMP      R3,R5
   \   0000020C   D4DA               BGE      ??ThermostatChartSet_Event_18
   \   0000020E   6923               MOVS     R3,#+105
   \   00000210   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000212   000E               LSRS     R0,R0,#+24
   \   00000214   0500               MOVS     R5,R0
   \   00000216   6D1C               ADDS     R5,R5,#+1
   \   00000218   0E26               MOVS     R6,#+14
   \   0000021A   7543               MULS     R5,R6,R5
   \   0000021C   5B1B               SUBS     R3,R3,R5
   \   0000021E   114D               LDR      R5,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   00000220   0026               MOVS     R6,#+0
   \   00000222   AD5F               LDRSH    R5,[R5, R6]
   \   00000224   AB42               CMP      R3,R5
   \   00000226   C7DA               BGE      ??ThermostatChartSet_Event_18
   \   00000228   9123               MOVS     R3,#+145
   \   0000022A   E35C               LDRB     R3,[R4, R3]
   \   0000022C   551E               SUBS     R5,R2,#+1
   \   0000022E   2B41               ASRS     R3,R3,R5
   \   00000230   DB07               LSLS     R3,R3,#+31
   \   00000232   B5D5               BPL      ??ThermostatChartSet_Event_16
   \   00000234   9123               MOVS     R3,#+145
   \   00000236   9125               MOVS     R5,#+145
   \   00000238   655D               LDRB     R5,[R4, R5]
   \   0000023A   0126               MOVS     R6,#+1
   \   0000023C   571E               SUBS     R7,R2,#+1
   \   0000023E   BE40               LSLS     R6,R6,R7
   \   00000240   B543               BICS     R5,R5,R6
   \   00000242   E554               STRB     R5,[R4, R3]
   \   00000244   B4E7               B        ??ThermostatChartSet_Event_17
   9271                            }
   9272          
   9273                        }
   9274                      }
   9275                     
   9276                     
   9277                     if (Repaint==1) MenuPaint();      
   \                     ??ThermostatChartSet_Event_14:
   \   00000246   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000248   3F0E               LSRS     R7,R7,#+24
   \   0000024A   012F               CMP      R7,#+1
   \   0000024C   01D1               BNE      ??ThermostatChartSet_Event_2
   \   0000024E   ........           BL       MenuPaint
   9278                    
   9279                  }
   9280          }//________________________________________________________________________
   \                     ??ThermostatChartSet_Event_2:
   \   00000252   01B0               ADD      SP,SP,#+4
   \   00000254   F0BC               POP      {R4-R7}
   \   00000256   01BC               POP      {R0}
   \   00000258   0047               BX       R0               ;; return
   \   0000025A   C046               Nop      
   \                     ??ThermostatChartSet_Event_0:
   \   0000025C   ........           DC32     Y_down
   \   00000260   ........           DC32     X_down
   \   00000264   ........           DC32     Y_up
   \   00000268   ........           DC32     X_up
   \   0000026C   ........           DC32     MenuLevel
   \   00000270   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   00000274   ........           DC32     ThermHourModyfi
   \   00000278   ........           DC32     ProgramChange
   \   0000027C   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   9281              
   9282                
   9283                

   \                                 In section Debug.txt, align 4, keep-with-next
   9284          void ThermostatChartSet_Refresh(_Screen* Screen, char Chart)
   9285          {          
   \                     ThermostatChartSet_Refresh:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9286             static char TCSR_Count;
   9287             char kolor=0;
   \   00000002   0023               MOVS     R3,#+0
   9288             char Ychart=44;
   \   00000004   2C24               MOVS     R4,#+44
   9289             if (TCSR_Count<3) TCSR_Count++; else TCSR_Count=0;
   \   00000006   2D4A               LDR      R2,??ThermostatChartSet_Refresh_0  ;; ??TCSR_Count
   \   00000008   1278               LDRB     R2,[R2, #+0]
   \   0000000A   032A               CMP      R2,#+3
   \   0000000C   05D2               BCS      ??ThermostatChartSet_Refresh_1
   \   0000000E   2B4A               LDR      R2,??ThermostatChartSet_Refresh_0  ;; ??TCSR_Count
   \   00000010   2A4D               LDR      R5,??ThermostatChartSet_Refresh_0  ;; ??TCSR_Count
   \   00000012   2D78               LDRB     R5,[R5, #+0]
   \   00000014   6D1C               ADDS     R5,R5,#+1
   \   00000016   1570               STRB     R5,[R2, #+0]
   \   00000018   02E0               B        ??ThermostatChartSet_Refresh_2
   \                     ??ThermostatChartSet_Refresh_1:
   \   0000001A   284A               LDR      R2,??ThermostatChartSet_Refresh_0  ;; ??TCSR_Count
   \   0000001C   0025               MOVS     R5,#+0
   \   0000001E   1570               STRB     R5,[R2, #+0]
   9290             if (TCSR_Count) kolor=1;
   \                     ??ThermostatChartSet_Refresh_2:
   \   00000020   264A               LDR      R2,??ThermostatChartSet_Refresh_0  ;; ??TCSR_Count
   \   00000022   1278               LDRB     R2,[R2, #+0]
   \   00000024   002A               CMP      R2,#+0
   \   00000026   00D0               BEQ      ??ThermostatChartSet_Refresh_3
   \   00000028   0123               MOVS     R3,#+1
   9291             V_line(8+(ThermHourModyfi*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1 )*3,kolor);  
   \                     ??ThermostatChartSet_Refresh_3:
   \   0000002A   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000002C   1B0E               LSRS     R3,R3,#+24
   \   0000002E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000030   090E               LSRS     R1,R1,#+24
   \   00000032   0422               MOVS     R2,#+4
   \   00000034   5143               MULS     R1,R2,R1
   \   00000036   4018               ADDS     R0,R0,R1
   \   00000038   9830               ADDS     R0,R0,#+152
   \   0000003A   0068               LDR      R0,[R0, #+0]
   \   0000003C   2049               LDR      R1,??ThermostatChartSet_Refresh_0+0x4  ;; ThermHourModyfi
   \   0000003E   0978               LDRB     R1,[R1, #+0]
   \   00000040   C840               LSRS     R0,R0,R1
   \   00000042   0122               MOVS     R2,#+1
   \   00000044   0240               ANDS     R2,R2,R0
   \   00000046   0320               MOVS     R0,#+3
   \   00000048   4243               MULS     R2,R0,R2
   \   0000004A   521D               ADDS     R2,R2,#+5
   \   0000004C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000004E   120E               LSRS     R2,R2,#+24
   \   00000050   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000052   240E               LSRS     R4,R4,#+24
   \   00000054   2100               MOVS     R1,R4
   \   00000056   1A48               LDR      R0,??ThermostatChartSet_Refresh_0+0x4  ;; ThermHourModyfi
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0225               MOVS     R5,#+2
   \   0000005C   6843               MULS     R0,R5,R0
   \   0000005E   0830               ADDS     R0,R0,#+8
   \   00000060   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000062   000E               LSRS     R0,R0,#+24
   \   00000064   ........           BL       V_line
   9292          
   9293             char txt[3]; txt[1]=0; txt[2]=0;
   \   00000068   6846               MOV      R0,SP
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   4170               STRB     R1,[R0, #+1]
   \   0000006E   6846               MOV      R0,SP
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   8170               STRB     R1,[R0, #+2]
   9294             CharToStr(ThermHourModyfi,txt,2);  //(char Value, char *Vstring, char ill) 
   \   00000074   0222               MOVS     R2,#+2
   \   00000076   6946               MOV      R1,SP
   \   00000078   1148               LDR      R0,??ThermostatChartSet_Refresh_0+0x4  ;; ThermHourModyfi
   \   0000007A   0078               LDRB     R0,[R0, #+0]
   \   0000007C   ........           BL       CharToStr
   9295             Label(txt,2,ThermHourModyfi*2+2,Ychart-10,2,12,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   8021               MOVS     R1,#+128
   \   00000088   0020               MOVS     R0,#+0
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   0C21               MOVS     R1,#+12
   \   0000008E   0220               MOVS     R0,#+2
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000094   240E               LSRS     R4,R4,#+24
   \   00000096   0A3C               SUBS     R4,R4,#+10
   \   00000098   2300               MOVS     R3,R4
   \   0000009A   0948               LDR      R0,??ThermostatChartSet_Refresh_0+0x4  ;; ThermHourModyfi
   \   0000009C   0278               LDRB     R2,[R0, #+0]
   \   0000009E   0220               MOVS     R0,#+2
   \   000000A0   4243               MULS     R2,R0,R2
   \   000000A2   921C               ADDS     R2,R2,#+2
   \   000000A4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000A6   120E               LSRS     R2,R2,#+24
   \   000000A8   0221               MOVS     R1,#+2
   \   000000AA   06A8               ADD      R0,SP,#+24
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   9296          
   9297                
   9298                 
   9299                
   9300          }//________________________________________________________________________
   \   000000B2   01B0               ADD      SP,SP,#+4
   \   000000B4   30BC               POP      {R4,R5}
   \   000000B6   01BC               POP      {R0}
   \   000000B8   0047               BX       R0               ;; return
   \   000000BA   C046               Nop      
   \                     ??ThermostatChartSet_Refresh_0:
   \   000000BC   ........           DC32     ??TCSR_Count
   \   000000C0   ........           DC32     ThermHourModyfi

   \                                 In section .bss, align 1
   \                     ??TCSR_Count:
   \   00000000                      DS8 1
   9301          
   9302          
   9303          
   9304          
   9305          
   9306          
   9307          
   9308          
   9309          //*-----------------------------------------------------------------------------
   9310          //* Nazwa funkcji :    Alarm_Paint
   9311          //* Funkcja strony g³ównej menu
   9312          //*-----------------------------------------------------------------------------
   9313          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   9314          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9315          void Alarm_Paint(char CurrentSheet)
   9316          {
   \                     Alarm_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9317            
   9318            
   9319          
   9320          
   9321              
   9322          
   9323                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \   00000002   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000004   000E               LSRS     R0,R0,#+24
   \   00000006   0221               MOVS     R1,#+2
   \   00000008   4143               MULS     R1,R0,R1
   \   0000000A   2A4A               LDR      R2,??Alarm_Paint_0  ;; AlarmScreenAction
   \   0000000C   515C               LDRB     R1,[R2, R1]
   \   0000000E   0029               CMP      R1,#+0
   \   00000010   4BD1               BNE      ??Alarm_Paint_1
   \   00000012   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000014   000E               LSRS     R0,R0,#+24
   \   00000016   0221               MOVS     R1,#+2
   \   00000018   4143               MULS     R1,R0,R1
   \   0000001A   264A               LDR      R2,??Alarm_Paint_0  ;; AlarmScreenAction
   \   0000001C   5118               ADDS     R1,R2,R1
   \   0000001E   4978               LDRB     R1,[R1, #+1]
   \   00000020   0029               CMP      R1,#+0
   \   00000022   42D1               BNE      ??Alarm_Paint_1
   9324                {
   9325                  if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000024   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000026   000E               LSRS     R0,R0,#+24
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   1CD0               BEQ      ??Alarm_Paint_2
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   1DA0               ADR      R0,??Alarm_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   0321               MOVS     R1,#+3
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   6C22               MOVS     R2,#+108
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   1A48               LDR      R0,??Alarm_Paint_0+0x8  ;; 0x744
   \   00000052   1B4C               LDR      R4,??Alarm_Paint_0+0xC  ;; g_leng
   \   00000054   2468               LDR      R4,[R4, #+0]
   \   00000056   1B4D               LDR      R5,??Alarm_Paint_0+0x10  ;; 0xa7d
   \   00000058   6C43               MULS     R4,R5,R4
   \   0000005A   1B4D               LDR      R5,??Alarm_Paint_0+0x14  ;; Speech
   \   0000005C   2C19               ADDS     R4,R5,R4
   \   0000005E   2018               ADDS     R0,R4,R0
   \   00000060   ........           BL       List_Paint
   \   00000064   0AB0               ADD      SP,SP,#+40
   9326                  Button(Speech[g_leng].WlOchrone,2,40,59,50);
   \                     ??Alarm_Paint_2:
   \   00000066   82B0               SUB      SP,SP,#+8
   \   00000068   3220               MOVS     R0,#+50
   \   0000006A   0090               STR      R0,[SP, #+0]
   \   0000006C   3B23               MOVS     R3,#+59
   \   0000006E   2822               MOVS     R2,#+40
   \   00000070   0221               MOVS     R1,#+2
   \   00000072   1648               LDR      R0,??Alarm_Paint_0+0x18  ;; 0x79e
   \   00000074   124C               LDR      R4,??Alarm_Paint_0+0xC  ;; g_leng
   \   00000076   2468               LDR      R4,[R4, #+0]
   \   00000078   124D               LDR      R5,??Alarm_Paint_0+0x10  ;; 0xa7d
   \   0000007A   6C43               MULS     R4,R5,R4
   \   0000007C   124D               LDR      R5,??Alarm_Paint_0+0x14  ;; Speech
   \   0000007E   2C19               ADDS     R4,R5,R4
   \   00000080   2018               ADDS     R0,R4,R0
   \   00000082   ........           BL       Button
   \   00000086   02B0               ADD      SP,SP,#+8
   9327                  Button(Speech[g_leng].ZmienHaslo,2,4,59,13);
   \   00000088   82B0               SUB      SP,SP,#+8
   \   0000008A   0D20               MOVS     R0,#+13
   \   0000008C   0090               STR      R0,[SP, #+0]
   \   0000008E   3B23               MOVS     R3,#+59
   \   00000090   0422               MOVS     R2,#+4
   \   00000092   0221               MOVS     R1,#+2
   \   00000094   0E48               LDR      R0,??Alarm_Paint_0+0x1C  ;; 0x7ad
   \   00000096   0A4C               LDR      R4,??Alarm_Paint_0+0xC  ;; g_leng
   \   00000098   2468               LDR      R4,[R4, #+0]
   \   0000009A   0A4D               LDR      R5,??Alarm_Paint_0+0x10  ;; 0xa7d
   \   0000009C   6C43               MULS     R4,R5,R4
   \   0000009E   0A4D               LDR      R5,??Alarm_Paint_0+0x14  ;; Speech
   \   000000A0   2C19               ADDS     R4,R5,R4
   \   000000A2   2018               ADDS     R0,R4,R0
   \   000000A4   ........           BL       Button
   \   000000A8   02B0               ADD      SP,SP,#+8
   9328                }
   9329            
   9330                if ((AlarmScreenAction[CurrentSheet].Active==1) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   9331                {
   9332                   
   9333                }
   9334          }//_______________________ Koniec funkcji Alarm_Paint __________________________
   \                     ??Alarm_Paint_1:
   \   000000AA   01B0               ADD      SP,SP,#+4
   \   000000AC   30BC               POP      {R4,R5}
   \   000000AE   01BC               POP      {R0}
   \   000000B0   0047               BX       R0               ;; return
   \   000000B2   C046               Nop      
   \                     ??Alarm_Paint_0:
   \   000000B4   ........           DC32     AlarmScreenAction
   \   000000B8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000BC   44070000           DC32     0x744
   \   000000C0   ........           DC32     g_leng
   \   000000C4   7D0A0000           DC32     0xa7d
   \   000000C8   ........           DC32     Speech
   \   000000CC   9E070000           DC32     0x79e
   \   000000D0   AD070000           DC32     0x7ad
   9335            
   9336          
   9337          
   9338          
   9339          //*-----------------------------------------------------------------------------
   9340          //* Nazwa funkcji :    Alarm_Event
   9341          //* Funkcja strony g³ównej menu
   9342          //*-----------------------------------------------------------------------------
   9343          //*-----------------------------------------------------------------------------
   9344          
   9345          

   \                                 In section Debug.txt, align 4, keep-with-next
   9346          void Alarm_Event(char CurrentSheet)
   9347          {
   \                     Alarm_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0500               MOVS     R5,R0
   9348            char Repaint=0;
   \   00000004   0024               MOVS     R4,#+0
   9349          
   9350          
   9351            
   9352            
   9353           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000008   2D0E               LSRS     R5,R5,#+24
   \   0000000A   012D               CMP      R5,#+1
   \   0000000C   27D3               BCC      ??Alarm_Event_0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0F21               MOVS     R1,#+15
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   3B48               LDR      R0,??Alarm_Event_1  ;; Y_down
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   435E               LDRSH    R3,[R0, R1]
   \   00000020   3A48               LDR      R0,??Alarm_Event_1+0x4  ;; X_down
   \   00000022   0021               MOVS     R1,#+0
   \   00000024   425E               LDRSH    R2,[R0, R1]
   \   00000026   3A48               LDR      R0,??Alarm_Event_1+0x8  ;; Y_up
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   415E               LDRSH    R1,[R0, R1]
   \   0000002C   3948               LDR      R0,??Alarm_Event_1+0xC  ;; X_up
   \   0000002E   0026               MOVS     R6,#+0
   \   00000030   805F               LDRSH    R0,[R0, R6]
   \   00000032   ........           BL       List_Event
   \   00000036   04B0               ADD      SP,SP,#+16
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   C943               MVNS     R1,R1            ;; #-1
   \   0000003C   8842               CMP      R0,R1
   \   0000003E   0ED1               BNE      ??Alarm_Event_0
   9354              {
   9355                 if (SheetHistoryIndex>0)
   \   00000040   3548               LDR      R0,??Alarm_Event_1+0x10  ;; SheetHistoryIndex
   \   00000042   0078               LDRB     R0,[R0, #+0]
   \   00000044   0128               CMP      R0,#+1
   \   00000046   08D3               BCC      ??Alarm_Event_2
   9356                    {
   9357                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   00000048   3348               LDR      R0,??Alarm_Event_1+0x10  ;; SheetHistoryIndex
   \   0000004A   0078               LDRB     R0,[R0, #+0]
   \   0000004C   401E               SUBS     R0,R0,#+1
   \   0000004E   3249               LDR      R1,??Alarm_Event_1+0x10  ;; SheetHistoryIndex
   \   00000050   0870               STRB     R0,[R1, #+0]
   \   00000052   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000054   000E               LSRS     R0,R0,#+24
   \   00000056   3149               LDR      R1,??Alarm_Event_1+0x14  ;; SheetHistory
   \   00000058   0D5C               LDRB     R5,[R1, R0]
   9358                    } 
   9359                   Repaint=1; 
   \                     ??Alarm_Event_2:
   \   0000005A   0124               MOVS     R4,#+1
   \   0000005C   4AE0               B        ??Alarm_Event_3
   9360              }else{
   9361          
   9362                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \                     ??Alarm_Event_0:
   \   0000005E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000060   2D0E               LSRS     R5,R5,#+24
   \   00000062   0220               MOVS     R0,#+2
   \   00000064   6843               MULS     R0,R5,R0
   \   00000066   2E49               LDR      R1,??Alarm_Event_1+0x18  ;; AlarmScreenAction
   \   00000068   085C               LDRB     R0,[R1, R0]
   \   0000006A   0028               CMP      R0,#+0
   \   0000006C   42D1               BNE      ??Alarm_Event_3
   \   0000006E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000070   2D0E               LSRS     R5,R5,#+24
   \   00000072   0220               MOVS     R0,#+2
   \   00000074   6843               MULS     R0,R5,R0
   \   00000076   2A49               LDR      R1,??Alarm_Event_1+0x18  ;; AlarmScreenAction
   \   00000078   0818               ADDS     R0,R1,R0
   \   0000007A   4078               LDRB     R0,[R0, #+1]
   \   0000007C   0028               CMP      R0,#+0
   \   0000007E   39D1               BNE      ??Alarm_Event_3
   9363                {
   9364                  if (Button(Speech[g_leng].WlOchrone,2,40,59,50)==1) {
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   3220               MOVS     R0,#+50
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   3B23               MOVS     R3,#+59
   \   00000088   2822               MOVS     R2,#+40
   \   0000008A   0221               MOVS     R1,#+2
   \   0000008C   2548               LDR      R0,??Alarm_Event_1+0x1C  ;; 0x79e
   \   0000008E   264E               LDR      R6,??Alarm_Event_1+0x20  ;; g_leng
   \   00000090   3668               LDR      R6,[R6, #+0]
   \   00000092   264F               LDR      R7,??Alarm_Event_1+0x24  ;; 0xa7d
   \   00000094   7E43               MULS     R6,R7,R6
   \   00000096   264F               LDR      R7,??Alarm_Event_1+0x28  ;; Speech
   \   00000098   BE19               ADDS     R6,R7,R6
   \   0000009A   3018               ADDS     R0,R6,R0
   \   0000009C   ........           BL       Button
   \   000000A0   02B0               ADD      SP,SP,#+8
   \   000000A2   0128               CMP      R0,#+1
   \   000000A4   0FD1               BNE      ??Alarm_Event_4
   9365                   AlarmScreenAction[CurrentSheet].SecToActive=AlarmTimeToActive;
   \   000000A6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000A8   2D0E               LSRS     R5,R5,#+24
   \   000000AA   0220               MOVS     R0,#+2
   \   000000AC   6843               MULS     R0,R5,R0
   \   000000AE   1C49               LDR      R1,??Alarm_Event_1+0x18  ;; AlarmScreenAction
   \   000000B0   0818               ADDS     R0,R1,R0
   \   000000B2   3C21               MOVS     R1,#+60
   \   000000B4   4170               STRB     R1,[R0, #+1]
   9366                   AlarmScreenAction[CurrentSheet].Active=0;
   \   000000B6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B8   2D0E               LSRS     R5,R5,#+24
   \   000000BA   0220               MOVS     R0,#+2
   \   000000BC   4543               MULS     R5,R0,R5
   \   000000BE   1848               LDR      R0,??Alarm_Event_1+0x18  ;; AlarmScreenAction
   \   000000C0   0021               MOVS     R1,#+0
   \   000000C2   4155               STRB     R1,[R0, R5]
   9367                   Repaint=1;
   \   000000C4   0124               MOVS     R4,#+1
   9368                  } 
   9369                   if (Button(Speech[g_leng].ZmienHaslo,2,4,59,13)==1)
   \                     ??Alarm_Event_4:
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0D20               MOVS     R0,#+13
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   3B23               MOVS     R3,#+59
   \   000000CE   0422               MOVS     R2,#+4
   \   000000D0   0221               MOVS     R1,#+2
   \   000000D2   1848               LDR      R0,??Alarm_Event_1+0x2C  ;; 0x7ad
   \   000000D4   144D               LDR      R5,??Alarm_Event_1+0x20  ;; g_leng
   \   000000D6   2D68               LDR      R5,[R5, #+0]
   \   000000D8   144E               LDR      R6,??Alarm_Event_1+0x24  ;; 0xa7d
   \   000000DA   7543               MULS     R5,R6,R5
   \   000000DC   144E               LDR      R6,??Alarm_Event_1+0x28  ;; Speech
   \   000000DE   7519               ADDS     R5,R6,R5
   \   000000E0   2818               ADDS     R0,R5,R0
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   \   000000E8   0128               CMP      R0,#+1
   \   000000EA   03D1               BNE      ??Alarm_Event_3
   9370                   {
   9371                      MenuLevel=15;
   \   000000EC   1248               LDR      R0,??Alarm_Event_1+0x30  ;; MenuLevel
   \   000000EE   0F21               MOVS     R1,#+15
   \   000000F0   0160               STR      R1,[R0, #+0]
   9372                      Repaint=1;
   \   000000F2   0124               MOVS     R4,#+1
   9373                   }
   9374                  
   9375                }
   9376                
   9377                      
   9378              }
   9379           
   9380           
   9381           
   9382            if (Repaint==1) MenuPaint();
   \                     ??Alarm_Event_3:
   \   000000F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F6   240E               LSRS     R4,R4,#+24
   \   000000F8   012C               CMP      R4,#+1
   \   000000FA   01D1               BNE      ??Alarm_Event_5
   \   000000FC   ........           BL       MenuPaint
   9383          }//_______________________ Koniec funkcji Alarm_Event __________________________
   \                     ??Alarm_Event_5:
   \   00000100   01B0               ADD      SP,SP,#+4
   \   00000102   F0BC               POP      {R4-R7}
   \   00000104   01BC               POP      {R0}
   \   00000106   0047               BX       R0               ;; return
   \                     ??Alarm_Event_1:
   \   00000108   ........           DC32     Y_down
   \   0000010C   ........           DC32     X_down
   \   00000110   ........           DC32     Y_up
   \   00000114   ........           DC32     X_up
   \   00000118   ........           DC32     SheetHistoryIndex
   \   0000011C   ........           DC32     SheetHistory
   \   00000120   ........           DC32     AlarmScreenAction
   \   00000124   9E070000           DC32     0x79e
   \   00000128   ........           DC32     g_leng
   \   0000012C   7D0A0000           DC32     0xa7d
   \   00000130   ........           DC32     Speech
   \   00000134   AD070000           DC32     0x7ad
   \   00000138   ........           DC32     MenuLevel
   9384            
   9385          
   9386          
   9387          
   9388          
   9389          
   9390          //*-----------------------------------------------------------------------------
   9391          //* Nazwa funkcji :    Alarm_Refresh
   9392          //* Funkcja strony g³ównej menu
   9393          //*-----------------------------------------------------------------------------
   9394          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9395          void Alarm_Refresh(char CurrentSheet)
   9396          {
   \                     Alarm_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   9397          
   9398            char dl;
   9399            char txt[5];
   9400            static int LastCount;
   9401          
   9402          
   9403            if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive>0) && (g_counter>LastCount+1000))
   \   00000004   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000006   240E               LSRS     R4,R4,#+24
   \   00000008   0220               MOVS     R0,#+2
   \   0000000A   6043               MULS     R0,R4,R0
   \   0000000C   3E49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   0000000E   085C               LDRB     R0,[R1, R0]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   74D1               BNE      ??Alarm_Refresh_1
   \   00000014   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000016   240E               LSRS     R4,R4,#+24
   \   00000018   0220               MOVS     R0,#+2
   \   0000001A   6043               MULS     R0,R4,R0
   \   0000001C   3A49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   0000001E   0818               ADDS     R0,R1,R0
   \   00000020   4078               LDRB     R0,[R0, #+1]
   \   00000022   0128               CMP      R0,#+1
   \   00000024   6BD3               BCC      ??Alarm_Refresh_1
   \   00000026   3948               LDR      R0,??Alarm_Refresh_0+0x4  ;; ??LastCount
   \   00000028   0068               LDR      R0,[R0, #+0]
   \   0000002A   FA21               MOVS     R1,#+250
   \   0000002C   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   0000002E   4218               ADDS     R2,R0,R1
   \   00000030   D317               ASRS     R3,R2,#+31
   \   00000032   3748               LDR      R0,??Alarm_Refresh_0+0x8  ;; g_counter
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   8B42               CMP      R3,R1
   \   00000038   61D8               BHI      ??Alarm_Refresh_1
   \   0000003A   01D3               BCC      ??Alarm_Refresh_2
   \   0000003C   8242               CMP      R2,R0
   \   0000003E   5ED2               BCS      ??Alarm_Refresh_1
   9404                {
   9405                  CleanCanvas(); 
   \                     ??Alarm_Refresh_2:
   \   00000040   ........           BL       CleanCanvas
   9406                  AlarmScreenAction[CurrentSheet].SecToActive--;
   \   00000044   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000046   240E               LSRS     R4,R4,#+24
   \   00000048   0220               MOVS     R0,#+2
   \   0000004A   6043               MULS     R0,R4,R0
   \   0000004C   2E49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   0000004E   0818               ADDS     R0,R1,R0
   \   00000050   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000052   240E               LSRS     R4,R4,#+24
   \   00000054   0221               MOVS     R1,#+2
   \   00000056   6143               MULS     R1,R4,R1
   \   00000058   2B4A               LDR      R2,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   0000005A   5118               ADDS     R1,R2,R1
   \   0000005C   4978               LDRB     R1,[R1, #+1]
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   4170               STRB     R1,[R0, #+1]
   9407                  Label(Speech[g_leng].AktywacjaZa,2,1,80,15,59,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   6921               MOVS     R1,#+105
   \   0000006A   0020               MOVS     R0,#+0
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   3B21               MOVS     R1,#+59
   \   00000070   0F20               MOVS     R0,#+15
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   5023               MOVS     R3,#+80
   \   00000076   0122               MOVS     R2,#+1
   \   00000078   0221               MOVS     R1,#+2
   \   0000007A   2648               LDR      R0,??Alarm_Refresh_0+0xC  ;; 0x7cb
   \   0000007C   264D               LDR      R5,??Alarm_Refresh_0+0x10  ;; g_leng
   \   0000007E   2D68               LDR      R5,[R5, #+0]
   \   00000080   264E               LDR      R6,??Alarm_Refresh_0+0x14  ;; 0xa7d
   \   00000082   7543               MULS     R5,R6,R5
   \   00000084   264E               LDR      R6,??Alarm_Refresh_0+0x18  ;; Speech
   \   00000086   7519               ADDS     R5,R6,R5
   \   00000088   2818               ADDS     R0,R5,R0
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   9408          
   9409                  
   9410                  LastCount=g_counter;
   \   00000090   1E4A               LDR      R2,??Alarm_Refresh_0+0x4  ;; ??LastCount
   \   00000092   1F48               LDR      R0,??Alarm_Refresh_0+0x8  ;; g_counter
   \   00000094   03C8               LDM      R0!,{R0,R1}
   \   00000096   1060               STR      R0,[R2, #+0]
   9411                  dl=CharToStr(AlarmScreenAction[CurrentSheet].SecToActive, txt,2);
   \   00000098   0222               MOVS     R2,#+2
   \   0000009A   6946               MOV      R1,SP
   \   0000009C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000009E   240E               LSRS     R4,R4,#+24
   \   000000A0   0220               MOVS     R0,#+2
   \   000000A2   6043               MULS     R0,R4,R0
   \   000000A4   184B               LDR      R3,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   000000A6   1818               ADDS     R0,R3,R0
   \   000000A8   4078               LDRB     R0,[R0, #+1]
   \   000000AA   ........           BL       CharToStr
   \   000000AE   0200               MOVS     R2,R0
   9412                  Label20(txt,2,0,45,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                         ^
Warning[Pe223]: function "Label20" declared implicitly
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   6921               MOVS     R1,#+105
   \   000000B8   0020               MOVS     R0,#+0
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   4021               MOVS     R1,#+64
   \   000000BE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000C0   120E               LSRS     R2,R2,#+24
   \   000000C2   1000               MOVS     R0,R2
   \   000000C4   03B4               PUSH     {R0,R1}
   \   000000C6   2D23               MOVS     R3,#+45
   \   000000C8   0022               MOVS     R2,#+0
   \   000000CA   0221               MOVS     R1,#+2
   \   000000CC   06A8               ADD      R0,SP,#+24
   \   000000CE   ........           BL       Label20
   \   000000D2   06B0               ADD      SP,SP,#+24
   9413          
   9414                  if (AlarmScreenAction[CurrentSheet].SecToActive==0)
   \   000000D4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D6   240E               LSRS     R4,R4,#+24
   \   000000D8   0220               MOVS     R0,#+2
   \   000000DA   6043               MULS     R0,R4,R0
   \   000000DC   0A49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   000000DE   0818               ADDS     R0,R1,R0
   \   000000E0   4078               LDRB     R0,[R0, #+1]
   \   000000E2   0028               CMP      R0,#+0
   \   000000E4   0BD1               BNE      ??Alarm_Refresh_1
   9415                  {
   9416                    MenuLevel=14;
   \   000000E6   0F48               LDR      R0,??Alarm_Refresh_0+0x1C  ;; MenuLevel
   \   000000E8   0E21               MOVS     R1,#+14
   \   000000EA   0160               STR      R1,[R0, #+0]
   9417                    AlarmScreenAction[CurrentSheet].Active=1;
   \   000000EC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000EE   240E               LSRS     R4,R4,#+24
   \   000000F0   0220               MOVS     R0,#+2
   \   000000F2   4443               MULS     R4,R0,R4
   \   000000F4   0448               LDR      R0,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   000000F6   0121               MOVS     R1,#+1
   \   000000F8   0155               STRB     R1,[R0, R4]
   9418                    MenuPaint(); 
   \   000000FA   ........           BL       MenuPaint
   9419                  }
   9420                }
   9421          
   9422          }//_______________________ Koniec funkcji Alarm_Refresh __________________________
   \                     ??Alarm_Refresh_1:
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   70BC               POP      {R4-R6}
   \   00000102   01BC               POP      {R0}
   \   00000104   0047               BX       R0               ;; return
   \   00000106   C046               Nop      
   \                     ??Alarm_Refresh_0:
   \   00000108   ........           DC32     AlarmScreenAction
   \   0000010C   ........           DC32     ??LastCount
   \   00000110   ........           DC32     g_counter
   \   00000114   CB070000           DC32     0x7cb
   \   00000118   ........           DC32     g_leng
   \   0000011C   7D0A0000           DC32     0xa7d
   \   00000120   ........           DC32     Speech
   \   00000124   ........           DC32     MenuLevel

   \                                 In section .bss, align 4
   \                     ??LastCount:
   \   00000000                      DS8 4
   9423            
   9424          
   9425          
   9426          
   9427          
   9428          
   9429          
   9430          
   9431          //*-----------------------------------------------------------------------------
   9432          //* Nazwa funkcji :    Alarm_Paint
   9433          //* Funkcja strony g³ównej menu
   9434          //*-----------------------------------------------------------------------------
   9435          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   9436          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9437          void AlarmPass_Paint(char CurrentSheet)
   9438          {
   \                     AlarmPass_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9439          
   9440                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   19A2               ADR      R2,??AlarmPass_Paint_0  ;; 0x45, 0x00, 0x00, 0x00
   \   00000004   19A1               ADR      R1,??AlarmPass_Paint_0+0x4  ;; 0x43, 0x00, 0x00, 0x00
   \   00000006   FF20               MOVS     R0,#+255
   \   00000008   9630               ADDS     R0,R0,#+150      ;; #+405
   \   0000000A   194B               LDR      R3,??AlarmPass_Paint_0+0x8  ;; g_leng
   \   0000000C   1B68               LDR      R3,[R3, #+0]
   \   0000000E   194C               LDR      R4,??AlarmPass_Paint_0+0xC  ;; 0xa7d
   \   00000010   6343               MULS     R3,R4,R3
   \   00000012   194C               LDR      R4,??AlarmPass_Paint_0+0x10  ;; Speech
   \   00000014   E318               ADDS     R3,R4,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   9441                    Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3A21               MOVS     R1,#+58
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   6623               MOVS     R3,#+102
   \   00000030   0322               MOVS     R2,#+3
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   FF20               MOVS     R0,#+255
   \   00000036   D230               ADDS     R0,R0,#+210      ;; #+465
   \   00000038   0D4C               LDR      R4,??AlarmPass_Paint_0+0x8  ;; g_leng
   \   0000003A   2468               LDR      R4,[R4, #+0]
   \   0000003C   0D4D               LDR      R5,??AlarmPass_Paint_0+0xC  ;; 0xa7d
   \   0000003E   6C43               MULS     R4,R5,R4
   \   00000040   0D4D               LDR      R5,??AlarmPass_Paint_0+0x10  ;; Speech
   \   00000042   2C19               ADDS     R4,R5,R4
   \   00000044   2018               ADDS     R0,R4,R0
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
   9442                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   0F23               MOVS     R3,#+15
   \   00000054   4022               MOVS     R2,#+64
   \   00000056   7121               MOVS     R1,#+113
   \   00000058   0020               MOVS     R0,#+0
   \   0000005A   ........           BL       CleanCanvasArea
   \   0000005E   02B0               ADD      SP,SP,#+8
   9443                
   9444          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000060   01B0               ADD      SP,SP,#+4
   \   00000062   30BC               POP      {R4,R5}
   \   00000064   01BC               POP      {R0}
   \   00000066   0047               BX       R0               ;; return
   \                     ??AlarmPass_Paint_0:
   \   00000068   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000006C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000070   ........           DC32     g_leng
   \   00000074   7D0A0000           DC32     0xa7d
   \   00000078   ........           DC32     Speech
   9445            
   9446          
   9447          
   9448          
   9449          //*-----------------------------------------------------------------------------
   9450          //* Nazwa funkcji :    AlarmPass_Event
   9451          //*-----------------------------------------------------------------------------
   9452          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9453          void AlarmPass_Event(char CurrentSheet)
   9454          {
   \                     AlarmPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   9455            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   9456          
   9457          
   9458             int ans;
   9459                  char roz=0;
   \   00000006   0027               MOVS     R7,#+0
   9460                    
   9461                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000008   8C48               LDR      R0,??AlarmPass_Event_0  ;; Y_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   435E               LDRSH    R3,[R0, R1]
   \   0000000E   8C48               LDR      R0,??AlarmPass_Event_0+0x4  ;; X_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   8B48               LDR      R0,??AlarmPass_Event_0+0x8  ;; Y_up
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   8B48               LDR      R0,??AlarmPass_Event_0+0xC  ;; X_up
   \   0000001C   0026               MOVS     R6,#+0
   \   0000001E   805F               LDRSH    R0,[R0, R6]
   \   00000020   ........           BL       Number_Event
   \   00000024   0600               MOVS     R6,R0
   9462            
   9463                  if (ans>0)          {
   \   00000026   012E               CMP      R6,#+1
   \   00000028   00DA               BGE      .+4
   \   0000002A   E8E0               B        ??AlarmPass_Event_1
   9464                      
   9465                      if (InsertPass1[4]<=3) 
   \   0000002C   8748               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   0000002E   0078               LDRB     R0,[R0, #+0]
   \   00000030   0428               CMP      R0,#+4
   \   00000032   18D2               BCS      ??AlarmPass_Event_2
   9466                      { 
   9467                          if ((ans<10) || (ans==11)) 
   \   00000034   0A2E               CMP      R6,#+10
   \   00000036   01DB               BLT      ??AlarmPass_Event_3
   \   00000038   0B2E               CMP      R6,#+11
   \   0000003A   14D1               BNE      ??AlarmPass_Event_2
   9468                          {
   9469                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPass_Event_3:
   \   0000003C   0A2E               CMP      R6,#+10
   \   0000003E   05DA               BGE      ??AlarmPass_Event_4
   \   00000040   8248               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   00000042   0078               LDRB     R0,[R0, #+0]
   \   00000044   8249               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   00000046   3200               MOVS     R2,R6
   \   00000048   3032               ADDS     R2,R2,#+48
   \   0000004A   0A54               STRB     R2,[R1, R0]
   9470                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPass_Event_4:
   \   0000004C   0B2E               CMP      R6,#+11
   \   0000004E   05D1               BNE      ??AlarmPass_Event_5
   \   00000050   7E48               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   7E49               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   00000056   3200               MOVS     R2,R6
   \   00000058   2532               ADDS     R2,R2,#+37
   \   0000005A   0A54               STRB     R2,[R1, R0]
   9471                            InsertPass1[4]++;
   \                     ??AlarmPass_Event_5:
   \   0000005C   7B48               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   0000005E   7B49               LDR      R1,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   00000060   0978               LDRB     R1,[R1, #+0]
   \   00000062   491C               ADDS     R1,R1,#+1
   \   00000064   0170               STRB     R1,[R0, #+0]
   9472                          }
   9473                          
   9474                      }
   9475                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPass_Event_2:
   \   00000066   0A2E               CMP      R6,#+10
   \   00000068   0DD1               BNE      ??AlarmPass_Event_6
   \   0000006A   7848               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   0000006C   0078               LDRB     R0,[R0, #+0]
   \   0000006E   0128               CMP      R0,#+1
   \   00000070   09D3               BCC      ??AlarmPass_Event_6
   \   00000072   7648               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   00000074   7549               LDR      R1,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   491E               SUBS     R1,R1,#+1
   \   0000007A   0170               STRB     R1,[R0, #+0]
   \   0000007C   7348               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   0000007E   0078               LDRB     R0,[R0, #+0]
   \   00000080   7349               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   00000082   0022               MOVS     R2,#+0
   \   00000084   0A54               STRB     R2,[R1, R0]
   9476                      
   9477                      
   9478                     char InsertPassVar=0;
   \                     ??AlarmPass_Event_6:
   \   00000086   0020               MOVS     R0,#+0
   9479                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   05E0               B        ??AlarmPass_Event_7
   \                     ??AlarmPass_Event_8:
   \   0000008C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000008E   090E               LSRS     R1,R1,#+24
   \   00000090   704A               LDR      R2,??AlarmPass_Event_0+0x18  ;; pass_tmp
   \   00000092   0023               MOVS     R3,#+0
   \   00000094   5354               STRB     R3,[R2, R1]
   \   00000096   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPass_Event_7:
   \   00000098   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000009A   090E               LSRS     R1,R1,#+24
   \   0000009C   0429               CMP      R1,#+4
   \   0000009E   F5D3               BCC      ??AlarmPass_Event_8
   9480                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPass_Event_9:
   \   000000A0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A2   000E               LSRS     R0,R0,#+24
   \   000000A4   6A49               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   000000A6   095C               LDRB     R1,[R1, R0]
   \   000000A8   0029               CMP      R1,#+0
   \   000000AA   0AD0               BEQ      ??AlarmPass_Event_10
   \   000000AC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AE   000E               LSRS     R0,R0,#+24
   \   000000B0   0428               CMP      R0,#+4
   \   000000B2   06D2               BCS      ??AlarmPass_Event_10
   9481                     {
   9482                       pass_tmp[InsertPassVar]=42; //42="*"
   \   000000B4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B6   000E               LSRS     R0,R0,#+24
   \   000000B8   6649               LDR      R1,??AlarmPass_Event_0+0x18  ;; pass_tmp
   \   000000BA   2A22               MOVS     R2,#+42
   \   000000BC   0A54               STRB     R2,[R1, R0]
   9483                       InsertPassVar++;
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   EEE7               B        ??AlarmPass_Event_9
   9484                     }
   9485          
   9486                      
   9487                      //Sprawdzenie has³a
   9488                      if (ans==12)
   \                     ??AlarmPass_Event_10:
   \   000000C2   0C2E               CMP      R6,#+12
   \   000000C4   00D0               BEQ      .+4
   \   000000C6   82E0               B        ??AlarmPass_Event_11
   9489                      {
   9490                        roz=0;
   \   000000C8   0027               MOVS     R7,#+0
   9491                        for (int i=0; i<=3; i++)
   \   000000CA   0020               MOVS     R0,#+0
   \   000000CC   40E0               B        ??AlarmPass_Event_12
   9492                        {
   9493                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \                     ??AlarmPass_Event_13:
   \   000000CE   6049               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   000000D0   095C               LDRB     R1,[R1, R0]
   \   000000D2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D4   240E               LSRS     R4,R4,#+24
   \   000000D6   0422               MOVS     R2,#+4
   \   000000D8   6243               MULS     R2,R4,R2
   \   000000DA   5F4B               LDR      R3,??AlarmPass_Event_0+0x1C  ;; 0x13d7ee
   \   000000DC   9A18               ADDS     R2,R3,R2
   \   000000DE   125C               LDRB     R2,[R2, R0]
   \   000000E0   9142               CMP      R1,R2
   \   000000E2   00D0               BEQ      ??AlarmPass_Event_14
   \   000000E4   0127               MOVS     R7,#+1
   9494                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   9495                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   9496                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   9497                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   9498                                (InsertPass1[0]=='0') && 
   9499                                  (InsertPass1[1]=='0') && 
   9500                                    (InsertPass1[2]=='0') && 
   9501                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPass_Event_14:
   \   000000E6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000E8   240E               LSRS     R4,R4,#+24
   \   000000EA   0421               MOVS     R1,#+4
   \   000000EC   6143               MULS     R1,R4,R1
   \   000000EE   5A4A               LDR      R2,??AlarmPass_Event_0+0x1C  ;; 0x13d7ee
   \   000000F0   515C               LDRB     R1,[R2, R1]
   \   000000F2   0029               CMP      R1,#+0
   \   000000F4   2BD1               BNE      ??AlarmPass_Event_15
   \   000000F6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F8   240E               LSRS     R4,R4,#+24
   \   000000FA   0421               MOVS     R1,#+4
   \   000000FC   6143               MULS     R1,R4,R1
   \   000000FE   564A               LDR      R2,??AlarmPass_Event_0+0x1C  ;; 0x13d7ee
   \   00000100   5118               ADDS     R1,R2,R1
   \   00000102   4978               LDRB     R1,[R1, #+1]
   \   00000104   0029               CMP      R1,#+0
   \   00000106   22D1               BNE      ??AlarmPass_Event_15
   \   00000108   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000010A   240E               LSRS     R4,R4,#+24
   \   0000010C   0421               MOVS     R1,#+4
   \   0000010E   6143               MULS     R1,R4,R1
   \   00000110   514A               LDR      R2,??AlarmPass_Event_0+0x1C  ;; 0x13d7ee
   \   00000112   5118               ADDS     R1,R2,R1
   \   00000114   8978               LDRB     R1,[R1, #+2]
   \   00000116   0029               CMP      R1,#+0
   \   00000118   19D1               BNE      ??AlarmPass_Event_15
   \   0000011A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000011C   240E               LSRS     R4,R4,#+24
   \   0000011E   0421               MOVS     R1,#+4
   \   00000120   6143               MULS     R1,R4,R1
   \   00000122   4D4A               LDR      R2,??AlarmPass_Event_0+0x1C  ;; 0x13d7ee
   \   00000124   5118               ADDS     R1,R2,R1
   \   00000126   C978               LDRB     R1,[R1, #+3]
   \   00000128   0029               CMP      R1,#+0
   \   0000012A   10D1               BNE      ??AlarmPass_Event_15
   \   0000012C   4849               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   0000012E   0978               LDRB     R1,[R1, #+0]
   \   00000130   3029               CMP      R1,#+48
   \   00000132   0CD1               BNE      ??AlarmPass_Event_15
   \   00000134   4949               LDR      R1,??AlarmPass_Event_0+0x20  ;; InsertPass1 + 1
   \   00000136   0978               LDRB     R1,[R1, #+0]
   \   00000138   3029               CMP      R1,#+48
   \   0000013A   08D1               BNE      ??AlarmPass_Event_15
   \   0000013C   4849               LDR      R1,??AlarmPass_Event_0+0x24  ;; InsertPass1 + 2
   \   0000013E   0978               LDRB     R1,[R1, #+0]
   \   00000140   3029               CMP      R1,#+48
   \   00000142   04D1               BNE      ??AlarmPass_Event_15
   \   00000144   4749               LDR      R1,??AlarmPass_Event_0+0x28  ;; InsertPass1 + 3
   \   00000146   0978               LDRB     R1,[R1, #+0]
   \   00000148   3029               CMP      R1,#+48
   \   0000014A   00D1               BNE      ??AlarmPass_Event_15
   9502                                {
   9503                                  roz=0;
   \   0000014C   0027               MOVS     R7,#+0
   9504                                }
   9505                        }
   \                     ??AlarmPass_Event_15:
   \   0000014E   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_12:
   \   00000150   0428               CMP      R0,#+4
   \   00000152   BCDB               BLT      ??AlarmPass_Event_13
   9506                        
   9507                        if (roz==0)                                 //je¿eli poprawne haslo
   \   00000154   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000156   3F0E               LSRS     R7,R7,#+24
   \   00000158   002F               CMP      R7,#+0
   \   0000015A   23D1               BNE      ??AlarmPass_Event_16
   9508                        {
   9509                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   03E0               B        ??AlarmPass_Event_17
   \                     ??AlarmPass_Event_18:
   \   00000160   3B49               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   00000162   0022               MOVS     R2,#+0
   \   00000164   0A54               STRB     R2,[R1, R0]
   \   00000166   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_17:
   \   00000168   0428               CMP      R0,#+4
   \   0000016A   F9DB               BLT      ??AlarmPass_Event_18
   9510                           InsertPass1[4]=0;
   \   0000016C   3748               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   0170               STRB     R1,[R0, #+0]
   9511                           MESSAGE(Speech[g_leng].OchronaWyl); 
   \   00000172   FF20               MOVS     R0,#+255
   \   00000174   C000               LSLS     R0,R0,#+3        ;; #+2040
   \   00000176   3C49               LDR      R1,??AlarmPass_Event_0+0x2C  ;; g_leng
   \   00000178   0968               LDR      R1,[R1, #+0]
   \   0000017A   3C4A               LDR      R2,??AlarmPass_Event_0+0x30  ;; 0xa7d
   \   0000017C   5143               MULS     R1,R2,R1
   \   0000017E   3C4A               LDR      R2,??AlarmPass_Event_0+0x34  ;; Speech
   \   00000180   5118               ADDS     R1,R2,R1
   \   00000182   0818               ADDS     R0,R1,R0
   \   00000184   ........           BL       MESSAGE
   9512                           AlarmScreenAction[CurrentSheet].Active=0;
   \   00000188   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000018A   240E               LSRS     R4,R4,#+24
   \   0000018C   0220               MOVS     R0,#+2
   \   0000018E   4443               MULS     R4,R0,R4
   \   00000190   3848               LDR      R0,??AlarmPass_Event_0+0x38  ;; AlarmScreenAction
   \   00000192   0021               MOVS     R1,#+0
   \   00000194   0155               STRB     R1,[R0, R4]
   9513                           AlarmOn=0; 
   \   00000196   3848               LDR      R0,??AlarmPass_Event_0+0x3C  ;; AlarmOn
   \   00000198   0021               MOVS     R1,#+0
   \   0000019A   0170               STRB     R1,[R0, #+0]
   9514                           MenuLevel=1;
   \   0000019C   3748               LDR      R0,??AlarmPass_Event_0+0x40  ;; MenuLevel
   \   0000019E   0121               MOVS     R1,#+1
   \   000001A0   0160               STR      R1,[R0, #+0]
   \   000001A2   14E0               B        ??AlarmPass_Event_11
   9515                        } 
   9516                        else
   9517                        {
   9518                           //informacja o b³ednym hale
   9519                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPass_Event_16:
   \   000001A4   0020               MOVS     R0,#+0
   \   000001A6   03E0               B        ??AlarmPass_Event_19
   \                     ??AlarmPass_Event_20:
   \   000001A8   2949               LDR      R1,??AlarmPass_Event_0+0x14  ;; InsertPass1
   \   000001AA   0022               MOVS     R2,#+0
   \   000001AC   0A54               STRB     R2,[R1, R0]
   \   000001AE   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_19:
   \   000001B0   0828               CMP      R0,#+8
   \   000001B2   F9DB               BLT      ??AlarmPass_Event_20
   9520                           InsertPass1[4]=0;
   \   000001B4   2548               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   000001B6   0021               MOVS     R1,#+0
   \   000001B8   0170               STRB     R1,[R0, #+0]
   9521                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   000001BA   3148               LDR      R0,??AlarmPass_Event_0+0x44  ;; 0x7e9
   \   000001BC   2A49               LDR      R1,??AlarmPass_Event_0+0x2C  ;; g_leng
   \   000001BE   0968               LDR      R1,[R1, #+0]
   \   000001C0   2A4A               LDR      R2,??AlarmPass_Event_0+0x30  ;; 0xa7d
   \   000001C2   5143               MULS     R1,R2,R1
   \   000001C4   2A4A               LDR      R2,??AlarmPass_Event_0+0x34  ;; Speech
   \   000001C6   5118               ADDS     R1,R2,R1
   \   000001C8   0818               ADDS     R0,R1,R0
   \   000001CA   ........           BL       MESSAGE
   9522                        }
   9523          
   9524                      }
   9525                     
   9526                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPass_Event_11:
   \   000001CE   012E               CMP      R6,#+1
   \   000001D0   2ADB               BLT      ??AlarmPass_Event_21
   \   000001D2   0C2E               CMP      R6,#+12
   \   000001D4   28DA               BGE      ??AlarmPass_Event_21
   9527                      {
   9528                        MenuPaint();
   \   000001D6   ........           BL       MenuPaint
   9529                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0020               MOVS     R0,#+0
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   7F21               MOVS     R1,#+127
   \   000001E2   0020               MOVS     R0,#+0
   \   000001E4   03B4               PUSH     {R0,R1}
   \   000001E6   3721               MOVS     R1,#+55
   \   000001E8   1848               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   000001EA   0078               LDRB     R0,[R0, #+0]
   \   000001EC   03B4               PUSH     {R0,R1}
   \   000001EE   5A23               MOVS     R3,#+90
   \   000001F0   0422               MOVS     R2,#+4
   \   000001F2   0221               MOVS     R1,#+2
   \   000001F4   1748               LDR      R0,??AlarmPass_Event_0+0x18  ;; pass_tmp
   \   000001F6   ........           BL       Label
   \   000001FA   06B0               ADD      SP,SP,#+24
   \   000001FC   14E0               B        ??AlarmPass_Event_21
   9530                      }
   9531                      
   9532                    }  
   9533                    else if (ans==0) 
   \                     ??AlarmPass_Event_1:
   \   000001FE   002E               CMP      R6,#+0
   \   00000200   12D1               BNE      ??AlarmPass_Event_21
   9534                      {
   9535                        MenuPaint();
   \   00000202   ........           BL       MenuPaint
   9536                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000206   82B0               SUB      SP,SP,#+8
   \   00000208   0020               MOVS     R0,#+0
   \   0000020A   0090               STR      R0,[SP, #+0]
   \   0000020C   7F21               MOVS     R1,#+127
   \   0000020E   0020               MOVS     R0,#+0
   \   00000210   03B4               PUSH     {R0,R1}
   \   00000212   3721               MOVS     R1,#+55
   \   00000214   0D48               LDR      R0,??AlarmPass_Event_0+0x10  ;; InsertPass1 + 4
   \   00000216   0078               LDRB     R0,[R0, #+0]
   \   00000218   03B4               PUSH     {R0,R1}
   \   0000021A   5A23               MOVS     R3,#+90
   \   0000021C   0422               MOVS     R2,#+4
   \   0000021E   0221               MOVS     R1,#+2
   \   00000220   0C48               LDR      R0,??AlarmPass_Event_0+0x18  ;; pass_tmp
   \   00000222   ........           BL       Label
   \   00000226   06B0               ADD      SP,SP,#+24
   9537                      } 
   9538             
   9539           
   9540            if (Repaint==1) MenuPaint();
   \                     ??AlarmPass_Event_21:
   \   00000228   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000022A   2D0E               LSRS     R5,R5,#+24
   \   0000022C   012D               CMP      R5,#+1
   \   0000022E   01D1               BNE      ??AlarmPass_Event_22
   \   00000230   ........           BL       MenuPaint
   9541          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPass_Event_22:
   \   00000234   01B0               ADD      SP,SP,#+4
   \   00000236   F0BC               POP      {R4-R7}
   \   00000238   01BC               POP      {R0}
   \   0000023A   0047               BX       R0               ;; return
   \                     ??AlarmPass_Event_0:
   \   0000023C   ........           DC32     Y_down
   \   00000240   ........           DC32     X_down
   \   00000244   ........           DC32     Y_up
   \   00000248   ........           DC32     X_up
   \   0000024C   ........           DC32     InsertPass1 + 4
   \   00000250   ........           DC32     InsertPass1
   \   00000254   ........           DC32     pass_tmp
   \   00000258   EED71300           DC32     0x13d7ee
   \   0000025C   ........           DC32     InsertPass1 + 1
   \   00000260   ........           DC32     InsertPass1 + 2
   \   00000264   ........           DC32     InsertPass1 + 3
   \   00000268   ........           DC32     g_leng
   \   0000026C   7D0A0000           DC32     0xa7d
   \   00000270   ........           DC32     Speech
   \   00000274   ........           DC32     AlarmScreenAction
   \   00000278   ........           DC32     AlarmOn
   \   0000027C   ........           DC32     MenuLevel
   \   00000280   E9070000           DC32     0x7e9
   9542            
   9543          
   9544          
   9545          
   9546          
   9547          
   9548          

   \                                 In section Debug.txt, align 4, keep-with-next
   9549          void AlarmPass_Refresh(void)
   9550          {
   \                     AlarmPass_Refresh:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   8FB0               SUB      SP,SP,#+60
   9551           
   9552                   //wskanik ¿ycia
   9553                    if (CurrentSheet==0) 
   \   00000004   4B48               LDR      R0,??AlarmPass_Refresh_0  ;; CurrentSheet
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   00D0               BEQ      .+4
   \   0000000C   8FE0               B        ??AlarmPass_Refresh_1
   9554                    {
   9555                    
   9556                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   0000000E   4A48               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   00000010   0078               LDRB     R0,[R0, #+0]
   \   00000012   0028               CMP      R0,#+0
   \   00000014   03D0               BEQ      ??AlarmPass_Refresh_2
   \   00000016   4848               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   0428               CMP      R0,#+4
   \   0000001C   45D3               BCC      ??AlarmPass_Refresh_3
   9557                      { 
   9558                        
   9559                        char ekran1[2][13] = {
   9560                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   9561                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   9562                                    };
   \                     ??AlarmPass_Refresh_2:
   \   0000001E   6846               MOV      R0,SP
   \   00000020   4649               LDR      R1,??AlarmPass_Refresh_0+0x8  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   00000022   1C22               MOVS     R2,#+28
   \   00000024   ........           BL       __aeabi_memcpy4
   9563                  
   9564                        char ekranSlave[2][13] = {
   9565                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   9566                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   9567                                    };
   \   00000028   07A8               ADD      R0,SP,#+28
   \   0000002A   4549               LDR      R1,??AlarmPass_Refresh_0+0xC  ;; `?<Constant {{0, 0, 224, 248, 152, 124, 180, 22_1`
   \   0000002C   1C22               MOVS     R2,#+28
   \   0000002E   ........           BL       __aeabi_memcpy4
   9568                        
   9569                        if ((SlaveMode) )//je¿eli tryb slave
   \   00000032   4448               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; SlaveMode
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   1BD0               BEQ      ??AlarmPass_Refresh_4
   9570                        {
   9571                              for (char i=0; i<=12; i++)
   \   0000003A   0020               MOVS     R0,#+0
   \                     ??AlarmPass_Refresh_5:
   \   0000003C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   0D28               CMP      R0,#+13
   \   00000042   32D2               BCS      ??AlarmPass_Refresh_3
   9572                              {
   9573                           
   9574                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   00000044   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   3F49               LDR      R1,??AlarmPass_Refresh_0+0x14  ;; LCD_Canvas
   \   0000004A   0918               ADDS     R1,R1,R0
   \   0000004C   7331               ADDS     R1,R1,#+115
   \   0000004E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   07AA               ADD      R2,SP,#+28
   \   00000054   125C               LDRB     R2,[R2, R0]
   \   00000056   0A70               STRB     R2,[R1, #+0]
   9575                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   00000058   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000005A   000E               LSRS     R0,R0,#+24
   \   0000005C   3A49               LDR      R1,??AlarmPass_Refresh_0+0x14  ;; LCD_Canvas
   \   0000005E   0918               ADDS     R1,R1,R0
   \   00000060   F331               ADDS     R1,R1,#+243
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   07AA               ADD      R2,SP,#+28
   \   00000068   1218               ADDS     R2,R2,R0
   \   0000006A   527B               LDRB     R2,[R2, #+13]
   \   0000006C   0A70               STRB     R2,[R1, #+0]
   9576                              }
   \   0000006E   401C               ADDS     R0,R0,#+1
   \   00000070   E4E7               B        ??AlarmPass_Refresh_5
   9577                        }else{
   9578                          
   9579                            for (char i=0; i<=12; i++)
   \                     ??AlarmPass_Refresh_4:
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   15E0               B        ??AlarmPass_Refresh_6
   9580                            {
   9581                           
   9582                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??AlarmPass_Refresh_7:
   \   00000076   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000078   000E               LSRS     R0,R0,#+24
   \   0000007A   3349               LDR      R1,??AlarmPass_Refresh_0+0x14  ;; LCD_Canvas
   \   0000007C   0918               ADDS     R1,R1,R0
   \   0000007E   7331               ADDS     R1,R1,#+115
   \   00000080   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000082   000E               LSRS     R0,R0,#+24
   \   00000084   6A46               MOV      R2,SP
   \   00000086   125C               LDRB     R2,[R2, R0]
   \   00000088   0A70               STRB     R2,[R1, #+0]
   9583                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   0000008A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   2E49               LDR      R1,??AlarmPass_Refresh_0+0x14  ;; LCD_Canvas
   \   00000090   0918               ADDS     R1,R1,R0
   \   00000092   F331               ADDS     R1,R1,#+243
   \   00000094   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000096   000E               LSRS     R0,R0,#+24
   \   00000098   6A46               MOV      R2,SP
   \   0000009A   1218               ADDS     R2,R2,R0
   \   0000009C   527B               LDRB     R2,[R2, #+13]
   \   0000009E   0A70               STRB     R2,[R1, #+0]
   9584                            }
   \   000000A0   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Refresh_6:
   \   000000A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A4   000E               LSRS     R0,R0,#+24
   \   000000A6   0D28               CMP      R0,#+13
   \   000000A8   E5D3               BCC      ??AlarmPass_Refresh_7
   9585                          }
   9586                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   9587                      }
   9588                      if ((MainSide_puls==1) )
   \                     ??AlarmPass_Refresh_3:
   \   000000AA   2348               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   000000AC   0078               LDRB     R0,[R0, #+0]
   \   000000AE   0128               CMP      R0,#+1
   \   000000B0   28D1               BNE      ??AlarmPass_Refresh_8
   9589                      {
   9590                        
   9591                        if ((g_SlaveConnect) || (!SlaveMode))
   \   000000B2   2648               LDR      R0,??AlarmPass_Refresh_0+0x18  ;; g_SlaveConnect
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   03D1               BNE      ??AlarmPass_Refresh_9
   \   000000BA   2248               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; SlaveMode
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   0028               CMP      R0,#+0
   \   000000C0   20D1               BNE      ??AlarmPass_Refresh_8
   9592                        {
   9593                          char ekran2[2][13] = {
   9594                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   9595                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   9596                                    };
   \                     ??AlarmPass_Refresh_9:
   \   000000C2   6846               MOV      R0,SP
   \   000000C4   2249               LDR      R1,??AlarmPass_Refresh_0+0x1C  ;; `?<Constant {{240, 28, 230, 250, 251, 253, 253,_2`
   \   000000C6   1C22               MOVS     R2,#+28
   \   000000C8   ........           BL       __aeabi_memcpy4
   9597                        
   9598                          for (char i=0; i<=12; i++)
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   15E0               B        ??AlarmPass_Refresh_10
   9599                          {
   9600                           
   9601                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??AlarmPass_Refresh_11:
   \   000000D0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D2   000E               LSRS     R0,R0,#+24
   \   000000D4   1C49               LDR      R1,??AlarmPass_Refresh_0+0x14  ;; LCD_Canvas
   \   000000D6   0918               ADDS     R1,R1,R0
   \   000000D8   7331               ADDS     R1,R1,#+115
   \   000000DA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000DC   000E               LSRS     R0,R0,#+24
   \   000000DE   6A46               MOV      R2,SP
   \   000000E0   125C               LDRB     R2,[R2, R0]
   \   000000E2   0A70               STRB     R2,[R1, #+0]
   9602                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   000000E4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000E6   000E               LSRS     R0,R0,#+24
   \   000000E8   1749               LDR      R1,??AlarmPass_Refresh_0+0x14  ;; LCD_Canvas
   \   000000EA   0918               ADDS     R1,R1,R0
   \   000000EC   F331               ADDS     R1,R1,#+243
   \   000000EE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F0   000E               LSRS     R0,R0,#+24
   \   000000F2   6A46               MOV      R2,SP
   \   000000F4   1218               ADDS     R2,R2,R0
   \   000000F6   527B               LDRB     R2,[R2, #+13]
   \   000000F8   0A70               STRB     R2,[R1, #+0]
   9603                          }
   \   000000FA   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Refresh_10:
   \   000000FC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   0D28               CMP      R0,#+13
   \   00000102   E5D3               BCC      ??AlarmPass_Refresh_11
   9604                        }
   9605                  
   9606                      }
   9607                       
   9608                  
   9609                    if (g_Stop_Program==0)
   \                     ??AlarmPass_Refresh_8:
   \   00000104   1348               LDR      R0,??AlarmPass_Refresh_0+0x20  ;; g_Stop_Program
   \   00000106   0078               LDRB     R0,[R0, #+0]
   \   00000108   0028               CMP      R0,#+0
   \   0000010A   0DD1               BNE      ??AlarmPass_Refresh_12
   9610                    {  
   9611                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   0000010C   0A48               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   0000010E   0078               LDRB     R0,[R0, #+0]
   \   00000110   0828               CMP      R0,#+8
   \   00000112   03D3               BCC      ??AlarmPass_Refresh_13
   \   00000114   0848               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   00000116   0021               MOVS     R1,#+0
   \   00000118   0170               STRB     R1,[R0, #+0]
   \   0000011A   08E0               B        ??AlarmPass_Refresh_1
   \                     ??AlarmPass_Refresh_13:
   \   0000011C   0648               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   0000011E   0649               LDR      R1,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   00000120   0978               LDRB     R1,[R1, #+0]
   \   00000122   491C               ADDS     R1,R1,#+1
   \   00000124   0170               STRB     R1,[R0, #+0]
   \   00000126   02E0               B        ??AlarmPass_Refresh_1
   9612                    }else{
   9613                      MainSide_puls=7; 
   \                     ??AlarmPass_Refresh_12:
   \   00000128   0348               LDR      R0,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   0000012A   0721               MOVS     R1,#+7
   \   0000012C   0170               STRB     R1,[R0, #+0]
   9614                    }
   9615                     
   9616                    }
   9617          
   9618          }//_______________________ Koniec funkcji AlarmPass_Refresh __________________________
   \                     ??AlarmPass_Refresh_1:
   \   0000012E   0FB0               ADD      SP,SP,#+60
   \   00000130   01BC               POP      {R0}
   \   00000132   0047               BX       R0               ;; return
   \                     ??AlarmPass_Refresh_0:
   \   00000134   ........           DC32     CurrentSheet
   \   00000138   ........           DC32     MainSide_puls
   \   0000013C   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   00000140   ........           DC32     `?<Constant {{0, 0, 224, 248, 152, 124, 180, 22_1`
   \   00000144   ........           DC32     SlaveMode
   \   00000148   ........           DC32     LCD_Canvas
   \   0000014C   ........           DC32     g_SlaveConnect
   \   00000150   ........           DC32     `?<Constant {{240, 28, 230, 250, 251, 253, 253,_2`
   \   00000154   ........           DC32     g_Stop_Program
   9619          
   9620          
   9621          
   9622          
   9623          extern char APC;
   9624          //*-----------------------------------------------------------------------------
   9625          //* Nazwa funkcji :    Alarm_Paint
   9626          //* Funkcja strony g³ównej menu
   9627          //*-----------------------------------------------------------------------------
   9628          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   9629          //*-----------------------------------------------------------------------------
   9630          

   \                                 In section Debug.txt, align 4, keep-with-next
   9631          void AlarmPassChange_Paint(char CurrentSheet)
   9632          {
   \                     AlarmPassChange_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9633          
   9634                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   28A2               ADR      R2,??AlarmPassChange_Paint_0  ;; 0x45, 0x00, 0x00, 0x00
   \   00000004   28A1               ADR      R1,??AlarmPassChange_Paint_0+0x4  ;; 0x43, 0x00, 0x00, 0x00
   \   00000006   FF20               MOVS     R0,#+255
   \   00000008   9630               ADDS     R0,R0,#+150      ;; #+405
   \   0000000A   284B               LDR      R3,??AlarmPassChange_Paint_0+0x8  ;; g_leng
   \   0000000C   1B68               LDR      R3,[R3, #+0]
   \   0000000E   284C               LDR      R4,??AlarmPassChange_Paint_0+0xC  ;; 0xa7d
   \   00000010   6343               MULS     R3,R4,R3
   \   00000012   284C               LDR      R4,??AlarmPassChange_Paint_0+0x10  ;; Speech
   \   00000014   E318               ADDS     R3,R4,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   9635                    if (APC==0)
   \   0000001C   2648               LDR      R0,??AlarmPassChange_Paint_0+0x14  ;; APC
   \   0000001E   0078               LDRB     R0,[R0, #+0]
   \   00000020   0028               CMP      R0,#+0
   \   00000022   18D1               BNE      ??AlarmPassChange_Paint_1
   9636                    {
   9637                      Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);
   \   00000024   82B0               SUB      SP,SP,#+8
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   0090               STR      R0,[SP, #+0]
   \   0000002A   7F21               MOVS     R1,#+127
   \   0000002C   0020               MOVS     R0,#+0
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   3A21               MOVS     R1,#+58
   \   00000032   0F20               MOVS     R0,#+15
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   6623               MOVS     R3,#+102
   \   00000038   0322               MOVS     R2,#+3
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   FF20               MOVS     R0,#+255
   \   0000003E   7830               ADDS     R0,R0,#+120      ;; #+375
   \   00000040   1A4C               LDR      R4,??AlarmPassChange_Paint_0+0x8  ;; g_leng
   \   00000042   2468               LDR      R4,[R4, #+0]
   \   00000044   1A4D               LDR      R5,??AlarmPassChange_Paint_0+0xC  ;; 0xa7d
   \   00000046   6C43               MULS     R4,R5,R4
   \   00000048   1A4D               LDR      R5,??AlarmPassChange_Paint_0+0x10  ;; Speech
   \   0000004A   2C19               ADDS     R4,R5,R4
   \   0000004C   2018               ADDS     R0,R4,R0
   \   0000004E   ........           BL       Label
   \   00000052   06B0               ADD      SP,SP,#+24
   \   00000054   17E0               B        ??AlarmPassChange_Paint_2
   9638                    }else{
   9639                      Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);
   \                     ??AlarmPassChange_Paint_1:
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   0020               MOVS     R0,#+0
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   7F21               MOVS     R1,#+127
   \   0000005E   0020               MOVS     R0,#+0
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   3A21               MOVS     R1,#+58
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   6623               MOVS     R3,#+102
   \   0000006A   0322               MOVS     R2,#+3
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   C320               MOVS     R0,#+195
   \   00000070   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000072   0E4C               LDR      R4,??AlarmPassChange_Paint_0+0x8  ;; g_leng
   \   00000074   2468               LDR      R4,[R4, #+0]
   \   00000076   0E4D               LDR      R5,??AlarmPassChange_Paint_0+0xC  ;; 0xa7d
   \   00000078   6C43               MULS     R4,R5,R4
   \   0000007A   0E4D               LDR      R5,??AlarmPassChange_Paint_0+0x10  ;; Speech
   \   0000007C   2C19               ADDS     R4,R5,R4
   \   0000007E   2018               ADDS     R0,R4,R0
   \   00000080   ........           BL       Label
   \   00000084   06B0               ADD      SP,SP,#+24
   9640                    }
   9641                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??AlarmPassChange_Paint_2:
   \   00000086   82B0               SUB      SP,SP,#+8
   \   00000088   0020               MOVS     R0,#+0
   \   0000008A   0090               STR      R0,[SP, #+0]
   \   0000008C   0F23               MOVS     R3,#+15
   \   0000008E   4022               MOVS     R2,#+64
   \   00000090   7121               MOVS     R1,#+113
   \   00000092   0020               MOVS     R0,#+0
   \   00000094   ........           BL       CleanCanvasArea
   \   00000098   02B0               ADD      SP,SP,#+8
   9642                
   9643          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   0000009A   01B0               ADD      SP,SP,#+4
   \   0000009C   30BC               POP      {R4,R5}
   \   0000009E   01BC               POP      {R0}
   \   000000A0   0047               BX       R0               ;; return
   \   000000A2   C046               Nop      
   \                     ??AlarmPassChange_Paint_0:
   \   000000A4   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   000000A8   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000000AC   ........           DC32     g_leng
   \   000000B0   7D0A0000           DC32     0xa7d
   \   000000B4   ........           DC32     Speech
   \   000000B8   ........           DC32     APC
   9644            
   9645          
   9646          
   9647          
   9648          //*-----------------------------------------------------------------------------
   9649          //* Nazwa funkcji :    AlarmPass_Event
   9650          //*-----------------------------------------------------------------------------
   9651          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9652          void AlarmPassChange_Event(char CurrentSheet)
   9653          {
   \                     AlarmPassChange_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   9654            short int Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   9655          
   9656          
   9657          
   9658            short int ans;
   9659                  short int roz=0;
   \   00000006   0027               MOVS     R7,#+0
   9660                    
   9661                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000008   9E48               LDR      R0,??AlarmPassChange_Event_0  ;; Y_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   435E               LDRSH    R3,[R0, R1]
   \   0000000E   9E48               LDR      R0,??AlarmPassChange_Event_0+0x4  ;; X_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   9D48               LDR      R0,??AlarmPassChange_Event_0+0x8  ;; Y_up
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   9D48               LDR      R0,??AlarmPassChange_Event_0+0xC  ;; X_up
   \   0000001C   0026               MOVS     R6,#+0
   \   0000001E   805F               LDRSH    R0,[R0, R6]
   \   00000020   ........           BL       Number_Event
   \   00000024   0600               MOVS     R6,R0
   9662            
   9663                  if (ans>0)          {
   \   00000026   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   00000028   3614               ASRS     R6,R6,#+16
   \   0000002A   012E               CMP      R6,#+1
   \   0000002C   00DA               BGE      .+4
   \   0000002E   07E1               B        ??AlarmPassChange_Event_1
   9664                      
   9665                      if (InsertPass1[4]<=3) 
   \   00000030   9848               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0428               CMP      R0,#+4
   \   00000036   20D2               BCS      ??AlarmPassChange_Event_2
   9666                      { 
   9667                          if ((ans<10) || (ans==11)) 
   \   00000038   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   0000003A   3614               ASRS     R6,R6,#+16
   \   0000003C   0A2E               CMP      R6,#+10
   \   0000003E   03DB               BLT      ??AlarmPassChange_Event_3
   \   00000040   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   00000042   3614               ASRS     R6,R6,#+16
   \   00000044   0B2E               CMP      R6,#+11
   \   00000046   18D1               BNE      ??AlarmPassChange_Event_2
   9668                          {
   9669                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPassChange_Event_3:
   \   00000048   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   0000004A   3614               ASRS     R6,R6,#+16
   \   0000004C   0A2E               CMP      R6,#+10
   \   0000004E   05DA               BGE      ??AlarmPassChange_Event_4
   \   00000050   9048               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   9049               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   00000056   3200               MOVS     R2,R6
   \   00000058   3032               ADDS     R2,R2,#+48
   \   0000005A   0A54               STRB     R2,[R1, R0]
   9670                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPassChange_Event_4:
   \   0000005C   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   0000005E   3614               ASRS     R6,R6,#+16
   \   00000060   0B2E               CMP      R6,#+11
   \   00000062   05D1               BNE      ??AlarmPassChange_Event_5
   \   00000064   8B48               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000066   0078               LDRB     R0,[R0, #+0]
   \   00000068   8B49               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   0000006A   3200               MOVS     R2,R6
   \   0000006C   2532               ADDS     R2,R2,#+37
   \   0000006E   0A54               STRB     R2,[R1, R0]
   9671                            InsertPass1[4]++;
   \                     ??AlarmPassChange_Event_5:
   \   00000070   8848               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000072   8849               LDR      R1,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000074   0978               LDRB     R1,[R1, #+0]
   \   00000076   491C               ADDS     R1,R1,#+1
   \   00000078   0170               STRB     R1,[R0, #+0]
   9672                          }
   9673                          
   9674                      }
   9675                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPassChange_Event_2:
   \   0000007A   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   0000007C   3614               ASRS     R6,R6,#+16
   \   0000007E   0A2E               CMP      R6,#+10
   \   00000080   0DD1               BNE      ??AlarmPassChange_Event_6
   \   00000082   8448               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000084   0078               LDRB     R0,[R0, #+0]
   \   00000086   0128               CMP      R0,#+1
   \   00000088   09D3               BCC      ??AlarmPassChange_Event_6
   \   0000008A   8248               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   0000008C   8149               LDR      R1,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   0000008E   0978               LDRB     R1,[R1, #+0]
   \   00000090   491E               SUBS     R1,R1,#+1
   \   00000092   0170               STRB     R1,[R0, #+0]
   \   00000094   7F48               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   7F49               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   0000009A   0022               MOVS     R2,#+0
   \   0000009C   0A54               STRB     R2,[R1, R0]
   9676                      
   9677                      
   9678                     short int InsertPassVar=0;
   \                     ??AlarmPassChange_Event_6:
   \   0000009E   0020               MOVS     R0,#+0
   9679                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   05E0               B        ??AlarmPassChange_Event_7
   \                     ??AlarmPassChange_Event_8:
   \   000000A4   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000A6   090E               LSRS     R1,R1,#+24
   \   000000A8   7C4A               LDR      R2,??AlarmPassChange_Event_0+0x18  ;; pass_tmp
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   5354               STRB     R3,[R2, R1]
   \   000000AE   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPassChange_Event_7:
   \   000000B0   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000B2   090E               LSRS     R1,R1,#+24
   \   000000B4   0429               CMP      R1,#+4
   \   000000B6   F5D3               BCC      ??AlarmPassChange_Event_8
   9680                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPassChange_Event_9:
   \   000000B8   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000BA   0014               ASRS     R0,R0,#+16
   \   000000BC   7649               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   000000BE   095C               LDRB     R1,[R1, R0]
   \   000000C0   0029               CMP      R1,#+0
   \   000000C2   0AD0               BEQ      ??AlarmPassChange_Event_10
   \   000000C4   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000C6   0014               ASRS     R0,R0,#+16
   \   000000C8   0428               CMP      R0,#+4
   \   000000CA   06DA               BGE      ??AlarmPassChange_Event_10
   9681                     {
   9682                       pass_tmp[InsertPassVar]=42; //42="*"
   \   000000CC   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000CE   0014               ASRS     R0,R0,#+16
   \   000000D0   7249               LDR      R1,??AlarmPassChange_Event_0+0x18  ;; pass_tmp
   \   000000D2   2A22               MOVS     R2,#+42
   \   000000D4   0A54               STRB     R2,[R1, R0]
   9683                       InsertPassVar++;
   \   000000D6   401C               ADDS     R0,R0,#+1
   \   000000D8   EEE7               B        ??AlarmPassChange_Event_9
   9684                     }
   9685          
   9686                    
   9687                      //Sprawdzenie has³a
   9688                      if (ans==12)
   \                     ??AlarmPassChange_Event_10:
   \   000000DA   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   000000DC   3614               ASRS     R6,R6,#+16
   \   000000DE   0C2E               CMP      R6,#+12
   \   000000E0   00D0               BEQ      .+4
   \   000000E2   91E0               B        ??AlarmPassChange_Event_11
   9689                      {
   9690                        
   9691                        roz=0;
   \   000000E4   0027               MOVS     R7,#+0
   9692                        for (int i=0; i<=3; i++)
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   44E0               B        ??AlarmPassChange_Event_12
   9693                        {
   9694                          if (APC==0)
   \                     ??AlarmPassChange_Event_13:
   \   000000EA   6D49               LDR      R1,??AlarmPassChange_Event_0+0x1C  ;; APC
   \   000000EC   0978               LDRB     R1,[R1, #+0]
   \   000000EE   0029               CMP      R1,#+0
   \   000000F0   3FD1               BNE      ??AlarmPassChange_Event_14
   9695                          {
   9696                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000F2   6949               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   000000F4   095C               LDRB     R1,[R1, R0]
   \   000000F6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F8   240E               LSRS     R4,R4,#+24
   \   000000FA   0422               MOVS     R2,#+4
   \   000000FC   6243               MULS     R2,R4,R2
   \   000000FE   694B               LDR      R3,??AlarmPassChange_Event_0+0x20  ;; 0x13d7ee
   \   00000100   9A18               ADDS     R2,R3,R2
   \   00000102   125C               LDRB     R2,[R2, R0]
   \   00000104   9142               CMP      R1,R2
   \   00000106   00D0               BEQ      ??AlarmPassChange_Event_15
   \   00000108   0127               MOVS     R7,#+1
   9697                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   9698                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   9699                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   9700                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   9701                                (InsertPass1[0]=='0') && 
   9702                                  (InsertPass1[1]=='0') && 
   9703                                    (InsertPass1[2]=='0') && 
   9704                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPassChange_Event_15:
   \   0000010A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000010C   240E               LSRS     R4,R4,#+24
   \   0000010E   0421               MOVS     R1,#+4
   \   00000110   6143               MULS     R1,R4,R1
   \   00000112   644A               LDR      R2,??AlarmPassChange_Event_0+0x20  ;; 0x13d7ee
   \   00000114   515C               LDRB     R1,[R2, R1]
   \   00000116   0029               CMP      R1,#+0
   \   00000118   2BD1               BNE      ??AlarmPassChange_Event_14
   \   0000011A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000011C   240E               LSRS     R4,R4,#+24
   \   0000011E   0421               MOVS     R1,#+4
   \   00000120   6143               MULS     R1,R4,R1
   \   00000122   604A               LDR      R2,??AlarmPassChange_Event_0+0x20  ;; 0x13d7ee
   \   00000124   5118               ADDS     R1,R2,R1
   \   00000126   4978               LDRB     R1,[R1, #+1]
   \   00000128   0029               CMP      R1,#+0
   \   0000012A   22D1               BNE      ??AlarmPassChange_Event_14
   \   0000012C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000012E   240E               LSRS     R4,R4,#+24
   \   00000130   0421               MOVS     R1,#+4
   \   00000132   6143               MULS     R1,R4,R1
   \   00000134   5B4A               LDR      R2,??AlarmPassChange_Event_0+0x20  ;; 0x13d7ee
   \   00000136   5118               ADDS     R1,R2,R1
   \   00000138   8978               LDRB     R1,[R1, #+2]
   \   0000013A   0029               CMP      R1,#+0
   \   0000013C   19D1               BNE      ??AlarmPassChange_Event_14
   \   0000013E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000140   240E               LSRS     R4,R4,#+24
   \   00000142   0421               MOVS     R1,#+4
   \   00000144   6143               MULS     R1,R4,R1
   \   00000146   574A               LDR      R2,??AlarmPassChange_Event_0+0x20  ;; 0x13d7ee
   \   00000148   5118               ADDS     R1,R2,R1
   \   0000014A   C978               LDRB     R1,[R1, #+3]
   \   0000014C   0029               CMP      R1,#+0
   \   0000014E   10D1               BNE      ??AlarmPassChange_Event_14
   \   00000150   5149               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   00000152   0978               LDRB     R1,[R1, #+0]
   \   00000154   3029               CMP      R1,#+48
   \   00000156   0CD1               BNE      ??AlarmPassChange_Event_14
   \   00000158   5349               LDR      R1,??AlarmPassChange_Event_0+0x24  ;; InsertPass1 + 1
   \   0000015A   0978               LDRB     R1,[R1, #+0]
   \   0000015C   3029               CMP      R1,#+48
   \   0000015E   08D1               BNE      ??AlarmPassChange_Event_14
   \   00000160   5249               LDR      R1,??AlarmPassChange_Event_0+0x28  ;; InsertPass1 + 2
   \   00000162   0978               LDRB     R1,[R1, #+0]
   \   00000164   3029               CMP      R1,#+48
   \   00000166   04D1               BNE      ??AlarmPassChange_Event_14
   \   00000168   5149               LDR      R1,??AlarmPassChange_Event_0+0x2C  ;; InsertPass1 + 3
   \   0000016A   0978               LDRB     R1,[R1, #+0]
   \   0000016C   3029               CMP      R1,#+48
   \   0000016E   00D1               BNE      ??AlarmPassChange_Event_14
   9705                                {
   9706                                  roz=0;
   \   00000170   0027               MOVS     R7,#+0
   9707                                }
   9708                           
   9709                            
   9710                          }
   9711                        }
   \                     ??AlarmPassChange_Event_14:
   \   00000172   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_12:
   \   00000174   0428               CMP      R0,#+4
   \   00000176   B8DB               BLT      ??AlarmPassChange_Event_13
   9712                        
   9713                        
   9714                        if (roz==0)                                 //je¿eli poprawne haslo
   \   00000178   3F04               LSLS     R7,R7,#+16       ;; SignExtS R7,R7,#+16,#+16
   \   0000017A   3F14               ASRS     R7,R7,#+16
   \   0000017C   002F               CMP      R7,#+0
   \   0000017E   2ED1               BNE      ??AlarmPassChange_Event_16
   9715                        {
   9716                           
   9717                           
   9718          
   9719                           if (APC==1)
   \   00000180   4748               LDR      R0,??AlarmPassChange_Event_0+0x1C  ;; APC
   \   00000182   0078               LDRB     R0,[R0, #+0]
   \   00000184   0128               CMP      R0,#+1
   \   00000186   1AD1               BNE      ??AlarmPassChange_Event_17
   9720                           {
   9721                              APC=0;
   \   00000188   4548               LDR      R0,??AlarmPassChange_Event_0+0x1C  ;; APC
   \   0000018A   0021               MOVS     R1,#+0
   \   0000018C   0170               STRB     R1,[R0, #+0]
   9722                              MenuLevel=1;
   \   0000018E   4948               LDR      R0,??AlarmPassChange_Event_0+0x30  ;; MenuLevel
   \   00000190   0121               MOVS     R1,#+1
   \   00000192   0160               STR      R1,[R0, #+0]
   9723                              
   9724                              unsigned int Save = __get_interrupt_state();  
   \   00000194   ........           BL       __iar_get_interrupt_state
   \   00000198   0500               MOVS     R5,R0
   9725                              __disable_interrupt();
   \   0000019A   ........           BL       __iar_disable_interrupt
   9726                                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet])), InsertPass1, 4);
                                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000019E   0422               MOVS     R2,#+4
   \   000001A0   3D49               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   000001A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001A4   240E               LSRS     R4,R4,#+24
   \   000001A6   0420               MOVS     R0,#+4
   \   000001A8   4443               MULS     R4,R0,R4
   \   000001AA   3E48               LDR      R0,??AlarmPassChange_Event_0+0x20  ;; 0x13d7ee
   \   000001AC   0019               ADDS     R0,R0,R4
   \   000001AE   ........           BL       FlashWrite
   9727                              __set_interrupt_state(Save);
   \   000001B2   2800               MOVS     R0,R5
   \   000001B4   ........           BL       __iar_set_interrupt_state
   9728                              __enable_interrupt(); 
   \   000001B8   ........           BL       __iar_enable_interrupt
   \   000001BC   02E0               B        ??AlarmPassChange_Event_18
   9729                              
   9730                           }else{
   9731                            APC=1; 
   \                     ??AlarmPassChange_Event_17:
   \   000001BE   3848               LDR      R0,??AlarmPassChange_Event_0+0x1C  ;; APC
   \   000001C0   0121               MOVS     R1,#+1
   \   000001C2   0170               STRB     R1,[R0, #+0]
   9732                           }
   9733                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_18:
   \   000001C4   0020               MOVS     R0,#+0
   \   000001C6   03E0               B        ??AlarmPassChange_Event_19
   \                     ??AlarmPassChange_Event_20:
   \   000001C8   3349               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   000001CA   0022               MOVS     R2,#+0
   \   000001CC   0A54               STRB     R2,[R1, R0]
   \   000001CE   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_19:
   \   000001D0   0428               CMP      R0,#+4
   \   000001D2   F9DB               BLT      ??AlarmPassChange_Event_20
   9734                           InsertPass1[4]=0;
   \   000001D4   2F48               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   000001D6   0021               MOVS     R1,#+0
   \   000001D8   0170               STRB     R1,[R0, #+0]
   9735                           Repaint=1;
   \   000001DA   0125               MOVS     R5,#+1
   \   000001DC   14E0               B        ??AlarmPassChange_Event_11
   9736                        } 
   9737                        else
   9738                        {
   9739                           //informacja o b³ednym hale
   9740                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_16:
   \   000001DE   0020               MOVS     R0,#+0
   \   000001E0   03E0               B        ??AlarmPassChange_Event_21
   \                     ??AlarmPassChange_Event_22:
   \   000001E2   2D49               LDR      R1,??AlarmPassChange_Event_0+0x14  ;; InsertPass1
   \   000001E4   0022               MOVS     R2,#+0
   \   000001E6   0A54               STRB     R2,[R1, R0]
   \   000001E8   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_21:
   \   000001EA   0828               CMP      R0,#+8
   \   000001EC   F9DB               BLT      ??AlarmPassChange_Event_22
   9741                           InsertPass1[4]=0;
   \   000001EE   2948               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   000001F0   0021               MOVS     R1,#+0
   \   000001F2   0170               STRB     R1,[R0, #+0]
   9742                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   000001F4   3048               LDR      R0,??AlarmPassChange_Event_0+0x34  ;; 0x7e9
   \   000001F6   3149               LDR      R1,??AlarmPassChange_Event_0+0x38  ;; g_leng
   \   000001F8   0968               LDR      R1,[R1, #+0]
   \   000001FA   314A               LDR      R2,??AlarmPassChange_Event_0+0x3C  ;; 0xa7d
   \   000001FC   5143               MULS     R1,R2,R1
   \   000001FE   314A               LDR      R2,??AlarmPassChange_Event_0+0x40  ;; Speech
   \   00000200   5118               ADDS     R1,R2,R1
   \   00000202   0818               ADDS     R0,R1,R0
   \   00000204   ........           BL       MESSAGE
   9743                        }
   9744                        
   9745          
   9746                      }
   9747                     
   9748                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPassChange_Event_11:
   \   00000208   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   0000020A   3614               ASRS     R6,R6,#+16
   \   0000020C   012E               CMP      R6,#+1
   \   0000020E   2EDB               BLT      ??AlarmPassChange_Event_23
   \   00000210   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   00000212   3614               ASRS     R6,R6,#+16
   \   00000214   0C2E               CMP      R6,#+12
   \   00000216   2ADA               BGE      ??AlarmPassChange_Event_23
   9749                      {
   9750                        MenuPaint();
   \   00000218   ........           BL       MenuPaint
   9751                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   0020               MOVS     R0,#+0
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   7F21               MOVS     R1,#+127
   \   00000224   0020               MOVS     R0,#+0
   \   00000226   03B4               PUSH     {R0,R1}
   \   00000228   3721               MOVS     R1,#+55
   \   0000022A   1A48               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   0000022C   0078               LDRB     R0,[R0, #+0]
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   5A23               MOVS     R3,#+90
   \   00000232   0422               MOVS     R2,#+4
   \   00000234   0221               MOVS     R1,#+2
   \   00000236   1948               LDR      R0,??AlarmPassChange_Event_0+0x18  ;; pass_tmp
   \   00000238   ........           BL       Label
   \   0000023C   06B0               ADD      SP,SP,#+24
   \   0000023E   16E0               B        ??AlarmPassChange_Event_23
   9752                      }
   9753                      
   9754                    }  
   9755                    else if (ans==0) 
   \                     ??AlarmPassChange_Event_1:
   \   00000240   3604               LSLS     R6,R6,#+16       ;; SignExtS R6,R6,#+16,#+16
   \   00000242   3614               ASRS     R6,R6,#+16
   \   00000244   002E               CMP      R6,#+0
   \   00000246   12D1               BNE      ??AlarmPassChange_Event_23
   9756                      {
   9757                        MenuPaint();
   \   00000248   ........           BL       MenuPaint
   9758                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000024C   82B0               SUB      SP,SP,#+8
   \   0000024E   0020               MOVS     R0,#+0
   \   00000250   0090               STR      R0,[SP, #+0]
   \   00000252   7F21               MOVS     R1,#+127
   \   00000254   0020               MOVS     R0,#+0
   \   00000256   03B4               PUSH     {R0,R1}
   \   00000258   3721               MOVS     R1,#+55
   \   0000025A   0E48               LDR      R0,??AlarmPassChange_Event_0+0x10  ;; InsertPass1 + 4
   \   0000025C   0078               LDRB     R0,[R0, #+0]
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   5A23               MOVS     R3,#+90
   \   00000262   0422               MOVS     R2,#+4
   \   00000264   0221               MOVS     R1,#+2
   \   00000266   0D48               LDR      R0,??AlarmPassChange_Event_0+0x18  ;; pass_tmp
   \   00000268   ........           BL       Label
   \   0000026C   06B0               ADD      SP,SP,#+24
   9759                     } 
   9760           
   9761          
   9762           
   9763          
   9764          
   9765           
   9766            if (Repaint==1) MenuPaint();
   \                     ??AlarmPassChange_Event_23:
   \   0000026E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000270   2D14               ASRS     R5,R5,#+16
   \   00000272   012D               CMP      R5,#+1
   \   00000274   01D1               BNE      ??AlarmPassChange_Event_24
   \   00000276   ........           BL       MenuPaint
   9767          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPassChange_Event_24:
   \   0000027A   01B0               ADD      SP,SP,#+4
   \   0000027C   F0BC               POP      {R4-R7}
   \   0000027E   01BC               POP      {R0}
   \   00000280   0047               BX       R0               ;; return
   \   00000282   C046               Nop      
   \                     ??AlarmPassChange_Event_0:
   \   00000284   ........           DC32     Y_down
   \   00000288   ........           DC32     X_down
   \   0000028C   ........           DC32     Y_up
   \   00000290   ........           DC32     X_up
   \   00000294   ........           DC32     InsertPass1 + 4
   \   00000298   ........           DC32     InsertPass1
   \   0000029C   ........           DC32     pass_tmp
   \   000002A0   ........           DC32     APC
   \   000002A4   EED71300           DC32     0x13d7ee
   \   000002A8   ........           DC32     InsertPass1 + 1
   \   000002AC   ........           DC32     InsertPass1 + 2
   \   000002B0   ........           DC32     InsertPass1 + 3
   \   000002B4   ........           DC32     MenuLevel
   \   000002B8   E9070000           DC32     0x7e9
   \   000002BC   ........           DC32     g_leng
   \   000002C0   7D0A0000           DC32     0xa7d
   \   000002C4   ........           DC32     Speech
   9768            
   9769          
   9770          
   9771          
   9772          
   9773                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9774                void Node_Paint(char CurrentNode)
   9775                {
   \                     Node_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   \   00000002   0400               MOVS     R4,R0
   9776                  char txt[8];
   9777                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6846               MOV      R0,SP
   \   00000006   4E21               MOVS     R1,#+78
   \   00000008   0170               STRB     R1,[R0, #+0]
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   6F21               MOVS     R1,#+111
   \   0000000E   4170               STRB     R1,[R0, #+1]
   \   00000010   6846               MOV      R0,SP
   \   00000012   6421               MOVS     R1,#+100
   \   00000014   8170               STRB     R1,[R0, #+2]
   \   00000016   6846               MOV      R0,SP
   \   00000018   6521               MOVS     R1,#+101
   \   0000001A   C170               STRB     R1,[R0, #+3]
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   2021               MOVS     R1,#+32
   \   00000020   0171               STRB     R1,[R0, #+4]
   9778                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000022   0222               MOVS     R2,#+2
   \   00000024   6946               MOV      R1,SP
   \   00000026   491D               ADDS     R1,R1,#+5
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CharToStr
   9779                  
   9780                  if ((TransQuality.Mensur[CurrentNode-1]>0) || (TransQuality.SlowMensur[CurrentNode-1]>0) || (TransQuality.QuickMensur[CurrentNode-1]>0))
   \   00000032   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000034   240E               LSRS     R4,R4,#+24
   \   00000036   0421               MOVS     R1,#+4
   \   00000038   6143               MULS     R1,R4,R1
   \   0000003A   474A               LDR      R2,??Node_Paint_0  ;; TransQuality
   \   0000003C   5118               ADDS     R1,R2,R1
   \   0000003E   896C               LDR      R1,[R1, #+72]
   \   00000040   0029               CMP      R1,#+0
   \   00000042   0ED1               BNE      ??Node_Paint_1
   \   00000044   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000046   240E               LSRS     R4,R4,#+24
   \   00000048   4348               LDR      R0,??Node_Paint_0  ;; TransQuality
   \   0000004A   0019               ADDS     R0,R0,R4
   \   0000004C   8078               LDRB     R0,[R0, #+2]
   \   0000004E   0128               CMP      R0,#+1
   \   00000050   07D2               BCS      ??Node_Paint_1
   \   00000052   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000054   240E               LSRS     R4,R4,#+24
   \   00000056   4048               LDR      R0,??Node_Paint_0  ;; TransQuality
   \   00000058   0019               ADDS     R0,R0,R4
   \   0000005A   2530               ADDS     R0,R0,#+37
   \   0000005C   0078               LDRB     R0,[R0, #+0]
   \   0000005E   0128               CMP      R0,#+1
   \   00000060   42D3               BCC      ??Node_Paint_2
   9781                  {
   9782                      List_Paint(txt,7,15,0,0,3, Speech[g_leng].ZmID, Speech[g_leng].UsunID, Speech[g_leng].ZmOpis, Speech[g_leng].TestTrans, Speech[g_leng].StanWeWy, Speech[g_leng].Analogi  ,"Info",0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Node_Paint_1:
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   3D48               LDR      R0,??Node_Paint_0+0x4  ;; `?<Constant "Info">`
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   A520               MOVS     R0,#+165
   \   0000006A   0001               LSLS     R0,R0,#+4        ;; #+2640
   \   0000006C   3C49               LDR      R1,??Node_Paint_0+0x8  ;; g_leng
   \   0000006E   0968               LDR      R1,[R1, #+0]
   \   00000070   3C4A               LDR      R2,??Node_Paint_0+0xC  ;; 0xa7d
   \   00000072   5143               MULS     R1,R2,R1
   \   00000074   3C4A               LDR      R2,??Node_Paint_0+0x10  ;; Speech
   \   00000076   5118               ADDS     R1,R2,R1
   \   00000078   0918               ADDS     R1,R1,R0
   \   0000007A   3C48               LDR      R0,??Node_Paint_0+0x14  ;; 0x87f
   \   0000007C   384A               LDR      R2,??Node_Paint_0+0x8  ;; g_leng
   \   0000007E   1268               LDR      R2,[R2, #+0]
   \   00000080   384B               LDR      R3,??Node_Paint_0+0xC  ;; 0xa7d
   \   00000082   5A43               MULS     R2,R3,R2
   \   00000084   384B               LDR      R3,??Node_Paint_0+0x10  ;; Speech
   \   00000086   9A18               ADDS     R2,R3,R2
   \   00000088   1018               ADDS     R0,R2,R0
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   3848               LDR      R0,??Node_Paint_0+0x18  ;; 0x88e
   \   0000008E   3449               LDR      R1,??Node_Paint_0+0x8  ;; g_leng
   \   00000090   0968               LDR      R1,[R1, #+0]
   \   00000092   344A               LDR      R2,??Node_Paint_0+0xC  ;; 0xa7d
   \   00000094   5143               MULS     R1,R2,R1
   \   00000096   344A               LDR      R2,??Node_Paint_0+0x10  ;; Speech
   \   00000098   5118               ADDS     R1,R2,R1
   \   0000009A   0918               ADDS     R1,R1,R0
   \   0000009C   8720               MOVS     R0,#+135
   \   0000009E   0001               LSLS     R0,R0,#+4        ;; #+2160
   \   000000A0   2F4A               LDR      R2,??Node_Paint_0+0x8  ;; g_leng
   \   000000A2   1268               LDR      R2,[R2, #+0]
   \   000000A4   2F4B               LDR      R3,??Node_Paint_0+0xC  ;; 0xa7d
   \   000000A6   5A43               MULS     R2,R3,R2
   \   000000A8   2F4B               LDR      R3,??Node_Paint_0+0x10  ;; Speech
   \   000000AA   9A18               ADDS     R2,R3,R2
   \   000000AC   1018               ADDS     R0,R2,R0
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   3048               LDR      R0,??Node_Paint_0+0x1C  ;; 0x861
   \   000000B2   2B49               LDR      R1,??Node_Paint_0+0x8  ;; g_leng
   \   000000B4   0968               LDR      R1,[R1, #+0]
   \   000000B6   2B4A               LDR      R2,??Node_Paint_0+0xC  ;; 0xa7d
   \   000000B8   5143               MULS     R1,R2,R1
   \   000000BA   2B4A               LDR      R2,??Node_Paint_0+0x10  ;; Speech
   \   000000BC   5118               ADDS     R1,R2,R1
   \   000000BE   0918               ADDS     R1,R1,R0
   \   000000C0   2D48               LDR      R0,??Node_Paint_0+0x20  ;; 0x852
   \   000000C2   274A               LDR      R2,??Node_Paint_0+0x8  ;; g_leng
   \   000000C4   1268               LDR      R2,[R2, #+0]
   \   000000C6   274B               LDR      R3,??Node_Paint_0+0xC  ;; 0xa7d
   \   000000C8   5A43               MULS     R2,R3,R2
   \   000000CA   274B               LDR      R3,??Node_Paint_0+0x10  ;; Speech
   \   000000CC   9A18               ADDS     R2,R3,R2
   \   000000CE   1018               ADDS     R0,R2,R0
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   0321               MOVS     R1,#+3
   \   000000D4   0020               MOVS     R0,#+0
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   0023               MOVS     R3,#+0
   \   000000DA   0F22               MOVS     R2,#+15
   \   000000DC   0721               MOVS     R1,#+7
   \   000000DE   0AA8               ADD      R0,SP,#+40
   \   000000E0   ........           BL       List_Paint
   \   000000E4   0AB0               ADD      SP,SP,#+40
   \   000000E6   32E0               B        ??Node_Paint_3
   9783                  }else{
   9784                      List_Paint(txt,4,15,0,0,3, Speech[g_leng].ZmID, Speech[g_leng].UsunID, Speech[g_leng].ZmOpis, Speech[g_leng].TestTrans, 0 ,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Node_Paint_2:
   \   000000E8   0021               MOVS     R1,#+0
   \   000000EA   0020               MOVS     R0,#+0
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   0021               MOVS     R1,#+0
   \   000000F0   0020               MOVS     R0,#+0
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   1E48               LDR      R0,??Node_Paint_0+0x18  ;; 0x88e
   \   000000F6   1A49               LDR      R1,??Node_Paint_0+0x8  ;; g_leng
   \   000000F8   0968               LDR      R1,[R1, #+0]
   \   000000FA   1A4A               LDR      R2,??Node_Paint_0+0xC  ;; 0xa7d
   \   000000FC   5143               MULS     R1,R2,R1
   \   000000FE   1A4A               LDR      R2,??Node_Paint_0+0x10  ;; Speech
   \   00000100   5118               ADDS     R1,R2,R1
   \   00000102   0918               ADDS     R1,R1,R0
   \   00000104   8720               MOVS     R0,#+135
   \   00000106   0001               LSLS     R0,R0,#+4        ;; #+2160
   \   00000108   154A               LDR      R2,??Node_Paint_0+0x8  ;; g_leng
   \   0000010A   1268               LDR      R2,[R2, #+0]
   \   0000010C   154B               LDR      R3,??Node_Paint_0+0xC  ;; 0xa7d
   \   0000010E   5A43               MULS     R2,R3,R2
   \   00000110   154B               LDR      R3,??Node_Paint_0+0x10  ;; Speech
   \   00000112   9A18               ADDS     R2,R3,R2
   \   00000114   1018               ADDS     R0,R2,R0
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   1648               LDR      R0,??Node_Paint_0+0x1C  ;; 0x861
   \   0000011A   1149               LDR      R1,??Node_Paint_0+0x8  ;; g_leng
   \   0000011C   0968               LDR      R1,[R1, #+0]
   \   0000011E   114A               LDR      R2,??Node_Paint_0+0xC  ;; 0xa7d
   \   00000120   5143               MULS     R1,R2,R1
   \   00000122   114A               LDR      R2,??Node_Paint_0+0x10  ;; Speech
   \   00000124   5118               ADDS     R1,R2,R1
   \   00000126   0918               ADDS     R1,R1,R0
   \   00000128   1348               LDR      R0,??Node_Paint_0+0x20  ;; 0x852
   \   0000012A   0D4A               LDR      R2,??Node_Paint_0+0x8  ;; g_leng
   \   0000012C   1268               LDR      R2,[R2, #+0]
   \   0000012E   0D4B               LDR      R3,??Node_Paint_0+0xC  ;; 0xa7d
   \   00000130   5A43               MULS     R2,R3,R2
   \   00000132   0D4B               LDR      R3,??Node_Paint_0+0x10  ;; Speech
   \   00000134   9A18               ADDS     R2,R3,R2
   \   00000136   1018               ADDS     R0,R2,R0
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   0321               MOVS     R1,#+3
   \   0000013C   0020               MOVS     R0,#+0
   \   0000013E   03B4               PUSH     {R0,R1}
   \   00000140   0023               MOVS     R3,#+0
   \   00000142   0F22               MOVS     R2,#+15
   \   00000144   0421               MOVS     R1,#+4
   \   00000146   0AA8               ADD      R0,SP,#+40
   \   00000148   ........           BL       List_Paint
   \   0000014C   0AB0               ADD      SP,SP,#+40
   9785          
   9786                  }   
   9787                  
   9788                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Node_Paint_3:
   \   0000014E   02B0               ADD      SP,SP,#+8
   \   00000150   10BC               POP      {R4}
   \   00000152   01BC               POP      {R0}
   \   00000154   0047               BX       R0               ;; return
   \   00000156   C046               Nop      
   \                     ??Node_Paint_0:
   \   00000158   ........           DC32     TransQuality
   \   0000015C   ........           DC32     `?<Constant "Info">`
   \   00000160   ........           DC32     g_leng
   \   00000164   7D0A0000           DC32     0xa7d
   \   00000168   ........           DC32     Speech
   \   0000016C   7F080000           DC32     0x87f
   \   00000170   8E080000           DC32     0x88e
   \   00000174   61080000           DC32     0x861
   \   00000178   52080000           DC32     0x852
   9789          
   9790          
   9791          
   9792                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9793                void Node_Event(char CurrentNode)
   9794                {
   \                     Node_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   9795                  int ans;
   9796                 
   9797                  if ((TransQuality.Mensur[CurrentNode-1]>0) || (TransQuality.SlowMensur[CurrentNode-1]>0) || (TransQuality.QuickMensur[CurrentNode-1]>0))
   \   00000004   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000006   240E               LSRS     R4,R4,#+24
   \   00000008   0420               MOVS     R0,#+4
   \   0000000A   6043               MULS     R0,R4,R0
   \   0000000C   5D49               LDR      R1,??Node_Event_0  ;; TransQuality
   \   0000000E   0818               ADDS     R0,R1,R0
   \   00000010   806C               LDR      R0,[R0, #+72]
   \   00000012   0028               CMP      R0,#+0
   \   00000014   0ED1               BNE      ??Node_Event_1
   \   00000016   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000018   240E               LSRS     R4,R4,#+24
   \   0000001A   5A48               LDR      R0,??Node_Event_0  ;; TransQuality
   \   0000001C   0019               ADDS     R0,R0,R4
   \   0000001E   8078               LDRB     R0,[R0, #+2]
   \   00000020   0128               CMP      R0,#+1
   \   00000022   07D2               BCS      ??Node_Event_1
   \   00000024   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000026   240E               LSRS     R4,R4,#+24
   \   00000028   5648               LDR      R0,??Node_Event_0  ;; TransQuality
   \   0000002A   0019               ADDS     R0,R0,R4
   \   0000002C   2530               ADDS     R0,R0,#+37
   \   0000002E   0078               LDRB     R0,[R0, #+0]
   \   00000030   0128               CMP      R0,#+1
   \   00000032   16D3               BCC      ??Node_Event_2
   9798                  {
   9799                    ans=List_Event(X_up, Y_up, X_down, Y_down, 7 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Node_Event_1:
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0F21               MOVS     R1,#+15
   \   0000003C   0720               MOVS     R0,#+7
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   5148               LDR      R0,??Node_Event_0+0x4  ;; Y_down
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   435E               LDRSH    R3,[R0, R1]
   \   00000046   5148               LDR      R0,??Node_Event_0+0x8  ;; X_down
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   425E               LDRSH    R2,[R0, R1]
   \   0000004C   5048               LDR      R0,??Node_Event_0+0xC  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   415E               LDRSH    R1,[R0, R1]
   \   00000052   5048               LDR      R0,??Node_Event_0+0x10  ;; X_up
   \   00000054   0025               MOVS     R5,#+0
   \   00000056   405F               LDRSH    R0,[R0, R5]
   \   00000058   ........           BL       List_Event
   \   0000005C   04B0               ADD      SP,SP,#+16
   \   0000005E   0500               MOVS     R5,R0
   \   00000060   15E0               B        ??Node_Event_3
   9800                  }else{
   9801                    ans=List_Event(X_up, Y_up, X_down, Y_down, 4 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Node_Event_2:
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   0F21               MOVS     R1,#+15
   \   0000006A   0420               MOVS     R0,#+4
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   4648               LDR      R0,??Node_Event_0+0x4  ;; Y_down
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   435E               LDRSH    R3,[R0, R1]
   \   00000074   4548               LDR      R0,??Node_Event_0+0x8  ;; X_down
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   425E               LDRSH    R2,[R0, R1]
   \   0000007A   4548               LDR      R0,??Node_Event_0+0xC  ;; Y_up
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   415E               LDRSH    R1,[R0, R1]
   \   00000080   4448               LDR      R0,??Node_Event_0+0x10  ;; X_up
   \   00000082   0025               MOVS     R5,#+0
   \   00000084   405F               LDRSH    R0,[R0, R5]
   \   00000086   ........           BL       List_Event
   \   0000008A   04B0               ADD      SP,SP,#+16
   \   0000008C   0500               MOVS     R5,R0
   9802                  }
   9803                  if (ans)
   \                     ??Node_Event_3:
   \   0000008E   002D               CMP      R5,#+0
   \   00000090   74D0               BEQ      ??Node_Event_4
   9804                    {
   9805                    if ((ans>0) && (ans<=7)) 
   \   00000092   012D               CMP      R5,#+1
   \   00000094   61DB               BLT      ??Node_Event_5
   \   00000096   082D               CMP      R5,#+8
   \   00000098   5FDA               BGE      ??Node_Event_5
   9806                    {
   9807                      RF_NodeTest.Sent=0;
   \   0000009A   3F48               LDR      R0,??Node_Event_0+0x14  ;; RF_NodeTest + 4
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   0160               STR      R1,[R0, #+0]
   9808                      RF_NodeTest.SentSyn=0;   
   \   000000A0   3E48               LDR      R0,??Node_Event_0+0x18  ;; RF_NodeTest + 8
   \   000000A2   0021               MOVS     R1,#+0
   \   000000A4   0160               STR      R1,[R0, #+0]
   9809                      RF_NodeTest.Recived=0;
   \   000000A6   3E48               LDR      R0,??Node_Event_0+0x1C  ;; RF_NodeTest + 12
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   0160               STR      R1,[R0, #+0]
   9810                      if (ans==2) //je¿eli usun ID
   \   000000AC   022D               CMP      R5,#+2
   \   000000AE   40D1               BNE      ??Node_Event_6
   9811                      {
   9812                        gProg.NeuronsIdTab[CurrentNode-1]=0;
   \   000000B0   3C48               LDR      R0,??Node_Event_0+0x20  ;; 0xc094
   \   000000B2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000B4   240E               LSRS     R4,R4,#+24
   \   000000B6   0421               MOVS     R1,#+4
   \   000000B8   6143               MULS     R1,R4,R1
   \   000000BA   3B4A               LDR      R2,??Node_Event_0+0x24  ;; gProg
   \   000000BC   5118               ADDS     R1,R2,R1
   \   000000BE   0022               MOVS     R2,#+0
   \   000000C0   0A50               STR      R2,[R1, R0]
   9813                        NeuronsList[CurrentNode-1].NeuronID=0;
   \   000000C2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C4   240E               LSRS     R4,R4,#+24
   \   000000C6   0C20               MOVS     R0,#+12
   \   000000C8   6043               MULS     R0,R4,R0
   \   000000CA   3849               LDR      R1,??Node_Event_0+0x28  ;; NeuronsList
   \   000000CC   0818               ADDS     R0,R1,R0
   \   000000CE   0838               SUBS     R0,R0,#+8
   \   000000D0   0021               MOVS     R1,#+0
   \   000000D2   0160               STR      R1,[R0, #+0]
   9814                        NeuronsList[CurrentNode-1].NeuronType=NoneNodeType;
   \   000000D4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D6   240E               LSRS     R4,R4,#+24
   \   000000D8   0C20               MOVS     R0,#+12
   \   000000DA   6043               MULS     R0,R4,R0
   \   000000DC   3349               LDR      R1,??Node_Event_0+0x28  ;; NeuronsList
   \   000000DE   0818               ADDS     R0,R1,R0
   \   000000E0   0C38               SUBS     R0,R0,#+12
   \   000000E2   0021               MOVS     R1,#+0
   \   000000E4   0170               STRB     R1,[R0, #+0]
   9815                        ProgramChange=1;
   \   000000E6   3248               LDR      R0,??Node_Event_0+0x2C  ;; ProgramChange
   \   000000E8   0121               MOVS     R1,#+1
   \   000000EA   0170               STRB     R1,[R0, #+0]
   9816                        RefreshNeuronsList(&gProg);
   \   000000EC   2E48               LDR      R0,??Node_Event_0+0x24  ;; gProg
   \   000000EE   ........           BL       RefreshNeuronsList
   9817                        SetTask(&gProg);
   \   000000F2   2D48               LDR      R0,??Node_Event_0+0x24  ;; gProg
   \   000000F4   ........           BL       SetTask
   9818                        TransQuality.SlowMensur[CurrentNode-1]=0;
   \   000000F8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000FA   240E               LSRS     R4,R4,#+24
   \   000000FC   2148               LDR      R0,??Node_Event_0  ;; TransQuality
   \   000000FE   0019               ADDS     R0,R0,R4
   \   00000100   0021               MOVS     R1,#+0
   \   00000102   8170               STRB     R1,[R0, #+2]
   9819                        TransQuality.QuickMensur[CurrentNode-1]=0;
   \   00000104   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000106   240E               LSRS     R4,R4,#+24
   \   00000108   1E48               LDR      R0,??Node_Event_0  ;; TransQuality
   \   0000010A   0019               ADDS     R0,R0,R4
   \   0000010C   2530               ADDS     R0,R0,#+37
   \   0000010E   0021               MOVS     R1,#+0
   \   00000110   0170               STRB     R1,[R0, #+0]
   9820                        TransQuality.Mensur[CurrentNode-1]=0;
   \   00000112   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000114   240E               LSRS     R4,R4,#+24
   \   00000116   0420               MOVS     R0,#+4
   \   00000118   4443               MULS     R4,R0,R4
   \   0000011A   1A48               LDR      R0,??Node_Event_0  ;; TransQuality
   \   0000011C   0019               ADDS     R0,R0,R4
   \   0000011E   0021               MOVS     R1,#+0
   \   00000120   8164               STR      R1,[R0, #+72]
   9821                        MenuLevel=(MenuLevel/10);
   \   00000122   2448               LDR      R0,??Node_Event_0+0x30  ;; MenuLevel
   \   00000124   0068               LDR      R0,[R0, #+0]
   \   00000126   0A21               MOVS     R1,#+10
   \   00000128   ........           BL       __aeabi_idivmod
   \   0000012C   2149               LDR      R1,??Node_Event_0+0x30  ;; MenuLevel
   \   0000012E   0860               STR      R0,[R1, #+0]
   \   00000130   13E0               B        ??Node_Event_5
   9822                      }
   9823                      else if (ans==3) //je¿eli zmien opis
   \                     ??Node_Event_6:
   \   00000132   032D               CMP      R5,#+3
   \   00000134   0AD1               BNE      ??Node_Event_7
   9824                      {
   9825                        MenuLevel=(MenuLevel/10)*10+2;
   \   00000136   1F48               LDR      R0,??Node_Event_0+0x30  ;; MenuLevel
   \   00000138   0068               LDR      R0,[R0, #+0]
   \   0000013A   0A21               MOVS     R1,#+10
   \   0000013C   ........           BL       __aeabi_idivmod
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   4843               MULS     R0,R1,R0
   \   00000144   801C               ADDS     R0,R0,#+2
   \   00000146   1B49               LDR      R1,??Node_Event_0+0x30  ;; MenuLevel
   \   00000148   0860               STR      R0,[R1, #+0]
   \   0000014A   06E0               B        ??Node_Event_5
   9826                      }
   9827                      else{
   9828                        MenuLevel=(MenuLevel*10+ans);
   \                     ??Node_Event_7:
   \   0000014C   1948               LDR      R0,??Node_Event_0+0x30  ;; MenuLevel
   \   0000014E   1949               LDR      R1,??Node_Event_0+0x30  ;; MenuLevel
   \   00000150   0968               LDR      R1,[R1, #+0]
   \   00000152   0A22               MOVS     R2,#+10
   \   00000154   5143               MULS     R1,R2,R1
   \   00000156   4919               ADDS     R1,R1,R5
   \   00000158   0160               STR      R1,[R0, #+0]
   9829                      }
   9830                    }
   9831                     if (ans<0) {
   \                     ??Node_Event_5:
   \   0000015A   002D               CMP      R5,#+0
   \   0000015C   0CD5               BPL      ??Node_Event_8
   9832                      MenuLevel=(MenuLevel/10);
   \   0000015E   1548               LDR      R0,??Node_Event_0+0x30  ;; MenuLevel
   \   00000160   0068               LDR      R0,[R0, #+0]
   \   00000162   0A21               MOVS     R1,#+10
   \   00000164   ........           BL       __aeabi_idivmod
   \   00000168   1249               LDR      R1,??Node_Event_0+0x30  ;; MenuLevel
   \   0000016A   0860               STR      R0,[R1, #+0]
   9833                      NeuronNrChange=0;
   \   0000016C   1248               LDR      R0,??Node_Event_0+0x34  ;; NeuronNrChange
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   0170               STRB     R1,[R0, #+0]
   9834                      NeuronIdChange=0;
   \   00000172   1248               LDR      R0,??Node_Event_0+0x38  ;; NeuronIdChange
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   0160               STR      R1,[R0, #+0]
   9835                    }
   9836                    MenuPaint();
   \                     ??Node_Event_8:
   \   00000178   ........           BL       MenuPaint
   9837                    } 
   9838                }//_______________________________________________________________________
   \                     ??Node_Event_4:
   \   0000017C   01B0               ADD      SP,SP,#+4
   \   0000017E   30BC               POP      {R4,R5}
   \   00000180   01BC               POP      {R0}
   \   00000182   0047               BX       R0               ;; return
   \                     ??Node_Event_0:
   \   00000184   ........           DC32     TransQuality
   \   00000188   ........           DC32     Y_down
   \   0000018C   ........           DC32     X_down
   \   00000190   ........           DC32     Y_up
   \   00000194   ........           DC32     X_up
   \   00000198   ........           DC32     RF_NodeTest + 4
   \   0000019C   ........           DC32     RF_NodeTest + 8
   \   000001A0   ........           DC32     RF_NodeTest + 12
   \   000001A4   94C00000           DC32     0xc094
   \   000001A8   ........           DC32     gProg
   \   000001AC   ........           DC32     NeuronsList
   \   000001B0   ........           DC32     ProgramChange
   \   000001B4   ........           DC32     MenuLevel
   \   000001B8   ........           DC32     NeuronNrChange
   \   000001BC   ........           DC32     NeuronIdChange
   9839          
   9840                 
   9841          
   9842          
   9843          
   9844                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9845                void NodeTestTrans_Paint(char CurrentNode)
   9846                {  
   \                     NodeTestTrans_Paint:
   \   00000000   7FB5               PUSH     {R0-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   9847                     List_Paint(Speech[g_leng].TestTrans,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   5AA0               ADR      R0,??NodeTestTrans_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   5748               LDR      R0,??NodeTestTrans_Paint_0+0x4  ;; 0x88e
   \   0000002A   584D               LDR      R5,??NodeTestTrans_Paint_0+0x8  ;; g_leng
   \   0000002C   2D68               LDR      R5,[R5, #+0]
   \   0000002E   584E               LDR      R6,??NodeTestTrans_Paint_0+0xC  ;; 0xa7d
   \   00000030   7543               MULS     R5,R6,R5
   \   00000032   584E               LDR      R6,??NodeTestTrans_Paint_0+0x10  ;; Speech
   \   00000034   7519               ADDS     R5,R6,R5
   \   00000036   2818               ADDS     R0,R5,R0
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   9848                     RF_NodeTest.NodeNr=CurrentNode;
   \   0000003E   5648               LDR      R0,??NodeTestTrans_Paint_0+0x14  ;; RF_NodeTest
   \   00000040   0470               STRB     R4,[R0, #+0]
   9849                     
   9850                      char txt[10];
   9851                     
   9852                    //H_line(0,110,63,1); // (char X, int Y, char lenght, char typ)
   9853                     Label(Speech[g_leng].Dane_wyslane,0,2,100,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   0821               MOVS     R1,#+8
   \   00000050   0F20               MOVS     R0,#+15
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   6423               MOVS     R3,#+100
   \   00000056   0222               MOVS     R2,#+2
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   5048               LDR      R0,??NodeTestTrans_Paint_0+0x18  ;; 0x89d
   \   0000005C   4B4C               LDR      R4,??NodeTestTrans_Paint_0+0x8  ;; g_leng
   \   0000005E   2468               LDR      R4,[R4, #+0]
   \   00000060   4B4D               LDR      R5,??NodeTestTrans_Paint_0+0xC  ;; 0xa7d
   \   00000062   6C43               MULS     R4,R5,R4
   \   00000064   4B4D               LDR      R5,??NodeTestTrans_Paint_0+0x10  ;; Speech
   \   00000066   2C19               ADDS     R4,R5,R4
   \   00000068   2018               ADDS     R0,R4,R0
   \   0000006A   ........           BL       Label
   \   0000006E   06B0               ADD      SP,SP,#+24
   9854                     H_line(0,80,63,1); // (char X, int Y, char lenght, char typ)
   \   00000070   0123               MOVS     R3,#+1
   \   00000072   3F22               MOVS     R2,#+63
   \   00000074   5021               MOVS     R1,#+80
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   ........           BL       H_line
   9855                     Label(Speech[g_leng].Dane_odebrane,0,2,70,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0020               MOVS     R0,#+0
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   7F21               MOVS     R1,#+127
   \   00000084   0120               MOVS     R0,#+1
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   0821               MOVS     R1,#+8
   \   0000008A   0F20               MOVS     R0,#+15
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   4623               MOVS     R3,#+70
   \   00000090   0222               MOVS     R2,#+2
   \   00000092   0021               MOVS     R1,#+0
   \   00000094   4248               LDR      R0,??NodeTestTrans_Paint_0+0x1C  ;; 0x8ac
   \   00000096   3D4C               LDR      R4,??NodeTestTrans_Paint_0+0x8  ;; g_leng
   \   00000098   2468               LDR      R4,[R4, #+0]
   \   0000009A   3D4D               LDR      R5,??NodeTestTrans_Paint_0+0xC  ;; 0xa7d
   \   0000009C   6C43               MULS     R4,R5,R4
   \   0000009E   3D4D               LDR      R5,??NodeTestTrans_Paint_0+0x10  ;; Speech
   \   000000A0   2C19               ADDS     R4,R5,R4
   \   000000A2   2018               ADDS     R0,R4,R0
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   9856                     H_line(0,50,63,1); // (char X, int Y, char lenght, char typ)
   \   000000AA   0123               MOVS     R3,#+1
   \   000000AC   3F22               MOVS     R2,#+63
   \   000000AE   3221               MOVS     R1,#+50
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   ........           BL       H_line
   9857                     Label(Speech[g_leng].Dane_utracone,0,2,40,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   0020               MOVS     R0,#+0
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   7F21               MOVS     R1,#+127
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   0821               MOVS     R1,#+8
   \   000000C4   0F20               MOVS     R0,#+15
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   2823               MOVS     R3,#+40
   \   000000CA   0222               MOVS     R2,#+2
   \   000000CC   0021               MOVS     R1,#+0
   \   000000CE   3548               LDR      R0,??NodeTestTrans_Paint_0+0x20  ;; 0x8bb
   \   000000D0   2E4C               LDR      R4,??NodeTestTrans_Paint_0+0x8  ;; g_leng
   \   000000D2   2468               LDR      R4,[R4, #+0]
   \   000000D4   2E4D               LDR      R5,??NodeTestTrans_Paint_0+0xC  ;; 0xa7d
   \   000000D6   6C43               MULS     R4,R5,R4
   \   000000D8   2E4D               LDR      R5,??NodeTestTrans_Paint_0+0x10  ;; Speech
   \   000000DA   2C19               ADDS     R4,R5,R4
   \   000000DC   2018               ADDS     R0,R4,R0
   \   000000DE   ........           BL       Label
   \   000000E2   06B0               ADD      SP,SP,#+24
   9858          
   9859                     short Sent=RF_NodeTest.SentSyn; 
   \   000000E4   3048               LDR      R0,??NodeTestTrans_Paint_0+0x24  ;; RF_NodeTest + 8
   \   000000E6   0468               LDR      R4,[R0, #+0]
   9860                     short Recived=RF_NodeTest.Recived; 
   \   000000E8   3048               LDR      R0,??NodeTestTrans_Paint_0+0x28  ;; RF_NodeTest + 12
   \   000000EA   0568               LDR      R5,[R0, #+0]
   9861                     
   9862                     sprintf(txt, "%d", Sent);
                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000EC   2404               LSLS     R4,R4,#+16       ;; SignExtS R4,R4,#+16,#+16
   \   000000EE   2414               ASRS     R4,R4,#+16
   \   000000F0   2200               MOVS     R2,R4
   \   000000F2   2FA1               ADR      R1,??NodeTestTrans_Paint_0+0x2C  ;; 0x25, 0x64, 0x00, 0x00
   \   000000F4   6846               MOV      R0,SP
   \   000000F6   ........           BL       sprintf
   9863                     Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0020               MOVS     R0,#+0
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   7F21               MOVS     R1,#+127
   \   00000102   0120               MOVS     R0,#+1
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   2821               MOVS     R1,#+40
   \   00000108   0A20               MOVS     R0,#+10
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   5A23               MOVS     R3,#+90
   \   0000010E   3722               MOVS     R2,#+55
   \   00000110   0121               MOVS     R1,#+1
   \   00000112   06A8               ADD      R0,SP,#+24
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
   9864                            
   9865                     sprintf(txt, "%d", Recived);
   \   0000011A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000011C   2D14               ASRS     R5,R5,#+16
   \   0000011E   2A00               MOVS     R2,R5
   \   00000120   23A1               ADR      R1,??NodeTestTrans_Paint_0+0x2C  ;; 0x25, 0x64, 0x00, 0x00
   \   00000122   6846               MOV      R0,SP
   \   00000124   ........           BL       sprintf
   9866                     Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   0020               MOVS     R0,#+0
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   7F21               MOVS     R1,#+127
   \   00000130   0120               MOVS     R0,#+1
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   2821               MOVS     R1,#+40
   \   00000136   0A20               MOVS     R0,#+10
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   3C23               MOVS     R3,#+60
   \   0000013C   3722               MOVS     R2,#+55
   \   0000013E   0121               MOVS     R1,#+1
   \   00000140   06A8               ADD      R0,SP,#+24
   \   00000142   ........           BL       Label
   \   00000146   06B0               ADD      SP,SP,#+24
   9867                            
   9868                     sprintf(txt, "%d", Sent-Recived);
   \   00000148   2404               LSLS     R4,R4,#+16       ;; SignExtS R4,R4,#+16,#+16
   \   0000014A   2414               ASRS     R4,R4,#+16
   \   0000014C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000014E   2D14               ASRS     R5,R5,#+16
   \   00000150   621B               SUBS     R2,R4,R5
   \   00000152   17A1               ADR      R1,??NodeTestTrans_Paint_0+0x2C  ;; 0x25, 0x64, 0x00, 0x00
   \   00000154   6846               MOV      R0,SP
   \   00000156   ........           BL       sprintf
   9869                     Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   0090               STR      R0,[SP, #+0]
   \   00000160   7F21               MOVS     R1,#+127
   \   00000162   0120               MOVS     R0,#+1
   \   00000164   03B4               PUSH     {R0,R1}
   \   00000166   2821               MOVS     R1,#+40
   \   00000168   0A20               MOVS     R0,#+10
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   1E23               MOVS     R3,#+30
   \   0000016E   3722               MOVS     R2,#+55
   \   00000170   0121               MOVS     R1,#+1
   \   00000172   06A8               ADD      R0,SP,#+24
   \   00000174   ........           BL       Label
   \   00000178   06B0               ADD      SP,SP,#+24
   9870                    
   9871                     
   9872                }//_______________________________________________________________________ 
   \   0000017A   04B0               ADD      SP,SP,#+16
   \   0000017C   70BC               POP      {R4-R6}
   \   0000017E   01BC               POP      {R0}
   \   00000180   0047               BX       R0               ;; return
   \   00000182   C046               Nop      
   \                     ??NodeTestTrans_Paint_0:
   \   00000184   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000188   8E080000           DC32     0x88e
   \   0000018C   ........           DC32     g_leng
   \   00000190   7D0A0000           DC32     0xa7d
   \   00000194   ........           DC32     Speech
   \   00000198   ........           DC32     RF_NodeTest
   \   0000019C   9D080000           DC32     0x89d
   \   000001A0   AC080000           DC32     0x8ac
   \   000001A4   BB080000           DC32     0x8bb
   \   000001A8   ........           DC32     RF_NodeTest + 8
   \   000001AC   ........           DC32     RF_NodeTest + 12
   \   000001B0   25640000           DC8      0x25, 0x64, 0x00, 0x00
   9873          
   9874                                  
   9875          
   9876                //*-----------------------------------------------------------------------

   \                                 In section .bss, align 2
   9877                short ValNTT=0;
   \                     ValNTT:
   \   00000000                      DS8 2

   \                                 In section Debug.txt, align 4, keep-with-next
   9878                void NodeTestTrans_Event(char CurrentNode)
   9879                {
   \                     NodeTestTrans_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   9880                  int ans;
   9881                 
   9882                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1A48               LDR      R0,??NodeTestTrans_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1948               LDR      R0,??NodeTestTrans_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1948               LDR      R0,??NodeTestTrans_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1848               LDR      R0,??NodeTestTrans_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   9883            
   9884                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   1FD0               BEQ      ??NodeTestTrans_Event_1
   9885                    {
   9886                    if (ans<0) {
   \   00000030   0028               CMP      R0,#+0
   \   00000032   1BD5               BPL      ??NodeTestTrans_Event_2
   9887                      ValNTT=0;
   \   00000034   1448               LDR      R0,??NodeTestTrans_Event_0+0x10  ;; ValNTT
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   0180               STRH     R1,[R0, #+0]
   9888                      MenuLevel=(MenuLevel/100);
   \   0000003A   1448               LDR      R0,??NodeTestTrans_Event_0+0x14  ;; MenuLevel
   \   0000003C   0068               LDR      R0,[R0, #+0]
   \   0000003E   6421               MOVS     R1,#+100
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   1149               LDR      R1,??NodeTestTrans_Event_0+0x14  ;; MenuLevel
   \   00000046   0860               STR      R0,[R1, #+0]
   9889                     NeuronNrChange=0;
   \   00000048   1148               LDR      R0,??NodeTestTrans_Event_0+0x18  ;; NeuronNrChange
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   0170               STRB     R1,[R0, #+0]
   9890                     NeuronIdChange=0;
   \   0000004E   1148               LDR      R0,??NodeTestTrans_Event_0+0x1C  ;; NeuronIdChange
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   0160               STR      R1,[R0, #+0]
   9891                     RF_NodeTest.NodeNr=0;
   \   00000054   1048               LDR      R0,??NodeTestTrans_Event_0+0x20  ;; RF_NodeTest
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0170               STRB     R1,[R0, #+0]
   9892                     RF_NodeTest.Sent=0;
   \   0000005A   1048               LDR      R0,??NodeTestTrans_Event_0+0x24  ;; RF_NodeTest + 4
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   0160               STR      R1,[R0, #+0]
   9893                     RF_NodeTest.SentSyn=0;   
   \   00000060   0F48               LDR      R0,??NodeTestTrans_Event_0+0x28  ;; RF_NodeTest + 8
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0160               STR      R1,[R0, #+0]
   9894                     RF_NodeTest.Recived=0;
   \   00000066   0F48               LDR      R0,??NodeTestTrans_Event_0+0x2C  ;; RF_NodeTest + 12
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0160               STR      R1,[R0, #+0]
   9895                    }
   9896                    MenuPaint();                ;
   \                     ??NodeTestTrans_Event_2:
   \   0000006C   ........           BL       MenuPaint
   9897                    } 
   9898                }//_______________________________________________________________________
   \                     ??NodeTestTrans_Event_1:
   \   00000070   10BC               POP      {R4}
   \   00000072   01BC               POP      {R0}
   \   00000074   0047               BX       R0               ;; return
   \   00000076   C046               Nop      
   \                     ??NodeTestTrans_Event_0:
   \   00000078   ........           DC32     Y_down
   \   0000007C   ........           DC32     X_down
   \   00000080   ........           DC32     Y_up
   \   00000084   ........           DC32     X_up
   \   00000088   ........           DC32     ValNTT
   \   0000008C   ........           DC32     MenuLevel
   \   00000090   ........           DC32     NeuronNrChange
   \   00000094   ........           DC32     NeuronIdChange
   \   00000098   ........           DC32     RF_NodeTest
   \   0000009C   ........           DC32     RF_NodeTest + 4
   \   000000A0   ........           DC32     RF_NodeTest + 8
   \   000000A4   ........           DC32     RF_NodeTest + 12
   9899          
   9900          
   9901          
   9902          
   9903          
   9904                //*------------------------------------------------³-----------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9905                void NodeTestTrans_Refresh(char CurrentNode)
   9906                {  
   \                     NodeTestTrans_Refresh:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   9907                     char txt[10];
   9908                     char il;
   9909                     static char Dziel8;
   9910                     if (Dziel8<8) {Dziel8++;}else
   \   00000002   2E48               LDR      R0,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0828               CMP      R0,#+8
   \   00000008   05D2               BCS      ??NodeTestTrans_Refresh_1
   \   0000000A   2C48               LDR      R0,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   0000000C   2B49               LDR      R1,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   0000000E   0978               LDRB     R1,[R1, #+0]
   \   00000010   491C               ADDS     R1,R1,#+1
   \   00000012   0170               STRB     R1,[R0, #+0]
   \   00000014   4DE0               B        ??NodeTestTrans_Refresh_2
   9911                     {
   9912                        Dziel8=0;
   \                     ??NodeTestTrans_Refresh_1:
   \   00000016   2948               LDR      R0,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0170               STRB     R1,[R0, #+0]
   9913                        short Sent=RF_NodeTest.SentSyn; 
   \   0000001C   2848               LDR      R0,??NodeTestTrans_Refresh_0+0x4  ;; RF_NodeTest + 8
   \   0000001E   0468               LDR      R4,[R0, #+0]
   9914                        short Recived=RF_NodeTest.Recived; 
   \   00000020   2848               LDR      R0,??NodeTestTrans_Refresh_0+0x8  ;; RF_NodeTest + 12
   \   00000022   0568               LDR      R5,[R0, #+0]
   9915                     
   9916                        sprintf(txt, "%d", Sent);
                               ^
Warning[Pe223]: function "sprintf" declared implicitly

             char il;
                  ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\ScreenMENU2.c",9908  Warning[Pe177]: 
          variable "il" was declared but never referenced
   \   00000024   2404               LSLS     R4,R4,#+16       ;; SignExtS R4,R4,#+16,#+16
   \   00000026   2414               ASRS     R4,R4,#+16
   \   00000028   2200               MOVS     R2,R4
   \   0000002A   27A1               ADR      R1,??NodeTestTrans_Refresh_0+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   0000002C   6846               MOV      R0,SP
   \   0000002E   ........           BL       sprintf
   9917                        Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   7F21               MOVS     R1,#+127
   \   0000003A   0120               MOVS     R0,#+1
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   2821               MOVS     R1,#+40
   \   00000040   0A20               MOVS     R0,#+10
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   5A23               MOVS     R3,#+90
   \   00000046   3722               MOVS     R2,#+55
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   06A8               ADD      R0,SP,#+24
   \   0000004C   ........           BL       Label
   \   00000050   06B0               ADD      SP,SP,#+24
   9918                            
   9919                        sprintf(txt, "%d", Recived);
   \   00000052   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000054   2D14               ASRS     R5,R5,#+16
   \   00000056   2A00               MOVS     R2,R5
   \   00000058   1BA1               ADR      R1,??NodeTestTrans_Refresh_0+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   0000005A   6846               MOV      R0,SP
   \   0000005C   ........           BL       sprintf
   9920                        Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   7F21               MOVS     R1,#+127
   \   00000068   0120               MOVS     R0,#+1
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   2821               MOVS     R1,#+40
   \   0000006E   0A20               MOVS     R0,#+10
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   3C23               MOVS     R3,#+60
   \   00000074   3722               MOVS     R2,#+55
   \   00000076   0121               MOVS     R1,#+1
   \   00000078   06A8               ADD      R0,SP,#+24
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   9921                            
   9922                        sprintf(txt, "%d", Sent-Recived);
   \   00000080   2404               LSLS     R4,R4,#+16       ;; SignExtS R4,R4,#+16,#+16
   \   00000082   2414               ASRS     R4,R4,#+16
   \   00000084   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000086   2D14               ASRS     R5,R5,#+16
   \   00000088   621B               SUBS     R2,R4,R5
   \   0000008A   0FA1               ADR      R1,??NodeTestTrans_Refresh_0+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   0000008C   6846               MOV      R0,SP
   \   0000008E   ........           BL       sprintf
   9923                        Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   7F21               MOVS     R1,#+127
   \   0000009A   0120               MOVS     R0,#+1
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   2821               MOVS     R1,#+40
   \   000000A0   0A20               MOVS     R0,#+10
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   1E23               MOVS     R3,#+30
   \   000000A6   3722               MOVS     R2,#+55
   \   000000A8   0121               MOVS     R1,#+1
   \   000000AA   06A8               ADD      R0,SP,#+24
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   9924                    
   9925                     }
   9926                }//_______________________________________________________________________ 
   \                     ??NodeTestTrans_Refresh_2:
   \   000000B2   03B0               ADD      SP,SP,#+12
   \   000000B4   30BC               POP      {R4,R5}
   \   000000B6   01BC               POP      {R0}
   \   000000B8   0047               BX       R0               ;; return
   \   000000BA   C046               Nop      
   \                     ??NodeTestTrans_Refresh_0:
   \   000000BC   ........           DC32     ??Dziel8
   \   000000C0   ........           DC32     RF_NodeTest + 8
   \   000000C4   ........           DC32     RF_NodeTest + 12
   \   000000C8   25640000           DC8      0x25, 0x64, 0x00, 0x00

   \                                 In section .bss, align 1
   \                     ??Dziel8:
   \   00000000                      DS8 1
   9927          
   9928          
   9929          

   \                                 In section .bss, align 1
   9930                char FirstNodeStanIO_Paint=0;
   \                     FirstNodeStanIO_Paint:
   \   00000000                      DS8 1
   9931                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9932                void NodeStanIO_Paint(char CurrentNode)
   9933                {  
   \                     NodeStanIO_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   9934                      char txt[8];
   9935                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6846               MOV      R0,SP
   \   00000006   4E21               MOVS     R1,#+78
   \   00000008   0170               STRB     R1,[R0, #+0]
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   6F21               MOVS     R1,#+111
   \   0000000E   4170               STRB     R1,[R0, #+1]
   \   00000010   6846               MOV      R0,SP
   \   00000012   6421               MOVS     R1,#+100
   \   00000014   8170               STRB     R1,[R0, #+2]
   \   00000016   6846               MOV      R0,SP
   \   00000018   6521               MOVS     R1,#+101
   \   0000001A   C170               STRB     R1,[R0, #+3]
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   2021               MOVS     R1,#+32
   \   00000020   0171               STRB     R1,[R0, #+4]
   9936                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000022   0222               MOVS     R2,#+2
   \   00000024   6946               MOV      R1,SP
   \   00000026   491D               ADDS     R1,R1,#+5
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CharToStr
   \   00000032   0500               MOVS     R5,R0
   9937                  
   9938                     List_Paint(txt,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   0FA0               ADR      R0,??NodeStanIO_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0321               MOVS     R1,#+3
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   6C22               MOVS     R2,#+108
   \   00000056   0121               MOVS     R1,#+1
   \   00000058   0AA8               ADD      R0,SP,#+40
   \   0000005A   ........           BL       List_Paint
   \   0000005E   0AB0               ADD      SP,SP,#+40
   9939           /*
   9940                     CleanCanvasArea(14,6,2,95,1);
   9941                     CleanCanvasArea(14+32,6,2,95,1);
   9942          
   9943                     Label("DI",2,2,99,2,25,1,127,1);
   9944                     Label("DO",2,34,99,2,25,1,127,1); 
   9945             */        
   9946                     NodeStanIO_Refresh(CurrentNode);
   \   00000060   2000               MOVS     R0,R4
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   ........           BL       NodeStanIO_Refresh
   9947                     
   9948                     FirstNodeStanIO_Paint=1;
   \   0000006A   0848               LDR      R0,??NodeStanIO_Paint_0+0x4  ;; FirstNodeStanIO_Paint
   \   0000006C   0121               MOVS     R1,#+1
   \   0000006E   0170               STRB     R1,[R0, #+0]
   9949                     AddRfTask(SQ, CurrentNode, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   00000070   0022               MOVS     R2,#+0
   \   00000072   2100               MOVS     R1,R4
   \   00000074   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000076   090E               LSRS     R1,R1,#+24
   \   00000078   0220               MOVS     R0,#+2
   \   0000007A   ........           BL       AddRfTask
   9950                }//_______________________________________________________________________ 
   \   0000007E   03B0               ADD      SP,SP,#+12
   \   00000080   30BC               POP      {R4,R5}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??NodeStanIO_Paint_0:
   \   00000088   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000008C   ........           DC32     FirstNodeStanIO_Paint
   9951          
   9952          
   9953          
   9954          
   9955                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9956                void NodeStanIO_Event(char CurrentNode)
   9957                {
   \                     NodeStanIO_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   9958                  int ans;
   9959                  char NP;
   9960                 
   9961                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0020               MOVS     R0,#+0
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   5448               LDR      R0,??NodeStanIO_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   5448               LDR      R0,??NodeStanIO_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   5348               LDR      R0,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   5348               LDR      R0,??NodeStanIO_Event_0+0xC  ;; X_up
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   405F               LDRSH    R0,[R0, R5]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   9962            
   9963                  
   9964                  
   9965                  NP=0;
   \   0000002E   0022               MOVS     R2,#+0
   9966                  for (char j=0; j<2; j++) 
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   00E0               B        ??NodeStanIO_Event_1
   \                     ??NodeStanIO_Event_2:
   \   00000034   491C               ADDS     R1,R1,#+1
   \                     ??NodeStanIO_Event_1:
   \   00000036   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000038   090E               LSRS     R1,R1,#+24
   \   0000003A   0229               CMP      R1,#+2
   \   0000003C   75D2               BCS      ??NodeStanIO_Event_3
   9967                    for (char i=0; i<8; i++)
   \   0000003E   0023               MOVS     R3,#+0
   \   00000040   21E0               B        ??NodeStanIO_Event_4
   9968                      {  
   9969                        
   9970                        if ((X_up>34+15*j) && (X_up<34+11+15*j) && (Y_up>87-i*12) && (Y_up<87+11-i*12)) 
   9971                        {
   9972                          if  ((MainStage.StageQ[CurrentNode].Port>>NP)&0x1)
   9973                          {
   9974                             MainStage.StageQ[CurrentNode].Port &= ~(1<<NP);
   9975                          }else{
   9976                             MainStage.StageQ[CurrentNode].Port |= (1<<NP);
   \                     ??NodeStanIO_Event_5:
   \   00000042   4C4E               LDR      R6,??NodeStanIO_Event_0+0x10  ;; 0x3a2
   \   00000044   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000046   240E               LSRS     R4,R4,#+24
   \   00000048   1625               MOVS     R5,#+22
   \   0000004A   6543               MULS     R5,R4,R5
   \   0000004C   4A4F               LDR      R7,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   0000004E   7F19               ADDS     R7,R7,R5
   \   00000050   40B5               PUSH     {R6,LR}
   \   00000052   484E               LDR      R6,??NodeStanIO_Event_0+0x10  ;; 0x3a2
   \   00000054   B446               MOV      R12,R6
   \   00000056   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000058   240E               LSRS     R4,R4,#+24
   \   0000005A   1626               MOVS     R6,#+22
   \   0000005C   6643               MULS     R6,R4,R6
   \   0000005E   464D               LDR      R5,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   00000060   AD19               ADDS     R5,R5,R6
   \   00000062   6646               MOV      R6,R12
   \   00000064   AE5B               LDRH     R6,[R5, R6]
   \   00000066   0125               MOVS     R5,#+1
   \   00000068   9540               LSLS     R5,R5,R2
   \   0000006A   3543               ORRS     R5,R5,R6
   \   0000006C   009E               LDR      R6,[SP, #0]
   \   0000006E   02B0               ADD      SP,SP,#+8
   \   00000070   BD53               STRH     R5,[R7, R6]
   9977                          }
   9978                          MainStage.SendStageChange[CurrentNode]=ChangeStageFlag;
   \                     ??NodeStanIO_Event_6:
   \   00000072   424D               LDR      R5,??NodeStanIO_Event_0+0x18  ;; 0x6eb
   \   00000074   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000076   240E               LSRS     R4,R4,#+24
   \   00000078   3F4E               LDR      R6,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   0000007A   3619               ADDS     R6,R6,R4
   \   0000007C   404F               LDR      R7,??NodeStanIO_Event_0+0x1C  ;; ChangeStageFlag
   \   0000007E   3F78               LDRB     R7,[R7, #+0]
   \   00000080   7755               STRB     R7,[R6, R5]
   9979                        }
   9980                       NP++;
   \                     ??NodeStanIO_Event_7:
   \   00000082   521C               ADDS     R2,R2,#+1
   \   00000084   5B1C               ADDS     R3,R3,#+1
   \                     ??NodeStanIO_Event_4:
   \   00000086   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000088   1B0E               LSRS     R3,R3,#+24
   \   0000008A   082B               CMP      R3,#+8
   \   0000008C   D2D2               BCS      ??NodeStanIO_Event_2
   \   0000008E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000090   090E               LSRS     R1,R1,#+24
   \   00000092   0F25               MOVS     R5,#+15
   \   00000094   4D43               MULS     R5,R1,R5
   \   00000096   2235               ADDS     R5,R5,#+34
   \   00000098   354E               LDR      R6,??NodeStanIO_Event_0+0xC  ;; X_up
   \   0000009A   0027               MOVS     R7,#+0
   \   0000009C   F65F               LDRSH    R6,[R6, R7]
   \   0000009E   B542               CMP      R5,R6
   \   000000A0   EFDA               BGE      ??NodeStanIO_Event_7
   \   000000A2   334D               LDR      R5,??NodeStanIO_Event_0+0xC  ;; X_up
   \   000000A4   0026               MOVS     R6,#+0
   \   000000A6   AD5F               LDRSH    R5,[R5, R6]
   \   000000A8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000AA   090E               LSRS     R1,R1,#+24
   \   000000AC   0F26               MOVS     R6,#+15
   \   000000AE   4E43               MULS     R6,R1,R6
   \   000000B0   2D36               ADDS     R6,R6,#+45
   \   000000B2   B542               CMP      R5,R6
   \   000000B4   E5DA               BGE      ??NodeStanIO_Event_7
   \   000000B6   5725               MOVS     R5,#+87
   \   000000B8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000BA   1B0E               LSRS     R3,R3,#+24
   \   000000BC   0C26               MOVS     R6,#+12
   \   000000BE   5E43               MULS     R6,R3,R6
   \   000000C0   AD1B               SUBS     R5,R5,R6
   \   000000C2   2A4E               LDR      R6,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   000000C4   0027               MOVS     R7,#+0
   \   000000C6   F65F               LDRSH    R6,[R6, R7]
   \   000000C8   B542               CMP      R5,R6
   \   000000CA   DADA               BGE      ??NodeStanIO_Event_7
   \   000000CC   274D               LDR      R5,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   000000CE   0026               MOVS     R6,#+0
   \   000000D0   AD5F               LDRSH    R5,[R5, R6]
   \   000000D2   6226               MOVS     R6,#+98
   \   000000D4   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000D6   1B0E               LSRS     R3,R3,#+24
   \   000000D8   0C27               MOVS     R7,#+12
   \   000000DA   5F43               MULS     R7,R3,R7
   \   000000DC   F61B               SUBS     R6,R6,R7
   \   000000DE   B542               CMP      R5,R6
   \   000000E0   CFDA               BGE      ??NodeStanIO_Event_7
   \   000000E2   244D               LDR      R5,??NodeStanIO_Event_0+0x10  ;; 0x3a2
   \   000000E4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000E6   240E               LSRS     R4,R4,#+24
   \   000000E8   1626               MOVS     R6,#+22
   \   000000EA   6643               MULS     R6,R4,R6
   \   000000EC   224F               LDR      R7,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   000000EE   BE19               ADDS     R6,R7,R6
   \   000000F0   755B               LDRH     R5,[R6, R5]
   \   000000F2   1541               ASRS     R5,R5,R2
   \   000000F4   ED07               LSLS     R5,R5,#+31
   \   000000F6   A4D5               BPL      ??NodeStanIO_Event_5
   \   000000F8   1E4D               LDR      R5,??NodeStanIO_Event_0+0x10  ;; 0x3a2
   \   000000FA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000FC   240E               LSRS     R4,R4,#+24
   \   000000FE   1626               MOVS     R6,#+22
   \   00000100   6643               MULS     R6,R4,R6
   \   00000102   1D4F               LDR      R7,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   00000104   BF19               ADDS     R7,R7,R6
   \   00000106   20B5               PUSH     {R5,LR}
   \   00000108   1A4E               LDR      R6,??NodeStanIO_Event_0+0x10  ;; 0x3a2
   \   0000010A   B446               MOV      R12,R6
   \   0000010C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000010E   240E               LSRS     R4,R4,#+24
   \   00000110   1626               MOVS     R6,#+22
   \   00000112   6643               MULS     R6,R4,R6
   \   00000114   184D               LDR      R5,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   00000116   AD19               ADDS     R5,R5,R6
   \   00000118   6646               MOV      R6,R12
   \   0000011A   AE5B               LDRH     R6,[R5, R6]
   \   0000011C   0125               MOVS     R5,#+1
   \   0000011E   9540               LSLS     R5,R5,R2
   \   00000120   AE43               BICS     R6,R6,R5
   \   00000122   009D               LDR      R5,[SP, #0]
   \   00000124   02B0               ADD      SP,SP,#+8
   \   00000126   7E53               STRH     R6,[R7, R5]
   \   00000128   A3E7               B        ??NodeStanIO_Event_6
   9981                      }
   9982                  
   9983                  
   9984                  
   9985                  if (ans)
   \                     ??NodeStanIO_Event_3:
   \   0000012A   0028               CMP      R0,#+0
   \   0000012C   16D0               BEQ      ??NodeStanIO_Event_8
   9986                    {
   9987                    if (ans<0) {
   \   0000012E   0028               CMP      R0,#+0
   \   00000130   12D5               BPL      ??NodeStanIO_Event_9
   9988                      MenuLevel=(MenuLevel/100);
   \   00000132   1448               LDR      R0,??NodeStanIO_Event_0+0x20  ;; MenuLevel
   \   00000134   0068               LDR      R0,[R0, #+0]
   \   00000136   6421               MOVS     R1,#+100
   \   00000138   ........           BL       __aeabi_idivmod
   \   0000013C   1149               LDR      R1,??NodeStanIO_Event_0+0x20  ;; MenuLevel
   \   0000013E   0860               STR      R0,[R1, #+0]
   9989                     NeuronNrChange=0;
   \   00000140   1148               LDR      R0,??NodeStanIO_Event_0+0x24  ;; NeuronNrChange
   \   00000142   0021               MOVS     R1,#+0
   \   00000144   0170               STRB     R1,[R0, #+0]
   9990                     NeuronIdChange=0;
   \   00000146   1148               LDR      R0,??NodeStanIO_Event_0+0x28  ;; NeuronIdChange
   \   00000148   0021               MOVS     R1,#+0
   \   0000014A   0160               STR      R1,[R0, #+0]
   9991                     FirstNodeStanIO_Paint=0;
   \   0000014C   1048               LDR      R0,??NodeStanIO_Event_0+0x2C  ;; FirstNodeStanIO_Paint
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   0170               STRB     R1,[R0, #+0]
   9992                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000152   1048               LDR      R0,??NodeStanIO_Event_0+0x30  ;; gProg
   \   00000154   ........           BL       SetTask
   9993                    }
   9994                    MenuPaint();
   \                     ??NodeStanIO_Event_9:
   \   00000158   ........           BL       MenuPaint
   9995                    } 
   9996                  
   9997                  
   9998                  
   9999                  
  10000                }//_______________________________________________________________________
   \                     ??NodeStanIO_Event_8:
   \   0000015C   01B0               ADD      SP,SP,#+4
   \   0000015E   F0BC               POP      {R4-R7}
   \   00000160   01BC               POP      {R0}
   \   00000162   0047               BX       R0               ;; return
   \                     ??NodeStanIO_Event_0:
   \   00000164   ........           DC32     Y_down
   \   00000168   ........           DC32     X_down
   \   0000016C   ........           DC32     Y_up
   \   00000170   ........           DC32     X_up
   \   00000174   A2030000           DC32     0x3a2
   \   00000178   ........           DC32     MainStage
   \   0000017C   EB060000           DC32     0x6eb
   \   00000180   ........           DC32     ChangeStageFlag
   \   00000184   ........           DC32     MenuLevel
   \   00000188   ........           DC32     NeuronNrChange
   \   0000018C   ........           DC32     NeuronIdChange
   \   00000190   ........           DC32     FirstNodeStanIO_Paint
   \   00000194   ........           DC32     gProg
  10001          
  10002          
  10003          
  10004                
  10005                
  10006                
  10007          
  10008          
  10009                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10010                void NodeStanIO_Refresh(char CurrentNode)
  10011                {  
   \                     NodeStanIO_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
  10012                     char Txt[6];
  10013                  
  10014                     static char Dziel5=5;
  10015                     if (MainStage.StageI[CurrentNode].Port !=(unsigned short int )0x8AAA) Dziel5=6;
   \   00000004   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000006   240E               LSRS     R4,R4,#+24
   \   00000008   1620               MOVS     R0,#+22
   \   0000000A   6043               MULS     R0,R4,R0
   \   0000000C   BF49               LDR      R1,??NodeStanIO_Refresh_0  ;; MainStage
   \   0000000E   0818               ADDS     R0,R1,R0
   \   00000010   A030               ADDS     R0,R0,#+160
   \   00000012   0088               LDRH     R0,[R0, #+0]
   \   00000014   BE49               LDR      R1,??NodeStanIO_Refresh_0+0x4  ;; 0x8aaa
   \   00000016   8842               CMP      R0,R1
   \   00000018   02D0               BEQ      ??NodeStanIO_Refresh_1
   \   0000001A   BE48               LDR      R0,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   0000001C   0621               MOVS     R1,#+6
   \   0000001E   0170               STRB     R1,[R0, #+0]
  10016                     if (Dziel5<5) {Dziel5++;}else
   \                     ??NodeStanIO_Refresh_1:
   \   00000020   BC48               LDR      R0,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   00000022   0078               LDRB     R0,[R0, #+0]
   \   00000024   0528               CMP      R0,#+5
   \   00000026   05D2               BCS      ??NodeStanIO_Refresh_2
   \   00000028   BA48               LDR      R0,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   0000002A   BA49               LDR      R1,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   0000002C   0978               LDRB     R1,[R1, #+0]
   \   0000002E   491C               ADDS     R1,R1,#+1
   \   00000030   0170               STRB     R1,[R0, #+0]
   \   00000032   C8E1               B        ??NodeStanIO_Refresh_3
  10017                     {
  10018                       Dziel5=0;
   \                     ??NodeStanIO_Refresh_2:
   \   00000034   B748               LDR      R0,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   0170               STRB     R1,[R0, #+0]
  10019                        if (MainStage.StageI[CurrentNode].Port !=(unsigned short int )0x8AAA) //je¿eli dane wiarygodne
   \   0000003A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000003C   240E               LSRS     R4,R4,#+24
   \   0000003E   1620               MOVS     R0,#+22
   \   00000040   6043               MULS     R0,R4,R0
   \   00000042   B249               LDR      R1,??NodeStanIO_Refresh_0  ;; MainStage
   \   00000044   0818               ADDS     R0,R1,R0
   \   00000046   A030               ADDS     R0,R0,#+160
   \   00000048   0088               LDRH     R0,[R0, #+0]
   \   0000004A   B149               LDR      R1,??NodeStanIO_Refresh_0+0x4  ;; 0x8aaa
   \   0000004C   8842               CMP      R0,R1
   \   0000004E   00D1               BNE      .+4
   \   00000050   62E1               B        ??NodeStanIO_Refresh_4
  10020                         {
  10021                       
  10022                                     
  10023                                     CleanCanvasArea(1,3,61,95,0);
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   5F23               MOVS     R3,#+95
   \   0000005A   3D22               MOVS     R2,#+61
   \   0000005C   0321               MOVS     R1,#+3
   \   0000005E   0120               MOVS     R0,#+1
   \   00000060   ........           BL       CleanCanvasArea
   \   00000064   02B0               ADD      SP,SP,#+8
  10024                                     CleanCanvasArea(14,6,2,95,1);
   \   00000066   82B0               SUB      SP,SP,#+8
   \   00000068   0120               MOVS     R0,#+1
   \   0000006A   0090               STR      R0,[SP, #+0]
   \   0000006C   5F23               MOVS     R3,#+95
   \   0000006E   0222               MOVS     R2,#+2
   \   00000070   0621               MOVS     R1,#+6
   \   00000072   0E20               MOVS     R0,#+14
   \   00000074   ........           BL       CleanCanvasArea
   \   00000078   02B0               ADD      SP,SP,#+8
  10025                                     CleanCanvasArea(14+32,6,2,95,1);
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   5F23               MOVS     R3,#+95
   \   00000082   0222               MOVS     R2,#+2
   \   00000084   0621               MOVS     R1,#+6
   \   00000086   2E20               MOVS     R0,#+46
   \   00000088   ........           BL       CleanCanvasArea
   \   0000008C   02B0               ADD      SP,SP,#+8
  10026                          
  10027                                     Label("DI",2,2,99,2,25,1,127,1);
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   7F21               MOVS     R1,#+127
   \   00000096   0120               MOVS     R0,#+1
   \   00000098   03B4               PUSH     {R0,R1}
   \   0000009A   1921               MOVS     R1,#+25
   \   0000009C   0220               MOVS     R0,#+2
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   6323               MOVS     R3,#+99
   \   000000A2   0222               MOVS     R2,#+2
   \   000000A4   0221               MOVS     R1,#+2
   \   000000A6   CAA0               ADR      R0,??NodeStanIO_Refresh_5  ;; 0x44, 0x49, 0x00, 0x00
   \   000000A8   ........           BL       Label
   \   000000AC   06B0               ADD      SP,SP,#+24
  10028                                     Label("DO",2,34,99,2,25,1,127,1); 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   7F21               MOVS     R1,#+127
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   03B4               PUSH     {R0,R1}
   \   000000BA   1921               MOVS     R1,#+25
   \   000000BC   0220               MOVS     R0,#+2
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   6323               MOVS     R3,#+99
   \   000000C2   2222               MOVS     R2,#+34
   \   000000C4   0221               MOVS     R1,#+2
   \   000000C6   C3A0               ADR      R0,??NodeStanIO_Refresh_5+0x4  ;; 0x44, 0x4F, 0x00, 0x00
   \   000000C8   ........           BL       Label
   \   000000CC   06B0               ADD      SP,SP,#+24
  10029          
  10030                                      char NP=0;
   \   000000CE   0026               MOVS     R6,#+0
  10031                                      for (char j=0; j<2; j++) 
   \   000000D0   0025               MOVS     R5,#+0
   \   000000D2   00E0               B        ??NodeStanIO_Refresh_6
   \                     ??NodeStanIO_Refresh_7:
   \   000000D4   6D1C               ADDS     R5,R5,#+1
   \                     ??NodeStanIO_Refresh_6:
   \   000000D6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000D8   2D0E               LSRS     R5,R5,#+24
   \   000000DA   022D               CMP      R5,#+2
   \   000000DC   00D3               BCC      .+4
   \   000000DE   85E0               B        ??NodeStanIO_Refresh_8
  10032                                      for (char i=0; i<8; i++)
   \   000000E0   0027               MOVS     R7,#+0
   \   000000E2   3AE0               B        ??NodeStanIO_Refresh_9
  10033                                      {
  10034                                        if  ((MainStage.StageI[CurrentNode].Port>>NP)&0x1)
  10035                                        {
  10036                                          CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
  10037                                          CharToStr (NP, Txt, 2);
  10038                                          Label(Txt,2,3+15*j,88-i*12,2,8,1,127,1);  
  10039                                        } else{
  10040                                          CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_10:
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0B20               MOVS     R0,#+11
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   0B23               MOVS     R3,#+11
   \   000000EC   5720               MOVS     R0,#+87
   \   000000EE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000F0   3F0E               LSRS     R7,R7,#+24
   \   000000F2   0C21               MOVS     R1,#+12
   \   000000F4   7943               MULS     R1,R7,R1
   \   000000F6   421A               SUBS     R2,R0,R1
   \   000000F8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000FA   120E               LSRS     R2,R2,#+24
   \   000000FC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000FE   2D0E               LSRS     R5,R5,#+24
   \   00000100   0F21               MOVS     R1,#+15
   \   00000102   6943               MULS     R1,R5,R1
   \   00000104   891C               ADDS     R1,R1,#+2
   \   00000106   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000108   090E               LSRS     R1,R1,#+24
   \   0000010A   B348               LDR      R0,??NodeStanIO_Refresh_5+0x8  ;; Frame
   \   0000010C   ........           BL       CopyToCanvasPoint
   \   00000110   02B0               ADD      SP,SP,#+8
  10041                                          CharToStr (NP, Txt, 2);
   \   00000112   0222               MOVS     R2,#+2
   \   00000114   6946               MOV      R1,SP
   \   00000116   3000               MOVS     R0,R6
   \   00000118   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000011A   000E               LSRS     R0,R0,#+24
   \   0000011C   ........           BL       CharToStr
  10042                                          Label(Txt,2,3+15*j,88-i*12,2,8,1,127,0);  
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   7F21               MOVS     R1,#+127
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   0821               MOVS     R1,#+8
   \   0000012E   0220               MOVS     R0,#+2
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   5820               MOVS     R0,#+88
   \   00000134   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000136   3F0E               LSRS     R7,R7,#+24
   \   00000138   0C21               MOVS     R1,#+12
   \   0000013A   7943               MULS     R1,R7,R1
   \   0000013C   431A               SUBS     R3,R0,R1
   \   0000013E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000140   2D0E               LSRS     R5,R5,#+24
   \   00000142   0F22               MOVS     R2,#+15
   \   00000144   6A43               MULS     R2,R5,R2
   \   00000146   D21C               ADDS     R2,R2,#+3
   \   00000148   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000014A   120E               LSRS     R2,R2,#+24
   \   0000014C   0221               MOVS     R1,#+2
   \   0000014E   06A8               ADD      R0,SP,#+24
   \   00000150   ........           BL       Label
   \   00000154   06B0               ADD      SP,SP,#+24
  10043                                        }
  10044                                        NP++;
   \                     ??NodeStanIO_Refresh_11:
   \   00000156   761C               ADDS     R6,R6,#+1
   \   00000158   7F1C               ADDS     R7,R7,#+1
   \                     ??NodeStanIO_Refresh_9:
   \   0000015A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000015C   3F0E               LSRS     R7,R7,#+24
   \   0000015E   082F               CMP      R7,#+8
   \   00000160   B8D2               BCS      ??NodeStanIO_Refresh_7
   \   00000162   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000164   240E               LSRS     R4,R4,#+24
   \   00000166   1620               MOVS     R0,#+22
   \   00000168   6043               MULS     R0,R4,R0
   \   0000016A   6849               LDR      R1,??NodeStanIO_Refresh_0  ;; MainStage
   \   0000016C   0818               ADDS     R0,R1,R0
   \   0000016E   A030               ADDS     R0,R0,#+160
   \   00000170   0088               LDRH     R0,[R0, #+0]
   \   00000172   3041               ASRS     R0,R0,R6
   \   00000174   C007               LSLS     R0,R0,#+31
   \   00000176   B5D5               BPL      ??NodeStanIO_Refresh_10
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0B20               MOVS     R0,#+11
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   0B23               MOVS     R3,#+11
   \   00000180   5720               MOVS     R0,#+87
   \   00000182   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000184   3F0E               LSRS     R7,R7,#+24
   \   00000186   0C21               MOVS     R1,#+12
   \   00000188   7943               MULS     R1,R7,R1
   \   0000018A   421A               SUBS     R2,R0,R1
   \   0000018C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000018E   120E               LSRS     R2,R2,#+24
   \   00000190   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000192   2D0E               LSRS     R5,R5,#+24
   \   00000194   0F21               MOVS     R1,#+15
   \   00000196   6943               MULS     R1,R5,R1
   \   00000198   891C               ADDS     R1,R1,#+2
   \   0000019A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000019C   090E               LSRS     R1,R1,#+24
   \   0000019E   8E48               LDR      R0,??NodeStanIO_Refresh_5+0x8  ;; Frame
   \   000001A0   ........           BL       CopyToCanvasPoint
   \   000001A4   02B0               ADD      SP,SP,#+8
   \   000001A6   0222               MOVS     R2,#+2
   \   000001A8   6946               MOV      R1,SP
   \   000001AA   3000               MOVS     R0,R6
   \   000001AC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001AE   000E               LSRS     R0,R0,#+24
   \   000001B0   ........           BL       CharToStr
   \   000001B4   82B0               SUB      SP,SP,#+8
   \   000001B6   0120               MOVS     R0,#+1
   \   000001B8   0090               STR      R0,[SP, #+0]
   \   000001BA   7F21               MOVS     R1,#+127
   \   000001BC   0120               MOVS     R0,#+1
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   0821               MOVS     R1,#+8
   \   000001C2   0220               MOVS     R0,#+2
   \   000001C4   03B4               PUSH     {R0,R1}
   \   000001C6   5820               MOVS     R0,#+88
   \   000001C8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000001CA   3F0E               LSRS     R7,R7,#+24
   \   000001CC   0C21               MOVS     R1,#+12
   \   000001CE   7943               MULS     R1,R7,R1
   \   000001D0   431A               SUBS     R3,R0,R1
   \   000001D2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001D4   2D0E               LSRS     R5,R5,#+24
   \   000001D6   0F22               MOVS     R2,#+15
   \   000001D8   6A43               MULS     R2,R5,R2
   \   000001DA   D21C               ADDS     R2,R2,#+3
   \   000001DC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001DE   120E               LSRS     R2,R2,#+24
   \   000001E0   0221               MOVS     R1,#+2
   \   000001E2   06A8               ADD      R0,SP,#+24
   \   000001E4   ........           BL       Label
   \   000001E8   06B0               ADD      SP,SP,#+24
   \   000001EA   B4E7               B        ??NodeStanIO_Refresh_11
  10045                                      }
  10046                                      
  10047                                      NP=0;
   \                     ??NodeStanIO_Refresh_8:
   \   000001EC   0026               MOVS     R6,#+0
  10048                                      for (char j=0; j<2; j++) 
   \   000001EE   0025               MOVS     R5,#+0
   \   000001F0   00E0               B        ??NodeStanIO_Refresh_12
   \                     ??NodeStanIO_Refresh_13:
   \   000001F2   6D1C               ADDS     R5,R5,#+1
   \                     ??NodeStanIO_Refresh_12:
   \   000001F4   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000001F6   2D0E               LSRS     R5,R5,#+24
   \   000001F8   022D               CMP      R5,#+2
   \   000001FA   00D3               BCC      .+4
   \   000001FC   E3E0               B        ??NodeStanIO_Refresh_3
  10049                                      for (char i=0; i<8; i++)
   \   000001FE   0027               MOVS     R7,#+0
   \   00000200   3AE0               B        ??NodeStanIO_Refresh_14
  10050                                      {  
  10051                                        if  ((MainStage.StageQ[CurrentNode].Port>>NP)&0x1)
  10052                                        {
  10053                                          CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
  10054                                          CharToStr (NP, Txt, 2);
  10055                                          Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,1);  
  10056                                        } else{
  10057                                          CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_15:
   \   00000202   82B0               SUB      SP,SP,#+8
   \   00000204   0B20               MOVS     R0,#+11
   \   00000206   0090               STR      R0,[SP, #+0]
   \   00000208   0B23               MOVS     R3,#+11
   \   0000020A   5720               MOVS     R0,#+87
   \   0000020C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000020E   3F0E               LSRS     R7,R7,#+24
   \   00000210   0C21               MOVS     R1,#+12
   \   00000212   7943               MULS     R1,R7,R1
   \   00000214   421A               SUBS     R2,R0,R1
   \   00000216   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000218   120E               LSRS     R2,R2,#+24
   \   0000021A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000021C   2D0E               LSRS     R5,R5,#+24
   \   0000021E   0F21               MOVS     R1,#+15
   \   00000220   6943               MULS     R1,R5,R1
   \   00000222   2231               ADDS     R1,R1,#+34
   \   00000224   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000226   090E               LSRS     R1,R1,#+24
   \   00000228   6B48               LDR      R0,??NodeStanIO_Refresh_5+0x8  ;; Frame
   \   0000022A   ........           BL       CopyToCanvasPoint
   \   0000022E   02B0               ADD      SP,SP,#+8
  10058                                          CharToStr (NP, Txt, 2);
   \   00000230   0222               MOVS     R2,#+2
   \   00000232   6946               MOV      R1,SP
   \   00000234   3000               MOVS     R0,R6
   \   00000236   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000238   000E               LSRS     R0,R0,#+24
   \   0000023A   ........           BL       CharToStr
  10059                                          Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,0);  
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0020               MOVS     R0,#+0
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   7F21               MOVS     R1,#+127
   \   00000246   0120               MOVS     R0,#+1
   \   00000248   03B4               PUSH     {R0,R1}
   \   0000024A   0821               MOVS     R1,#+8
   \   0000024C   0220               MOVS     R0,#+2
   \   0000024E   03B4               PUSH     {R0,R1}
   \   00000250   5820               MOVS     R0,#+88
   \   00000252   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000254   3F0E               LSRS     R7,R7,#+24
   \   00000256   0C21               MOVS     R1,#+12
   \   00000258   7943               MULS     R1,R7,R1
   \   0000025A   431A               SUBS     R3,R0,R1
   \   0000025C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000025E   2D0E               LSRS     R5,R5,#+24
   \   00000260   0F22               MOVS     R2,#+15
   \   00000262   6A43               MULS     R2,R5,R2
   \   00000264   2332               ADDS     R2,R2,#+35
   \   00000266   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000268   120E               LSRS     R2,R2,#+24
   \   0000026A   0221               MOVS     R1,#+2
   \   0000026C   06A8               ADD      R0,SP,#+24
   \   0000026E   ........           BL       Label
   \   00000272   06B0               ADD      SP,SP,#+24
  10060                                        }
  10061                                       NP++;
   \                     ??NodeStanIO_Refresh_16:
   \   00000274   761C               ADDS     R6,R6,#+1
   \   00000276   7F1C               ADDS     R7,R7,#+1
   \                     ??NodeStanIO_Refresh_14:
   \   00000278   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000027A   3F0E               LSRS     R7,R7,#+24
   \   0000027C   082F               CMP      R7,#+8
   \   0000027E   B8D2               BCS      ??NodeStanIO_Refresh_13
   \   00000280   5648               LDR      R0,??NodeStanIO_Refresh_5+0xC  ;; 0x3a2
   \   00000282   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000284   240E               LSRS     R4,R4,#+24
   \   00000286   1621               MOVS     R1,#+22
   \   00000288   6143               MULS     R1,R4,R1
   \   0000028A   204A               LDR      R2,??NodeStanIO_Refresh_0  ;; MainStage
   \   0000028C   5118               ADDS     R1,R2,R1
   \   0000028E   085A               LDRH     R0,[R1, R0]
   \   00000290   3041               ASRS     R0,R0,R6
   \   00000292   C007               LSLS     R0,R0,#+31
   \   00000294   B5D5               BPL      ??NodeStanIO_Refresh_15
   \   00000296   82B0               SUB      SP,SP,#+8
   \   00000298   0B20               MOVS     R0,#+11
   \   0000029A   0090               STR      R0,[SP, #+0]
   \   0000029C   0B23               MOVS     R3,#+11
   \   0000029E   5720               MOVS     R0,#+87
   \   000002A0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002A2   3F0E               LSRS     R7,R7,#+24
   \   000002A4   0C21               MOVS     R1,#+12
   \   000002A6   7943               MULS     R1,R7,R1
   \   000002A8   421A               SUBS     R2,R0,R1
   \   000002AA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000002AC   120E               LSRS     R2,R2,#+24
   \   000002AE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002B0   2D0E               LSRS     R5,R5,#+24
   \   000002B2   0F21               MOVS     R1,#+15
   \   000002B4   6943               MULS     R1,R5,R1
   \   000002B6   2231               ADDS     R1,R1,#+34
   \   000002B8   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000002BA   090E               LSRS     R1,R1,#+24
   \   000002BC   4648               LDR      R0,??NodeStanIO_Refresh_5+0x8  ;; Frame
   \   000002BE   ........           BL       CopyToCanvasPoint
   \   000002C2   02B0               ADD      SP,SP,#+8
   \   000002C4   0222               MOVS     R2,#+2
   \   000002C6   6946               MOV      R1,SP
   \   000002C8   3000               MOVS     R0,R6
   \   000002CA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000002CC   000E               LSRS     R0,R0,#+24
   \   000002CE   ........           BL       CharToStr
   \   000002D2   82B0               SUB      SP,SP,#+8
   \   000002D4   0120               MOVS     R0,#+1
   \   000002D6   0090               STR      R0,[SP, #+0]
   \   000002D8   7F21               MOVS     R1,#+127
   \   000002DA   0120               MOVS     R0,#+1
   \   000002DC   03B4               PUSH     {R0,R1}
   \   000002DE   0821               MOVS     R1,#+8
   \   000002E0   0220               MOVS     R0,#+2
   \   000002E2   03B4               PUSH     {R0,R1}
   \   000002E4   5820               MOVS     R0,#+88
   \   000002E6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000002E8   3F0E               LSRS     R7,R7,#+24
   \   000002EA   0C21               MOVS     R1,#+12
   \   000002EC   7943               MULS     R1,R7,R1
   \   000002EE   431A               SUBS     R3,R0,R1
   \   000002F0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000002F2   2D0E               LSRS     R5,R5,#+24
   \   000002F4   0F22               MOVS     R2,#+15
   \   000002F6   6A43               MULS     R2,R5,R2
   \   000002F8   2332               ADDS     R2,R2,#+35
   \   000002FA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000002FC   120E               LSRS     R2,R2,#+24
   \   000002FE   0221               MOVS     R1,#+2
   \   00000300   06A8               ADD      R0,SP,#+24
   \   00000302   ........           BL       Label
   \   00000306   06B0               ADD      SP,SP,#+24
   \   00000308   B4E7               B        ??NodeStanIO_Refresh_16
   \   0000030A   C046               Nop      
   \                     ??NodeStanIO_Refresh_0:
   \   0000030C   ........           DC32     MainStage
   \   00000310   AA8A0000           DC32     0x8aaa
   \   00000314   ........           DC32     ??Dziel5_2
  10062                                      }
  10063                            
  10064                            
  10065                            }//je¿eli dane niewiarygodne - poinformuj o oczekiwaniu
  10066                         else
  10067                         {
  10068                              CleanCanvasArea(1,3,61,95,0);
   \                     ??NodeStanIO_Refresh_4:
   \   00000318   82B0               SUB      SP,SP,#+8
   \   0000031A   0020               MOVS     R0,#+0
   \   0000031C   0090               STR      R0,[SP, #+0]
   \   0000031E   5F23               MOVS     R3,#+95
   \   00000320   3D22               MOVS     R2,#+61
   \   00000322   0321               MOVS     R1,#+3
   \   00000324   0120               MOVS     R0,#+1
   \   00000326   ........           BL       CleanCanvasArea
   \   0000032A   02B0               ADD      SP,SP,#+8
  10069          
  10070                              
  10071                              Label(Speech[g_leng].Czekaj,2,3,80,10,57,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000032C   82B0               SUB      SP,SP,#+8
   \   0000032E   0020               MOVS     R0,#+0
   \   00000330   0090               STR      R0,[SP, #+0]
   \   00000332   7F21               MOVS     R1,#+127
   \   00000334   0120               MOVS     R0,#+1
   \   00000336   03B4               PUSH     {R0,R1}
   \   00000338   3921               MOVS     R1,#+57
   \   0000033A   0A20               MOVS     R0,#+10
   \   0000033C   03B4               PUSH     {R0,R1}
   \   0000033E   5023               MOVS     R3,#+80
   \   00000340   0322               MOVS     R2,#+3
   \   00000342   0221               MOVS     R1,#+2
   \   00000344   2648               LDR      R0,??NodeStanIO_Refresh_5+0x10  ;; 0xa5f
   \   00000346   274C               LDR      R4,??NodeStanIO_Refresh_5+0x14  ;; g_leng
   \   00000348   2468               LDR      R4,[R4, #+0]
   \   0000034A   274D               LDR      R5,??NodeStanIO_Refresh_5+0x18  ;; 0xa7d
   \   0000034C   6C43               MULS     R4,R5,R4
   \   0000034E   274D               LDR      R5,??NodeStanIO_Refresh_5+0x1C  ;; Speech
   \   00000350   2C19               ADDS     R4,R5,R4
   \   00000352   2018               ADDS     R0,R4,R0
   \   00000354   ........           BL       Label
   \   00000358   06B0               ADD      SP,SP,#+24
  10072                              
  10073                              H_line(1,50,61,1); // (char X, int Y, char lenght, char typ)
   \   0000035A   0123               MOVS     R3,#+1
   \   0000035C   3D22               MOVS     R2,#+61
   \   0000035E   3221               MOVS     R1,#+50
   \   00000360   0120               MOVS     R0,#+1
   \   00000362   ........           BL       H_line
  10074                              Label("Reason:",0,3,40,10,30,1,127,0);
   \   00000366   82B0               SUB      SP,SP,#+8
   \   00000368   0020               MOVS     R0,#+0
   \   0000036A   0090               STR      R0,[SP, #+0]
   \   0000036C   7F21               MOVS     R1,#+127
   \   0000036E   0120               MOVS     R0,#+1
   \   00000370   03B4               PUSH     {R0,R1}
   \   00000372   1E21               MOVS     R1,#+30
   \   00000374   0A20               MOVS     R0,#+10
   \   00000376   03B4               PUSH     {R0,R1}
   \   00000378   2823               MOVS     R3,#+40
   \   0000037A   0322               MOVS     R2,#+3
   \   0000037C   0021               MOVS     R1,#+0
   \   0000037E   1C48               LDR      R0,??NodeStanIO_Refresh_5+0x20  ;; `?<Constant "Reason:">`
   \   00000380   ........           BL       Label
   \   00000384   06B0               ADD      SP,SP,#+24
  10075                              Label("Unreliable",2,3,27,10,57,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000386   82B0               SUB      SP,SP,#+8
   \   00000388   0020               MOVS     R0,#+0
   \   0000038A   0090               STR      R0,[SP, #+0]
   \   0000038C   7F21               MOVS     R1,#+127
   \   0000038E   0120               MOVS     R0,#+1
   \   00000390   03B4               PUSH     {R0,R1}
   \   00000392   3921               MOVS     R1,#+57
   \   00000394   0A20               MOVS     R0,#+10
   \   00000396   03B4               PUSH     {R0,R1}
   \   00000398   1B23               MOVS     R3,#+27
   \   0000039A   0322               MOVS     R2,#+3
   \   0000039C   0221               MOVS     R1,#+2
   \   0000039E   1548               LDR      R0,??NodeStanIO_Refresh_5+0x24  ;; `?<Constant "Unreliable">`
   \   000003A0   ........           BL       Label
   \   000003A4   06B0               ADD      SP,SP,#+24
  10076                              Label("data.",2,3,18,10,57,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000003A6   82B0               SUB      SP,SP,#+8
   \   000003A8   0020               MOVS     R0,#+0
   \   000003AA   0090               STR      R0,[SP, #+0]
   \   000003AC   7F21               MOVS     R1,#+127
   \   000003AE   0120               MOVS     R0,#+1
   \   000003B0   03B4               PUSH     {R0,R1}
   \   000003B2   3921               MOVS     R1,#+57
   \   000003B4   0A20               MOVS     R0,#+10
   \   000003B6   03B4               PUSH     {R0,R1}
   \   000003B8   1223               MOVS     R3,#+18
   \   000003BA   0322               MOVS     R2,#+3
   \   000003BC   0221               MOVS     R1,#+2
   \   000003BE   0E48               LDR      R0,??NodeStanIO_Refresh_5+0x28  ;; `?<Constant "data.">`
   \   000003C0   ........           BL       Label
   \   000003C4   06B0               ADD      SP,SP,#+24
  10077                         }
  10078               
  10079                     }
  10080                }//_______________________________________________________________________ 
   \                     ??NodeStanIO_Refresh_3:
   \   000003C6   03B0               ADD      SP,SP,#+12
   \   000003C8   F0BC               POP      {R4-R7}
   \   000003CA   01BC               POP      {R0}
   \   000003CC   0047               BX       R0               ;; return
   \   000003CE   C046               Nop      
   \                     ??NodeStanIO_Refresh_5:
   \   000003D0   44490000           DC8      0x44, 0x49, 0x00, 0x00
   \   000003D4   444F0000           DC8      0x44, 0x4F, 0x00, 0x00
   \   000003D8   ........           DC32     Frame
   \   000003DC   A2030000           DC32     0x3a2
   \   000003E0   5F0A0000           DC32     0xa5f
   \   000003E4   ........           DC32     g_leng
   \   000003E8   7D0A0000           DC32     0xa7d
   \   000003EC   ........           DC32     Speech
   \   000003F0   ........           DC32     `?<Constant "Reason:">`
   \   000003F4   ........           DC32     `?<Constant "Unreliable">`
   \   000003F8   ........           DC32     `?<Constant "data.">`

   \                                 In section .data, align 1
   \                     ??Dziel5_2:
   \   00000000   05                 DC8 5
  10081                                                                             
  10082          
  10083          
  10084           
  10085           
  10086          
  10087          
  10088          
  10089                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10090                void NodeWeAnalog_Paint(char CurrentNode)
  10091                {  
   \                     NodeWeAnalog_Paint:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
  10092                      char txt[8];
  10093                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000002   6946               MOV      R1,SP
   \   00000004   4E22               MOVS     R2,#+78
   \   00000006   0A70               STRB     R2,[R1, #+0]
   \   00000008   6946               MOV      R1,SP
   \   0000000A   6F22               MOVS     R2,#+111
   \   0000000C   4A70               STRB     R2,[R1, #+1]
   \   0000000E   6946               MOV      R1,SP
   \   00000010   6422               MOVS     R2,#+100
   \   00000012   8A70               STRB     R2,[R1, #+2]
   \   00000014   6946               MOV      R1,SP
   \   00000016   6522               MOVS     R2,#+101
   \   00000018   CA70               STRB     R2,[R1, #+3]
   \   0000001A   6946               MOV      R1,SP
   \   0000001C   2022               MOVS     R2,#+32
   \   0000001E   0A71               STRB     R2,[R1, #+4]
  10094                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000020   0222               MOVS     R2,#+2
   \   00000022   6946               MOV      R1,SP
   \   00000024   491D               ADDS     R1,R1,#+5
   \   00000026   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000028   000E               LSRS     R0,R0,#+24
   \   0000002A   ........           BL       CharToStr
   \   0000002E   0400               MOVS     R4,R0
  10095                  
  10096                     List_Paint(txt,1,107,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   2DA0               ADR      R0,??NodeWeAnalog_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   0321               MOVS     R1,#+3
   \   0000004A   0020               MOVS     R0,#+0
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   6B22               MOVS     R2,#+107
   \   00000052   0121               MOVS     R1,#+1
   \   00000054   0AA8               ADD      R0,SP,#+40
   \   00000056   ........           BL       List_Paint
   \   0000005A   0AB0               ADD      SP,SP,#+40
  10097          
  10098                     
  10099                     AddRfTask(SI, 1, 1);                //Dodaj rozkaz do tablicy zadañ RF   
   \   0000005C   0122               MOVS     R2,#+1
   \   0000005E   0121               MOVS     R1,#+1
   \   00000060   0120               MOVS     R0,#+1
   \   00000062   ........           BL       AddRfTask
  10100                     AddRfTask(SI, 1, 2);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000066   0222               MOVS     R2,#+2
   \   00000068   0121               MOVS     R1,#+1
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   ........           BL       AddRfTask
  10101                     AddRfTask(SI, 1, 3);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000070   0322               MOVS     R2,#+3
   \   00000072   0121               MOVS     R1,#+1
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   ........           BL       AddRfTask
  10102                     AddRfTask(SI, 1, 4);                //Dodaj rozkaz do tablicy zadañ RF     
   \   0000007A   0422               MOVS     R2,#+4
   \   0000007C   0121               MOVS     R1,#+1
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   ........           BL       AddRfTask
  10103                     AddRfTask(SI, 1, 5);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000084   0522               MOVS     R2,#+5
   \   00000086   0121               MOVS     R1,#+1
   \   00000088   0120               MOVS     R0,#+1
   \   0000008A   ........           BL       AddRfTask
  10104                     AddRfTask(SI, 1, 6);                //Dodaj rozkaz do tablicy zadañ RF     
   \   0000008E   0622               MOVS     R2,#+6
   \   00000090   0121               MOVS     R1,#+1
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   ........           BL       AddRfTask
  10105                     AddRfTask(SI, 1, 7);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000098   0722               MOVS     R2,#+7
   \   0000009A   0121               MOVS     R1,#+1
   \   0000009C   0120               MOVS     R0,#+1
   \   0000009E   ........           BL       AddRfTask
  10106                     AddRfTask(SI, 1, 8);                //Dodaj rozkaz do tablicy zadañ RF   
   \   000000A2   0822               MOVS     R2,#+8
   \   000000A4   0121               MOVS     R1,#+1
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   ........           BL       AddRfTask
  10107                     AddRfTask(SI, 1, 9);                //Dodaj rozkaz do tablicy zadañ RF     
   \   000000AC   0922               MOVS     R2,#+9
   \   000000AE   0121               MOVS     R1,#+1
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   ........           BL       AddRfTask
  10108                     
  10109                     Label(Speech[g_leng].Analogi,0,4,100,14,40,1,127,0); 
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   0020               MOVS     R0,#+0
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   7F21               MOVS     R1,#+127
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   2821               MOVS     R1,#+40
   \   000000C4   0E20               MOVS     R0,#+14
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   6423               MOVS     R3,#+100
   \   000000CA   0422               MOVS     R2,#+4
   \   000000CC   0021               MOVS     R1,#+0
   \   000000CE   A520               MOVS     R0,#+165
   \   000000D0   0001               LSLS     R0,R0,#+4        ;; #+2640
   \   000000D2   0B4D               LDR      R5,??NodeWeAnalog_Paint_0+0x4  ;; g_leng
   \   000000D4   2D68               LDR      R5,[R5, #+0]
   \   000000D6   0B4E               LDR      R6,??NodeWeAnalog_Paint_0+0x8  ;; 0xa7d
   \   000000D8   7543               MULS     R5,R6,R5
   \   000000DA   0B4E               LDR      R6,??NodeWeAnalog_Paint_0+0xC  ;; Speech
   \   000000DC   7519               ADDS     R5,R6,R5
   \   000000DE   2818               ADDS     R0,R5,R0
   \   000000E0   ........           BL       Label
   \   000000E4   06B0               ADD      SP,SP,#+24
  10110                     
  10111                     
  10112                     V_line(1,2,125,1); // (char X, int Y, char lenght, char typ)
   \   000000E6   0123               MOVS     R3,#+1
   \   000000E8   7D22               MOVS     R2,#+125
   \   000000EA   0221               MOVS     R1,#+2
   \   000000EC   0120               MOVS     R0,#+1
   \   000000EE   ........           BL       V_line
  10113                }//_______________________________________________________________________ 
   \   000000F2   02B0               ADD      SP,SP,#+8
   \   000000F4   70BC               POP      {R4-R6}
   \   000000F6   01BC               POP      {R0}
   \   000000F8   0047               BX       R0               ;; return
   \   000000FA   C046               Nop      
   \                     ??NodeWeAnalog_Paint_0:
   \   000000FC   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000100   ........           DC32     g_leng
   \   00000104   7D0A0000           DC32     0xa7d
   \   00000108   ........           DC32     Speech
  10114          
  10115          
  10116          
  10117          
  10118                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10119                void NodeWeAnalog_Event(char CurrentNode)
  10120                {
   \                     NodeWeAnalog_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  10121                  int ans;
  10122                  char NP;
                              ^
Warning[Pe177]: variable "NP" was declared but never referenced
  10123                 
  10124                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1548               LDR      R0,??NodeWeAnalog_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1448               LDR      R0,??NodeWeAnalog_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1448               LDR      R0,??NodeWeAnalog_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1348               LDR      R0,??NodeWeAnalog_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  10125            
  10126                  
  10127                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   16D0               BEQ      ??NodeWeAnalog_Event_1
  10128                    {
  10129                    if (ans<0) {
   \   00000030   0028               CMP      R0,#+0
   \   00000032   12D5               BPL      ??NodeWeAnalog_Event_2
  10130                      MenuLevel=(MenuLevel/100);
   \   00000034   0F48               LDR      R0,??NodeWeAnalog_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   6421               MOVS     R1,#+100
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   0D49               LDR      R1,??NodeWeAnalog_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
  10131                     NeuronNrChange=0;
   \   00000042   0D48               LDR      R0,??NodeWeAnalog_Event_0+0x14  ;; NeuronNrChange
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0170               STRB     R1,[R0, #+0]
  10132                     NeuronIdChange=0;
   \   00000048   0C48               LDR      R0,??NodeWeAnalog_Event_0+0x18  ;; NeuronIdChange
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   0160               STR      R1,[R0, #+0]
  10133                     FirstNodeStanIO_Paint=0;
   \   0000004E   0C48               LDR      R0,??NodeWeAnalog_Event_0+0x1C  ;; FirstNodeStanIO_Paint
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   0170               STRB     R1,[R0, #+0]
  10134                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000054   0B48               LDR      R0,??NodeWeAnalog_Event_0+0x20  ;; gProg
   \   00000056   ........           BL       SetTask
  10135                    }
  10136                    MenuPaint();
   \                     ??NodeWeAnalog_Event_2:
   \   0000005A   ........           BL       MenuPaint
  10137                    } 
  10138                  
  10139                  
  10140                  
  10141                  
  10142                }//_______________________________________________________________________
   \                     ??NodeWeAnalog_Event_1:
   \   0000005E   10BC               POP      {R4}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??NodeWeAnalog_Event_0:
   \   00000064   ........           DC32     Y_down
   \   00000068   ........           DC32     X_down
   \   0000006C   ........           DC32     Y_up
   \   00000070   ........           DC32     X_up
   \   00000074   ........           DC32     MenuLevel
   \   00000078   ........           DC32     NeuronNrChange
   \   0000007C   ........           DC32     NeuronIdChange
   \   00000080   ........           DC32     FirstNodeStanIO_Paint
   \   00000084   ........           DC32     gProg
  10143          
  10144          
  10145          
  10146                
  10147                
  10148                
  10149          
  10150          
  10151                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10152                void NodeWeAnalog_Refresh(char CurrentNode)
  10153                {  
   \                     NodeWeAnalog_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
  10154                     char Txt[6];
  10155                  
  10156                     static char Dziel5;
  10157                     Dziel5=6;
   \   00000004   4F48               LDR      R0,??NodeWeAnalog_Refresh_0  ;; ??Dziel5_3
   \   00000006   0621               MOVS     R1,#+6
   \   00000008   0170               STRB     R1,[R0, #+0]
  10158                     if (Dziel5<5) {Dziel5++;}else
   \   0000000A   4E48               LDR      R0,??NodeWeAnalog_Refresh_0  ;; ??Dziel5_3
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0528               CMP      R0,#+5
   \   00000010   08D2               BCS      ??NodeWeAnalog_Refresh_1
   \   00000012   4C48               LDR      R0,??NodeWeAnalog_Refresh_0  ;; ??Dziel5_3
   \   00000014   4B49               LDR      R1,??NodeWeAnalog_Refresh_0  ;; ??Dziel5_3
   \   00000016   0978               LDRB     R1,[R1, #+0]
   \   00000018   491C               ADDS     R1,R1,#+1
   \   0000001A   0170               STRB     R1,[R0, #+0]
  10159                     {
  10160                       Dziel5=0;
  10161          
  10162                       char PozY=101;
  10163                       for (char i=1; i<10; i++)
  10164                       {
  10165                         CharToStr(i, Txt, 2);
  10166                         Label(Txt,0,2,PozY-(11*i)+1,1,10,1,127,1);  
  10167          
  10168                         if (MainStage.StageI[CurrentNode].Value[i] !=(signed short int )0x8AAA) //je¿eli dane wiarygodne
  10169                         {
  10170                           char IlLiter=sIntToStr( MainStage.StageI[CurrentNode].Value[i], &(Txt[0])); //(char Value, char *Vstring, char ill);
  10171                           Label(Txt,0,15,PozY-(11*i)+1,IlLiter,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
  10172                         }//je¿eli dane niewiarygodne - poinformuj o oczekiwaniu
  10173                         else
  10174                         {
  10175                           Label(Speech[g_leng].Czekaj,0,15,PozY-(11*i)+1,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
  10176                         }
  10177                         H_line(0,PozY-(11*i),63,1); // (char X, int Y, char lenght, char typ)
  10178                       }
  10179             
  10180          
  10181                     }
  10182                }//_______________________________________________________________________ 
   \                     ??NodeWeAnalog_Refresh_2:
   \   0000001C   03B0               ADD      SP,SP,#+12
   \   0000001E   F0BC               POP      {R4-R7}
   \   00000020   01BC               POP      {R0}
   \   00000022   0047               BX       R0               ;; return
   \                     ??NodeWeAnalog_Refresh_1:
   \   00000024   4748               LDR      R0,??NodeWeAnalog_Refresh_0  ;; ??Dziel5_3
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0170               STRB     R1,[R0, #+0]
   \   0000002A   6525               MOVS     R5,#+101
   \   0000002C   0126               MOVS     R6,#+1
   \   0000002E   2CE0               B        ??NodeWeAnalog_Refresh_3
   \                     ??NodeWeAnalog_Refresh_4:
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   7F21               MOVS     R1,#+127
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   2821               MOVS     R1,#+40
   \   0000003E   0A20               MOVS     R0,#+10
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000044   2D0E               LSRS     R5,R5,#+24
   \   00000046   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000048   360E               LSRS     R6,R6,#+24
   \   0000004A   0B20               MOVS     R0,#+11
   \   0000004C   7043               MULS     R0,R6,R0
   \   0000004E   2B1A               SUBS     R3,R5,R0
   \   00000050   5B1C               ADDS     R3,R3,#+1
   \   00000052   0F22               MOVS     R2,#+15
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   8C46               MOV      R12,R1
   \   00000058   3B49               LDR      R1,??NodeWeAnalog_Refresh_0+0x4  ;; 0xa5f
   \   0000005A   3C48               LDR      R0,??NodeWeAnalog_Refresh_0+0x8  ;; g_leng
   \   0000005C   0068               LDR      R0,[R0, #+0]
   \   0000005E   3C4F               LDR      R7,??NodeWeAnalog_Refresh_0+0xC  ;; 0xa7d
   \   00000060   7843               MULS     R0,R7,R0
   \   00000062   3C4F               LDR      R7,??NodeWeAnalog_Refresh_0+0x10  ;; Speech
   \   00000064   3818               ADDS     R0,R7,R0
   \   00000066   4018               ADDS     R0,R0,R1
   \   00000068   6146               MOV      R1,R12
   \   0000006A   ........           BL       Label
   \   0000006E   06B0               ADD      SP,SP,#+24
   \                     ??NodeWeAnalog_Refresh_5:
   \   00000070   0123               MOVS     R3,#+1
   \   00000072   3F22               MOVS     R2,#+63
   \   00000074   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000076   2D0E               LSRS     R5,R5,#+24
   \   00000078   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000007A   360E               LSRS     R6,R6,#+24
   \   0000007C   0B20               MOVS     R0,#+11
   \   0000007E   7043               MULS     R0,R6,R0
   \   00000080   291A               SUBS     R1,R5,R0
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   ........           BL       H_line
   \   00000088   761C               ADDS     R6,R6,#+1
   \                     ??NodeWeAnalog_Refresh_3:
   \   0000008A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000008C   360E               LSRS     R6,R6,#+24
   \   0000008E   0A2E               CMP      R6,#+10
   \   00000090   C4D2               BCS      ??NodeWeAnalog_Refresh_2
   \   00000092   0222               MOVS     R2,#+2
   \   00000094   6946               MOV      R1,SP
   \   00000096   3000               MOVS     R0,R6
   \   00000098   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   ........           BL       CharToStr
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   0120               MOVS     R0,#+1
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   7F21               MOVS     R1,#+127
   \   000000A8   0120               MOVS     R0,#+1
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   0A21               MOVS     R1,#+10
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B4   2D0E               LSRS     R5,R5,#+24
   \   000000B6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000B8   360E               LSRS     R6,R6,#+24
   \   000000BA   0B20               MOVS     R0,#+11
   \   000000BC   7043               MULS     R0,R6,R0
   \   000000BE   2B1A               SUBS     R3,R5,R0
   \   000000C0   5B1C               ADDS     R3,R3,#+1
   \   000000C2   0222               MOVS     R2,#+2
   \   000000C4   0021               MOVS     R1,#+0
   \   000000C6   06A8               ADD      R0,SP,#+24
   \   000000C8   ........           BL       Label
   \   000000CC   06B0               ADD      SP,SP,#+24
   \   000000CE   A020               MOVS     R0,#+160
   \   000000D0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000D2   360E               LSRS     R6,R6,#+24
   \   000000D4   0221               MOVS     R1,#+2
   \   000000D6   7143               MULS     R1,R6,R1
   \   000000D8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000DA   240E               LSRS     R4,R4,#+24
   \   000000DC   1622               MOVS     R2,#+22
   \   000000DE   6243               MULS     R2,R4,R2
   \   000000E0   1D4B               LDR      R3,??NodeWeAnalog_Refresh_0+0x14  ;; MainStage
   \   000000E2   9A18               ADDS     R2,R3,R2
   \   000000E4   5118               ADDS     R1,R2,R1
   \   000000E6   085E               LDRSH    R0,[R1, R0]
   \   000000E8   1C49               LDR      R1,??NodeWeAnalog_Refresh_0+0x18  ;; 0xffff8aaa
   \   000000EA   8842               CMP      R0,R1
   \   000000EC   A0D0               BEQ      ??NodeWeAnalog_Refresh_4
   \   000000EE   6946               MOV      R1,SP
   \   000000F0   A022               MOVS     R2,#+160
   \   000000F2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000F4   360E               LSRS     R6,R6,#+24
   \   000000F6   0220               MOVS     R0,#+2
   \   000000F8   7043               MULS     R0,R6,R0
   \   000000FA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000FC   240E               LSRS     R4,R4,#+24
   \   000000FE   1623               MOVS     R3,#+22
   \   00000100   6343               MULS     R3,R4,R3
   \   00000102   154F               LDR      R7,??NodeWeAnalog_Refresh_0+0x14  ;; MainStage
   \   00000104   FB18               ADDS     R3,R7,R3
   \   00000106   1818               ADDS     R0,R3,R0
   \   00000108   805E               LDRSH    R0,[R0, R2]
   \   0000010A   ........           BL       sIntToStr
   \   0000010E   0200               MOVS     R2,R0
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   0020               MOVS     R0,#+0
   \   00000114   0090               STR      R0,[SP, #+0]
   \   00000116   7F21               MOVS     R1,#+127
   \   00000118   0120               MOVS     R0,#+1
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   2821               MOVS     R1,#+40
   \   0000011E   1000               MOVS     R0,R2
   \   00000120   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000122   000E               LSRS     R0,R0,#+24
   \   00000124   03B4               PUSH     {R0,R1}
   \   00000126   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000128   2D0E               LSRS     R5,R5,#+24
   \   0000012A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012C   360E               LSRS     R6,R6,#+24
   \   0000012E   0B20               MOVS     R0,#+11
   \   00000130   7043               MULS     R0,R6,R0
   \   00000132   2B1A               SUBS     R3,R5,R0
   \   00000134   5B1C               ADDS     R3,R3,#+1
   \   00000136   0F22               MOVS     R2,#+15
   \   00000138   0021               MOVS     R1,#+0
   \   0000013A   06A8               ADD      R0,SP,#+24
   \   0000013C   ........           BL       Label
   \   00000140   06B0               ADD      SP,SP,#+24
   \   00000142   95E7               B        ??NodeWeAnalog_Refresh_5
   \                     ??NodeWeAnalog_Refresh_0:
   \   00000144   ........           DC32     ??Dziel5_3
   \   00000148   5F0A0000           DC32     0xa5f
   \   0000014C   ........           DC32     g_leng
   \   00000150   7D0A0000           DC32     0xa7d
   \   00000154   ........           DC32     Speech
   \   00000158   ........           DC32     MainStage
   \   0000015C   AA8AFFFF           DC32     0xffff8aaa

   \                                 In section .bss, align 1
   \                     ??Dziel5_3:
   \   00000000                      DS8 1
  10183                                                                             
  10184          
  10185               
  10186          
  10187                
  10188          #define MaxWaitForResp  500    //[ms] czas oczekiwania na odpowiedz w tecie
  10189          #define FirstTimeDelay  5000   //czas startowy
  10190          #define ShortTest  100   //iloæ odpytañ w tecie szybkim
  10191          #define LongTest  2000   //iloæ odpytañ w tecie d³ugim      
  10192                

   \                                 In section .bss, align 2
  10193          unsigned short MaxTime;
   \                     MaxTime:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
  10194          unsigned long LastSendTime;
   \                     LastSendTime:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
  10195          unsigned long TestStartTime;
   \                     TestStartTime:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
  10196          unsigned short TestStep;
   \                     TestStep:
   \   00000000                      DS8 2
  10197          //unsigned char TestMark; //0-testowanie, 1-test przeszed³, 2-test oblany
  10198                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10199                void Tester_MG1_Paint(char CurrentNode)
  10200                {  
   \                     Tester_MG1_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
  10201                      char txt[8];
  10202                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6846               MOV      R0,SP
   \   00000006   4E21               MOVS     R1,#+78
   \   00000008   0170               STRB     R1,[R0, #+0]
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   6F21               MOVS     R1,#+111
   \   0000000E   4170               STRB     R1,[R0, #+1]
   \   00000010   6846               MOV      R0,SP
   \   00000012   6421               MOVS     R1,#+100
   \   00000014   8170               STRB     R1,[R0, #+2]
   \   00000016   6846               MOV      R0,SP
   \   00000018   6521               MOVS     R1,#+101
   \   0000001A   C170               STRB     R1,[R0, #+3]
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   2021               MOVS     R1,#+32
   \   00000020   0171               STRB     R1,[R0, #+4]
  10203                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000022   0222               MOVS     R2,#+2
   \   00000024   6946               MOV      R1,SP
   \   00000026   491D               ADDS     R1,R1,#+5
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CharToStr
   \   00000032   0500               MOVS     R5,R0
  10204                  
  10205                     List_Paint(txt,1,107,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   45A0               ADR      R0,??Tester_MG1_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0321               MOVS     R1,#+3
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   6B22               MOVS     R2,#+107
   \   00000056   0121               MOVS     R1,#+1
   \   00000058   0AA8               ADD      R0,SP,#+40
   \   0000005A   ........           BL       List_Paint
   \   0000005E   0AB0               ADD      SP,SP,#+40
  10206          
  10207          
  10208                                            //wyczyæ zadania
  10209                     for (char i=0; i<RF_Tasks-1; i++) 
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   37E0               B        ??Tester_MG1_Paint_1
  10210                     {
  10211                      RF_TaskTab[i].Node=0;
   \                     ??Tester_MG1_Paint_2:
   \   00000064   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000066   000E               LSRS     R0,R0,#+24
   \   00000068   0821               MOVS     R1,#+8
   \   0000006A   4143               MULS     R1,R0,R1
   \   0000006C   3D4A               LDR      R2,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   0000006E   0023               MOVS     R3,#+0
   \   00000070   5354               STRB     R3,[R2, R1]
  10212                      RF_TaskTab[i].Command.ID=0;
   \   00000072   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000074   000E               LSRS     R0,R0,#+24
   \   00000076   0821               MOVS     R1,#+8
   \   00000078   4143               MULS     R1,R0,R1
   \   0000007A   3A4A               LDR      R2,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   0000007C   5118               ADDS     R1,R2,R1
   \   0000007E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000080   000E               LSRS     R0,R0,#+24
   \   00000082   0822               MOVS     R2,#+8
   \   00000084   4243               MULS     R2,R0,R2
   \   00000086   374B               LDR      R3,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   00000088   9A18               ADDS     R2,R3,R2
   \   0000008A   5268               LDR      R2,[R2, #+4]
   \   0000008C   120D               LSRS     R2,R2,#+20
   \   0000008E   1205               LSLS     R2,R2,#+20
   \   00000090   4A60               STR      R2,[R1, #+4]
  10213                      RF_TaskTab[i].Command.Order=0;
   \   00000092   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000094   000E               LSRS     R0,R0,#+24
   \   00000096   0821               MOVS     R1,#+8
   \   00000098   4143               MULS     R1,R0,R1
   \   0000009A   324A               LDR      R2,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   0000009C   5118               ADDS     R1,R2,R1
   \   0000009E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A0   000E               LSRS     R0,R0,#+24
   \   000000A2   0822               MOVS     R2,#+8
   \   000000A4   4243               MULS     R2,R0,R2
   \   000000A6   2F4B               LDR      R3,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   000000A8   9A18               ADDS     R2,R3,R2
   \   000000AA   5268               LDR      R2,[R2, #+4]
   \   000000AC   2E4B               LDR      R3,??Tester_MG1_Paint_0+0x8  ;; 0xff0fffff
   \   000000AE   1340               ANDS     R3,R3,R2
   \   000000B0   4B60               STR      R3,[R1, #+4]
  10214                      RF_TaskTab[i].Command.Auxi=0;
   \   000000B2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000B4   000E               LSRS     R0,R0,#+24
   \   000000B6   0821               MOVS     R1,#+8
   \   000000B8   4143               MULS     R1,R0,R1
   \   000000BA   2A4A               LDR      R2,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   000000BC   5118               ADDS     R1,R2,R1
   \   000000BE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C0   000E               LSRS     R0,R0,#+24
   \   000000C2   0822               MOVS     R2,#+8
   \   000000C4   4243               MULS     R2,R0,R2
   \   000000C6   274B               LDR      R3,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   000000C8   9A18               ADDS     R2,R3,R2
   \   000000CA   5268               LDR      R2,[R2, #+4]
   \   000000CC   1202               LSLS     R2,R2,#+8        ;; ZeroExtS R2,R2,#+8,#+8
   \   000000CE   120A               LSRS     R2,R2,#+8
   \   000000D0   4A60               STR      R2,[R1, #+4]
  10215                     }
   \   000000D2   401C               ADDS     R0,R0,#+1
   \                     ??Tester_MG1_Paint_1:
   \   000000D4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D6   000E               LSRS     R0,R0,#+24
   \   000000D8   4528               CMP      R0,#+69
   \   000000DA   C3D3               BCC      ??Tester_MG1_Paint_2
  10216                     
  10217                     AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF  
   \   000000DC   0022               MOVS     R2,#+0
   \   000000DE   0121               MOVS     R1,#+1
   \   000000E0   0120               MOVS     R0,#+1
   \   000000E2   ........           BL       AddRfTask
  10218                     AddRfTask(SQ, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF 
   \   000000E6   0022               MOVS     R2,#+0
   \   000000E8   0121               MOVS     R1,#+1
   \   000000EA   0220               MOVS     R0,#+2
   \   000000EC   ........           BL       AddRfTask
  10219                     PortStageSet((&(MainStage.StageI[CurrentNode].Port)),0,0);
                                         ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   000000F0   0022               MOVS     R2,#+0
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F6   240E               LSRS     R4,R4,#+24
   \   000000F8   1620               MOVS     R0,#+22
   \   000000FA   6043               MULS     R0,R4,R0
   \   000000FC   1B4B               LDR      R3,??Tester_MG1_Paint_0+0xC  ;; MainStage
   \   000000FE   1818               ADDS     R0,R3,R0
   \   00000100   A030               ADDS     R0,R0,#+160
   \   00000102   ........           BL       PortStageSet
  10220                     PortStageSet((&(MainStage.StageI[CurrentNode].Port)),1,0);
                                         ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   00000106   0022               MOVS     R2,#+0
   \   00000108   0121               MOVS     R1,#+1
   \   0000010A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000010C   240E               LSRS     R4,R4,#+24
   \   0000010E   1620               MOVS     R0,#+22
   \   00000110   4443               MULS     R4,R0,R4
   \   00000112   1648               LDR      R0,??Tester_MG1_Paint_0+0xC  ;; MainStage
   \   00000114   0019               ADDS     R0,R0,R4
   \   00000116   A030               ADDS     R0,R0,#+160
   \   00000118   ........           BL       PortStageSet
  10221                     MainStage.SendStageChange[1]=ChangeStageFlag;
   \   0000011C   1448               LDR      R0,??Tester_MG1_Paint_0+0x10  ;; MainStage + 1772
   \   0000011E   1549               LDR      R1,??Tester_MG1_Paint_0+0x14  ;; ChangeStageFlag
   \   00000120   0978               LDRB     R1,[R1, #+0]
   \   00000122   0170               STRB     R1,[R0, #+0]
  10222                     Label("MG1 TEST",0,4,100,14,40,1,127,0); 
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   0120               MOVS     R0,#+1
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   2821               MOVS     R1,#+40
   \   00000132   0E20               MOVS     R0,#+14
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   6423               MOVS     R3,#+100
   \   00000138   0422               MOVS     R2,#+4
   \   0000013A   0021               MOVS     R1,#+0
   \   0000013C   0E48               LDR      R0,??Tester_MG1_Paint_0+0x18  ;; `?<Constant "MG1 TEST">`
   \   0000013E   ........           BL       Label
   \   00000142   06B0               ADD      SP,SP,#+24
  10223                     MaxTime=0;
   \   00000144   0D48               LDR      R0,??Tester_MG1_Paint_0+0x1C  ;; MaxTime
   \   00000146   0021               MOVS     R1,#+0
   \   00000148   0180               STRH     R1,[R0, #+0]
  10224                     TestStartTime=g_counter;
   \   0000014A   0D4A               LDR      R2,??Tester_MG1_Paint_0+0x20  ;; TestStartTime
   \   0000014C   0D48               LDR      R0,??Tester_MG1_Paint_0+0x24  ;; g_counter
   \   0000014E   03C8               LDM      R0!,{R0,R1}
   \   00000150   1060               STR      R0,[R2, #+0]
  10225                     TestStep=0;
   \   00000152   0D48               LDR      R0,??Tester_MG1_Paint_0+0x28  ;; TestStep
   \   00000154   0021               MOVS     R1,#+0
   \   00000156   0180               STRH     R1,[R0, #+0]
  10226                }//_______________________________________________________________________ 
   \   00000158   03B0               ADD      SP,SP,#+12
   \   0000015A   30BC               POP      {R4,R5}
   \   0000015C   01BC               POP      {R0}
   \   0000015E   0047               BX       R0               ;; return
   \                     ??Tester_MG1_Paint_0:
   \   00000160   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000164   ........           DC32     RF_TaskTab
   \   00000168   FFFF0FFF           DC32     0xff0fffff
   \   0000016C   ........           DC32     MainStage
   \   00000170   ........           DC32     MainStage + 1772
   \   00000174   ........           DC32     ChangeStageFlag
   \   00000178   ........           DC32     `?<Constant "MG1 TEST">`
   \   0000017C   ........           DC32     MaxTime
   \   00000180   ........           DC32     TestStartTime
   \   00000184   ........           DC32     g_counter
   \   00000188   ........           DC32     TestStep
  10227          
  10228          
  10229          

   \                                 In section .data, align 2
  10230            unsigned short  TestAmount=ShortTest;
   \                     TestAmount:
   \   00000000   6400               DC16 100
  10231                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10232                void Tester_MG1_Event(char CurrentNode)
  10233                {
   \                     Tester_MG1_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10234                  int ans;
  10235                  char NP;
                              ^
Warning[Pe177]: variable "NP" was declared but never referenced
  10236                 
  10237                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   3248               LDR      R0,??Tester_MG1_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   3148               LDR      R0,??Tester_MG1_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   3148               LDR      R0,??Tester_MG1_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   3048               LDR      R0,??Tester_MG1_Event_0+0xC  ;; X_up
   \   00000022   0025               MOVS     R5,#+0
   \   00000024   405F               LDRSH    R0,[R0, R5]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  10238            
  10239                  char repaint;
  10240                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   0FD0               BEQ      ??Tester_MG1_Event_1
  10241                    {
  10242                    if (ans<0) {
   \   00000030   0028               CMP      R0,#+0
   \   00000032   0DD5               BPL      ??Tester_MG1_Event_1
  10243                     MenuLevel=(MenuLevel/10);
   \   00000034   2C48               LDR      R0,??Tester_MG1_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   2A49               LDR      R1,??Tester_MG1_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
  10244                     TestStep=0;
   \   00000042   2A48               LDR      R0,??Tester_MG1_Event_0+0x14  ;; TestStep
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0180               STRH     R1,[R0, #+0]
  10245                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000048   2948               LDR      R0,??Tester_MG1_Event_0+0x18  ;; gProg
   \   0000004A   ........           BL       SetTask
  10246                     repaint=1;
   \   0000004E   0124               MOVS     R4,#+1
  10247                    }
  10248                    }
  10249                    
  10250                      if (Button("Nowy test",3,18,58,13)==1)
   \                     ??Tester_MG1_Event_1:
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0D20               MOVS     R0,#+13
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   3A23               MOVS     R3,#+58
   \   00000058   1222               MOVS     R2,#+18
   \   0000005A   0321               MOVS     R1,#+3
   \   0000005C   2548               LDR      R0,??Tester_MG1_Event_0+0x1C  ;; `?<Constant "Nowy test">`
   \   0000005E   ........           BL       Button
   \   00000062   02B0               ADD      SP,SP,#+8
   \   00000064   0128               CMP      R0,#+1
   \   00000066   0FD1               BNE      ??Tester_MG1_Event_2
  10251                      {
  10252                        TestAmount=ShortTest;
   \   00000068   2348               LDR      R0,??Tester_MG1_Event_0+0x20  ;; TestAmount
   \   0000006A   6421               MOVS     R1,#+100
   \   0000006C   0180               STRH     R1,[R0, #+0]
  10253                         CleanCanvasArea(2,1,60,61,0); 
   \   0000006E   82B0               SUB      SP,SP,#+8
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   0090               STR      R0,[SP, #+0]
   \   00000074   3D23               MOVS     R3,#+61
   \   00000076   3C22               MOVS     R2,#+60
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   0220               MOVS     R0,#+2
   \   0000007C   ........           BL       CleanCanvasArea
   \   00000080   02B0               ADD      SP,SP,#+8
  10254                        TestStep=0;
   \   00000082   1A48               LDR      R0,??Tester_MG1_Event_0+0x14  ;; TestStep
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   0180               STRH     R1,[R0, #+0]
  10255                      }
  10256                      if (Button("Dlugi test",3,4,58,13)==1)
   \                     ??Tester_MG1_Event_2:
   \   00000088   82B0               SUB      SP,SP,#+8
   \   0000008A   0D20               MOVS     R0,#+13
   \   0000008C   0090               STR      R0,[SP, #+0]
   \   0000008E   3A23               MOVS     R3,#+58
   \   00000090   0422               MOVS     R2,#+4
   \   00000092   0321               MOVS     R1,#+3
   \   00000094   1948               LDR      R0,??Tester_MG1_Event_0+0x24  ;; `?<Constant "Dlugi test">`
   \   00000096   ........           BL       Button
   \   0000009A   02B0               ADD      SP,SP,#+8
   \   0000009C   0128               CMP      R0,#+1
   \   0000009E   10D1               BNE      ??Tester_MG1_Event_3
  10257                      {
  10258                        TestAmount=LongTest;
   \   000000A0   1548               LDR      R0,??Tester_MG1_Event_0+0x20  ;; TestAmount
   \   000000A2   FA21               MOVS     R1,#+250
   \   000000A4   C900               LSLS     R1,R1,#+3        ;; #+2000
   \   000000A6   0180               STRH     R1,[R0, #+0]
  10259                         CleanCanvasArea(2,1,60,61,0); 
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   3D23               MOVS     R3,#+61
   \   000000B0   3C22               MOVS     R2,#+60
   \   000000B2   0121               MOVS     R1,#+1
   \   000000B4   0220               MOVS     R0,#+2
   \   000000B6   ........           BL       CleanCanvasArea
   \   000000BA   02B0               ADD      SP,SP,#+8
  10260                        TestStep=0;      
   \   000000BC   0B48               LDR      R0,??Tester_MG1_Event_0+0x14  ;; TestStep
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   0180               STRH     R1,[R0, #+0]
  10261                      }
  10262                    
  10263          
  10264                  
  10265                  if (repaint) MenuPaint();
   \                     ??Tester_MG1_Event_3:
   \   000000C2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C4   240E               LSRS     R4,R4,#+24
   \   000000C6   002C               CMP      R4,#+0
   \   000000C8   01D0               BEQ      ??Tester_MG1_Event_4
   \   000000CA   ........           BL       MenuPaint
  10266                  
  10267                }//_______________________________________________________________________
   \                     ??Tester_MG1_Event_4:
   \   000000CE   01B0               ADD      SP,SP,#+4
   \   000000D0   30BC               POP      {R4,R5}
   \   000000D2   01BC               POP      {R0}
   \   000000D4   0047               BX       R0               ;; return
   \   000000D6   C046               Nop      
   \                     ??Tester_MG1_Event_0:
   \   000000D8   ........           DC32     Y_down
   \   000000DC   ........           DC32     X_down
   \   000000E0   ........           DC32     Y_up
   \   000000E4   ........           DC32     X_up
   \   000000E8   ........           DC32     MenuLevel
   \   000000EC   ........           DC32     TestStep
   \   000000F0   ........           DC32     gProg
   \   000000F4   ........           DC32     `?<Constant "Nowy test">`
   \   000000F8   ........           DC32     TestAmount
   \   000000FC   ........           DC32     `?<Constant "Dlugi test">`
  10268          
  10269          
  10270          
  10271                
  10272                
  10273                
  10274          
  10275          
  10276                //*-----------------------------------------------------------------------
  10277          
  10278          

   \                                 In section Debug.txt, align 4, keep-with-next
  10279                void Tester_MG1_Refresh(char CurrentNode)
  10280                {  
   \                     Tester_MG1_Refresh:
   \   00000000   D3B5               PUSH     {R0,R1,R4,R6,R7,LR}
   \   00000002   0400               MOVS     R4,R0
  10281                    if ((TestStartTime+1000)>g_counter) return;
   \   00000004   C548               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   00000006   03C8               LDM      R0!,{R0,R1}
   \   00000008   C54A               LDR      R2,??Tester_MG1_Refresh_0+0x4  ;; TestStartTime
   \   0000000A   1268               LDR      R2,[R2, #+0]
   \   0000000C   FA23               MOVS     R3,#+250
   \   0000000E   9B00               LSLS     R3,R3,#+2        ;; #+1000
   \   00000010   D218               ADDS     R2,R2,R3
   \   00000012   0023               MOVS     R3,#+0
   \   00000014   9942               CMP      R1,R3
   \   00000016   01D2               BCS      .+6
   \   00000018   00F0EAFC           BL       ??Tester_MG1_Refresh_1
   \   0000001C   03D8               BHI      ??Tester_MG1_Refresh_2
   \   0000001E   9042               CMP      R0,R2
   \   00000020   01D2               BCS      .+6
   \   00000022   00F0E5FC           BL       ??Tester_MG1_Refresh_1
  10282                  char txt[5];
  10283                        if (TestStep<TestAmount) 
   \                     ??Tester_MG1_Refresh_2:
   \   00000026   BF48               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000028   0088               LDRH     R0,[R0, #+0]
   \   0000002A   BF49               LDR      R1,??Tester_MG1_Refresh_0+0xC  ;; TestAmount
   \   0000002C   0988               LDRH     R1,[R1, #+0]
   \   0000002E   8842               CMP      R0,R1
   \   00000030   00D3               BCC      .+4
   \   00000032   20E2               B        ??Tester_MG1_Refresh_3
  10284                        switch (TestStep%4)
   \   00000034   BB48               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000036   0088               LDRH     R0,[R0, #+0]
   \   00000038   0421               MOVS     R1,#+4
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   0029               CMP      R1,#+0
   \   00000040   09D0               BEQ      ??Tester_MG1_Refresh_4
   \   00000042   0129               CMP      R1,#+1
   \   00000044   00D1               BNE      .+4
   \   00000046   84E0               B        ??Tester_MG1_Refresh_5
   \   00000048   0229               CMP      R1,#+2
   \   0000004A   00D1               BNE      .+4
   \   0000004C   FFE0               B        ??Tester_MG1_Refresh_6
   \   0000004E   0329               CMP      R1,#+3
   \   00000050   00D1               BNE      .+4
   \   00000052   95E1               B        ??Tester_MG1_Refresh_7
   \   00000054   0FE2               B        ??Tester_MG1_Refresh_3
  10285                        {
  10286                          case 0: 
  10287                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==0) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==0)))
   \                     ??Tester_MG1_Refresh_4:
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000005A   240E               LSRS     R4,R4,#+24
   \   0000005C   1620               MOVS     R0,#+22
   \   0000005E   6043               MULS     R0,R4,R0
   \   00000060   B24A               LDR      R2,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   00000062   1018               ADDS     R0,R2,R0
   \   00000064   A030               ADDS     R0,R0,#+160
   \   00000066   0088               LDRH     R0,[R0, #+0]
   \   00000068   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000006A   0014               ASRS     R0,R0,#+16
   \   0000006C   ........           BL       PortStageRead
   \   00000070   0028               CMP      R0,#+0
   \   00000072   56D1               BNE      ??Tester_MG1_Refresh_8
   \   00000074   0121               MOVS     R1,#+1
   \   00000076   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000078   240E               LSRS     R4,R4,#+24
   \   0000007A   1620               MOVS     R0,#+22
   \   0000007C   6043               MULS     R0,R4,R0
   \   0000007E   AB4A               LDR      R2,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   00000080   1018               ADDS     R0,R2,R0
   \   00000082   A030               ADDS     R0,R0,#+160
   \   00000084   0088               LDRH     R0,[R0, #+0]
   \   00000086   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000088   0014               ASRS     R0,R0,#+16
   \   0000008A   ........           BL       PortStageRead
   \   0000008E   0028               CMP      R0,#+0
   \   00000090   47D1               BNE      ??Tester_MG1_Refresh_8
  10288                              {
  10289                                 if ((TestStartTime+10000)<g_counter)
   \   00000092   A348               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; TestStartTime
   \   00000094   0068               LDR      R0,[R0, #+0]
   \   00000096   A649               LDR      R1,??Tester_MG1_Refresh_0+0x14  ;; 0x2710
   \   00000098   4218               ADDS     R2,R0,R1
   \   0000009A   0023               MOVS     R3,#+0
   \   0000009C   9F48               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   8B42               CMP      R3,R1
   \   000000A2   18D8               BHI      ??Tester_MG1_Refresh_9
   \   000000A4   01D3               BCC      ??Tester_MG1_Refresh_10
   \   000000A6   8242               CMP      R2,R0
   \   000000A8   15D2               BCS      ??Tester_MG1_Refresh_9
  10290                                 {
  10291                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_10:
   \   000000AA   A248               LDR      R0,??Tester_MG1_Refresh_0+0x18  ;; MaxTime
   \   000000AC   0688               LDRH     R6,[R0, #+0]
   \   000000AE   0027               MOVS     R7,#+0
   \   000000B0   9A48               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   000000B2   03C8               LDM      R0!,{R0,R1}
   \   000000B4   A04A               LDR      R2,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   000000B6   1268               LDR      R2,[R2, #+0]
   \   000000B8   0023               MOVS     R3,#+0
   \   000000BA   801A               SUBS     R0,R0,R2
   \   000000BC   9941               SBCS     R1,R1,R3
   \   000000BE   8F42               CMP      R7,R1
   \   000000C0   09D8               BHI      ??Tester_MG1_Refresh_9
   \   000000C2   01D3               BCC      ??Tester_MG1_Refresh_11
   \   000000C4   8642               CMP      R6,R0
   \   000000C6   06D2               BCS      ??Tester_MG1_Refresh_9
   \                     ??Tester_MG1_Refresh_11:
   \   000000C8   9A4A               LDR      R2,??Tester_MG1_Refresh_0+0x18  ;; MaxTime
   \   000000CA   9448               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   000000CC   03C8               LDM      R0!,{R0,R1}
   \   000000CE   9A49               LDR      R1,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   000000D0   0968               LDR      R1,[R1, #+0]
   \   000000D2   401A               SUBS     R0,R0,R1
   \   000000D4   1080               STRH     R0,[R2, #+0]
  10292                                 }
  10293                                 
  10294                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_9:
   \   000000D6   0122               MOVS     R2,#+1
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   9848               LDR      R0,??Tester_MG1_Refresh_0+0x20  ;; 0x3a2
   \   000000DC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000DE   240E               LSRS     R4,R4,#+24
   \   000000E0   1623               MOVS     R3,#+22
   \   000000E2   6343               MULS     R3,R4,R3
   \   000000E4   914E               LDR      R6,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   000000E6   F318               ADDS     R3,R6,R3
   \   000000E8   1818               ADDS     R0,R3,R0
   \   000000EA   ........           BL       PortStageSet
  10295                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   000000EE   0022               MOVS     R2,#+0
   \   000000F0   0121               MOVS     R1,#+1
   \   000000F2   9248               LDR      R0,??Tester_MG1_Refresh_0+0x20  ;; 0x3a2
   \   000000F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F6   240E               LSRS     R4,R4,#+24
   \   000000F8   1623               MOVS     R3,#+22
   \   000000FA   6343               MULS     R3,R4,R3
   \   000000FC   8B4E               LDR      R6,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   000000FE   F318               ADDS     R3,R6,R3
   \   00000100   1818               ADDS     R0,R3,R0
   \   00000102   ........           BL       PortStageSet
  10296                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   00000106   8E48               LDR      R0,??Tester_MG1_Refresh_0+0x24  ;; MainStage + 1772
   \   00000108   8E49               LDR      R1,??Tester_MG1_Refresh_0+0x28  ;; ChangeStageFlag
   \   0000010A   0978               LDRB     R1,[R1, #+0]
   \   0000010C   0170               STRB     R1,[R0, #+0]
  10297                                 LastSendTime=g_counter;
   \   0000010E   8A4A               LDR      R2,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   00000110   8248               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   00000112   03C8               LDM      R0!,{R0,R1}
   \   00000114   1060               STR      R0,[R2, #+0]
  10298                                 TestStep++;
   \   00000116   8348               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000118   8249               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   0000011A   0988               LDRH     R1,[R1, #+0]
   \   0000011C   491C               ADDS     R1,R1,#+1
   \   0000011E   0180               STRH     R1,[R0, #+0]
   \   00000120   A9E1               B        ??Tester_MG1_Refresh_3
  10299                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_8:
   \   00000122   7F48               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; TestStartTime
   \   00000124   0068               LDR      R0,[R0, #+0]
   \   00000126   7F49               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000128   0988               LDRH     R1,[R1, #+0]
   \   0000012A   FA22               MOVS     R2,#+250
   \   0000012C   5200               LSLS     R2,R2,#+1        ;; #+500
   \   0000012E   5143               MULS     R1,R2,R1
   \   00000130   854A               LDR      R2,??Tester_MG1_Refresh_0+0x2C  ;; 0x1388
   \   00000132   8918               ADDS     R1,R1,R2
   \   00000134   4218               ADDS     R2,R0,R1
   \   00000136   0023               MOVS     R3,#+0
   \   00000138   7848               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   0000013A   03C8               LDM      R0!,{R0,R1}
   \   0000013C   8B42               CMP      R3,R1
   \   0000013E   00D9               BLS      .+4
   \   00000140   99E1               B        ??Tester_MG1_Refresh_3
   \   00000142   02D3               BCC      ??Tester_MG1_Refresh_12
   \   00000144   8242               CMP      R2,R0
   \   00000146   00D3               BCC      .+4
   \   00000148   95E1               B        ??Tester_MG1_Refresh_3
  10300                              {
  10301                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_12:
   \   0000014A   7648               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   0000014C   7F49               LDR      R1,??Tester_MG1_Refresh_0+0x30  ;; 0xffff
   \   0000014E   0180               STRH     R1,[R0, #+0]
   \   00000150   91E1               B        ??Tester_MG1_Refresh_3
  10302                              }
  10303                          break;
  10304                          case 1: 
  10305                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==1) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==0)))
   \                     ??Tester_MG1_Refresh_5:
   \   00000152   0021               MOVS     R1,#+0
   \   00000154   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000156   240E               LSRS     R4,R4,#+24
   \   00000158   1620               MOVS     R0,#+22
   \   0000015A   6043               MULS     R0,R4,R0
   \   0000015C   734A               LDR      R2,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   0000015E   1018               ADDS     R0,R2,R0
   \   00000160   A030               ADDS     R0,R0,#+160
   \   00000162   0088               LDRH     R0,[R0, #+0]
   \   00000164   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000166   0014               ASRS     R0,R0,#+16
   \   00000168   ........           BL       PortStageRead
   \   0000016C   0128               CMP      R0,#+1
   \   0000016E   56D1               BNE      ??Tester_MG1_Refresh_13
   \   00000170   0121               MOVS     R1,#+1
   \   00000172   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000174   240E               LSRS     R4,R4,#+24
   \   00000176   1620               MOVS     R0,#+22
   \   00000178   6043               MULS     R0,R4,R0
   \   0000017A   6C4A               LDR      R2,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   0000017C   1018               ADDS     R0,R2,R0
   \   0000017E   A030               ADDS     R0,R0,#+160
   \   00000180   0088               LDRH     R0,[R0, #+0]
   \   00000182   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000184   0014               ASRS     R0,R0,#+16
   \   00000186   ........           BL       PortStageRead
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   47D1               BNE      ??Tester_MG1_Refresh_13
  10306                              {
  10307                                if ((TestStartTime+10000)<g_counter)
   \   0000018E   6448               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; TestStartTime
   \   00000190   0068               LDR      R0,[R0, #+0]
   \   00000192   6749               LDR      R1,??Tester_MG1_Refresh_0+0x14  ;; 0x2710
   \   00000194   4218               ADDS     R2,R0,R1
   \   00000196   0023               MOVS     R3,#+0
   \   00000198   6048               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   0000019A   03C8               LDM      R0!,{R0,R1}
   \   0000019C   8B42               CMP      R3,R1
   \   0000019E   18D8               BHI      ??Tester_MG1_Refresh_14
   \   000001A0   01D3               BCC      ??Tester_MG1_Refresh_15
   \   000001A2   8242               CMP      R2,R0
   \   000001A4   15D2               BCS      ??Tester_MG1_Refresh_14
  10308                                 {
  10309                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_15:
   \   000001A6   6348               LDR      R0,??Tester_MG1_Refresh_0+0x18  ;; MaxTime
   \   000001A8   0688               LDRH     R6,[R0, #+0]
   \   000001AA   0027               MOVS     R7,#+0
   \   000001AC   5B48               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   000001AE   03C8               LDM      R0!,{R0,R1}
   \   000001B0   614A               LDR      R2,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   000001B2   1268               LDR      R2,[R2, #+0]
   \   000001B4   0023               MOVS     R3,#+0
   \   000001B6   801A               SUBS     R0,R0,R2
   \   000001B8   9941               SBCS     R1,R1,R3
   \   000001BA   8F42               CMP      R7,R1
   \   000001BC   09D8               BHI      ??Tester_MG1_Refresh_14
   \   000001BE   01D3               BCC      ??Tester_MG1_Refresh_16
   \   000001C0   8642               CMP      R6,R0
   \   000001C2   06D2               BCS      ??Tester_MG1_Refresh_14
   \                     ??Tester_MG1_Refresh_16:
   \   000001C4   5B4A               LDR      R2,??Tester_MG1_Refresh_0+0x18  ;; MaxTime
   \   000001C6   5548               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   000001C8   03C8               LDM      R0!,{R0,R1}
   \   000001CA   5B49               LDR      R1,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   000001CC   0968               LDR      R1,[R1, #+0]
   \   000001CE   401A               SUBS     R0,R0,R1
   \   000001D0   1080               STRH     R0,[R2, #+0]
  10310                                 }
  10311                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_14:
   \   000001D2   0022               MOVS     R2,#+0
   \   000001D4   0021               MOVS     R1,#+0
   \   000001D6   5948               LDR      R0,??Tester_MG1_Refresh_0+0x20  ;; 0x3a2
   \   000001D8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001DA   240E               LSRS     R4,R4,#+24
   \   000001DC   1623               MOVS     R3,#+22
   \   000001DE   6343               MULS     R3,R4,R3
   \   000001E0   524E               LDR      R6,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   000001E2   F318               ADDS     R3,R6,R3
   \   000001E4   1818               ADDS     R0,R3,R0
   \   000001E6   ........           BL       PortStageSet
  10312                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   000001EA   0122               MOVS     R2,#+1
   \   000001EC   0121               MOVS     R1,#+1
   \   000001EE   5348               LDR      R0,??Tester_MG1_Refresh_0+0x20  ;; 0x3a2
   \   000001F0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001F2   240E               LSRS     R4,R4,#+24
   \   000001F4   1623               MOVS     R3,#+22
   \   000001F6   6343               MULS     R3,R4,R3
   \   000001F8   4C4E               LDR      R6,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   000001FA   F318               ADDS     R3,R6,R3
   \   000001FC   1818               ADDS     R0,R3,R0
   \   000001FE   ........           BL       PortStageSet
  10313                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   00000202   4F48               LDR      R0,??Tester_MG1_Refresh_0+0x24  ;; MainStage + 1772
   \   00000204   4F49               LDR      R1,??Tester_MG1_Refresh_0+0x28  ;; ChangeStageFlag
   \   00000206   0978               LDRB     R1,[R1, #+0]
   \   00000208   0170               STRB     R1,[R0, #+0]
  10314                                 LastSendTime=g_counter;
   \   0000020A   4B4A               LDR      R2,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   0000020C   4348               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   0000020E   03C8               LDM      R0!,{R0,R1}
   \   00000210   1060               STR      R0,[R2, #+0]
  10315                                 TestStep++;
   \   00000212   4448               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000214   4349               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000216   0988               LDRH     R1,[R1, #+0]
   \   00000218   491C               ADDS     R1,R1,#+1
   \   0000021A   0180               STRH     R1,[R0, #+0]
   \   0000021C   2BE1               B        ??Tester_MG1_Refresh_3
  10316                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_13:
   \   0000021E   4048               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; TestStartTime
   \   00000220   0068               LDR      R0,[R0, #+0]
   \   00000222   4049               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000224   0988               LDRH     R1,[R1, #+0]
   \   00000226   FA22               MOVS     R2,#+250
   \   00000228   5200               LSLS     R2,R2,#+1        ;; #+500
   \   0000022A   5143               MULS     R1,R2,R1
   \   0000022C   464A               LDR      R2,??Tester_MG1_Refresh_0+0x2C  ;; 0x1388
   \   0000022E   8918               ADDS     R1,R1,R2
   \   00000230   4218               ADDS     R2,R0,R1
   \   00000232   0023               MOVS     R3,#+0
   \   00000234   3948               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   00000236   03C8               LDM      R0!,{R0,R1}
   \   00000238   8B42               CMP      R3,R1
   \   0000023A   00D9               BLS      .+4
   \   0000023C   1BE1               B        ??Tester_MG1_Refresh_3
   \   0000023E   02D3               BCC      ??Tester_MG1_Refresh_17
   \   00000240   8242               CMP      R2,R0
   \   00000242   00D3               BCC      .+4
   \   00000244   17E1               B        ??Tester_MG1_Refresh_3
  10317                              {
  10318                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_17:
   \   00000246   3748               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000248   4049               LDR      R1,??Tester_MG1_Refresh_0+0x30  ;; 0xffff
   \   0000024A   0180               STRH     R1,[R0, #+0]
   \   0000024C   13E1               B        ??Tester_MG1_Refresh_3
  10319                              }
  10320                          break;
  10321                          case 2: 
  10322                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==0) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==1)))
   \                     ??Tester_MG1_Refresh_6:
   \   0000024E   0021               MOVS     R1,#+0
   \   00000250   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000252   240E               LSRS     R4,R4,#+24
   \   00000254   1620               MOVS     R0,#+22
   \   00000256   6043               MULS     R0,R4,R0
   \   00000258   344A               LDR      R2,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   0000025A   1018               ADDS     R0,R2,R0
   \   0000025C   A030               ADDS     R0,R0,#+160
   \   0000025E   0088               LDRH     R0,[R0, #+0]
   \   00000260   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000262   0014               ASRS     R0,R0,#+16
   \   00000264   ........           BL       PortStageRead
   \   00000268   0028               CMP      R0,#+0
   \   0000026A   71D1               BNE      ??Tester_MG1_Refresh_18
   \   0000026C   0121               MOVS     R1,#+1
   \   0000026E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000270   240E               LSRS     R4,R4,#+24
   \   00000272   1620               MOVS     R0,#+22
   \   00000274   6043               MULS     R0,R4,R0
   \   00000276   2D4A               LDR      R2,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   00000278   1018               ADDS     R0,R2,R0
   \   0000027A   A030               ADDS     R0,R0,#+160
   \   0000027C   0088               LDRH     R0,[R0, #+0]
   \   0000027E   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000280   0014               ASRS     R0,R0,#+16
   \   00000282   ........           BL       PortStageRead
   \   00000286   0128               CMP      R0,#+1
   \   00000288   62D1               BNE      ??Tester_MG1_Refresh_18
  10323                              {
  10324                                if ((TestStartTime+10000)<g_counter)
   \   0000028A   2548               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; TestStartTime
   \   0000028C   0068               LDR      R0,[R0, #+0]
   \   0000028E   2849               LDR      R1,??Tester_MG1_Refresh_0+0x14  ;; 0x2710
   \   00000290   4218               ADDS     R2,R0,R1
   \   00000292   0023               MOVS     R3,#+0
   \   00000294   2148               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   00000296   03C8               LDM      R0!,{R0,R1}
   \   00000298   8B42               CMP      R3,R1
   \   0000029A   18D8               BHI      ??Tester_MG1_Refresh_19
   \   0000029C   01D3               BCC      ??Tester_MG1_Refresh_20
   \   0000029E   8242               CMP      R2,R0
   \   000002A0   15D2               BCS      ??Tester_MG1_Refresh_19
  10325                                 {
  10326                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_20:
   \   000002A2   2448               LDR      R0,??Tester_MG1_Refresh_0+0x18  ;; MaxTime
   \   000002A4   0688               LDRH     R6,[R0, #+0]
   \   000002A6   0027               MOVS     R7,#+0
   \   000002A8   1C48               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   000002AA   03C8               LDM      R0!,{R0,R1}
   \   000002AC   224A               LDR      R2,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   000002AE   1268               LDR      R2,[R2, #+0]
   \   000002B0   0023               MOVS     R3,#+0
   \   000002B2   801A               SUBS     R0,R0,R2
   \   000002B4   9941               SBCS     R1,R1,R3
   \   000002B6   8F42               CMP      R7,R1
   \   000002B8   09D8               BHI      ??Tester_MG1_Refresh_19
   \   000002BA   01D3               BCC      ??Tester_MG1_Refresh_21
   \   000002BC   8642               CMP      R6,R0
   \   000002BE   06D2               BCS      ??Tester_MG1_Refresh_19
   \                     ??Tester_MG1_Refresh_21:
   \   000002C0   1C4A               LDR      R2,??Tester_MG1_Refresh_0+0x18  ;; MaxTime
   \   000002C2   1648               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   000002C4   03C8               LDM      R0!,{R0,R1}
   \   000002C6   1C49               LDR      R1,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   000002C8   0968               LDR      R1,[R1, #+0]
   \   000002CA   401A               SUBS     R0,R0,R1
   \   000002CC   1080               STRH     R0,[R2, #+0]
  10327                                 }
  10328                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_19:
   \   000002CE   0122               MOVS     R2,#+1
   \   000002D0   0021               MOVS     R1,#+0
   \   000002D2   1A48               LDR      R0,??Tester_MG1_Refresh_0+0x20  ;; 0x3a2
   \   000002D4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002D6   240E               LSRS     R4,R4,#+24
   \   000002D8   1623               MOVS     R3,#+22
   \   000002DA   6343               MULS     R3,R4,R3
   \   000002DC   134E               LDR      R6,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   000002DE   F318               ADDS     R3,R6,R3
   \   000002E0   1818               ADDS     R0,R3,R0
   \   000002E2   ........           BL       PortStageSet
  10329                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   000002E6   0122               MOVS     R2,#+1
   \   000002E8   0121               MOVS     R1,#+1
   \   000002EA   1448               LDR      R0,??Tester_MG1_Refresh_0+0x20  ;; 0x3a2
   \   000002EC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000002EE   240E               LSRS     R4,R4,#+24
   \   000002F0   1623               MOVS     R3,#+22
   \   000002F2   6343               MULS     R3,R4,R3
   \   000002F4   0D4E               LDR      R6,??Tester_MG1_Refresh_0+0x10  ;; MainStage
   \   000002F6   F318               ADDS     R3,R6,R3
   \   000002F8   1818               ADDS     R0,R3,R0
   \   000002FA   ........           BL       PortStageSet
  10330                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   000002FE   1048               LDR      R0,??Tester_MG1_Refresh_0+0x24  ;; MainStage + 1772
   \   00000300   1049               LDR      R1,??Tester_MG1_Refresh_0+0x28  ;; ChangeStageFlag
   \   00000302   0978               LDRB     R1,[R1, #+0]
   \   00000304   0170               STRB     R1,[R0, #+0]
  10331                                 LastSendTime=g_counter;
   \   00000306   0C4A               LDR      R2,??Tester_MG1_Refresh_0+0x1C  ;; LastSendTime
   \   00000308   0448               LDR      R0,??Tester_MG1_Refresh_0  ;; g_counter
   \   0000030A   03C8               LDM      R0!,{R0,R1}
   \   0000030C   1060               STR      R0,[R2, #+0]
  10332                                 TestStep++;
   \   0000030E   0548               LDR      R0,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000310   0449               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; TestStep
   \   00000312   0988               LDRH     R1,[R1, #+0]
   \   00000314   491C               ADDS     R1,R1,#+1
   \   00000316   0180               STRH     R1,[R0, #+0]
   \   00000318   ADE0               B        ??Tester_MG1_Refresh_3
   \   0000031A   C046               Nop      
   \                     ??Tester_MG1_Refresh_0:
   \   0000031C   ........           DC32     g_counter
   \   00000320   ........           DC32     TestStartTime
   \   00000324   ........           DC32     TestStep
   \   00000328   ........           DC32     TestAmount
   \   0000032C   ........           DC32     MainStage
   \   00000330   10270000           DC32     0x2710
   \   00000334   ........           DC32     MaxTime
   \   00000338   ........           DC32     LastSendTime
   \   0000033C   A2030000           DC32     0x3a2
   \   00000340   ........           DC32     MainStage + 1772
   \   00000344   ........           DC32     ChangeStageFlag
   \   00000348   88130000           DC32     0x1388
   \   0000034C   FFFF0000           DC32     0xffff
  10333                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_18:
   \   00000350   C148               LDR      R0,??Tester_MG1_Refresh_22  ;; TestStartTime
   \   00000352   0068               LDR      R0,[R0, #+0]
   \   00000354   C149               LDR      R1,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000356   0988               LDRH     R1,[R1, #+0]
   \   00000358   FA22               MOVS     R2,#+250
   \   0000035A   5200               LSLS     R2,R2,#+1        ;; #+500
   \   0000035C   5143               MULS     R1,R2,R1
   \   0000035E   C04A               LDR      R2,??Tester_MG1_Refresh_22+0x8  ;; 0x1388
   \   00000360   8918               ADDS     R1,R1,R2
   \   00000362   4218               ADDS     R2,R0,R1
   \   00000364   0023               MOVS     R3,#+0
   \   00000366   BF48               LDR      R0,??Tester_MG1_Refresh_22+0xC  ;; g_counter
   \   00000368   03C8               LDM      R0!,{R0,R1}
   \   0000036A   8B42               CMP      R3,R1
   \   0000036C   00D9               BLS      .+4
   \   0000036E   82E0               B        ??Tester_MG1_Refresh_3
   \   00000370   02D3               BCC      ??Tester_MG1_Refresh_23
   \   00000372   8242               CMP      R2,R0
   \   00000374   00D3               BCC      .+4
   \   00000376   7EE0               B        ??Tester_MG1_Refresh_3
  10334                              {
  10335                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_23:
   \   00000378   B848               LDR      R0,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   0000037A   BB49               LDR      R1,??Tester_MG1_Refresh_22+0x10  ;; 0xffff
   \   0000037C   0180               STRH     R1,[R0, #+0]
   \   0000037E   7AE0               B        ??Tester_MG1_Refresh_3
  10336                              }
  10337                          break; 
  10338                          case 3: 
  10339                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==1) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==1)))
   \                     ??Tester_MG1_Refresh_7:
   \   00000380   0021               MOVS     R1,#+0
   \   00000382   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000384   240E               LSRS     R4,R4,#+24
   \   00000386   1620               MOVS     R0,#+22
   \   00000388   6043               MULS     R0,R4,R0
   \   0000038A   B84A               LDR      R2,??Tester_MG1_Refresh_22+0x14  ;; MainStage
   \   0000038C   1018               ADDS     R0,R2,R0
   \   0000038E   A030               ADDS     R0,R0,#+160
   \   00000390   0088               LDRH     R0,[R0, #+0]
   \   00000392   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000394   0014               ASRS     R0,R0,#+16
   \   00000396   ........           BL       PortStageRead
   \   0000039A   0128               CMP      R0,#+1
   \   0000039C   56D1               BNE      ??Tester_MG1_Refresh_24
   \   0000039E   0121               MOVS     R1,#+1
   \   000003A0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000003A2   240E               LSRS     R4,R4,#+24
   \   000003A4   1620               MOVS     R0,#+22
   \   000003A6   6043               MULS     R0,R4,R0
   \   000003A8   B04A               LDR      R2,??Tester_MG1_Refresh_22+0x14  ;; MainStage
   \   000003AA   1018               ADDS     R0,R2,R0
   \   000003AC   A030               ADDS     R0,R0,#+160
   \   000003AE   0088               LDRH     R0,[R0, #+0]
   \   000003B0   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000003B2   0014               ASRS     R0,R0,#+16
   \   000003B4   ........           BL       PortStageRead
   \   000003B8   0128               CMP      R0,#+1
   \   000003BA   47D1               BNE      ??Tester_MG1_Refresh_24
  10340                              {
  10341                                if ((TestStartTime+10000)<g_counter)
   \   000003BC   A648               LDR      R0,??Tester_MG1_Refresh_22  ;; TestStartTime
   \   000003BE   0068               LDR      R0,[R0, #+0]
   \   000003C0   AB49               LDR      R1,??Tester_MG1_Refresh_22+0x18  ;; 0x2710
   \   000003C2   4218               ADDS     R2,R0,R1
   \   000003C4   0023               MOVS     R3,#+0
   \   000003C6   A748               LDR      R0,??Tester_MG1_Refresh_22+0xC  ;; g_counter
   \   000003C8   03C8               LDM      R0!,{R0,R1}
   \   000003CA   8B42               CMP      R3,R1
   \   000003CC   18D8               BHI      ??Tester_MG1_Refresh_25
   \   000003CE   01D3               BCC      ??Tester_MG1_Refresh_26
   \   000003D0   8242               CMP      R2,R0
   \   000003D2   15D2               BCS      ??Tester_MG1_Refresh_25
  10342                                 {
  10343                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_26:
   \   000003D4   A748               LDR      R0,??Tester_MG1_Refresh_22+0x1C  ;; MaxTime
   \   000003D6   0688               LDRH     R6,[R0, #+0]
   \   000003D8   0027               MOVS     R7,#+0
   \   000003DA   A248               LDR      R0,??Tester_MG1_Refresh_22+0xC  ;; g_counter
   \   000003DC   03C8               LDM      R0!,{R0,R1}
   \   000003DE   A64A               LDR      R2,??Tester_MG1_Refresh_22+0x20  ;; LastSendTime
   \   000003E0   1268               LDR      R2,[R2, #+0]
   \   000003E2   0023               MOVS     R3,#+0
   \   000003E4   801A               SUBS     R0,R0,R2
   \   000003E6   9941               SBCS     R1,R1,R3
   \   000003E8   8F42               CMP      R7,R1
   \   000003EA   09D8               BHI      ??Tester_MG1_Refresh_25
   \   000003EC   01D3               BCC      ??Tester_MG1_Refresh_27
   \   000003EE   8642               CMP      R6,R0
   \   000003F0   06D2               BCS      ??Tester_MG1_Refresh_25
   \                     ??Tester_MG1_Refresh_27:
   \   000003F2   A04A               LDR      R2,??Tester_MG1_Refresh_22+0x1C  ;; MaxTime
   \   000003F4   9B48               LDR      R0,??Tester_MG1_Refresh_22+0xC  ;; g_counter
   \   000003F6   03C8               LDM      R0!,{R0,R1}
   \   000003F8   9F49               LDR      R1,??Tester_MG1_Refresh_22+0x20  ;; LastSendTime
   \   000003FA   0968               LDR      R1,[R1, #+0]
   \   000003FC   401A               SUBS     R0,R0,R1
   \   000003FE   1080               STRH     R0,[R2, #+0]
  10344                                 }
  10345                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_25:
   \   00000400   0022               MOVS     R2,#+0
   \   00000402   0021               MOVS     R1,#+0
   \   00000404   9D48               LDR      R0,??Tester_MG1_Refresh_22+0x24  ;; 0x3a2
   \   00000406   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000408   240E               LSRS     R4,R4,#+24
   \   0000040A   1623               MOVS     R3,#+22
   \   0000040C   6343               MULS     R3,R4,R3
   \   0000040E   974E               LDR      R6,??Tester_MG1_Refresh_22+0x14  ;; MainStage
   \   00000410   F318               ADDS     R3,R6,R3
   \   00000412   1818               ADDS     R0,R3,R0
   \   00000414   ........           BL       PortStageSet
  10346                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   00000418   0022               MOVS     R2,#+0
   \   0000041A   0121               MOVS     R1,#+1
   \   0000041C   9748               LDR      R0,??Tester_MG1_Refresh_22+0x24  ;; 0x3a2
   \   0000041E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000420   240E               LSRS     R4,R4,#+24
   \   00000422   1623               MOVS     R3,#+22
   \   00000424   6343               MULS     R3,R4,R3
   \   00000426   914E               LDR      R6,??Tester_MG1_Refresh_22+0x14  ;; MainStage
   \   00000428   F318               ADDS     R3,R6,R3
   \   0000042A   1818               ADDS     R0,R3,R0
   \   0000042C   ........           BL       PortStageSet
  10347                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   00000430   9348               LDR      R0,??Tester_MG1_Refresh_22+0x28  ;; MainStage + 1772
   \   00000432   9449               LDR      R1,??Tester_MG1_Refresh_22+0x2C  ;; ChangeStageFlag
   \   00000434   0978               LDRB     R1,[R1, #+0]
   \   00000436   0170               STRB     R1,[R0, #+0]
  10348                                 LastSendTime=g_counter;
   \   00000438   8F4A               LDR      R2,??Tester_MG1_Refresh_22+0x20  ;; LastSendTime
   \   0000043A   8A48               LDR      R0,??Tester_MG1_Refresh_22+0xC  ;; g_counter
   \   0000043C   03C8               LDM      R0!,{R0,R1}
   \   0000043E   1060               STR      R0,[R2, #+0]
  10349                                 TestStep++;
   \   00000440   8648               LDR      R0,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000442   8649               LDR      R1,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000444   0988               LDRH     R1,[R1, #+0]
   \   00000446   491C               ADDS     R1,R1,#+1
   \   00000448   0180               STRH     R1,[R0, #+0]
   \   0000044A   14E0               B        ??Tester_MG1_Refresh_3
  10350                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_24:
   \   0000044C   8248               LDR      R0,??Tester_MG1_Refresh_22  ;; TestStartTime
   \   0000044E   0068               LDR      R0,[R0, #+0]
   \   00000450   8249               LDR      R1,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000452   0988               LDRH     R1,[R1, #+0]
   \   00000454   FA22               MOVS     R2,#+250
   \   00000456   5200               LSLS     R2,R2,#+1        ;; #+500
   \   00000458   5143               MULS     R1,R2,R1
   \   0000045A   814A               LDR      R2,??Tester_MG1_Refresh_22+0x8  ;; 0x1388
   \   0000045C   8918               ADDS     R1,R1,R2
   \   0000045E   4218               ADDS     R2,R0,R1
   \   00000460   0023               MOVS     R3,#+0
   \   00000462   8048               LDR      R0,??Tester_MG1_Refresh_22+0xC  ;; g_counter
   \   00000464   03C8               LDM      R0!,{R0,R1}
   \   00000466   8B42               CMP      R3,R1
   \   00000468   05D8               BHI      ??Tester_MG1_Refresh_3
   \   0000046A   01D3               BCC      ??Tester_MG1_Refresh_28
   \   0000046C   8242               CMP      R2,R0
   \   0000046E   02D2               BCS      ??Tester_MG1_Refresh_3
  10351                              {
  10352                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_28:
   \   00000470   7A48               LDR      R0,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000472   7D49               LDR      R1,??Tester_MG1_Refresh_22+0x10  ;; 0xffff
   \   00000474   0180               STRH     R1,[R0, #+0]
  10353                              }
  10354                          break;           
  10355                                    
  10356                        }     
  10357                        
  10358                        if ((TestStep!=0xFFFF) && (TestAmount>=TestStep))   
   \                     ??Tester_MG1_Refresh_3:
   \   00000476   7948               LDR      R0,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000478   0088               LDRH     R0,[R0, #+0]
   \   0000047A   7B49               LDR      R1,??Tester_MG1_Refresh_22+0x10  ;; 0xffff
   \   0000047C   8842               CMP      R0,R1
   \   0000047E   21D0               BEQ      ??Tester_MG1_Refresh_29
   \   00000480   8148               LDR      R0,??Tester_MG1_Refresh_22+0x30  ;; TestAmount
   \   00000482   0088               LDRH     R0,[R0, #+0]
   \   00000484   7549               LDR      R1,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000486   0988               LDRH     R1,[R1, #+0]
   \   00000488   8842               CMP      R0,R1
   \   0000048A   1BD3               BCC      ??Tester_MG1_Refresh_29
  10359                          {
  10360                            char LIL=sprintf(txt, "%d",  (TestAmount-TestStep));
                                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000048C   7E48               LDR      R0,??Tester_MG1_Refresh_22+0x30  ;; TestAmount
   \   0000048E   0088               LDRH     R0,[R0, #+0]
   \   00000490   7249               LDR      R1,??Tester_MG1_Refresh_22+0x4  ;; TestStep
   \   00000492   0988               LDRH     R1,[R1, #+0]
   \   00000494   421A               SUBS     R2,R0,R1
   \   00000496   7DA1               ADR      R1,??Tester_MG1_Refresh_22+0x34  ;; 0x25, 0x64, 0x00, 0x00
   \   00000498   6846               MOV      R0,SP
   \   0000049A   ........           BL       sprintf
   \   0000049E   0200               MOVS     R2,R0
  10361                            Label(txt,2,4,92,LIL,57,1,127,0); 
   \   000004A0   82B0               SUB      SP,SP,#+8
   \   000004A2   0020               MOVS     R0,#+0
   \   000004A4   0090               STR      R0,[SP, #+0]
   \   000004A6   7F21               MOVS     R1,#+127
   \   000004A8   0120               MOVS     R0,#+1
   \   000004AA   03B4               PUSH     {R0,R1}
   \   000004AC   3921               MOVS     R1,#+57
   \   000004AE   1000               MOVS     R0,R2
   \   000004B0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000004B2   000E               LSRS     R0,R0,#+24
   \   000004B4   03B4               PUSH     {R0,R1}
   \   000004B6   5C23               MOVS     R3,#+92
   \   000004B8   0422               MOVS     R2,#+4
   \   000004BA   0221               MOVS     R1,#+2
   \   000004BC   06A8               ADD      R0,SP,#+24
   \   000004BE   ........           BL       Label
   \   000004C2   06B0               ADD      SP,SP,#+24
  10362                          }
  10363          
  10364                     
  10365                       
  10366                        
  10367                        
  10368                      //*******************************************
  10369                           char PozY=80;
   \                     ??Tester_MG1_Refresh_29:
   \   000004C4   5026               MOVS     R6,#+80
  10370                           char PozX=3;
   \   000004C6   0327               MOVS     R7,#+3
  10371                           H_line(PozX,PozY,26,1); 
   \   000004C8   0123               MOVS     R3,#+1
   \   000004CA   1A22               MOVS     R2,#+26
   \   000004CC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004CE   360E               LSRS     R6,R6,#+24
   \   000004D0   3100               MOVS     R1,R6
   \   000004D2   3800               MOVS     R0,R7
   \   000004D4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000004D6   000E               LSRS     R0,R0,#+24
   \   000004D8   ........           BL       H_line
  10372                           H_line(PozX,PozY+10,26,1);
   \   000004DC   0123               MOVS     R3,#+1
   \   000004DE   1A22               MOVS     R2,#+26
   \   000004E0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004E2   360E               LSRS     R6,R6,#+24
   \   000004E4   3100               MOVS     R1,R6
   \   000004E6   0A31               ADDS     R1,R1,#+10
   \   000004E8   3800               MOVS     R0,R7
   \   000004EA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000004EC   000E               LSRS     R0,R0,#+24
   \   000004EE   ........           BL       H_line
  10373                           V_line(PozX,PozY,10,1);
   \   000004F2   0123               MOVS     R3,#+1
   \   000004F4   0A22               MOVS     R2,#+10
   \   000004F6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004F8   360E               LSRS     R6,R6,#+24
   \   000004FA   3100               MOVS     R1,R6
   \   000004FC   3800               MOVS     R0,R7
   \   000004FE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000500   000E               LSRS     R0,R0,#+24
   \   00000502   ........           BL       V_line
  10374                           V_line(PozX+26,PozY,10,1); 
   \   00000506   0123               MOVS     R3,#+1
   \   00000508   0A22               MOVS     R2,#+10
   \   0000050A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000050C   360E               LSRS     R6,R6,#+24
   \   0000050E   3100               MOVS     R1,R6
   \   00000510   3800               MOVS     R0,R7
   \   00000512   1A30               ADDS     R0,R0,#+26
   \   00000514   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000516   000E               LSRS     R0,R0,#+24
   \   00000518   ........           BL       V_line
  10375                           Label("Q1",0,PozX+1,PozY+1,2,15,1,127,1); 
   \   0000051C   82B0               SUB      SP,SP,#+8
   \   0000051E   0120               MOVS     R0,#+1
   \   00000520   0090               STR      R0,[SP, #+0]
   \   00000522   7F21               MOVS     R1,#+127
   \   00000524   0120               MOVS     R0,#+1
   \   00000526   03B4               PUSH     {R0,R1}
   \   00000528   0F21               MOVS     R1,#+15
   \   0000052A   0220               MOVS     R0,#+2
   \   0000052C   03B4               PUSH     {R0,R1}
   \   0000052E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000530   360E               LSRS     R6,R6,#+24
   \   00000532   3300               MOVS     R3,R6
   \   00000534   5B1C               ADDS     R3,R3,#+1
   \   00000536   3A00               MOVS     R2,R7
   \   00000538   521C               ADDS     R2,R2,#+1
   \   0000053A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000053C   120E               LSRS     R2,R2,#+24
   \   0000053E   0021               MOVS     R1,#+0
   \   00000540   53A0               ADR      R0,??Tester_MG1_Refresh_22+0x38  ;; 0x51, 0x31, 0x00, 0x00
   \   00000542   ........           BL       Label
   \   00000546   06B0               ADD      SP,SP,#+24
  10376                           
  10377                           if ((MainStage.StageQ[CurrentNode].Port>>0)&0x1)
   \   00000548   4C48               LDR      R0,??Tester_MG1_Refresh_22+0x24  ;; 0x3a2
   \   0000054A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000054C   240E               LSRS     R4,R4,#+24
   \   0000054E   1621               MOVS     R1,#+22
   \   00000550   6143               MULS     R1,R4,R1
   \   00000552   464A               LDR      R2,??Tester_MG1_Refresh_22+0x14  ;; MainStage
   \   00000554   5118               ADDS     R1,R2,R1
   \   00000556   085A               LDRH     R0,[R1, R0]
   \   00000558   C007               LSLS     R0,R0,#+31
   \   0000055A   10D5               BPL      ??Tester_MG1_Refresh_30
  10378                           {
  10379                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   0000055C   82B0               SUB      SP,SP,#+8
   \   0000055E   0120               MOVS     R0,#+1
   \   00000560   0090               STR      R0,[SP, #+0]
   \   00000562   0723               MOVS     R3,#+7
   \   00000564   0722               MOVS     R2,#+7
   \   00000566   B61C               ADDS     R6,R6,#+2
   \   00000568   3100               MOVS     R1,R6
   \   0000056A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000056C   090E               LSRS     R1,R1,#+24
   \   0000056E   1237               ADDS     R7,R7,#+18
   \   00000570   3800               MOVS     R0,R7
   \   00000572   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000574   000E               LSRS     R0,R0,#+24
   \   00000576   ........           BL       CleanCanvasArea
   \   0000057A   02B0               ADD      SP,SP,#+8
   \   0000057C   0FE0               B        ??Tester_MG1_Refresh_31
  10380                           }else{
  10381                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_30:
   \   0000057E   82B0               SUB      SP,SP,#+8
   \   00000580   0020               MOVS     R0,#+0
   \   00000582   0090               STR      R0,[SP, #+0]
   \   00000584   0723               MOVS     R3,#+7
   \   00000586   0722               MOVS     R2,#+7
   \   00000588   B61C               ADDS     R6,R6,#+2
   \   0000058A   3100               MOVS     R1,R6
   \   0000058C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000058E   090E               LSRS     R1,R1,#+24
   \   00000590   1237               ADDS     R7,R7,#+18
   \   00000592   3800               MOVS     R0,R7
   \   00000594   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000596   000E               LSRS     R0,R0,#+24
   \   00000598   ........           BL       CleanCanvasArea
   \   0000059C   02B0               ADD      SP,SP,#+8
  10382                           }
  10383                           
  10384                           
  10385                           PozY=80;
   \                     ??Tester_MG1_Refresh_31:
   \   0000059E   5026               MOVS     R6,#+80
  10386                           PozX=33;
   \   000005A0   2127               MOVS     R7,#+33
  10387                           H_line(PozX,PozY,26,1); 
   \   000005A2   0123               MOVS     R3,#+1
   \   000005A4   1A22               MOVS     R2,#+26
   \   000005A6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000005A8   360E               LSRS     R6,R6,#+24
   \   000005AA   3100               MOVS     R1,R6
   \   000005AC   3800               MOVS     R0,R7
   \   000005AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005B0   000E               LSRS     R0,R0,#+24
   \   000005B2   ........           BL       H_line
  10388                           H_line(PozX,PozY+10,26,1);
   \   000005B6   0123               MOVS     R3,#+1
   \   000005B8   1A22               MOVS     R2,#+26
   \   000005BA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000005BC   360E               LSRS     R6,R6,#+24
   \   000005BE   3100               MOVS     R1,R6
   \   000005C0   0A31               ADDS     R1,R1,#+10
   \   000005C2   3800               MOVS     R0,R7
   \   000005C4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005C6   000E               LSRS     R0,R0,#+24
   \   000005C8   ........           BL       H_line
  10389                           V_line(PozX,PozY,10,1);
   \   000005CC   0123               MOVS     R3,#+1
   \   000005CE   0A22               MOVS     R2,#+10
   \   000005D0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000005D2   360E               LSRS     R6,R6,#+24
   \   000005D4   3100               MOVS     R1,R6
   \   000005D6   3800               MOVS     R0,R7
   \   000005D8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005DA   000E               LSRS     R0,R0,#+24
   \   000005DC   ........           BL       V_line
  10390                           V_line(PozX+26,PozY,10,1); 
   \   000005E0   0123               MOVS     R3,#+1
   \   000005E2   0A22               MOVS     R2,#+10
   \   000005E4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000005E6   360E               LSRS     R6,R6,#+24
   \   000005E8   3100               MOVS     R1,R6
   \   000005EA   3800               MOVS     R0,R7
   \   000005EC   1A30               ADDS     R0,R0,#+26
   \   000005EE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005F0   000E               LSRS     R0,R0,#+24
   \   000005F2   ........           BL       V_line
  10391                           Label("In1",0,PozX+1,PozY+1,3,15,1,127,1); 
   \   000005F6   82B0               SUB      SP,SP,#+8
   \   000005F8   0120               MOVS     R0,#+1
   \   000005FA   0090               STR      R0,[SP, #+0]
   \   000005FC   7F21               MOVS     R1,#+127
   \   000005FE   0120               MOVS     R0,#+1
   \   00000600   03B4               PUSH     {R0,R1}
   \   00000602   0F21               MOVS     R1,#+15
   \   00000604   0320               MOVS     R0,#+3
   \   00000606   03B4               PUSH     {R0,R1}
   \   00000608   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000060A   360E               LSRS     R6,R6,#+24
   \   0000060C   3300               MOVS     R3,R6
   \   0000060E   5B1C               ADDS     R3,R3,#+1
   \   00000610   3A00               MOVS     R2,R7
   \   00000612   521C               ADDS     R2,R2,#+1
   \   00000614   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000616   120E               LSRS     R2,R2,#+24
   \   00000618   0021               MOVS     R1,#+0
   \   0000061A   1EA0               ADR      R0,??Tester_MG1_Refresh_22+0x3C  ;; "In1"
   \   0000061C   ........           BL       Label
   \   00000620   06B0               ADD      SP,SP,#+24
  10392                           
  10393                           if ((MainStage.StageI[CurrentNode].Port>>0)&0x1)
   \   00000622   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000624   240E               LSRS     R4,R4,#+24
   \   00000626   1620               MOVS     R0,#+22
   \   00000628   6043               MULS     R0,R4,R0
   \   0000062A   1049               LDR      R1,??Tester_MG1_Refresh_22+0x14  ;; MainStage
   \   0000062C   0818               ADDS     R0,R1,R0
   \   0000062E   A030               ADDS     R0,R0,#+160
   \   00000630   0088               LDRH     R0,[R0, #+0]
   \   00000632   C007               LSLS     R0,R0,#+31
   \   00000634   30D5               BPL      ??Tester_MG1_Refresh_32
  10394                           {
  10395                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   00000636   82B0               SUB      SP,SP,#+8
   \   00000638   0120               MOVS     R0,#+1
   \   0000063A   0090               STR      R0,[SP, #+0]
   \   0000063C   0723               MOVS     R3,#+7
   \   0000063E   0722               MOVS     R2,#+7
   \   00000640   B61C               ADDS     R6,R6,#+2
   \   00000642   3100               MOVS     R1,R6
   \   00000644   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000646   090E               LSRS     R1,R1,#+24
   \   00000648   1237               ADDS     R7,R7,#+18
   \   0000064A   3800               MOVS     R0,R7
   \   0000064C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000064E   000E               LSRS     R0,R0,#+24
   \   00000650   ........           BL       CleanCanvasArea
   \   00000654   02B0               ADD      SP,SP,#+8
   \   00000656   2FE0               B        ??Tester_MG1_Refresh_33
   \                     ??Tester_MG1_Refresh_22:
   \   00000658   ........           DC32     TestStartTime
   \   0000065C   ........           DC32     TestStep
   \   00000660   88130000           DC32     0x1388
   \   00000664   ........           DC32     g_counter
   \   00000668   FFFF0000           DC32     0xffff
   \   0000066C   ........           DC32     MainStage
   \   00000670   10270000           DC32     0x2710
   \   00000674   ........           DC32     MaxTime
   \   00000678   ........           DC32     LastSendTime
   \   0000067C   A2030000           DC32     0x3a2
   \   00000680   ........           DC32     MainStage + 1772
   \   00000684   ........           DC32     ChangeStageFlag
   \   00000688   ........           DC32     TestAmount
   \   0000068C   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000690   51310000           DC8      0x51, 0x31, 0x00, 0x00
   \   00000694   496E3100           DC8      "In1"
  10396                           }else{
  10397                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_32:
   \   00000698   82B0               SUB      SP,SP,#+8
   \   0000069A   0020               MOVS     R0,#+0
   \   0000069C   0090               STR      R0,[SP, #+0]
   \   0000069E   0723               MOVS     R3,#+7
   \   000006A0   0722               MOVS     R2,#+7
   \   000006A2   B61C               ADDS     R6,R6,#+2
   \   000006A4   3100               MOVS     R1,R6
   \   000006A6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000006A8   090E               LSRS     R1,R1,#+24
   \   000006AA   1237               ADDS     R7,R7,#+18
   \   000006AC   3800               MOVS     R0,R7
   \   000006AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006B0   000E               LSRS     R0,R0,#+24
   \   000006B2   ........           BL       CleanCanvasArea
   \   000006B6   02B0               ADD      SP,SP,#+8
  10398                           }
  10399                 
  10400                           PozY=66;
   \                     ??Tester_MG1_Refresh_33:
   \   000006B8   4226               MOVS     R6,#+66
  10401                           PozX=3;
   \   000006BA   0327               MOVS     R7,#+3
  10402                           H_line(PozX,PozY,26,1); 
   \   000006BC   0123               MOVS     R3,#+1
   \   000006BE   1A22               MOVS     R2,#+26
   \   000006C0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000006C2   360E               LSRS     R6,R6,#+24
   \   000006C4   3100               MOVS     R1,R6
   \   000006C6   3800               MOVS     R0,R7
   \   000006C8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006CA   000E               LSRS     R0,R0,#+24
   \   000006CC   ........           BL       H_line
  10403                           H_line(PozX,PozY+10,26,1);
   \   000006D0   0123               MOVS     R3,#+1
   \   000006D2   1A22               MOVS     R2,#+26
   \   000006D4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000006D6   360E               LSRS     R6,R6,#+24
   \   000006D8   3100               MOVS     R1,R6
   \   000006DA   0A31               ADDS     R1,R1,#+10
   \   000006DC   3800               MOVS     R0,R7
   \   000006DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006E0   000E               LSRS     R0,R0,#+24
   \   000006E2   ........           BL       H_line
  10404                           V_line(PozX,PozY,10,1);
   \   000006E6   0123               MOVS     R3,#+1
   \   000006E8   0A22               MOVS     R2,#+10
   \   000006EA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000006EC   360E               LSRS     R6,R6,#+24
   \   000006EE   3100               MOVS     R1,R6
   \   000006F0   3800               MOVS     R0,R7
   \   000006F2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000006F4   000E               LSRS     R0,R0,#+24
   \   000006F6   ........           BL       V_line
  10405                           V_line(PozX+26,PozY,10,1); 
   \   000006FA   0123               MOVS     R3,#+1
   \   000006FC   0A22               MOVS     R2,#+10
   \   000006FE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000700   360E               LSRS     R6,R6,#+24
   \   00000702   3100               MOVS     R1,R6
   \   00000704   3800               MOVS     R0,R7
   \   00000706   1A30               ADDS     R0,R0,#+26
   \   00000708   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000070A   000E               LSRS     R0,R0,#+24
   \   0000070C   ........           BL       V_line
  10406                           Label("Q2",0,PozX+1,PozY+1,3,15,1,127,1); 
   \   00000710   82B0               SUB      SP,SP,#+8
   \   00000712   0120               MOVS     R0,#+1
   \   00000714   0090               STR      R0,[SP, #+0]
   \   00000716   7F21               MOVS     R1,#+127
   \   00000718   0120               MOVS     R0,#+1
   \   0000071A   03B4               PUSH     {R0,R1}
   \   0000071C   0F21               MOVS     R1,#+15
   \   0000071E   0320               MOVS     R0,#+3
   \   00000720   03B4               PUSH     {R0,R1}
   \   00000722   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000724   360E               LSRS     R6,R6,#+24
   \   00000726   3300               MOVS     R3,R6
   \   00000728   5B1C               ADDS     R3,R3,#+1
   \   0000072A   3A00               MOVS     R2,R7
   \   0000072C   521C               ADDS     R2,R2,#+1
   \   0000072E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000730   120E               LSRS     R2,R2,#+24
   \   00000732   0021               MOVS     R1,#+0
   \   00000734   B0A0               ADR      R0,??Tester_MG1_Refresh_34  ;; 0x51, 0x32, 0x00, 0x00
   \   00000736   ........           BL       Label
   \   0000073A   06B0               ADD      SP,SP,#+24
  10407                           
  10408                           if ((MainStage.StageQ[CurrentNode].Port>>1)&0x1)
   \   0000073C   AF48               LDR      R0,??Tester_MG1_Refresh_34+0x4  ;; 0x3a2
   \   0000073E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000740   240E               LSRS     R4,R4,#+24
   \   00000742   1621               MOVS     R1,#+22
   \   00000744   6143               MULS     R1,R4,R1
   \   00000746   AE4A               LDR      R2,??Tester_MG1_Refresh_34+0x8  ;; MainStage
   \   00000748   5118               ADDS     R1,R2,R1
   \   0000074A   085A               LDRH     R0,[R1, R0]
   \   0000074C   8007               LSLS     R0,R0,#+30
   \   0000074E   10D5               BPL      ??Tester_MG1_Refresh_35
  10409                           {
  10410                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   00000750   82B0               SUB      SP,SP,#+8
   \   00000752   0120               MOVS     R0,#+1
   \   00000754   0090               STR      R0,[SP, #+0]
   \   00000756   0723               MOVS     R3,#+7
   \   00000758   0722               MOVS     R2,#+7
   \   0000075A   B61C               ADDS     R6,R6,#+2
   \   0000075C   3100               MOVS     R1,R6
   \   0000075E   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000760   090E               LSRS     R1,R1,#+24
   \   00000762   1237               ADDS     R7,R7,#+18
   \   00000764   3800               MOVS     R0,R7
   \   00000766   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000768   000E               LSRS     R0,R0,#+24
   \   0000076A   ........           BL       CleanCanvasArea
   \   0000076E   02B0               ADD      SP,SP,#+8
   \   00000770   0FE0               B        ??Tester_MG1_Refresh_36
  10411                           }else{
  10412                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_35:
   \   00000772   82B0               SUB      SP,SP,#+8
   \   00000774   0020               MOVS     R0,#+0
   \   00000776   0090               STR      R0,[SP, #+0]
   \   00000778   0723               MOVS     R3,#+7
   \   0000077A   0722               MOVS     R2,#+7
   \   0000077C   B61C               ADDS     R6,R6,#+2
   \   0000077E   3100               MOVS     R1,R6
   \   00000780   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000782   090E               LSRS     R1,R1,#+24
   \   00000784   1237               ADDS     R7,R7,#+18
   \   00000786   3800               MOVS     R0,R7
   \   00000788   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000078A   000E               LSRS     R0,R0,#+24
   \   0000078C   ........           BL       CleanCanvasArea
   \   00000790   02B0               ADD      SP,SP,#+8
  10413                           }
  10414                           
  10415                           PozY=66;
   \                     ??Tester_MG1_Refresh_36:
   \   00000792   4226               MOVS     R6,#+66
  10416                           PozX=33;
   \   00000794   2127               MOVS     R7,#+33
  10417                           H_line(PozX,PozY,26,1); 
   \   00000796   0123               MOVS     R3,#+1
   \   00000798   1A22               MOVS     R2,#+26
   \   0000079A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000079C   360E               LSRS     R6,R6,#+24
   \   0000079E   3100               MOVS     R1,R6
   \   000007A0   3800               MOVS     R0,R7
   \   000007A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000007A4   000E               LSRS     R0,R0,#+24
   \   000007A6   ........           BL       H_line
  10418                           H_line(PozX,PozY+10,26,1);
   \   000007AA   0123               MOVS     R3,#+1
   \   000007AC   1A22               MOVS     R2,#+26
   \   000007AE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007B0   360E               LSRS     R6,R6,#+24
   \   000007B2   3100               MOVS     R1,R6
   \   000007B4   0A31               ADDS     R1,R1,#+10
   \   000007B6   3800               MOVS     R0,R7
   \   000007B8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000007BA   000E               LSRS     R0,R0,#+24
   \   000007BC   ........           BL       H_line
  10419                           V_line(PozX,PozY,10,1);
   \   000007C0   0123               MOVS     R3,#+1
   \   000007C2   0A22               MOVS     R2,#+10
   \   000007C4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007C6   360E               LSRS     R6,R6,#+24
   \   000007C8   3100               MOVS     R1,R6
   \   000007CA   3800               MOVS     R0,R7
   \   000007CC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000007CE   000E               LSRS     R0,R0,#+24
   \   000007D0   ........           BL       V_line
  10420                           V_line(PozX+26,PozY,10,1); 
   \   000007D4   0123               MOVS     R3,#+1
   \   000007D6   0A22               MOVS     R2,#+10
   \   000007D8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007DA   360E               LSRS     R6,R6,#+24
   \   000007DC   3100               MOVS     R1,R6
   \   000007DE   3800               MOVS     R0,R7
   \   000007E0   1A30               ADDS     R0,R0,#+26
   \   000007E2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000007E4   000E               LSRS     R0,R0,#+24
   \   000007E6   ........           BL       V_line
  10421                           Label("In2",0,PozX+1,PozY+1,3,15,1,127,1); 
   \   000007EA   82B0               SUB      SP,SP,#+8
   \   000007EC   0120               MOVS     R0,#+1
   \   000007EE   0090               STR      R0,[SP, #+0]
   \   000007F0   7F21               MOVS     R1,#+127
   \   000007F2   0120               MOVS     R0,#+1
   \   000007F4   03B4               PUSH     {R0,R1}
   \   000007F6   0F21               MOVS     R1,#+15
   \   000007F8   0320               MOVS     R0,#+3
   \   000007FA   03B4               PUSH     {R0,R1}
   \   000007FC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007FE   360E               LSRS     R6,R6,#+24
   \   00000800   3300               MOVS     R3,R6
   \   00000802   5B1C               ADDS     R3,R3,#+1
   \   00000804   3A00               MOVS     R2,R7
   \   00000806   521C               ADDS     R2,R2,#+1
   \   00000808   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000080A   120E               LSRS     R2,R2,#+24
   \   0000080C   0021               MOVS     R1,#+0
   \   0000080E   7DA0               ADR      R0,??Tester_MG1_Refresh_34+0xC  ;; "In2"
   \   00000810   ........           BL       Label
   \   00000814   06B0               ADD      SP,SP,#+24
  10422                           
  10423                           if ((MainStage.StageI[CurrentNode].Port>>1)&0x1)
   \   00000816   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000818   240E               LSRS     R4,R4,#+24
   \   0000081A   1620               MOVS     R0,#+22
   \   0000081C   4443               MULS     R4,R0,R4
   \   0000081E   7848               LDR      R0,??Tester_MG1_Refresh_34+0x8  ;; MainStage
   \   00000820   0019               ADDS     R0,R0,R4
   \   00000822   A030               ADDS     R0,R0,#+160
   \   00000824   0088               LDRH     R0,[R0, #+0]
   \   00000826   8007               LSLS     R0,R0,#+30
   \   00000828   10D5               BPL      ??Tester_MG1_Refresh_37
  10424                           {
  10425                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   0000082A   82B0               SUB      SP,SP,#+8
   \   0000082C   0120               MOVS     R0,#+1
   \   0000082E   0090               STR      R0,[SP, #+0]
   \   00000830   0723               MOVS     R3,#+7
   \   00000832   0722               MOVS     R2,#+7
   \   00000834   B61C               ADDS     R6,R6,#+2
   \   00000836   3100               MOVS     R1,R6
   \   00000838   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000083A   090E               LSRS     R1,R1,#+24
   \   0000083C   1237               ADDS     R7,R7,#+18
   \   0000083E   3800               MOVS     R0,R7
   \   00000840   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000842   000E               LSRS     R0,R0,#+24
   \   00000844   ........           BL       CleanCanvasArea
   \   00000848   02B0               ADD      SP,SP,#+8
   \   0000084A   0FE0               B        ??Tester_MG1_Refresh_38
  10426                           }else{
  10427                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_37:
   \   0000084C   82B0               SUB      SP,SP,#+8
   \   0000084E   0020               MOVS     R0,#+0
   \   00000850   0090               STR      R0,[SP, #+0]
   \   00000852   0723               MOVS     R3,#+7
   \   00000854   0722               MOVS     R2,#+7
   \   00000856   B61C               ADDS     R6,R6,#+2
   \   00000858   3100               MOVS     R1,R6
   \   0000085A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000085C   090E               LSRS     R1,R1,#+24
   \   0000085E   1237               ADDS     R7,R7,#+18
   \   00000860   3800               MOVS     R0,R7
   \   00000862   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000864   000E               LSRS     R0,R0,#+24
   \   00000866   ........           BL       CleanCanvasArea
   \   0000086A   02B0               ADD      SP,SP,#+8
  10428                           }
  10429          
  10430                    
  10431                     
  10432                           
  10433                           
  10434                                                     
  10435                          if (TestStep==0xFFFF)   //je¿eli test niezdany
   \                     ??Tester_MG1_Refresh_38:
   \   0000086C   6648               LDR      R0,??Tester_MG1_Refresh_34+0x10  ;; TestStep
   \   0000086E   0088               LDRH     R0,[R0, #+0]
   \   00000870   6649               LDR      R1,??Tester_MG1_Refresh_34+0x14  ;; 0xffff
   \   00000872   8842               CMP      R0,R1
   \   00000874   10D1               BNE      ??Tester_MG1_Refresh_39
  10436                          {
  10437                            Label("Blad testu",2,2,31,10,5,1,127,0); 
   \   00000876   82B0               SUB      SP,SP,#+8
   \   00000878   0020               MOVS     R0,#+0
   \   0000087A   0090               STR      R0,[SP, #+0]
   \   0000087C   7F21               MOVS     R1,#+127
   \   0000087E   0120               MOVS     R0,#+1
   \   00000880   03B4               PUSH     {R0,R1}
   \   00000882   0521               MOVS     R1,#+5
   \   00000884   0A20               MOVS     R0,#+10
   \   00000886   03B4               PUSH     {R0,R1}
   \   00000888   1F23               MOVS     R3,#+31
   \   0000088A   0222               MOVS     R2,#+2
   \   0000088C   0221               MOVS     R1,#+2
   \   0000088E   6048               LDR      R0,??Tester_MG1_Refresh_34+0x18  ;; `?<Constant "Blad testu">`
   \   00000890   ........           BL       Label
   \   00000894   06B0               ADD      SP,SP,#+24
   \   00000896   ABE0               B        ??Tester_MG1_Refresh_1
  10438                            
  10439                          }else if ((TestStep==TestAmount)|| (TestStep==TestAmount+1)) {
   \                     ??Tester_MG1_Refresh_39:
   \   00000898   5B48               LDR      R0,??Tester_MG1_Refresh_34+0x10  ;; TestStep
   \   0000089A   0088               LDRH     R0,[R0, #+0]
   \   0000089C   5D49               LDR      R1,??Tester_MG1_Refresh_34+0x1C  ;; TestAmount
   \   0000089E   0988               LDRH     R1,[R1, #+0]
   \   000008A0   8842               CMP      R0,R1
   \   000008A2   07D0               BEQ      ??Tester_MG1_Refresh_40
   \   000008A4   5848               LDR      R0,??Tester_MG1_Refresh_34+0x10  ;; TestStep
   \   000008A6   0088               LDRH     R0,[R0, #+0]
   \   000008A8   5A49               LDR      R1,??Tester_MG1_Refresh_34+0x1C  ;; TestAmount
   \   000008AA   0988               LDRH     R1,[R1, #+0]
   \   000008AC   491C               ADDS     R1,R1,#+1
   \   000008AE   8842               CMP      R0,R1
   \   000008B0   00D0               BEQ      .+4
   \   000008B2   9DE0               B        ??Tester_MG1_Refresh_1
  10440                            TestStep++;
   \                     ??Tester_MG1_Refresh_40:
   \   000008B4   5448               LDR      R0,??Tester_MG1_Refresh_34+0x10  ;; TestStep
   \   000008B6   5449               LDR      R1,??Tester_MG1_Refresh_34+0x10  ;; TestStep
   \   000008B8   0988               LDRH     R1,[R1, #+0]
   \   000008BA   491C               ADDS     R1,R1,#+1
   \   000008BC   0180               STRH     R1,[R0, #+0]
  10441                            Label("Test OK",2,2,52,10,60,1,127,1); 
   \   000008BE   82B0               SUB      SP,SP,#+8
   \   000008C0   0120               MOVS     R0,#+1
   \   000008C2   0090               STR      R0,[SP, #+0]
   \   000008C4   7F21               MOVS     R1,#+127
   \   000008C6   0120               MOVS     R0,#+1
   \   000008C8   03B4               PUSH     {R0,R1}
   \   000008CA   3C21               MOVS     R1,#+60
   \   000008CC   0A20               MOVS     R0,#+10
   \   000008CE   03B4               PUSH     {R0,R1}
   \   000008D0   3423               MOVS     R3,#+52
   \   000008D2   0222               MOVS     R2,#+2
   \   000008D4   0221               MOVS     R1,#+2
   \   000008D6   5048               LDR      R0,??Tester_MG1_Refresh_34+0x20  ;; `?<Constant "Test OK">`
   \   000008D8   ........           BL       Label
   \   000008DC   06B0               ADD      SP,SP,#+24
  10442                            Label("Czas t:",0,2,42,10,57,1,127,0); 
   \   000008DE   82B0               SUB      SP,SP,#+8
   \   000008E0   0020               MOVS     R0,#+0
   \   000008E2   0090               STR      R0,[SP, #+0]
   \   000008E4   7F21               MOVS     R1,#+127
   \   000008E6   0120               MOVS     R0,#+1
   \   000008E8   03B4               PUSH     {R0,R1}
   \   000008EA   3921               MOVS     R1,#+57
   \   000008EC   0A20               MOVS     R0,#+10
   \   000008EE   03B4               PUSH     {R0,R1}
   \   000008F0   2A23               MOVS     R3,#+42
   \   000008F2   0222               MOVS     R2,#+2
   \   000008F4   0021               MOVS     R1,#+0
   \   000008F6   4948               LDR      R0,??Tester_MG1_Refresh_34+0x24  ;; `?<Constant "Czas t:">`
   \   000008F8   ........           BL       Label
   \   000008FC   06B0               ADD      SP,SP,#+24
  10443                            char Li=sprintf(txt, "%d",  ((g_counter-TestStartTime)/1000), "%d s");
                                           ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000008FE   82B0               SUB      SP,SP,#+8
   \   00000900   4748               LDR      R0,??Tester_MG1_Refresh_34+0x28  ;; `?<Constant "%d s">`
   \   00000902   0090               STR      R0,[SP, #+0]
   \   00000904   4748               LDR      R0,??Tester_MG1_Refresh_34+0x2C  ;; g_counter
   \   00000906   03C8               LDM      R0!,{R0,R1}
   \   00000908   474A               LDR      R2,??Tester_MG1_Refresh_34+0x30  ;; TestStartTime
   \   0000090A   1268               LDR      R2,[R2, #+0]
   \   0000090C   0023               MOVS     R3,#+0
   \   0000090E   801A               SUBS     R0,R0,R2
   \   00000910   9941               SBCS     R1,R1,R3
   \   00000912   FA22               MOVS     R2,#+250
   \   00000914   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   00000916   0023               MOVS     R3,#+0
   \   00000918   ........           BL       __aeabi_uldivmod
   \   0000091C   0200               MOVS     R2,R0
   \   0000091E   0B00               MOVS     R3,R1
   \   00000920   42A1               ADR      R1,??Tester_MG1_Refresh_34+0x34  ;; 0x25, 0x64, 0x00, 0x00
   \   00000922   02A8               ADD      R0,SP,#+8
   \   00000924   ........           BL       sprintf
   \   00000928   02B0               ADD      SP,SP,#+8
   \   0000092A   0200               MOVS     R2,R0
  10444                            txt[Li++]='s';
   \   0000092C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000092E   120E               LSRS     R2,R2,#+24
   \   00000930   6846               MOV      R0,SP
   \   00000932   7321               MOVS     R1,#+115
   \   00000934   8154               STRB     R1,[R0, R2]
   \   00000936   521C               ADDS     R2,R2,#+1
  10445                            Label(txt,0,32,42,Li,25,1,127,0); 
   \   00000938   82B0               SUB      SP,SP,#+8
   \   0000093A   0020               MOVS     R0,#+0
   \   0000093C   0090               STR      R0,[SP, #+0]
   \   0000093E   7F21               MOVS     R1,#+127
   \   00000940   0120               MOVS     R0,#+1
   \   00000942   03B4               PUSH     {R0,R1}
   \   00000944   1921               MOVS     R1,#+25
   \   00000946   1000               MOVS     R0,R2
   \   00000948   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000094A   000E               LSRS     R0,R0,#+24
   \   0000094C   03B4               PUSH     {R0,R1}
   \   0000094E   2A23               MOVS     R3,#+42
   \   00000950   2022               MOVS     R2,#+32
   \   00000952   0021               MOVS     R1,#+0
   \   00000954   06A8               ADD      R0,SP,#+24
   \   00000956   ........           BL       Label
   \   0000095A   06B0               ADD      SP,SP,#+24
  10446                            
  10447                            Label("Czas p:",0,2,33,10,57,1,127,0); 
   \   0000095C   82B0               SUB      SP,SP,#+8
   \   0000095E   0020               MOVS     R0,#+0
   \   00000960   0090               STR      R0,[SP, #+0]
   \   00000962   7F21               MOVS     R1,#+127
   \   00000964   0120               MOVS     R0,#+1
   \   00000966   03B4               PUSH     {R0,R1}
   \   00000968   3921               MOVS     R1,#+57
   \   0000096A   0A20               MOVS     R0,#+10
   \   0000096C   03B4               PUSH     {R0,R1}
   \   0000096E   2123               MOVS     R3,#+33
   \   00000970   0222               MOVS     R2,#+2
   \   00000972   0021               MOVS     R1,#+0
   \   00000974   2E48               LDR      R0,??Tester_MG1_Refresh_34+0x38  ;; `?<Constant "Czas p:">`
   \   00000976   ........           BL       Label
   \   0000097A   06B0               ADD      SP,SP,#+24
  10448                            Li=sprintf(txt, "%d",  MaxTime, "%d s");
   \   0000097C   284B               LDR      R3,??Tester_MG1_Refresh_34+0x28  ;; `?<Constant "%d s">`
   \   0000097E   2D48               LDR      R0,??Tester_MG1_Refresh_34+0x3C  ;; MaxTime
   \   00000980   0288               LDRH     R2,[R0, #+0]
   \   00000982   2AA1               ADR      R1,??Tester_MG1_Refresh_34+0x34  ;; 0x25, 0x64, 0x00, 0x00
   \   00000984   6846               MOV      R0,SP
   \   00000986   ........           BL       sprintf
   \   0000098A   0200               MOVS     R2,R0
  10449                            txt[Li++]='m';
   \   0000098C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000098E   120E               LSRS     R2,R2,#+24
   \   00000990   6846               MOV      R0,SP
   \   00000992   6D21               MOVS     R1,#+109
   \   00000994   8154               STRB     R1,[R0, R2]
   \   00000996   521C               ADDS     R2,R2,#+1
  10450                            txt[Li++]='s';
   \   00000998   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000099A   120E               LSRS     R2,R2,#+24
   \   0000099C   6846               MOV      R0,SP
   \   0000099E   7321               MOVS     R1,#+115
   \   000009A0   8154               STRB     R1,[R0, R2]
   \   000009A2   521C               ADDS     R2,R2,#+1
  10451                            Label(txt,0,32,33,Li,25,1,127,0); 
   \   000009A4   82B0               SUB      SP,SP,#+8
   \   000009A6   0020               MOVS     R0,#+0
   \   000009A8   0090               STR      R0,[SP, #+0]
   \   000009AA   7F21               MOVS     R1,#+127
   \   000009AC   0120               MOVS     R0,#+1
   \   000009AE   03B4               PUSH     {R0,R1}
   \   000009B0   1921               MOVS     R1,#+25
   \   000009B2   1000               MOVS     R0,R2
   \   000009B4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000009B6   000E               LSRS     R0,R0,#+24
   \   000009B8   03B4               PUSH     {R0,R1}
   \   000009BA   2123               MOVS     R3,#+33
   \   000009BC   2022               MOVS     R2,#+32
   \   000009BE   0021               MOVS     R1,#+0
   \   000009C0   06A8               ADD      R0,SP,#+24
   \   000009C2   ........           BL       Label
   \   000009C6   06B0               ADD      SP,SP,#+24
  10452                            
  10453                            
  10454                            Button("Nowy test",3,18,58,13);
   \   000009C8   82B0               SUB      SP,SP,#+8
   \   000009CA   0D20               MOVS     R0,#+13
   \   000009CC   0090               STR      R0,[SP, #+0]
   \   000009CE   3A23               MOVS     R3,#+58
   \   000009D0   1222               MOVS     R2,#+18
   \   000009D2   0321               MOVS     R1,#+3
   \   000009D4   1848               LDR      R0,??Tester_MG1_Refresh_34+0x40  ;; `?<Constant "Nowy test">`
   \   000009D6   ........           BL       Button
   \   000009DA   02B0               ADD      SP,SP,#+8
  10455                            Button("Dlugi test",3,4,58,13); 
   \   000009DC   82B0               SUB      SP,SP,#+8
   \   000009DE   0D20               MOVS     R0,#+13
   \   000009E0   0090               STR      R0,[SP, #+0]
   \   000009E2   3A23               MOVS     R3,#+58
   \   000009E4   0422               MOVS     R2,#+4
   \   000009E6   0321               MOVS     R1,#+3
   \   000009E8   1448               LDR      R0,??Tester_MG1_Refresh_34+0x44  ;; `?<Constant "Dlugi test">`
   \   000009EA   ........           BL       Button
   \   000009EE   02B0               ADD      SP,SP,#+8
   \                     ??Tester_MG1_Refresh_1:
   \   000009F0   02B0               ADD      SP,SP,#+8
   \   000009F2   D0BC               POP      {R4,R6,R7}
   \   000009F4   01BC               POP      {R0}
   \   000009F6   0047               BX       R0               ;; return
   \                     ??Tester_MG1_Refresh_34:
   \   000009F8   51320000           DC8      0x51, 0x32, 0x00, 0x00
   \   000009FC   A2030000           DC32     0x3a2
   \   00000A00   ........           DC32     MainStage
   \   00000A04   496E3200           DC8      "In2"
   \   00000A08   ........           DC32     TestStep
   \   00000A0C   FFFF0000           DC32     0xffff
   \   00000A10   ........           DC32     `?<Constant "Blad testu">`
   \   00000A14   ........           DC32     TestAmount
   \   00000A18   ........           DC32     `?<Constant "Test OK">`
   \   00000A1C   ........           DC32     `?<Constant "Czas t:">`
   \   00000A20   ........           DC32     `?<Constant "%d s">`
   \   00000A24   ........           DC32     g_counter
   \   00000A28   ........           DC32     TestStartTime
   \   00000A2C   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000A30   ........           DC32     `?<Constant "Czas p:">`
   \   00000A34   ........           DC32     MaxTime
   \   00000A38   ........           DC32     `?<Constant "Nowy test">`
   \   00000A3C   ........           DC32     `?<Constant "Dlugi test">`
  10456                              
  10457                          }
  10458                 
  10459          
  10460                     
  10461                }//_______________________________________________________________________ 
  10462                                                                                   
  10463          
  10464          
  10465                
  10466                
  10467                
  10468                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10469                void NodeInfo_Paint(char CurrentNode)
  10470                {  
   \                     NodeInfo_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
  10471                      char txt[8];
  10472                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6846               MOV      R0,SP
   \   00000006   4E21               MOVS     R1,#+78
   \   00000008   0170               STRB     R1,[R0, #+0]
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   6F21               MOVS     R1,#+111
   \   0000000E   4170               STRB     R1,[R0, #+1]
   \   00000010   6846               MOV      R0,SP
   \   00000012   6421               MOVS     R1,#+100
   \   00000014   8170               STRB     R1,[R0, #+2]
   \   00000016   6846               MOV      R0,SP
   \   00000018   6521               MOVS     R1,#+101
   \   0000001A   C170               STRB     R1,[R0, #+3]
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   2021               MOVS     R1,#+32
   \   00000020   0171               STRB     R1,[R0, #+4]
  10473                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000022   0222               MOVS     R2,#+2
   \   00000024   6946               MOV      R1,SP
   \   00000026   491D               ADDS     R1,R1,#+5
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CharToStr
   \   00000032   0500               MOVS     R5,R0
  10474                  
  10475                     List_Paint(txt,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   0CA0               ADR      R0,??NodeInfo_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0321               MOVS     R1,#+3
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   6C22               MOVS     R2,#+108
   \   00000056   0121               MOVS     R1,#+1
   \   00000058   0AA8               ADD      R0,SP,#+40
   \   0000005A   ........           BL       List_Paint
   \   0000005E   0AB0               ADD      SP,SP,#+40
  10476          
  10477                     RefreshNeuronsList(&gProg); 
   \   00000060   0748               LDR      R0,??NodeInfo_Paint_0+0x4  ;; gProg
   \   00000062   ........           BL       RefreshNeuronsList
  10478          
  10479                     AddRfTask(SI, CurrentNode, 0xA);                //Dodaj rozkaz do tablicy zadañ RF odczytu informacji o module
   \   00000066   0A22               MOVS     R2,#+10
   \   00000068   2100               MOVS     R1,R4
   \   0000006A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000006C   090E               LSRS     R1,R1,#+24
   \   0000006E   0120               MOVS     R0,#+1
   \   00000070   ........           BL       AddRfTask
  10480                }//_______________________________________________________________________ 
   \   00000074   03B0               ADD      SP,SP,#+12
   \   00000076   30BC               POP      {R4,R5}
   \   00000078   01BC               POP      {R0}
   \   0000007A   0047               BX       R0               ;; return
   \                     ??NodeInfo_Paint_0:
   \   0000007C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000080   ........           DC32     gProg
  10481          
  10482          
  10483          
  10484                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10485                void NodeInfo_Event(char CurrentNode)
  10486                {
   \                     NodeInfo_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  10487                  int ans;
  10488                  char NP;
                              ^
Warning[Pe177]: variable "NP" was declared but never referenced
  10489                 
  10490                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1148               LDR      R0,??NodeInfo_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1048               LDR      R0,??NodeInfo_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1048               LDR      R0,??NodeInfo_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   0F48               LDR      R0,??NodeInfo_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  10491            
  10492                  
  10493                 
  10494                  
  10495                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   0DD0               BEQ      ??NodeInfo_Event_1
  10496                    {
  10497                    if (ans<0) {
   \   00000030   0028               CMP      R0,#+0
   \   00000032   09D5               BPL      ??NodeInfo_Event_2
  10498                      MenuLevel=(MenuLevel/100);
   \   00000034   0B48               LDR      R0,??NodeInfo_Event_0+0x10  ;; MenuLevel
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   6421               MOVS     R1,#+100
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   0949               LDR      R1,??NodeInfo_Event_0+0x10  ;; MenuLevel
   \   00000040   0860               STR      R0,[R1, #+0]
  10499                     //NeuronNrChange=0;
  10500                     //NeuronIdChange=0;
  10501                     //FirstNodeStanIO_Paint=0;
  10502                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000042   0948               LDR      R0,??NodeInfo_Event_0+0x14  ;; gProg
   \   00000044   ........           BL       SetTask
  10503                    }
  10504                    MenuPaint();
   \                     ??NodeInfo_Event_2:
   \   00000048   ........           BL       MenuPaint
  10505                    } 
  10506                  
  10507                  
  10508                  
  10509                  
  10510                }//_______________________________________________________________________
   \                     ??NodeInfo_Event_1:
   \   0000004C   10BC               POP      {R4}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??NodeInfo_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     MenuLevel
   \   00000068   ........           DC32     gProg
  10511          
  10512          
  10513          
  10514          
  10515          
  10516                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10517                void NodeInfo_Refresh(char CurrentNode)
  10518                {  
   \                     NodeInfo_Refresh:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
  10519                     char Txt[6];
  10520                  
  10521                     static char Dziel10=0;
  10522                     
  10523                     if (Dziel10<10) {Dziel10++;}else
   \   00000002   3849               LDR      R1,??NodeInfo_Refresh_0  ;; ??Dziel10
   \   00000004   0978               LDRB     R1,[R1, #+0]
   \   00000006   0A29               CMP      R1,#+10
   \   00000008   05D2               BCS      ??NodeInfo_Refresh_1
   \   0000000A   3648               LDR      R0,??NodeInfo_Refresh_0  ;; ??Dziel10
   \   0000000C   3549               LDR      R1,??NodeInfo_Refresh_0  ;; ??Dziel10
   \   0000000E   0978               LDRB     R1,[R1, #+0]
   \   00000010   491C               ADDS     R1,R1,#+1
   \   00000012   0170               STRB     R1,[R0, #+0]
   \   00000014   61E0               B        ??NodeInfo_Refresh_2
  10524                     {
  10525                       Dziel10=0;
   \                     ??NodeInfo_Refresh_1:
   \   00000016   3349               LDR      R1,??NodeInfo_Refresh_0  ;; ??Dziel10
   \   00000018   0022               MOVS     R2,#+0
   \   0000001A   0A70               STRB     R2,[R1, #+0]
  10526                       
  10527                      _NodeInfo  NodeInfo;
  10528                      NodeInfo.NodeInfoWord=MainStage.StageI[CurrentNode].Value[0x0A];
   \   0000001C   6946               MOV      R1,SP
   \   0000001E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
   \   00000022   1622               MOVS     R2,#+22
   \   00000024   5043               MULS     R0,R2,R0
   \   00000026   304A               LDR      R2,??NodeInfo_Refresh_0+0x4  ;; MainStage
   \   00000028   1018               ADDS     R0,R2,R0
   \   0000002A   B430               ADDS     R0,R0,#+180
   \   0000002C   0088               LDRH     R0,[R0, #+0]
   \   0000002E   0880               STRH     R0,[R1, #+0]
  10529                      
  10530          
  10531                      Label("Name:",0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0120               MOVS     R0,#+1
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   7F21               MOVS     R1,#+127
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   3E21               MOVS     R1,#+62
   \   0000003E   0F20               MOVS     R0,#+15
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   6123               MOVS     R3,#+97
   \   00000044   0122               MOVS     R2,#+1
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   2848               LDR      R0,??NodeInfo_Refresh_0+0x8  ;; `?<Constant "Name:">`
   \   0000004A   ........           BL       Label
   \   0000004E   06B0               ADD      SP,SP,#+24
  10532                      Label((char*)NodeModelName[NodeInfo.Model],0,10,86,5,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   7F21               MOVS     R1,#+127
   \   00000058   0120               MOVS     R0,#+1
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   2821               MOVS     R1,#+40
   \   0000005E   0520               MOVS     R0,#+5
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   5623               MOVS     R3,#+86
   \   00000064   0A22               MOVS     R2,#+10
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   06A8               ADD      R0,SP,#+24
   \   0000006A   0078               LDRB     R0,[R0, #+0]
   \   0000006C   0A24               MOVS     R4,#+10
   \   0000006E   6043               MULS     R0,R4,R0
   \   00000070   1F4C               LDR      R4,??NodeInfo_Refresh_0+0xC  ;; NodeModelName
   \   00000072   2018               ADDS     R0,R4,R0
   \   00000074   ........           BL       Label
   \   00000078   06B0               ADD      SP,SP,#+24
  10533          
  10534          
  10535                      sprintf(Txt, "%d.%d",  NodeInfo.SoftVersion, NodeInfo.SoftSubVersion);
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000007A   6846               MOV      R0,SP
   \   0000007C   4078               LDRB     R0,[R0, #+1]
   \   0000007E   0300               MOVS     R3,R0
   \   00000080   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000082   1B0E               LSRS     R3,R3,#+24
   \   00000084   1B09               LSRS     R3,R3,#+4
   \   00000086   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000088   1B0E               LSRS     R3,R3,#+24
   \   0000008A   6846               MOV      R0,SP
   \   0000008C   4078               LDRB     R0,[R0, #+1]
   \   0000008E   0207               LSLS     R2,R0,#+28       ;; ZeroExtS R2,R0,#+28,#+28
   \   00000090   120F               LSRS     R2,R2,#+28
   \   00000092   1849               LDR      R1,??NodeInfo_Refresh_0+0x10  ;; `?<Constant "%d.%d">`
   \   00000094   01A8               ADD      R0,SP,#+4
   \   00000096   ........           BL       sprintf
  10536                      Label("Soft version:",0,1,75,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0120               MOVS     R0,#+1
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   7F21               MOVS     R1,#+127
   \   000000A2   0120               MOVS     R0,#+1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   3E21               MOVS     R1,#+62
   \   000000A8   0F20               MOVS     R0,#+15
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   4B23               MOVS     R3,#+75
   \   000000AE   0122               MOVS     R2,#+1
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   1148               LDR      R0,??NodeInfo_Refresh_0+0x14  ;; `?<Constant "Soft version:">`
   \   000000B4   ........           BL       Label
   \   000000B8   06B0               ADD      SP,SP,#+24
  10537                      Label(Txt,0,10,64,15,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)    
   \   000000BA   82B0               SUB      SP,SP,#+8
   \   000000BC   0020               MOVS     R0,#+0
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   7F21               MOVS     R1,#+127
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   03B4               PUSH     {R0,R1}
   \   000000C6   2821               MOVS     R1,#+40
   \   000000C8   0F20               MOVS     R0,#+15
   \   000000CA   03B4               PUSH     {R0,R1}
   \   000000CC   4023               MOVS     R3,#+64
   \   000000CE   0A22               MOVS     R2,#+10
   \   000000D0   0021               MOVS     R1,#+0
   \   000000D2   07A8               ADD      R0,SP,#+28
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
  10538                         
  10539                         
  10540                     }
  10541                }//_______________________________________________________________________ 
   \                     ??NodeInfo_Refresh_2:
   \   000000DA   04B0               ADD      SP,SP,#+16
   \   000000DC   10BC               POP      {R4}
   \   000000DE   01BC               POP      {R0}
   \   000000E0   0047               BX       R0               ;; return
   \   000000E2   C046               Nop      
   \                     ??NodeInfo_Refresh_0:
   \   000000E4   ........           DC32     ??Dziel10
   \   000000E8   ........           DC32     MainStage
   \   000000EC   ........           DC32     `?<Constant "Name:">`
   \   000000F0   ........           DC32     NodeModelName
   \   000000F4   ........           DC32     `?<Constant "%d.%d">`
   \   000000F8   ........           DC32     `?<Constant "Soft version:">`

   \                                 In section .bss, align 1
   \                     ??Dziel10:
   \   00000000                      DS8 1
  10542                                                                             
  10543               
  10544                
  10545                
  10546                
  10547                
  10548                
  10549                
  10550                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10551                void Net_Paint(void)
  10552                {
   \                     Net_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10553                   if (NET.WiFi.On)
   \   00000002   3848               LDR      R0,??Net_Paint_0  ;; NET + 80
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   39D0               BEQ      ??Net_Paint_1
  10554                   {
  10555                      List_Paint(Speech[g_leng].Siec,6,15,0,0,3, Speech[g_leng].UstawWiFi,"Host" , Speech[g_leng].Okresowosc, Speech[g_leng].Status, "Server reset" ,Speech[g_leng].Wyl_WiFi, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   3548               LDR      R0,??Net_Paint_0+0x4  ;; 0x99c
   \   00000012   3649               LDR      R1,??Net_Paint_0+0x8  ;; g_leng
   \   00000014   0968               LDR      R1,[R1, #+0]
   \   00000016   364A               LDR      R2,??Net_Paint_0+0xC  ;; 0xa7d
   \   00000018   5143               MULS     R1,R2,R1
   \   0000001A   364A               LDR      R2,??Net_Paint_0+0x10  ;; Speech
   \   0000001C   5118               ADDS     R1,R2,R1
   \   0000001E   0918               ADDS     R1,R1,R0
   \   00000020   3548               LDR      R0,??Net_Paint_0+0x14  ;; `?<Constant "Server reset">`
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   3548               LDR      R0,??Net_Paint_0+0x18  ;; 0xa14
   \   00000026   3149               LDR      R1,??Net_Paint_0+0x8  ;; g_leng
   \   00000028   0968               LDR      R1,[R1, #+0]
   \   0000002A   314A               LDR      R2,??Net_Paint_0+0xC  ;; 0xa7d
   \   0000002C   5143               MULS     R1,R2,R1
   \   0000002E   314A               LDR      R2,??Net_Paint_0+0x10  ;; Speech
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   0918               ADDS     R1,R1,R0
   \   00000034   3248               LDR      R0,??Net_Paint_0+0x1C  ;; 0x97e
   \   00000036   2D4A               LDR      R2,??Net_Paint_0+0x8  ;; g_leng
   \   00000038   1268               LDR      R2,[R2, #+0]
   \   0000003A   2D4B               LDR      R3,??Net_Paint_0+0xC  ;; 0xa7d
   \   0000003C   5A43               MULS     R2,R3,R2
   \   0000003E   2D4B               LDR      R3,??Net_Paint_0+0x10  ;; Speech
   \   00000040   9A18               ADDS     R2,R3,R2
   \   00000042   1018               ADDS     R0,R2,R0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   2F49               LDR      R1,??Net_Paint_0+0x20  ;; `?<Constant "Host">`
   \   00000048   2F48               LDR      R0,??Net_Paint_0+0x24  ;; 0x8d9
   \   0000004A   284A               LDR      R2,??Net_Paint_0+0x8  ;; g_leng
   \   0000004C   1268               LDR      R2,[R2, #+0]
   \   0000004E   284B               LDR      R3,??Net_Paint_0+0xC  ;; 0xa7d
   \   00000050   5A43               MULS     R2,R3,R2
   \   00000052   284B               LDR      R3,??Net_Paint_0+0x10  ;; Speech
   \   00000054   9A18               ADDS     R2,R3,R2
   \   00000056   1018               ADDS     R0,R2,R0
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   0321               MOVS     R1,#+3
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   0023               MOVS     R3,#+0
   \   00000062   0F22               MOVS     R2,#+15
   \   00000064   0621               MOVS     R1,#+6
   \   00000066   2948               LDR      R0,??Net_Paint_0+0x28  ;; 0x8ca
   \   00000068   204C               LDR      R4,??Net_Paint_0+0x8  ;; g_leng
   \   0000006A   2468               LDR      R4,[R4, #+0]
   \   0000006C   204D               LDR      R5,??Net_Paint_0+0xC  ;; 0xa7d
   \   0000006E   6C43               MULS     R4,R5,R4
   \   00000070   204D               LDR      R5,??Net_Paint_0+0x10  ;; Speech
   \   00000072   2C19               ADDS     R4,R5,R4
   \   00000074   2018               ADDS     R0,R4,R0
   \   00000076   ........           BL       List_Paint
   \   0000007A   0AB0               ADD      SP,SP,#+40
   \   0000007C   2DE0               B        ??Net_Paint_2
  10556                   }else{
  10557                      List_Paint(Speech[g_leng].Siec,1,60,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??Net_Paint_1:
   \   0000007E   0021               MOVS     R1,#+0
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   1FA0               ADR      R0,??Net_Paint_0+0x2C  ;; 0x20, 0x00, 0x00, 0x00
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   0321               MOVS     R1,#+3
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   0023               MOVS     R3,#+0
   \   0000009E   3C22               MOVS     R2,#+60
   \   000000A0   0121               MOVS     R1,#+1
   \   000000A2   1A48               LDR      R0,??Net_Paint_0+0x28  ;; 0x8ca
   \   000000A4   114C               LDR      R4,??Net_Paint_0+0x8  ;; g_leng
   \   000000A6   2468               LDR      R4,[R4, #+0]
   \   000000A8   114D               LDR      R5,??Net_Paint_0+0xC  ;; 0xa7d
   \   000000AA   6C43               MULS     R4,R5,R4
   \   000000AC   114D               LDR      R5,??Net_Paint_0+0x10  ;; Speech
   \   000000AE   2C19               ADDS     R4,R5,R4
   \   000000B0   2018               ADDS     R0,R4,R0
   \   000000B2   ........           BL       List_Paint
   \   000000B6   0AB0               ADD      SP,SP,#+40
  10558                      Button(Speech[g_leng].Wl_WiFi,7,75,50,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0D20               MOVS     R0,#+13
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   3223               MOVS     R3,#+50
   \   000000C0   4B22               MOVS     R2,#+75
   \   000000C2   0721               MOVS     R1,#+7
   \   000000C4   1348               LDR      R0,??Net_Paint_0+0x30  ;; 0x98d
   \   000000C6   094C               LDR      R4,??Net_Paint_0+0x8  ;; g_leng
   \   000000C8   2468               LDR      R4,[R4, #+0]
   \   000000CA   094D               LDR      R5,??Net_Paint_0+0xC  ;; 0xa7d
   \   000000CC   6C43               MULS     R4,R5,R4
   \   000000CE   094D               LDR      R5,??Net_Paint_0+0x10  ;; Speech
   \   000000D0   2C19               ADDS     R4,R5,R4
   \   000000D2   2018               ADDS     R0,R4,R0
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
  10559                   }
  10560                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Net_Paint_2:
   \   000000DA   01B0               ADD      SP,SP,#+4
   \   000000DC   30BC               POP      {R4,R5}
   \   000000DE   01BC               POP      {R0}
   \   000000E0   0047               BX       R0               ;; return
   \   000000E2   C046               Nop      
   \                     ??Net_Paint_0:
   \   000000E4   ........           DC32     NET + 80
   \   000000E8   9C090000           DC32     0x99c
   \   000000EC   ........           DC32     g_leng
   \   000000F0   7D0A0000           DC32     0xa7d
   \   000000F4   ........           DC32     Speech
   \   000000F8   ........           DC32     `?<Constant "Server reset">`
   \   000000FC   140A0000           DC32     0xa14
   \   00000100   7E090000           DC32     0x97e
   \   00000104   ........           DC32     `?<Constant "Host">`
   \   00000108   D9080000           DC32     0x8d9
   \   0000010C   CA080000           DC32     0x8ca
   \   00000110   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000114   8D090000           DC32     0x98d
  10561          
  10562          
  10563                  
  10564                 
  10565                 
  10566                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10567                void Net_Event(void)
  10568                {
   \                     Net_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10569                  if (NET.WiFi.On)
   \   00000002   5C48               LDR      R0,??Net_Event_0  ;; NET + 80
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   4ED0               BEQ      ??Net_Event_1
  10570                   {
  10571                        int ans=List_Event(X_up, Y_up, X_down, Y_down, 6 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   0620               MOVS     R0,#+6
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   5848               LDR      R0,??Net_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   5748               LDR      R0,??Net_Event_0+0x8  ;; X_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   425E               LDRSH    R2,[R0, R1]
   \   00000022   5748               LDR      R0,??Net_Event_0+0xC  ;; Y_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   415E               LDRSH    R1,[R0, R1]
   \   00000028   5648               LDR      R0,??Net_Event_0+0x10  ;; X_up
   \   0000002A   0024               MOVS     R4,#+0
   \   0000002C   005F               LDRSH    R0,[R0, R4]
   \   0000002E   ........           BL       List_Event
   \   00000032   04B0               ADD      SP,SP,#+16
   \   00000034   0400               MOVS     R4,R0
  10572                  
  10573                        if (ans)
   \   00000036   002C               CMP      R4,#+0
   \   00000038   00D1               BNE      .+4
   \   0000003A   97E0               B        ??Net_Event_2
  10574                          {
  10575                          if ((ans>0) && (ans<=4)) MenuLevel=(MenuLevel*10+ans);
   \   0000003C   012C               CMP      R4,#+1
   \   0000003E   08DB               BLT      ??Net_Event_3
   \   00000040   052C               CMP      R4,#+5
   \   00000042   06DA               BGE      ??Net_Event_3
   \   00000044   5048               LDR      R0,??Net_Event_0+0x14  ;; MenuLevel
   \   00000046   5049               LDR      R1,??Net_Event_0+0x14  ;; MenuLevel
   \   00000048   0968               LDR      R1,[R1, #+0]
   \   0000004A   0A22               MOVS     R2,#+10
   \   0000004C   5143               MULS     R1,R2,R1
   \   0000004E   0919               ADDS     R1,R1,R4
   \   00000050   0160               STR      R1,[R0, #+0]
  10576                          if (ans==5)   //reset - pobranie konfiguracji z hosta
   \                     ??Net_Event_3:
   \   00000052   052C               CMP      R4,#+5
   \   00000054   05D1               BNE      ??Net_Event_4
  10577                          {
  10578                            NET.Status.NextHttpOrder=HTTP_GET_Config;
   \   00000056   4D48               LDR      R0,??Net_Event_0+0x18  ;; NET + 3
   \   00000058   1421               MOVS     R1,#+20
   \   0000005A   0170               STRB     R1,[R0, #+0]
  10579                            NET.HTTP.LastForseOrderNr=0;
   \   0000005C   4C48               LDR      R0,??Net_Event_0+0x1C  ;; NET + 244
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   0180               STRH     R1,[R0, #+0]
  10580                          }
  10581                          if (ans==6)   //wy³¹cz WiFi
   \                     ??Net_Event_4:
   \   00000062   062C               CMP      R4,#+6
   \   00000064   11D1               BNE      ??Net_Event_5
  10582                          {
  10583                              NET.WiFi.On=0; 
   \   00000066   4348               LDR      R0,??Net_Event_0  ;; NET + 80
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0170               STRB     R1,[R0, #+0]
  10584                             //zapis do flash
  10585                              unsigned int Save = __get_interrupt_state();  
   \   0000006C   ........           BL       __iar_get_interrupt_state
   \   00000070   0500               MOVS     R5,R0
  10586                              __disable_interrupt();
   \   00000072   ........           BL       __iar_disable_interrupt
  10587                              
  10588                                //at91flashWrite((unsigned int)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), 0,  (char*) (&(NET.WiFi.On)), 1);
  10589                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), (char*) (&(NET.WiFi.On)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000076   0122               MOVS     R2,#+1
   \   00000078   3E49               LDR      R1,??Net_Event_0  ;; NET + 80
   \   0000007A   4648               LDR      R0,??Net_Event_0+0x20  ;; 0x13d8b8
   \   0000007C   ........           BL       FlashWrite
  10590                              __set_interrupt_state(Save);
   \   00000080   2800               MOVS     R0,R5
   \   00000082   ........           BL       __iar_set_interrupt_state
  10591                              __enable_interrupt();
   \   00000086   ........           BL       __iar_enable_interrupt
  10592                              //koniec zapisu do flash
  10593                            
  10594                          }
  10595                          if (ans<0) {
   \                     ??Net_Event_5:
   \   0000008A   002C               CMP      R4,#+0
   \   0000008C   09D5               BPL      ??Net_Event_6
  10596                            MenuLevel=(MenuLevel/10);
   \   0000008E   3E48               LDR      R0,??Net_Event_0+0x14  ;; MenuLevel
   \   00000090   0068               LDR      R0,[R0, #+0]
   \   00000092   0A21               MOVS     R1,#+10
   \   00000094   ........           BL       __aeabi_idivmod
   \   00000098   3B49               LDR      R1,??Net_Event_0+0x14  ;; MenuLevel
   \   0000009A   0860               STR      R0,[R1, #+0]
  10597                            CurModifSheet=0; 
   \   0000009C   3E48               LDR      R0,??Net_Event_0+0x24  ;; CurModifSheet
   \   0000009E   0021               MOVS     R1,#+0
   \   000000A0   0170               STRB     R1,[R0, #+0]
  10598                          }
  10599                          MenuPaint();
   \                     ??Net_Event_6:
   \   000000A2   ........           BL       MenuPaint
   \   000000A6   61E0               B        ??Net_Event_2
  10600                          } 
  10601                   }else{
  10602                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   \                     ??Net_Event_1:
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   0F21               MOVS     R1,#+15
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   3048               LDR      R0,??Net_Event_0+0x4  ;; Y_down
   \   000000B6   0021               MOVS     R1,#+0
   \   000000B8   435E               LDRSH    R3,[R0, R1]
   \   000000BA   3048               LDR      R0,??Net_Event_0+0x8  ;; X_down
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   425E               LDRSH    R2,[R0, R1]
   \   000000C0   2F48               LDR      R0,??Net_Event_0+0xC  ;; Y_up
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   415E               LDRSH    R1,[R0, R1]
   \   000000C6   2F48               LDR      R0,??Net_Event_0+0x10  ;; X_up
   \   000000C8   0024               MOVS     R4,#+0
   \   000000CA   005F               LDRSH    R0,[R0, R4]
   \   000000CC   ........           BL       List_Event
   \   000000D0   04B0               ADD      SP,SP,#+16
  10603                        if (ans<0) {
   \   000000D2   0028               CMP      R0,#+0
   \   000000D4   09D5               BPL      ??Net_Event_7
  10604                              MenuLevel=(MenuLevel/10);
   \   000000D6   2C48               LDR      R0,??Net_Event_0+0x14  ;; MenuLevel
   \   000000D8   0068               LDR      R0,[R0, #+0]
   \   000000DA   0A21               MOVS     R1,#+10
   \   000000DC   ........           BL       __aeabi_idivmod
   \   000000E0   2949               LDR      R1,??Net_Event_0+0x14  ;; MenuLevel
   \   000000E2   0860               STR      R0,[R1, #+0]
  10605                              CurModifSheet=0; 
   \   000000E4   2C48               LDR      R0,??Net_Event_0+0x24  ;; CurModifSheet
   \   000000E6   0021               MOVS     R1,#+0
   \   000000E8   0170               STRB     R1,[R0, #+0]
  10606                            }
  10607                       
  10608                     
  10609                       if (Button(Speech[g_leng].Wl_WiFi,7,75,50,13)==1)
   \                     ??Net_Event_7:
   \   000000EA   82B0               SUB      SP,SP,#+8
   \   000000EC   0D20               MOVS     R0,#+13
   \   000000EE   0090               STR      R0,[SP, #+0]
   \   000000F0   3223               MOVS     R3,#+50
   \   000000F2   4B22               MOVS     R2,#+75
   \   000000F4   0721               MOVS     R1,#+7
   \   000000F6   2948               LDR      R0,??Net_Event_0+0x28  ;; 0x98d
   \   000000F8   294C               LDR      R4,??Net_Event_0+0x2C  ;; g_leng
   \   000000FA   2468               LDR      R4,[R4, #+0]
   \   000000FC   294D               LDR      R5,??Net_Event_0+0x30  ;; 0xa7d
   \   000000FE   6C43               MULS     R4,R5,R4
   \   00000100   294D               LDR      R5,??Net_Event_0+0x34  ;; Speech
   \   00000102   2C19               ADDS     R4,R5,R4
   \   00000104   2018               ADDS     R0,R4,R0
   \   00000106   ........           BL       Button
   \   0000010A   02B0               ADD      SP,SP,#+8
   \   0000010C   0128               CMP      R0,#+1
   \   0000010E   2DD1               BNE      ??Net_Event_2
  10610                       {
  10611                             NET.Status.FreezTime=0;
   \   00000110   264A               LDR      R2,??Net_Event_0+0x38  ;; NET + 64
   \   00000112   0020               MOVS     R0,#+0
   \   00000114   0021               MOVS     R1,#+0
   \   00000116   03C2               STM      R2!,{R0,R1}
   \   00000118   083A               SUBS     R2,R2,#+8
  10612                             NET.Status.HostLink=DISCONNECTED;
   \   0000011A   2548               LDR      R0,??Net_Event_0+0x3C  ;; NET + 1
   \   0000011C   0021               MOVS     R1,#+0
   \   0000011E   0170               STRB     R1,[R0, #+0]
  10613                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000120   2448               LDR      R0,??Net_Event_0+0x40  ;; NET
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   0170               STRB     R1,[R0, #+0]
  10614                             NET.Status.Timeout=0;
   \   00000126   244A               LDR      R2,??Net_Event_0+0x44  ;; NET + 56
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   0021               MOVS     R1,#+0
   \   0000012C   03C2               STM      R2!,{R0,R1}
   \   0000012E   083A               SUBS     R2,R2,#+8
  10615                             NET.Status.HttpNextQueryTime=0;
   \   00000130   224A               LDR      R2,??Net_Event_0+0x48  ;; NET + 48
   \   00000132   0020               MOVS     R0,#+0
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   03C2               STM      R2!,{R0,R1}
   \   00000138   083A               SUBS     R2,R2,#+8
  10616                             NET.Status.FreezTime=0;
   \   0000013A   1C4A               LDR      R2,??Net_Event_0+0x38  ;; NET + 64
   \   0000013C   0020               MOVS     R0,#+0
   \   0000013E   0021               MOVS     R1,#+0
   \   00000140   03C2               STM      R2!,{R0,R1}
   \   00000142   083A               SUBS     R2,R2,#+8
  10617                         
  10618                             NET.WiFi.On=1; 
   \   00000144   0B48               LDR      R0,??Net_Event_0  ;; NET + 80
   \   00000146   0121               MOVS     R1,#+1
   \   00000148   0170               STRB     R1,[R0, #+0]
  10619                             //zapis do flash
  10620                              unsigned int Save = __get_interrupt_state();  
   \   0000014A   ........           BL       __iar_get_interrupt_state
   \   0000014E   0400               MOVS     R4,R0
  10621                              __disable_interrupt();
   \   00000150   ........           BL       __iar_disable_interrupt
  10622                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), (char*) (&(NET.WiFi.On)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000154   0122               MOVS     R2,#+1
   \   00000156   0749               LDR      R1,??Net_Event_0  ;; NET + 80
   \   00000158   0E48               LDR      R0,??Net_Event_0+0x20  ;; 0x13d8b8
   \   0000015A   ........           BL       FlashWrite
  10623                              __set_interrupt_state(Save);
   \   0000015E   2000               MOVS     R0,R4
   \   00000160   ........           BL       __iar_set_interrupt_state
  10624                              __enable_interrupt();
   \   00000164   ........           BL       __iar_enable_interrupt
  10625                              //koniec zapisu do flash
  10626                              
  10627                              
  10628                         MenuPaint();
   \   00000168   ........           BL       MenuPaint
  10629                       }
  10630                    
  10631                   }
  10632                     
  10633                }//_______________________________________________________________________
   \                     ??Net_Event_2:
   \   0000016C   01B0               ADD      SP,SP,#+4
   \   0000016E   30BC               POP      {R4,R5}
   \   00000170   01BC               POP      {R0}
   \   00000172   0047               BX       R0               ;; return
   \                     ??Net_Event_0:
   \   00000174   ........           DC32     NET + 80
   \   00000178   ........           DC32     Y_down
   \   0000017C   ........           DC32     X_down
   \   00000180   ........           DC32     Y_up
   \   00000184   ........           DC32     X_up
   \   00000188   ........           DC32     MenuLevel
   \   0000018C   ........           DC32     NET + 3
   \   00000190   ........           DC32     NET + 244
   \   00000194   B8D81300           DC32     0x13d8b8
   \   00000198   ........           DC32     CurModifSheet
   \   0000019C   8D090000           DC32     0x98d
   \   000001A0   ........           DC32     g_leng
   \   000001A4   7D0A0000           DC32     0xa7d
   \   000001A8   ........           DC32     Speech
   \   000001AC   ........           DC32     NET + 64
   \   000001B0   ........           DC32     NET + 1
   \   000001B4   ........           DC32     NET
   \   000001B8   ........           DC32     NET + 56
   \   000001BC   ........           DC32     NET + 48
  10634          
  10635          
  10636          
  10637          
  10638          
  10639                //*------------------------      -----------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10640                void UstawSiec_Paint(void)
  10641                {
   \                     UstawSiec_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10642                    List_Paint(Speech[g_leng].Siec,2,15,0,0,3,Speech[g_leng].Punkt_dostepu,"TCP/IP" , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0F49               LDR      R1,??UstawSiec_Paint_0  ;; `?<Constant "TCP/IP">`
   \   00000016   1048               LDR      R0,??UstawSiec_Paint_0+0x4  ;; 0x8e8
   \   00000018   104A               LDR      R2,??UstawSiec_Paint_0+0x8  ;; g_leng
   \   0000001A   1268               LDR      R2,[R2, #+0]
   \   0000001C   104B               LDR      R3,??UstawSiec_Paint_0+0xC  ;; 0xa7d
   \   0000001E   5A43               MULS     R2,R3,R2
   \   00000020   104B               LDR      R3,??UstawSiec_Paint_0+0x10  ;; Speech
   \   00000022   9A18               ADDS     R2,R3,R2
   \   00000024   1018               ADDS     R0,R2,R0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0321               MOVS     R1,#+3
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   0F22               MOVS     R2,#+15
   \   00000032   0221               MOVS     R1,#+2
   \   00000034   0C48               LDR      R0,??UstawSiec_Paint_0+0x14  ;; 0x8ca
   \   00000036   094C               LDR      R4,??UstawSiec_Paint_0+0x8  ;; g_leng
   \   00000038   2468               LDR      R4,[R4, #+0]
   \   0000003A   094D               LDR      R5,??UstawSiec_Paint_0+0xC  ;; 0xa7d
   \   0000003C   6C43               MULS     R4,R5,R4
   \   0000003E   094D               LDR      R5,??UstawSiec_Paint_0+0x10  ;; Speech
   \   00000040   2C19               ADDS     R4,R5,R4
   \   00000042   2018               ADDS     R0,R4,R0
   \   00000044   ........           BL       List_Paint
   \   00000048   0AB0               ADD      SP,SP,#+40
  10643                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000004A   01B0               ADD      SP,SP,#+4
   \   0000004C   30BC               POP      {R4,R5}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??UstawSiec_Paint_0:
   \   00000054   ........           DC32     `?<Constant "TCP/IP">`
   \   00000058   E8080000           DC32     0x8e8
   \   0000005C   ........           DC32     g_leng
   \   00000060   7D0A0000           DC32     0xa7d
   \   00000064   ........           DC32     Speech
   \   00000068   CA080000           DC32     0x8ca
  10644          
  10645          
  10646          
  10647                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10648                void UstawSiec_Event(void)
  10649                {
   \                     UstawSiec_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  10650                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1648               LDR      R0,??UstawSiec_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1548               LDR      R0,??UstawSiec_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1548               LDR      R0,??UstawSiec_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1448               LDR      R0,??UstawSiec_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  10651            
  10652                  if (ans)
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   18D0               BEQ      ??UstawSiec_Event_1
  10653                    {
  10654                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   00000030   0128               CMP      R0,#+1
   \   00000032   08DB               BLT      ??UstawSiec_Event_2
   \   00000034   0328               CMP      R0,#+3
   \   00000036   06DA               BGE      ??UstawSiec_Event_2
   \   00000038   0F49               LDR      R1,??UstawSiec_Event_0+0x10  ;; MenuLevel
   \   0000003A   0F4A               LDR      R2,??UstawSiec_Event_0+0x10  ;; MenuLevel
   \   0000003C   1268               LDR      R2,[R2, #+0]
   \   0000003E   0A23               MOVS     R3,#+10
   \   00000040   5A43               MULS     R2,R3,R2
   \   00000042   1218               ADDS     R2,R2,R0
   \   00000044   0A60               STR      R2,[R1, #+0]
  10655                    if (ans<0) {
   \                     ??UstawSiec_Event_2:
   \   00000046   0028               CMP      R0,#+0
   \   00000048   09D5               BPL      ??UstawSiec_Event_3
  10656                      MenuLevel=(MenuLevel/10);
   \   0000004A   0B48               LDR      R0,??UstawSiec_Event_0+0x10  ;; MenuLevel
   \   0000004C   0068               LDR      R0,[R0, #+0]
   \   0000004E   0A21               MOVS     R1,#+10
   \   00000050   ........           BL       __aeabi_idivmod
   \   00000054   0849               LDR      R1,??UstawSiec_Event_0+0x10  ;; MenuLevel
   \   00000056   0860               STR      R0,[R1, #+0]
  10657                     CurModifSheet=0; 
   \   00000058   0848               LDR      R0,??UstawSiec_Event_0+0x14  ;; CurModifSheet
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   0170               STRB     R1,[R0, #+0]
  10658                    }
  10659                    MenuPaint();
   \                     ??UstawSiec_Event_3:
   \   0000005E   ........           BL       MenuPaint
  10660                    } 
  10661                }//_______________________________________________________________________
   \                     ??UstawSiec_Event_1:
   \   00000062   10BC               POP      {R4}
   \   00000064   01BC               POP      {R0}
   \   00000066   0047               BX       R0               ;; return
   \                     ??UstawSiec_Event_0:
   \   00000068   ........           DC32     Y_down
   \   0000006C   ........           DC32     X_down
   \   00000070   ........           DC32     Y_up
   \   00000074   ........           DC32     X_up
   \   00000078   ........           DC32     MenuLevel
   \   0000007C   ........           DC32     CurModifSheet
  10662          
  10663                                     
  10664          //#include "WizFi.h"                            
  10665          // extern _Net NET;                         
  10666          
  10667                //*------------------------      -----------------------------------------------
  10668                 

   \                                 In section Debug.txt, align 4, keep-with-next
  10669                void Punkt_dostepuWiFi_Paint(void)
  10670                {
   \                     Punkt_dostepuWiFi_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10671              
  10672                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   4FA0               ADR      R0,??Punkt_dostepuWiFi_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   4C48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x4  ;; 0x8e8
   \   00000028   4C4C               LDR      R4,??Punkt_dostepuWiFi_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   4C4D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   4C4D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
  10673          
  10674                    Label(Speech[g_leng].Nazwa,0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0120               MOVS     R0,#+1
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7F21               MOVS     R1,#+127
   \   00000044   0120               MOVS     R0,#+1
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   3E21               MOVS     R1,#+62
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   6123               MOVS     R3,#+97
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   4448               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x14  ;; 0x8f7
   \   00000056   414C               LDR      R4,??Punkt_dostepuWiFi_Paint_0+0x8  ;; g_leng
   \   00000058   2468               LDR      R4,[R4, #+0]
   \   0000005A   414D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0xa7d
   \   0000005C   6C43               MULS     R4,R5,R4
   \   0000005E   414D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x10  ;; Speech
   \   00000060   2C19               ADDS     R4,R5,R4
   \   00000062   2018               ADDS     R0,R4,R0
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
  10675                    Label(NET.WiFi.SSID,0,2,86,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   7F21               MOVS     R1,#+127
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   3B21               MOVS     R1,#+59
   \   00000078   0F20               MOVS     R0,#+15
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   5623               MOVS     R3,#+86
   \   0000007E   0222               MOVS     R2,#+2
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   3A48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x18  ;; NET + 174
   \   00000084   ........           BL       Label
   \   00000088   06B0               ADD      SP,SP,#+24
  10676                    Button(Speech[g_leng].Zmien,15,68,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0D20               MOVS     R0,#+13
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   2223               MOVS     R3,#+34
   \   00000092   4422               MOVS     R2,#+68
   \   00000094   0F21               MOVS     R1,#+15
   \   00000096   3648               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x915
   \   00000098   304C               LDR      R4,??Punkt_dostepuWiFi_Paint_0+0x8  ;; g_leng
   \   0000009A   2468               LDR      R4,[R4, #+0]
   \   0000009C   304D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0xa7d
   \   0000009E   6C43               MULS     R4,R5,R4
   \   000000A0   304D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x10  ;; Speech
   \   000000A2   2C19               ADDS     R4,R5,R4
   \   000000A4   2018               ADDS     R0,R4,R0
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
  10677                    
  10678                    Label(Speech[g_leng].Klucz_seciowy,0,1,55,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000AC   82B0               SUB      SP,SP,#+8
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   0090               STR      R0,[SP, #+0]
   \   000000B2   7F21               MOVS     R1,#+127
   \   000000B4   0120               MOVS     R0,#+1
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   3E21               MOVS     R1,#+62
   \   000000BA   0F20               MOVS     R0,#+15
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   3723               MOVS     R3,#+55
   \   000000C0   0122               MOVS     R2,#+1
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   2B48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x20  ;; 0x924
   \   000000C6   254C               LDR      R4,??Punkt_dostepuWiFi_Paint_0+0x8  ;; g_leng
   \   000000C8   2468               LDR      R4,[R4, #+0]
   \   000000CA   254D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0xa7d
   \   000000CC   6C43               MULS     R4,R5,R4
   \   000000CE   254D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x10  ;; Speech
   \   000000D0   2C19               ADDS     R4,R5,R4
   \   000000D2   2018               ADDS     R0,R4,R0
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
  10679                    Label(NET.WiFi.Key,0,2,44,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0020               MOVS     R0,#+0
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   7F21               MOVS     R1,#+127
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   3B21               MOVS     R1,#+59
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   2C23               MOVS     R3,#+44
   \   000000EE   0222               MOVS     R2,#+2
   \   000000F0   0021               MOVS     R1,#+0
   \   000000F2   2148               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x24  ;; NET + 159
   \   000000F4   ........           BL       Label
   \   000000F8   06B0               ADD      SP,SP,#+24
  10680                    Button(Speech[g_leng].Zmien,15,25,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0D20               MOVS     R0,#+13
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   2223               MOVS     R3,#+34
   \   00000102   1922               MOVS     R2,#+25
   \   00000104   0F21               MOVS     R1,#+15
   \   00000106   1A48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x915
   \   00000108   144C               LDR      R4,??Punkt_dostepuWiFi_Paint_0+0x8  ;; g_leng
   \   0000010A   2468               LDR      R4,[R4, #+0]
   \   0000010C   144D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0xa7d
   \   0000010E   6C43               MULS     R4,R5,R4
   \   00000110   144D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x10  ;; Speech
   \   00000112   2C19               ADDS     R4,R5,R4
   \   00000114   2018               ADDS     R0,R4,R0
   \   00000116   ........           BL       Button
   \   0000011A   02B0               ADD      SP,SP,#+8
  10681                    
  10682                    H_line(0,20,63,1); // (char X, int Y, char lenght, char typ)
   \   0000011C   0123               MOVS     R3,#+1
   \   0000011E   3F22               MOVS     R2,#+63
   \   00000120   1421               MOVS     R1,#+20
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   ........           BL       H_line
  10683                    Button(Speech[g_leng].Polacz,4,3,56,16); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   1020               MOVS     R0,#+16
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   3823               MOVS     R3,#+56
   \   00000130   0322               MOVS     R2,#+3
   \   00000132   0421               MOVS     R1,#+4
   \   00000134   1148               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x28  ;; 0x906
   \   00000136   094C               LDR      R4,??Punkt_dostepuWiFi_Paint_0+0x8  ;; g_leng
   \   00000138   2468               LDR      R4,[R4, #+0]
   \   0000013A   094D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0xa7d
   \   0000013C   6C43               MULS     R4,R5,R4
   \   0000013E   094D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x10  ;; Speech
   \   00000140   2C19               ADDS     R4,R5,R4
   \   00000142   2018               ADDS     R0,R4,R0
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
  10684                
  10685                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000014A   01B0               ADD      SP,SP,#+4
   \   0000014C   30BC               POP      {R4,R5}
   \   0000014E   01BC               POP      {R0}
   \   00000150   0047               BX       R0               ;; return
   \   00000152   C046               Nop      
   \                     ??Punkt_dostepuWiFi_Paint_0:
   \   00000154   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000158   E8080000           DC32     0x8e8
   \   0000015C   ........           DC32     g_leng
   \   00000160   7D0A0000           DC32     0xa7d
   \   00000164   ........           DC32     Speech
   \   00000168   F7080000           DC32     0x8f7
   \   0000016C   ........           DC32     NET + 174
   \   00000170   15090000           DC32     0x915
   \   00000174   24090000           DC32     0x924
   \   00000178   ........           DC32     NET + 159
   \   0000017C   06090000           DC32     0x906
  10686                
  10687          
  10688          
  10689          
  10690                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10691                void Punkt_dostepuWiFi_Event(void)
  10692                {
   \                     Punkt_dostepuWiFi_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10693                
  10694                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   4748               LDR      R0,??Punkt_dostepuWiFi_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   4648               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   4648               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   4548               LDR      R0,??Punkt_dostepuWiFi_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   07D5               BPL      ??Punkt_dostepuWiFi_Event_1
  10695                  {
  10696                    MenuLevel=(MenuLevel/10);
   \   00000030   4248               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   00000032   0068               LDR      R0,[R0, #+0]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   4049               LDR      R1,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   0000003C   0860               STR      R0,[R1, #+0]
   \   0000003E   6EE0               B        ??Punkt_dostepuWiFi_Event_2
  10697                    
  10698                  } 
  10699                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Punkt_dostepuWiFi_Event_1:
   \   00000040   3A48               LDR      R0,??Punkt_dostepuWiFi_Event_0  ;; Y_down
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   405E               LDRSH    R0,[R0, R1]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   04DB               BLT      ??Punkt_dostepuWiFi_Event_3
   \   0000004A   3A48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x8  ;; Y_up
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   7028               CMP      R0,#+112
   \   00000052   64DA               BGE      ??Punkt_dostepuWiFi_Event_2
  10700                  {
  10701                      
  10702                      if (Button(Speech[g_leng].Zmien,15,68,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_3:
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0D20               MOVS     R0,#+13
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   2223               MOVS     R3,#+34
   \   0000005C   4422               MOVS     R2,#+68
   \   0000005E   0F21               MOVS     R1,#+15
   \   00000060   3748               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x14  ;; 0x915
   \   00000062   384C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x18  ;; g_leng
   \   00000064   2468               LDR      R4,[R4, #+0]
   \   00000066   384D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x1C  ;; 0xa7d
   \   00000068   6C43               MULS     R4,R5,R4
   \   0000006A   384D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x20  ;; Speech
   \   0000006C   2C19               ADDS     R4,R5,R4
   \   0000006E   2018               ADDS     R0,R4,R0
   \   00000070   ........           BL       Button
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   0128               CMP      R0,#+1
   \   00000078   10D1               BNE      ??Punkt_dostepuWiFi_Event_4
  10703                      {
  10704                        TextToChange=NET.WiFi.SSID;
   \   0000007A   3548               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x24  ;; TextToChange
   \   0000007C   3549               LDR      R1,??Punkt_dostepuWiFi_Event_0+0x28  ;; NET + 174
   \   0000007E   0160               STR      R1,[R0, #+0]
  10705                        TextToChangeLength=15;
   \   00000080   3548               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x2C  ;; TextToChangeLength
   \   00000082   0F21               MOVS     R1,#+15
   \   00000084   0170               STRB     R1,[R0, #+0]
  10706                        TextToChangeMaxPixSize=62;
   \   00000086   3548               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x30  ;; TextToChangeMaxPixSize
   \   00000088   3E21               MOVS     R1,#+62
   \   0000008A   0170               STRB     R1,[R0, #+0]
  10707                        MenuLevel=(MenuLevel*10+1);
   \   0000008C   2B48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   0000008E   2B49               LDR      R1,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   00000090   0968               LDR      R1,[R1, #+0]
   \   00000092   0A22               MOVS     R2,#+10
   \   00000094   5143               MULS     R1,R2,R1
   \   00000096   491C               ADDS     R1,R1,#+1
   \   00000098   0160               STR      R1,[R0, #+0]
   \   0000009A   40E0               B        ??Punkt_dostepuWiFi_Event_2
  10708                      }else if (Button(Speech[g_leng].Zmien,15,25,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_4:
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0D20               MOVS     R0,#+13
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   2223               MOVS     R3,#+34
   \   000000A4   1922               MOVS     R2,#+25
   \   000000A6   0F21               MOVS     R1,#+15
   \   000000A8   2548               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x14  ;; 0x915
   \   000000AA   264C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x18  ;; g_leng
   \   000000AC   2468               LDR      R4,[R4, #+0]
   \   000000AE   264D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x1C  ;; 0xa7d
   \   000000B0   6C43               MULS     R4,R5,R4
   \   000000B2   264D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x20  ;; Speech
   \   000000B4   2C19               ADDS     R4,R5,R4
   \   000000B6   2018               ADDS     R0,R4,R0
   \   000000B8   ........           BL       Button
   \   000000BC   02B0               ADD      SP,SP,#+8
   \   000000BE   0128               CMP      R0,#+1
   \   000000C0   10D1               BNE      ??Punkt_dostepuWiFi_Event_5
  10709                      {
  10710                        TextToChange=NET.WiFi.Key;
   \   000000C2   2348               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x24  ;; TextToChange
   \   000000C4   2649               LDR      R1,??Punkt_dostepuWiFi_Event_0+0x34  ;; NET + 159
   \   000000C6   0160               STR      R1,[R0, #+0]
  10711                        TextToChangeLength=15;
   \   000000C8   2348               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x2C  ;; TextToChangeLength
   \   000000CA   0F21               MOVS     R1,#+15
   \   000000CC   0170               STRB     R1,[R0, #+0]
  10712                        TextToChangeMaxPixSize=62;
   \   000000CE   2348               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x30  ;; TextToChangeMaxPixSize
   \   000000D0   3E21               MOVS     R1,#+62
   \   000000D2   0170               STRB     R1,[R0, #+0]
  10713                        MenuLevel=(MenuLevel*10+1);
   \   000000D4   1948               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   000000D6   1949               LDR      R1,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   000000D8   0968               LDR      R1,[R1, #+0]
   \   000000DA   0A22               MOVS     R2,#+10
   \   000000DC   5143               MULS     R1,R2,R1
   \   000000DE   491C               ADDS     R1,R1,#+1
   \   000000E0   0160               STR      R1,[R0, #+0]
   \   000000E2   1CE0               B        ??Punkt_dostepuWiFi_Event_2
  10714                      }else if (Button(Speech[g_leng].Polacz,4,3,56,16)==1)
   \                     ??Punkt_dostepuWiFi_Event_5:
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   1020               MOVS     R0,#+16
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   3823               MOVS     R3,#+56
   \   000000EC   0322               MOVS     R2,#+3
   \   000000EE   0421               MOVS     R1,#+4
   \   000000F0   1C48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x38  ;; 0x906
   \   000000F2   144C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x18  ;; g_leng
   \   000000F4   2468               LDR      R4,[R4, #+0]
   \   000000F6   144D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x1C  ;; 0xa7d
   \   000000F8   6C43               MULS     R4,R5,R4
   \   000000FA   144D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x20  ;; Speech
   \   000000FC   2C19               ADDS     R4,R5,R4
   \   000000FE   2018               ADDS     R0,R4,R0
   \   00000100   ........           BL       Button
   \   00000104   02B0               ADD      SP,SP,#+8
   \   00000106   0128               CMP      R0,#+1
   \   00000108   09D1               BNE      ??Punkt_dostepuWiFi_Event_2
  10715                      {
  10716                         NET.Status.AccesPointAssociateTest=0;
   \   0000010A   1748               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x3C  ;; NET + 4
   \   0000010C   0021               MOVS     R1,#+0
   \   0000010E   0170               STRB     R1,[R0, #+0]
  10717                         MenuLevel=(MenuLevel*10+2);
   \   00000110   0A48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   00000112   0A49               LDR      R1,??Punkt_dostepuWiFi_Event_0+0x10  ;; MenuLevel
   \   00000114   0968               LDR      R1,[R1, #+0]
   \   00000116   0A22               MOVS     R2,#+10
   \   00000118   5143               MULS     R1,R2,R1
   \   0000011A   891C               ADDS     R1,R1,#+2
   \   0000011C   0160               STR      R1,[R0, #+0]
  10718                      }
  10719                      
  10720                      
  10721                      
  10722                    
  10723                  }
  10724                   MenuPaint();
   \                     ??Punkt_dostepuWiFi_Event_2:
   \   0000011E   ........           BL       MenuPaint
  10725                    
  10726                 
  10727                }//_______________________________________________________________________
   \   00000122   01B0               ADD      SP,SP,#+4
   \   00000124   30BC               POP      {R4,R5}
   \   00000126   01BC               POP      {R0}
   \   00000128   0047               BX       R0               ;; return
   \   0000012A   C046               Nop      
   \                     ??Punkt_dostepuWiFi_Event_0:
   \   0000012C   ........           DC32     Y_down
   \   00000130   ........           DC32     X_down
   \   00000134   ........           DC32     Y_up
   \   00000138   ........           DC32     X_up
   \   0000013C   ........           DC32     MenuLevel
   \   00000140   15090000           DC32     0x915
   \   00000144   ........           DC32     g_leng
   \   00000148   7D0A0000           DC32     0xa7d
   \   0000014C   ........           DC32     Speech
   \   00000150   ........           DC32     TextToChange
   \   00000154   ........           DC32     NET + 174
   \   00000158   ........           DC32     TextToChangeLength
   \   0000015C   ........           DC32     TextToChangeMaxPixSize
   \   00000160   ........           DC32     NET + 159
   \   00000164   06090000           DC32     0x906
   \   00000168   ........           DC32     NET + 4
  10728          
  10729          
  10730                
  10731           
  10732                 

   \                                 In section Debug.txt, align 4, keep-with-next
  10733                void WiFiConecting_Paint(void)
  10734                {
   \                     WiFiConecting_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10735                  
  10736                    //SetWiFiSuspend();
  10737                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0CA0               ADR      R0,??WiFiConecting_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   0948               LDR      R0,??WiFiConecting_Paint_0+0x4  ;; 0x8e8
   \   00000028   094C               LDR      R4,??WiFiConecting_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   094D               LDR      R5,??WiFiConecting_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   094D               LDR      R5,??WiFiConecting_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
  10738                    Wait_Paint();
   \   0000003C   ........           BL       Wait_Paint
  10739                  
  10740                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000040   01B0               ADD      SP,SP,#+4
   \   00000042   30BC               POP      {R4,R5}
   \   00000044   01BC               POP      {R0}
   \   00000046   0047               BX       R0               ;; return
   \                     ??WiFiConecting_Paint_0:
   \   00000048   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000004C   E8080000           DC32     0x8e8
   \   00000050   ........           DC32     g_leng
   \   00000054   7D0A0000           DC32     0xa7d
   \   00000058   ........           DC32     Speech
  10741          
  10742                
  10743                typedef enum {
  10744                WizFi_AT_NC=0,
  10745                WizFi_AT_CONFIG,            //konfiguracja
  10746                WizFi_AT_CONFIG_ERROR,      //b³ad konfiguracji
  10747                WizFi_AT_CONNECTING,           //³¹czenie z hotspotem
  10748                WizFi_AT_CONNECT_ERROR,     //b³¹d po³¹czenia z hotspotem
  10749                WizFi_AT_CONNECTED,         //po³¹czono z hotspotem
  10750              }_WiFiStat;
  10751                

   \                                 In section Debug.txt, align 4, keep-with-next
  10752                void WiFiConecting_Refresh(void)
  10753                {
   \                     WiFiConecting_Refresh:
   \   00000000   10B5               PUSH     {R4,LR}
  10754           
  10755                     static char licz;
  10756                     static char end=0;
  10757                     char cyfra=licz%10;
   \   00000002   8B48               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0A21               MOVS     R1,#+10
   \   00000008   ........           BL       __aeabi_idivmod
   \   0000000C   0C00               MOVS     R4,R1
  10758                     
  10759                     if (licz==0)
   \   0000000E   8848               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000010   0078               LDRB     R0,[R0, #+0]
   \   00000012   0028               CMP      R0,#+0
   \   00000014   31D1               BNE      ??WiFiConecting_Refresh_1
  10760                     {
  10761                            //zapis do flash
  10762                            unsigned int Save = __get_interrupt_state();  
   \   00000016   ........           BL       __iar_get_interrupt_state
   \   0000001A   0400               MOVS     R4,R0
  10763                            __disable_interrupt();
   \   0000001C   ........           BL       __iar_disable_interrupt
  10764                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.SSID)), (char*) (&(NET.WiFi.SSID)), sizeof(NET.WiFi.SSID));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000020   0F22               MOVS     R2,#+15
   \   00000022   8449               LDR      R1,??WiFiConecting_Refresh_0+0x4  ;; NET + 174
   \   00000024   8448               LDR      R0,??WiFiConecting_Refresh_0+0x8  ;; 0x13d916
   \   00000026   ........           BL       FlashWrite
  10765                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Key)), (char*) (&(NET.WiFi.Key)), sizeof(NET.WiFi.Key));
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   8349               LDR      R1,??WiFiConecting_Refresh_0+0xC  ;; NET + 159
   \   0000002E   8448               LDR      R0,??WiFiConecting_Refresh_0+0x10  ;; 0x13d907
   \   00000030   ........           BL       FlashWrite
  10766                            __set_interrupt_state(Save);
   \   00000034   2000               MOVS     R0,R4
   \   00000036   ........           BL       __iar_set_interrupt_state
  10767                            __enable_interrupt();
   \   0000003A   ........           BL       __iar_enable_interrupt
  10768                            //koniec zapisu do flash
  10769                       
  10770                       
  10771                       NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   0000003E   814A               LDR      R2,??WiFiConecting_Refresh_0+0x14  ;; NET + 64
   \   00000040   8148               LDR      R0,??WiFiConecting_Refresh_0+0x18  ;; g_counter
   \   00000042   03C8               LDM      R0!,{R0,R1}
   \   00000044   0023               MOVS     R3,#+0
   \   00000046   3230               ADDS     R0,R0,#+50
   \   00000048   5941               ADCS     R1,R1,R3
   \   0000004A   03C2               STM      R2!,{R0,R1}
   \   0000004C   083A               SUBS     R2,R2,#+8
  10772                       NET.Status.HostLink=DISCONNECTED;
   \   0000004E   7F48               LDR      R0,??WiFiConecting_Refresh_0+0x1C  ;; NET + 1
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   0170               STRB     R1,[R0, #+0]
  10773                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000054   7E48               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; NET
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0170               STRB     R1,[R0, #+0]
  10774                       NET.Status.Timeout=0;
   \   0000005A   7E4A               LDR      R2,??WiFiConecting_Refresh_0+0x24  ;; NET + 56
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   03C2               STM      R2!,{R0,R1}
   \   00000062   083A               SUBS     R2,R2,#+8
  10775                       NET.Status.HttpNextQueryTime=0;
   \   00000064   7C4A               LDR      R2,??WiFiConecting_Refresh_0+0x28  ;; NET + 48
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   03C2               STM      R2!,{R0,R1}
   \   0000006C   083A               SUBS     R2,R2,#+8
  10776                       NET.Status.FreezTime=0;
   \   0000006E   754A               LDR      R2,??WiFiConecting_Refresh_0+0x14  ;; NET + 64
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   03C2               STM      R2!,{R0,R1}
   \   00000076   083A               SUBS     R2,R2,#+8
   \   00000078   97E0               B        ??WiFiConecting_Refresh_2
  10777                     }
  10778                     else if (end==0)
   \                     ??WiFiConecting_Refresh_1:
   \   0000007A   7848               LDR      R0,??WiFiConecting_Refresh_0+0x2C  ;; ??end
   \   0000007C   0078               LDRB     R0,[R0, #+0]
   \   0000007E   0028               CMP      R0,#+0
   \   00000080   00D0               BEQ      .+4
   \   00000082   92E0               B        ??WiFiConecting_Refresh_2
  10779                     {  
  10780                         if ((NET.Status.AccesPointAssociate==DISCONNECTED) && (NET.Status.AccesPointAssociateTest!=0xFF))
   \   00000084   7248               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; NET
   \   00000086   0078               LDRB     R0,[R0, #+0]
   \   00000088   0028               CMP      R0,#+0
   \   0000008A   17D1               BNE      ??WiFiConecting_Refresh_3
   \   0000008C   7448               LDR      R0,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   0000008E   0078               LDRB     R0,[R0, #+0]
   \   00000090   FF28               CMP      R0,#+255
   \   00000092   13D0               BEQ      ??WiFiConecting_Refresh_3
  10781                         {
  10782                           Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   7F21               MOVS     R1,#+127
   \   0000009C   0120               MOVS     R0,#+1
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   3B21               MOVS     R1,#+59
   \   000000A2   0F20               MOVS     R0,#+15
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   0F23               MOVS     R3,#+15
   \   000000A8   0222               MOVS     R2,#+2
   \   000000AA   0221               MOVS     R1,#+2
   \   000000AC   6D48               LDR      R0,??WiFiConecting_Refresh_0+0x34  ;; `?<Constant "Not connected">`
   \   000000AE   ........           BL       Label
   \   000000B2   06B0               ADD      SP,SP,#+24
  10783                           NET.Status.AccesPointAssociateTest=0;
   \   000000B4   6A48               LDR      R0,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   000000B6   0021               MOVS     R1,#+0
   \   000000B8   0170               STRB     R1,[R0, #+0]
   \   000000BA   76E0               B        ??WiFiConecting_Refresh_2
  10784                         }  
  10785                         else if ((NET.Status.AccesPointAssociate==CONNECTING) && (NET.Status.AccesPointAssociateTest!=0xFF))
   \                     ??WiFiConecting_Refresh_3:
   \   000000BC   6448               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; NET
   \   000000BE   0078               LDRB     R0,[R0, #+0]
   \   000000C0   0228               CMP      R0,#+2
   \   000000C2   54D1               BNE      ??WiFiConecting_Refresh_4
   \   000000C4   6648               LDR      R0,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   000000C6   0078               LDRB     R0,[R0, #+0]
   \   000000C8   FF28               CMP      R0,#+255
   \   000000CA   50D0               BEQ      ??WiFiConecting_Refresh_4
  10786                         {
  10787                           if (cyfra==0) Label("Connecting",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000CC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000CE   240E               LSRS     R4,R4,#+24
   \   000000D0   002C               CMP      R4,#+0
   \   000000D2   0FD1               BNE      ??WiFiConecting_Refresh_5
   \   000000D4   82B0               SUB      SP,SP,#+8
   \   000000D6   0020               MOVS     R0,#+0
   \   000000D8   0090               STR      R0,[SP, #+0]
   \   000000DA   7F21               MOVS     R1,#+127
   \   000000DC   0120               MOVS     R0,#+1
   \   000000DE   03B4               PUSH     {R0,R1}
   \   000000E0   3B21               MOVS     R1,#+59
   \   000000E2   0F20               MOVS     R0,#+15
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   0F23               MOVS     R3,#+15
   \   000000E8   0422               MOVS     R2,#+4
   \   000000EA   0021               MOVS     R1,#+0
   \   000000EC   5E48               LDR      R0,??WiFiConecting_Refresh_0+0x38  ;; `?<Constant "Connecting">`
   \   000000EE   ........           BL       Label
   \   000000F2   06B0               ADD      SP,SP,#+24
  10788                           if (cyfra==3) Label("Connecting .",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_5:
   \   000000F4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000F6   240E               LSRS     R4,R4,#+24
   \   000000F8   032C               CMP      R4,#+3
   \   000000FA   0FD1               BNE      ??WiFiConecting_Refresh_6
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   0020               MOVS     R0,#+0
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   7F21               MOVS     R1,#+127
   \   00000104   0120               MOVS     R0,#+1
   \   00000106   03B4               PUSH     {R0,R1}
   \   00000108   3B21               MOVS     R1,#+59
   \   0000010A   0F20               MOVS     R0,#+15
   \   0000010C   03B4               PUSH     {R0,R1}
   \   0000010E   0F23               MOVS     R3,#+15
   \   00000110   0422               MOVS     R2,#+4
   \   00000112   0021               MOVS     R1,#+0
   \   00000114   5548               LDR      R0,??WiFiConecting_Refresh_0+0x3C  ;; `?<Constant "Connecting .">`
   \   00000116   ........           BL       Label
   \   0000011A   06B0               ADD      SP,SP,#+24
  10789                           if (cyfra==5) Label("Connecting ..",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_6:
   \   0000011C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000011E   240E               LSRS     R4,R4,#+24
   \   00000120   052C               CMP      R4,#+5
   \   00000122   0FD1               BNE      ??WiFiConecting_Refresh_7
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   0120               MOVS     R0,#+1
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   3B21               MOVS     R1,#+59
   \   00000132   0F20               MOVS     R0,#+15
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   0F23               MOVS     R3,#+15
   \   00000138   0422               MOVS     R2,#+4
   \   0000013A   0021               MOVS     R1,#+0
   \   0000013C   4C48               LDR      R0,??WiFiConecting_Refresh_0+0x40  ;; `?<Constant "Connecting ..">`
   \   0000013E   ........           BL       Label
   \   00000142   06B0               ADD      SP,SP,#+24
  10790                           if (cyfra==7) Label("Connecting ...",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_7:
   \   00000144   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000146   240E               LSRS     R4,R4,#+24
   \   00000148   072C               CMP      R4,#+7
   \   0000014A   2ED1               BNE      ??WiFiConecting_Refresh_2
   \   0000014C   82B0               SUB      SP,SP,#+8
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   0090               STR      R0,[SP, #+0]
   \   00000152   7F21               MOVS     R1,#+127
   \   00000154   0120               MOVS     R0,#+1
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   3B21               MOVS     R1,#+59
   \   0000015A   0F20               MOVS     R0,#+15
   \   0000015C   03B4               PUSH     {R0,R1}
   \   0000015E   0F23               MOVS     R3,#+15
   \   00000160   0422               MOVS     R2,#+4
   \   00000162   0021               MOVS     R1,#+0
   \   00000164   4348               LDR      R0,??WiFiConecting_Refresh_0+0x44  ;; `?<Constant "Connecting ...">`
   \   00000166   ........           BL       Label
   \   0000016A   06B0               ADD      SP,SP,#+24
   \   0000016C   1DE0               B        ??WiFiConecting_Refresh_2
  10791                         }else if ((NET.Status.AccesPointAssociate==CONNECTED) || (NET.Status.AccesPointAssociateTest==0xFF))
   \                     ??WiFiConecting_Refresh_4:
   \   0000016E   3848               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; NET
   \   00000170   0078               LDRB     R0,[R0, #+0]
   \   00000172   0328               CMP      R0,#+3
   \   00000174   03D0               BEQ      ??WiFiConecting_Refresh_8
   \   00000176   3A48               LDR      R0,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   00000178   0078               LDRB     R0,[R0, #+0]
   \   0000017A   FF28               CMP      R0,#+255
   \   0000017C   15D1               BNE      ??WiFiConecting_Refresh_2
  10792                         {
  10793                           end=1;
   \                     ??WiFiConecting_Refresh_8:
   \   0000017E   3748               LDR      R0,??WiFiConecting_Refresh_0+0x2C  ;; ??end
   \   00000180   0121               MOVS     R1,#+1
   \   00000182   0170               STRB     R1,[R0, #+0]
  10794                           licz=180;
   \   00000184   2A48               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000186   B421               MOVS     R1,#+180
   \   00000188   0170               STRB     R1,[R0, #+0]
  10795                           Label("Connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)            
   \   0000018A   82B0               SUB      SP,SP,#+8
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   3B21               MOVS     R1,#+59
   \   00000198   0F20               MOVS     R0,#+15
   \   0000019A   03B4               PUSH     {R0,R1}
   \   0000019C   0F23               MOVS     R3,#+15
   \   0000019E   0222               MOVS     R2,#+2
   \   000001A0   0221               MOVS     R1,#+2
   \   000001A2   3548               LDR      R0,??WiFiConecting_Refresh_0+0x48  ;; `?<Constant "Connected">`
   \   000001A4   ........           BL       Label
   \   000001A8   06B0               ADD      SP,SP,#+24
  10796                         
  10797                           
  10798          
  10799                         
  10800                         }
  10801                       
  10802                     }
  10803                     
  10804                     if (licz==179) 
   \                     ??WiFiConecting_Refresh_2:
   \   000001AA   2148               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   000001AC   0078               LDRB     R0,[R0, #+0]
   \   000001AE   B328               CMP      R0,#+179
   \   000001B0   15D1               BNE      ??WiFiConecting_Refresh_9
  10805                     {
  10806                       end=1;
   \   000001B2   2A48               LDR      R0,??WiFiConecting_Refresh_0+0x2C  ;; ??end
   \   000001B4   0121               MOVS     R1,#+1
   \   000001B6   0170               STRB     R1,[R0, #+0]
  10807                       licz=180;
   \   000001B8   1D48               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   000001BA   B421               MOVS     R1,#+180
   \   000001BC   0170               STRB     R1,[R0, #+0]
  10808                       Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   0020               MOVS     R0,#+0
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   7F21               MOVS     R1,#+127
   \   000001C6   0120               MOVS     R0,#+1
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   3B21               MOVS     R1,#+59
   \   000001CC   0F20               MOVS     R0,#+15
   \   000001CE   03B4               PUSH     {R0,R1}
   \   000001D0   0F23               MOVS     R3,#+15
   \   000001D2   0222               MOVS     R2,#+2
   \   000001D4   0221               MOVS     R1,#+2
   \   000001D6   2348               LDR      R0,??WiFiConecting_Refresh_0+0x34  ;; `?<Constant "Not connected">`
   \   000001D8   ........           BL       Label
   \   000001DC   06B0               ADD      SP,SP,#+24
  10809                     }
  10810                     
  10811                     
  10812                     if (licz<210)
   \                     ??WiFiConecting_Refresh_9:
   \   000001DE   1448               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   000001E0   0078               LDRB     R0,[R0, #+0]
   \   000001E2   D228               CMP      R0,#+210
   \   000001E4   0ED2               BCS      ??WiFiConecting_Refresh_10
  10813                     {
  10814                        licz++; 
   \   000001E6   1248               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   000001E8   1149               LDR      R1,??WiFiConecting_Refresh_0  ;; ??licz
   \   000001EA   0978               LDRB     R1,[R1, #+0]
   \   000001EC   491C               ADDS     R1,R1,#+1
   \   000001EE   0170               STRB     R1,[R0, #+0]
  10815                        if (NET.Status.AccesPointAssociateTest<220) NET.Status.AccesPointAssociateTest++;
   \   000001F0   1B48               LDR      R0,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   000001F2   0078               LDRB     R0,[R0, #+0]
   \   000001F4   DC28               CMP      R0,#+220
   \   000001F6   17D2               BCS      ??WiFiConecting_Refresh_11
   \   000001F8   1948               LDR      R0,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   000001FA   1949               LDR      R1,??WiFiConecting_Refresh_0+0x30  ;; NET + 4
   \   000001FC   0978               LDRB     R1,[R1, #+0]
   \   000001FE   491C               ADDS     R1,R1,#+1
   \   00000200   0170               STRB     R1,[R0, #+0]
   \   00000202   11E0               B        ??WiFiConecting_Refresh_11
  10816                     }else{
  10817                        licz=0;
   \                     ??WiFiConecting_Refresh_10:
   \   00000204   0A48               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000206   0021               MOVS     R1,#+0
   \   00000208   0170               STRB     R1,[R0, #+0]
  10818                        end=0;
   \   0000020A   1448               LDR      R0,??WiFiConecting_Refresh_0+0x2C  ;; ??end
   \   0000020C   0021               MOVS     R1,#+0
   \   0000020E   0170               STRB     R1,[R0, #+0]
  10819                        MenuLevel=(MenuLevel/10);
   \   00000210   1A48               LDR      R0,??WiFiConecting_Refresh_0+0x4C  ;; MenuLevel
   \   00000212   0068               LDR      R0,[R0, #+0]
   \   00000214   0A21               MOVS     R1,#+10
   \   00000216   ........           BL       __aeabi_idivmod
   \   0000021A   1849               LDR      R1,??WiFiConecting_Refresh_0+0x4C  ;; MenuLevel
   \   0000021C   0860               STR      R0,[R1, #+0]
  10820                        licz=0;
   \   0000021E   0448               LDR      R0,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000220   0021               MOVS     R1,#+0
   \   00000222   0170               STRB     R1,[R0, #+0]
  10821                        MenuPaint();
   \   00000224   ........           BL       MenuPaint
  10822                     }
  10823                     
  10824                     
  10825                    
  10826                
  10827                }
   \                     ??WiFiConecting_Refresh_11:
   \   00000228   10BC               POP      {R4}
   \   0000022A   01BC               POP      {R0}
   \   0000022C   0047               BX       R0               ;; return
   \   0000022E   C046               Nop      
   \                     ??WiFiConecting_Refresh_0:
   \   00000230   ........           DC32     ??licz
   \   00000234   ........           DC32     NET + 174
   \   00000238   16D91300           DC32     0x13d916
   \   0000023C   ........           DC32     NET + 159
   \   00000240   07D91300           DC32     0x13d907
   \   00000244   ........           DC32     NET + 64
   \   00000248   ........           DC32     g_counter
   \   0000024C   ........           DC32     NET + 1
   \   00000250   ........           DC32     NET
   \   00000254   ........           DC32     NET + 56
   \   00000258   ........           DC32     NET + 48
   \   0000025C   ........           DC32     ??end
   \   00000260   ........           DC32     NET + 4
   \   00000264   ........           DC32     `?<Constant "Not connected">`
   \   00000268   ........           DC32     `?<Constant "Connecting">`
   \   0000026C   ........           DC32     `?<Constant "Connecting .">`
   \   00000270   ........           DC32     `?<Constant "Connecting ..">`
   \   00000274   ........           DC32     `?<Constant "Connecting ...">`
   \   00000278   ........           DC32     `?<Constant "Connected">`
   \   0000027C   ........           DC32     MenuLevel

   \                                 In section .bss, align 1
   \                     ??licz:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??end:
   \   00000000                      DS8 1
  10828          
  10829              
  10830                
  10831                

   \                                 In section .bss, align 1
  10832                char WiFiReConnect=0;
   \                     WiFiReConnect:
   \   00000000                      DS8 1
  10833                

   \                                 In section Debug.txt, align 4, keep-with-next
  10834                void  Host_WiFi_Paint(void)
  10835                {
   \                     Host_WiFi_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
  10836                    
  10837                    List_Paint("Host",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   A4A0               ADR      R0,??Host_WiFi_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   A148               LDR      R0,??Host_WiFi_Paint_0+0x4  ;; `?<Constant "Host">`
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
  10838          
  10839                    char pY=72;    //pozycja dolna
   \   0000002E   4824               MOVS     R4,#+72
  10840                    Label(Speech[g_leng].Domena,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0120               MOVS     R0,#+1
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   7F21               MOVS     R1,#+127
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   3E21               MOVS     R1,#+62
   \   0000003E   0F20               MOVS     R0,#+15
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000044   240E               LSRS     R4,R4,#+24
   \   00000046   2300               MOVS     R3,R4
   \   00000048   1933               ADDS     R3,R3,#+25
   \   0000004A   0122               MOVS     R2,#+1
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   9848               LDR      R0,??Host_WiFi_Paint_0+0x8  ;; 0x933
   \   00000050   984D               LDR      R5,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   00000052   2D68               LDR      R5,[R5, #+0]
   \   00000054   984E               LDR      R6,??Host_WiFi_Paint_0+0x10  ;; 0xa7d
   \   00000056   7543               MULS     R5,R6,R5
   \   00000058   984E               LDR      R6,??Host_WiFi_Paint_0+0x14  ;; Speech
   \   0000005A   7519               ADDS     R5,R6,R5
   \   0000005C   2818               ADDS     R0,R5,R0
   \   0000005E   ........           BL       Label
   \   00000062   06B0               ADD      SP,SP,#+24
  10841                    Label(".................................",0,2,pY+14,25,59,1,127,0);
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   7F21               MOVS     R1,#+127
   \   0000006C   0120               MOVS     R0,#+1
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   3B21               MOVS     R1,#+59
   \   00000072   1920               MOVS     R0,#+25
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000078   240E               LSRS     R4,R4,#+24
   \   0000007A   2300               MOVS     R3,R4
   \   0000007C   0E33               ADDS     R3,R3,#+14
   \   0000007E   0222               MOVS     R2,#+2
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   8F48               LDR      R0,??Host_WiFi_Paint_0+0x18  ;; `?<Constant "........................">`
   \   00000084   ........           BL       Label
   \   00000088   06B0               ADD      SP,SP,#+24
  10842                    Label(NET.WiFi.Domena,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   7F21               MOVS     R1,#+127
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   3B21               MOVS     R1,#+59
   \   00000098   0F20               MOVS     R0,#+15
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000009E   240E               LSRS     R4,R4,#+24
   \   000000A0   2300               MOVS     R3,R4
   \   000000A2   1033               ADDS     R3,R3,#+16
   \   000000A4   0222               MOVS     R2,#+2
   \   000000A6   0021               MOVS     R1,#+0
   \   000000A8   8648               LDR      R0,??Host_WiFi_Paint_0+0x1C  ;; NET + 189
   \   000000AA   ........           BL       Label
   \   000000AE   06B0               ADD      SP,SP,#+24
  10843                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0D20               MOVS     R0,#+13
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   2223               MOVS     R3,#+34
   \   000000B8   641C               ADDS     R4,R4,#+1
   \   000000BA   2200               MOVS     R2,R4
   \   000000BC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000BE   120E               LSRS     R2,R2,#+24
   \   000000C0   0F21               MOVS     R1,#+15
   \   000000C2   8148               LDR      R0,??Host_WiFi_Paint_0+0x20  ;; 0x915
   \   000000C4   7B4C               LDR      R4,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   000000C6   2468               LDR      R4,[R4, #+0]
   \   000000C8   7B4D               LDR      R5,??Host_WiFi_Paint_0+0x10  ;; 0xa7d
   \   000000CA   6C43               MULS     R4,R5,R4
   \   000000CC   7B4D               LDR      R5,??Host_WiFi_Paint_0+0x14  ;; Speech
   \   000000CE   2C19               ADDS     R4,R5,R4
   \   000000D0   2018               ADDS     R0,R4,R0
   \   000000D2   ........           BL       Button
   \   000000D6   02B0               ADD      SP,SP,#+8
  10844                    
  10845                    pY=37;    
   \   000000D8   2524               MOVS     R4,#+37
  10846                    Label(Speech[g_leng].Subdomena,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0120               MOVS     R0,#+1
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   7F21               MOVS     R1,#+127
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   3E21               MOVS     R1,#+62
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000EE   240E               LSRS     R4,R4,#+24
   \   000000F0   2300               MOVS     R3,R4
   \   000000F2   1933               ADDS     R3,R3,#+25
   \   000000F4   0122               MOVS     R2,#+1
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   7448               LDR      R0,??Host_WiFi_Paint_0+0x24  ;; 0x942
   \   000000FA   6E4D               LDR      R5,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   000000FC   2D68               LDR      R5,[R5, #+0]
   \   000000FE   6E4E               LDR      R6,??Host_WiFi_Paint_0+0x10  ;; 0xa7d
   \   00000100   7543               MULS     R5,R6,R5
   \   00000102   6E4E               LDR      R6,??Host_WiFi_Paint_0+0x14  ;; Speech
   \   00000104   7519               ADDS     R5,R6,R5
   \   00000106   2818               ADDS     R0,R5,R0
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
  10847                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   7F21               MOVS     R1,#+127
   \   00000116   0120               MOVS     R0,#+1
   \   00000118   03B4               PUSH     {R0,R1}
   \   0000011A   3B21               MOVS     R1,#+59
   \   0000011C   1920               MOVS     R0,#+25
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000122   240E               LSRS     R4,R4,#+24
   \   00000124   2300               MOVS     R3,R4
   \   00000126   0E33               ADDS     R3,R3,#+14
   \   00000128   0222               MOVS     R2,#+2
   \   0000012A   0021               MOVS     R1,#+0
   \   0000012C   6848               LDR      R0,??Host_WiFi_Paint_0+0x28  ;; `?<Constant "........................">_1`
   \   0000012E   ........           BL       Label
   \   00000132   06B0               ADD      SP,SP,#+24
  10848                    Label(NET.WiFi.Subdomena,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000134   82B0               SUB      SP,SP,#+8
   \   00000136   0020               MOVS     R0,#+0
   \   00000138   0090               STR      R0,[SP, #+0]
   \   0000013A   7F21               MOVS     R1,#+127
   \   0000013C   0120               MOVS     R0,#+1
   \   0000013E   03B4               PUSH     {R0,R1}
   \   00000140   3B21               MOVS     R1,#+59
   \   00000142   0F20               MOVS     R0,#+15
   \   00000144   03B4               PUSH     {R0,R1}
   \   00000146   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000148   240E               LSRS     R4,R4,#+24
   \   0000014A   2300               MOVS     R3,R4
   \   0000014C   1033               ADDS     R3,R3,#+16
   \   0000014E   0222               MOVS     R2,#+2
   \   00000150   0021               MOVS     R1,#+0
   \   00000152   6048               LDR      R0,??Host_WiFi_Paint_0+0x2C  ;; NET + 204
   \   00000154   ........           BL       Label
   \   00000158   06B0               ADD      SP,SP,#+24
  10849                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   0D20               MOVS     R0,#+13
   \   0000015E   0090               STR      R0,[SP, #+0]
   \   00000160   2223               MOVS     R3,#+34
   \   00000162   641C               ADDS     R4,R4,#+1
   \   00000164   2200               MOVS     R2,R4
   \   00000166   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   0F21               MOVS     R1,#+15
   \   0000016C   5648               LDR      R0,??Host_WiFi_Paint_0+0x20  ;; 0x915
   \   0000016E   514C               LDR      R4,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   00000170   2468               LDR      R4,[R4, #+0]
   \   00000172   514D               LDR      R5,??Host_WiFi_Paint_0+0x10  ;; 0xa7d
   \   00000174   6C43               MULS     R4,R5,R4
   \   00000176   514D               LDR      R5,??Host_WiFi_Paint_0+0x14  ;; Speech
   \   00000178   2C19               ADDS     R4,R5,R4
   \   0000017A   2018               ADDS     R0,R4,R0
   \   0000017C   ........           BL       Button
   \   00000180   02B0               ADD      SP,SP,#+8
  10850                    
  10851                    pY=2;    
   \   00000182   0224               MOVS     R4,#+2
  10852                    Label(Speech[g_leng].Scezka,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   0120               MOVS     R0,#+1
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   7F21               MOVS     R1,#+127
   \   0000018C   0120               MOVS     R0,#+1
   \   0000018E   03B4               PUSH     {R0,R1}
   \   00000190   3E21               MOVS     R1,#+62
   \   00000192   0F20               MOVS     R0,#+15
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000198   240E               LSRS     R4,R4,#+24
   \   0000019A   2300               MOVS     R3,R4
   \   0000019C   1933               ADDS     R3,R3,#+25
   \   0000019E   0122               MOVS     R2,#+1
   \   000001A0   0021               MOVS     R1,#+0
   \   000001A2   4D48               LDR      R0,??Host_WiFi_Paint_0+0x30  ;; 0x951
   \   000001A4   434D               LDR      R5,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   000001A6   2D68               LDR      R5,[R5, #+0]
   \   000001A8   434E               LDR      R6,??Host_WiFi_Paint_0+0x10  ;; 0xa7d
   \   000001AA   7543               MULS     R5,R6,R5
   \   000001AC   434E               LDR      R6,??Host_WiFi_Paint_0+0x14  ;; Speech
   \   000001AE   7519               ADDS     R5,R6,R5
   \   000001B0   2818               ADDS     R0,R5,R0
   \   000001B2   ........           BL       Label
   \   000001B6   06B0               ADD      SP,SP,#+24
  10853                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   000001B8   82B0               SUB      SP,SP,#+8
   \   000001BA   0020               MOVS     R0,#+0
   \   000001BC   0090               STR      R0,[SP, #+0]
   \   000001BE   7F21               MOVS     R1,#+127
   \   000001C0   0120               MOVS     R0,#+1
   \   000001C2   03B4               PUSH     {R0,R1}
   \   000001C4   3B21               MOVS     R1,#+59
   \   000001C6   1920               MOVS     R0,#+25
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001CC   240E               LSRS     R4,R4,#+24
   \   000001CE   2300               MOVS     R3,R4
   \   000001D0   0E33               ADDS     R3,R3,#+14
   \   000001D2   0222               MOVS     R2,#+2
   \   000001D4   0021               MOVS     R1,#+0
   \   000001D6   3E48               LDR      R0,??Host_WiFi_Paint_0+0x28  ;; `?<Constant "........................">_1`
   \   000001D8   ........           BL       Label
   \   000001DC   06B0               ADD      SP,SP,#+24
  10854                    Label(NET.WiFi.Path,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000001DE   82B0               SUB      SP,SP,#+8
   \   000001E0   0020               MOVS     R0,#+0
   \   000001E2   0090               STR      R0,[SP, #+0]
   \   000001E4   7F21               MOVS     R1,#+127
   \   000001E6   0120               MOVS     R0,#+1
   \   000001E8   03B4               PUSH     {R0,R1}
   \   000001EA   3B21               MOVS     R1,#+59
   \   000001EC   0F20               MOVS     R0,#+15
   \   000001EE   03B4               PUSH     {R0,R1}
   \   000001F0   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001F2   240E               LSRS     R4,R4,#+24
   \   000001F4   2300               MOVS     R3,R4
   \   000001F6   1033               ADDS     R3,R3,#+16
   \   000001F8   0222               MOVS     R2,#+2
   \   000001FA   0021               MOVS     R1,#+0
   \   000001FC   3748               LDR      R0,??Host_WiFi_Paint_0+0x34  ;; NET + 219
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
  10855                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000204   82B0               SUB      SP,SP,#+8
   \   00000206   0D20               MOVS     R0,#+13
   \   00000208   0090               STR      R0,[SP, #+0]
   \   0000020A   2223               MOVS     R3,#+34
   \   0000020C   641C               ADDS     R4,R4,#+1
   \   0000020E   2200               MOVS     R2,R4
   \   00000210   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000212   120E               LSRS     R2,R2,#+24
   \   00000214   0F21               MOVS     R1,#+15
   \   00000216   2C48               LDR      R0,??Host_WiFi_Paint_0+0x20  ;; 0x915
   \   00000218   264C               LDR      R4,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   0000021A   2468               LDR      R4,[R4, #+0]
   \   0000021C   264D               LDR      R5,??Host_WiFi_Paint_0+0x10  ;; 0xa7d
   \   0000021E   6C43               MULS     R4,R5,R4
   \   00000220   264D               LDR      R5,??Host_WiFi_Paint_0+0x14  ;; Speech
   \   00000222   2C19               ADDS     R4,R5,R4
   \   00000224   2018               ADDS     R0,R4,R0
   \   00000226   ........           BL       Button
   \   0000022A   02B0               ADD      SP,SP,#+8
  10856                    
  10857                    Button("?",36,112,11,13);
   \   0000022C   82B0               SUB      SP,SP,#+8
   \   0000022E   0D20               MOVS     R0,#+13
   \   00000230   0090               STR      R0,[SP, #+0]
   \   00000232   0B23               MOVS     R3,#+11
   \   00000234   7022               MOVS     R2,#+112
   \   00000236   2421               MOVS     R1,#+36
   \   00000238   29A0               ADR      R0,??Host_WiFi_Paint_0+0x38  ;; 0x3F, 0x00, 0x00, 0x00
   \   0000023A   ........           BL       Button
   \   0000023E   02B0               ADD      SP,SP,#+8
  10858                    
  10859                    
  10860                    if (WiFiReConnect)
   \   00000240   2848               LDR      R0,??Host_WiFi_Paint_0+0x3C  ;; WiFiReConnect
   \   00000242   0078               LDRB     R0,[R0, #+0]
   \   00000244   0028               CMP      R0,#+0
   \   00000246   2CD0               BEQ      ??Host_WiFi_Paint_1
  10861                    {
  10862                      NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000248   274A               LDR      R2,??Host_WiFi_Paint_0+0x40  ;; NET + 64
   \   0000024A   2848               LDR      R0,??Host_WiFi_Paint_0+0x44  ;; g_counter
   \   0000024C   03C8               LDM      R0!,{R0,R1}
   \   0000024E   0023               MOVS     R3,#+0
   \   00000250   3230               ADDS     R0,R0,#+50
   \   00000252   5941               ADCS     R1,R1,R3
   \   00000254   03C2               STM      R2!,{R0,R1}
   \   00000256   083A               SUBS     R2,R2,#+8
  10863                       NET.Status.HostLink=DISCONNECTED;
   \   00000258   2548               LDR      R0,??Host_WiFi_Paint_0+0x48  ;; NET + 1
   \   0000025A   0021               MOVS     R1,#+0
   \   0000025C   0170               STRB     R1,[R0, #+0]
  10864                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   0000025E   2548               LDR      R0,??Host_WiFi_Paint_0+0x4C  ;; NET
   \   00000260   0021               MOVS     R1,#+0
   \   00000262   0170               STRB     R1,[R0, #+0]
  10865                       for (char i=0; i<15; i++)NET.Status.DomenaIP[i]=0;
   \   00000264   0020               MOVS     R0,#+0
   \   00000266   06E0               B        ??Host_WiFi_Paint_2
   \                     ??Host_WiFi_Paint_3:
   \   00000268   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000026A   000E               LSRS     R0,R0,#+24
   \   0000026C   2149               LDR      R1,??Host_WiFi_Paint_0+0x4C  ;; NET
   \   0000026E   0918               ADDS     R1,R1,R0
   \   00000270   0022               MOVS     R2,#+0
   \   00000272   8A71               STRB     R2,[R1, #+6]
   \   00000274   401C               ADDS     R0,R0,#+1
   \                     ??Host_WiFi_Paint_2:
   \   00000276   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000278   000E               LSRS     R0,R0,#+24
   \   0000027A   0F28               CMP      R0,#+15
   \   0000027C   F4D3               BCC      ??Host_WiFi_Paint_3
  10866                       NET.Status.Timeout=0;
   \   0000027E   1E4A               LDR      R2,??Host_WiFi_Paint_0+0x50  ;; NET + 56
   \   00000280   0020               MOVS     R0,#+0
   \   00000282   0021               MOVS     R1,#+0
   \   00000284   03C2               STM      R2!,{R0,R1}
   \   00000286   083A               SUBS     R2,R2,#+8
  10867                       NET.Status.HttpNextQueryTime=0;
   \   00000288   1C4A               LDR      R2,??Host_WiFi_Paint_0+0x54  ;; NET + 48
   \   0000028A   0020               MOVS     R0,#+0
   \   0000028C   0021               MOVS     R1,#+0
   \   0000028E   03C2               STM      R2!,{R0,R1}
   \   00000290   083A               SUBS     R2,R2,#+8
  10868                       NET.Status.FreezTime=0;    
   \   00000292   154A               LDR      R2,??Host_WiFi_Paint_0+0x40  ;; NET + 64
   \   00000294   0020               MOVS     R0,#+0
   \   00000296   0021               MOVS     R1,#+0
   \   00000298   03C2               STM      R2!,{R0,R1}
   \   0000029A   083A               SUBS     R2,R2,#+8
  10869                      
  10870                      WiFiReConnect=0;
   \   0000029C   1148               LDR      R0,??Host_WiFi_Paint_0+0x3C  ;; WiFiReConnect
   \   0000029E   0021               MOVS     R1,#+0
   \   000002A0   0170               STRB     R1,[R0, #+0]
  10871                    }
  10872                    
  10873                    
  10874                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Host_WiFi_Paint_1:
   \   000002A2   70BC               POP      {R4-R6}
   \   000002A4   01BC               POP      {R0}
   \   000002A6   0047               BX       R0               ;; return
   \                     ??Host_WiFi_Paint_0:
   \   000002A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002AC   ........           DC32     `?<Constant "Host">`
   \   000002B0   33090000           DC32     0x933
   \   000002B4   ........           DC32     g_leng
   \   000002B8   7D0A0000           DC32     0xa7d
   \   000002BC   ........           DC32     Speech
   \   000002C0   ........           DC32     `?<Constant "........................">`
   \   000002C4   ........           DC32     NET + 189
   \   000002C8   15090000           DC32     0x915
   \   000002CC   42090000           DC32     0x942
   \   000002D0   ........           DC32     `?<Constant "........................">_1`
   \   000002D4   ........           DC32     NET + 204
   \   000002D8   51090000           DC32     0x951
   \   000002DC   ........           DC32     NET + 219
   \   000002E0   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   000002E4   ........           DC32     WiFiReConnect
   \   000002E8   ........           DC32     NET + 64
   \   000002EC   ........           DC32     g_counter
   \   000002F0   ........           DC32     NET + 1
   \   000002F4   ........           DC32     NET
   \   000002F8   ........           DC32     NET + 56
   \   000002FC   ........           DC32     NET + 48
  10875          
  10876          
  10877             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10878                void  Host_WiFi_Event(void)
  10879                {
   \                     Host_WiFi_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10880                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   6A48               LDR      R0,??Host_WiFi_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   6948               LDR      R0,??Host_WiFi_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   6948               LDR      R0,??Host_WiFi_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   6848               LDR      R0,??Host_WiFi_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   20D5               BPL      ??Host_WiFi_Event_1
  10881                  {
  10882                    //zapis do flash
  10883                            unsigned int Save = __get_interrupt_state();  
   \   00000030   ........           BL       __iar_get_interrupt_state
   \   00000034   0400               MOVS     R4,R0
  10884                            __disable_interrupt();
   \   00000036   ........           BL       __iar_disable_interrupt
  10885                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Domena)), (char*) (&(NET.WiFi.Domena)),15);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000003A   0F22               MOVS     R2,#+15
   \   0000003C   6249               LDR      R1,??Host_WiFi_Event_0+0x10  ;; NET + 189
   \   0000003E   6348               LDR      R0,??Host_WiFi_Event_0+0x14  ;; 0x13d925
   \   00000040   ........           BL       FlashWrite
  10886                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Subdomena)), (char*) (&(NET.WiFi.Subdomena)), 15);
   \   00000044   0F22               MOVS     R2,#+15
   \   00000046   6249               LDR      R1,??Host_WiFi_Event_0+0x18  ;; NET + 204
   \   00000048   6248               LDR      R0,??Host_WiFi_Event_0+0x1C  ;; 0x13d934
   \   0000004A   ........           BL       FlashWrite
  10887                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Path)), (char*) (&(NET.WiFi.Path)), 15);
   \   0000004E   0F22               MOVS     R2,#+15
   \   00000050   6149               LDR      R1,??Host_WiFi_Event_0+0x20  ;; NET + 219
   \   00000052   6248               LDR      R0,??Host_WiFi_Event_0+0x24  ;; 0x13d943
   \   00000054   ........           BL       FlashWrite
  10888                            __set_interrupt_state(Save);
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   ........           BL       __iar_set_interrupt_state
  10889                            __enable_interrupt(); 
   \   0000005E   ........           BL       __iar_enable_interrupt
  10890                     //koniec zapisu do flash
  10891                    
  10892                       
  10893                           
  10894                            
  10895                    MenuLevel=(MenuLevel/10);
   \   00000062   5F48               LDR      R0,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   00000064   0068               LDR      R0,[R0, #+0]
   \   00000066   0A21               MOVS     R1,#+10
   \   00000068   ........           BL       __aeabi_idivmod
   \   0000006C   5C49               LDR      R1,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   0000006E   0860               STR      R0,[R1, #+0]
   \   00000070   9CE0               B        ??Host_WiFi_Event_2
  10896                    
  10897                     
  10898                    
  10899                  } 
  10900                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Host_WiFi_Event_1:
   \   00000072   5148               LDR      R0,??Host_WiFi_Event_0  ;; Y_down
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   405E               LDRSH    R0,[R0, R1]
   \   00000078   7028               CMP      R0,#+112
   \   0000007A   05DB               BLT      ??Host_WiFi_Event_3
   \   0000007C   5048               LDR      R0,??Host_WiFi_Event_0+0x8  ;; Y_up
   \   0000007E   0021               MOVS     R1,#+0
   \   00000080   405E               LDRSH    R0,[R0, R1]
   \   00000082   7028               CMP      R0,#+112
   \   00000084   00DB               BLT      .+4
   \   00000086   91E0               B        ??Host_WiFi_Event_2
  10901                  {
  10902                      char pY=72; 
   \                     ??Host_WiFi_Event_3:
   \   00000088   4822               MOVS     R2,#+72
  10903                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0D20               MOVS     R0,#+13
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   2223               MOVS     R3,#+34
   \   00000092   521C               ADDS     R2,R2,#+1
   \   00000094   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000096   120E               LSRS     R2,R2,#+24
   \   00000098   0F21               MOVS     R1,#+15
   \   0000009A   5248               LDR      R0,??Host_WiFi_Event_0+0x2C  ;; 0x915
   \   0000009C   524C               LDR      R4,??Host_WiFi_Event_0+0x30  ;; g_leng
   \   0000009E   2468               LDR      R4,[R4, #+0]
   \   000000A0   524D               LDR      R5,??Host_WiFi_Event_0+0x34  ;; 0xa7d
   \   000000A2   6C43               MULS     R4,R5,R4
   \   000000A4   524D               LDR      R5,??Host_WiFi_Event_0+0x38  ;; Speech
   \   000000A6   2C19               ADDS     R4,R5,R4
   \   000000A8   2018               ADDS     R0,R4,R0
   \   000000AA   ........           BL       Button
   \   000000AE   02B0               ADD      SP,SP,#+8
   \   000000B0   0128               CMP      R0,#+1
   \   000000B2   12D1               BNE      ??Host_WiFi_Event_4
  10904                      {
  10905                        TextToChange=NET.WiFi.Domena;
   \   000000B4   4F48               LDR      R0,??Host_WiFi_Event_0+0x3C  ;; TextToChange
   \   000000B6   4449               LDR      R1,??Host_WiFi_Event_0+0x10  ;; NET + 189
   \   000000B8   0160               STR      R1,[R0, #+0]
  10906                        TextToChangeLength=15;
   \   000000BA   4F48               LDR      R0,??Host_WiFi_Event_0+0x40  ;; TextToChangeLength
   \   000000BC   0F21               MOVS     R1,#+15
   \   000000BE   0170               STRB     R1,[R0, #+0]
  10907                        TextToChangeMaxPixSize=100;
   \   000000C0   4E48               LDR      R0,??Host_WiFi_Event_0+0x44  ;; TextToChangeMaxPixSize
   \   000000C2   6421               MOVS     R1,#+100
   \   000000C4   0170               STRB     R1,[R0, #+0]
  10908                        MenuLevel=(MenuLevel*10+1);
   \   000000C6   4648               LDR      R0,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   000000C8   4549               LDR      R1,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   000000CA   0968               LDR      R1,[R1, #+0]
   \   000000CC   0A22               MOVS     R2,#+10
   \   000000CE   5143               MULS     R1,R2,R1
   \   000000D0   491C               ADDS     R1,R1,#+1
   \   000000D2   0160               STR      R1,[R0, #+0]
  10909                        WiFiReConnect=1;
   \   000000D4   4A48               LDR      R0,??Host_WiFi_Event_0+0x48  ;; WiFiReConnect
   \   000000D6   0121               MOVS     R1,#+1
   \   000000D8   0170               STRB     R1,[R0, #+0]
  10910                      }
  10911                      pY=37; 
   \                     ??Host_WiFi_Event_4:
   \   000000DA   2522               MOVS     R2,#+37
  10912                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0D20               MOVS     R0,#+13
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   2223               MOVS     R3,#+34
   \   000000E4   521C               ADDS     R2,R2,#+1
   \   000000E6   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000E8   120E               LSRS     R2,R2,#+24
   \   000000EA   0F21               MOVS     R1,#+15
   \   000000EC   3D48               LDR      R0,??Host_WiFi_Event_0+0x2C  ;; 0x915
   \   000000EE   3E4C               LDR      R4,??Host_WiFi_Event_0+0x30  ;; g_leng
   \   000000F0   2468               LDR      R4,[R4, #+0]
   \   000000F2   3E4D               LDR      R5,??Host_WiFi_Event_0+0x34  ;; 0xa7d
   \   000000F4   6C43               MULS     R4,R5,R4
   \   000000F6   3E4D               LDR      R5,??Host_WiFi_Event_0+0x38  ;; Speech
   \   000000F8   2C19               ADDS     R4,R5,R4
   \   000000FA   2018               ADDS     R0,R4,R0
   \   000000FC   ........           BL       Button
   \   00000100   02B0               ADD      SP,SP,#+8
   \   00000102   0128               CMP      R0,#+1
   \   00000104   12D1               BNE      ??Host_WiFi_Event_5
  10913                      {
  10914                        TextToChange=NET.WiFi.Subdomena;
   \   00000106   3B48               LDR      R0,??Host_WiFi_Event_0+0x3C  ;; TextToChange
   \   00000108   3149               LDR      R1,??Host_WiFi_Event_0+0x18  ;; NET + 204
   \   0000010A   0160               STR      R1,[R0, #+0]
  10915                        TextToChangeLength=15;
   \   0000010C   3A48               LDR      R0,??Host_WiFi_Event_0+0x40  ;; TextToChangeLength
   \   0000010E   0F21               MOVS     R1,#+15
   \   00000110   0170               STRB     R1,[R0, #+0]
  10916                        TextToChangeMaxPixSize=100;
   \   00000112   3A48               LDR      R0,??Host_WiFi_Event_0+0x44  ;; TextToChangeMaxPixSize
   \   00000114   6421               MOVS     R1,#+100
   \   00000116   0170               STRB     R1,[R0, #+0]
  10917                        MenuLevel=(MenuLevel*10+1);
   \   00000118   3148               LDR      R0,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   0000011A   3149               LDR      R1,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   0000011C   0968               LDR      R1,[R1, #+0]
   \   0000011E   0A22               MOVS     R2,#+10
   \   00000120   5143               MULS     R1,R2,R1
   \   00000122   491C               ADDS     R1,R1,#+1
   \   00000124   0160               STR      R1,[R0, #+0]
  10918                        WiFiReConnect=1;
   \   00000126   3648               LDR      R0,??Host_WiFi_Event_0+0x48  ;; WiFiReConnect
   \   00000128   0121               MOVS     R1,#+1
   \   0000012A   0170               STRB     R1,[R0, #+0]
  10919                      }
  10920                      pY=2; 
   \                     ??Host_WiFi_Event_5:
   \   0000012C   0222               MOVS     R2,#+2
  10921                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   0000012E   82B0               SUB      SP,SP,#+8
   \   00000130   0D20               MOVS     R0,#+13
   \   00000132   0090               STR      R0,[SP, #+0]
   \   00000134   2223               MOVS     R3,#+34
   \   00000136   521C               ADDS     R2,R2,#+1
   \   00000138   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000013A   120E               LSRS     R2,R2,#+24
   \   0000013C   0F21               MOVS     R1,#+15
   \   0000013E   2948               LDR      R0,??Host_WiFi_Event_0+0x2C  ;; 0x915
   \   00000140   294C               LDR      R4,??Host_WiFi_Event_0+0x30  ;; g_leng
   \   00000142   2468               LDR      R4,[R4, #+0]
   \   00000144   294D               LDR      R5,??Host_WiFi_Event_0+0x34  ;; 0xa7d
   \   00000146   6C43               MULS     R4,R5,R4
   \   00000148   294D               LDR      R5,??Host_WiFi_Event_0+0x38  ;; Speech
   \   0000014A   2C19               ADDS     R4,R5,R4
   \   0000014C   2018               ADDS     R0,R4,R0
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   12D1               BNE      ??Host_WiFi_Event_6
  10922                      {
  10923                        TextToChange=NET.WiFi.Path;
   \   00000158   2648               LDR      R0,??Host_WiFi_Event_0+0x3C  ;; TextToChange
   \   0000015A   1F49               LDR      R1,??Host_WiFi_Event_0+0x20  ;; NET + 219
   \   0000015C   0160               STR      R1,[R0, #+0]
  10924                        TextToChangeLength=15;
   \   0000015E   2648               LDR      R0,??Host_WiFi_Event_0+0x40  ;; TextToChangeLength
   \   00000160   0F21               MOVS     R1,#+15
   \   00000162   0170               STRB     R1,[R0, #+0]
  10925                        TextToChangeMaxPixSize=100;
   \   00000164   2548               LDR      R0,??Host_WiFi_Event_0+0x44  ;; TextToChangeMaxPixSize
   \   00000166   6421               MOVS     R1,#+100
   \   00000168   0170               STRB     R1,[R0, #+0]
  10926                        MenuLevel=(MenuLevel*10+1);
   \   0000016A   1D48               LDR      R0,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   0000016C   1C49               LDR      R1,??Host_WiFi_Event_0+0x28  ;; MenuLevel
   \   0000016E   0968               LDR      R1,[R1, #+0]
   \   00000170   0A22               MOVS     R2,#+10
   \   00000172   5143               MULS     R1,R2,R1
   \   00000174   491C               ADDS     R1,R1,#+1
   \   00000176   0160               STR      R1,[R0, #+0]
  10927                        WiFiReConnect=1;
   \   00000178   2148               LDR      R0,??Host_WiFi_Event_0+0x48  ;; WiFiReConnect
   \   0000017A   0121               MOVS     R1,#+1
   \   0000017C   0170               STRB     R1,[R0, #+0]
  10928                        
  10929                      }
  10930                      
  10931                      
  10932                      
  10933                      
  10934                      if (Button("?",36,112,11,13)==1) 
   \                     ??Host_WiFi_Event_6:
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0D20               MOVS     R0,#+13
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   0B23               MOVS     R3,#+11
   \   00000186   7022               MOVS     R2,#+112
   \   00000188   2421               MOVS     R1,#+36
   \   0000018A   1EA0               ADR      R0,??Host_WiFi_Event_0+0x4C  ;; 0x3F, 0x00, 0x00, 0x00
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   \   00000192   0128               CMP      R0,#+1
   \   00000194   0AD1               BNE      ??Host_WiFi_Event_2
  10935                       {
  10936                         if (g_leng==0)
   \   00000196   1448               LDR      R0,??Host_WiFi_Event_0+0x30  ;; g_leng
   \   00000198   0068               LDR      R0,[R0, #+0]
   \   0000019A   0028               CMP      R0,#+0
   \   0000019C   03D1               BNE      ??Host_WiFi_Event_7
  10937                         {
  10938                           MESSAGE(Komentarz1_PL); 
   \   0000019E   1A48               LDR      R0,??Host_WiFi_Event_0+0x50  ;; `?<Constant "Przyklad:\\n   a.bbb.pl...">`
   \   000001A0   ........           BL       MESSAGE
   \   000001A4   02E0               B        ??Host_WiFi_Event_2
  10939                         }else{
  10940                           MESSAGE(Komentarz1_En); 
   \                     ??Host_WiFi_Event_7:
   \   000001A6   1948               LDR      R0,??Host_WiFi_Event_0+0x54  ;; `?<Constant "Przyklad:\\n   a.bbb.pl...">_1`
   \   000001A8   ........           BL       MESSAGE
  10941                         }
  10942                       }
  10943                      
  10944                    
  10945                  }
  10946                   MenuPaint();
   \                     ??Host_WiFi_Event_2:
   \   000001AC   ........           BL       MenuPaint
  10947                    
  10948                
  10949                }//_______________________________________________________________________
   \   000001B0   01B0               ADD      SP,SP,#+4
   \   000001B2   30BC               POP      {R4,R5}
   \   000001B4   01BC               POP      {R0}
   \   000001B6   0047               BX       R0               ;; return
   \                     ??Host_WiFi_Event_0:
   \   000001B8   ........           DC32     Y_down
   \   000001BC   ........           DC32     X_down
   \   000001C0   ........           DC32     Y_up
   \   000001C4   ........           DC32     X_up
   \   000001C8   ........           DC32     NET + 189
   \   000001CC   25D91300           DC32     0x13d925
   \   000001D0   ........           DC32     NET + 204
   \   000001D4   34D91300           DC32     0x13d934
   \   000001D8   ........           DC32     NET + 219
   \   000001DC   43D91300           DC32     0x13d943
   \   000001E0   ........           DC32     MenuLevel
   \   000001E4   15090000           DC32     0x915
   \   000001E8   ........           DC32     g_leng
   \   000001EC   7D0A0000           DC32     0xa7d
   \   000001F0   ........           DC32     Speech
   \   000001F4   ........           DC32     TextToChange
   \   000001F8   ........           DC32     TextToChangeLength
   \   000001FC   ........           DC32     TextToChangeMaxPixSize
   \   00000200   ........           DC32     WiFiReConnect
   \   00000204   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   00000208   ........           DC32     `?<Constant "Przyklad:\\n   a.bbb.pl...">`
   \   0000020C   ........           DC32     `?<Constant "Przyklad:\\n   a.bbb.pl...">_1`
  10950              
  10951               
  10952                
  10953                
  10954           
  10955                                                   
  10956          
  10957                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10958                void NetPeriodicity_Paint(void)
  10959                {
   \                     NetPeriodicity_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
  10960            
  10961                      List_Paint(Speech[g_leng].Okresowosc,1,65,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   36A0               ADR      R0,??NetPeriodicity_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   4122               MOVS     R2,#+65
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   3348               LDR      R0,??NetPeriodicity_Paint_0+0x4  ;; 0x97e
   \   00000028   334C               LDR      R4,??NetPeriodicity_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   334D               LDR      R5,??NetPeriodicity_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   334D               LDR      R5,??NetPeriodicity_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
  10962                      
  10963                      char txt[9];
  10964                      char liter=sprintf(txt, "%d", NET.WiFi.HttpQueryPeriod*100);
                                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000003C   EE20               MOVS     R0,#+238
   \   0000003E   3149               LDR      R1,??NetPeriodicity_Paint_0+0x14  ;; NET
   \   00000040   0A5E               LDRSH    R2,[R1, R0]
   \   00000042   6420               MOVS     R0,#+100
   \   00000044   4243               MULS     R2,R0,R2
   \   00000046   30A1               ADR      R1,??NetPeriodicity_Paint_0+0x18  ;; 0x25, 0x64, 0x00, 0x00
   \   00000048   6846               MOV      R0,SP
   \   0000004A   ........           BL       sprintf
   \   0000004E   0200               MOVS     R2,R0
  10965                      txt[liter++]=' ';
   \   00000050   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000052   120E               LSRS     R2,R2,#+24
   \   00000054   6846               MOV      R0,SP
   \   00000056   2021               MOVS     R1,#+32
   \   00000058   8154               STRB     R1,[R0, R2]
   \   0000005A   521C               ADDS     R2,R2,#+1
  10966                      txt[liter++]='m';
   \   0000005C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000005E   120E               LSRS     R2,R2,#+24
   \   00000060   6846               MOV      R0,SP
   \   00000062   6D21               MOVS     R1,#+109
   \   00000064   8154               STRB     R1,[R0, R2]
   \   00000066   521C               ADDS     R2,R2,#+1
  10967                      txt[liter++]='s';
   \   00000068   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000006A   120E               LSRS     R2,R2,#+24
   \   0000006C   6846               MOV      R0,SP
   \   0000006E   7321               MOVS     R1,#+115
   \   00000070   8154               STRB     R1,[R0, R2]
   \   00000072   521C               ADDS     R2,R2,#+1
  10968                      Label(txt,0,13,92,liter,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   2821               MOVS     R1,#+40
   \   00000082   1000               MOVS     R0,R2
   \   00000084   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   5C23               MOVS     R3,#+92
   \   0000008C   0D22               MOVS     R2,#+13
   \   0000008E   0021               MOVS     R1,#+0
   \   00000090   06A8               ADD      R0,SP,#+24
   \   00000092   ........           BL       Label
   \   00000096   06B0               ADD      SP,SP,#+24
  10969                          
  10970                      
  10971                      txt[1]=0;
   \   00000098   6846               MOV      R0,SP
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   4170               STRB     R1,[R0, #+1]
  10972                      txt[0]=31;
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   1F21               MOVS     R1,#+31
   \   000000A2   0170               STRB     R1,[R0, #+0]
  10973                      Button(txt,12,68,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1220               MOVS     R0,#+18
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   1423               MOVS     R3,#+20
   \   000000AC   4422               MOVS     R2,#+68
   \   000000AE   0C21               MOVS     R1,#+12
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
  10974                      txt[0]=30;
   \   000000B8   6846               MOV      R0,SP
   \   000000BA   1E21               MOVS     R1,#+30
   \   000000BC   0170               STRB     R1,[R0, #+0]
  10975                      Button(txt,32,68,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   1220               MOVS     R0,#+18
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   1423               MOVS     R3,#+20
   \   000000C6   4422               MOVS     R2,#+68
   \   000000C8   2021               MOVS     R1,#+32
   \   000000CA   02A8               ADD      R0,SP,#+8
   \   000000CC   ........           BL       Button
   \   000000D0   02B0               ADD      SP,SP,#+8
  10976                      
  10977                      Button("?",50,90,11,13);
   \   000000D2   82B0               SUB      SP,SP,#+8
   \   000000D4   0D20               MOVS     R0,#+13
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   0B23               MOVS     R3,#+11
   \   000000DA   5A22               MOVS     R2,#+90
   \   000000DC   3221               MOVS     R1,#+50
   \   000000DE   0BA0               ADR      R0,??NetPeriodicity_Paint_0+0x1C  ;; 0x3F, 0x00, 0x00, 0x00
   \   000000E0   ........           BL       Button
   \   000000E4   02B0               ADD      SP,SP,#+8
  10978                      
  10979                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   000000E6   03B0               ADD      SP,SP,#+12
   \   000000E8   30BC               POP      {R4,R5}
   \   000000EA   01BC               POP      {R0}
   \   000000EC   0047               BX       R0               ;; return
   \   000000EE   C046               Nop      
   \                     ??NetPeriodicity_Paint_0:
   \   000000F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000F4   7E090000           DC32     0x97e
   \   000000F8   ........           DC32     g_leng
   \   000000FC   7D0A0000           DC32     0xa7d
   \   00000100   ........           DC32     Speech
   \   00000104   ........           DC32     NET
   \   00000108   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   0000010C   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
  10980           
  10981                
  10982                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10983                void NetPeriodicity_Event(void)
  10984                {
   \                     NetPeriodicity_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10985                  
  10986                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   4848               LDR      R0,??NetPeriodicity_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   4748               LDR      R0,??NetPeriodicity_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   4748               LDR      R0,??NetPeriodicity_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   4648               LDR      R0,??NetPeriodicity_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0400               MOVS     R4,R0
  10987                        
  10988                      char bt=0; 
   \   0000002E   0025               MOVS     R5,#+0
  10989                      
  10990                      char LabelButt[2];  
  10991                      LabelButt[1]=0;
   \   00000030   6846               MOV      R0,SP
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   4170               STRB     R1,[R0, #+1]
  10992                      LabelButt[0]=31;
   \   00000036   6846               MOV      R0,SP
   \   00000038   1F21               MOVS     R1,#+31
   \   0000003A   0170               STRB     R1,[R0, #+0]
  10993                      if (Button(LabelButt,12,68,20,18)==1) bt=1; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   1220               MOVS     R0,#+18
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   1423               MOVS     R3,#+20
   \   00000044   4422               MOVS     R2,#+68
   \   00000046   0C21               MOVS     R1,#+12
   \   00000048   02A8               ADD      R0,SP,#+8
   \   0000004A   ........           BL       Button
   \   0000004E   02B0               ADD      SP,SP,#+8
   \   00000050   0128               CMP      R0,#+1
   \   00000052   00D1               BNE      ??NetPeriodicity_Event_1
   \   00000054   0125               MOVS     R5,#+1
  10994                      LabelButt[0]=30;
   \                     ??NetPeriodicity_Event_1:
   \   00000056   6846               MOV      R0,SP
   \   00000058   1E21               MOVS     R1,#+30
   \   0000005A   0170               STRB     R1,[R0, #+0]
  10995                      if (Button(LabelButt,32,68,20,18)==1) bt=2; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   1220               MOVS     R0,#+18
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   1423               MOVS     R3,#+20
   \   00000064   4422               MOVS     R2,#+68
   \   00000066   2021               MOVS     R1,#+32
   \   00000068   02A8               ADD      R0,SP,#+8
   \   0000006A   ........           BL       Button
   \   0000006E   02B0               ADD      SP,SP,#+8
   \   00000070   0128               CMP      R0,#+1
   \   00000072   00D1               BNE      ??NetPeriodicity_Event_2
   \   00000074   0225               MOVS     R5,#+2
  10996                        
  10997                        
  10998                      if ((bt==1) && (NET.WiFi.HttpQueryPeriod>3)) NET.WiFi.HttpQueryPeriod--;
   \                     ??NetPeriodicity_Event_2:
   \   00000076   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000078   2D0E               LSRS     R5,R5,#+24
   \   0000007A   012D               CMP      R5,#+1
   \   0000007C   0AD1               BNE      ??NetPeriodicity_Event_3
   \   0000007E   EE20               MOVS     R0,#+238
   \   00000080   2F49               LDR      R1,??NetPeriodicity_Event_0+0x10  ;; NET
   \   00000082   085E               LDRSH    R0,[R1, R0]
   \   00000084   0428               CMP      R0,#+4
   \   00000086   05DB               BLT      ??NetPeriodicity_Event_3
   \   00000088   2E48               LDR      R0,??NetPeriodicity_Event_0+0x14  ;; NET + 238
   \   0000008A   EE21               MOVS     R1,#+238
   \   0000008C   2C4A               LDR      R2,??NetPeriodicity_Event_0+0x10  ;; NET
   \   0000008E   515E               LDRSH    R1,[R2, R1]
   \   00000090   491E               SUBS     R1,R1,#+1
   \   00000092   0180               STRH     R1,[R0, #+0]
  10999                      if ((bt==2) && (NET.WiFi.HttpQueryPeriod<51)) NET.WiFi.HttpQueryPeriod++;
   \                     ??NetPeriodicity_Event_3:
   \   00000094   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000096   2D0E               LSRS     R5,R5,#+24
   \   00000098   022D               CMP      R5,#+2
   \   0000009A   0AD1               BNE      ??NetPeriodicity_Event_4
   \   0000009C   EE20               MOVS     R0,#+238
   \   0000009E   2849               LDR      R1,??NetPeriodicity_Event_0+0x10  ;; NET
   \   000000A0   085E               LDRSH    R0,[R1, R0]
   \   000000A2   3328               CMP      R0,#+51
   \   000000A4   05DA               BGE      ??NetPeriodicity_Event_4
   \   000000A6   2748               LDR      R0,??NetPeriodicity_Event_0+0x14  ;; NET + 238
   \   000000A8   EE21               MOVS     R1,#+238
   \   000000AA   254A               LDR      R2,??NetPeriodicity_Event_0+0x10  ;; NET
   \   000000AC   515E               LDRSH    R1,[R2, R1]
   \   000000AE   491C               ADDS     R1,R1,#+1
   \   000000B0   0180               STRH     R1,[R0, #+0]
  11000                      
  11001                       if (bt>0)
   \                     ??NetPeriodicity_Event_4:
   \   000000B2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B4   2D0E               LSRS     R5,R5,#+24
   \   000000B6   012D               CMP      R5,#+1
   \   000000B8   01D3               BCC      ??NetPeriodicity_Event_5
  11002                       {
  11003                           
  11004                         MenuPaint();
   \   000000BA   ........           BL       MenuPaint
  11005                       }
  11006                       
  11007                       if (Button("?",50,90,11,13)==1) 
   \                     ??NetPeriodicity_Event_5:
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   0D20               MOVS     R0,#+13
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   0B23               MOVS     R3,#+11
   \   000000C6   5A22               MOVS     R2,#+90
   \   000000C8   3221               MOVS     R1,#+50
   \   000000CA   1FA0               ADR      R0,??NetPeriodicity_Event_0+0x18  ;; 0x3F, 0x00, 0x00, 0x00
   \   000000CC   ........           BL       Button
   \   000000D0   02B0               ADD      SP,SP,#+8
   \   000000D2   0128               CMP      R0,#+1
   \   000000D4   0AD1               BNE      ??NetPeriodicity_Event_6
  11008                       {
  11009                         if (g_leng==0)
   \   000000D6   1D48               LDR      R0,??NetPeriodicity_Event_0+0x1C  ;; g_leng
   \   000000D8   0068               LDR      R0,[R0, #+0]
   \   000000DA   0028               CMP      R0,#+0
   \   000000DC   03D1               BNE      ??NetPeriodicity_Event_7
  11010                         {
  11011                           MESSAGE(Komentarz0_PL); 
   \   000000DE   1C48               LDR      R0,??NetPeriodicity_Event_0+0x20  ;; `?<Constant "Ustaw okresowosc pola...">`
   \   000000E0   ........           BL       MESSAGE
   \   000000E4   02E0               B        ??NetPeriodicity_Event_6
  11012                         }else{
  11013                           MESSAGE(Komentarz0_En); 
   \                     ??NetPeriodicity_Event_7:
   \   000000E6   1B48               LDR      R0,??NetPeriodicity_Event_0+0x24  ;; `?<Constant "Set the periodicity o...">`
   \   000000E8   ........           BL       MESSAGE
  11014                         }
  11015                       }
  11016                       
  11017                      if (ans<0) {
   \                     ??NetPeriodicity_Event_6:
   \   000000EC   002C               CMP      R4,#+0
   \   000000EE   1AD5               BPL      ??NetPeriodicity_Event_8
  11018                              //zapis do flash
  11019                              unsigned int Save = __get_interrupt_state();                            
   \   000000F0   ........           BL       __iar_get_interrupt_state
   \   000000F4   0400               MOVS     R4,R0
  11020                              __disable_interrupt();
   \   000000F6   ........           BL       __iar_disable_interrupt
  11021                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.HttpQueryPeriod)), (char*) (&(NET.WiFi.HttpQueryPeriod)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000FA   0122               MOVS     R2,#+1
   \   000000FC   1149               LDR      R1,??NetPeriodicity_Event_0+0x14  ;; NET + 238
   \   000000FE   1648               LDR      R0,??NetPeriodicity_Event_0+0x28  ;; 0x13d956
   \   00000100   ........           BL       FlashWrite
  11022                              __set_interrupt_state(Save);
   \   00000104   2000               MOVS     R0,R4
   \   00000106   ........           BL       __iar_set_interrupt_state
  11023                              __enable_interrupt();
   \   0000010A   ........           BL       __iar_enable_interrupt
  11024                              //koniec zapisu do flash
  11025                              
  11026                              MenuLevel=(MenuLevel/10);
   \   0000010E   1348               LDR      R0,??NetPeriodicity_Event_0+0x2C  ;; MenuLevel
   \   00000110   0068               LDR      R0,[R0, #+0]
   \   00000112   0A21               MOVS     R1,#+10
   \   00000114   ........           BL       __aeabi_idivmod
   \   00000118   1049               LDR      R1,??NetPeriodicity_Event_0+0x2C  ;; MenuLevel
   \   0000011A   0860               STR      R0,[R1, #+0]
  11027                              CurModifSheet=0; 
   \   0000011C   1048               LDR      R0,??NetPeriodicity_Event_0+0x30  ;; CurModifSheet
   \   0000011E   0021               MOVS     R1,#+0
   \   00000120   0170               STRB     R1,[R0, #+0]
  11028                              MenuPaint();
   \   00000122   ........           BL       MenuPaint
  11029                            }
  11030                     
  11031                }//_______________________________________________________________________
   \                     ??NetPeriodicity_Event_8:
   \   00000126   01B0               ADD      SP,SP,#+4
   \   00000128   30BC               POP      {R4,R5}
   \   0000012A   01BC               POP      {R0}
   \   0000012C   0047               BX       R0               ;; return
   \   0000012E   C046               Nop      
   \                     ??NetPeriodicity_Event_0:
   \   00000130   ........           DC32     Y_down
   \   00000134   ........           DC32     X_down
   \   00000138   ........           DC32     Y_up
   \   0000013C   ........           DC32     X_up
   \   00000140   ........           DC32     NET
   \   00000144   ........           DC32     NET + 238
   \   00000148   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   0000014C   ........           DC32     g_leng
   \   00000150   ........           DC32     `?<Constant "Ustaw okresowosc pola...">`
   \   00000154   ........           DC32     `?<Constant "Set the periodicity o...">`
   \   00000158   56D91300           DC32     0x13d956
   \   0000015C   ........           DC32     MenuLevel
   \   00000160   ........           DC32     CurModifSheet
  11032                
  11033                
  11034                
  11035              //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11036                void IpTCP_Paint(void)
  11037                {
   \                     IpTCP_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  11038                   if (NET.WiFi.IpNotAuto==1)
   \   00000002   2648               LDR      R0,??IpTCP_Paint_0  ;; NET + 81
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   1DD1               BNE      ??IpTCP_Paint_1
  11039                   {
  11040                      List_Paint(Speech[g_leng].Siec,2,15,0,0,3, "Auto IP -on", "IP config" , 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000000A   82B0               SUB      SP,SP,#+8
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   2049               LDR      R1,??IpTCP_Paint_0+0x4  ;; `?<Constant "IP config">`
   \   0000001E   2148               LDR      R0,??IpTCP_Paint_0+0x8  ;; `?<Constant "Auto IP -on">`
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0321               MOVS     R1,#+3
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   1E48               LDR      R0,??IpTCP_Paint_0+0xC  ;; 0x8ca
   \   00000030   1E4C               LDR      R4,??IpTCP_Paint_0+0x10  ;; g_leng
   \   00000032   2468               LDR      R4,[R4, #+0]
   \   00000034   1E4D               LDR      R5,??IpTCP_Paint_0+0x14  ;; 0xa7d
   \   00000036   6C43               MULS     R4,R5,R4
   \   00000038   1E4D               LDR      R5,??IpTCP_Paint_0+0x18  ;; Speech
   \   0000003A   2C19               ADDS     R4,R5,R4
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       List_Paint
   \   00000042   0AB0               ADD      SP,SP,#+40
   \   00000044   26E0               B        ??IpTCP_Paint_2
  11041                   }else{
  11042                      List_Paint(Speech[g_leng].Siec,1,60,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??IpTCP_Paint_1:
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   17A0               ADR      R0,??IpTCP_Paint_0+0x1C  ;; 0x20, 0x00, 0x00, 0x00
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   0321               MOVS     R1,#+3
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0023               MOVS     R3,#+0
   \   00000066   3C22               MOVS     R2,#+60
   \   00000068   0121               MOVS     R1,#+1
   \   0000006A   0F48               LDR      R0,??IpTCP_Paint_0+0xC  ;; 0x8ca
   \   0000006C   0F4C               LDR      R4,??IpTCP_Paint_0+0x10  ;; g_leng
   \   0000006E   2468               LDR      R4,[R4, #+0]
   \   00000070   0F4D               LDR      R5,??IpTCP_Paint_0+0x14  ;; 0xa7d
   \   00000072   6C43               MULS     R4,R5,R4
   \   00000074   0F4D               LDR      R5,??IpTCP_Paint_0+0x18  ;; Speech
   \   00000076   2C19               ADDS     R4,R5,R4
   \   00000078   2018               ADDS     R0,R4,R0
   \   0000007A   ........           BL       List_Paint
   \   0000007E   0AB0               ADD      SP,SP,#+40
  11043                      Button("Auto IP -off",2,75,60,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0D20               MOVS     R0,#+13
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   3C23               MOVS     R3,#+60
   \   00000088   4B22               MOVS     R2,#+75
   \   0000008A   0221               MOVS     R1,#+2
   \   0000008C   0B48               LDR      R0,??IpTCP_Paint_0+0x20  ;; `?<Constant "Auto IP -off">`
   \   0000008E   ........           BL       Button
   \   00000092   02B0               ADD      SP,SP,#+8
  11044                   }
  11045                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??IpTCP_Paint_2:
   \   00000094   01B0               ADD      SP,SP,#+4
   \   00000096   30BC               POP      {R4,R5}
   \   00000098   01BC               POP      {R0}
   \   0000009A   0047               BX       R0               ;; return
   \                     ??IpTCP_Paint_0:
   \   0000009C   ........           DC32     NET + 81
   \   000000A0   ........           DC32     `?<Constant "IP config">`
   \   000000A4   ........           DC32     `?<Constant "Auto IP -on">`
   \   000000A8   CA080000           DC32     0x8ca
   \   000000AC   ........           DC32     g_leng
   \   000000B0   7D0A0000           DC32     0xa7d
   \   000000B4   ........           DC32     Speech
   \   000000B8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000BC   ........           DC32     `?<Constant "Auto IP -off">`
  11046          
  11047          
  11048                  
  11049                 
  11050                 
  11051                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11052                void IpTCP_Event(void)
  11053                {
   \                     IpTCP_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  11054                  if (NET.WiFi.IpNotAuto==1)
   \   00000002   6148               LDR      R0,??IpTCP_Event_0  ;; NET + 81
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   5ED1               BNE      ??IpTCP_Event_1
  11055                   {
  11056                        int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   0220               MOVS     R0,#+2
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   5D48               LDR      R0,??IpTCP_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   5C48               LDR      R0,??IpTCP_Event_0+0x8  ;; X_down
   \   0000001E   0021               MOVS     R1,#+0
   \   00000020   425E               LDRSH    R2,[R0, R1]
   \   00000022   5C48               LDR      R0,??IpTCP_Event_0+0xC  ;; Y_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   415E               LDRSH    R1,[R0, R1]
   \   00000028   5B48               LDR      R0,??IpTCP_Event_0+0x10  ;; X_up
   \   0000002A   0024               MOVS     R4,#+0
   \   0000002C   005F               LDRSH    R0,[R0, R4]
   \   0000002E   ........           BL       List_Event
   \   00000032   04B0               ADD      SP,SP,#+16
   \   00000034   0400               MOVS     R4,R0
  11057                  
  11058                        if (ans)
   \   00000036   002C               CMP      R4,#+0
   \   00000038   00D1               BNE      .+4
   \   0000003A   A0E0               B        ??IpTCP_Event_2
  11059                          {
  11060                          if (ans==2) MenuLevel=(MenuLevel*10+ans);
   \   0000003C   022C               CMP      R4,#+2
   \   0000003E   06D1               BNE      ??IpTCP_Event_3
   \   00000040   5648               LDR      R0,??IpTCP_Event_0+0x14  ;; MenuLevel
   \   00000042   5649               LDR      R1,??IpTCP_Event_0+0x14  ;; MenuLevel
   \   00000044   0968               LDR      R1,[R1, #+0]
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   5143               MULS     R1,R2,R1
   \   0000004A   0919               ADDS     R1,R1,R4
   \   0000004C   0160               STR      R1,[R0, #+0]
  11061                          if (ans==1)   //w³¹cz auto
   \                     ??IpTCP_Event_3:
   \   0000004E   012C               CMP      R4,#+1
   \   00000050   2BD1               BNE      ??IpTCP_Event_4
  11062                          {
  11063                              NET.WiFi.IpNotAuto=0; 
   \   00000052   4D48               LDR      R0,??IpTCP_Event_0  ;; NET + 81
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   0170               STRB     R1,[R0, #+0]
  11064          
  11065                              
  11066                             //zapis do flash
  11067                              unsigned int Save = __get_interrupt_state();  
   \   00000058   ........           BL       __iar_get_interrupt_state
   \   0000005C   0500               MOVS     R5,R0
  11068                              __disable_interrupt();
   \   0000005E   ........           BL       __iar_disable_interrupt
  11069                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IpNotAuto)), (char*) (&(NET.WiFi.IpNotAuto)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000062   0122               MOVS     R2,#+1
   \   00000064   4849               LDR      R1,??IpTCP_Event_0  ;; NET + 81
   \   00000066   4E48               LDR      R0,??IpTCP_Event_0+0x18  ;; 0x13d8b9
   \   00000068   ........           BL       FlashWrite
  11070                              __set_interrupt_state(Save);
   \   0000006C   2800               MOVS     R0,R5
   \   0000006E   ........           BL       __iar_set_interrupt_state
  11071                              __enable_interrupt();
   \   00000072   ........           BL       __iar_enable_interrupt
  11072                              //koniec zapisu do flash
  11073                              
  11074                               NET.Status.FreezTime=0;
   \   00000076   4B4A               LDR      R2,??IpTCP_Event_0+0x1C  ;; NET + 64
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   03C2               STM      R2!,{R0,R1}
   \   0000007E   083A               SUBS     R2,R2,#+8
  11075                             NET.Status.HostLink=DISCONNECTED;
   \   00000080   4948               LDR      R0,??IpTCP_Event_0+0x20  ;; NET + 1
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   0170               STRB     R1,[R0, #+0]
  11076                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000086   4948               LDR      R0,??IpTCP_Event_0+0x24  ;; NET
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   0170               STRB     R1,[R0, #+0]
  11077                             NET.Status.Timeout=0;
   \   0000008C   484A               LDR      R2,??IpTCP_Event_0+0x28  ;; NET + 56
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   03C2               STM      R2!,{R0,R1}
   \   00000094   083A               SUBS     R2,R2,#+8
  11078                             NET.Status.HttpNextQueryTime=0;
   \   00000096   474A               LDR      R2,??IpTCP_Event_0+0x2C  ;; NET + 48
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   03C2               STM      R2!,{R0,R1}
   \   0000009E   083A               SUBS     R2,R2,#+8
  11079                             NET.Status.FreezTime=0;
   \   000000A0   404A               LDR      R2,??IpTCP_Event_0+0x1C  ;; NET + 64
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   0021               MOVS     R1,#+0
   \   000000A6   03C2               STM      R2!,{R0,R1}
   \   000000A8   083A               SUBS     R2,R2,#+8
  11080                            
  11081                          }
  11082                          if (ans<0) {
   \                     ??IpTCP_Event_4:
   \   000000AA   002C               CMP      R4,#+0
   \   000000AC   09D5               BPL      ??IpTCP_Event_5
  11083                            MenuLevel=(MenuLevel/10);
   \   000000AE   3B48               LDR      R0,??IpTCP_Event_0+0x14  ;; MenuLevel
   \   000000B0   0068               LDR      R0,[R0, #+0]
   \   000000B2   0A21               MOVS     R1,#+10
   \   000000B4   ........           BL       __aeabi_idivmod
   \   000000B8   3849               LDR      R1,??IpTCP_Event_0+0x14  ;; MenuLevel
   \   000000BA   0860               STR      R0,[R1, #+0]
  11084                            CurModifSheet=0; 
   \   000000BC   3E48               LDR      R0,??IpTCP_Event_0+0x30  ;; CurModifSheet
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   0170               STRB     R1,[R0, #+0]
  11085                          }
  11086                          MenuPaint();
   \                     ??IpTCP_Event_5:
   \   000000C2   ........           BL       MenuPaint
   \   000000C6   5AE0               B        ??IpTCP_Event_2
  11087                          } 
  11088                   }else{
  11089                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   \                     ??IpTCP_Event_1:
   \   000000C8   0021               MOVS     R1,#+0
   \   000000CA   0020               MOVS     R0,#+0
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   0F21               MOVS     R1,#+15
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   2D48               LDR      R0,??IpTCP_Event_0+0x4  ;; Y_down
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   435E               LDRSH    R3,[R0, R1]
   \   000000DA   2D48               LDR      R0,??IpTCP_Event_0+0x8  ;; X_down
   \   000000DC   0021               MOVS     R1,#+0
   \   000000DE   425E               LDRSH    R2,[R0, R1]
   \   000000E0   2C48               LDR      R0,??IpTCP_Event_0+0xC  ;; Y_up
   \   000000E2   0021               MOVS     R1,#+0
   \   000000E4   415E               LDRSH    R1,[R0, R1]
   \   000000E6   2C48               LDR      R0,??IpTCP_Event_0+0x10  ;; X_up
   \   000000E8   0024               MOVS     R4,#+0
   \   000000EA   005F               LDRSH    R0,[R0, R4]
   \   000000EC   ........           BL       List_Event
   \   000000F0   04B0               ADD      SP,SP,#+16
  11090                        if (ans<0) {
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   09D5               BPL      ??IpTCP_Event_6
  11091                              MenuLevel=(MenuLevel/10);
   \   000000F6   2948               LDR      R0,??IpTCP_Event_0+0x14  ;; MenuLevel
   \   000000F8   0068               LDR      R0,[R0, #+0]
   \   000000FA   0A21               MOVS     R1,#+10
   \   000000FC   ........           BL       __aeabi_idivmod
   \   00000100   2649               LDR      R1,??IpTCP_Event_0+0x14  ;; MenuLevel
   \   00000102   0860               STR      R0,[R1, #+0]
  11092                              CurModifSheet=0; 
   \   00000104   2C48               LDR      R0,??IpTCP_Event_0+0x30  ;; CurModifSheet
   \   00000106   0021               MOVS     R1,#+0
   \   00000108   0170               STRB     R1,[R0, #+0]
  11093                            }
  11094                       
  11095                     
  11096                       if (Button("Auto IP -off",2,75,60,13)==1)
   \                     ??IpTCP_Event_6:
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0D20               MOVS     R0,#+13
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   3C23               MOVS     R3,#+60
   \   00000112   4B22               MOVS     R2,#+75
   \   00000114   0221               MOVS     R1,#+2
   \   00000116   2948               LDR      R0,??IpTCP_Event_0+0x34  ;; `?<Constant "Auto IP -off">`
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   2DD1               BNE      ??IpTCP_Event_2
  11097                       {
  11098                             NET.Status.FreezTime=0;
   \   00000122   204A               LDR      R2,??IpTCP_Event_0+0x1C  ;; NET + 64
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0021               MOVS     R1,#+0
   \   00000128   03C2               STM      R2!,{R0,R1}
   \   0000012A   083A               SUBS     R2,R2,#+8
  11099                             NET.Status.HostLink=DISCONNECTED;
   \   0000012C   1E48               LDR      R0,??IpTCP_Event_0+0x20  ;; NET + 1
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   0170               STRB     R1,[R0, #+0]
  11100                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000132   1E48               LDR      R0,??IpTCP_Event_0+0x24  ;; NET
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   0170               STRB     R1,[R0, #+0]
  11101                             NET.Status.Timeout=0;
   \   00000138   1D4A               LDR      R2,??IpTCP_Event_0+0x28  ;; NET + 56
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   0021               MOVS     R1,#+0
   \   0000013E   03C2               STM      R2!,{R0,R1}
   \   00000140   083A               SUBS     R2,R2,#+8
  11102                             NET.Status.HttpNextQueryTime=0;
   \   00000142   1C4A               LDR      R2,??IpTCP_Event_0+0x2C  ;; NET + 48
   \   00000144   0020               MOVS     R0,#+0
   \   00000146   0021               MOVS     R1,#+0
   \   00000148   03C2               STM      R2!,{R0,R1}
   \   0000014A   083A               SUBS     R2,R2,#+8
  11103                             NET.Status.FreezTime=0;
   \   0000014C   154A               LDR      R2,??IpTCP_Event_0+0x1C  ;; NET + 64
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   0021               MOVS     R1,#+0
   \   00000152   03C2               STM      R2!,{R0,R1}
   \   00000154   083A               SUBS     R2,R2,#+8
  11104                         
  11105                             NET.WiFi.IpNotAuto=1;    //wy³¹cz auto
   \   00000156   0C48               LDR      R0,??IpTCP_Event_0  ;; NET + 81
   \   00000158   0121               MOVS     R1,#+1
   \   0000015A   0170               STRB     R1,[R0, #+0]
  11106                             //zapis do flash
  11107                              unsigned int Save = __get_interrupt_state();  
   \   0000015C   ........           BL       __iar_get_interrupt_state
   \   00000160   0400               MOVS     R4,R0
  11108                              __disable_interrupt();
   \   00000162   ........           BL       __iar_disable_interrupt
  11109                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IpNotAuto)), (char*) (&(NET.WiFi.IpNotAuto)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000166   0122               MOVS     R2,#+1
   \   00000168   0749               LDR      R1,??IpTCP_Event_0  ;; NET + 81
   \   0000016A   0D48               LDR      R0,??IpTCP_Event_0+0x18  ;; 0x13d8b9
   \   0000016C   ........           BL       FlashWrite
  11110                              __set_interrupt_state(Save);
   \   00000170   2000               MOVS     R0,R4
   \   00000172   ........           BL       __iar_set_interrupt_state
  11111                              __enable_interrupt();
   \   00000176   ........           BL       __iar_enable_interrupt
  11112                              //koniec zapisu do flash
  11113                              
  11114                              
  11115                         MenuPaint();
   \   0000017A   ........           BL       MenuPaint
  11116                       }
  11117                    
  11118                   }
  11119                     
  11120                }//_______________________________________________________________________
   \                     ??IpTCP_Event_2:
   \   0000017E   01B0               ADD      SP,SP,#+4
   \   00000180   30BC               POP      {R4,R5}
   \   00000182   01BC               POP      {R0}
   \   00000184   0047               BX       R0               ;; return
   \   00000186   C046               Nop      
   \                     ??IpTCP_Event_0:
   \   00000188   ........           DC32     NET + 81
   \   0000018C   ........           DC32     Y_down
   \   00000190   ........           DC32     X_down
   \   00000194   ........           DC32     Y_up
   \   00000198   ........           DC32     X_up
   \   0000019C   ........           DC32     MenuLevel
   \   000001A0   B9D81300           DC32     0x13d8b9
   \   000001A4   ........           DC32     NET + 64
   \   000001A8   ........           DC32     NET + 1
   \   000001AC   ........           DC32     NET
   \   000001B0   ........           DC32     NET + 56
   \   000001B4   ........           DC32     NET + 48
   \   000001B8   ........           DC32     CurModifSheet
   \   000001BC   ........           DC32     `?<Constant "Auto IP -off">`
  11121                
  11122                
  11123            
  11124                
  11125          //sprawdza poprawnoæ zapisu IP
  11126          //funkcja czyci wpis je¿eli nie poprawny ze standardem IP       
  11127          //0   -brak wpisu
  11128          //1   -wpis prawid³owy   
  11129          //-1   -wpis niepoprawny       

   \                                 In section Debug.txt, align 4, keep-with-next
  11130          signed char CheckIP(char *Text)
  11131          {
   \                     CheckIP:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   0100               MOVS     R1,R0
  11132            signed char IpOk=1;
   \   00000004   0120               MOVS     R0,#+1
  11133            
  11134            char znak=0;
   \   00000006   0022               MOVS     R2,#+0
  11135            
  11136            if (Text[0]==0) IpOk=0; 
   \   00000008   0B78               LDRB     R3,[R1, #+0]
   \   0000000A   002B               CMP      R3,#+0
   \   0000000C   13D1               BNE      ??CheckIP_0
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   11E0               B        ??CheckIP_0
  11137            while ((znak<12) && (Text[znak]>0))  
  11138            {
  11139               if (((Text[znak]>='0')&&(Text[znak]<='9')) || (Text[znak]=='.'))  
   \                     ??CheckIP_1:
   \   00000012   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000014   120E               LSRS     R2,R2,#+24
   \   00000016   8B5C               LDRB     R3,[R1, R2]
   \   00000018   302B               CMP      R3,#+48
   \   0000001A   04D3               BCC      ??CheckIP_2
   \   0000001C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000001E   120E               LSRS     R2,R2,#+24
   \   00000020   8B5C               LDRB     R3,[R1, R2]
   \   00000022   3A2B               CMP      R3,#+58
   \   00000024   06D3               BCC      ??CheckIP_3
   \                     ??CheckIP_2:
   \   00000026   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000028   120E               LSRS     R2,R2,#+24
   \   0000002A   8B5C               LDRB     R3,[R1, R2]
   \   0000002C   2E2B               CMP      R3,#+46
   \   0000002E   01D0               BEQ      ??CheckIP_3
  11140               {
  11141               }else{
  11142                 IpOk=-1;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   C043               MVNS     R0,R0            ;; #-1
  11143               }
  11144               znak++; 
   \                     ??CheckIP_3:
   \   00000034   521C               ADDS     R2,R2,#+1
  11145            }
   \                     ??CheckIP_0:
   \   00000036   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000038   120E               LSRS     R2,R2,#+24
   \   0000003A   0C2A               CMP      R2,#+12
   \   0000003C   04D2               BCS      ??CheckIP_4
   \   0000003E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000040   120E               LSRS     R2,R2,#+24
   \   00000042   8B5C               LDRB     R3,[R1, R2]
   \   00000044   012B               CMP      R3,#+1
   \   00000046   E4D2               BCS      ??CheckIP_1
  11146            znak=0;
   \                     ??CheckIP_4:
   \   00000048   0022               MOVS     R2,#+0
  11147            if (IpOk<0) while(znak<14) Text[znak++]=0;
   \   0000004A   0006               LSLS     R0,R0,#+24       ;; SignExtS R0,R0,#+24,#+24
   \   0000004C   0016               ASRS     R0,R0,#+24
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   09D5               BPL      ??CheckIP_5
   \   00000052   04E0               B        ??CheckIP_6
   \                     ??CheckIP_7:
   \   00000054   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000056   120E               LSRS     R2,R2,#+24
   \   00000058   0023               MOVS     R3,#+0
   \   0000005A   8B54               STRB     R3,[R1, R2]
   \   0000005C   521C               ADDS     R2,R2,#+1
   \                     ??CheckIP_6:
   \   0000005E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000060   120E               LSRS     R2,R2,#+24
   \   00000062   0E2A               CMP      R2,#+14
   \   00000064   F6D3               BCC      ??CheckIP_7
  11148            return IpOk;
   \                     ??CheckIP_5:
   \   00000066   0006               LSLS     R0,R0,#+24       ;; SignExtS R0,R0,#+24,#+24
   \   00000068   0016               ASRS     R0,R0,#+24
   \   0000006A   01B0               ADD      SP,SP,#+4
   \   0000006C   02BC               POP      {R1}
   \   0000006E   0847               BX       R1               ;; return
  11149          }
  11150                
  11151                
  11152                
  11153                
  11154                

   \                                 In section Debug.txt, align 4, keep-with-next
  11155          void  IpConfig_Paint(void)
  11156                {
   \                     IpConfig_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
  11157                    
  11158                     if (CheckIP(NET.WiFi.IP)<0)
   \   00000002   A548               LDR      R0,??IpConfig_Paint_0  ;; NET + 84
   \   00000004   ........           BL       CheckIP
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   0BD5               BPL      ??IpConfig_Paint_1
  11159                    {
  11160                        if (g_leng==0) MESSAGE(Komentarz2_PL); else  MESSAGE(Komentarz2_En);
   \   0000000C   A348               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   0000000E   0068               LDR      R0,[R0, #+0]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   03D1               BNE      ??IpConfig_Paint_2
   \   00000014   A248               LDR      R0,??IpConfig_Paint_0+0x8  ;; `?<Constant "Zly adres IP">`
   \   00000016   ........           BL       MESSAGE
   \   0000001A   3AE1               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_2:
   \   0000001C   A148               LDR      R0,??IpConfig_Paint_0+0xC  ;; `?<Constant "Wrong IP adress">`
   \   0000001E   ........           BL       MESSAGE
   \   00000022   36E1               B        ??IpConfig_Paint_3
  11161                    }else if (CheckIP(NET.WiFi.Mask)<0)
   \                     ??IpConfig_Paint_1:
   \   00000024   A048               LDR      R0,??IpConfig_Paint_0+0x10  ;; NET + 99
   \   00000026   ........           BL       CheckIP
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   0BD5               BPL      ??IpConfig_Paint_4
  11162                    {
  11163                        if (g_leng==0) MESSAGE(Komentarz3_PL); else  MESSAGE(Komentarz3_En);
   \   0000002E   9B48               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000030   0068               LDR      R0,[R0, #+0]
   \   00000032   0028               CMP      R0,#+0
   \   00000034   03D1               BNE      ??IpConfig_Paint_5
   \   00000036   9D48               LDR      R0,??IpConfig_Paint_0+0x14  ;; `?<Constant "Zly adres maski ">`
   \   00000038   ........           BL       MESSAGE
   \   0000003C   29E1               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_5:
   \   0000003E   9C48               LDR      R0,??IpConfig_Paint_0+0x18  ;; `?<Constant "Wrong mask adress">`
   \   00000040   ........           BL       MESSAGE
   \   00000044   25E1               B        ??IpConfig_Paint_3
  11164                    }else if (CheckIP(NET.WiFi.Gate)<0)
   \                     ??IpConfig_Paint_4:
   \   00000046   9B48               LDR      R0,??IpConfig_Paint_0+0x1C  ;; NET + 114
   \   00000048   ........           BL       CheckIP
   \   0000004C   0028               CMP      R0,#+0
   \   0000004E   0BD5               BPL      ??IpConfig_Paint_6
  11165                    {
  11166                        if (g_leng==0) MESSAGE(Komentarz4_PL); else  MESSAGE(Komentarz4_En);
   \   00000050   9248               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000052   0068               LDR      R0,[R0, #+0]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   03D1               BNE      ??IpConfig_Paint_7
   \   00000058   9748               LDR      R0,??IpConfig_Paint_0+0x20  ;; `?<Constant "Zly adres bramy ">`
   \   0000005A   ........           BL       MESSAGE
   \   0000005E   18E1               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_7:
   \   00000060   9648               LDR      R0,??IpConfig_Paint_0+0x24  ;; `?<Constant "Wrong gateway adress">`
   \   00000062   ........           BL       MESSAGE
   \   00000066   14E1               B        ??IpConfig_Paint_3
  11167                    }else{           
  11168          
  11169          
  11170                  
  11171                    List_Paint("IP/TCP",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??IpConfig_Paint_6:
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0020               MOVS     R0,#+0
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   90A0               ADR      R0,??IpConfig_Paint_0+0x28  ;; 0x20, 0x00, 0x00, 0x00
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   0321               MOVS     R1,#+3
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   0023               MOVS     R3,#+0
   \   00000088   6C22               MOVS     R2,#+108
   \   0000008A   0121               MOVS     R1,#+1
   \   0000008C   8D48               LDR      R0,??IpConfig_Paint_0+0x2C  ;; `?<Constant "IP/TCP">`
   \   0000008E   ........           BL       List_Paint
   \   00000092   0AB0               ADD      SP,SP,#+40
  11172          
  11173                    char pY=72;    //pozycja dolna
   \   00000094   4824               MOVS     R4,#+72
  11174                    Label(Speech[g_leng].Adres_IP,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000096   82B0               SUB      SP,SP,#+8
   \   00000098   0120               MOVS     R0,#+1
   \   0000009A   0090               STR      R0,[SP, #+0]
   \   0000009C   7F21               MOVS     R1,#+127
   \   0000009E   0120               MOVS     R0,#+1
   \   000000A0   03B4               PUSH     {R0,R1}
   \   000000A2   3E21               MOVS     R1,#+62
   \   000000A4   0F20               MOVS     R0,#+15
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000AA   240E               LSRS     R4,R4,#+24
   \   000000AC   2300               MOVS     R3,R4
   \   000000AE   1933               ADDS     R3,R3,#+25
   \   000000B0   0122               MOVS     R2,#+1
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   8448               LDR      R0,??IpConfig_Paint_0+0x30  ;; 0x9ab
   \   000000B6   794D               LDR      R5,??IpConfig_Paint_0+0x4  ;; g_leng
   \   000000B8   2D68               LDR      R5,[R5, #+0]
   \   000000BA   844E               LDR      R6,??IpConfig_Paint_0+0x34  ;; 0xa7d
   \   000000BC   7543               MULS     R5,R6,R5
   \   000000BE   844E               LDR      R6,??IpConfig_Paint_0+0x38  ;; Speech
   \   000000C0   7519               ADDS     R5,R6,R5
   \   000000C2   2818               ADDS     R0,R5,R0
   \   000000C4   ........           BL       Label
   \   000000C8   06B0               ADD      SP,SP,#+24
  11175                    Label(".................................",0,2,pY+14,25,59,1,127,0);
   \   000000CA   82B0               SUB      SP,SP,#+8
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   0090               STR      R0,[SP, #+0]
   \   000000D0   7F21               MOVS     R1,#+127
   \   000000D2   0120               MOVS     R0,#+1
   \   000000D4   03B4               PUSH     {R0,R1}
   \   000000D6   3B21               MOVS     R1,#+59
   \   000000D8   1920               MOVS     R0,#+25
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000DE   240E               LSRS     R4,R4,#+24
   \   000000E0   2300               MOVS     R3,R4
   \   000000E2   0E33               ADDS     R3,R3,#+14
   \   000000E4   0222               MOVS     R2,#+2
   \   000000E6   0021               MOVS     R1,#+0
   \   000000E8   7A48               LDR      R0,??IpConfig_Paint_0+0x3C  ;; `?<Constant "........................">`
   \   000000EA   ........           BL       Label
   \   000000EE   06B0               ADD      SP,SP,#+24
  11176                    
  11177                    Label(NET.WiFi.IP,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   7F21               MOVS     R1,#+127
   \   000000F8   0120               MOVS     R0,#+1
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   3B21               MOVS     R1,#+59
   \   000000FE   0F20               MOVS     R0,#+15
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000104   240E               LSRS     R4,R4,#+24
   \   00000106   2300               MOVS     R3,R4
   \   00000108   1033               ADDS     R3,R3,#+16
   \   0000010A   0222               MOVS     R2,#+2
   \   0000010C   0021               MOVS     R1,#+0
   \   0000010E   6248               LDR      R0,??IpConfig_Paint_0  ;; NET + 84
   \   00000110   ........           BL       Label
   \   00000114   06B0               ADD      SP,SP,#+24
  11178                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000116   82B0               SUB      SP,SP,#+8
   \   00000118   0D20               MOVS     R0,#+13
   \   0000011A   0090               STR      R0,[SP, #+0]
   \   0000011C   2223               MOVS     R3,#+34
   \   0000011E   641C               ADDS     R4,R4,#+1
   \   00000120   2200               MOVS     R2,R4
   \   00000122   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000124   120E               LSRS     R2,R2,#+24
   \   00000126   0F21               MOVS     R1,#+15
   \   00000128   6B48               LDR      R0,??IpConfig_Paint_0+0x40  ;; 0x915
   \   0000012A   5C4C               LDR      R4,??IpConfig_Paint_0+0x4  ;; g_leng
   \   0000012C   2468               LDR      R4,[R4, #+0]
   \   0000012E   674D               LDR      R5,??IpConfig_Paint_0+0x34  ;; 0xa7d
   \   00000130   6C43               MULS     R4,R5,R4
   \   00000132   674D               LDR      R5,??IpConfig_Paint_0+0x38  ;; Speech
   \   00000134   2C19               ADDS     R4,R5,R4
   \   00000136   2018               ADDS     R0,R4,R0
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
  11179                    
  11180                    pY=37;    
   \   0000013E   2524               MOVS     R4,#+37
  11181                    Label(Speech[g_leng].Maska,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0120               MOVS     R0,#+1
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   7F21               MOVS     R1,#+127
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   3E21               MOVS     R1,#+62
   \   0000014E   0F20               MOVS     R0,#+15
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000154   240E               LSRS     R4,R4,#+24
   \   00000156   2300               MOVS     R3,R4
   \   00000158   1933               ADDS     R3,R3,#+25
   \   0000015A   0122               MOVS     R2,#+1
   \   0000015C   0021               MOVS     R1,#+0
   \   0000015E   5F48               LDR      R0,??IpConfig_Paint_0+0x44  ;; 0x9ba
   \   00000160   4E4D               LDR      R5,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000162   2D68               LDR      R5,[R5, #+0]
   \   00000164   594E               LDR      R6,??IpConfig_Paint_0+0x34  ;; 0xa7d
   \   00000166   7543               MULS     R5,R6,R5
   \   00000168   594E               LDR      R6,??IpConfig_Paint_0+0x38  ;; Speech
   \   0000016A   7519               ADDS     R5,R6,R5
   \   0000016C   2818               ADDS     R0,R5,R0
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
  11182                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   00000174   82B0               SUB      SP,SP,#+8
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   0090               STR      R0,[SP, #+0]
   \   0000017A   7F21               MOVS     R1,#+127
   \   0000017C   0120               MOVS     R0,#+1
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   3B21               MOVS     R1,#+59
   \   00000182   1920               MOVS     R0,#+25
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000188   240E               LSRS     R4,R4,#+24
   \   0000018A   2300               MOVS     R3,R4
   \   0000018C   0E33               ADDS     R3,R3,#+14
   \   0000018E   0222               MOVS     R2,#+2
   \   00000190   0021               MOVS     R1,#+0
   \   00000192   5348               LDR      R0,??IpConfig_Paint_0+0x48  ;; `?<Constant "........................">_1`
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
  11183                    Label(NET.WiFi.Mask,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000019A   82B0               SUB      SP,SP,#+8
   \   0000019C   0020               MOVS     R0,#+0
   \   0000019E   0090               STR      R0,[SP, #+0]
   \   000001A0   7F21               MOVS     R1,#+127
   \   000001A2   0120               MOVS     R0,#+1
   \   000001A4   03B4               PUSH     {R0,R1}
   \   000001A6   3B21               MOVS     R1,#+59
   \   000001A8   0F20               MOVS     R0,#+15
   \   000001AA   03B4               PUSH     {R0,R1}
   \   000001AC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001AE   240E               LSRS     R4,R4,#+24
   \   000001B0   2300               MOVS     R3,R4
   \   000001B2   1033               ADDS     R3,R3,#+16
   \   000001B4   0222               MOVS     R2,#+2
   \   000001B6   0021               MOVS     R1,#+0
   \   000001B8   3B48               LDR      R0,??IpConfig_Paint_0+0x10  ;; NET + 99
   \   000001BA   ........           BL       Label
   \   000001BE   06B0               ADD      SP,SP,#+24
  11184                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   0D20               MOVS     R0,#+13
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   2223               MOVS     R3,#+34
   \   000001C8   641C               ADDS     R4,R4,#+1
   \   000001CA   2200               MOVS     R2,R4
   \   000001CC   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001CE   120E               LSRS     R2,R2,#+24
   \   000001D0   0F21               MOVS     R1,#+15
   \   000001D2   4148               LDR      R0,??IpConfig_Paint_0+0x40  ;; 0x915
   \   000001D4   314C               LDR      R4,??IpConfig_Paint_0+0x4  ;; g_leng
   \   000001D6   2468               LDR      R4,[R4, #+0]
   \   000001D8   3C4D               LDR      R5,??IpConfig_Paint_0+0x34  ;; 0xa7d
   \   000001DA   6C43               MULS     R4,R5,R4
   \   000001DC   3C4D               LDR      R5,??IpConfig_Paint_0+0x38  ;; Speech
   \   000001DE   2C19               ADDS     R4,R5,R4
   \   000001E0   2018               ADDS     R0,R4,R0
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
  11185                    
  11186                    pY=2;    
   \   000001E8   0224               MOVS     R4,#+2
  11187                    Label(Speech[g_leng].Brama,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0120               MOVS     R0,#+1
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   7F21               MOVS     R1,#+127
   \   000001F2   0120               MOVS     R0,#+1
   \   000001F4   03B4               PUSH     {R0,R1}
   \   000001F6   3E21               MOVS     R1,#+62
   \   000001F8   0F20               MOVS     R0,#+15
   \   000001FA   03B4               PUSH     {R0,R1}
   \   000001FC   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000001FE   240E               LSRS     R4,R4,#+24
   \   00000200   2300               MOVS     R3,R4
   \   00000202   1933               ADDS     R3,R3,#+25
   \   00000204   0122               MOVS     R2,#+1
   \   00000206   0021               MOVS     R1,#+0
   \   00000208   3648               LDR      R0,??IpConfig_Paint_0+0x4C  ;; 0x9c9
   \   0000020A   244D               LDR      R5,??IpConfig_Paint_0+0x4  ;; g_leng
   \   0000020C   2D68               LDR      R5,[R5, #+0]
   \   0000020E   2F4E               LDR      R6,??IpConfig_Paint_0+0x34  ;; 0xa7d
   \   00000210   7543               MULS     R5,R6,R5
   \   00000212   2F4E               LDR      R6,??IpConfig_Paint_0+0x38  ;; Speech
   \   00000214   7519               ADDS     R5,R6,R5
   \   00000216   2818               ADDS     R0,R5,R0
   \   00000218   ........           BL       Label
   \   0000021C   06B0               ADD      SP,SP,#+24
  11188                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   0000021E   82B0               SUB      SP,SP,#+8
   \   00000220   0020               MOVS     R0,#+0
   \   00000222   0090               STR      R0,[SP, #+0]
   \   00000224   7F21               MOVS     R1,#+127
   \   00000226   0120               MOVS     R0,#+1
   \   00000228   03B4               PUSH     {R0,R1}
   \   0000022A   3B21               MOVS     R1,#+59
   \   0000022C   1920               MOVS     R0,#+25
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000232   240E               LSRS     R4,R4,#+24
   \   00000234   2300               MOVS     R3,R4
   \   00000236   0E33               ADDS     R3,R3,#+14
   \   00000238   0222               MOVS     R2,#+2
   \   0000023A   0021               MOVS     R1,#+0
   \   0000023C   2848               LDR      R0,??IpConfig_Paint_0+0x48  ;; `?<Constant "........................">_1`
   \   0000023E   ........           BL       Label
   \   00000242   06B0               ADD      SP,SP,#+24
  11189                    Label(NET.WiFi.Gate,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000244   82B0               SUB      SP,SP,#+8
   \   00000246   0020               MOVS     R0,#+0
   \   00000248   0090               STR      R0,[SP, #+0]
   \   0000024A   7F21               MOVS     R1,#+127
   \   0000024C   0120               MOVS     R0,#+1
   \   0000024E   03B4               PUSH     {R0,R1}
   \   00000250   3B21               MOVS     R1,#+59
   \   00000252   0F20               MOVS     R0,#+15
   \   00000254   03B4               PUSH     {R0,R1}
   \   00000256   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000258   240E               LSRS     R4,R4,#+24
   \   0000025A   2300               MOVS     R3,R4
   \   0000025C   1033               ADDS     R3,R3,#+16
   \   0000025E   0222               MOVS     R2,#+2
   \   00000260   0021               MOVS     R1,#+0
   \   00000262   1448               LDR      R0,??IpConfig_Paint_0+0x1C  ;; NET + 114
   \   00000264   ........           BL       Label
   \   00000268   06B0               ADD      SP,SP,#+24
  11190                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000026A   82B0               SUB      SP,SP,#+8
   \   0000026C   0D20               MOVS     R0,#+13
   \   0000026E   0090               STR      R0,[SP, #+0]
   \   00000270   2223               MOVS     R3,#+34
   \   00000272   641C               ADDS     R4,R4,#+1
   \   00000274   2200               MOVS     R2,R4
   \   00000276   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000278   120E               LSRS     R2,R2,#+24
   \   0000027A   0F21               MOVS     R1,#+15
   \   0000027C   1648               LDR      R0,??IpConfig_Paint_0+0x40  ;; 0x915
   \   0000027E   074C               LDR      R4,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000280   2468               LDR      R4,[R4, #+0]
   \   00000282   124D               LDR      R5,??IpConfig_Paint_0+0x34  ;; 0xa7d
   \   00000284   6C43               MULS     R4,R5,R4
   \   00000286   124D               LDR      R5,??IpConfig_Paint_0+0x38  ;; Speech
   \   00000288   2C19               ADDS     R4,R5,R4
   \   0000028A   2018               ADDS     R0,R4,R0
   \   0000028C   ........           BL       Button
   \   00000290   02B0               ADD      SP,SP,#+8
  11191          
  11192                    
  11193                    }
  11194                    
  11195                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??IpConfig_Paint_3:
   \   00000292   70BC               POP      {R4-R6}
   \   00000294   01BC               POP      {R0}
   \   00000296   0047               BX       R0               ;; return
   \                     ??IpConfig_Paint_0:
   \   00000298   ........           DC32     NET + 84
   \   0000029C   ........           DC32     g_leng
   \   000002A0   ........           DC32     `?<Constant "Zly adres IP">`
   \   000002A4   ........           DC32     `?<Constant "Wrong IP adress">`
   \   000002A8   ........           DC32     NET + 99
   \   000002AC   ........           DC32     `?<Constant "Zly adres maski ">`
   \   000002B0   ........           DC32     `?<Constant "Wrong mask adress">`
   \   000002B4   ........           DC32     NET + 114
   \   000002B8   ........           DC32     `?<Constant "Zly adres bramy ">`
   \   000002BC   ........           DC32     `?<Constant "Wrong gateway adress">`
   \   000002C0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002C4   ........           DC32     `?<Constant "IP/TCP">`
   \   000002C8   AB090000           DC32     0x9ab
   \   000002CC   7D0A0000           DC32     0xa7d
   \   000002D0   ........           DC32     Speech
   \   000002D4   ........           DC32     `?<Constant "........................">`
   \   000002D8   15090000           DC32     0x915
   \   000002DC   BA090000           DC32     0x9ba
   \   000002E0   ........           DC32     `?<Constant "........................">_1`
   \   000002E4   C9090000           DC32     0x9c9
  11196          
  11197          
  11198             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11199                void  IpConfig_Event(void)
  11200                {
   \                     IpConfig_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  11201                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   8248               LDR      R0,??IpConfig_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   8148               LDR      R0,??IpConfig_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   8148               LDR      R0,??IpConfig_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8048               LDR      R0,??IpConfig_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   3DD5               BPL      ??IpConfig_Event_1
  11202                  {
  11203                    //zapis do flash
  11204                            unsigned int Save = __get_interrupt_state();  
   \   00000030   ........           BL       __iar_get_interrupt_state
   \   00000034   0400               MOVS     R4,R0
  11205                            __disable_interrupt();
   \   00000036   ........           BL       __iar_disable_interrupt
  11206                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IP)), (char*) (&(NET.WiFi.IP)),15);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000003A   0F22               MOVS     R2,#+15
   \   0000003C   7A49               LDR      R1,??IpConfig_Event_0+0x10  ;; NET + 84
   \   0000003E   7B48               LDR      R0,??IpConfig_Event_0+0x14  ;; 0x13d8bc
   \   00000040   ........           BL       FlashWrite
  11207                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Mask)), (char*) (&(NET.WiFi.Mask)), 15);
   \   00000044   0F22               MOVS     R2,#+15
   \   00000046   7A49               LDR      R1,??IpConfig_Event_0+0x18  ;; NET + 99
   \   00000048   7A48               LDR      R0,??IpConfig_Event_0+0x1C  ;; 0x13d8cb
   \   0000004A   ........           BL       FlashWrite
  11208                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Gate)), (char*) (&(NET.WiFi.Gate)), 15);
   \   0000004E   0F22               MOVS     R2,#+15
   \   00000050   7949               LDR      R1,??IpConfig_Event_0+0x20  ;; NET + 114
   \   00000052   7A48               LDR      R0,??IpConfig_Event_0+0x24  ;; 0x13d8da
   \   00000054   ........           BL       FlashWrite
  11209                            __set_interrupt_state(Save);
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   ........           BL       __iar_set_interrupt_state
  11210                            __enable_interrupt(); 
   \   0000005E   ........           BL       __iar_enable_interrupt
  11211                     //koniec zapisu do flash
  11212                    
  11213                     NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000062   774A               LDR      R2,??IpConfig_Event_0+0x28  ;; NET + 64
   \   00000064   7748               LDR      R0,??IpConfig_Event_0+0x2C  ;; g_counter
   \   00000066   03C8               LDM      R0!,{R0,R1}
   \   00000068   0023               MOVS     R3,#+0
   \   0000006A   3230               ADDS     R0,R0,#+50
   \   0000006C   5941               ADCS     R1,R1,R3
   \   0000006E   03C2               STM      R2!,{R0,R1}
   \   00000070   083A               SUBS     R2,R2,#+8
  11214                       NET.Status.HostLink=DISCONNECTED;
   \   00000072   7548               LDR      R0,??IpConfig_Event_0+0x30  ;; NET + 1
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   0170               STRB     R1,[R0, #+0]
  11215                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000078   7448               LDR      R0,??IpConfig_Event_0+0x34  ;; NET
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   0170               STRB     R1,[R0, #+0]
  11216                       NET.Status.Timeout=0;
   \   0000007E   744A               LDR      R2,??IpConfig_Event_0+0x38  ;; NET + 56
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   03C2               STM      R2!,{R0,R1}
   \   00000086   083A               SUBS     R2,R2,#+8
  11217                       NET.Status.HttpNextQueryTime=0;
   \   00000088   724A               LDR      R2,??IpConfig_Event_0+0x3C  ;; NET + 48
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   0021               MOVS     R1,#+0
   \   0000008E   03C2               STM      R2!,{R0,R1}
   \   00000090   083A               SUBS     R2,R2,#+8
  11218                       NET.Status.FreezTime=0;        
   \   00000092   6B4A               LDR      R2,??IpConfig_Event_0+0x28  ;; NET + 64
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   0021               MOVS     R1,#+0
   \   00000098   03C2               STM      R2!,{R0,R1}
   \   0000009A   083A               SUBS     R2,R2,#+8
  11219                            
  11220                    MenuLevel=(MenuLevel/10);
   \   0000009C   6E48               LDR      R0,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   0000009E   0068               LDR      R0,[R0, #+0]
   \   000000A0   0A21               MOVS     R1,#+10
   \   000000A2   ........           BL       __aeabi_idivmod
   \   000000A6   6C49               LDR      R1,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   000000A8   0860               STR      R0,[R1, #+0]
   \   000000AA   AFE0               B        ??IpConfig_Event_2
  11221                    
  11222                     
  11223                    
  11224                  } 
  11225                   else if ((Y_down<112) || (Y_up<112))
   \                     ??IpConfig_Event_1:
   \   000000AC   5A48               LDR      R0,??IpConfig_Event_0  ;; Y_down
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   405E               LDRSH    R0,[R0, R1]
   \   000000B2   7028               CMP      R0,#+112
   \   000000B4   05DB               BLT      ??IpConfig_Event_3
   \   000000B6   5A48               LDR      R0,??IpConfig_Event_0+0x8  ;; Y_up
   \   000000B8   0021               MOVS     R1,#+0
   \   000000BA   405E               LDRSH    R0,[R0, R1]
   \   000000BC   7028               CMP      R0,#+112
   \   000000BE   00DB               BLT      .+4
   \   000000C0   A4E0               B        ??IpConfig_Event_2
  11226                  {
  11227                      char pY=72; 
   \                     ??IpConfig_Event_3:
   \   000000C2   4822               MOVS     R2,#+72
  11228                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0D20               MOVS     R0,#+13
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   2223               MOVS     R3,#+34
   \   000000CC   521C               ADDS     R2,R2,#+1
   \   000000CE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000D0   120E               LSRS     R2,R2,#+24
   \   000000D2   0F21               MOVS     R1,#+15
   \   000000D4   6148               LDR      R0,??IpConfig_Event_0+0x44  ;; 0x915
   \   000000D6   624C               LDR      R4,??IpConfig_Event_0+0x48  ;; g_leng
   \   000000D8   2468               LDR      R4,[R4, #+0]
   \   000000DA   624D               LDR      R5,??IpConfig_Event_0+0x4C  ;; 0xa7d
   \   000000DC   6C43               MULS     R4,R5,R4
   \   000000DE   624D               LDR      R5,??IpConfig_Event_0+0x50  ;; Speech
   \   000000E0   2C19               ADDS     R4,R5,R4
   \   000000E2   2018               ADDS     R0,R4,R0
   \   000000E4   ........           BL       Button
   \   000000E8   02B0               ADD      SP,SP,#+8
   \   000000EA   0128               CMP      R0,#+1
   \   000000EC   20D1               BNE      ??IpConfig_Event_4
  11229                      {
  11230                        TextToChange=NET.WiFi.IP;
   \   000000EE   5F48               LDR      R0,??IpConfig_Event_0+0x54  ;; TextToChange
   \   000000F0   4D49               LDR      R1,??IpConfig_Event_0+0x10  ;; NET + 84
   \   000000F2   0160               STR      R1,[R0, #+0]
  11231                        TextToChangeLength=15;
   \   000000F4   5E48               LDR      R0,??IpConfig_Event_0+0x58  ;; TextToChangeLength
   \   000000F6   0F21               MOVS     R1,#+15
   \   000000F8   0170               STRB     R1,[R0, #+0]
  11232                        TextToChangeMaxPixSize=100;
   \   000000FA   5E48               LDR      R0,??IpConfig_Event_0+0x5C  ;; TextToChangeMaxPixSize
   \   000000FC   6421               MOVS     R1,#+100
   \   000000FE   0170               STRB     R1,[R0, #+0]
  11233                        AlfaType=2;
   \   00000100   5D48               LDR      R0,??IpConfig_Event_0+0x60  ;; AlfaType
   \   00000102   0221               MOVS     R1,#+2
   \   00000104   0170               STRB     R1,[R0, #+0]
  11234                        char znak=0;
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   07E0               B        ??IpConfig_Event_5
  11235                        while(znak<14) NET.WiFi.IP[znak++]=0;
   \                     ??IpConfig_Event_6:
   \   0000010A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000010C   000E               LSRS     R0,R0,#+24
   \   0000010E   4F49               LDR      R1,??IpConfig_Event_0+0x34  ;; NET
   \   00000110   0918               ADDS     R1,R1,R0
   \   00000112   5431               ADDS     R1,R1,#+84
   \   00000114   0022               MOVS     R2,#+0
   \   00000116   0A70               STRB     R2,[R1, #+0]
   \   00000118   401C               ADDS     R0,R0,#+1
   \                     ??IpConfig_Event_5:
   \   0000011A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000011C   000E               LSRS     R0,R0,#+24
   \   0000011E   0E28               CMP      R0,#+14
   \   00000120   F3D3               BCC      ??IpConfig_Event_6
  11236                        MenuLevel=(MenuLevel*10+1);
   \   00000122   4D48               LDR      R0,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   00000124   4C49               LDR      R1,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   00000126   0968               LDR      R1,[R1, #+0]
   \   00000128   0A22               MOVS     R2,#+10
   \   0000012A   5143               MULS     R1,R2,R1
   \   0000012C   491C               ADDS     R1,R1,#+1
   \   0000012E   0160               STR      R1,[R0, #+0]
  11237                        
  11238                       
  11239                      }
  11240                      pY=37; 
   \                     ??IpConfig_Event_4:
   \   00000130   2522               MOVS     R2,#+37
  11241                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   00000132   82B0               SUB      SP,SP,#+8
   \   00000134   0D20               MOVS     R0,#+13
   \   00000136   0090               STR      R0,[SP, #+0]
   \   00000138   2223               MOVS     R3,#+34
   \   0000013A   521C               ADDS     R2,R2,#+1
   \   0000013C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000013E   120E               LSRS     R2,R2,#+24
   \   00000140   0F21               MOVS     R1,#+15
   \   00000142   4648               LDR      R0,??IpConfig_Event_0+0x44  ;; 0x915
   \   00000144   464C               LDR      R4,??IpConfig_Event_0+0x48  ;; g_leng
   \   00000146   2468               LDR      R4,[R4, #+0]
   \   00000148   464D               LDR      R5,??IpConfig_Event_0+0x4C  ;; 0xa7d
   \   0000014A   6C43               MULS     R4,R5,R4
   \   0000014C   464D               LDR      R5,??IpConfig_Event_0+0x50  ;; Speech
   \   0000014E   2C19               ADDS     R4,R5,R4
   \   00000150   2018               ADDS     R0,R4,R0
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   20D1               BNE      ??IpConfig_Event_7
  11242                      {
  11243                        TextToChange=NET.WiFi.Mask;
   \   0000015C   4348               LDR      R0,??IpConfig_Event_0+0x54  ;; TextToChange
   \   0000015E   3449               LDR      R1,??IpConfig_Event_0+0x18  ;; NET + 99
   \   00000160   0160               STR      R1,[R0, #+0]
  11244                        TextToChangeLength=15;        
   \   00000162   4348               LDR      R0,??IpConfig_Event_0+0x58  ;; TextToChangeLength
   \   00000164   0F21               MOVS     R1,#+15
   \   00000166   0170               STRB     R1,[R0, #+0]
  11245                        TextToChangeMaxPixSize=100;
   \   00000168   4248               LDR      R0,??IpConfig_Event_0+0x5C  ;; TextToChangeMaxPixSize
   \   0000016A   6421               MOVS     R1,#+100
   \   0000016C   0170               STRB     R1,[R0, #+0]
  11246                        AlfaType=2;
   \   0000016E   4248               LDR      R0,??IpConfig_Event_0+0x60  ;; AlfaType
   \   00000170   0221               MOVS     R1,#+2
   \   00000172   0170               STRB     R1,[R0, #+0]
  11247                        char znak=0;
   \   00000174   0020               MOVS     R0,#+0
   \   00000176   07E0               B        ??IpConfig_Event_8
  11248                        while(znak<14) NET.WiFi.Mask[znak++]=0;
   \                     ??IpConfig_Event_9:
   \   00000178   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000017A   000E               LSRS     R0,R0,#+24
   \   0000017C   3349               LDR      R1,??IpConfig_Event_0+0x34  ;; NET
   \   0000017E   0918               ADDS     R1,R1,R0
   \   00000180   6331               ADDS     R1,R1,#+99
   \   00000182   0022               MOVS     R2,#+0
   \   00000184   0A70               STRB     R2,[R1, #+0]
   \   00000186   401C               ADDS     R0,R0,#+1
   \                     ??IpConfig_Event_8:
   \   00000188   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000018A   000E               LSRS     R0,R0,#+24
   \   0000018C   0E28               CMP      R0,#+14
   \   0000018E   F3D3               BCC      ??IpConfig_Event_9
  11249                        MenuLevel=(MenuLevel*10+1);
   \   00000190   3148               LDR      R0,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   00000192   3149               LDR      R1,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   00000194   0968               LDR      R1,[R1, #+0]
   \   00000196   0A22               MOVS     R2,#+10
   \   00000198   5143               MULS     R1,R2,R1
   \   0000019A   491C               ADDS     R1,R1,#+1
   \   0000019C   0160               STR      R1,[R0, #+0]
  11250                        
  11251                      }
  11252                      pY=2; 
   \                     ??IpConfig_Event_7:
   \   0000019E   0222               MOVS     R2,#+2
  11253                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   000001A0   82B0               SUB      SP,SP,#+8
   \   000001A2   0D20               MOVS     R0,#+13
   \   000001A4   0090               STR      R0,[SP, #+0]
   \   000001A6   2223               MOVS     R3,#+34
   \   000001A8   521C               ADDS     R2,R2,#+1
   \   000001AA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001AC   120E               LSRS     R2,R2,#+24
   \   000001AE   0F21               MOVS     R1,#+15
   \   000001B0   2A48               LDR      R0,??IpConfig_Event_0+0x44  ;; 0x915
   \   000001B2   2B4C               LDR      R4,??IpConfig_Event_0+0x48  ;; g_leng
   \   000001B4   2468               LDR      R4,[R4, #+0]
   \   000001B6   2B4D               LDR      R5,??IpConfig_Event_0+0x4C  ;; 0xa7d
   \   000001B8   6C43               MULS     R4,R5,R4
   \   000001BA   2B4D               LDR      R5,??IpConfig_Event_0+0x50  ;; Speech
   \   000001BC   2C19               ADDS     R4,R5,R4
   \   000001BE   2018               ADDS     R0,R4,R0
   \   000001C0   ........           BL       Button
   \   000001C4   02B0               ADD      SP,SP,#+8
   \   000001C6   0128               CMP      R0,#+1
   \   000001C8   20D1               BNE      ??IpConfig_Event_2
  11254                      {
  11255                        TextToChange=NET.WiFi.Gate;
   \   000001CA   2848               LDR      R0,??IpConfig_Event_0+0x54  ;; TextToChange
   \   000001CC   1A49               LDR      R1,??IpConfig_Event_0+0x20  ;; NET + 114
   \   000001CE   0160               STR      R1,[R0, #+0]
  11256                        TextToChangeLength=15;
   \   000001D0   2748               LDR      R0,??IpConfig_Event_0+0x58  ;; TextToChangeLength
   \   000001D2   0F21               MOVS     R1,#+15
   \   000001D4   0170               STRB     R1,[R0, #+0]
  11257                        TextToChangeMaxPixSize=100;
   \   000001D6   2748               LDR      R0,??IpConfig_Event_0+0x5C  ;; TextToChangeMaxPixSize
   \   000001D8   6421               MOVS     R1,#+100
   \   000001DA   0170               STRB     R1,[R0, #+0]
  11258                        AlfaType=2;
   \   000001DC   2648               LDR      R0,??IpConfig_Event_0+0x60  ;; AlfaType
   \   000001DE   0221               MOVS     R1,#+2
   \   000001E0   0170               STRB     R1,[R0, #+0]
  11259                        char znak=0;
   \   000001E2   0020               MOVS     R0,#+0
   \   000001E4   07E0               B        ??IpConfig_Event_10
  11260                        while(znak<14) NET.WiFi.Gate[znak++]=0;
   \                     ??IpConfig_Event_11:
   \   000001E6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001E8   000E               LSRS     R0,R0,#+24
   \   000001EA   1849               LDR      R1,??IpConfig_Event_0+0x34  ;; NET
   \   000001EC   0918               ADDS     R1,R1,R0
   \   000001EE   7231               ADDS     R1,R1,#+114
   \   000001F0   0022               MOVS     R2,#+0
   \   000001F2   0A70               STRB     R2,[R1, #+0]
   \   000001F4   401C               ADDS     R0,R0,#+1
   \                     ??IpConfig_Event_10:
   \   000001F6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001F8   000E               LSRS     R0,R0,#+24
   \   000001FA   0E28               CMP      R0,#+14
   \   000001FC   F3D3               BCC      ??IpConfig_Event_11
  11261                        MenuLevel=(MenuLevel*10+1);
   \   000001FE   1648               LDR      R0,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   00000200   1549               LDR      R1,??IpConfig_Event_0+0x40  ;; MenuLevel
   \   00000202   0968               LDR      R1,[R1, #+0]
   \   00000204   0A22               MOVS     R2,#+10
   \   00000206   5143               MULS     R1,R2,R1
   \   00000208   491C               ADDS     R1,R1,#+1
   \   0000020A   0160               STR      R1,[R0, #+0]
  11262                        
  11263                      }
  11264                      
  11265                      
  11266                      
  11267          
  11268                    
  11269                  }
  11270                   MenuPaint();
   \                     ??IpConfig_Event_2:
   \   0000020C   ........           BL       MenuPaint
  11271                    
  11272                
  11273                }//_______________________________________________________________________
   \   00000210   01B0               ADD      SP,SP,#+4
   \   00000212   30BC               POP      {R4,R5}
   \   00000214   01BC               POP      {R0}
   \   00000216   0047               BX       R0               ;; return
   \                     ??IpConfig_Event_0:
   \   00000218   ........           DC32     Y_down
   \   0000021C   ........           DC32     X_down
   \   00000220   ........           DC32     Y_up
   \   00000224   ........           DC32     X_up
   \   00000228   ........           DC32     NET + 84
   \   0000022C   BCD81300           DC32     0x13d8bc
   \   00000230   ........           DC32     NET + 99
   \   00000234   CBD81300           DC32     0x13d8cb
   \   00000238   ........           DC32     NET + 114
   \   0000023C   DAD81300           DC32     0x13d8da
   \   00000240   ........           DC32     NET + 64
   \   00000244   ........           DC32     g_counter
   \   00000248   ........           DC32     NET + 1
   \   0000024C   ........           DC32     NET
   \   00000250   ........           DC32     NET + 56
   \   00000254   ........           DC32     NET + 48
   \   00000258   ........           DC32     MenuLevel
   \   0000025C   15090000           DC32     0x915
   \   00000260   ........           DC32     g_leng
   \   00000264   7D0A0000           DC32     0xa7d
   \   00000268   ........           DC32     Speech
   \   0000026C   ........           DC32     TextToChange
   \   00000270   ........           DC32     TextToChangeLength
   \   00000274   ........           DC32     TextToChangeMaxPixSize
   \   00000278   ........           DC32     AlfaType
  11274              
  11275               
  11276          
  11277                

   \                                 In section .bss, align 1
  11278                char TransferInfo=0;
   \                     TransferInfo:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
  11279                void  NetInfo_Paint(void)
  11280                {
   \                     NetInfo_Paint:
   \   00000000   7FB5               PUSH     {R0-R6,LR}
  11281                    char txt[14];
  11282                    
  11283                    List_Paint(Speech[g_leng].Status,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   84A0               ADR      R0,??NetInfo_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   8148               LDR      R0,??NetInfo_Paint_0+0x4  ;; 0xa14
   \   00000028   814C               LDR      R4,??NetInfo_Paint_0+0x8  ;; g_leng
   \   0000002A   2468               LDR      R4,[R4, #+0]
   \   0000002C   814D               LDR      R5,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   0000002E   6C43               MULS     R4,R5,R4
   \   00000030   814D               LDR      R5,??NetInfo_Paint_0+0x10  ;; Speech
   \   00000032   2C19               ADDS     R4,R5,R4
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
  11284          
  11285                    char pY=100;    //pozycja dolna
   \   0000003C   6424               MOVS     R4,#+100
  11286                    Label(Speech[g_leng].Punkt_dostepu,0,1,pY,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   7F21               MOVS     R1,#+127
   \   00000046   0120               MOVS     R0,#+1
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   3E21               MOVS     R1,#+62
   \   0000004C   0F20               MOVS     R0,#+15
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000052   240E               LSRS     R4,R4,#+24
   \   00000054   2300               MOVS     R3,R4
   \   00000056   0122               MOVS     R2,#+1
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   7848               LDR      R0,??NetInfo_Paint_0+0x14  ;; 0x8e8
   \   0000005C   744D               LDR      R5,??NetInfo_Paint_0+0x8  ;; g_leng
   \   0000005E   2D68               LDR      R5,[R5, #+0]
   \   00000060   744E               LDR      R6,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   00000062   7543               MULS     R5,R6,R5
   \   00000064   744E               LDR      R6,??NetInfo_Paint_0+0x10  ;; Speech
   \   00000066   7519               ADDS     R5,R6,R5
   \   00000068   2818               ADDS     R0,R5,R0
   \   0000006A   ........           BL       Label
   \   0000006E   06B0               ADD      SP,SP,#+24
  11287          
  11288                    Label(Speech[g_leng].Serwer,0,1,pY-20,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   7F21               MOVS     R1,#+127
   \   00000078   0120               MOVS     R0,#+1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   3E21               MOVS     R1,#+62
   \   0000007E   0F20               MOVS     R0,#+15
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000084   240E               LSRS     R4,R4,#+24
   \   00000086   2300               MOVS     R3,R4
   \   00000088   143B               SUBS     R3,R3,#+20
   \   0000008A   0122               MOVS     R2,#+1
   \   0000008C   0021               MOVS     R1,#+0
   \   0000008E   6C48               LDR      R0,??NetInfo_Paint_0+0x18  ;; 0x9d8
   \   00000090   674D               LDR      R5,??NetInfo_Paint_0+0x8  ;; g_leng
   \   00000092   2D68               LDR      R5,[R5, #+0]
   \   00000094   674E               LDR      R6,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   00000096   7543               MULS     R5,R6,R5
   \   00000098   674E               LDR      R6,??NetInfo_Paint_0+0x10  ;; Speech
   \   0000009A   7519               ADDS     R5,R6,R5
   \   0000009C   2818               ADDS     R0,R5,R0
   \   0000009E   ........           BL       Label
   \   000000A2   06B0               ADD      SP,SP,#+24
  11289          
  11290                    Label(Speech[g_leng].Transfer,0,1,pY-45,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   7F21               MOVS     R1,#+127
   \   000000AC   0120               MOVS     R0,#+1
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   3E21               MOVS     R1,#+62
   \   000000B2   0F20               MOVS     R0,#+15
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000B8   240E               LSRS     R4,R4,#+24
   \   000000BA   2300               MOVS     R3,R4
   \   000000BC   2D3B               SUBS     R3,R3,#+45
   \   000000BE   0122               MOVS     R2,#+1
   \   000000C0   0021               MOVS     R1,#+0
   \   000000C2   6048               LDR      R0,??NetInfo_Paint_0+0x1C  ;; 0xa05
   \   000000C4   5A4D               LDR      R5,??NetInfo_Paint_0+0x8  ;; g_leng
   \   000000C6   2D68               LDR      R5,[R5, #+0]
   \   000000C8   5A4E               LDR      R6,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   000000CA   7543               MULS     R5,R6,R5
   \   000000CC   5A4E               LDR      R6,??NetInfo_Paint_0+0x10  ;; Speech
   \   000000CE   7519               ADDS     R5,R6,R5
   \   000000D0   2818               ADDS     R0,R5,R0
   \   000000D2   ........           BL       Label
   \   000000D6   06B0               ADD      SP,SP,#+24
  11291          
  11292                    
  11293                    CopyToCanvasPoint((char*)Siec, 4, pY-72, 56,24);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   1820               MOVS     R0,#+24
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   3823               MOVS     R3,#+56
   \   000000E0   2200               MOVS     R2,R4
   \   000000E2   483A               SUBS     R2,R2,#+72
   \   000000E4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000000E6   120E               LSRS     R2,R2,#+24
   \   000000E8   0421               MOVS     R1,#+4
   \   000000EA   5748               LDR      R0,??NetInfo_Paint_0+0x20  ;; Siec
   \   000000EC   ........           BL       CopyToCanvasPoint
   \   000000F0   02B0               ADD      SP,SP,#+8
  11294                
  11295                    
  11296                    float fHQP;
  11297                    float TRANS;
  11298                    char dl;
  11299                    fHQP= NET.WiFi.HttpQueryPeriod;
   \   000000F2   EE20               MOVS     R0,#+238
   \   000000F4   5549               LDR      R1,??NetInfo_Paint_0+0x24  ;; NET
   \   000000F6   085E               LDRSH    R0,[R1, R0]
   \   000000F8   ........           BL       __aeabi_i2f
   \   000000FC   0500               MOVS     R5,R0
  11300                    fHQP/=10; 
   \   000000FE   2800               MOVS     R0,R5
   \   00000100   5349               LDR      R1,??NetInfo_Paint_0+0x28  ;; 0x41200000
   \   00000102   ........           BL       __aeabi_fdiv
   \   00000106   0500               MOVS     R5,R0
  11301                    TRANS= NET.Status.SendBytes+NET.Status.ResBytes;
   \   00000108   1820               MOVS     R0,#+24
   \   0000010A   5049               LDR      R1,??NetInfo_Paint_0+0x24  ;; NET
   \   0000010C   085E               LDRSH    R0,[R1, R0]
   \   0000010E   1A21               MOVS     R1,#+26
   \   00000110   4E4A               LDR      R2,??NetInfo_Paint_0+0x24  ;; NET
   \   00000112   515E               LDRSH    R1,[R2, R1]
   \   00000114   4018               ADDS     R0,R0,R1
   \   00000116   ........           BL       __aeabi_i2f
  11302                    TRANS/=fHQP;     //transfer na sekundê w B
   \   0000011A   2900               MOVS     R1,R5
   \   0000011C   ........           BL       __aeabi_fdiv
  11303                    TRANS*=2628; //transfer na rok w kB
   \   00000120   4C49               LDR      R1,??NetInfo_Paint_0+0x2C  ;; 0x45244000
   \   00000122   ........           BL       __aeabi_fmul
  11304                    TRANS/=1000000; //transfer na rok w GB
   \   00000126   4C49               LDR      R1,??NetInfo_Paint_0+0x30  ;; 0x49742400
   \   00000128   ........           BL       __aeabi_fdiv
  11305                    
  11306                    dl=FloToStr(TRANS*1.2, txt, 5);
   \   0000012C   0522               MOVS     R2,#+5
   \   0000012E   6946               MOV      R1,SP
   \   00000130   0E00               MOVS     R6,R1
   \   00000132   1500               MOVS     R5,R2
   \   00000134   ........           BL       __aeabi_f2d
   \   00000138   0200               MOVS     R2,R0
   \   0000013A   0B00               MOVS     R3,R1
   \   0000013C   4748               LDR      R0,??NetInfo_Paint_0+0x34  ;; 0x33333333
   \   0000013E   4849               LDR      R1,??NetInfo_Paint_0+0x38  ;; 0x3ff33333
   \   00000140   ........           BL       __aeabi_dmul
   \   00000144   ........           BL       __aeabi_d2f
   \   00000148   2A00               MOVS     R2,R5
   \   0000014A   3100               MOVS     R1,R6
   \   0000014C   ........           BL       FloToStr
   \   00000150   0200               MOVS     R2,R0
  11307                    txt[dl++]='G';txt[dl++]='B';txt[dl++]='/';txt[dl++]=Speech[g_leng].Miesiac[0];txt[dl++]=Speech[g_leng].Miesiac[1];txt[dl++]=Speech[g_leng].Miesiac[2];txt[dl++]=Speech[g_leng].Miesiac[3]; txt[dl++]='.';   txt[dl]=0;
   \   00000152   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000154   120E               LSRS     R2,R2,#+24
   \   00000156   6846               MOV      R0,SP
   \   00000158   4721               MOVS     R1,#+71
   \   0000015A   8154               STRB     R1,[R0, R2]
   \   0000015C   521C               ADDS     R2,R2,#+1
   \   0000015E   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000160   120E               LSRS     R2,R2,#+24
   \   00000162   6846               MOV      R0,SP
   \   00000164   4221               MOVS     R1,#+66
   \   00000166   8154               STRB     R1,[R0, R2]
   \   00000168   521C               ADDS     R2,R2,#+1
   \   0000016A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000016C   120E               LSRS     R2,R2,#+24
   \   0000016E   6846               MOV      R0,SP
   \   00000170   2F21               MOVS     R1,#+47
   \   00000172   8154               STRB     R1,[R0, R2]
   \   00000174   521C               ADDS     R2,R2,#+1
   \   00000176   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000178   120E               LSRS     R2,R2,#+24
   \   0000017A   6946               MOV      R1,SP
   \   0000017C   3948               LDR      R0,??NetInfo_Paint_0+0x3C  ;; 0x582
   \   0000017E   2C4B               LDR      R3,??NetInfo_Paint_0+0x8  ;; g_leng
   \   00000180   1B68               LDR      R3,[R3, #+0]
   \   00000182   2C4D               LDR      R5,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   00000184   6B43               MULS     R3,R5,R3
   \   00000186   2C4D               LDR      R5,??NetInfo_Paint_0+0x10  ;; Speech
   \   00000188   EB18               ADDS     R3,R5,R3
   \   0000018A   185C               LDRB     R0,[R3, R0]
   \   0000018C   8854               STRB     R0,[R1, R2]
   \   0000018E   521C               ADDS     R2,R2,#+1
   \   00000190   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000192   120E               LSRS     R2,R2,#+24
   \   00000194   6946               MOV      R1,SP
   \   00000196   3448               LDR      R0,??NetInfo_Paint_0+0x40  ;; 0x583
   \   00000198   254B               LDR      R3,??NetInfo_Paint_0+0x8  ;; g_leng
   \   0000019A   1B68               LDR      R3,[R3, #+0]
   \   0000019C   254D               LDR      R5,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   0000019E   6B43               MULS     R3,R5,R3
   \   000001A0   254D               LDR      R5,??NetInfo_Paint_0+0x10  ;; Speech
   \   000001A2   EB18               ADDS     R3,R5,R3
   \   000001A4   185C               LDRB     R0,[R3, R0]
   \   000001A6   8854               STRB     R0,[R1, R2]
   \   000001A8   521C               ADDS     R2,R2,#+1
   \   000001AA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001AC   120E               LSRS     R2,R2,#+24
   \   000001AE   6946               MOV      R1,SP
   \   000001B0   2E48               LDR      R0,??NetInfo_Paint_0+0x44  ;; 0x584
   \   000001B2   1F4B               LDR      R3,??NetInfo_Paint_0+0x8  ;; g_leng
   \   000001B4   1B68               LDR      R3,[R3, #+0]
   \   000001B6   1F4D               LDR      R5,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   000001B8   6B43               MULS     R3,R5,R3
   \   000001BA   1F4D               LDR      R5,??NetInfo_Paint_0+0x10  ;; Speech
   \   000001BC   EB18               ADDS     R3,R5,R3
   \   000001BE   185C               LDRB     R0,[R3, R0]
   \   000001C0   8854               STRB     R0,[R1, R2]
   \   000001C2   521C               ADDS     R2,R2,#+1
   \   000001C4   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001C6   120E               LSRS     R2,R2,#+24
   \   000001C8   6946               MOV      R1,SP
   \   000001CA   2948               LDR      R0,??NetInfo_Paint_0+0x48  ;; 0x585
   \   000001CC   184B               LDR      R3,??NetInfo_Paint_0+0x8  ;; g_leng
   \   000001CE   1B68               LDR      R3,[R3, #+0]
   \   000001D0   184D               LDR      R5,??NetInfo_Paint_0+0xC  ;; 0xa7d
   \   000001D2   6B43               MULS     R3,R5,R3
   \   000001D4   184D               LDR      R5,??NetInfo_Paint_0+0x10  ;; Speech
   \   000001D6   EB18               ADDS     R3,R5,R3
   \   000001D8   185C               LDRB     R0,[R3, R0]
   \   000001DA   8854               STRB     R0,[R1, R2]
   \   000001DC   521C               ADDS     R2,R2,#+1
   \   000001DE   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001E0   120E               LSRS     R2,R2,#+24
   \   000001E2   6846               MOV      R0,SP
   \   000001E4   2E21               MOVS     R1,#+46
   \   000001E6   8154               STRB     R1,[R0, R2]
   \   000001E8   521C               ADDS     R2,R2,#+1
   \   000001EA   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001EC   120E               LSRS     R2,R2,#+24
   \   000001EE   6846               MOV      R0,SP
   \   000001F0   0021               MOVS     R1,#+0
   \   000001F2   8154               STRB     R1,[R0, R2]
  11308                    Label(txt,0,4, pY-88,dl,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001F4   82B0               SUB      SP,SP,#+8
   \   000001F6   0020               MOVS     R0,#+0
   \   000001F8   0090               STR      R0,[SP, #+0]
   \   000001FA   7F21               MOVS     R1,#+127
   \   000001FC   0120               MOVS     R0,#+1
   \   000001FE   03B4               PUSH     {R0,R1}
   \   00000200   0F21               MOVS     R1,#+15
   \   00000202   1000               MOVS     R0,R2
   \   00000204   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000206   000E               LSRS     R0,R0,#+24
   \   00000208   03B4               PUSH     {R0,R1}
   \   0000020A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000020C   240E               LSRS     R4,R4,#+24
   \   0000020E   583C               SUBS     R4,R4,#+88
   \   00000210   2300               MOVS     R3,R4
   \   00000212   0422               MOVS     R2,#+4
   \   00000214   0021               MOVS     R1,#+0
   \   00000216   06A8               ADD      R0,SP,#+24
   \   00000218   ........           BL       Label
   \   0000021C   06B0               ADD      SP,SP,#+24
  11309                 
  11310                    
  11311          
  11312                    
  11313                }//_______________________ Koniec funkcji  __________________________
   \   0000021E   04B0               ADD      SP,SP,#+16
   \   00000220   70BC               POP      {R4-R6}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??NetInfo_Paint_0:
   \   00000228   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000022C   140A0000           DC32     0xa14
   \   00000230   ........           DC32     g_leng
   \   00000234   7D0A0000           DC32     0xa7d
   \   00000238   ........           DC32     Speech
   \   0000023C   E8080000           DC32     0x8e8
   \   00000240   D8090000           DC32     0x9d8
   \   00000244   050A0000           DC32     0xa05
   \   00000248   ........           DC32     Siec
   \   0000024C   ........           DC32     NET
   \   00000250   00002041           DC32     0x41200000
   \   00000254   00402445           DC32     0x45244000
   \   00000258   00247449           DC32     0x49742400
   \   0000025C   33333333           DC32     0x33333333
   \   00000260   3333F33F           DC32     0x3ff33333
   \   00000264   82050000           DC32     0x582
   \   00000268   83050000           DC32     0x583
   \   0000026C   84050000           DC32     0x584
   \   00000270   85050000           DC32     0x585
  11314              
  11315                
  11316             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11317                void  NetInfo_Event(void)
  11318                {
   \                     NetInfo_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  11319                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1C48               LDR      R0,??NetInfo_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1B48               LDR      R0,??NetInfo_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1B48               LDR      R0,??NetInfo_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1A48               LDR      R0,??NetInfo_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   0CD5               BPL      ??NetInfo_Event_1
  11320                  {     
  11321                    TransferInfo=0;         
   \   00000030   1748               LDR      R0,??NetInfo_Event_0+0x10  ;; TransferInfo
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   0170               STRB     R1,[R0, #+0]
  11322                    MenuLevel=(MenuLevel/10);
   \   00000036   1748               LDR      R0,??NetInfo_Event_0+0x14  ;; MenuLevel
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   0A21               MOVS     R1,#+10
   \   0000003C   ........           BL       __aeabi_idivmod
   \   00000040   1449               LDR      R1,??NetInfo_Event_0+0x14  ;; MenuLevel
   \   00000042   0860               STR      R0,[R1, #+0]
  11323                    MenuPaint();
   \   00000044   ........           BL       MenuPaint
   \   00000048   16E0               B        ??NetInfo_Event_2
  11324                  }else{
  11325                      if ((X_down>1) && (X_down<63) && (Y_down>10) && (Y_down<60))
   \                     ??NetInfo_Event_1:
   \   0000004A   0E48               LDR      R0,??NetInfo_Event_0+0x4  ;; X_down
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   0228               CMP      R0,#+2
   \   00000052   11DB               BLT      ??NetInfo_Event_2
   \   00000054   0B48               LDR      R0,??NetInfo_Event_0+0x4  ;; X_down
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   405E               LDRSH    R0,[R0, R1]
   \   0000005A   3F28               CMP      R0,#+63
   \   0000005C   0CDA               BGE      ??NetInfo_Event_2
   \   0000005E   0848               LDR      R0,??NetInfo_Event_0  ;; Y_down
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   405E               LDRSH    R0,[R0, R1]
   \   00000064   0B28               CMP      R0,#+11
   \   00000066   07DB               BLT      ??NetInfo_Event_2
   \   00000068   0548               LDR      R0,??NetInfo_Event_0  ;; Y_down
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   405E               LDRSH    R0,[R0, R1]
   \   0000006E   3C28               CMP      R0,#+60
   \   00000070   02DA               BGE      ??NetInfo_Event_2
  11326                      {
  11327                         TransferInfo=1;
   \   00000072   0748               LDR      R0,??NetInfo_Event_0+0x10  ;; TransferInfo
   \   00000074   0121               MOVS     R1,#+1
   \   00000076   0170               STRB     R1,[R0, #+0]
  11328                      }
  11329                      
  11330                  }
  11331              
  11332                   
  11333                    
  11334                
  11335                }//_______________________________________________________________________
   \                     ??NetInfo_Event_2:
   \   00000078   10BC               POP      {R4}
   \   0000007A   01BC               POP      {R0}
   \   0000007C   0047               BX       R0               ;; return
   \   0000007E   C046               Nop      
   \                     ??NetInfo_Event_0:
   \   00000080   ........           DC32     Y_down
   \   00000084   ........           DC32     X_down
   \   00000088   ........           DC32     Y_up
   \   0000008C   ........           DC32     X_up
   \   00000090   ........           DC32     TransferInfo
   \   00000094   ........           DC32     MenuLevel
  11336          
  11337                

   \                                 In section Debug.txt, align 4, keep-with-next
  11338                void  NetInfo_Refresh(void)
  11339                {
   \                     NetInfo_Refresh:
   \   00000000   D3B5               PUSH     {R0,R1,R4,R6,R7,LR}
  11340                  //static char Dziel;
  11341                    char txt[6];
  11342                  //if (Dziel<5)
  11343                  //{
  11344                    static char  AccesPointAssociateTestOk=0;  //0-brak informacji, 1-Nipod³¹czony, 2 pod³¹czony
  11345                    char pY=100;    //pozycja dolna
   \   00000002   6424               MOVS     R4,#+100
  11346                    
  11347                    if (NET.Status.AccesPointAssociateTest<200) NET.Status.AccesPointAssociateTest++;
   \   00000004   A148               LDR      R0,??NetInfo_Refresh_0  ;; NET + 4
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   C828               CMP      R0,#+200
   \   0000000A   04D2               BCS      ??NetInfo_Refresh_1
   \   0000000C   9F48               LDR      R0,??NetInfo_Refresh_0  ;; NET + 4
   \   0000000E   9F49               LDR      R1,??NetInfo_Refresh_0  ;; NET + 4
   \   00000010   0978               LDRB     R1,[R1, #+0]
   \   00000012   491C               ADDS     R1,R1,#+1
   \   00000014   0170               STRB     R1,[R0, #+0]
  11348                    if (NET.Status.AccesPointAssociateTest==200)
   \                     ??NetInfo_Refresh_1:
   \   00000016   9D48               LDR      R0,??NetInfo_Refresh_0  ;; NET + 4
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   C828               CMP      R0,#+200
   \   0000001C   05D1               BNE      ??NetInfo_Refresh_2
  11349                    {
  11350                       AccesPointAssociateTestOk=1;
   \   0000001E   9C48               LDR      R0,??NetInfo_Refresh_0+0x4  ;; ??AccesPointAssociateTestOk
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   0170               STRB     R1,[R0, #+0]
  11351                       NET.Status.AccesPointAssociateTest=0;  
   \   00000024   9948               LDR      R0,??NetInfo_Refresh_0  ;; NET + 4
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0170               STRB     R1,[R0, #+0]
  11352                    }
  11353                    if (NET.Status.AccesPointAssociateTest==0xFF)
   \                     ??NetInfo_Refresh_2:
   \   0000002A   9848               LDR      R0,??NetInfo_Refresh_0  ;; NET + 4
   \   0000002C   0078               LDRB     R0,[R0, #+0]
   \   0000002E   FF28               CMP      R0,#+255
   \   00000030   05D1               BNE      ??NetInfo_Refresh_3
  11354                    {
  11355                       AccesPointAssociateTestOk=2;
   \   00000032   9748               LDR      R0,??NetInfo_Refresh_0+0x4  ;; ??AccesPointAssociateTestOk
   \   00000034   0221               MOVS     R1,#+2
   \   00000036   0170               STRB     R1,[R0, #+0]
  11356                       NET.Status.AccesPointAssociateTest=0;
   \   00000038   9448               LDR      R0,??NetInfo_Refresh_0  ;; NET + 4
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   0170               STRB     R1,[R0, #+0]
  11357                    }
  11358                   
  11359                    if (AccesPointAssociateTestOk==2)
   \                     ??NetInfo_Refresh_3:
   \   0000003E   9448               LDR      R0,??NetInfo_Refresh_0+0x4  ;; ??AccesPointAssociateTestOk
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   0228               CMP      R0,#+2
   \   00000044   1AD1               BNE      ??NetInfo_Refresh_4
  11360                    {
  11361                      Label(Speech[g_leng].Polaczony,0,6,pY-10,15,53,1,127,0); 
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   0120               MOVS     R0,#+1
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   3521               MOVS     R1,#+53
   \   00000054   0F20               MOVS     R0,#+15
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000005A   240E               LSRS     R4,R4,#+24
   \   0000005C   2300               MOVS     R3,R4
   \   0000005E   0A3B               SUBS     R3,R3,#+10
   \   00000060   0622               MOVS     R2,#+6
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   8B48               LDR      R0,??NetInfo_Refresh_0+0x8  ;; 0x9e7
   \   00000066   8C4E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   00000068   3668               LDR      R6,[R6, #+0]
   \   0000006A   8C4F               LDR      R7,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   0000006C   7E43               MULS     R6,R7,R6
   \   0000006E   8C4F               LDR      R7,??NetInfo_Refresh_0+0x14  ;; Speech
   \   00000070   BE19               ADDS     R6,R7,R6
   \   00000072   3018               ADDS     R0,R6,R0
   \   00000074   ........           BL       Label
   \   00000078   06B0               ADD      SP,SP,#+24
   \   0000007A   35E0               B        ??NetInfo_Refresh_5
  11362                    }
  11363                    else if  (AccesPointAssociateTestOk==1)
   \                     ??NetInfo_Refresh_4:
   \   0000007C   8448               LDR      R0,??NetInfo_Refresh_0+0x4  ;; ??AccesPointAssociateTestOk
   \   0000007E   0078               LDRB     R0,[R0, #+0]
   \   00000080   0128               CMP      R0,#+1
   \   00000082   1AD1               BNE      ??NetInfo_Refresh_6
  11364                    {
  11365                      Label(Speech[g_leng].Niepolaczony,0,6,pY-10,15,53,1,127,0); 
   \   00000084   82B0               SUB      SP,SP,#+8
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   0090               STR      R0,[SP, #+0]
   \   0000008A   7F21               MOVS     R1,#+127
   \   0000008C   0120               MOVS     R0,#+1
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   3521               MOVS     R1,#+53
   \   00000092   0F20               MOVS     R0,#+15
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000098   240E               LSRS     R4,R4,#+24
   \   0000009A   2300               MOVS     R3,R4
   \   0000009C   0A3B               SUBS     R3,R3,#+10
   \   0000009E   0622               MOVS     R2,#+6
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   8048               LDR      R0,??NetInfo_Refresh_0+0x18  ;; 0x9f6
   \   000000A4   7C4E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   000000A6   3668               LDR      R6,[R6, #+0]
   \   000000A8   7C4F               LDR      R7,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   000000AA   7E43               MULS     R6,R7,R6
   \   000000AC   7C4F               LDR      R7,??NetInfo_Refresh_0+0x14  ;; Speech
   \   000000AE   BE19               ADDS     R6,R7,R6
   \   000000B0   3018               ADDS     R0,R6,R0
   \   000000B2   ........           BL       Label
   \   000000B6   06B0               ADD      SP,SP,#+24
   \   000000B8   16E0               B        ??NetInfo_Refresh_5
  11366                    }else if  (AccesPointAssociateTestOk==0)
   \                     ??NetInfo_Refresh_6:
   \   000000BA   7548               LDR      R0,??NetInfo_Refresh_0+0x4  ;; ??AccesPointAssociateTestOk
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   0028               CMP      R0,#+0
   \   000000C0   12D1               BNE      ??NetInfo_Refresh_5
  11367                    {
  11368                      Label("???",0,6,pY-10,15,53,1,127,0); 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3521               MOVS     R1,#+53
   \   000000D0   0F20               MOVS     R0,#+15
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000D6   240E               LSRS     R4,R4,#+24
   \   000000D8   2300               MOVS     R3,R4
   \   000000DA   0A3B               SUBS     R3,R3,#+10
   \   000000DC   0622               MOVS     R2,#+6
   \   000000DE   0021               MOVS     R1,#+0
   \   000000E0   71A0               ADR      R0,??NetInfo_Refresh_0+0x1C  ;; "\?\?\?"
   \   000000E2   ........           BL       Label
   \   000000E6   06B0               ADD      SP,SP,#+24
  11369                    }      
  11370                    
  11371          
  11372                    
  11373                    if (NET.Status.HostLink==CONNECTED)
   \                     ??NetInfo_Refresh_5:
   \   000000E8   7048               LDR      R0,??NetInfo_Refresh_0+0x20  ;; NET + 1
   \   000000EA   0078               LDRB     R0,[R0, #+0]
   \   000000EC   0328               CMP      R0,#+3
   \   000000EE   1AD1               BNE      ??NetInfo_Refresh_7
  11374                    {   
  11375                      Label(Speech[g_leng].Polaczony,0,6,pY-30,15,53,1,127,0); 
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   7F21               MOVS     R1,#+127
   \   000000F8   0120               MOVS     R0,#+1
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   3521               MOVS     R1,#+53
   \   000000FE   0F20               MOVS     R0,#+15
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000104   240E               LSRS     R4,R4,#+24
   \   00000106   2300               MOVS     R3,R4
   \   00000108   1E3B               SUBS     R3,R3,#+30
   \   0000010A   0622               MOVS     R2,#+6
   \   0000010C   0021               MOVS     R1,#+0
   \   0000010E   6148               LDR      R0,??NetInfo_Refresh_0+0x8  ;; 0x9e7
   \   00000110   614E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   00000112   3668               LDR      R6,[R6, #+0]
   \   00000114   614F               LDR      R7,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   00000116   7E43               MULS     R6,R7,R6
   \   00000118   614F               LDR      R7,??NetInfo_Refresh_0+0x14  ;; Speech
   \   0000011A   BE19               ADDS     R6,R7,R6
   \   0000011C   3018               ADDS     R0,R6,R0
   \   0000011E   ........           BL       Label
   \   00000122   06B0               ADD      SP,SP,#+24
   \   00000124   19E0               B        ??NetInfo_Refresh_8
  11376                    }else{
  11377                      Label(Speech[g_leng].Niepolaczony,0,6,pY-30,15,53,1,127,0); 
   \                     ??NetInfo_Refresh_7:
   \   00000126   82B0               SUB      SP,SP,#+8
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   7F21               MOVS     R1,#+127
   \   0000012E   0120               MOVS     R0,#+1
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   3521               MOVS     R1,#+53
   \   00000134   0F20               MOVS     R0,#+15
   \   00000136   03B4               PUSH     {R0,R1}
   \   00000138   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000013A   240E               LSRS     R4,R4,#+24
   \   0000013C   2300               MOVS     R3,R4
   \   0000013E   1E3B               SUBS     R3,R3,#+30
   \   00000140   0622               MOVS     R2,#+6
   \   00000142   0021               MOVS     R1,#+0
   \   00000144   5748               LDR      R0,??NetInfo_Refresh_0+0x18  ;; 0x9f6
   \   00000146   544E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   00000148   3668               LDR      R6,[R6, #+0]
   \   0000014A   544F               LDR      R7,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   0000014C   7E43               MULS     R6,R7,R6
   \   0000014E   544F               LDR      R7,??NetInfo_Refresh_0+0x14  ;; Speech
   \   00000150   BE19               ADDS     R6,R7,R6
   \   00000152   3018               ADDS     R0,R6,R0
   \   00000154   ........           BL       Label
   \   00000158   06B0               ADD      SP,SP,#+24
  11378                    }
  11379                    
  11380                    CleanCanvasArea(20, pY-74,15,27,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??NetInfo_Refresh_8:
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   0090               STR      R0,[SP, #+0]
   \   00000160   1B23               MOVS     R3,#+27
   \   00000162   0F22               MOVS     R2,#+15
   \   00000164   2100               MOVS     R1,R4
   \   00000166   4A39               SUBS     R1,R1,#+74
   \   00000168   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000016A   090E               LSRS     R1,R1,#+24
   \   0000016C   1420               MOVS     R0,#+20
   \   0000016E   ........           BL       CleanCanvasArea
   \   00000172   02B0               ADD      SP,SP,#+8
  11381                    
  11382                    
  11383                            
  11384                    if ((NET.Status.SendPacketTime+250>g_counter) || ((NET.Status.ResPacketTime<NET.Status.SendPacketTime) && (NET.Status.SendPacketTime+12000>g_counter))) 
   \   00000174   4E48               LDR      R0,??NetInfo_Refresh_0+0x24  ;; g_counter
   \   00000176   03C8               LDM      R0!,{R0,R1}
   \   00000178   4E4A               LDR      R2,??NetInfo_Refresh_0+0x28  ;; NET + 32
   \   0000017A   0CCA               LDM      R2!,{R2,R3}
   \   0000017C   0026               MOVS     R6,#+0
   \   0000017E   FA32               ADDS     R2,R2,#+250
   \   00000180   7341               ADCS     R3,R3,R6
   \   00000182   9942               CMP      R1,R3
   \   00000184   1AD3               BCC      ??NetInfo_Refresh_9
   \   00000186   01D8               BHI      ??NetInfo_Refresh_10
   \   00000188   9042               CMP      R0,R2
   \   0000018A   17D3               BCC      ??NetInfo_Refresh_9
   \                     ??NetInfo_Refresh_10:
   \   0000018C   4A48               LDR      R0,??NetInfo_Refresh_0+0x2C  ;; NET + 40
   \   0000018E   0CC8               LDM      R0!,{R2,R3}
   \   00000190   0838               SUBS     R0,R0,#+8
   \   00000192   4848               LDR      R0,??NetInfo_Refresh_0+0x28  ;; NET + 32
   \   00000194   03C8               LDM      R0!,{R0,R1}
   \   00000196   8B42               CMP      R3,R1
   \   00000198   3CD8               BHI      ??NetInfo_Refresh_11
   \   0000019A   01D3               BCC      ??NetInfo_Refresh_12
   \   0000019C   8242               CMP      R2,R0
   \   0000019E   39D2               BCS      ??NetInfo_Refresh_11
   \                     ??NetInfo_Refresh_12:
   \   000001A0   4348               LDR      R0,??NetInfo_Refresh_0+0x24  ;; g_counter
   \   000001A2   C0C8               LDM      R0!,{R6,R7}
   \   000001A4   0838               SUBS     R0,R0,#+8
   \   000001A6   4348               LDR      R0,??NetInfo_Refresh_0+0x28  ;; NET + 32
   \   000001A8   03C8               LDM      R0!,{R0,R1}
   \   000001AA   444A               LDR      R2,??NetInfo_Refresh_0+0x30  ;; 0x2ee0
   \   000001AC   0023               MOVS     R3,#+0
   \   000001AE   1218               ADDS     R2,R2,R0
   \   000001B0   4B41               ADCS     R3,R3,R1
   \   000001B2   9F42               CMP      R7,R3
   \   000001B4   2ED8               BHI      ??NetInfo_Refresh_11
   \   000001B6   01D3               BCC      ??NetInfo_Refresh_13
   \   000001B8   9642               CMP      R6,R2
   \   000001BA   2BD2               BCS      ??NetInfo_Refresh_11
  11385                    {
  11386                      CopyToCanvasPoint((char*)StrzalkaPrawo,21, pY-60, 11,5);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??NetInfo_Refresh_13:
   \                     ??NetInfo_Refresh_9:
   \   000001BC   82B0               SUB      SP,SP,#+8
   \   000001BE   0520               MOVS     R0,#+5
   \   000001C0   0090               STR      R0,[SP, #+0]
   \   000001C2   0B23               MOVS     R3,#+11
   \   000001C4   2200               MOVS     R2,R4
   \   000001C6   3C3A               SUBS     R2,R2,#+60
   \   000001C8   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   000001CA   120E               LSRS     R2,R2,#+24
   \   000001CC   1521               MOVS     R1,#+21
   \   000001CE   3C48               LDR      R0,??NetInfo_Refresh_0+0x34  ;; StrzalkaPrawo
   \   000001D0   ........           BL       CopyToCanvasPoint
   \   000001D4   02B0               ADD      SP,SP,#+8
  11387                      if (TransferInfo)
   \   000001D6   3B48               LDR      R0,??NetInfo_Refresh_0+0x38  ;; TransferInfo
   \   000001D8   0078               LDRB     R0,[R0, #+0]
   \   000001DA   0028               CMP      R0,#+0
   \   000001DC   1AD0               BEQ      ??NetInfo_Refresh_11
  11388                      {
  11389                        sprintf(txt, "%d",  NET.Status.SendBytes, 'B');
                               ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000001DE   4223               MOVS     R3,#+66
   \   000001E0   1820               MOVS     R0,#+24
   \   000001E2   3949               LDR      R1,??NetInfo_Refresh_0+0x3C  ;; NET
   \   000001E4   0A5E               LDRSH    R2,[R1, R0]
   \   000001E6   39A1               ADR      R1,??NetInfo_Refresh_0+0x40  ;; 0x25, 0x64, 0x00, 0x00
   \   000001E8   6846               MOV      R0,SP
   \   000001EA   ........           BL       sprintf
  11390                        Label(txt,0,20, pY-56,15,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001EE   82B0               SUB      SP,SP,#+8
   \   000001F0   0020               MOVS     R0,#+0
   \   000001F2   0090               STR      R0,[SP, #+0]
   \   000001F4   7F21               MOVS     R1,#+127
   \   000001F6   0120               MOVS     R0,#+1
   \   000001F8   03B4               PUSH     {R0,R1}
   \   000001FA   0F21               MOVS     R1,#+15
   \   000001FC   0F20               MOVS     R0,#+15
   \   000001FE   03B4               PUSH     {R0,R1}
   \   00000200   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000202   240E               LSRS     R4,R4,#+24
   \   00000204   2300               MOVS     R3,R4
   \   00000206   383B               SUBS     R3,R3,#+56
   \   00000208   1422               MOVS     R2,#+20
   \   0000020A   0021               MOVS     R1,#+0
   \   0000020C   06A8               ADD      R0,SP,#+24
   \   0000020E   ........           BL       Label
   \   00000212   06B0               ADD      SP,SP,#+24
  11391                      }
  11392                    }
  11393                    if (NET.Status.ResPacketTime+250>g_counter) 
   \                     ??NetInfo_Refresh_11:
   \   00000214   2648               LDR      R0,??NetInfo_Refresh_0+0x24  ;; g_counter
   \   00000216   03C8               LDM      R0!,{R0,R1}
   \   00000218   274A               LDR      R2,??NetInfo_Refresh_0+0x2C  ;; NET + 40
   \   0000021A   0CCA               LDM      R2!,{R2,R3}
   \   0000021C   0026               MOVS     R6,#+0
   \   0000021E   FA32               ADDS     R2,R2,#+250
   \   00000220   7341               ADCS     R3,R3,R6
   \   00000222   9942               CMP      R1,R3
   \   00000224   2DD8               BHI      ??NetInfo_Refresh_14
   \   00000226   01D3               BCC      ??NetInfo_Refresh_15
   \   00000228   9042               CMP      R0,R2
   \   0000022A   2AD2               BCS      ??NetInfo_Refresh_14
  11394                    {
  11395                      CopyToCanvasPoint((char*)StrzalkaLewo, 21, pY-65, 11,5);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??NetInfo_Refresh_15:
   \   0000022C   82B0               SUB      SP,SP,#+8
   \   0000022E   0520               MOVS     R0,#+5
   \   00000230   0090               STR      R0,[SP, #+0]
   \   00000232   0B23               MOVS     R3,#+11
   \   00000234   2200               MOVS     R2,R4
   \   00000236   413A               SUBS     R2,R2,#+65
   \   00000238   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000023A   120E               LSRS     R2,R2,#+24
   \   0000023C   1521               MOVS     R1,#+21
   \   0000023E   2448               LDR      R0,??NetInfo_Refresh_0+0x44  ;; StrzalkaLewo
   \   00000240   ........           BL       CopyToCanvasPoint
   \   00000244   02B0               ADD      SP,SP,#+8
  11396                      if (TransferInfo)
   \   00000246   1F48               LDR      R0,??NetInfo_Refresh_0+0x38  ;; TransferInfo
   \   00000248   0078               LDRB     R0,[R0, #+0]
   \   0000024A   0028               CMP      R0,#+0
   \   0000024C   19D0               BEQ      ??NetInfo_Refresh_14
  11397                      {
  11398                      sprintf(txt, "%d",  NET.Status.ResBytes);
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000024E   1A20               MOVS     R0,#+26
   \   00000250   1D49               LDR      R1,??NetInfo_Refresh_0+0x3C  ;; NET
   \   00000252   0A5E               LDRSH    R2,[R1, R0]
   \   00000254   1DA1               ADR      R1,??NetInfo_Refresh_0+0x40  ;; 0x25, 0x64, 0x00, 0x00
   \   00000256   6846               MOV      R0,SP
   \   00000258   ........           BL       sprintf
  11399                      Label(txt,0,20, pY-74,15,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000025C   82B0               SUB      SP,SP,#+8
   \   0000025E   0020               MOVS     R0,#+0
   \   00000260   0090               STR      R0,[SP, #+0]
   \   00000262   7F21               MOVS     R1,#+127
   \   00000264   0120               MOVS     R0,#+1
   \   00000266   03B4               PUSH     {R0,R1}
   \   00000268   0F21               MOVS     R1,#+15
   \   0000026A   0F20               MOVS     R0,#+15
   \   0000026C   03B4               PUSH     {R0,R1}
   \   0000026E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000270   240E               LSRS     R4,R4,#+24
   \   00000272   4A3C               SUBS     R4,R4,#+74
   \   00000274   2300               MOVS     R3,R4
   \   00000276   1422               MOVS     R2,#+20
   \   00000278   0021               MOVS     R1,#+0
   \   0000027A   06A8               ADD      R0,SP,#+24
   \   0000027C   ........           BL       Label
   \   00000280   06B0               ADD      SP,SP,#+24
  11400                      }
  11401                    }
  11402                    
  11403                    
  11404                    
  11405                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??NetInfo_Refresh_14:
   \   00000282   02B0               ADD      SP,SP,#+8
   \   00000284   D0BC               POP      {R4,R6,R7}
   \   00000286   01BC               POP      {R0}
   \   00000288   0047               BX       R0               ;; return
   \   0000028A   C046               Nop      
   \                     ??NetInfo_Refresh_0:
   \   0000028C   ........           DC32     NET + 4
   \   00000290   ........           DC32     ??AccesPointAssociateTestOk
   \   00000294   E7090000           DC32     0x9e7
   \   00000298   ........           DC32     g_leng
   \   0000029C   7D0A0000           DC32     0xa7d
   \   000002A0   ........           DC32     Speech
   \   000002A4   F6090000           DC32     0x9f6
   \   000002A8   3F3F3F00           DC8      "\?\?\?"
   \   000002AC   ........           DC32     NET + 1
   \   000002B0   ........           DC32     g_counter
   \   000002B4   ........           DC32     NET + 32
   \   000002B8   ........           DC32     NET + 40
   \   000002BC   E02E0000           DC32     0x2ee0
   \   000002C0   ........           DC32     StrzalkaPrawo
   \   000002C4   ........           DC32     TransferInfo
   \   000002C8   ........           DC32     NET
   \   000002CC   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000002D0   ........           DC32     StrzalkaLewo

   \                                 In section .bss, align 1
   \                     ??AccesPointAssociateTestOk:
   \   00000000                      DS8 1
  11406          
  11407                
  11408                
  11409                
  11410                
  11411                
  11412              
  11413                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11414                void Zmienne_Paint(void)
  11415                {
   \                     Zmienne_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  11416          
  11417                   List_Paint(Speech[g_leng].Zmienne,2,15,0,0,3, Speech[g_leng].ZmDwust, Speech[g_leng].ZmAnalog, 0,  0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   1148               LDR      R0,??Zmienne_Paint_0  ;; g_leng
   \   00000016   0068               LDR      R0,[R0, #+0]
   \   00000018   1149               LDR      R1,??Zmienne_Paint_0+0x4  ;; 0xa7d
   \   0000001A   4843               MULS     R0,R1,R0
   \   0000001C   1149               LDR      R1,??Zmienne_Paint_0+0x8  ;; Speech
   \   0000001E   0918               ADDS     R1,R1,R0
   \   00000020   0F31               ADDS     R1,R1,#+15
   \   00000022   0E48               LDR      R0,??Zmienne_Paint_0  ;; g_leng
   \   00000024   0068               LDR      R0,[R0, #+0]
   \   00000026   0E4A               LDR      R2,??Zmienne_Paint_0+0x4  ;; 0xa7d
   \   00000028   5043               MULS     R0,R2,R0
   \   0000002A   0E4A               LDR      R2,??Zmienne_Paint_0+0x8  ;; Speech
   \   0000002C   1018               ADDS     R0,R2,R0
   \   0000002E   1E30               ADDS     R0,R0,#+30
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0023               MOVS     R3,#+0
   \   0000003A   0F22               MOVS     R2,#+15
   \   0000003C   0221               MOVS     R1,#+2
   \   0000003E   0A48               LDR      R0,??Zmienne_Paint_0+0xC  ;; 0xa6e
   \   00000040   064C               LDR      R4,??Zmienne_Paint_0  ;; g_leng
   \   00000042   2468               LDR      R4,[R4, #+0]
   \   00000044   064D               LDR      R5,??Zmienne_Paint_0+0x4  ;; 0xa7d
   \   00000046   6C43               MULS     R4,R5,R4
   \   00000048   064D               LDR      R5,??Zmienne_Paint_0+0x8  ;; Speech
   \   0000004A   2C19               ADDS     R4,R5,R4
   \   0000004C   2018               ADDS     R0,R4,R0
   \   0000004E   ........           BL       List_Paint
   \   00000052   0AB0               ADD      SP,SP,#+40
  11418                                                                                                                                         
  11419                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000054   01B0               ADD      SP,SP,#+4
   \   00000056   30BC               POP      {R4,R5}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??Zmienne_Paint_0:
   \   0000005C   ........           DC32     g_leng
   \   00000060   7D0A0000           DC32     0xa7d
   \   00000064   ........           DC32     Speech
   \   00000068   6E0A0000           DC32     0xa6e
  11420          
  11421          
  11422          
  11423                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11424                void Zmienne_Event(void)
  11425                {
   \                     Zmienne_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  11426           
  11427                  char ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1B48               LDR      R0,??Zmienne_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1A48               LDR      R0,??Zmienne_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1A48               LDR      R0,??Zmienne_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   1948               LDR      R0,??Zmienne_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  11428            
  11429                  if (ans)
   \   0000002C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002E   000E               LSRS     R0,R0,#+24
   \   00000030   0028               CMP      R0,#+0
   \   00000032   20D0               BEQ      ??Zmienne_Event_1
  11430                    {
  11431                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0128               CMP      R0,#+1
   \   0000003A   0CD3               BCC      ??Zmienne_Event_2
   \   0000003C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   0328               CMP      R0,#+3
   \   00000042   08D2               BCS      ??Zmienne_Event_2
   \   00000044   1149               LDR      R1,??Zmienne_Event_0+0x10  ;; MenuLevel
   \   00000046   114A               LDR      R2,??Zmienne_Event_0+0x10  ;; MenuLevel
   \   00000048   1268               LDR      R2,[R2, #+0]
   \   0000004A   0A23               MOVS     R3,#+10
   \   0000004C   5A43               MULS     R2,R3,R2
   \   0000004E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   1218               ADDS     R2,R2,R0
   \   00000054   0A60               STR      R2,[R1, #+0]
  11432                    if (ans<0) {
                                  ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \                     ??Zmienne_Event_2:
   \   00000056   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000058   000E               LSRS     R0,R0,#+24
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   09D5               BPL      ??Zmienne_Event_3
  11433                      MenuLevel=(MenuLevel/10);
   \   0000005E   0B48               LDR      R0,??Zmienne_Event_0+0x10  ;; MenuLevel
   \   00000060   0068               LDR      R0,[R0, #+0]
   \   00000062   0A21               MOVS     R1,#+10
   \   00000064   ........           BL       __aeabi_idivmod
   \   00000068   0849               LDR      R1,??Zmienne_Event_0+0x10  ;; MenuLevel
   \   0000006A   0860               STR      R0,[R1, #+0]
  11434                     CurModifSheet=0; 
   \   0000006C   0848               LDR      R0,??Zmienne_Event_0+0x14  ;; CurModifSheet
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   0170               STRB     R1,[R0, #+0]
  11435                    }
  11436                    MenuPaint();
   \                     ??Zmienne_Event_3:
   \   00000072   ........           BL       MenuPaint
  11437                    } 
  11438                }//_______________________________________________________________________
   \                     ??Zmienne_Event_1:
   \   00000076   10BC               POP      {R4}
   \   00000078   01BC               POP      {R0}
   \   0000007A   0047               BX       R0               ;; return
   \                     ??Zmienne_Event_0:
   \   0000007C   ........           DC32     Y_down
   \   00000080   ........           DC32     X_down
   \   00000084   ........           DC32     Y_up
   \   00000088   ........           DC32     X_up
   \   0000008C   ........           DC32     MenuLevel
   \   00000090   ........           DC32     CurModifSheet
  11439          
  11440                
  11441          
  11442                

   \                                 In section .bss, align 1
  11443                char ZM_OFFSET=0;
   \                     ZM_OFFSET:
   \   00000000                      DS8 1
  11444                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11445                void ZmienneDwustanowe_Paint(void)
  11446                {  
   \                     ZmienneDwustanowe_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
  11447          
  11448                      List_Paint(Speech[g_leng].ZmDwust,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   1CA0               ADR      R0,??ZmienneDwustanowe_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   1948               LDR      R0,??ZmienneDwustanowe_Paint_0+0x4  ;; g_leng
   \   00000028   0068               LDR      R0,[R0, #+0]
   \   0000002A   194C               LDR      R4,??ZmienneDwustanowe_Paint_0+0x8  ;; 0xa7d
   \   0000002C   6043               MULS     R0,R4,R0
   \   0000002E   194C               LDR      R4,??ZmienneDwustanowe_Paint_0+0xC  ;; Speech
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   1E30               ADDS     R0,R0,#+30
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
  11449                      
  11450                      
  11451                     char LabelButt[2];
  11452                     LabelButt[1]=0;
   \   0000003A   6846               MOV      R0,SP
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   4170               STRB     R1,[R0, #+1]
  11453                     LabelButt[0]=30;
   \   00000040   6846               MOV      R0,SP
   \   00000042   1E21               MOVS     R1,#+30
   \   00000044   0170               STRB     R1,[R0, #+0]
  11454                     Button(LabelButt,34,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   1320               MOVS     R0,#+19
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   1323               MOVS     R3,#+19
   \   0000004E   0322               MOVS     R2,#+3
   \   00000050   2221               MOVS     R1,#+34
   \   00000052   02A8               ADD      R0,SP,#+8
   \   00000054   ........           BL       Button
   \   00000058   02B0               ADD      SP,SP,#+8
  11455                     LabelButt[0]=31;
   \   0000005A   6846               MOV      R0,SP
   \   0000005C   1F21               MOVS     R1,#+31
   \   0000005E   0170               STRB     R1,[R0, #+0]
  11456                     Button(LabelButt,13,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   1320               MOVS     R0,#+19
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   1323               MOVS     R3,#+19
   \   00000068   0322               MOVS     R2,#+3
   \   0000006A   0D21               MOVS     R1,#+13
   \   0000006C   02A8               ADD      R0,SP,#+8
   \   0000006E   ........           BL       Button
   \   00000072   02B0               ADD      SP,SP,#+8
  11457                      V_line(1,2,125,1); // (char X, int Y, char lenght, char typ)
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   7D22               MOVS     R2,#+125
   \   00000078   0221               MOVS     R1,#+2
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   ........           BL       V_line
  11458                      
  11459                }//_______________________________________________________________________ 
   \   00000080   02B0               ADD      SP,SP,#+8
   \   00000082   10BC               POP      {R4}
   \   00000084   01BC               POP      {R0}
   \   00000086   0047               BX       R0               ;; return
   \                     ??ZmienneDwustanowe_Paint_0:
   \   00000088   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000008C   ........           DC32     g_leng
   \   00000090   7D0A0000           DC32     0xa7d
   \   00000094   ........           DC32     Speech
  11460          
  11461          
  11462          
  11463          
  11464                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11465                void ZmienneDwustanowe_Event(void)
  11466                {
   \                     ZmienneDwustanowe_Event:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
  11467                  int ans;
  11468          
  11469                 
  11470                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   2E48               LDR      R0,??ZmienneDwustanowe_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   2D48               LDR      R0,??ZmienneDwustanowe_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   2D48               LDR      R0,??ZmienneDwustanowe_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   2C48               LDR      R0,??ZmienneDwustanowe_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  11471            
  11472                  char Repaint=0;
   \   0000002C   0024               MOVS     R4,#+0
  11473          
  11474                  
  11475                  
  11476                  if (ans)
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   0DD0               BEQ      ??ZmienneDwustanowe_Event_1
  11477                    {
  11478                    if (ans<0) {
   \   00000032   0028               CMP      R0,#+0
   \   00000034   3ED5               BPL      ??ZmienneDwustanowe_Event_2
  11479                      
  11480                      
  11481                      ZM_OFFSET=0;
   \   00000036   2848               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0170               STRB     R1,[R0, #+0]
  11482                      MenuLevel=(MenuLevel/100);
   \   0000003C   2748               LDR      R0,??ZmienneDwustanowe_Event_0+0x14  ;; MenuLevel
   \   0000003E   0068               LDR      R0,[R0, #+0]
   \   00000040   6421               MOVS     R1,#+100
   \   00000042   ........           BL       __aeabi_idivmod
   \   00000046   2549               LDR      R1,??ZmienneDwustanowe_Event_0+0x14  ;; MenuLevel
   \   00000048   0860               STR      R0,[R1, #+0]
  11483          
  11484                       Repaint=1;
   \   0000004A   0124               MOVS     R4,#+1
   \   0000004C   32E0               B        ??ZmienneDwustanowe_Event_2
  11485          
  11486                    }
  11487                    
  11488                    }else{
  11489                        
  11490                        char LabelButt[2];
  11491                        LabelButt[1]=0;
   \                     ??ZmienneDwustanowe_Event_1:
   \   0000004E   6846               MOV      R0,SP
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   4170               STRB     R1,[R0, #+1]
  11492                        LabelButt[0]=30;
   \   00000054   6846               MOV      R0,SP
   \   00000056   1E21               MOVS     R1,#+30
   \   00000058   0170               STRB     R1,[R0, #+0]
  11493                        if (Button(LabelButt,34,3,19,19)==2)
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   1320               MOVS     R0,#+19
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   1323               MOVS     R3,#+19
   \   00000062   0322               MOVS     R2,#+3
   \   00000064   2221               MOVS     R1,#+34
   \   00000066   02A8               ADD      R0,SP,#+8
   \   00000068   ........           BL       Button
   \   0000006C   02B0               ADD      SP,SP,#+8
   \   0000006E   0228               CMP      R0,#+2
   \   00000070   08D1               BNE      ??ZmienneDwustanowe_Event_3
  11494                        {
  11495                           if (ZM_OFFSET>0) ZM_OFFSET--;
   \   00000072   1948               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000074   0078               LDRB     R0,[R0, #+0]
   \   00000076   0128               CMP      R0,#+1
   \   00000078   04D3               BCC      ??ZmienneDwustanowe_Event_3
   \   0000007A   1748               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   0000007C   1649               LDR      R1,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   0000007E   0978               LDRB     R1,[R1, #+0]
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   0170               STRB     R1,[R0, #+0]
  11496                        }
  11497                        LabelButt[0]=31;
   \                     ??ZmienneDwustanowe_Event_3:
   \   00000084   6846               MOV      R0,SP
   \   00000086   1F21               MOVS     R1,#+31
   \   00000088   0170               STRB     R1,[R0, #+0]
  11498                        if (Button(LabelButt,13,3,19,19)==2) 
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   1320               MOVS     R0,#+19
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   1323               MOVS     R3,#+19
   \   00000092   0322               MOVS     R2,#+3
   \   00000094   0D21               MOVS     R1,#+13
   \   00000096   02A8               ADD      R0,SP,#+8
   \   00000098   ........           BL       Button
   \   0000009C   02B0               ADD      SP,SP,#+8
   \   0000009E   0228               CMP      R0,#+2
   \   000000A0   08D1               BNE      ??ZmienneDwustanowe_Event_2
  11499                        {  
  11500                          if (ZM_OFFSET<99-8) ZM_OFFSET++;
   \   000000A2   0D48               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   000000A4   0078               LDRB     R0,[R0, #+0]
   \   000000A6   5B28               CMP      R0,#+91
   \   000000A8   04D2               BCS      ??ZmienneDwustanowe_Event_2
   \   000000AA   0B48               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   000000AC   0A49               LDR      R1,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   000000AE   0978               LDRB     R1,[R1, #+0]
   \   000000B0   491C               ADDS     R1,R1,#+1
   \   000000B2   0170               STRB     R1,[R0, #+0]
  11501                        }
  11502                      
  11503                    } 
  11504                  
  11505                    if (Repaint) MenuPaint();
   \                     ??ZmienneDwustanowe_Event_2:
   \   000000B4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000B6   240E               LSRS     R4,R4,#+24
   \   000000B8   002C               CMP      R4,#+0
   \   000000BA   01D0               BEQ      ??ZmienneDwustanowe_Event_4
   \   000000BC   ........           BL       MenuPaint
  11506                  
  11507                  
  11508                }//_______________________________________________________________________
   \                     ??ZmienneDwustanowe_Event_4:
   \   000000C0   02B0               ADD      SP,SP,#+8
   \   000000C2   10BC               POP      {R4}
   \   000000C4   01BC               POP      {R0}
   \   000000C6   0047               BX       R0               ;; return
   \                     ??ZmienneDwustanowe_Event_0:
   \   000000C8   ........           DC32     Y_down
   \   000000CC   ........           DC32     X_down
   \   000000D0   ........           DC32     Y_up
   \   000000D4   ........           DC32     X_up
   \   000000D8   ........           DC32     ZM_OFFSET
   \   000000DC   ........           DC32     MenuLevel
  11509                
  11510                
  11511                
  11512                
  11513                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11514                void ZmienneDwustanowe_Repaint(void)
  11515                {
   \                     ZmienneDwustanowe_Repaint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
  11516          
  11517          
  11518                       char PozY=99;
   \   00000002   6324               MOVS     R4,#+99
  11519                       for (char i=0; i<8; i++)
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   6BE0               B        ??ZmienneDwustanowe_Repaint_0
  11520                       {
  11521                          char Txt[6]="b";
   \                     ??ZmienneDwustanowe_Repaint_1:
   \   00000008   6846               MOV      R0,SP
   \   0000000A   3949               LDR      R1,??ZmienneDwustanowe_Repaint_2  ;; `?<Constant "b">`
   \   0000000C   0CC9               LDM      R1!,{R2,R3}
   \   0000000E   0CC0               STM      R0!,{R2,R3}
   \   00000010   0839               SUBS     R1,R1,#+8
   \   00000012   0838               SUBS     R0,R0,#+8
  11522                          
  11523                         CharToStr(i+ZM_OFFSET, &Txt[1], 2);
   \   00000014   0222               MOVS     R2,#+2
   \   00000016   6946               MOV      R1,SP
   \   00000018   491C               ADDS     R1,R1,#+1
   \   0000001A   3648               LDR      R0,??ZmienneDwustanowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   0000001C   0078               LDRB     R0,[R0, #+0]
   \   0000001E   2818               ADDS     R0,R5,R0
   \   00000020   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000022   000E               LSRS     R0,R0,#+24
   \   00000024   ........           BL       CharToStr
  11524                         Label(Txt,0,2,PozY-(11*i)+1,3,15,1,127,1);  
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0F21               MOVS     R1,#+15
   \   00000036   0320               MOVS     R0,#+3
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000003C   240E               LSRS     R4,R4,#+24
   \   0000003E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000040   2D0E               LSRS     R5,R5,#+24
   \   00000042   0B20               MOVS     R0,#+11
   \   00000044   6843               MULS     R0,R5,R0
   \   00000046   231A               SUBS     R3,R4,R0
   \   00000048   5B1C               ADDS     R3,R3,#+1
   \   0000004A   0222               MOVS     R2,#+2
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   06A8               ADD      R0,SP,#+24
   \   00000050   ........           BL       Label
   \   00000054   06B0               ADD      SP,SP,#+24
  11525          
  11526                         //char IlLiter=sIntToStr( MainStage.StageI[CurrentNode].Value[i], &(Txt[0])); //(char Value, char *Vstring, char ill);
  11527                         
  11528                          
  11529                         char IlLiter=CharToStr((Variables[((i+ZM_OFFSET)/8)]>>((i+ZM_OFFSET)%8)) &0x1, Txt, 1);
   \   00000056   0122               MOVS     R2,#+1
   \   00000058   6946               MOV      R1,SP
   \   0000005A   02B5               PUSH     {R1,LR}
   \   0000005C   1600               MOVS     R6,R2
   \   0000005E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000060   2D0E               LSRS     R5,R5,#+24
   \   00000062   2448               LDR      R0,??ZmienneDwustanowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   00000064   0078               LDRB     R0,[R0, #+0]
   \   00000066   2818               ADDS     R0,R5,R0
   \   00000068   0821               MOVS     R1,#+8
   \   0000006A   ........           BL       __aeabi_idivmod
   \   0000006E   2249               LDR      R1,??ZmienneDwustanowe_Repaint_2+0x8  ;; Variables
   \   00000070   0F5C               LDRB     R7,[R1, R0]
   \   00000072   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000074   2D0E               LSRS     R5,R5,#+24
   \   00000076   1F48               LDR      R0,??ZmienneDwustanowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   00000078   0078               LDRB     R0,[R0, #+0]
   \   0000007A   2818               ADDS     R0,R5,R0
   \   0000007C   0821               MOVS     R1,#+8
   \   0000007E   ........           BL       __aeabi_idivmod
   \   00000082   0F41               ASRS     R7,R7,R1
   \   00000084   0120               MOVS     R0,#+1
   \   00000086   3840               ANDS     R0,R0,R7
   \   00000088   3200               MOVS     R2,R6
   \   0000008A   0099               LDR      R1,[SP, #0]
   \   0000008C   02B0               ADD      SP,SP,#+8
   \   0000008E   ........           BL       CharToStr
   \   00000092   0200               MOVS     R2,R0
  11530                         Label(Txt,0,25,PozY-(11*i)+1,IlLiter,35,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   7F21               MOVS     R1,#+127
   \   0000009C   0120               MOVS     R0,#+1
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   2321               MOVS     R1,#+35
   \   000000A2   1000               MOVS     R0,R2
   \   000000A4   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A6   000E               LSRS     R0,R0,#+24
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000AC   240E               LSRS     R4,R4,#+24
   \   000000AE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B0   2D0E               LSRS     R5,R5,#+24
   \   000000B2   0B20               MOVS     R0,#+11
   \   000000B4   6843               MULS     R0,R5,R0
   \   000000B6   231A               SUBS     R3,R4,R0
   \   000000B8   5B1C               ADDS     R3,R3,#+1
   \   000000BA   1922               MOVS     R2,#+25
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   06A8               ADD      R0,SP,#+24
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
  11531                         
  11532                         H_line(0,PozY-(11*i),63,1); // (char X, int Y, char lenght, char typ)
   \   000000C6   0123               MOVS     R3,#+1
   \   000000C8   3F22               MOVS     R2,#+63
   \   000000CA   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000CC   240E               LSRS     R4,R4,#+24
   \   000000CE   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000D0   2D0E               LSRS     R5,R5,#+24
   \   000000D2   0B20               MOVS     R0,#+11
   \   000000D4   6843               MULS     R0,R5,R0
   \   000000D6   211A               SUBS     R1,R4,R0
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   ........           BL       H_line
  11533                       }
   \   000000DE   6D1C               ADDS     R5,R5,#+1
   \                     ??ZmienneDwustanowe_Repaint_0:
   \   000000E0   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000E2   2D0E               LSRS     R5,R5,#+24
   \   000000E4   082D               CMP      R5,#+8
   \   000000E6   8FD3               BCC      ??ZmienneDwustanowe_Repaint_1
  11534             
  11535          
  11536               
  11537                  
  11538                }//_______________________________________________________________________
   \   000000E8   03B0               ADD      SP,SP,#+12
   \   000000EA   F0BC               POP      {R4-R7}
   \   000000EC   01BC               POP      {R0}
   \   000000EE   0047               BX       R0               ;; return
   \                     ??ZmienneDwustanowe_Repaint_2:
   \   000000F0   ........           DC32     `?<Constant "b">`
   \   000000F4   ........           DC32     ZM_OFFSET
   \   000000F8   ........           DC32     Variables
  11539          
  11540          
  11541           
  11542             
  11543          //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11544                void ZmienneAnalogowe_Paint(void)
  11545                {  
   \                     ZmienneAnalogowe_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
  11546          
  11547                      List_Paint(Speech[g_leng].ZmAnalog,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   1CA0               ADR      R0,??ZmienneAnalogowe_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   1948               LDR      R0,??ZmienneAnalogowe_Paint_0+0x4  ;; g_leng
   \   00000028   0068               LDR      R0,[R0, #+0]
   \   0000002A   194C               LDR      R4,??ZmienneAnalogowe_Paint_0+0x8  ;; 0xa7d
   \   0000002C   6043               MULS     R0,R4,R0
   \   0000002E   194C               LDR      R4,??ZmienneAnalogowe_Paint_0+0xC  ;; Speech
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   0F30               ADDS     R0,R0,#+15
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
  11548                      
  11549                      
  11550                     char LabelButt[2];
  11551                     LabelButt[1]=0;
   \   0000003A   6846               MOV      R0,SP
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   4170               STRB     R1,[R0, #+1]
  11552                     LabelButt[0]=30;
   \   00000040   6846               MOV      R0,SP
   \   00000042   1E21               MOVS     R1,#+30
   \   00000044   0170               STRB     R1,[R0, #+0]
  11553                     Button(LabelButt,34,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   1320               MOVS     R0,#+19
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   1323               MOVS     R3,#+19
   \   0000004E   0322               MOVS     R2,#+3
   \   00000050   2221               MOVS     R1,#+34
   \   00000052   02A8               ADD      R0,SP,#+8
   \   00000054   ........           BL       Button
   \   00000058   02B0               ADD      SP,SP,#+8
  11554                     LabelButt[0]=31;
   \   0000005A   6846               MOV      R0,SP
   \   0000005C   1F21               MOVS     R1,#+31
   \   0000005E   0170               STRB     R1,[R0, #+0]
  11555                     Button(LabelButt,13,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   1320               MOVS     R0,#+19
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   1323               MOVS     R3,#+19
   \   00000068   0322               MOVS     R2,#+3
   \   0000006A   0D21               MOVS     R1,#+13
   \   0000006C   02A8               ADD      R0,SP,#+8
   \   0000006E   ........           BL       Button
   \   00000072   02B0               ADD      SP,SP,#+8
  11556                      V_line(1,2,125,1); // (char X, int Y, char lenght, char typ)
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   7D22               MOVS     R2,#+125
   \   00000078   0221               MOVS     R1,#+2
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   ........           BL       V_line
  11557                      
  11558                }//_______________________________________________________________________ 
   \   00000080   02B0               ADD      SP,SP,#+8
   \   00000082   10BC               POP      {R4}
   \   00000084   01BC               POP      {R0}
   \   00000086   0047               BX       R0               ;; return
   \                     ??ZmienneAnalogowe_Paint_0:
   \   00000088   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000008C   ........           DC32     g_leng
   \   00000090   7D0A0000           DC32     0xa7d
   \   00000094   ........           DC32     Speech
  11559          
  11560          
  11561          
  11562          
  11563                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11564                void ZmienneAnalogowe_Event(void)
  11565                {
   \                     ZmienneAnalogowe_Event:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
  11566                  int ans;
  11567          
  11568                 
  11569                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   2E48               LDR      R0,??ZmienneAnalogowe_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   2D48               LDR      R0,??ZmienneAnalogowe_Event_0+0x4  ;; X_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   2D48               LDR      R0,??ZmienneAnalogowe_Event_0+0x8  ;; Y_up
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   2C48               LDR      R0,??ZmienneAnalogowe_Event_0+0xC  ;; X_up
   \   00000022   0024               MOVS     R4,#+0
   \   00000024   005F               LDRSH    R0,[R0, R4]
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
  11570            
  11571                  char Repaint=0;
   \   0000002C   0024               MOVS     R4,#+0
  11572          
  11573                  
  11574                  
  11575                  if (ans)
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   0DD0               BEQ      ??ZmienneAnalogowe_Event_1
  11576                    {
  11577                    if (ans<0) {
   \   00000032   0028               CMP      R0,#+0
   \   00000034   3ED5               BPL      ??ZmienneAnalogowe_Event_2
  11578                      
  11579                      
  11580                      ZM_OFFSET=0;
   \   00000036   2848               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0170               STRB     R1,[R0, #+0]
  11581                      MenuLevel=(MenuLevel/100);
   \   0000003C   2748               LDR      R0,??ZmienneAnalogowe_Event_0+0x14  ;; MenuLevel
   \   0000003E   0068               LDR      R0,[R0, #+0]
   \   00000040   6421               MOVS     R1,#+100
   \   00000042   ........           BL       __aeabi_idivmod
   \   00000046   2549               LDR      R1,??ZmienneAnalogowe_Event_0+0x14  ;; MenuLevel
   \   00000048   0860               STR      R0,[R1, #+0]
  11582          
  11583                       Repaint=1;
   \   0000004A   0124               MOVS     R4,#+1
   \   0000004C   32E0               B        ??ZmienneAnalogowe_Event_2
  11584          
  11585                    }
  11586                    
  11587                    }else{
  11588                        
  11589                        char LabelButt[2];
  11590                        LabelButt[1]=0;
   \                     ??ZmienneAnalogowe_Event_1:
   \   0000004E   6846               MOV      R0,SP
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   4170               STRB     R1,[R0, #+1]
  11591                        LabelButt[0]=30;
   \   00000054   6846               MOV      R0,SP
   \   00000056   1E21               MOVS     R1,#+30
   \   00000058   0170               STRB     R1,[R0, #+0]
  11592                        if (Button(LabelButt,34,3,19,19)==2)
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   1320               MOVS     R0,#+19
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   1323               MOVS     R3,#+19
   \   00000062   0322               MOVS     R2,#+3
   \   00000064   2221               MOVS     R1,#+34
   \   00000066   02A8               ADD      R0,SP,#+8
   \   00000068   ........           BL       Button
   \   0000006C   02B0               ADD      SP,SP,#+8
   \   0000006E   0228               CMP      R0,#+2
   \   00000070   08D1               BNE      ??ZmienneAnalogowe_Event_3
  11593                        {
  11594                           if (ZM_OFFSET>0) ZM_OFFSET--;
   \   00000072   1948               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000074   0078               LDRB     R0,[R0, #+0]
   \   00000076   0128               CMP      R0,#+1
   \   00000078   04D3               BCC      ??ZmienneAnalogowe_Event_3
   \   0000007A   1748               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   0000007C   1649               LDR      R1,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   0000007E   0978               LDRB     R1,[R1, #+0]
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   0170               STRB     R1,[R0, #+0]
  11595                        }
  11596                        LabelButt[0]=31;
   \                     ??ZmienneAnalogowe_Event_3:
   \   00000084   6846               MOV      R0,SP
   \   00000086   1F21               MOVS     R1,#+31
   \   00000088   0170               STRB     R1,[R0, #+0]
  11597                        if (Button(LabelButt,13,3,19,19)==2) 
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   1320               MOVS     R0,#+19
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   1323               MOVS     R3,#+19
   \   00000092   0322               MOVS     R2,#+3
   \   00000094   0D21               MOVS     R1,#+13
   \   00000096   02A8               ADD      R0,SP,#+8
   \   00000098   ........           BL       Button
   \   0000009C   02B0               ADD      SP,SP,#+8
   \   0000009E   0228               CMP      R0,#+2
   \   000000A0   08D1               BNE      ??ZmienneAnalogowe_Event_2
  11598                        {  
  11599                          if (ZM_OFFSET<20-8) ZM_OFFSET++;
   \   000000A2   0D48               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   000000A4   0078               LDRB     R0,[R0, #+0]
   \   000000A6   0C28               CMP      R0,#+12
   \   000000A8   04D2               BCS      ??ZmienneAnalogowe_Event_2
   \   000000AA   0B48               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   000000AC   0A49               LDR      R1,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   000000AE   0978               LDRB     R1,[R1, #+0]
   \   000000B0   491C               ADDS     R1,R1,#+1
   \   000000B2   0170               STRB     R1,[R0, #+0]
  11600                        }
  11601                      
  11602                    } 
  11603                  
  11604                    if (Repaint) MenuPaint();
   \                     ??ZmienneAnalogowe_Event_2:
   \   000000B4   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000B6   240E               LSRS     R4,R4,#+24
   \   000000B8   002C               CMP      R4,#+0
   \   000000BA   01D0               BEQ      ??ZmienneAnalogowe_Event_4
   \   000000BC   ........           BL       MenuPaint
  11605                  
  11606                  
  11607                }//_______________________________________________________________________
   \                     ??ZmienneAnalogowe_Event_4:
   \   000000C0   02B0               ADD      SP,SP,#+8
   \   000000C2   10BC               POP      {R4}
   \   000000C4   01BC               POP      {R0}
   \   000000C6   0047               BX       R0               ;; return
   \                     ??ZmienneAnalogowe_Event_0:
   \   000000C8   ........           DC32     Y_down
   \   000000CC   ........           DC32     X_down
   \   000000D0   ........           DC32     Y_up
   \   000000D4   ........           DC32     X_up
   \   000000D8   ........           DC32     ZM_OFFSET
   \   000000DC   ........           DC32     MenuLevel
  11608                
  11609                
  11610                
  11611                
  11612                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11613                void ZmienneAnalogowe_Repaint(void)
  11614                {
   \                     ZmienneAnalogowe_Repaint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
  11615          
  11616                       char IlLiter;
  11617                       char PozY=99;
   \   00000002   6324               MOVS     R4,#+99
  11618                       for (char i=0; i<8; i++)
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   59E0               B        ??ZmienneAnalogowe_Repaint_0
  11619                       {
  11620                          char Txt[6]="a";
   \                     ??ZmienneAnalogowe_Repaint_1:
   \   00000008   6846               MOV      R0,SP
   \   0000000A   3049               LDR      R1,??ZmienneAnalogowe_Repaint_2  ;; `?<Constant "a">`
   \   0000000C   0CC9               LDM      R1!,{R2,R3}
   \   0000000E   0CC0               STM      R0!,{R2,R3}
   \   00000010   0839               SUBS     R1,R1,#+8
   \   00000012   0838               SUBS     R0,R0,#+8
  11621                          
  11622                         CharToStr(i+ZM_OFFSET, &Txt[1], 2);
   \   00000014   0222               MOVS     R2,#+2
   \   00000016   6946               MOV      R1,SP
   \   00000018   491C               ADDS     R1,R1,#+1
   \   0000001A   2D48               LDR      R0,??ZmienneAnalogowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   0000001C   0078               LDRB     R0,[R0, #+0]
   \   0000001E   2818               ADDS     R0,R5,R0
   \   00000020   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000022   000E               LSRS     R0,R0,#+24
   \   00000024   ........           BL       CharToStr
  11623                         Label(Txt,0,2,PozY-(11*i)+1,3,15,1,127,1);  
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0F21               MOVS     R1,#+15
   \   00000036   0320               MOVS     R0,#+3
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000003C   240E               LSRS     R4,R4,#+24
   \   0000003E   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000040   2D0E               LSRS     R5,R5,#+24
   \   00000042   0B20               MOVS     R0,#+11
   \   00000044   6843               MULS     R0,R5,R0
   \   00000046   231A               SUBS     R3,R4,R0
   \   00000048   5B1C               ADDS     R3,R3,#+1
   \   0000004A   0222               MOVS     R2,#+2
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   06A8               ADD      R0,SP,#+24
   \   00000050   ........           BL       Label
   \   00000054   06B0               ADD      SP,SP,#+24
  11624          
  11625                         IlLiter=sIntToStr( VariablesAnal[i+ZM_OFFSET], &(Txt[0])); //(char Value, char *Vstring, char ill);
   \   00000056   6946               MOV      R1,SP
   \   00000058   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000005A   2D0E               LSRS     R5,R5,#+24
   \   0000005C   1C48               LDR      R0,??ZmienneAnalogowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   0000005E   0078               LDRB     R0,[R0, #+0]
   \   00000060   2818               ADDS     R0,R5,R0
   \   00000062   0222               MOVS     R2,#+2
   \   00000064   5043               MULS     R0,R2,R0
   \   00000066   1B4A               LDR      R2,??ZmienneAnalogowe_Repaint_2+0x8  ;; VariablesAnal
   \   00000068   105E               LDRSH    R0,[R2, R0]
   \   0000006A   ........           BL       sIntToStr
   \   0000006E   0200               MOVS     R2,R0
  11626          
  11627                         Label(Txt,0,25,PozY-(11*i)+1,IlLiter,35,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   7F21               MOVS     R1,#+127
   \   00000078   0120               MOVS     R0,#+1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   2321               MOVS     R1,#+35
   \   0000007E   1000               MOVS     R0,R2
   \   00000080   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000082   000E               LSRS     R0,R0,#+24
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000088   240E               LSRS     R4,R4,#+24
   \   0000008A   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000008C   2D0E               LSRS     R5,R5,#+24
   \   0000008E   0B20               MOVS     R0,#+11
   \   00000090   6843               MULS     R0,R5,R0
   \   00000092   231A               SUBS     R3,R4,R0
   \   00000094   5B1C               ADDS     R3,R3,#+1
   \   00000096   1922               MOVS     R2,#+25
   \   00000098   0021               MOVS     R1,#+0
   \   0000009A   06A8               ADD      R0,SP,#+24
   \   0000009C   ........           BL       Label
   \   000000A0   06B0               ADD      SP,SP,#+24
  11628                         
  11629                         H_line(0,PozY-(11*i),63,1); // (char X, int Y, char lenght, char typ)
   \   000000A2   0123               MOVS     R3,#+1
   \   000000A4   3F22               MOVS     R2,#+63
   \   000000A6   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A8   240E               LSRS     R4,R4,#+24
   \   000000AA   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000AC   2D0E               LSRS     R5,R5,#+24
   \   000000AE   0B20               MOVS     R0,#+11
   \   000000B0   6843               MULS     R0,R5,R0
   \   000000B2   211A               SUBS     R1,R4,R0
   \   000000B4   0020               MOVS     R0,#+0
   \   000000B6   ........           BL       H_line
  11630                       }
   \   000000BA   6D1C               ADDS     R5,R5,#+1
   \                     ??ZmienneAnalogowe_Repaint_0:
   \   000000BC   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000BE   2D0E               LSRS     R5,R5,#+24
   \   000000C0   082D               CMP      R5,#+8
   \   000000C2   A1D3               BCC      ??ZmienneAnalogowe_Repaint_1
  11631             
  11632          
  11633               
  11634                  
  11635                }//_______________________________________________________________________
   \   000000C4   03B0               ADD      SP,SP,#+12
   \   000000C6   30BC               POP      {R4,R5}
   \   000000C8   01BC               POP      {R0}
   \   000000CA   0047               BX       R0               ;; return
   \                     ??ZmienneAnalogowe_Repaint_2:
   \   000000CC   ........           DC32     `?<Constant "a">`
   \   000000D0   ........           DC32     ZM_OFFSET
   \   000000D4   ........           DC32     VariablesAnal

   \                                 In section .rodata, align 4
   \   00000000   00                 DC8 ""
   \   00000001   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Info ">`:
   \   00000000   496E666F2000       DC8 "Info "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Max=">`:
   \   00000000   4D61783D00         DC8 "Max="
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+/- 3000 ">`:
   \   00000000   2B2F2D203330       DC8 "+/- 3000 "
   \              30302000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Restart">`:
   \   00000000   526573746172       DC8 "Restart"
   \              7400        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Firmware: ">`:
   \   00000000   4669726D7761       DC8 "Firmware: "
   \              72653A2000  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Administrator">`:
   \   00000000   41646D696E69       DC8 "Administrator"
   \              73747261746F
   \              7200        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Checking Wi-Fi">`:
   \   00000000   436865636B69       DC8 "Checking Wi-Fi"
   \              6E672057692D
   \              466900      
   \   0000000F   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2000               DC8 " "
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant " INFO ">`:
   \   00000000   20494E464F20       DC8 " INFO "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  

   \                                 In section .rodata, align 4
   \                     `?<Constant {{240, 28, 230, 250, 251, 253, 253,`:
   \   00000000   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   0000000F   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_1`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 248, 152, 124, 180, 22`:
   \   00000000   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   00000011   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  

   \                                 In section .rodata, align 4
   \                     `?<Constant {{240, 28, 230, 250, 251, 253, 253,_1`:
   \   00000000   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   0000000F   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant {{128, 192, 192, 128, 128, 224, 128`:
   \   00000000   80C0C08080E0       DC8 128, 192, 192, 128, 128, 224, 128, 224, 128, 224, 128, 128, 128
   \              80E080E08080
   \              80          
   \   0000000D   808080800003       DC8 128, 128, 128, 128, 0, 3, 7, 7, 3, 3, 3, 3, 3, 2, 2, 2, 14, 2, 14
   \              070703030303
   \              030202020E02
   \              0E          
   \   00000020   020E02010000       DC8 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000036   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto">`:
   \   00000000   4175746F00         DC8 "Auto"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto off">`:
   \   00000000   4175746F206F       DC8 "Auto off"
   \              666600      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto on">`:
   \   00000000   4175746F206F       DC8 "Auto on"
   \              6E00        

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>`:
   \   00000000   82000000           DC8 130, 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2D00               DC8 "-"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   2B00               DC8 "+"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>_1`:
   \   00000000   82000000           DC8 130, 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3A00               DC8 ":"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `:
   \   00000000   00F0FC7F8FF3       DC8 0, 240, 252, 127, 143, 243, 251, 251, 251, 227, 131, 3, 7, 15, 14
   \              FBFBFBE38303
   \              070F0E      
   \   0000000F   1E3C78F0E0C0       DC8 30, 60, 120, 240, 224, 192, 128, 0, 0, 0, 128, 192, 224, 240, 112
   \              8000000080C0
   \              E0F070      
   \   0000001E   389CCEEF7703       DC8 56, 156, 206, 239, 119, 3, 3, 3, 227, 255, 255, 31, 7, 31, 254, 252
   \              0303E3FFFF1F
   \              071FFEFC    
   \   0000002E   FCFFFF00FFFF       DC8 252, 255, 255, 0, 255, 255, 255, 255, 255, 255, 255, 254, 248, 48
   \              FFFFFFFFFFFE
   \              F830        
   \   0000003C   300000000001       DC8 48, 0, 0, 0, 0, 1, 3, 39, 183, 182, 183, 183, 123, 253, 254, 254
   \              0327B7B6B7B7
   \              7BFDFEFE    
   \   0000004C   FFFFFF010000       DC8 255, 255, 255, 1, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 255, 255, 1, 63
   \              0000FFFF0000
   \              0000FFFF013F
   \   0000005E   FFF8C73F7F7F       DC8 255, 248, 199, 63, 127, 127, 127, 31, 7, 1, 128, 128, 192, 224, 240
   \              7F1F07018080
   \              C0E0F0      
   \   0000006D   783C1E0F0703       DC8 120, 60, 30, 15, 7, 3, 3, 3, 7, 15, 30, 61, 123, 247, 239, 223, 158
   \              0303070F1E3D
   \              7BF7EFDF9E  
   \   0000007E   B00000001FFF       DC8 176, 0, 0, 0, 31, 255, 252, 192, 128, 224, 255, 255, 0, 0, 1, 3, 3
   \              FCC080E0FFFF
   \              0000010303  
   \   0000008F   070707070707       DC8 7, 7, 7, 7, 7, 7, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              030303010100
   \              000000000000
   \              0000000000  
   \   000000A6   000000000103       DC8 0, 0, 0, 0, 1, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 3, 1, 0
   \              030303070707
   \              070707030100

   \                                 In section .rodata, align 4
   \                     `?<Constant "MENU">`:
   \   00000000   4D454E5500         DC8 "MENU"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Program ">`:
   \   00000000   50726F677261       DC8 "Program "
   \              6D2000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   5800               DC8 "X"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   4300               DC8 "C"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4500               DC8 "E"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   7300               DC8 "s"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Const. ">`:
   \   00000000   436F6E73742E       DC8 "Const. "
   \              2000        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Get reg.">`:
   \   00000000   476574207265       DC8 "Get reg."
   \              672E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Set reg.">`:
   \   00000000   536574207265       DC8 "Set reg."
   \              672E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "1>2 Q=1">`:
   \   00000000   313E3220513D       DC8 "1>2 Q=1"
   \              3100        

   \                                 In section .rodata, align 4
   \                     `?<Constant "1=2 Q=1">`:
   \   00000000   313D3220513D       DC8 "1=2 Q=1"
   \              3100        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Q=1+2">`:
   \   00000000   513D312B3200       DC8 "Q=1+2"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Q=1-2">`:
   \   00000000   513D312D3200       DC8 "Q=1-2"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Q=1x2">`:
   \   00000000   513D31783200       DC8 "Q=1x2"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Q=1/2">`:
   \   00000000   513D312F3200       DC8 "Q=1/2"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E2000             DC8 "> "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3C2000             DC8 "< "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Reg:">`:
   \   00000000   5265673A00         DC8 "Reg:"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2E00               DC8 "."
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3000               DC8 "0"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4F6B2000           DC8 "Ok "

   \                                 In section .rodata, align 4
   \   00000000   432000             DC8 "C "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3F00               DC8 "?"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Alarm">`:
   \   00000000   416C61726D00       DC8 "Alarm"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {78, 114, 46, 58, 0}>`:
   \   00000000   4E722E3A0000       DC8 78, 114, 46, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Therm set ">`:
   \   00000000   546865726D20       DC8 "Therm set "
   \              7365742000  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   56617200           DC8 "Var"

   \                                 In section .rodata, align 4
   \                     `?<Constant "Actor">`:
   \   00000000   4163746F7200       DC8 "Actor"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2D316800           DC8 "-1h"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "Scn ">`:
   \   00000000   53636E2000         DC8 "Scn "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>`:
   \   00000000   81000000           DC8 129, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Analo. ">`:
   \   00000000   416E616C6F2E       DC8 "Analo. "
   \              2000        

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>_1`:
   \   00000000   81000000           DC8 129, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {78, 114, 58, 0, 0}>`:
   \   00000000   4E723A000000       DC8 78, 114, 58, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Temeper.">`:
   \   00000000   54656D657065       DC8 "Temeper."
   \              722E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Node ID:">`:
   \   00000000   4E6F64652049       DC8 "Node ID:"
   \              443A00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Text">`:
   \   00000000   5465787400         DC8 "Text"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Val ">`:
   \   00000000   56616C2000         DC8 "Val "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "...... ">`:
   \   00000000   2E2E2E2E2E2E       DC8 "...... "
   \              2000        

   \                                 In section .rodata, align 4
   \                     `?<Constant "+On/Off">`:
   \   00000000   2B4F6E2F4F66       DC8 "+On/Off"
   \              6600        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Text ">`:
   \   00000000   546578742000       DC8 "Text "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3C00               DC8 "<"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E00               DC8 ">"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2E2E2E00           DC8 "..."

   \                                 In section .rodata, align 4
   \                     `?<Constant "Analog ">`:
   \   00000000   416E616C6F67       DC8 "Analog "
   \              2000        

   \                                 In section .rodata, align 4
   \   00000000   3C3E00             DC8 "<>"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Analog">`:
   \   00000000   416E616C6F67       DC8 "Analog"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Tester">`:
   \   00000000   546573746572       DC8 "Tester"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Zmiana ID">`:
   \   00000000   5A6D69616E61       DC8 "Zmiana ID"
   \              20494400    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "New ID">`:
   \   00000000   4E6577204944       DC8 "New ID"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ID do zmiany">`:
   \   00000000   494420646F20       DC8 "ID do zmiany"
   \              7A6D69616E79
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   256400             DC8 "%d"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ID po zmianie">`:
   \   00000000   494420706F20       DC8 "ID po zmianie"
   \              7A6D69616E69
   \              6500        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Konwertuj">`:
   \   00000000   4B6F6E776572       DC8 "Konwertuj"
   \              74756A00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Konflikt ID">`:
   \   00000000   4B6F6E666C69       DC8 "Konflikt ID"
   \              6B7420494400

   \                                 In section .rodata, align 4
   \                     `?<Constant "po zmianie">`:
   \   00000000   706F207A6D69       DC8 "po zmianie"
   \              616E696500  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Konwersja">`:
   \   00000000   4B6F6E776572       DC8 "Konwersja"
   \              736A6100    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dokonana">`:
   \   00000000   646F6B6F6E61       DC8 "dokonana"
   \              6E6100      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Nawiazywanie">`:
   \   00000000   4E617769617A       DC8 "Nawiazywanie"
   \              7977616E6965
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "polaczenia ">`:
   \   00000000   706F6C61637A       DC8 "polaczenia "
   \              656E69612000

   \                                 In section .rodata, align 4
   \                     `?<Constant "TESTER">`:
   \   00000000   544553544552       DC8 "TESTER"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ID modulu">`:
   \   00000000   4944206D6F64       DC8 "ID modulu"
   \              756C7500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "We/Wy">`:
   \   00000000   57652F577900       DC8 "We/Wy"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "We analog.">`:
   \   00000000   576520616E61       DC8 "We analog."
   \              6C6F672E00  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Test MG1">`:
   \   00000000   54657374204D       DC8 "Test MG1"
   \              473100      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Ode:">`:
   \   00000000   4F64653A00         DC8 "Ode:"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Wys:">`:
   \   00000000   5779733A00         DC8 "Wys:"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Test MR1.">`:
   \   00000000   54657374204D       DC8 "Test MR1."
   \              52312E00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Slave">`:
   \   00000000   536C61766500       DC8 "Slave"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "Jezyk">`:
   \   00000000   4A657A796B00       DC8 "Jezyk"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">_1`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "------------">`:
   \   00000000   2D2D2D2D2D2D       DC8 "------------"
   \              2D2D2D2D2D2D
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000

   \                                 In section .rodata, align 4
   \                     `?<Constant {30}>`:
   \   00000000   1E000000           DC8 30, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "On/off">`:
   \   00000000   4F6E2F6F6666       DC8 "On/off"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3A303000           DC8 ":00"

   \                                 In section .rodata, align 4
   \                     `?<Constant "Mode">`:
   \   00000000   4D6F646500         DC8 "Mode"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Master ">`:
   \   00000000   4D6173746572       DC8 "Master "
   \              2000        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Slave ">`:
   \   00000000   536C61766520       DC8 "Slave "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_9`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   4F4B00             DC8 "OK"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Node ">`:
   \   00000000   4E6F64652000       DC8 "Node "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   49642000           DC8 "Id "

   \                                 In section .rodata, align 4
   \   00000000   78256400           DC8 "x%d"

   \                                 In section .rodata, align 4
   \                     `?<Constant " ID ">`:
   \   00000000   2049442000         DC8 " ID "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Model: ">`:
   \   00000000   4D6F64656C3A       DC8 "Model: "
   \              2000        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Node ID: ">`:
   \   00000000   4E6F64652049       DC8 "Node ID: "
   \              443A2000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Sys. version: ">`:
   \   00000000   5379732E2076       DC8 "Sys. version: "
   \              657273696F6E
   \              3A2000      
   \   0000000F   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Trans. period: ">`:
   \   00000000   5472616E732E       DC8 "Trans. period: "
   \              20706572696F
   \              643A2000    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Thermo">`:
   \   00000000   546865726D6F       DC8 "Thermo"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   543100             DC8 "T1"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   543200             DC8 "T2"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3600               DC8 "6"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   313200             DC8 "12"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   313800             DC8 "18"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   323300             DC8 "23"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 248, 152, 124, 180, 22_1`:
   \   00000000   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   00000011   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  

   \                                 In section .rodata, align 4
   \                     `?<Constant {{240, 28, 230, 250, 251, 253, 253,_2`:
   \   00000000   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   0000000F   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant "Info">`:
   \   00000000   496E666F00         DC8 "Info"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   444900             DC8 "DI"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   444F00             DC8 "DO"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Reason:">`:
   \   00000000   526561736F6E       DC8 "Reason:"
   \              3A00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Unreliable">`:
   \   00000000   556E72656C69       DC8 "Unreliable"
   \              61626C6500  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "data.">`:
   \   00000000   646174612E00       DC8 "data."
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MG1 TEST">`:
   \   00000000   4D4731205445       DC8 "MG1 TEST"
   \              535400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Nowy test">`:
   \   00000000   4E6F77792074       DC8 "Nowy test"
   \              65737400    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Dlugi test">`:
   \   00000000   446C75676920       DC8 "Dlugi test"
   \              7465737400  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   513100             DC8 "Q1"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   496E3100           DC8 "In1"

   \                                 In section .rodata, align 4
   \   00000000   513200             DC8 "Q2"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   496E3200           DC8 "In2"

   \                                 In section .rodata, align 4
   \                     `?<Constant "Blad testu">`:
   \   00000000   426C61642074       DC8 "Blad testu"
   \              6573747500  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Test OK">`:
   \   00000000   54657374204F       DC8 "Test OK"
   \              4B00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Czas t:">`:
   \   00000000   437A61732074       DC8 "Czas t:"
   \              3A00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "%d s">`:
   \   00000000   2564207300         DC8 "%d s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Czas p:">`:
   \   00000000   437A61732070       DC8 "Czas p:"
   \              3A00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "Name:">`:
   \   00000000   4E616D653A00       DC8 "Name:"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "%d.%d">`:
   \   00000000   25642E256400       DC8 "%d.%d"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Soft version:">`:
   \   00000000   536F66742076       DC8 "Soft version:"
   \              657273696F6E
   \              3A00        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Host">`:
   \   00000000   486F737400         DC8 "Host"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Server reset">`:
   \   00000000   536572766572       DC8 "Server reset"
   \              207265736574
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TCP/IP">`:
   \   00000000   5443502F4950       DC8 "TCP/IP"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Not connected">`:
   \   00000000   4E6F7420636F       DC8 "Not connected"
   \              6E6E65637465
   \              6400        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connecting">`:
   \   00000000   436F6E6E6563       DC8 "Connecting"
   \              74696E6700  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connecting .">`:
   \   00000000   436F6E6E6563       DC8 "Connecting ."
   \              74696E67202E
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connecting ..">`:
   \   00000000   436F6E6E6563       DC8 "Connecting .."
   \              74696E67202E
   \              2E00        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connecting ...">`:
   \   00000000   436F6E6E6563       DC8 "Connecting ..."
   \              74696E67202E
   \              2E2E00      
   \   0000000F   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connected">`:
   \   00000000   436F6E6E6563       DC8 "Connected"
   \              74656400    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "........................">`:
   \   00000000   2E2E2E2E2E2E       DC8 "................................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E00    
   \   00000022   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "........................">_1`:
   \   00000000   2E2E2E2E2E2E       DC8 ".................................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E00  
   \   00000023   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Przyklad:\\n   a.bbb.pl...">`:
   \   00000000   50727A796B6C       DC8 50H, 72H, 7AH, 79H, 6BH, 6CH, 61H, 64H
   \              6164        
   \   00000008   3A0A20202061       DC8 3AH, 0AH, 20H, 20H, 20H, 61H, 2EH, 62H
   \              2E62        
   \   00000010   62622E706C2F       DC8 62H, 62H, 2EH, 70H, 6CH, 2FH, 63H, 63H
   \              6363        
   \   00000018   0A0A20446F6D       DC8 0AH, 0AH, 20H, 44H, 6FH, 6DH, 65H, 6EH
   \              656E        
   \   00000020   613A20626262       DC8 61H, 3AH, 20H, 62H, 62H, 62H, 2EH, 70H
   \              2E70        
   \   00000028   6C0A53756264       DC8 6CH, 0AH, 53H, 75H, 62H, 64H, 6FH, 6DH
   \              6F6D        
   \   00000030   656E613A2061       DC8 65H, 6EH, 61H, 3AH, 20H, 61H, 0AH, 20H
   \              0A20        
   \   00000038   536369657A6B       DC8 53H, 63H, 69H, 65H, 7AH, 6BH, 61H, 3AH
   \              613A        
   \   00000040   202F636300         DC8 20H, 2FH, 63H, 63H, 0
   \   00000045   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Przyklad:\\n   a.bbb.pl...">_1`:
   \   00000000   50727A796B6C       DC8 50H, 72H, 7AH, 79H, 6BH, 6CH, 61H, 64H
   \              6164        
   \   00000008   3A0A20202061       DC8 3AH, 0AH, 20H, 20H, 20H, 61H, 2EH, 62H
   \              2E62        
   \   00000010   62622E706C2F       DC8 62H, 62H, 2EH, 70H, 6CH, 2FH, 63H, 63H
   \              6363        
   \   00000018   0A0A20446F6D       DC8 0AH, 0AH, 20H, 44H, 6FH, 6DH, 65H, 6EH
   \              656E        
   \   00000020   613A20626262       DC8 61H, 3AH, 20H, 62H, 62H, 62H, 2EH, 70H
   \              2E70        
   \   00000028   6C0A53756264       DC8 6CH, 0AH, 53H, 75H, 62H, 64H, 6FH, 6DH
   \              6F6D        
   \   00000030   656E613A2061       DC8 65H, 6EH, 61H, 3AH, 20H, 61H, 0AH, 20H
   \              0A20        
   \   00000038   506174683A20       DC8 50H, 61H, 74H, 68H, 3AH, 20H, 2FH, 63H
   \              2F63        
   \   00000040   6300               DC8 63H, 0
   \   00000042   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Ustaw okresowosc pola...">`:
   \   00000000   557374617720       DC8 "Ustaw okresowosc polaczen z serwerem"
   \              6F6B7265736F
   \              776F73632070
   \              6F6C61637A65
   \              6E207A207365
   \              72776572656D
   \              00          
   \   00000025   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Set the periodicity o...">`:
   \   00000000   536574207468       DC8 "Set the periodicity of server connections"
   \              652070657269
   \              6F6469636974
   \              79206F662073
   \              657276657220
   \              636F6E6E6563
   \              74696F6E7300
   \   0000002A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto IP -on">`:
   \   00000000   4175746F2049       DC8 "Auto IP -on"
   \              50202D6F6E00

   \                                 In section .rodata, align 4
   \                     `?<Constant "IP config">`:
   \   00000000   495020636F6E       DC8 "IP config"
   \              66696700    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto IP -off">`:
   \   00000000   4175746F2049       DC8 "Auto IP -off"
   \              50202D6F6666
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Zly adres IP">`:
   \   00000000   5A6C79206164       DC8 "Zly adres IP"
   \              726573204950
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Wrong IP adress">`:
   \   00000000   57726F6E6720       DC8 "Wrong IP adress"
   \              495020616472
   \              65737300    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Zly adres maski ">`:
   \   00000000   5A6C79206164       DC8 "Zly adres maski "
   \              726573206D61
   \              736B692000  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Wrong mask adress">`:
   \   00000000   57726F6E6720       DC8 "Wrong mask adress"
   \              6D61736B2061
   \              647265737300
   \   00000012   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Zly adres bramy ">`:
   \   00000000   5A6C79206164       DC8 "Zly adres bramy "
   \              726573206272
   \              616D792000  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Wrong gateway adress">`:
   \   00000000   57726F6E6720       DC8 "Wrong gateway adress"
   \              676174657761
   \              792061647265
   \              737300      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "IP/TCP">`:
   \   00000000   49502F544350       DC8 "IP/TCP"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3F3F3F00           DC8 "???"

   \                                 In section .rodata, align 4
   \                     `?<Constant "b">`:
   \   00000000   6200               DC8 "b"
   \   00000002   000000000000       DC8 0, 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "a">`:
   \   00000000   6100               DC8 "a"
   \   00000002   000000000000       DC8 0, 0, 0, 0, 0, 0
  11636                
  11637                
  11638                
  11639                   
                          ^
Warning[Pe001]: last line of file ends without a newline

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     AddRow                          8
     AdvanceSet_Event               24
     AdvanceSet_Paint               56
     AlarmPassChange_Event          48
     AlarmPassChange_Paint          40
     AlarmPass_Event                48
     AlarmPass_Paint                40
     AlarmPass_Refresh              64
     Alarm_Event                    40
     Alarm_Paint                    56
     Alarm_Refresh                  48
     AnalogGraph_Event              40
     AnalogGraph_Paint              80
     Animation_Event                 8
     BigTemperLabel_Event           32
     BigTemperLabel_Paint           56
     ButtonAction_Event             40
     ButtonAction_Paint             64
     ButtonOptions_Event            32
     ButtonOptions_Paint            72
     ChangeID_Event                 32
     ChangeID_Paint                 64
     ChangeID_Refresh               48
     CheckChannel                   32
     CheckIP                         8
     CheckingModule_Event           32
     CheckingModule_Paint           64
     CheckingModule_Refresh         64
     CleanAll_Event                 16
     CleanReg_Event                  8
     ExecuteSpecialThermVar          8
     Host_WiFi_Event                32
     Host_WiFi_Paint                56
     Info_Event                      8
     Info_Paint                     56
     Info_Refresh                   40
     IpConfig_Event                 32
     IpConfig_Paint                 56
     IpTCP_Event                    32
     IpTCP_Paint                    56
     LaderChange_Event              32
     LaderChange_Paint              56
     Lader_Event                    32
     Lader_Paint                    72
     MESSAGE                       168
     MESSAGE_Refresh                32
     MainSide_Event                 40
     MainSide_Paint                 80
     MainSide_Refresh              136
     MasterSlave_Event              24
     MasterSlave_Paint              64
     MenuAccessPass_Event           48
     MenuAccessPass_Paint           40
     MenuAccess_Event               24
     MenuAccess_Paint               64
     MenuPaint                       8
     MenuRefresh                     8
     MenuSide_Event                 32
     MenuSide_Paint                 48
     NetInfo_Event                  24
     NetInfo_Paint                  72
     NetInfo_Refresh                48
     NetPeriodicity_Event           32
     NetPeriodicity_Paint           64
     Net_Event                      32
     Net_Paint                      56
     NeuronNrChange_Evant           40
     NeuronNrChange_Paint           64
     NeuronsList_Event              24
     NeuronsList_Paint              72
     NeuronsList_Refresh            64
     NodeInfo_Event                 24
     NodeInfo_Paint                 64
     NodeInfo_Refresh               48
     NodeStanIO_Event               40
     NodeStanIO_Paint               64
     NodeStanIO_Refresh             56
     NodeTestTrans_Event            24
     NodeTestTrans_Paint            72
     NodeTestTrans_Refresh          48
     NodeWeAnalog_Event             24
     NodeWeAnalog_Paint             64
     NodeWeAnalog_Refresh           56
     Node_Event                     32
     Node_Paint                     56
     Options_Event                  24
     Options_Paint                  56
     PaintProc                      56
     Procedure_Event                40
     Procedure_Paint                88
     Punkt_dostepuWiFi_Event        32
     Punkt_dostepuWiFi_Paint        56
     RF_Channel_Event               40
     RF_Channel_Paint               64
     RF_Channel_Refresh             64
     RemRow                         16
     RemRow_Event                    8
     RemRow_Paint                    8
     Restart_Event                   8
     SaveChanges_Evant               8
     ScreenAlarmSet_Event           48
     ScreenAlarmSet_Paint           72
     ScreenBrightness_Event         32
     ScreenBrightness_Paint         64
     ScreenDesign1_Event            32
     ScreenDesign1_Paint            40
     ScreenEvent                     8
     ScreenGraph                    64
     ScreenSet_Event                32
     ScreenSet_Paint                96
     ScreenSetup_Event              24
     ScreenSetup_Paint              56
     ScreenSever_Event              32
     ScreenSever_Paint              64
     ScreenTimetableSet_Event       40
     ScreenTimetableSet_Paint       80
     SetTouchScreen_Event           24
     SetTouchScreen_Paint           40
     SetupLang_Event                24
     SetupLang_Paint                64
     SetupNewPass_Event             40
     SetupNewPass_Paint             40
     SetupOldPass_Event             48
     SetupOldPass_Paint             40
     SetupPass_Event                32
     SetupPass_Paint                64
     SetupTime_Event                56
     SetupTime_Paint                64
     SetupTime_Refresh              40
     Setup_Event                    32
     Setup_Paint                    72
     StartAnimation_Event            8
     StartAnimation_Paint           32
     Sygnal_Event                   24
     Sygnal_Paint                   56
     Termostat_Event                56
     Termostat_Paint               128
     Termostat_Refresh              48
     Tester_MG1_Event               32
     Tester_MG1_Paint               64
     Tester_MG1_Refresh             48
     TextChange_Evant               64
     TextChange_Paint               64
     TextChange_Refresh             16
     ThermostatAutoSet_Event        40
     ThermostatAutoSet_Paint        72
     ThermostatChartSet_Event       40
     ThermostatChartSet_Paint       72
     ThermostatChartSet_Refresh     40
     ThermostatSet_Event            48
     ThermostatSet_Paint            64
     TimetableSet_Event             40
     TimetableSet_Paint             72
     Timetable_Event                48
     Timetable_Paint                88
     UstawSiec_Event                24
     UstawSiec_Paint                56
     ValueChange_Evant              40
     ValueChange_Paint              64
     Wait_Paint                    200
     WiFiConecting_Paint            56
     WiFiConecting_Refresh          32
     WybProc                        16
     ZmienneAnalogowe_Event         32
     ZmienneAnalogowe_Paint         56
     ZmienneAnalogowe_Repaint       48
     ZmienneDwustanowe_Event        32
     ZmienneDwustanowe_Paint        56
     ZmienneDwustanowe_Repaint      56
     Zmienne_Event                  24
     Zmienne_Paint                  56
     ZoneButon                      48
     ZoneGraph                      56
     ZoneGraph_Event                40
     ZoneGraph_Paint                72
     dzienTygodnia                  64
     przestepny                      8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     ProcSt_graf                      24
     ProcSet_graf                     28
     ProcWOUTS_graf                   28
     ProcWOUTR_graf                   28
     ProcWOUTC_graf                   28
     ProcSPK_graf                     28
     ProcTime_graf                    24
     ProcTMRS_graf                    28
     ProcClock_graf                   24
     ProcDay_graf                     24
     ProcToggleRS_graf                60
     ProcToggleT_graf                 60
     ProcTLI1_graf                    60
     ProcLim_graf                     56
     ProcEven_graf                    56
     ProcPlus_graf                    56
     ProcMinus_graf                   56
     ProcMul_graf                     56
     ProcDiv_graf                     56
     ProcNot_graf                     24
     ProcConstAnal_graf               56
     ProcGetAnal_graf                 52
     ProcSetAnal_graf                 52
     ProcSt_iko                       16
     ProcSet_iko                      16
     ProcTime_iko                     24
     ProcLog_iko                      16
     ProcAnl_iko                      16
     ProcSt_Button                    20
     BateriaWyladowana                12
     BateriaWyladowanaDuza            24
     Frame                            24
     SPK_1                            40
     GraphTab                        432
     ScreenSetTab_0                  968
     abc                               4
     ScreenSetTab_1                  704
     ButtonName                      396
     DeyOfWeekStr                     32
     DeyOfWeekLongStr                192
     ShortDate                        24
     Logo_Ceuron                     128
     TouchTestSor                      8
     Klepsydra                         8
     Siec                            168
     StrzalkaPrawo                    12
     StrzalkaLewo                     12
     NodeModelName                   140
     MainSide_puls                     1
     MenuLevel                         4
     wartosc_tmp                       4
     text_label_tmp                   12
     Label_move                        1
     Suw_poz_IO                        4
     Suw_poz_analog                    4
     Suw_poz_dwustan                   4
     Suw_poz_monit                     4
     ScrollMenu_poz                    4
     ScrollMenu_Paint_exist            4
     Rej_poz                           4
     CyklMonit                         1
     TextToChange                      4
     TextToChangeLength                1
     TextToChangeMaxPixSize            1
     ButtonToChange                    4
     CurentChartModyfi                 1
     NeuronIdToChange                  4
     NeuronIdAfterChange               4
     NeuronNrChange                    1
     ValueChange                       4
     NeuronIdChange                    4
     AnalogToChange                    4
     CurrentSheet                      1
     CurModifSheet                     1
     NeuronsListLine                   1
     SheetHistoryIndex                 1
     SheetHistory                     20
     Monitoring_array                240
     Monit_Size_scroll                 4
     SetupTimeCarPoz                   1
     ProgramChange                     1
     TmpFlg                            1
     MenuPaint                      1828
     ScreenEvent                    1628
     DispWait                          1
     MenuRefresh                     792
     Message                           1
     InitPointer                       1
     CCKier                            1
     AnimationNr                       1
     StartAnimation_Paint            464
     StartAdvance                      1
     StartAnimation_Event             60
     CheckChannel                    184
     ekran_komunikacja              1024
     MainSide_Paint                 1420
     MESSAGE                         616
     MESSAGE_Refresh                 200
     MainSide_Event                  948
     Xdown                             1
     MainSide_Refresh               2900
     Termostat_Paint                 588
     ExecuteSpecialThermVar           84
     Termostat_Event                1004
     Termostat_Refresh               660
     DzielBat                          4
     TermAmionation                    4
     LastTemp                          2
     Timetable_Paint                 756
     TaskToChange                      4
     TimetableSet_Hour                 1
     TimetableSet_Minute               1
     TimetableSet_Week                 1
     Timetable_Event                1188
     TimetableSet_Paint              676
     TimetableSet_Event              680
     Wait_Paint                       56
     Animation_Event                  72
     AdvanceSet_Paint                124
     AdvanceSet_Event                128
     CleanAll_Event                  232
     MenuSide_Paint                  160
     MenuSide_Event                  140
     MenuAccess_Paint                172
     pass_tmp                         12
     MenuAccess_Event                252
     InsertPass1                      12
     MenuAccessPass_Paint            168
     MenuAccessPass_Event            740
     PaintProc                      4476
     LaderLine                         1
     LaderCol                          1
     Lader_Paint                     560
     Touch_EventTime                   8
     ChoseRow                          1
     ChoseCol                          1
     Lader_Event                     948
     WybProc                         150
     SetTimeCell                       1
     Procedure_Paint                3608
     ProcGlobType_down                 1
     Procedure_Event                3904
     ValueChangeTxtTmp                 8
     VCTT_ill                          1
     VCTT_point_flag                   1
     ValueChange_Paint               428
     ValueChange_Evant              1068
     ptxt                              4
     LaderChange_Paint               124
     LaderChange_Event               184
     row_tmp                           4
     AddRow                          484
     RemRow                          376
     RemRow_Paint                    152
     RemRow_Event                    120
     SaveChanges_Evant               188
     OpenScreenSet                     1
     ScreenSet_Paint                 816
     MenuPaintExecute                  1
     ScreenSet_Event                 488
     ThermostatSet_Paint            1112
     ThermostatSet_Event             760
     ScreenTimetableSet_Paint        824
     ScreenTimetableSet_Event        704
     ScreenAlarmSet_Paint           1048
     ScreenAlarmSet_Event            700
     ZoneButon                       278
     ZoneGraph                       784
     ScreenGraph                    1184
     ScreenDesign1_Paint            1116
     ZoneButtonClick                   1
     ZoneGrapfNrClick                  1
     ZoneValueNrClick                  1
     ZoneLabelClick                    1
     TxtSpaceAvable                    4
     ScreenDesign1_Event            1216
     ButtonOptions_Paint             196
     ButtonOptions_Event             188
     ButtonAction_Paint              352
     ButtonAction_Event              408
     BigTemperLabel_Paint            360
     BigTemperLabel_Event            424
     ZoneGraph_Paint                1952
     ZoneGraph_Event                1684
     TextChangeCharNr                  1
     TextChangePoz                     1
     QWERTY                           72
     AlfaType                          1
     TextChange_Paint                496
     TextChange_Refresh              180
     count                             1
     mig                               1
     LastText_EventTime                8
     TextChange_Evant               1556
     AnalogGraph_Paint              1116
     AnalogGraph_Event               768
     ProgStopStartLabel               32
     Options_Paint                   144
     Options_Event                   280
     ChangeID_Paint                  664
     ChangeID_Event                  336
     ChangeID_Refresh                904
     Dziel5                            1
     CheckingModule_Paint            728
     CheckingModule_Event            328
     CheckingModule_Refresh          612
     Dziel5                            1
     RF_Channel_nr_tmp                 1
     Setup_Paint                     432
     Setup_Event                     604
     SetupLang_Paint                 152
     SetupLang_Event                 152
     SetupPass_Paint                 232
     SetupPass_Event                 304
     InsertOldPass1                   12
     SetupOldPass_Paint              152
     SetupOldPass_Event              528
     InsertNewPass1                   12
     SetupNewPass_Paint              152
     SetupNewPass_Event              524
     ScreenSetup_Paint               140
     ScreenSetup_Event               116
     SetTouchStep                      1
     SetTouchScreen_Paint            540
     Diff_X                            8
     Diff_Y                            8
     Xo1                               4
     Xo2                               4
     Yo1                               4
     Yo2                               4
     SetTouchScreen_Event            656
     Restart_Event                   104
     CleanReg_Event                  116
     SetupTime_Paint                 828
     SetupTime_Refresh               428
     przestepny                       60
     dzienTygodnia                   128
     SleepModTime                      1
     SetupTime_Event                1148
     ScreenBrightness_Paint          692
     ScreenBrightness_Event          600
     ScreenSever_Paint               572
     ScreenSever_Event               492
     MasterSlave_Paint               128
     MasterSlave_Event               468
     RF_ChOkBlock                      1
     RF_Channel_Paint                476
     RF_Channel_Refresh              372
     RF_Channel_Event                584
     Sygnal_Paint                    140
     Sygnal_Event                    128
     WaitOnCheckNode                   8
     OpisWezl                          1
     NeuronsList_Paint               660
     wpistmp                           4
     NeuronsList_Event              1208
     NeuronsList_Refresh            1284
     Dzielnik20                        1
     NeuronNrChange_Paint            368
     NeuronNrChange_Evant            696
     Info_Paint                      472
     Info_Refresh                    136
     IRdiv                             4
     Info_Event                       80
     ThermostatAutoSet_Paint        1332
     ThermostatAutoSet_Event         848
     ThermHourModyfi                   1
     ThermostatChartSet_Paint        660
     ThermostatChartSet_Event        640
     ThermostatChartSet_Refresh      196
     TCSR_Count                        1
     Alarm_Paint                     212
     Alarm_Event                     316
     Alarm_Refresh                   296
     LastCount                         4
     AlarmPass_Paint                 124
     AlarmPass_Event                 644
     AlarmPass_Refresh               344
     AlarmPassChange_Paint           188
     AlarmPassChange_Event           712
     Node_Paint                      380
     Node_Event                      448
     NodeTestTrans_Paint             436
     ValNTT                            2
     NodeTestTrans_Event             168
     NodeTestTrans_Refresh           204
     Dziel8                            1
     FirstNodeStanIO_Paint             1
     NodeStanIO_Paint                144
     NodeStanIO_Event                408
     NodeStanIO_Refresh             1020
     Dziel5                            1
     NodeWeAnalog_Paint              268
     NodeWeAnalog_Event              136
     NodeWeAnalog_Refresh            352
     Dziel5                            1
     MaxTime                           2
     LastSendTime                      4
     TestStartTime                     4
     TestStep                          2
     Tester_MG1_Paint                396
     TestAmount                        2
     Tester_MG1_Event                256
     Tester_MG1_Refresh             2624
     NodeInfo_Paint                  132
     NodeInfo_Event                  108
     NodeInfo_Refresh                252
     Dziel10                           1
     Net_Paint                       280
     Net_Event                       448
     UstawSiec_Paint                 108
     UstawSiec_Event                 128
     Punkt_dostepuWiFi_Paint         384
     Punkt_dostepuWiFi_Event         364
     WiFiConecting_Paint              92
     WiFiConecting_Refresh           640
     licz                              1
     end                               1
     WiFiReConnect                     1
     Host_WiFi_Paint                 768
     Host_WiFi_Event                 528
     NetPeriodicity_Paint            272
     NetPeriodicity_Event            356
     IpTCP_Paint                     192
     IpTCP_Event                     448
     CheckIP                         112
     IpConfig_Paint                  744
     IpConfig_Event                  636
     TransferInfo                      1
     NetInfo_Paint                   628
     NetInfo_Event                   152
     NetInfo_Refresh                 724
     AccesPointAssociateTestOk         1
     Zmienne_Paint                   108
     Zmienne_Event                   148
     ZM_OFFSET                         1
     ZmienneDwustanowe_Paint         152
     ZmienneDwustanowe_Event         224
     ZmienneDwustanowe_Repaint       252
     ZmienneAnalogowe_Paint          152
     ZmienneAnalogowe_Event          224
     ZmienneAnalogowe_Repaint        216
     ?<Constant "">                    4
     ?<Constant "Info ">               8
     ?<Constant "Max=">                8
     ?<Constant "+/- 3000 ">          12
     ?<Constant "Restart">             8
     ?<Constant "Firmware: ">         12
     ?<Constant "Administrator">      16
     ?<Constant "Checking Wi-Fi">     16
     ?<Constant " ">                   4
     ?<Constant " INFO ">              8
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244
                                      28
     ?<Constant {{240, 28, 230, 250, 251, 253, 253,
                                      28
     ?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>
                                      12
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_1
                                      28
     ?<Constant {{0, 0, 224, 248, 152, 124, 180, 22
                                      28
     ?<Constant {{240, 28, 230, 250, 251, 253, 253,_1
                                      28
     ?<Constant {{128, 192, 192, 128, 128, 224, 128
                                      56
     ?<Constant "Auto">                8
     ?<Constant "Auto off">           12
     ?<Constant "Auto on">             8
     ?<Constant {130, 0}>              4
     ?<Constant "-">                   4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0
                                      12
     ?<Constant "+">                   4
     ?<Constant {130, 0}>_1            4
     ?<Constant ":">                   4
     ?<Constant {{0, 240, 252, 127, 143, 243, 251,
                                     184
     ?<Constant "MENU">                8
     ?<Constant "Program ">           12
     ?<Constant "X">                   4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1
                                      12
     ?<Constant "C">                   4
     ?<Constant "E">                   4
     ?<Constant "060480">              8
     ?<Constant {0, 0, 0, 0, 0, 0, 0}>
                                       8
     ?<Constant "s">                   4
     ?<Constant "Const. ">             8
     ?<Constant "Get reg.">           12
     ?<Constant "Set reg.">           12
     ?<Constant "1>2 Q=1">             8
     ?<Constant "1=2 Q=1">             8
     ?<Constant "Q=1+2">               8
     ?<Constant "Q=1-2">               8
     ?<Constant "Q=1x2">               8
     ?<Constant "Q=1/2">               8
     ?<Constant "> ">                  4
     ?<Constant "< ">                  4
     ?<Constant "Reg:">                8
     ?<Constant ".">                   4
     ?<Constant "0">                   4
     ?<Constant "Ok ">                 4
     ?<Constant "C ">                  4
     ?<Constant "?">                   4
     ?<Constant "Alarm">               8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2
                                      12
     ?<Constant {78, 114, 46, 58, 0}>
                                       8
     ?<Constant "Therm set ">         12
     ?<Constant "Var">                 4
     ?<Constant "Actor">               8
     ?<Constant "-1h">                 4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3
                                      12
     ?<Constant "Scn ">                8
     ?<Constant {0, 0}>                4
     ?<Constant {129, 0}>              4
     ?<Constant "Analo. ">             8
     ?<Constant {129, 0}>_1            4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4
                                      12
     ?<Constant {78, 114, 58, 0, 0}>
                                       8
     ?<Constant "Temeper.">           12
     ?<Constant "Node ID:">           12
     ?<Constant "Text">                8
     ?<Constant "Val ">                8
     ?<Constant "...... ">             8
     ?<Constant "+On/Off">             8
     ?<Constant "Text ">               8
     ?<Constant "<">                   4
     ?<Constant ">">                   4
     ?<Constant "...">                 4
     ?<Constant "Analog ">             8
     ?<Constant "<>">                  4
     ?<Constant "Analog">              8
     ?<Constant "Tester">              8
     ?<Constant "Zmiana ID">          12
     ?<Constant "New ID">              8
     ?<Constant "ID do zmiany">       16
     ?<Constant "%d">                  4
     ?<Constant "ID po zmianie">      16
     ?<Constant "Konwertuj">          12
     ?<Constant "Konflikt ID">        12
     ?<Constant "po zmianie">         12
     ?<Constant "Konwersja">          12
     ?<Constant "dokonana">           12
     ?<Constant "Nawiazywanie">       16
     ?<Constant "polaczenia ">        12
     ?<Constant "TESTER">              8
     ?<Constant "ID modulu">          12
     ?<Constant "We/Wy">               8
     ?<Constant "We analog.">         12
     ?<Constant "Test MG1">           12
     ?<Constant "Ode:">                8
     ?<Constant "Wys:">                8
     ?<Constant "Test MR1.">          12
     ?<Constant "Slave">               8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5
                                      12
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6
                                      12
     ?<Constant "Jezyk">               8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7
                                      12
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8
                                      12
     ?<Constant "060480">_1            8
     ?<Constant "------------">       16
     ?<Constant {0, 31, 59, 90, 120, 151, 181, 212,
                                      48
     ?<Constant {30}>                  4
     ?<Constant "On/off">              8
     ?<Constant ":00">                 4
     ?<Constant "Mode">                8
     ?<Constant "Master ">             8
     ?<Constant "Slave ">              8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_9
                                      12
     ?<Constant "OK">                  4
     ?<Constant "Node ">               8
     ?<Constant "Id ">                 4
     ?<Constant "x%d">                 4
     ?<Constant " ID ">                8
     ?<Constant "Model: ">             8
     ?<Constant "Node ID: ">          12
     ?<Constant "Sys. version: ">     16
     ?<Constant "Trans. period: ">    16
     ?<Constant "Thermo">              8
     ?<Constant "T1">                  4
     ?<Constant "T2">                  4
     ?<Constant "6">                   4
     ?<Constant "12">                  4
     ?<Constant "18">                  4
     ?<Constant "23">                  4
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2
                                      28
     ?<Constant {{0, 0, 224, 248, 152, 124, 180, 22_1
                                      28
     ?<Constant {{240, 28, 230, 250, 251, 253, 253,_2
                                      28
     ?<Constant "Info">                8
     ?<Constant "DI">                  4
     ?<Constant "DO">                  4
     ?<Constant "Reason:">             8
     ?<Constant "Unreliable">         12
     ?<Constant "data.">               8
     ?<Constant "MG1 TEST">           12
     ?<Constant "Nowy test">          12
     ?<Constant "Dlugi test">         12
     ?<Constant "Q1">                  4
     ?<Constant "In1">                 4
     ?<Constant "Q2">                  4
     ?<Constant "In2">                 4
     ?<Constant "Blad testu">         12
     ?<Constant "Test OK">             8
     ?<Constant "Czas t:">             8
     ?<Constant "%d s">                8
     ?<Constant "Czas p:">             8
     ?<Constant "Name:">               8
     ?<Constant "%d.%d">               8
     ?<Constant "Soft version:">      16
     ?<Constant "Host">                8
     ?<Constant "Server reset">       16
     ?<Constant "TCP/IP">              8
     ?<Constant "Not connected">      16
     ?<Constant "Connecting">         12
     ?<Constant "Connecting .">       16
     ?<Constant "Connecting ..">      16
     ?<Constant "Connecting ...">     16
     ?<Constant "Connected">          12
     ?<Constant "........................">
                                      36
     ?<Constant "........................">_1
                                      36
     ?<Constant "Przyklad:\n   a.bbb.pl...">
                                      72
     ?<Constant "Przyklad:\n   a.bbb.pl...">_1
                                      68
     ?<Constant "Ustaw okresowosc pola...">
                                      40
     ?<Constant "Set the periodicity o...">
                                      44
     ?<Constant "Auto IP -on">        12
     ?<Constant "IP config">          12
     ?<Constant "Auto IP -off">       16
     ?<Constant "Zly adres IP">       16
     ?<Constant "Wrong IP adress">    16
     ?<Constant "Zly adres maski ">   20
     ?<Constant "Wrong mask adress">
                                      20
     ?<Constant "Zly adres bramy ">   20
     ?<Constant "Wrong gateway adress">
                                      24
     ?<Constant "IP/TCP">              8
     ?<Constant "???">                 4
     ?<Constant "b">                   8
     ?<Constant "a">                   8
      Others                          64

 
     557 bytes in section .bss
   1 061 bytes in section .data
   6 808 bytes in section .rodata
 101 236 bytes in section Debug.txt
 
 101 172 bytes of CODE  memory (+ 64 bytes shared)
   6 808 bytes of CONST memory
   1 618 bytes of DATA  memory

Errors: none
Warnings: 142
