###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           11/Sep/2013  19:52:51 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\Framework\WizFiCommand.c                      #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\WizFiCommand.c" -D AT91SAM7S256 -D  #
#                    AT91SAM7SEK -D iH -D _LCD_NEGATIV_OLD_ -D __ALARM -D     #
#                    __WIFI_MODULE -D _DEBUG_ -D S300iOld -D _ADMINISTRATOR_  #
#                    -lC "D:\Zeuron\Projekty\S300\S300-program v1.4 -         #
#                    12.06.2013\S300X (Old)\List\" --diag_suppress Pa082 -o   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\S300X (Old)\Obj\" --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian little --cpu ARM7TDMI   #
#                    -e --fpu None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 5.0\ARM\INC\DLib_Config_Norma #
#                    l.h" -I "D:\Zeuron\Projekty\S300\S300-program v1.4 -     #
#                    12.06.2013\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.4 - 12.06.2013\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v1.4 - 12.06.2013\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v1.4 - 12.06.2013\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\Configuration\" -I "C:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.0\ARM\INC\" --section .text=Debug.txt --interwork      #
#                    --cpu_mode thumb -Ol                                     #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300X (Old)\List\WizFiCommand.lst             #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300X (Old)\Obj\WizFiCommand.o                #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                 CEURON                                                   *//
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : WizFiCommacd.c                           *//
      7          //*  Opis                         : Obs³uga komend modu³u WizFi              *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 11.04.2012                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*//
     19          //****************************************************************************//
     20          
     21          
     22          
     23          #include "WizFi.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetNextTx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetNextTx:
   \   00000000   8161               STR      R1,[R0, #+24]
   \   00000002   C261               STR      R2,[R0, #+28]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetTx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetTx:
   \   00000000   8160               STR      R1,[R0, #+8]
   \   00000002   C260               STR      R2,[R0, #+12]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsTxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsTxEmpty:
   \   00000000   C068               LDR      R0,[R0, #+12]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsNextTxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsNextTxEmpty:
   \   00000000   C069               LDR      R0,[R0, #+28]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_PDC_SendFrame(AT91PS_PDC, char *, unsigned int, char *, unsigned int)
   \                     AT91F_PDC_SendFrame:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1600               MOVS     R6,R2
   \   00000008   069F               LDR      R7,[SP, #+24]
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       AT91F_PDC_IsTxEmpty
   \   00000010   0028               CMP      R0,#+0
   \   00000012   0BD0               BEQ      ??AT91F_PDC_SendFrame_0
   \   00000014   3200               MOVS     R2,R6
   \   00000016   2900               MOVS     R1,R5
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       AT91F_PDC_SetTx
   \   0000001E   3A00               MOVS     R2,R7
   \   00000020   0099               LDR      R1,[SP, #+0]
   \   00000022   2000               MOVS     R0,R4
   \   00000024   ........           BL       AT91F_PDC_SetNextTx
   \   00000028   0220               MOVS     R0,#+2
   \   0000002A   0CE0               B        ??AT91F_PDC_SendFrame_1
   \                     ??AT91F_PDC_SendFrame_0:
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   ........           BL       AT91F_PDC_IsNextTxEmpty
   \   00000032   0028               CMP      R0,#+0
   \   00000034   06D0               BEQ      ??AT91F_PDC_SendFrame_2
   \   00000036   3200               MOVS     R2,R6
   \   00000038   2900               MOVS     R1,R5
   \   0000003A   2000               MOVS     R0,R4
   \   0000003C   ........           BL       AT91F_PDC_SetNextTx
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   00E0               B        ??AT91F_PDC_SendFrame_1
   \                     ??AT91F_PDC_SendFrame_2:
   \   00000044   0020               MOVS     R0,#+0
   \                     ??AT91F_PDC_SendFrame_1:
   \   00000046   01B0               ADD      SP,SP,#+4
   \   00000048   F0BC               POP      {R4-R7}
   \   0000004A   02BC               POP      {R1}
   \   0000004C   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_US_SendFrame(AT91PS_USART, unsigned char *, unsigned int, unsigned char *, unsigned int)
   \                     AT91F_US_SendFrame:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   029C               LDR      R4,[SP, #+8]
   \   00000004   82B0               SUB      SP,SP,#+8
   \   00000006   0094               STR      R4,[SP, #+0]
   \   00000008   8024               MOVS     R4,#+128
   \   0000000A   6400               LSLS     R4,R4,#+1        ;; #+256
   \   0000000C   0019               ADDS     R0,R0,R4
   \   0000000E   ........           BL       AT91F_PDC_SendFrame
   \   00000012   02B0               ADD      SP,SP,#+8
   \   00000014   10BC               POP      {R4}
   \   00000016   02BC               POP      {R1}
   \   00000018   0847               BX       R1               ;; return

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFi.h",172  Warning[Pe001]: 
          last line of file ends without a newline
     24          //#include "Framework.h"
     25          //#include "core/device.h"                                                        //aduje bibliotreki dla odpowiedniego procesora
     26          //#include "main_H.h" 
     27          #include "string.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __intrinsic __code __interwork char *strstr(char const *, char const *)
   \                     strstr:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   ........           BL       __iar_Strstr
   \   00000006   01B0               ADD      SP,SP,#+4
   \   00000008   02BC               POP      {R1}
   \   0000000A   0847               BX       R1               ;; return
     28          #include "WizFi.h"
     29          
     30          
     31          //Sta³e ------------------------------------------------------------------------

   \                                 In section .rodata, align 4
     32              const char AT[]="AT\r";                                                     //komenda WizFi 
   \                     AT:
   \   00000000   41540D00           DC8 "AT\015"

   \                                 In section .rodata, align 4
     33              const char ATI2[]="ATI2\r";                                                     //komenda WizFi 
   \                     ATI2:
   \   00000000   415449320D00       DC8 "ATI2\015"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     34              const char AT_VER[]="AT+VER=?\r";
   \                     AT_VER:
   \   00000000   41542B564552       DC8 "AT+VER=?\015"
   \              3D3F0D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     35              const char AT_XDUM0[]="AT+XDUM=0\r";                                                //komenda WizFi 
   \                     AT_XDUM0:
   \   00000000   41542B584455       DC8 "AT+XDUM=0\015"
   \              4D3D300D00  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
     36              const char AT_WD[]="AT+WD\r";                                               //komenda WizFi 
   \                     AT_WD:
   \   00000000   41542B57440D       DC8 "AT+WD\015"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
     37              const char AT_NDHCP_0[]="AT+NDHCP=0\r";                                     //komenda WizFi   
   \                     AT_NDHCP_0:
   \   00000000   41542B4E4448       DC8 "AT+NDHCP=0\015"
   \              43503D300D00

   \                                 In section .rodata, align 4
     38              const char AT_NDHCP_1[]="AT+NDHCP=1\r";                                     //komenda WizFi 
   \                     AT_NDHCP_1:
   \   00000000   41542B4E4448       DC8 "AT+NDHCP=1\015"
   \              43503D310D00

   \                                 In section .rodata, align 4
     39              const char AT_NSET[]="AT+NSET=";                                          //komenda WizFi  
   \                     AT_NSET:
   \   00000000   41542B4E5345       DC8 "AT+NSET="
   \              543D00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
     40              const char AT_WAUTH_1[]="AT+WAUTH=1\r";                                          //komenda WizFi  
   \                     AT_WAUTH_1:
   \   00000000   41542B574155       DC8 "AT+WAUTH=1\015"
   \              54483D310D00

   \                                 In section .rodata, align 4
     41              const char AT_WWEP1[]="AT+WWEP1=";                                          //komenda WizFi  
   \                     AT_WWEP1:
   \   00000000   41542B575745       DC8 "AT+WWEP1="
   \              50313D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     42              const char AT_WWPA[]="AT+WWPA=";                                            //komenda WizFi  
   \                     AT_WWPA:
   \   00000000   41542B575750       DC8 "AT+WWPA="
   \              413D00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
     43              const char AT_WA[]="AT+WA=";                                              //komenda WizFi  
   \                     AT_WA:
   \   00000000   41542B57413D       DC8 "AT+WA="
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
     44              const char AT_DNSLOOKUP[]="AT+DNSLOOKUP=";                                              //komenda WizFi  
   \                     AT_DNSLOOKUP:
   \   00000000   41542B444E53       DC8 "AT+DNSLOOKUP="
   \              4C4F4F4B5550
   \              3D00        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     45              const char AT_NCTCP[]="AT+NCTCP=";                                              //komenda WizFi  
   \                     AT_NCTCP:
   \   00000000   41542B4E4354       DC8 "AT+NCTCP="
   \              43503D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     46              const char AT_NCLOSE[]="AT+NCLOSE=";                                              //komenda WizFi  
   \                     AT_NCLOSE:
   \   00000000   41542B4E434C       DC8 "AT+NCLOSE="
   \              4F53453D00  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
     47              const char AT_NCLOSEALL[]="AT+NCLOSEALL\r";                                              //komenda WizFi  
   \                     AT_NCLOSEALL:
   \   00000000   41542B4E434C       DC8 "AT+NCLOSEALL\015"
   \              4F5345414C4C
   \              0D00        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     48              const char AT_WS[]="AT+WS\r";
   \                     AT_WS:
   \   00000000   41542B57530D       DC8 "AT+WS\015"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
     49              const char AT_CID[]="AT+CID=?\r";
   \                     AT_CID:
   \   00000000   41542B434944       DC8 "AT+CID=?\015"
   \              3D3F0D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     50              const char AT_XRESET[]="AT+XRESET\r";
   \                     AT_XRESET:
   \   00000000   41542B585245       DC8 "AT+XRESET\015"
   \              5345540D00  
   \   0000000B   00                 DC8 0
     51           //____________________________Koniec sta³ych ___________________________________
     52           
     53          
     54              extern unsigned long long  g_counter;                                              //globalny licznik milisekundowy od w³¹czenia/restartu sterownika
     55              
     56              
     57              
     58              extern char Variables[];    //zmienne
     59              extern char VariablesImpulse[];
     60              extern char VariablesNetTmp[];
     61              extern short int VariablesAnal[];    //zmienne
     62              extern _ProgramTab gProg;
     63              extern _MainStage  MainStage; 
     64              extern _DateTime DateTime;    
     65              extern _TransQuality TransQuality;
     66              extern unsigned char ChangeStageFlag;
     67              extern _RF_Status RF_Status;
     68              extern char WiFiDebug;
     69          
     70          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     71          void WizFiCommand_AT(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
     72          {
   \                     WizFiCommand_AT:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1600               MOVS     R6,R2
   \   00000006   1D00               MOVS     R5,R3
     73             if (Net->WiFi.SSID[0]==0)
   \   00000008   AE21               MOVS     R1,#+174
   \   0000000A   695C               LDRB     R1,[R5, R1]
   \   0000000C   0029               CMP      R1,#+0
   \   0000000E   16D1               BNE      ??WizFiCommand_AT_0
     74             {
     75               Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000010   2C00               MOVS     R4,R5
   \   00000012   3834               ADDS     R4,R4,#+56
   \   00000014   ....               LDR      R0,??DataTable19  ;; g_counter
   \   00000016   0CC8               LDM      R0!,{R2,R3}
   \   00000018   0838               SUBS     R0,R0,#+8
   \   0000001A   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   8018               ADDS     R0,R0,R2
   \   00000020   5941               ADCS     R1,R1,R3
   \   00000022   03C4               STM      R4!,{R0,R1}
   \   00000024   083C               SUBS     R4,R4,#+8
     76               Net->Status.FreezTime=g_counter+1000;
   \   00000026   4035               ADDS     R5,R5,#+64
   \   00000028   ....               LDR      R0,??DataTable19  ;; g_counter
   \   0000002A   0CC8               LDM      R0!,{R2,R3}
   \   0000002C   0838               SUBS     R0,R0,#+8
   \   0000002E   FA20               MOVS     R0,#+250
   \   00000030   8000               LSLS     R0,R0,#+2        ;; #+1000
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   8018               ADDS     R0,R0,R2
   \   00000036   5941               ADCS     R1,R1,R3
   \   00000038   03C5               STM      R5!,{R0,R1}
   \   0000003A   083D               SUBS     R5,R5,#+8
   \   0000003C   32E0               B        ??WizFiCommand_AT_1
     77             }else{
     78               for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0; 
   \                     ??WizFiCommand_AT_0:
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   04E0               B        ??WizFiCommand_AT_2
   \                     ??WizFiCommand_AT_3:
   \   00000042   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000044   0914               ASRS     R1,R1,#+16
   \   00000046   0022               MOVS     R2,#+0
   \   00000048   4254               STRB     R2,[R0, R1]
   \   0000004A   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_2:
   \   0000004C   9122               MOVS     R2,#+145
   \   0000004E   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000050   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000052   0914               ASRS     R1,R1,#+16
   \   00000054   9142               CMP      R1,R2
   \   00000056   F4DB               BLT      ??WizFiCommand_AT_3
     79               Buff_TX[0]='A';
   \   00000058   4120               MOVS     R0,#+65
   \   0000005A   2070               STRB     R0,[R4, #+0]
     80               Buff_TX[1]='T';
   \   0000005C   5420               MOVS     R0,#+84
   \   0000005E   6070               STRB     R0,[R4, #+1]
     81               Buff_TX[2]=0x0d;
   \   00000060   0D20               MOVS     R0,#+13
   \   00000062   A070               STRB     R0,[R4, #+2]
     82               Buff_TX[3]=0x0A;
   \   00000064   0A20               MOVS     R0,#+10
   \   00000066   E070               STRB     R0,[R4, #+3]
     83               
     84               Net->Status.CurrentOrder=WizFi_AT;
   \   00000068   0120               MOVS     R0,#+1
   \   0000006A   A870               STRB     R0,[R5, #+2]
     85          
     86               AT91F_US_SendFrame(USART,Buff_TX,4,0, 0);                        //Wysyla ramke 
                                               ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000006C   82B0               SUB      SP,SP,#+8
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   0090               STR      R0,[SP, #+0]
   \   00000072   0023               MOVS     R3,#+0
   \   00000074   0422               MOVS     R2,#+4
   \   00000076   2100               MOVS     R1,R4
   \   00000078   3000               MOVS     R0,R6
   \   0000007A   ........           BL       AT91F_US_SendFrame
   \   0000007E   02B0               ADD      SP,SP,#+8
     87               Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000080   3835               ADDS     R5,R5,#+56
   \   00000082   ....               LDR      R0,??DataTable19  ;; g_counter
   \   00000084   0CC8               LDM      R0!,{R2,R3}
   \   00000086   0838               SUBS     R0,R0,#+8
   \   00000088   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   8018               ADDS     R0,R0,R2
   \   0000008E   5941               ADCS     R1,R1,R3
   \   00000090   03C5               STM      R5!,{R0,R1}
   \   00000092   083D               SUBS     R5,R5,#+8
     88               
     89               if (WiFiDebug) SendViaUSB(Buff_TX, 4);
                                                ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000094   ....               LDR      R0,??DataTable18  ;; WiFiDebug
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   03D0               BEQ      ??WizFiCommand_AT_1
   \   0000009C   0421               MOVS     R1,#+4
   \   0000009E   2000               MOVS     R0,R4
   \   000000A0   ........           BL       SendViaUSB
     90             }
     91          }
   \                     ??WizFiCommand_AT_1:
   \   000000A4   70BC               POP      {R4-R6}
   \   000000A6   01BC               POP      {R0}
   \   000000A8   0047               BX       R0               ;; return
     92          
     93          
     94          
     95          

   \                                 In section Debug.txt, align 4, keep-with-next
     96          char WizFiResponseCommand_AT(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
     97          {
   \                     WizFiResponseCommand_AT:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
     98             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000006   ....               LDR      R0,??DataTable18  ;; WiFiDebug
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   08D0               BEQ      ??WizFiResponseCommand_AT_0
   \   0000000E   3000               MOVS     R0,R6
   \   00000010   ........           BL       strlen
   \   00000014   0100               MOVS     R1,R0
   \   00000016   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   00000018   090C               LSRS     R1,R1,#+16
   \   0000001A   3000               MOVS     R0,R6
   \   0000001C   ........           BL       SendViaUSB
     99             char odp=0;
   \                     ??WizFiResponseCommand_AT_0:
   \   00000020   0025               MOVS     R5,#+0
    100             if(strstr(Buff_RX, "OK")!=NULL)
   \   00000022   12A1               ADR      R1,??WizFiResponseCommand_AT_1  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_2
    101                  {
    102                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    103                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_3
   \                     ??WizFiResponseCommand_AT_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_4
    104                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   ....               LDR      R0,??DataTable19  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    105                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    106                  }
    107          
    108             return odp;
   \                     ??WizFiResponseCommand_AT_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_1:
   \   0000006C   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
    109          }
    110          
    111          
    112          
    113          
    114          
    115          
    116          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    117          void WizFiCommand_AT_VER(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    118          {
   \                     WizFiCommand_AT_VER:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
   \   00000004   1600               MOVS     R6,R2
   \   00000006   1C00               MOVS     R4,R3
    119             if (WiFiDebug) SendViaUSB((char*)AT_VER, sizeof(AT_VER)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   ....               LDR      R0,??DataTable18  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   03D0               BEQ      ??WizFiCommand_AT_VER_0
   \   00000010   0921               MOVS     R1,#+9
   \   00000012   1448               LDR      R0,??WizFiCommand_AT_VER_1  ;; AT_VER
   \   00000014   ........           BL       SendViaUSB
    120             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \                     ??WizFiCommand_AT_VER_0:
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   04E0               B        ??WizFiCommand_AT_VER_2
   \                     ??WizFiCommand_AT_VER_3:
   \   0000001C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000001E   0014               ASRS     R0,R0,#+16
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   2954               STRB     R1,[R5, R0]
   \   00000024   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_VER_2:
   \   00000026   9121               MOVS     R1,#+145
   \   00000028   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000002A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000002C   0014               ASRS     R0,R0,#+16
   \   0000002E   8842               CMP      R0,R1
   \   00000030   F4DB               BLT      ??WizFiCommand_AT_VER_3
    121             Net->Status.CurrentOrder=WizFi_AT_VER;     
   \   00000032   0220               MOVS     R0,#+2
   \   00000034   A070               STRB     R0,[R4, #+2]
    122             AT91F_US_SendFrame(USART,(char*)AT_VER,sizeof(AT_VER)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   0023               MOVS     R3,#+0
   \   0000003E   0922               MOVS     R2,#+9
   \   00000040   0849               LDR      R1,??WizFiCommand_AT_VER_1  ;; AT_VER
   \   00000042   3000               MOVS     R0,R6
   \   00000044   ........           BL       AT91F_US_SendFrame
   \   00000048   02B0               ADD      SP,SP,#+8
    123             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000004A   3834               ADDS     R4,R4,#+56
   \   0000004C   ....               LDR      R0,??DataTable19  ;; g_counter
   \   0000004E   0CC8               LDM      R0!,{R2,R3}
   \   00000050   0838               SUBS     R0,R0,#+8
   \   00000052   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   8018               ADDS     R0,R0,R2
   \   00000058   5941               ADCS     R1,R1,R3
   \   0000005A   03C4               STM      R4!,{R0,R1}
   \   0000005C   083C               SUBS     R4,R4,#+8
    124             
    125             
    126          }
   \   0000005E   70BC               POP      {R4-R6}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_VER_1:
   \   00000064   ........           DC32     AT_VER
    127          
    128          
    129          
    130          

   \                                 In section Debug.txt, align 4, keep-with-next
    131          char WizFiResponseCommand_AT_VER(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    132          {
   \                     WizFiResponseCommand_AT_VER:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    133             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000006   ....               LDR      R0,??DataTable18  ;; WiFiDebug
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   08D0               BEQ      ??WizFiResponseCommand_AT_VER_0
   \   0000000E   3000               MOVS     R0,R6
   \   00000010   ........           BL       strlen
   \   00000014   0100               MOVS     R1,R0
   \   00000016   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   00000018   090C               LSRS     R1,R1,#+16
   \   0000001A   3000               MOVS     R0,R6
   \   0000001C   ........           BL       SendViaUSB
    134             char odp=0;
   \                     ??WizFiResponseCommand_AT_VER_0:
   \   00000020   0025               MOVS     R5,#+0
    135             if(strstr(Buff_RX, "OK")!=NULL)
   \   00000022   12A1               ADR      R1,??WizFiResponseCommand_AT_VER_1  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_VER_2
    136                  {
    137                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    138                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_VER_3
   \                     ??WizFiResponseCommand_AT_VER_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_VER_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_VER_4
    139                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   ....               LDR      R0,??DataTable19  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    140                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    141                  }
    142             
    143             return odp;
   \                     ??WizFiResponseCommand_AT_VER_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_VER_1:
   \   0000006C   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
    144          }
    145          
    146          
    147          
    148          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    149          void WizFiCommand_ATI2(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    150          {
   \                     WizFiCommand_ATI2:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    151             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_ATI2_0
   \                     ??WizFiCommand_ATI2_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_ATI2_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_ATI2_1
    152             Net->Status.CurrentOrder=WizFi_ATI2;
   \   00000020   0320               MOVS     R0,#+3
   \   00000022   A070               STRB     R0,[R4, #+2]
    153             if (WiFiDebug) SendViaUSB((char*)ATI2, sizeof(ATI2)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000024   ....               LDR      R0,??DataTable18  ;; WiFiDebug
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   03D0               BEQ      ??WizFiCommand_ATI2_2
   \   0000002C   0521               MOVS     R1,#+5
   \   0000002E   0D48               LDR      R0,??WizFiCommand_ATI2_3  ;; ATI2
   \   00000030   ........           BL       SendViaUSB
    154             AT91F_US_SendFrame(USART,(char*)ATI2,sizeof(ATI2)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_ATI2_2:
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0522               MOVS     R2,#+5
   \   0000003E   0949               LDR      R1,??WizFiCommand_ATI2_3  ;; ATI2
   \   00000040   2800               MOVS     R0,R5
   \   00000042   ........           BL       AT91F_US_SendFrame
   \   00000046   02B0               ADD      SP,SP,#+8
    155             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000048   3834               ADDS     R4,R4,#+56
   \   0000004A   ....               LDR      R0,??DataTable19  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C4               STM      R4!,{R0,R1}
   \   0000005A   083C               SUBS     R4,R4,#+8
    156             
    157             
    158          }
   \   0000005C   01B0               ADD      SP,SP,#+4
   \   0000005E   30BC               POP      {R4,R5}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??WizFiCommand_ATI2_3:
   \   00000064   ........           DC32     ATI2
    159          
    160          
    161          
    162          

   \                                 In section Debug.txt, align 4, keep-with-next
    163          char WizFiResponseCommand_ATI2(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    164          {
   \                     WizFiResponseCommand_ATI2:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    165             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    166             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   ....               LDR      R0,??DataTable18  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_ATI2_0
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    167             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_ATI2_0:
   \   00000022   12A1               ADR      R1,??WizFiResponseCommand_ATI2_1  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_ATI2_2
    168                  {
    169                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    170                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_ATI2_3
   \                     ??WizFiResponseCommand_ATI2_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_ATI2_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_ATI2_4
    171                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   ....               LDR      R0,??DataTable19  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   ....               LDR      R0,??DataTable20  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    172                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    173                  }
    174             
    175             return odp;
   \                     ??WizFiResponseCommand_ATI2_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_ATI2_1:
   \   0000006C   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
    176          }
    177          
    178          
    179          
    180          
    181          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    182          void WizFiCommand_AT_XDUM0(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    183          {
   \                     WizFiCommand_AT_XDUM0:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    184             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_XDUM0_0
   \                     ??WizFiCommand_AT_XDUM0_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_XDUM0_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_XDUM0_1
    185             Net->Status.CurrentOrder=WizFi_AT_XDUM0;    
   \   00000020   0420               MOVS     R0,#+4
   \   00000022   A070               STRB     R0,[R4, #+2]
    186             if (WiFiDebug) SendViaUSB((char*)AT_XDUM0, sizeof(AT_XDUM0)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000024   0F48               LDR      R0,??WizFiCommand_AT_XDUM0_2  ;; WiFiDebug
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   03D0               BEQ      ??WizFiCommand_AT_XDUM0_3
   \   0000002C   0A21               MOVS     R1,#+10
   \   0000002E   0E48               LDR      R0,??WizFiCommand_AT_XDUM0_2+0x4  ;; AT_XDUM0
   \   00000030   ........           BL       SendViaUSB
    187             AT91F_US_SendFrame(USART,(char*)AT_XDUM0,sizeof(AT_XDUM0)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_XDUM0_3:
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   0A49               LDR      R1,??WizFiCommand_AT_XDUM0_2+0x4  ;; AT_XDUM0
   \   00000040   2800               MOVS     R0,R5
   \   00000042   ........           BL       AT91F_US_SendFrame
   \   00000046   02B0               ADD      SP,SP,#+8
    188             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000048   3834               ADDS     R4,R4,#+56
   \   0000004A   ....               LDR      R0,??DataTable21  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   ....               LDR      R0,??DataTable22  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C4               STM      R4!,{R0,R1}
   \   0000005A   083C               SUBS     R4,R4,#+8
    189             
    190             
    191             
    192          }
   \   0000005C   01B0               ADD      SP,SP,#+4
   \   0000005E   30BC               POP      {R4,R5}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_XDUM0_2:
   \   00000064   ........           DC32     WiFiDebug
   \   00000068   ........           DC32     AT_XDUM0
    193          

   \                                 In section Debug.txt, align 4, keep-with-next
    194          char WizFiResponseCommand_AT_XDUM0(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    195          {
   \                     WizFiResponseCommand_AT_XDUM0:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    196             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    197             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_XDUM0_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_XDUM0_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    198             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_XDUM0_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_XDUM0_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_XDUM0_2
    199                  {
    200                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    201                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_XDUM0_3
   \                     ??WizFiResponseCommand_AT_XDUM0_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_XDUM0_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_XDUM0_4
    202                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_XDUM0_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_XDUM0_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    203                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    204                  }
    205             
    206             return odp;
   \                     ??WizFiResponseCommand_AT_XDUM0_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_XDUM0_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    207          }
    208          
    209          
    210          
    211          
    212          
    213          
    214          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    215          void WizFiCommand_AT_NCLOSEALL(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    216          {
   \                     WizFiCommand_AT_NCLOSEALL:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1400               MOVS     R4,R2
   \   00000004   1D00               MOVS     R5,R3
    217             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_NCLOSEALL_0
   \                     ??WizFiCommand_AT_NCLOSEALL_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_NCLOSEALL_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_NCLOSEALL_1
    218             Net->Status.CurrentOrder=WizFi_AT_NCLOSEALL;  
   \   00000020   0F20               MOVS     R0,#+15
   \   00000022   A870               STRB     R0,[R5, #+2]
    219             if (WiFiDebug) SendViaUSB((char*)AT_NCLOSEALL, sizeof(AT_NCLOSEALL)-1);   
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000024   0B48               LDR      R0,??WizFiCommand_AT_NCLOSEALL_2  ;; WiFiDebug
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   03D0               BEQ      ??WizFiCommand_AT_NCLOSEALL_3
   \   0000002C   0D21               MOVS     R1,#+13
   \   0000002E   0A48               LDR      R0,??WizFiCommand_AT_NCLOSEALL_2+0x4  ;; AT_NCLOSEALL
   \   00000030   ........           BL       SendViaUSB
    220             AT91F_US_SendFrame(USART,(char*)AT_NCLOSEALL,sizeof(AT_NCLOSEALL)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NCLOSEALL_3:
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0D22               MOVS     R2,#+13
   \   0000003E   0649               LDR      R1,??WizFiCommand_AT_NCLOSEALL_2+0x4  ;; AT_NCLOSEALL
   \   00000040   2000               MOVS     R0,R4
   \   00000042   ........           BL       AT91F_US_SendFrame
   \   00000046   02B0               ADD      SP,SP,#+8
    221             //Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    222             Net->Status.HostLink=DISCONNECTED; 
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   6870               STRB     R0,[R5, #+1]
    223             
    224             
    225          }
   \   0000004C   01B0               ADD      SP,SP,#+4
   \   0000004E   30BC               POP      {R4,R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_NCLOSEALL_2:
   \   00000054   ........           DC32     WiFiDebug
   \   00000058   ........           DC32     AT_NCLOSEALL
    226          

   \                                 In section Debug.txt, align 4, keep-with-next
    227          char WizFiResponseCommand_AT_NCLOSEALL0(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    228          {
   \                     WizFiResponseCommand_AT_NCLOSEALL0:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    229             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    230             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1748               LDR      R0,??WizFiResponseCommand_AT_NCLOSEALL0_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_NCLOSEALL0_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    231             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_1:
   \   00000022   12A1               ADR      R1,??WizFiResponseCommand_AT_NCLOSEALL0_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   16D0               BEQ      ??WizFiResponseCommand_AT_NCLOSEALL0_2
    232                  {
    233                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    234                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_NCLOSEALL0_3
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_NCLOSEALL0_4
    235                    Net->Status.Timeout=g_counter + FREEZ_TIME;    //przed³u¿enie /restart timeoutu
   \   00000046   2200               MOVS     R2,R4
   \   00000048   3832               ADDS     R2,R2,#+56
   \   0000004A   0948               LDR      R0,??WizFiResponseCommand_AT_NCLOSEALL0_0+0x8  ;; g_counter
   \   0000004C   03C8               LDM      R0!,{R0,R1}
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   3230               ADDS     R0,R0,#+50
   \   00000052   5941               ADCS     R1,R1,R3
   \   00000054   03C2               STM      R2!,{R0,R1}
   \   00000056   083A               SUBS     R2,R2,#+8
    236                     Net->Status.HostLink=DISCONNECTED;
   \   00000058   0020               MOVS     R0,#+0
   \   0000005A   6070               STRB     R0,[R4, #+1]
    237                  }
    238             
    239             return odp;
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_2:
   \   0000005C   2800               MOVS     R0,R5
   \   0000005E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000060   000E               LSRS     R0,R0,#+24
   \   00000062   70BC               POP      {R4-R6}
   \   00000064   02BC               POP      {R1}
   \   00000066   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_0:
   \   00000068   ........           DC32     WiFiDebug
   \   0000006C   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000070   ........           DC32     g_counter
    240          }
    241          
    242          
    243           
    244          
    245          
    246          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    247          void WizFiCommand_AT_WD(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    248          {
   \                     WizFiCommand_AT_WD:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    249             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_WD_0
   \                     ??WizFiCommand_AT_WD_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_WD_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_WD_1
    250             Net->Status.CurrentOrder=WizFi_AT_WD;    
   \   00000020   0520               MOVS     R0,#+5
   \   00000022   A070               STRB     R0,[R4, #+2]
    251             if (WiFiDebug) SendViaUSB((char*)AT_WD, sizeof(AT_WD)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000024   0F48               LDR      R0,??WizFiCommand_AT_WD_2  ;; WiFiDebug
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   03D0               BEQ      ??WizFiCommand_AT_WD_3
   \   0000002C   0621               MOVS     R1,#+6
   \   0000002E   0E48               LDR      R0,??WizFiCommand_AT_WD_2+0x4  ;; AT_WD
   \   00000030   ........           BL       SendViaUSB
    252             AT91F_US_SendFrame(USART,(char*)AT_WD,sizeof(AT_WD)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WD_3:
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0622               MOVS     R2,#+6
   \   0000003E   0A49               LDR      R1,??WizFiCommand_AT_WD_2+0x4  ;; AT_WD
   \   00000040   2800               MOVS     R0,R5
   \   00000042   ........           BL       AT91F_US_SendFrame
   \   00000046   02B0               ADD      SP,SP,#+8
    253             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000048   3834               ADDS     R4,R4,#+56
   \   0000004A   0848               LDR      R0,??WizFiCommand_AT_WD_2+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0748               LDR      R0,??WizFiCommand_AT_WD_2+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C4               STM      R4!,{R0,R1}
   \   0000005A   083C               SUBS     R4,R4,#+8
    254             
    255             
    256          }
   \   0000005C   01B0               ADD      SP,SP,#+4
   \   0000005E   30BC               POP      {R4,R5}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_WD_2:
   \   00000064   ........           DC32     WiFiDebug
   \   00000068   ........           DC32     AT_WD
   \   0000006C   ........           DC32     g_counter
   \   00000070   10270000           DC32     0x2710
    257          

   \                                 In section Debug.txt, align 4, keep-with-next
    258          char WizFiResponseCommand_AT_WD(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    259          {
   \                     WizFiResponseCommand_AT_WD:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    260             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    261             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_WD_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_WD_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    262             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WD_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_WD_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_WD_2
    263                  {
    264                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    265                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_WD_3
   \                     ??WizFiResponseCommand_AT_WD_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_WD_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_WD_4
    266                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_WD_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_WD_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    267                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    268                  }
    269             
    270             return odp;
   \                     ??WizFiResponseCommand_AT_WD_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_WD_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    271          }
    272          
    273          
    274          
    275          
    276          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    277          void WizFiCommand_AT_NDHCP(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    278          {      
   \                     WizFiCommand_AT_NDHCP:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    279             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_NDHCP_0
   \                     ??WizFiCommand_AT_NDHCP_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_NDHCP_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_NDHCP_1
    280             Net->Status.CurrentOrder=WizFi_AT_NDHCP;  
   \   00000020   0720               MOVS     R0,#+7
   \   00000022   A070               STRB     R0,[R4, #+2]
    281             if (Net->WiFi.IpNotAuto)
   \   00000024   5120               MOVS     R0,#+81
   \   00000026   205C               LDRB     R0,[R4, R0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   12D0               BEQ      ??WizFiCommand_AT_NDHCP_2
    282             {  
    283                 if (WiFiDebug) SendViaUSB((char*)AT_NDHCP_0, sizeof(AT_NDHCP_0)-1);
                                                  ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000002C   1948               LDR      R0,??WizFiCommand_AT_NDHCP_3  ;; WiFiDebug
   \   0000002E   0078               LDRB     R0,[R0, #+0]
   \   00000030   0028               CMP      R0,#+0
   \   00000032   03D0               BEQ      ??WizFiCommand_AT_NDHCP_4
   \   00000034   0B21               MOVS     R1,#+11
   \   00000036   1848               LDR      R0,??WizFiCommand_AT_NDHCP_3+0x4  ;; AT_NDHCP_0
   \   00000038   ........           BL       SendViaUSB
    284                 AT91F_US_SendFrame(USART,(char*)AT_NDHCP_0,sizeof(AT_NDHCP_0)-1,0, 0);                        //Wysyla ramke  
                                                 ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NDHCP_4:
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   0023               MOVS     R3,#+0
   \   00000044   0B22               MOVS     R2,#+11
   \   00000046   1449               LDR      R1,??WizFiCommand_AT_NDHCP_3+0x4  ;; AT_NDHCP_0
   \   00000048   2800               MOVS     R0,R5
   \   0000004A   ........           BL       AT91F_US_SendFrame
   \   0000004E   02B0               ADD      SP,SP,#+8
   \   00000050   11E0               B        ??WizFiCommand_AT_NDHCP_5
    285                 
    286             }else{ 
    287                 if (WiFiDebug) SendViaUSB((char*)AT_NDHCP_1, sizeof(AT_NDHCP_1)-1);
                                                  ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NDHCP_2:
   \   00000052   1048               LDR      R0,??WizFiCommand_AT_NDHCP_3  ;; WiFiDebug
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0028               CMP      R0,#+0
   \   00000058   03D0               BEQ      ??WizFiCommand_AT_NDHCP_6
   \   0000005A   0B21               MOVS     R1,#+11
   \   0000005C   0F48               LDR      R0,??WizFiCommand_AT_NDHCP_3+0x8  ;; AT_NDHCP_1
   \   0000005E   ........           BL       SendViaUSB
    288                 AT91F_US_SendFrame(USART,(char*)AT_NDHCP_1,sizeof(AT_NDHCP_1)-1,0, 0);                        //Wysyla ramke  
                                                 ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NDHCP_6:
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0023               MOVS     R3,#+0
   \   0000006A   0B22               MOVS     R2,#+11
   \   0000006C   0B49               LDR      R1,??WizFiCommand_AT_NDHCP_3+0x8  ;; AT_NDHCP_1
   \   0000006E   2800               MOVS     R0,R5
   \   00000070   ........           BL       AT91F_US_SendFrame
   \   00000074   02B0               ADD      SP,SP,#+8
    289                 
    290             }
    291             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu 
   \                     ??WizFiCommand_AT_NDHCP_5:
   \   00000076   3834               ADDS     R4,R4,#+56
   \   00000078   0948               LDR      R0,??WizFiCommand_AT_NDHCP_3+0xC  ;; g_counter
   \   0000007A   0CC8               LDM      R0!,{R2,R3}
   \   0000007C   0838               SUBS     R0,R0,#+8
   \   0000007E   0948               LDR      R0,??WizFiCommand_AT_NDHCP_3+0x10  ;; 0x2710
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   8018               ADDS     R0,R0,R2
   \   00000084   5941               ADCS     R1,R1,R3
   \   00000086   03C4               STM      R4!,{R0,R1}
   \   00000088   083C               SUBS     R4,R4,#+8
    292             
    293          }
   \   0000008A   01B0               ADD      SP,SP,#+4
   \   0000008C   30BC               POP      {R4,R5}
   \   0000008E   01BC               POP      {R0}
   \   00000090   0047               BX       R0               ;; return
   \   00000092   C046               Nop      
   \                     ??WizFiCommand_AT_NDHCP_3:
   \   00000094   ........           DC32     WiFiDebug
   \   00000098   ........           DC32     AT_NDHCP_0
   \   0000009C   ........           DC32     AT_NDHCP_1
   \   000000A0   ........           DC32     g_counter
   \   000000A4   10270000           DC32     0x2710
    294          

   \                                 In section Debug.txt, align 4, keep-with-next
    295          char WizFiResponseCommand_AT_NDHCP(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    296          {
   \                     WizFiResponseCommand_AT_NDHCP:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    297             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    298             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_NDHCP_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_NDHCP_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    299             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_NDHCP_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_NDHCP_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_NDHCP_2
    300                  {
    301                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    302                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_NDHCP_3
   \                     ??WizFiResponseCommand_AT_NDHCP_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NDHCP_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_NDHCP_4
    303                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_NDHCP_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_NDHCP_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    304                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    305                  }
    306             
    307             return odp;
   \                     ??WizFiResponseCommand_AT_NDHCP_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_NDHCP_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    308          }
    309          
    310          
    311          
    312          
    313          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    314          void WizFiCommand_AT_NSET(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    315          {      
   \                     WizFiCommand_AT_NSET:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0D00               MOVS     R5,R1
   \   00000004   1C00               MOVS     R4,R3
    316                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_NSET_0
   \                     ??WizFiCommand_AT_NSET_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_NSET_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_NSET_1
    317                     Net->Status.CurrentOrder=WizFi_AT_NSET;
   \   00000020   0620               MOVS     R0,#+6
   \   00000022   A070               STRB     R0,[R4, #+2]
    318                     char BTS=0;
   \   00000024   0026               MOVS     R6,#+0
    319                     for (char i=0; i<sizeof(AT_NSET); i++)  {Buff_TX[i]=AT_NSET[i];   BTS++;}
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   08E0               B        ??WizFiCommand_AT_NSET_2
   \                     ??WizFiCommand_AT_NSET_3:
   \   0000002A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000030   000E               LSRS     R0,R0,#+24
   \   00000032   4A49               LDR      R1,??WizFiCommand_AT_NSET_4  ;; AT_NSET
   \   00000034   095C               LDRB     R1,[R1, R0]
   \   00000036   2954               STRB     R1,[R5, R0]
   \   00000038   761C               ADDS     R6,R6,#+1
   \   0000003A   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_NSET_2:
   \   0000003C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   0928               CMP      R0,#+9
   \   00000042   F2D3               BCC      ??WizFiCommand_AT_NSET_3
    320                     BTS--;
   \   00000044   761E               SUBS     R6,R6,#+1
    321                     char ZN=0;
   \   00000046   0027               MOVS     R7,#+0
    322                     ZN=0; while ((Net->WiFi.IP[ZN]>0) && (ZN<=14)) {Buff_TX[BTS+ZN]=Net->WiFi.IP[ZN]; ZN++;}
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0700               MOVS     R7,R0
   \   0000004C   0BE0               B        ??WizFiCommand_AT_NSET_5
   \                     ??WizFiCommand_AT_NSET_6:
   \   0000004E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000050   360E               LSRS     R6,R6,#+24
   \   00000052   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000054   3F0E               LSRS     R7,R7,#+24
   \   00000056   F019               ADDS     R0,R6,R7
   \   00000058   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000005A   3F0E               LSRS     R7,R7,#+24
   \   0000005C   E119               ADDS     R1,R4,R7
   \   0000005E   5431               ADDS     R1,R1,#+84
   \   00000060   0978               LDRB     R1,[R1, #+0]
   \   00000062   2954               STRB     R1,[R5, R0]
   \   00000064   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_NSET_5:
   \   00000066   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000068   3F0E               LSRS     R7,R7,#+24
   \   0000006A   E019               ADDS     R0,R4,R7
   \   0000006C   5430               ADDS     R0,R0,#+84
   \   0000006E   0078               LDRB     R0,[R0, #+0]
   \   00000070   0128               CMP      R0,#+1
   \   00000072   03D3               BCC      ??WizFiCommand_AT_NSET_7
   \   00000074   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000076   3F0E               LSRS     R7,R7,#+24
   \   00000078   0F2F               CMP      R7,#+15
   \   0000007A   E8D3               BCC      ??WizFiCommand_AT_NSET_6
    323                     BTS+=ZN;
   \                     ??WizFiCommand_AT_NSET_7:
   \   0000007C   F619               ADDS     R6,R6,R7
    324                     Buff_TX[BTS++]=',';
   \   0000007E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000080   360E               LSRS     R6,R6,#+24
   \   00000082   2C20               MOVS     R0,#+44
   \   00000084   A855               STRB     R0,[R5, R6]
   \   00000086   761C               ADDS     R6,R6,#+1
    325                     ZN=0; while ((Net->WiFi.Mask[ZN]>0) && (ZN<=14)) {Buff_TX[BTS+ZN]=Net->WiFi.Mask[ZN]; ZN++;}
   \   00000088   0027               MOVS     R7,#+0
   \   0000008A   0BE0               B        ??WizFiCommand_AT_NSET_8
   \                     ??WizFiCommand_AT_NSET_9:
   \   0000008C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000008E   360E               LSRS     R6,R6,#+24
   \   00000090   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000092   3F0E               LSRS     R7,R7,#+24
   \   00000094   F019               ADDS     R0,R6,R7
   \   00000096   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000098   3F0E               LSRS     R7,R7,#+24
   \   0000009A   E119               ADDS     R1,R4,R7
   \   0000009C   6331               ADDS     R1,R1,#+99
   \   0000009E   0978               LDRB     R1,[R1, #+0]
   \   000000A0   2954               STRB     R1,[R5, R0]
   \   000000A2   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_NSET_8:
   \   000000A4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000A6   3F0E               LSRS     R7,R7,#+24
   \   000000A8   E019               ADDS     R0,R4,R7
   \   000000AA   6330               ADDS     R0,R0,#+99
   \   000000AC   0078               LDRB     R0,[R0, #+0]
   \   000000AE   0128               CMP      R0,#+1
   \   000000B0   03D3               BCC      ??WizFiCommand_AT_NSET_10
   \   000000B2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000B4   3F0E               LSRS     R7,R7,#+24
   \   000000B6   0F2F               CMP      R7,#+15
   \   000000B8   E8D3               BCC      ??WizFiCommand_AT_NSET_9
    326                     BTS+=ZN;
   \                     ??WizFiCommand_AT_NSET_10:
   \   000000BA   F619               ADDS     R6,R6,R7
    327                     Buff_TX[BTS++]=',';
   \   000000BC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000BE   360E               LSRS     R6,R6,#+24
   \   000000C0   2C20               MOVS     R0,#+44
   \   000000C2   A855               STRB     R0,[R5, R6]
   \   000000C4   761C               ADDS     R6,R6,#+1
    328                     ZN=0; while ((Net->WiFi.Gate[ZN]>0) && (ZN<=14)) {Buff_TX[BTS+ZN]=Net->WiFi.Gate[ZN]; ZN++;}
   \   000000C6   0027               MOVS     R7,#+0
   \   000000C8   0BE0               B        ??WizFiCommand_AT_NSET_11
   \                     ??WizFiCommand_AT_NSET_12:
   \   000000CA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000CC   360E               LSRS     R6,R6,#+24
   \   000000CE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000D0   3F0E               LSRS     R7,R7,#+24
   \   000000D2   F019               ADDS     R0,R6,R7
   \   000000D4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000D6   3F0E               LSRS     R7,R7,#+24
   \   000000D8   E119               ADDS     R1,R4,R7
   \   000000DA   7231               ADDS     R1,R1,#+114
   \   000000DC   0978               LDRB     R1,[R1, #+0]
   \   000000DE   2954               STRB     R1,[R5, R0]
   \   000000E0   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_NSET_11:
   \   000000E2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000E4   3F0E               LSRS     R7,R7,#+24
   \   000000E6   E019               ADDS     R0,R4,R7
   \   000000E8   7230               ADDS     R0,R0,#+114
   \   000000EA   0078               LDRB     R0,[R0, #+0]
   \   000000EC   0128               CMP      R0,#+1
   \   000000EE   03D3               BCC      ??WizFiCommand_AT_NSET_13
   \   000000F0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000F2   3F0E               LSRS     R7,R7,#+24
   \   000000F4   0F2F               CMP      R7,#+15
   \   000000F6   E8D3               BCC      ??WizFiCommand_AT_NSET_12
    329                     
    330                     Buff_TX[BTS+ZN++]=0x0d;
   \                     ??WizFiCommand_AT_NSET_13:
   \   000000F8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000FA   360E               LSRS     R6,R6,#+24
   \   000000FC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000FE   3F0E               LSRS     R7,R7,#+24
   \   00000100   F019               ADDS     R0,R6,R7
   \   00000102   0D21               MOVS     R1,#+13
   \   00000104   2954               STRB     R1,[R5, R0]
   \   00000106   7F1C               ADDS     R7,R7,#+1
    331                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+ZN);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000108   1548               LDR      R0,??WizFiCommand_AT_NSET_4+0x4  ;; WiFiDebug
   \   0000010A   0078               LDRB     R0,[R0, #+0]
   \   0000010C   0028               CMP      R0,#+0
   \   0000010E   09D0               BEQ      ??WizFiCommand_AT_NSET_14
   \   00000110   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000112   360E               LSRS     R6,R6,#+24
   \   00000114   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000116   3F0E               LSRS     R7,R7,#+24
   \   00000118   F119               ADDS     R1,R6,R7
   \   0000011A   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000011C   090C               LSRS     R1,R1,#+16
   \   0000011E   2800               MOVS     R0,R5
   \   00000120   ........           BL       SendViaUSB
    332                     AT91F_US_SendFrame(USART,Buff_TX,BTS+ZN,0, 0);                        //Wysyla ramke  
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NSET_14:
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   0023               MOVS     R3,#+0
   \   0000012C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000012E   360E               LSRS     R6,R6,#+24
   \   00000130   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000132   3F0E               LSRS     R7,R7,#+24
   \   00000134   F219               ADDS     R2,R6,R7
   \   00000136   2900               MOVS     R1,R5
   \   00000138   0298               LDR      R0,[SP, #+8]
   \   0000013A   ........           BL       AT91F_US_SendFrame
   \   0000013E   02B0               ADD      SP,SP,#+8
    333                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000140   3834               ADDS     R4,R4,#+56
   \   00000142   0848               LDR      R0,??WizFiCommand_AT_NSET_4+0x8  ;; g_counter
   \   00000144   0CC8               LDM      R0!,{R2,R3}
   \   00000146   0838               SUBS     R0,R0,#+8
   \   00000148   0748               LDR      R0,??WizFiCommand_AT_NSET_4+0xC  ;; 0x2710
   \   0000014A   0021               MOVS     R1,#+0
   \   0000014C   8018               ADDS     R0,R0,R2
   \   0000014E   5941               ADCS     R1,R1,R3
   \   00000150   03C4               STM      R4!,{R0,R1}
   \   00000152   083C               SUBS     R4,R4,#+8
    334                     
    335                     
    336          }
   \   00000154   01B0               ADD      SP,SP,#+4
   \   00000156   F0BC               POP      {R4-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_NSET_4:
   \   0000015C   ........           DC32     AT_NSET
   \   00000160   ........           DC32     WiFiDebug
   \   00000164   ........           DC32     g_counter
   \   00000168   10270000           DC32     0x2710
    337          

   \                                 In section Debug.txt, align 4, keep-with-next
    338          char WizFiResponseCommand_AT_NSET(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    339          {
   \                     WizFiResponseCommand_AT_NSET:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    340             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    341             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_NSET_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_NSET_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    342             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_NSET_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_NSET_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_NSET_2
    343                  {
    344                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    345                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_NSET_3
   \                     ??WizFiResponseCommand_AT_NSET_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NSET_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_NSET_4
    346                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_NSET_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_NSET_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    347                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    348                  }
    349             
    350             return odp;
   \                     ??WizFiResponseCommand_AT_NSET_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_NSET_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    351          }
    352          
    353          
    354          
    355          
    356          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    357          void WizFiCommand_AT_WAUTH_1(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    358          {
   \                     WizFiCommand_AT_WAUTH_1:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    359             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_WAUTH_1_0
   \                     ??WizFiCommand_AT_WAUTH_1_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_WAUTH_1_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_WAUTH_1_1
    360             Net->Status.CurrentOrder=WizFi_AT_WAUTH_1;    
   \   00000020   0820               MOVS     R0,#+8
   \   00000022   A070               STRB     R0,[R4, #+2]
    361             if (WiFiDebug) SendViaUSB((char*)AT_WAUTH_1, sizeof(AT_WAUTH_1)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000024   0F48               LDR      R0,??WizFiCommand_AT_WAUTH_1_2  ;; WiFiDebug
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   03D0               BEQ      ??WizFiCommand_AT_WAUTH_1_3
   \   0000002C   0B21               MOVS     R1,#+11
   \   0000002E   0E48               LDR      R0,??WizFiCommand_AT_WAUTH_1_2+0x4  ;; AT_WAUTH_1
   \   00000030   ........           BL       SendViaUSB
    362             AT91F_US_SendFrame(USART,(char*)AT_WAUTH_1,sizeof(AT_WAUTH_1)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WAUTH_1_3:
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0B22               MOVS     R2,#+11
   \   0000003E   0A49               LDR      R1,??WizFiCommand_AT_WAUTH_1_2+0x4  ;; AT_WAUTH_1
   \   00000040   2800               MOVS     R0,R5
   \   00000042   ........           BL       AT91F_US_SendFrame
   \   00000046   02B0               ADD      SP,SP,#+8
    363             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000048   3834               ADDS     R4,R4,#+56
   \   0000004A   0848               LDR      R0,??WizFiCommand_AT_WAUTH_1_2+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0748               LDR      R0,??WizFiCommand_AT_WAUTH_1_2+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C4               STM      R4!,{R0,R1}
   \   0000005A   083C               SUBS     R4,R4,#+8
    364          }
   \   0000005C   01B0               ADD      SP,SP,#+4
   \   0000005E   30BC               POP      {R4,R5}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_WAUTH_1_2:
   \   00000064   ........           DC32     WiFiDebug
   \   00000068   ........           DC32     AT_WAUTH_1
   \   0000006C   ........           DC32     g_counter
   \   00000070   10270000           DC32     0x2710
    365          

   \                                 In section Debug.txt, align 4, keep-with-next
    366          char WizFiResponseCommand_AT_WAUTH_1(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    367          {
   \                     WizFiResponseCommand_AT_WAUTH_1:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    368             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    369             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_WAUTH_1_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_WAUTH_1_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    370             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WAUTH_1_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_WAUTH_1_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_WAUTH_1_2
    371                  {
    372                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    373                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_WAUTH_1_3
   \                     ??WizFiResponseCommand_AT_WAUTH_1_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_WAUTH_1_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_WAUTH_1_4
    374                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_WAUTH_1_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_WAUTH_1_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    375                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    376                  }
    377             
    378             return odp;
   \                     ??WizFiResponseCommand_AT_WAUTH_1_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_WAUTH_1_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    379          }
    380          
    381          
    382          //funkcja konwertuj¹ca string asci na string hex. ka¿da litera rozk³adana jest na dwie cyfry hex które s¹ zapisywane spowrotem jako ascii

   \                                 In section Debug.txt, align 4, keep-with-next
    383          void AsciToHexStr(char *AsciStr, char *HexStr)
    384          {
   \                     AsciToHexStr:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
    385          
    386             
    387             char L=0; //litera
   \   00000006   0026               MOVS     R6,#+0
    388             char LHex=0; //cyfra hex
   \   00000008   0027               MOVS     R7,#+0
   \   0000000A   1BE0               B        ??AsciToHexStr_0
    389             while ((AsciStr[L]>0) && (L<100))
    390             {
    391                CharToStr((AsciStr[L]>>4), &HexStr[LHex++], 1); 
   \                     ??AsciToHexStr_1:
   \   0000000C   0122               MOVS     R2,#+1
   \   0000000E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000010   3F0E               LSRS     R7,R7,#+24
   \   00000012   E919               ADDS     R1,R5,R7
   \   00000014   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000016   360E               LSRS     R6,R6,#+24
   \   00000018   A05D               LDRB     R0,[R4, R6]
   \   0000001A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000001C   000E               LSRS     R0,R0,#+24
   \   0000001E   0009               LSRS     R0,R0,#+4
   \   00000020   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000022   000E               LSRS     R0,R0,#+24
   \   00000024   ........           BL       CharToStr
   \   00000028   7F1C               ADDS     R7,R7,#+1
    392                CharToStr((AsciStr[L]&0xF), &HexStr[LHex++], 1); 
   \   0000002A   0122               MOVS     R2,#+1
   \   0000002C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000002E   3F0E               LSRS     R7,R7,#+24
   \   00000030   E919               ADDS     R1,R5,R7
   \   00000032   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000034   360E               LSRS     R6,R6,#+24
   \   00000036   A05D               LDRB     R0,[R4, R6]
   \   00000038   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   0000003A   000F               LSRS     R0,R0,#+28
   \   0000003C   ........           BL       CharToStr
   \   00000040   7F1C               ADDS     R7,R7,#+1
    393                L++;
   \   00000042   761C               ADDS     R6,R6,#+1
    394             }
   \                     ??AsciToHexStr_0:
   \   00000044   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000046   360E               LSRS     R6,R6,#+24
   \   00000048   A05D               LDRB     R0,[R4, R6]
   \   0000004A   0128               CMP      R0,#+1
   \   0000004C   03D3               BCC      ??AsciToHexStr_2
   \   0000004E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000050   360E               LSRS     R6,R6,#+24
   \   00000052   642E               CMP      R6,#+100
   \   00000054   DAD3               BCC      ??AsciToHexStr_1
    395             HexStr[LHex]=0;
   \                     ??AsciToHexStr_2:
   \   00000056   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000058   3F0E               LSRS     R7,R7,#+24
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   E855               STRB     R0,[R5, R7]
    396          }
   \   0000005E   01B0               ADD      SP,SP,#+4
   \   00000060   F0BC               POP      {R4-R7}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
    397          
    398          
    399          
    400          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    401          char WizFiCommand_AT_WWEP1(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    402          {
   \                     WizFiCommand_AT_WWEP1:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0D00               MOVS     R5,R1
   \   00000004   1C00               MOVS     R4,R3
    403                     //okrelenie typu wpisu czy? 64bit hex, czy 64bit asci, czy 128bit ASCI  -- 128B hex nie jest obs³ugiwane   
    404                     //5 znaków - kod asci 64b
    405                     //13 znaków - kod asci 128b
    406                     //10 znaków - kod hex 64 bit
    407                     //wartoæ inna to b³¹d lub kodowanie nie WEP
    408                     
    409                     char PassLen=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   00E0               B        ??WizFiCommand_AT_WWEP1_0
    410                     while ((Net->WiFi.Key[PassLen]>0) && (PassLen<=15)) PassLen++;
   \                     ??WizFiCommand_AT_WWEP1_1:
   \   0000000A   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_WWEP1_0:
   \   0000000C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000000E   090E               LSRS     R1,R1,#+24
   \   00000010   6218               ADDS     R2,R4,R1
   \   00000012   9F32               ADDS     R2,R2,#+159
   \   00000014   1278               LDRB     R2,[R2, #+0]
   \   00000016   012A               CMP      R2,#+1
   \   00000018   03D3               BCC      ??WizFiCommand_AT_WWEP1_2
   \   0000001A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000001C   090E               LSRS     R1,R1,#+24
   \   0000001E   1029               CMP      R1,#+16
   \   00000020   F3D3               BCC      ??WizFiCommand_AT_WWEP1_1
    411                     
    412                     if ((PassLen!=5) && (PassLen!=13) && (PassLen!=10)) return 0;        //z³a iloc znaków lub nie ten typ kodowania
   \                     ??WizFiCommand_AT_WWEP1_2:
   \   00000022   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000024   090E               LSRS     R1,R1,#+24
   \   00000026   0529               CMP      R1,#+5
   \   00000028   09D0               BEQ      ??WizFiCommand_AT_WWEP1_3
   \   0000002A   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000002C   090E               LSRS     R1,R1,#+24
   \   0000002E   0D29               CMP      R1,#+13
   \   00000030   05D0               BEQ      ??WizFiCommand_AT_WWEP1_3
   \   00000032   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000034   090E               LSRS     R1,R1,#+24
   \   00000036   0A29               CMP      R1,#+10
   \   00000038   01D0               BEQ      ??WizFiCommand_AT_WWEP1_3
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   7EE0               B        ??WizFiCommand_AT_WWEP1_4
    413             
    414                     
    415                     //wstawienie rozkazu 
    416                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \                     ??WizFiCommand_AT_WWEP1_3:
   \   0000003E   0022               MOVS     R2,#+0
   \   00000040   04E0               B        ??WizFiCommand_AT_WWEP1_5
   \                     ??WizFiCommand_AT_WWEP1_6:
   \   00000042   1204               LSLS     R2,R2,#+16       ;; SignExtS R2,R2,#+16,#+16
   \   00000044   1214               ASRS     R2,R2,#+16
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   8354               STRB     R3,[R0, R2]
   \   0000004A   521C               ADDS     R2,R2,#+1
   \                     ??WizFiCommand_AT_WWEP1_5:
   \   0000004C   9123               MOVS     R3,#+145
   \   0000004E   9B00               LSLS     R3,R3,#+2        ;; #+580
   \   00000050   1204               LSLS     R2,R2,#+16       ;; SignExtS R2,R2,#+16,#+16
   \   00000052   1214               ASRS     R2,R2,#+16
   \   00000054   9A42               CMP      R2,R3
   \   00000056   F4DB               BLT      ??WizFiCommand_AT_WWEP1_6
    417                    // Net->Status.CurrentOrder=WizFi_AT_WWEP1;
    418                     char BTS=0;
   \   00000058   0026               MOVS     R6,#+0
    419                     for (char i=0; i<sizeof(AT_WWEP1); i++)  {Buff_TX[i]=AT_WWEP1[i];   BTS++;}
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   08E0               B        ??WizFiCommand_AT_WWEP1_7
   \                     ??WizFiCommand_AT_WWEP1_8:
   \   0000005E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000060   000E               LSRS     R0,R0,#+24
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   374A               LDR      R2,??WizFiCommand_AT_WWEP1_9  ;; AT_WWEP1
   \   00000068   125C               LDRB     R2,[R2, R0]
   \   0000006A   2A54               STRB     R2,[R5, R0]
   \   0000006C   761C               ADDS     R6,R6,#+1
   \   0000006E   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_WWEP1_7:
   \   00000070   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000072   000E               LSRS     R0,R0,#+24
   \   00000074   0A28               CMP      R0,#+10
   \   00000076   F2D3               BCC      ??WizFiCommand_AT_WWEP1_8
    420                     BTS--;
   \   00000078   761E               SUBS     R6,R6,#+1
    421                     
    422                     
    423                     //wstawienie klucza
    424                     char Key[15];
    425                     char PassN=0;
   \   0000007A   0027               MOVS     R7,#+0
    426                     switch (PassLen)
   \   0000007C   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   0000007E   090E               LSRS     R1,R1,#+24
   \   00000080   0529               CMP      R1,#+5
   \   00000082   04D0               BEQ      ??WizFiCommand_AT_WWEP1_10
   \   00000084   0A29               CMP      R1,#+10
   \   00000086   14D0               BEQ      ??WizFiCommand_AT_WWEP1_11
   \   00000088   0D29               CMP      R1,#+13
   \   0000008A   09D0               BEQ      ??WizFiCommand_AT_WWEP1_12
   \   0000008C   26E0               B        ??WizFiCommand_AT_WWEP1_13
    427                     {
    428                        case 5:    
    429                            PassN=10;  
   \                     ??WizFiCommand_AT_WWEP1_10:
   \   0000008E   0A27               MOVS     R7,#+10
    430                            AsciToHexStr(Net->WiFi.Key, &Buff_TX[BTS]);
   \   00000090   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000092   360E               LSRS     R6,R6,#+24
   \   00000094   A919               ADDS     R1,R5,R6
   \   00000096   2000               MOVS     R0,R4
   \   00000098   9F30               ADDS     R0,R0,#+159
   \   0000009A   ........           BL       AsciToHexStr
   \   0000009E   1DE0               B        ??WizFiCommand_AT_WWEP1_13
    431                        break;
    432          
    433                        case 13:    
    434                            PassN=26; 
   \                     ??WizFiCommand_AT_WWEP1_12:
   \   000000A0   1A27               MOVS     R7,#+26
    435                            AsciToHexStr(Net->WiFi.Key, &Buff_TX[BTS]);
   \   000000A2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000A4   360E               LSRS     R6,R6,#+24
   \   000000A6   A919               ADDS     R1,R5,R6
   \   000000A8   2000               MOVS     R0,R4
   \   000000AA   9F30               ADDS     R0,R0,#+159
   \   000000AC   ........           BL       AsciToHexStr
   \   000000B0   14E0               B        ??WizFiCommand_AT_WWEP1_13
    436                        break;
    437                        
    438                        case 10:    
    439                            PassN=10;  for (char i=0; i<PassN; i++) Buff_TX[BTS+i]=Net->WiFi.Key[i];
   \                     ??WizFiCommand_AT_WWEP1_11:
   \   000000B2   0A27               MOVS     R7,#+10
   \   000000B4   0020               MOVS     R0,#+0
   \   000000B6   0BE0               B        ??WizFiCommand_AT_WWEP1_14
   \                     ??WizFiCommand_AT_WWEP1_15:
   \   000000B8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000BA   360E               LSRS     R6,R6,#+24
   \   000000BC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BE   000E               LSRS     R0,R0,#+24
   \   000000C0   3118               ADDS     R1,R6,R0
   \   000000C2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C4   000E               LSRS     R0,R0,#+24
   \   000000C6   2218               ADDS     R2,R4,R0
   \   000000C8   9F32               ADDS     R2,R2,#+159
   \   000000CA   1278               LDRB     R2,[R2, #+0]
   \   000000CC   6A54               STRB     R2,[R5, R1]
   \   000000CE   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_WWEP1_14:
   \   000000D0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D2   000E               LSRS     R0,R0,#+24
   \   000000D4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000D6   3F0E               LSRS     R7,R7,#+24
   \   000000D8   B842               CMP      R0,R7
   \   000000DA   EDD3               BCC      ??WizFiCommand_AT_WWEP1_15
    440                        break;
    441                     }
    442            
    443          
    444                     
    445                     
    446                      
    447                     Buff_TX[BTS+PassN]=0x0d;
   \                     ??WizFiCommand_AT_WWEP1_13:
   \   000000DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \   000000E0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000E2   3F0E               LSRS     R7,R7,#+24
   \   000000E4   F019               ADDS     R0,R6,R7
   \   000000E6   0D21               MOVS     R1,#+13
   \   000000E8   2954               STRB     R1,[R5, R0]
    448                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+PassN+1);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000000EA   1748               LDR      R0,??WizFiCommand_AT_WWEP1_9+0x4  ;; WiFiDebug
   \   000000EC   0078               LDRB     R0,[R0, #+0]
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   0AD0               BEQ      ??WizFiCommand_AT_WWEP1_16
   \   000000F2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000F4   360E               LSRS     R6,R6,#+24
   \   000000F6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000F8   3F0E               LSRS     R7,R7,#+24
   \   000000FA   F119               ADDS     R1,R6,R7
   \   000000FC   491C               ADDS     R1,R1,#+1
   \   000000FE   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   00000100   090C               LSRS     R1,R1,#+16
   \   00000102   2800               MOVS     R0,R5
   \   00000104   ........           BL       SendViaUSB
    449                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN+1,0, 0);                        //Wysyla ramke  
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"

             char Key[15];
                  ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c",424  Warning[Pe177]: 
          variable "Key" was declared but never referenced
   \                     ??WizFiCommand_AT_WWEP1_16:
   \   00000108   82B0               SUB      SP,SP,#+8
   \   0000010A   0020               MOVS     R0,#+0
   \   0000010C   0090               STR      R0,[SP, #+0]
   \   0000010E   0023               MOVS     R3,#+0
   \   00000110   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000112   360E               LSRS     R6,R6,#+24
   \   00000114   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000116   3F0E               LSRS     R7,R7,#+24
   \   00000118   F219               ADDS     R2,R6,R7
   \   0000011A   521C               ADDS     R2,R2,#+1
   \   0000011C   2900               MOVS     R1,R5
   \   0000011E   0298               LDR      R0,[SP, #+8]
   \   00000120   ........           BL       AT91F_US_SendFrame
   \   00000124   02B0               ADD      SP,SP,#+8
    450                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000126   3834               ADDS     R4,R4,#+56
   \   00000128   0848               LDR      R0,??WizFiCommand_AT_WWEP1_9+0x8  ;; g_counter
   \   0000012A   0CC8               LDM      R0!,{R2,R3}
   \   0000012C   0838               SUBS     R0,R0,#+8
   \   0000012E   0848               LDR      R0,??WizFiCommand_AT_WWEP1_9+0xC  ;; 0x2710
   \   00000130   0021               MOVS     R1,#+0
   \   00000132   8018               ADDS     R0,R0,R2
   \   00000134   5941               ADCS     R1,R1,R3
   \   00000136   03C4               STM      R4!,{R0,R1}
   \   00000138   083C               SUBS     R4,R4,#+8
    451                     
    452                     
    453                     //while ((Net->WiFi.Key[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.Key[PassN]; PassN++;}
    454             
    455                    return 1;
   \   0000013A   0120               MOVS     R0,#+1
   \                     ??WizFiCommand_AT_WWEP1_4:
   \   0000013C   01B0               ADD      SP,SP,#+4
   \   0000013E   F0BC               POP      {R4-R7}
   \   00000140   02BC               POP      {R1}
   \   00000142   0847               BX       R1               ;; return
   \                     ??WizFiCommand_AT_WWEP1_9:
   \   00000144   ........           DC32     AT_WWEP1
   \   00000148   ........           DC32     WiFiDebug
   \   0000014C   ........           DC32     g_counter
   \   00000150   10270000           DC32     0x2710
    456             
    457          }
    458          

   \                                 In section Debug.txt, align 4, keep-with-next
    459          char WizFiResponseCommand_AT_WWEP1(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    460          {
   \                     WizFiResponseCommand_AT_WWEP1:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    461             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    462             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_WWEP1_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_WWEP1_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    463             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WWEP1_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_WWEP1_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_WWEP1_2
    464                  {
    465                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    466                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_WWEP1_3
   \                     ??WizFiResponseCommand_AT_WWEP1_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_WWEP1_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_WWEP1_4
    467                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_WWEP1_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_WWEP1_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    468                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    469                  }
    470             
    471             return odp;
   \                     ??WizFiResponseCommand_AT_WWEP1_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_WWEP1_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    472          }
    473          
    474          
    475          
    476          
    477          
    478          
    479          
    480          
    481          
    482          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    483          char WizFiCommand_AT_WWPA(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    484          {
   \                     WizFiCommand_AT_WWPA:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0D00               MOVS     R5,R1
   \   00000004   1C00               MOVS     R4,R3
    485                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   04E0               B        ??WizFiCommand_AT_WWPA_0
   \                     ??WizFiCommand_AT_WWPA_1:
   \   0000000A   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000C   0914               ASRS     R1,R1,#+16
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   4254               STRB     R2,[R0, R1]
   \   00000012   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_WWPA_0:
   \   00000014   9122               MOVS     R2,#+145
   \   00000016   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000018   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000001A   0914               ASRS     R1,R1,#+16
   \   0000001C   9142               CMP      R1,R2
   \   0000001E   F4DB               BLT      ??WizFiCommand_AT_WWPA_1
    486                     Net->Status.CurrentOrder=WizFi_AT_WWPA;
   \   00000020   0A20               MOVS     R0,#+10
   \   00000022   A070               STRB     R0,[R4, #+2]
    487                     char BTS=0;
   \   00000024   0026               MOVS     R6,#+0
    488                     for (char i=0; i<sizeof(AT_WWPA); i++)  {Buff_TX[i]=AT_WWPA[i];   BTS++;}
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   08E0               B        ??WizFiCommand_AT_WWPA_2
   \                     ??WizFiCommand_AT_WWPA_3:
   \   0000002A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000030   000E               LSRS     R0,R0,#+24
   \   00000032   2E49               LDR      R1,??WizFiCommand_AT_WWPA_4  ;; AT_WWPA
   \   00000034   095C               LDRB     R1,[R1, R0]
   \   00000036   2954               STRB     R1,[R5, R0]
   \   00000038   761C               ADDS     R6,R6,#+1
   \   0000003A   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_WWPA_2:
   \   0000003C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   0928               CMP      R0,#+9
   \   00000042   F2D3               BCC      ??WizFiCommand_AT_WWPA_3
    489                     BTS--;
   \   00000044   761E               SUBS     R6,R6,#+1
    490                     char PassN=0;
   \   00000046   0027               MOVS     R7,#+0
   \   00000048   0BE0               B        ??WizFiCommand_AT_WWPA_5
    491                     while ((Net->WiFi.Key[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.Key[PassN]; PassN++;}
   \                     ??WizFiCommand_AT_WWPA_6:
   \   0000004A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000004C   360E               LSRS     R6,R6,#+24
   \   0000004E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000050   3F0E               LSRS     R7,R7,#+24
   \   00000052   F019               ADDS     R0,R6,R7
   \   00000054   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000056   3F0E               LSRS     R7,R7,#+24
   \   00000058   E119               ADDS     R1,R4,R7
   \   0000005A   9F31               ADDS     R1,R1,#+159
   \   0000005C   0978               LDRB     R1,[R1, #+0]
   \   0000005E   2954               STRB     R1,[R5, R0]
   \   00000060   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_WWPA_5:
   \   00000062   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000064   3F0E               LSRS     R7,R7,#+24
   \   00000066   E019               ADDS     R0,R4,R7
   \   00000068   9F30               ADDS     R0,R0,#+159
   \   0000006A   0078               LDRB     R0,[R0, #+0]
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   03D3               BCC      ??WizFiCommand_AT_WWPA_7
   \   00000070   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000072   3F0E               LSRS     R7,R7,#+24
   \   00000074   102F               CMP      R7,#+16
   \   00000076   E8D3               BCC      ??WizFiCommand_AT_WWPA_6
    492                     
    493                     if (PassN<8) return 0;
   \                     ??WizFiCommand_AT_WWPA_7:
   \   00000078   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000007A   3F0E               LSRS     R7,R7,#+24
   \   0000007C   082F               CMP      R7,#+8
   \   0000007E   01D2               BCS      ??WizFiCommand_AT_WWPA_8
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   2EE0               B        ??WizFiCommand_AT_WWPA_9
    494                     
    495                     Buff_TX[BTS+PassN++]=0x0d;
   \                     ??WizFiCommand_AT_WWPA_8:
   \   00000084   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000086   360E               LSRS     R6,R6,#+24
   \   00000088   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000008A   3F0E               LSRS     R7,R7,#+24
   \   0000008C   F019               ADDS     R0,R6,R7
   \   0000008E   0D21               MOVS     R1,#+13
   \   00000090   2954               STRB     R1,[R5, R0]
   \   00000092   7F1C               ADDS     R7,R7,#+1
    496                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+PassN);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000094   1648               LDR      R0,??WizFiCommand_AT_WWPA_4+0x4  ;; WiFiDebug
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   09D0               BEQ      ??WizFiCommand_AT_WWPA_10
   \   0000009C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000009E   360E               LSRS     R6,R6,#+24
   \   000000A0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000A2   3F0E               LSRS     R7,R7,#+24
   \   000000A4   F119               ADDS     R1,R6,R7
   \   000000A6   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   000000A8   090C               LSRS     R1,R1,#+16
   \   000000AA   2800               MOVS     R0,R5
   \   000000AC   ........           BL       SendViaUSB
    497                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WWPA_10:
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   0023               MOVS     R3,#+0
   \   000000B8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000BA   360E               LSRS     R6,R6,#+24
   \   000000BC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000BE   3F0E               LSRS     R7,R7,#+24
   \   000000C0   F219               ADDS     R2,R6,R7
   \   000000C2   2900               MOVS     R1,R5
   \   000000C4   0298               LDR      R0,[SP, #+8]
   \   000000C6   ........           BL       AT91F_US_SendFrame
   \   000000CA   02B0               ADD      SP,SP,#+8
    498                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000CC   3834               ADDS     R4,R4,#+56
   \   000000CE   0948               LDR      R0,??WizFiCommand_AT_WWPA_4+0x8  ;; g_counter
   \   000000D0   0CC8               LDM      R0!,{R2,R3}
   \   000000D2   0838               SUBS     R0,R0,#+8
   \   000000D4   0848               LDR      R0,??WizFiCommand_AT_WWPA_4+0xC  ;; 0x2710
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   8018               ADDS     R0,R0,R2
   \   000000DA   5941               ADCS     R1,R1,R3
   \   000000DC   03C4               STM      R4!,{R0,R1}
   \   000000DE   083C               SUBS     R4,R4,#+8
    499                     return 1;
   \   000000E0   0120               MOVS     R0,#+1
   \                     ??WizFiCommand_AT_WWPA_9:
   \   000000E2   01B0               ADD      SP,SP,#+4
   \   000000E4   F0BC               POP      {R4-R7}
   \   000000E6   02BC               POP      {R1}
   \   000000E8   0847               BX       R1               ;; return
   \   000000EA   C046               Nop      
   \                     ??WizFiCommand_AT_WWPA_4:
   \   000000EC   ........           DC32     AT_WWPA
   \   000000F0   ........           DC32     WiFiDebug
   \   000000F4   ........           DC32     g_counter
   \   000000F8   10270000           DC32     0x2710
    500                     
    501          }
    502          

   \                                 In section Debug.txt, align 4, keep-with-next
    503          char WizFiResponseCommand_AT_WWPA(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    504          {
   \                     WizFiResponseCommand_AT_WWPA:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    505             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    506             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1848               LDR      R0,??WizFiResponseCommand_AT_WWPA_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_WWPA_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    507             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WWPA_1:
   \   00000022   13A1               ADR      R1,??WizFiResponseCommand_AT_WWPA_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   18D0               BEQ      ??WizFiResponseCommand_AT_WWPA_2
    508                  {
    509                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    510                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_WWPA_3
   \                     ??WizFiResponseCommand_AT_WWPA_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_WWPA_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_WWPA_4
    511                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0A48               LDR      R0,??WizFiResponseCommand_AT_WWPA_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0948               LDR      R0,??WizFiResponseCommand_AT_WWPA_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    512                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    513                  }
    514             
    515             return odp;
   \                     ??WizFiResponseCommand_AT_WWPA_2:
   \   00000060   2800               MOVS     R0,R5
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   70BC               POP      {R4-R6}
   \   00000068   02BC               POP      {R1}
   \   0000006A   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_WWPA_0:
   \   0000006C   ........           DC32     WiFiDebug
   \   00000070   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000074   ........           DC32     g_counter
   \   00000078   10270000           DC32     0x2710
    516          }
    517          
    518          
    519          
    520          
    521          
    522          
    523          
    524          
    525          //³¹czenie z accespointem ------------------------------------------------------
    526          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    527          void WizFiCommand_AT_WA(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    528          {
   \                     WizFiCommand_AT_WA:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0D00               MOVS     R5,R1
   \   00000004   1C00               MOVS     R4,R3
    529               if (Net->WiFi.SSID[0]!=0)
   \   00000006   AE21               MOVS     R1,#+174
   \   00000008   615C               LDRB     R1,[R4, R1]
   \   0000000A   0029               CMP      R1,#+0
   \   0000000C   66D0               BEQ      ??WizFiCommand_AT_WA_0
    530               {
    531                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   04E0               B        ??WizFiCommand_AT_WA_1
   \                     ??WizFiCommand_AT_WA_2:
   \   00000012   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000014   0914               ASRS     R1,R1,#+16
   \   00000016   0022               MOVS     R2,#+0
   \   00000018   4254               STRB     R2,[R0, R1]
   \   0000001A   491C               ADDS     R1,R1,#+1
   \                     ??WizFiCommand_AT_WA_1:
   \   0000001C   9122               MOVS     R2,#+145
   \   0000001E   9200               LSLS     R2,R2,#+2        ;; #+580
   \   00000020   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000022   0914               ASRS     R1,R1,#+16
   \   00000024   9142               CMP      R1,R2
   \   00000026   F4DB               BLT      ??WizFiCommand_AT_WA_2
    532                     Net->Status.CurrentOrder=WizFi_AT_WA;
   \   00000028   0B20               MOVS     R0,#+11
   \   0000002A   A070               STRB     R0,[R4, #+2]
    533          
    534                     char BTS=0;
   \   0000002C   0026               MOVS     R6,#+0
    535                     for (char i=0; i<sizeof(AT_WA); i++)  {Buff_TX[i]=AT_WA[i];   BTS++;}
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   08E0               B        ??WizFiCommand_AT_WA_3
   \                     ??WizFiCommand_AT_WA_4:
   \   00000032   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000038   000E               LSRS     R0,R0,#+24
   \   0000003A   2A49               LDR      R1,??WizFiCommand_AT_WA_5  ;; AT_WA
   \   0000003C   095C               LDRB     R1,[R1, R0]
   \   0000003E   2954               STRB     R1,[R5, R0]
   \   00000040   761C               ADDS     R6,R6,#+1
   \   00000042   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_WA_3:
   \   00000044   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   0728               CMP      R0,#+7
   \   0000004A   F2D3               BCC      ??WizFiCommand_AT_WA_4
    536                     BTS--;
   \   0000004C   761E               SUBS     R6,R6,#+1
    537                     char PassN=0;
   \   0000004E   0027               MOVS     R7,#+0
   \   00000050   0BE0               B        ??WizFiCommand_AT_WA_6
    538                     while ((Net->WiFi.SSID[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.SSID[PassN]; PassN++;}
   \                     ??WizFiCommand_AT_WA_7:
   \   00000052   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000054   360E               LSRS     R6,R6,#+24
   \   00000056   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000058   3F0E               LSRS     R7,R7,#+24
   \   0000005A   F019               ADDS     R0,R6,R7
   \   0000005C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000005E   3F0E               LSRS     R7,R7,#+24
   \   00000060   E119               ADDS     R1,R4,R7
   \   00000062   AE31               ADDS     R1,R1,#+174
   \   00000064   0978               LDRB     R1,[R1, #+0]
   \   00000066   2954               STRB     R1,[R5, R0]
   \   00000068   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_WA_6:
   \   0000006A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000006C   3F0E               LSRS     R7,R7,#+24
   \   0000006E   E019               ADDS     R0,R4,R7
   \   00000070   AE30               ADDS     R0,R0,#+174
   \   00000072   0078               LDRB     R0,[R0, #+0]
   \   00000074   0128               CMP      R0,#+1
   \   00000076   03D3               BCC      ??WizFiCommand_AT_WA_8
   \   00000078   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000007A   3F0E               LSRS     R7,R7,#+24
   \   0000007C   102F               CMP      R7,#+16
   \   0000007E   E8D3               BCC      ??WizFiCommand_AT_WA_7
    539                     Buff_TX[BTS+PassN++]=0x0d;
   \                     ??WizFiCommand_AT_WA_8:
   \   00000080   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000082   360E               LSRS     R6,R6,#+24
   \   00000084   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000086   3F0E               LSRS     R7,R7,#+24
   \   00000088   F019               ADDS     R0,R6,R7
   \   0000008A   0D21               MOVS     R1,#+13
   \   0000008C   2954               STRB     R1,[R5, R0]
   \   0000008E   7F1C               ADDS     R7,R7,#+1
    540                     
    541                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+PassN);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000090   1548               LDR      R0,??WizFiCommand_AT_WA_5+0x4  ;; WiFiDebug
   \   00000092   0078               LDRB     R0,[R0, #+0]
   \   00000094   0028               CMP      R0,#+0
   \   00000096   09D0               BEQ      ??WizFiCommand_AT_WA_9
   \   00000098   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000009A   360E               LSRS     R6,R6,#+24
   \   0000009C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000009E   3F0E               LSRS     R7,R7,#+24
   \   000000A0   F119               ADDS     R1,R6,R7
   \   000000A2   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   000000A4   090C               LSRS     R1,R1,#+16
   \   000000A6   2800               MOVS     R0,R5
   \   000000A8   ........           BL       SendViaUSB
    542                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WA_9:
   \   000000AC   82B0               SUB      SP,SP,#+8
   \   000000AE   0020               MOVS     R0,#+0
   \   000000B0   0090               STR      R0,[SP, #+0]
   \   000000B2   0023               MOVS     R3,#+0
   \   000000B4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000B6   360E               LSRS     R6,R6,#+24
   \   000000B8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000BA   3F0E               LSRS     R7,R7,#+24
   \   000000BC   F219               ADDS     R2,R6,R7
   \   000000BE   2900               MOVS     R1,R5
   \   000000C0   0298               LDR      R0,[SP, #+8]
   \   000000C2   ........           BL       AT91F_US_SendFrame
   \   000000C6   02B0               ADD      SP,SP,#+8
    543                     Net->Status.Timeout=g_counter + AP_CONNECT_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000C8   3834               ADDS     R4,R4,#+56
   \   000000CA   0848               LDR      R0,??WizFiCommand_AT_WA_5+0x8  ;; g_counter
   \   000000CC   0CC8               LDM      R0!,{R2,R3}
   \   000000CE   0838               SUBS     R0,R0,#+8
   \   000000D0   0748               LDR      R0,??WizFiCommand_AT_WA_5+0xC  ;; 0x4e20
   \   000000D2   0021               MOVS     R1,#+0
   \   000000D4   8018               ADDS     R0,R0,R2
   \   000000D6   5941               ADCS     R1,R1,R3
   \   000000D8   03C4               STM      R4!,{R0,R1}
   \   000000DA   083C               SUBS     R4,R4,#+8
    544                     
    545                     
    546               }
    547          
    548          
    549          }
   \                     ??WizFiCommand_AT_WA_0:
   \   000000DC   01B0               ADD      SP,SP,#+4
   \   000000DE   F0BC               POP      {R4-R7}
   \   000000E0   01BC               POP      {R0}
   \   000000E2   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_WA_5:
   \   000000E4   ........           DC32     AT_WA
   \   000000E8   ........           DC32     WiFiDebug
   \   000000EC   ........           DC32     g_counter
   \   000000F0   204E0000           DC32     0x4e20
    550          

   \                                 In section Debug.txt, align 4, keep-with-next
    551          char WizFiResponseCommand_AT_WA(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    552          {
   \                     WizFiResponseCommand_AT_WA:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1C00               MOVS     R4,R3
    553             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
    554             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   1948               LDR      R0,??WizFiResponseCommand_AT_WA_0  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   08D0               BEQ      ??WizFiResponseCommand_AT_WA_1
   \   00000010   3000               MOVS     R0,R6
   \   00000012   ........           BL       strlen
   \   00000016   0100               MOVS     R1,R0
   \   00000018   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3000               MOVS     R0,R6
   \   0000001E   ........           BL       SendViaUSB
    555             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WA_1:
   \   00000022   14A1               ADR      R1,??WizFiResponseCommand_AT_WA_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   1AD0               BEQ      ??WizFiResponseCommand_AT_WA_2
    556                  {
    557                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    558                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   04E0               B        ??WizFiResponseCommand_AT_WA_3
   \                     ??WizFiResponseCommand_AT_WA_4:
   \   00000034   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   3154               STRB     R1,[R6, R0]
   \   0000003C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_WA_3:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   3228               CMP      R0,#+50
   \   00000044   F6D3               BCC      ??WizFiResponseCommand_AT_WA_4
    559                    
    560                    //Tu mo¿e byæ pobranie otrzymanego IP, Bramy, 
    561          
    562                    //---------------
    563                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000046   2600               MOVS     R6,R4
   \   00000048   3836               ADDS     R6,R6,#+56
   \   0000004A   0B48               LDR      R0,??WizFiResponseCommand_AT_WA_0+0x8  ;; g_counter
   \   0000004C   0CC8               LDM      R0!,{R2,R3}
   \   0000004E   0838               SUBS     R0,R0,#+8
   \   00000050   0A48               LDR      R0,??WizFiResponseCommand_AT_WA_0+0xC  ;; 0x2710
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8018               ADDS     R0,R0,R2
   \   00000056   5941               ADCS     R1,R1,R3
   \   00000058   03C6               STM      R6!,{R0,R1}
   \   0000005A   083E               SUBS     R6,R6,#+8
    564                    Net->Status.Error=0;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   6075               STRB     R0,[R4, #+21]
    565                    
    566                    Net->Status.AccesPointAssociateTest=0xFF;           //dla testów ekranowych
   \   00000060   FF20               MOVS     R0,#+255
   \   00000062   2071               STRB     R0,[R4, #+4]
    567                  }
    568               
    569             
    570             return odp;
   \                     ??WizFiResponseCommand_AT_WA_2:
   \   00000064   2800               MOVS     R0,R5
   \   00000066   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   70BC               POP      {R4-R6}
   \   0000006C   02BC               POP      {R1}
   \   0000006E   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_WA_0:
   \   00000070   ........           DC32     WiFiDebug
   \   00000074   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000078   ........           DC32     g_counter
   \   0000007C   10270000           DC32     0x2710
    571          }
    572          
    573          
    574          
    575          
    576          
    577          
    578          //Sprawdzenie czy w WiFi.Domena jest wpisana domena czy IP serwera domeny ------
    579          // odp: 0- domena
    580          // odp: 1 - IP
    581          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    582          char CheckExistDomenaIP(_Net *Net)
    583          {
   \                     CheckExistDomenaIP:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0100               MOVS     R1,R0
    584            char ExistIP=1;
   \   00000004   0120               MOVS     R0,#+1
    585          
    586            if ((Net->WiFi.Domena[0]<'0') && ((Net->WiFi.Domena[0]>'9'))) ExistIP=0;
   \   00000006   BD22               MOVS     R2,#+189
   \   00000008   8A5C               LDRB     R2,[R1, R2]
   \   0000000A   302A               CMP      R2,#+48
   \   0000000C   04D2               BCS      ??CheckExistDomenaIP_0
   \   0000000E   BD22               MOVS     R2,#+189
   \   00000010   8A5C               LDRB     R2,[R1, R2]
   \   00000012   3A2A               CMP      R2,#+58
   \   00000014   00D3               BCC      ??CheckExistDomenaIP_0
   \   00000016   0020               MOVS     R0,#+0
    587            
    588            char Size= sizeof(Net->WiFi.Domena);
   \                     ??CheckExistDomenaIP_0:
   \   00000018   0F22               MOVS     R2,#+15
    589            char Znak=1;
   \   0000001A   0123               MOVS     R3,#+1
   \   0000001C   16E0               B        ??CheckExistDomenaIP_1
    590            while ((Znak<Size) && (ExistIP==1)  && (Net->WiFi.Domena[Znak]>0) )  
    591            {
    592               if (((Net->WiFi.Domena[Znak]<'0') || (Net->WiFi.Domena[Znak]>'9')) && (Net->WiFi.Domena[Znak]!='.'))  ExistIP=0;
   \                     ??CheckExistDomenaIP_2:
   \   0000001E   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000020   1B0E               LSRS     R3,R3,#+24
   \   00000022   CC18               ADDS     R4,R1,R3
   \   00000024   BD34               ADDS     R4,R4,#+189
   \   00000026   2478               LDRB     R4,[R4, #+0]
   \   00000028   302C               CMP      R4,#+48
   \   0000002A   06D3               BCC      ??CheckExistDomenaIP_3
   \   0000002C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000002E   1B0E               LSRS     R3,R3,#+24
   \   00000030   CC18               ADDS     R4,R1,R3
   \   00000032   BD34               ADDS     R4,R4,#+189
   \   00000034   2478               LDRB     R4,[R4, #+0]
   \   00000036   3A2C               CMP      R4,#+58
   \   00000038   07D3               BCC      ??CheckExistDomenaIP_4
   \                     ??CheckExistDomenaIP_3:
   \   0000003A   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000003C   1B0E               LSRS     R3,R3,#+24
   \   0000003E   CC18               ADDS     R4,R1,R3
   \   00000040   BD34               ADDS     R4,R4,#+189
   \   00000042   2478               LDRB     R4,[R4, #+0]
   \   00000044   2E2C               CMP      R4,#+46
   \   00000046   00D0               BEQ      ??CheckExistDomenaIP_4
   \   00000048   0020               MOVS     R0,#+0
    593            
    594               Znak++; 
   \                     ??CheckExistDomenaIP_4:
   \   0000004A   5B1C               ADDS     R3,R3,#+1
    595            }
   \                     ??CheckExistDomenaIP_1:
   \   0000004C   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000004E   1B0E               LSRS     R3,R3,#+24
   \   00000050   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000052   120E               LSRS     R2,R2,#+24
   \   00000054   9342               CMP      R3,R2
   \   00000056   0AD2               BCS      ??CheckExistDomenaIP_5
   \   00000058   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000005A   000E               LSRS     R0,R0,#+24
   \   0000005C   0128               CMP      R0,#+1
   \   0000005E   06D1               BNE      ??CheckExistDomenaIP_5
   \   00000060   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000062   1B0E               LSRS     R3,R3,#+24
   \   00000064   CC18               ADDS     R4,R1,R3
   \   00000066   BD34               ADDS     R4,R4,#+189
   \   00000068   2478               LDRB     R4,[R4, #+0]
   \   0000006A   012C               CMP      R4,#+1
   \   0000006C   D7D2               BCS      ??CheckExistDomenaIP_2
    596            
    597            //je¿eli w Net->WiFi.Domena wpisany jest IP tp przepisz do  Net->Status.DomenaIP
    598            if (ExistIP==1)
   \                     ??CheckExistDomenaIP_5:
   \   0000006E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000070   000E               LSRS     R0,R0,#+24
   \   00000072   0128               CMP      R0,#+1
   \   00000074   2AD1               BNE      ??CheckExistDomenaIP_6
    599            {
    600              Znak=0;
   \   00000076   0023               MOVS     R3,#+0
    601              for (char i=0; i<Size; i++) Net->Status.DomenaIP[i]=0;
   \   00000078   0024               MOVS     R4,#+0
   \   0000007A   05E0               B        ??CheckExistDomenaIP_7
   \                     ??CheckExistDomenaIP_8:
   \   0000007C   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000007E   240E               LSRS     R4,R4,#+24
   \   00000080   0D19               ADDS     R5,R1,R4
   \   00000082   0026               MOVS     R6,#+0
   \   00000084   AE71               STRB     R6,[R5, #+6]
   \   00000086   641C               ADDS     R4,R4,#+1
   \                     ??CheckExistDomenaIP_7:
   \   00000088   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000008A   240E               LSRS     R4,R4,#+24
   \   0000008C   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000008E   120E               LSRS     R2,R2,#+24
   \   00000090   9442               CMP      R4,R2
   \   00000092   F3D3               BCC      ??CheckExistDomenaIP_8
    602              while ((Znak<Size) && (ExistIP)  && (Net->WiFi.Domena[Znak]>0))
   \                     ??CheckExistDomenaIP_9:
   \   00000094   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000096   1B0E               LSRS     R3,R3,#+24
   \   00000098   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000009A   120E               LSRS     R2,R2,#+24
   \   0000009C   9342               CMP      R3,R2
   \   0000009E   15D2               BCS      ??CheckExistDomenaIP_6
   \   000000A0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A2   000E               LSRS     R0,R0,#+24
   \   000000A4   0028               CMP      R0,#+0
   \   000000A6   11D0               BEQ      ??CheckExistDomenaIP_6
   \   000000A8   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000AA   1B0E               LSRS     R3,R3,#+24
   \   000000AC   CC18               ADDS     R4,R1,R3
   \   000000AE   BD34               ADDS     R4,R4,#+189
   \   000000B0   2478               LDRB     R4,[R4, #+0]
   \   000000B2   012C               CMP      R4,#+1
   \   000000B4   0AD3               BCC      ??CheckExistDomenaIP_6
    603              {
    604                Net->Status.DomenaIP[Znak]=Net->WiFi.Domena[Znak];
   \   000000B6   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000B8   1B0E               LSRS     R3,R3,#+24
   \   000000BA   CC18               ADDS     R4,R1,R3
   \   000000BC   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000BE   1B0E               LSRS     R3,R3,#+24
   \   000000C0   CD18               ADDS     R5,R1,R3
   \   000000C2   BD35               ADDS     R5,R5,#+189
   \   000000C4   2D78               LDRB     R5,[R5, #+0]
   \   000000C6   A571               STRB     R5,[R4, #+6]
    605                Znak++;
   \   000000C8   5B1C               ADDS     R3,R3,#+1
   \   000000CA   E3E7               B        ??CheckExistDomenaIP_9
    606              }
    607            }
    608            
    609            return ExistIP;
   \                     ??CheckExistDomenaIP_6:
   \   000000CC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000CE   000E               LSRS     R0,R0,#+24
   \   000000D0   70BC               POP      {R4-R6}
   \   000000D2   02BC               POP      {R1}
   \   000000D4   0847               BX       R1               ;; return
    610            
    611          }
    612          
    613          
    614          
    615          
    616          
    617          
    618          //Pobranie adresu domeny ------------------------------------------------------
    619          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    620          void WizFiCommand_AT_DNSLOOKUP(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    621          {
   \                     WizFiCommand_AT_DNSLOOKUP:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1C00               MOVS     R4,R3
    622                if (Net->WiFi.Domena[0]!=0)
   \   00000008   BD20               MOVS     R0,#+189
   \   0000000A   205C               LDRB     R0,[R4, R0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   00D1               BNE      .+4
   \   00000010   7EE0               B        ??WizFiCommand_AT_DNSLOOKUP_0
    623                {
    624                    for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   05E0               B        ??WizFiCommand_AT_DNSLOOKUP_1
   \                     ??WizFiCommand_AT_DNSLOOKUP_2:
   \   00000016   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000018   0014               ASRS     R0,R0,#+16
   \   0000001A   0199               LDR      R1,[SP, #+4]
   \   0000001C   0022               MOVS     R2,#+0
   \   0000001E   0A54               STRB     R2,[R1, R0]
   \   00000020   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_DNSLOOKUP_1:
   \   00000022   9121               MOVS     R1,#+145
   \   00000024   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000026   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000028   0014               ASRS     R0,R0,#+16
   \   0000002A   8842               CMP      R0,R1
   \   0000002C   F3DB               BLT      ??WizFiCommand_AT_DNSLOOKUP_2
    625                    if (CheckExistDomenaIP(Net)==0)                                                  //sprawdzenie czy w WiFi.Domena jest wpisana domena czy IP serwera domeny
   \   0000002E   2000               MOVS     R0,R4
   \   00000030   ........           BL       CheckExistDomenaIP
   \   00000034   0028               CMP      R0,#+0
   \   00000036   5DD1               BNE      ??WizFiCommand_AT_DNSLOOKUP_3
    626                    {                                                                     //w WiFi.Domena jest wpisana domena
    627                       Net->Status.CurrentOrder=WizFi_AT_DNSLOOKUP;
   \   00000038   0C20               MOVS     R0,#+12
   \   0000003A   A070               STRB     R0,[R4, #+2]
    628            
    629                       char BTS=0;
   \   0000003C   0026               MOVS     R6,#+0
    630                       for (char i=0; i<sizeof(AT_DNSLOOKUP); i++)  {Buff_TX[i]=AT_DNSLOOKUP[i];   BTS++;}
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   08E0               B        ??WizFiCommand_AT_DNSLOOKUP_4
   \                     ??WizFiCommand_AT_DNSLOOKUP_5:
   \   00000042   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000044   000E               LSRS     R0,R0,#+24
   \   00000046   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   3349               LDR      R1,??WizFiCommand_AT_DNSLOOKUP_6  ;; AT_DNSLOOKUP
   \   0000004C   095C               LDRB     R1,[R1, R0]
   \   0000004E   2954               STRB     R1,[R5, R0]
   \   00000050   761C               ADDS     R6,R6,#+1
   \   00000052   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_DNSLOOKUP_4:
   \   00000054   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   0E28               CMP      R0,#+14
   \   0000005A   F2D3               BCC      ??WizFiCommand_AT_DNSLOOKUP_5
    631                       BTS--;
   \   0000005C   761E               SUBS     R6,R6,#+1
    632                       char PassN=0;
   \   0000005E   0027               MOVS     R7,#+0
   \   00000060   0BE0               B        ??WizFiCommand_AT_DNSLOOKUP_7
    633                       while ((Net->WiFi.Domena[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.Domena[PassN]; PassN++;}
   \                     ??WizFiCommand_AT_DNSLOOKUP_8:
   \   00000062   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000064   360E               LSRS     R6,R6,#+24
   \   00000066   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000068   3F0E               LSRS     R7,R7,#+24
   \   0000006A   F019               ADDS     R0,R6,R7
   \   0000006C   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000006E   3F0E               LSRS     R7,R7,#+24
   \   00000070   E119               ADDS     R1,R4,R7
   \   00000072   BD31               ADDS     R1,R1,#+189
   \   00000074   0978               LDRB     R1,[R1, #+0]
   \   00000076   2954               STRB     R1,[R5, R0]
   \   00000078   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_DNSLOOKUP_7:
   \   0000007A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000007C   3F0E               LSRS     R7,R7,#+24
   \   0000007E   E019               ADDS     R0,R4,R7
   \   00000080   BD30               ADDS     R0,R0,#+189
   \   00000082   0078               LDRB     R0,[R0, #+0]
   \   00000084   0128               CMP      R0,#+1
   \   00000086   03D3               BCC      ??WizFiCommand_AT_DNSLOOKUP_9
   \   00000088   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000008A   3F0E               LSRS     R7,R7,#+24
   \   0000008C   102F               CMP      R7,#+16
   \   0000008E   E8D3               BCC      ??WizFiCommand_AT_DNSLOOKUP_8
    634                       Buff_TX[BTS+PassN++]=0x0d;
   \                     ??WizFiCommand_AT_DNSLOOKUP_9:
   \   00000090   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000092   360E               LSRS     R6,R6,#+24
   \   00000094   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000096   3F0E               LSRS     R7,R7,#+24
   \   00000098   F019               ADDS     R0,R6,R7
   \   0000009A   0D21               MOVS     R1,#+13
   \   0000009C   2954               STRB     R1,[R5, R0]
   \   0000009E   7F1C               ADDS     R7,R7,#+1
    635                   
    636                       if (WiFiDebug) SendViaUSB(Buff_RX, BTS+PassN); 
                                                        ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000000A0   1E48               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_6+0x4  ;; WiFiDebug
   \   000000A2   0078               LDRB     R0,[R0, #+0]
   \   000000A4   0028               CMP      R0,#+0
   \   000000A6   09D0               BEQ      ??WizFiCommand_AT_DNSLOOKUP_10
   \   000000A8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000AA   360E               LSRS     R6,R6,#+24
   \   000000AC   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000AE   3F0E               LSRS     R7,R7,#+24
   \   000000B0   F119               ADDS     R1,R6,R7
   \   000000B2   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   000000B4   090C               LSRS     R1,R1,#+16
   \   000000B6   0198               LDR      R0,[SP, #+4]
   \   000000B8   ........           BL       SendViaUSB
    637                       AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
                                                       ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_DNSLOOKUP_10:
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   0023               MOVS     R3,#+0
   \   000000C4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000C6   360E               LSRS     R6,R6,#+24
   \   000000C8   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000CA   3F0E               LSRS     R7,R7,#+24
   \   000000CC   F219               ADDS     R2,R6,R7
   \   000000CE   2900               MOVS     R1,R5
   \   000000D0   0498               LDR      R0,[SP, #+16]
   \   000000D2   ........           BL       AT91F_US_SendFrame
   \   000000D6   02B0               ADD      SP,SP,#+8
    638                       Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000D8   2500               MOVS     R5,R4
   \   000000DA   3835               ADDS     R5,R5,#+56
   \   000000DC   1048               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_6+0x8  ;; g_counter
   \   000000DE   0CC8               LDM      R0!,{R2,R3}
   \   000000E0   0838               SUBS     R0,R0,#+8
   \   000000E2   1048               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_6+0xC  ;; 0x2710
   \   000000E4   0021               MOVS     R1,#+0
   \   000000E6   8018               ADDS     R0,R0,R2
   \   000000E8   5941               ADCS     R1,R1,R3
   \   000000EA   03C5               STM      R5!,{R0,R1}
   \   000000EC   083D               SUBS     R5,R5,#+8
    639                       Net->Status.NextHttpOrder=HTTP_GET_Config;
   \   000000EE   1420               MOVS     R0,#+20
   \   000000F0   E070               STRB     R0,[R4, #+3]
   \   000000F2   0DE0               B        ??WizFiCommand_AT_DNSLOOKUP_0
    640                       
    641                       
    642                    }
    643                    else                                                                  //je¿eli w WiFi.Domena jest wpisany IP serwera domeny
    644                    {
    645                       Net->Status.AccesPointAssociate=CONNECTED;    
   \                     ??WizFiCommand_AT_DNSLOOKUP_3:
   \   000000F4   0320               MOVS     R0,#+3
   \   000000F6   2070               STRB     R0,[R4, #+0]
    646                       Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   000000F8   0020               MOVS     R0,#+0
   \   000000FA   A070               STRB     R0,[R4, #+2]
    647                       Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000FC   3834               ADDS     R4,R4,#+56
   \   000000FE   0848               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_6+0x8  ;; g_counter
   \   00000100   0CC8               LDM      R0!,{R2,R3}
   \   00000102   0838               SUBS     R0,R0,#+8
   \   00000104   0748               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_6+0xC  ;; 0x2710
   \   00000106   0021               MOVS     R1,#+0
   \   00000108   8018               ADDS     R0,R0,R2
   \   0000010A   5941               ADCS     R1,R1,R3
   \   0000010C   03C4               STM      R4!,{R0,R1}
   \   0000010E   083C               SUBS     R4,R4,#+8
    648                    }
    649                    
    650                }
    651          }
   \                     ??WizFiCommand_AT_DNSLOOKUP_0:
   \   00000110   03B0               ADD      SP,SP,#+12
   \   00000112   F0BC               POP      {R4-R7}
   \   00000114   01BC               POP      {R0}
   \   00000116   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_DNSLOOKUP_6:
   \   00000118   ........           DC32     AT_DNSLOOKUP
   \   0000011C   ........           DC32     WiFiDebug
   \   00000120   ........           DC32     g_counter
   \   00000124   10270000           DC32     0x2710
    652          
    653          
    654          
    655          /*
    656          //Pobranie adresu domeny ------------------------------------------------------
    657          //------------------------------------------------------------------------------
    658          void WizFiCommand_AT_DNSLOOKUP(char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    659          {
    660                       Net->Status.CurrentOrder=WizFi_AT_DNSLOOKUP;
    661            
    662                       char BTS=0;
    663                       for (char i=0; i<sizeof(AT_DNSLOOKUP); i++)  {Buff_TX[i]=AT_DNSLOOKUP[i];   BTS++;}
    664                       BTS--;
    665                       char PassN=0;
    666                       while ((Net->WiFi.Domena[PassN]>0) && (PassN<=25)) {Buff_TX[BTS+PassN]=Net->WiFi.Domena[PassN]; PassN++;}
    667                       Buff_TX[BTS+PassN++]=0x0d;
    668                   
    669                       AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
    670                       Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    671                       Net->Status.NextHttpOrder=HTTP_GET_Config;
    672          }
    673          */
    674          
    675          

   \                                 In section Debug.txt, align 4, keep-with-next
    676          char WizFiResponseCommand_AT_DNSLOOKUP(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    677          {
   \                     WizFiResponseCommand_AT_DNSLOOKUP:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1D00               MOVS     R5,R3
    678             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
    679             char *pTxt;
    680             
    681             pTxt=strstr(Buff_RX, "IP:");
   \   00000008   27A1               ADR      R1,??WizFiResponseCommand_AT_DNSLOOKUP_0  ;; "IP:"
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       strstr
   \   00000010   0700               MOVS     R7,R0
    682             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000012   2648               LDR      R0,??WizFiResponseCommand_AT_DNSLOOKUP_0+0x4  ;; WiFiDebug
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   08D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_1
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   ........           BL       strlen
   \   00000020   0100               MOVS     R1,R0
   \   00000022   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   00000024   090C               LSRS     R1,R1,#+16
   \   00000026   2000               MOVS     R0,R4
   \   00000028   ........           BL       SendViaUSB
    683             if((strstr(Buff_RX, "OK")!=NULL) && (pTxt!=NULL))
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_1:
   \   0000002C   20A1               ADR      R1,??WizFiResponseCommand_AT_DNSLOOKUP_0+0x8  ;; 0x4F, 0x4B, 0x00, 0x00
   \   0000002E   2000               MOVS     R0,R4
   \   00000030   ........           BL       strstr
   \   00000034   0028               CMP      R0,#+0
   \   00000036   30D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_2
   \   00000038   002F               CMP      R7,#+0
   \   0000003A   2ED0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_2
    684                  {
    685                    odp=1;  //ok 
   \   0000003C   0126               MOVS     R6,#+1
    686                    
    687                    Net->Status.AccesPointAssociate=CONNECTED;    
   \   0000003E   0320               MOVS     R0,#+3
   \   00000040   2870               STRB     R0,[R5, #+0]
    688                    Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   A870               STRB     R0,[R5, #+2]
    689                      
    690                    pTxt+=3;
   \   00000046   FF1C               ADDS     R7,R7,#+3
    691                    char p=0;
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   06E0               B        ??WizFiResponseCommand_AT_DNSLOOKUP_3
    692                    while ((*pTxt!=0x0d) && (p<=15))  {Net->Status.DomenaIP[p++]=*pTxt; pTxt++;}
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_4:
   \   0000004C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000004E   000E               LSRS     R0,R0,#+24
   \   00000050   2918               ADDS     R1,R5,R0
   \   00000052   3A78               LDRB     R2,[R7, #+0]
   \   00000054   8A71               STRB     R2,[R1, #+6]
   \   00000056   401C               ADDS     R0,R0,#+1
   \   00000058   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_3:
   \   0000005A   3978               LDRB     R1,[R7, #+0]
   \   0000005C   0D29               CMP      R1,#+13
   \   0000005E   03D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_5
   \   00000060   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000062   000E               LSRS     R0,R0,#+24
   \   00000064   1028               CMP      R0,#+16
   \   00000066   F1D3               BCC      ??WizFiResponseCommand_AT_DNSLOOKUP_4
    693                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_5:
   \   00000068   2F00               MOVS     R7,R5
   \   0000006A   3837               ADDS     R7,R7,#+56
   \   0000006C   1148               LDR      R0,??WizFiResponseCommand_AT_DNSLOOKUP_0+0xC  ;; g_counter
   \   0000006E   03C8               LDM      R0!,{R0,R1}
   \   00000070   0200               MOVS     R2,R0
   \   00000072   0B00               MOVS     R3,R1
   \   00000074   1048               LDR      R0,??WizFiResponseCommand_AT_DNSLOOKUP_0+0x10  ;; 0x2710
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   8018               ADDS     R0,R0,R2
   \   0000007A   5941               ADCS     R1,R1,R3
   \   0000007C   03C7               STM      R7!,{R0,R1}
   \   0000007E   083F               SUBS     R7,R7,#+8
    694                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   04E0               B        ??WizFiResponseCommand_AT_DNSLOOKUP_6
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_7:
   \   00000084   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   2154               STRB     R1,[R4, R0]
   \   0000008C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_6:
   \   0000008E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000090   000E               LSRS     R0,R0,#+24
   \   00000092   3228               CMP      R0,#+50
   \   00000094   F6D3               BCC      ??WizFiResponseCommand_AT_DNSLOOKUP_7
    695                    Net->Status.Error=0;
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   6875               STRB     R0,[R5, #+21]
    696                  }
    697               
    698             return odp;
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_2:
   \   0000009A   3000               MOVS     R0,R6
   \   0000009C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009E   000E               LSRS     R0,R0,#+24
   \   000000A0   01B0               ADD      SP,SP,#+4
   \   000000A2   F0BC               POP      {R4-R7}
   \   000000A4   02BC               POP      {R1}
   \   000000A6   0847               BX       R1               ;; return
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_0:
   \   000000A8   49503A00           DC8      "IP:"
   \   000000AC   ........           DC32     WiFiDebug
   \   000000B0   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   000000B4   ........           DC32     g_counter
   \   000000B8   10270000           DC32     0x2710
    699          }
    700          
    701          
    702          
    703                         
    704          
    705          
    706          
    707          
    708          
    709          //Rozkaz po³¹czenia z hostem----------------------------------------------------
    710          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    711          void WizFiCommand_AT_NCTCP(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    712          {
   \                     WizFiCommand_AT_NCTCP:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1D00               MOVS     R5,R3
    713               if (Net->WiFi.Domena[0]!=0)
   \   00000008   BD20               MOVS     R0,#+189
   \   0000000A   285C               LDRB     R0,[R5, R0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   00D1               BNE      .+4
   \   00000010   B5E0               B        ??WizFiCommand_AT_NCTCP_0
    714               {
    715                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   05E0               B        ??WizFiCommand_AT_NCTCP_1
   \                     ??WizFiCommand_AT_NCTCP_2:
   \   00000016   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000018   0014               ASRS     R0,R0,#+16
   \   0000001A   0199               LDR      R1,[SP, #+4]
   \   0000001C   0022               MOVS     R2,#+0
   \   0000001E   0A54               STRB     R2,[R1, R0]
   \   00000020   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_NCTCP_1:
   \   00000022   9121               MOVS     R1,#+145
   \   00000024   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000026   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000028   0014               ASRS     R0,R0,#+16
   \   0000002A   8842               CMP      R0,R1
   \   0000002C   F3DB               BLT      ??WizFiCommand_AT_NCTCP_2
    716                     Net->Status.SendPacketTime=g_counter;
   \   0000002E   2A00               MOVS     R2,R5
   \   00000030   2032               ADDS     R2,R2,#+32
   \   00000032   5548               LDR      R0,??WizFiCommand_AT_NCTCP_3  ;; g_counter
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   03C2               STM      R2!,{R0,R1}
   \   00000038   083A               SUBS     R2,R2,#+8
    717                     Net->Status.HostLink=CONNECTING;
   \   0000003A   0220               MOVS     R0,#+2
   \   0000003C   6870               STRB     R0,[R5, #+1]
    718                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000003E   2E00               MOVS     R6,R5
   \   00000040   3836               ADDS     R6,R6,#+56
   \   00000042   5148               LDR      R0,??WizFiCommand_AT_NCTCP_3  ;; g_counter
   \   00000044   0CC8               LDM      R0!,{R2,R3}
   \   00000046   0838               SUBS     R0,R0,#+8
   \   00000048   5048               LDR      R0,??WizFiCommand_AT_NCTCP_3+0x4  ;; 0x2710
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   8018               ADDS     R0,R0,R2
   \   0000004E   5941               ADCS     R1,R1,R3
   \   00000050   03C6               STM      R6!,{R0,R1}
   \   00000052   083E               SUBS     R6,R6,#+8
    719                     //Net->Status.HttpNextQueryTime=g_counter+100;   //rezerwa czasu pomiêdzy odpytaniami HTTP.
    720                     Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000054   4C48               LDR      R0,??WizFiCommand_AT_NCTCP_3  ;; g_counter
   \   00000056   03C8               LDM      R0!,{R0,R1}
   \   00000058   0022               MOVS     R2,#+0
   \   0000005A   3230               ADDS     R0,R0,#+50
   \   0000005C   5141               ADCS     R1,R1,R2
   \   0000005E   2864               STR      R0,[R5, #+64]
   \   00000060   6964               STR      R1,[R5, #+68]
    721                     
    722                     Net->Status.CurrentOrder=WizFi_AT_DNSLOOKUP;
   \   00000062   0C20               MOVS     R0,#+12
   \   00000064   A870               STRB     R0,[R5, #+2]
    723                     
    724                     char BTS=0;
   \   00000066   0026               MOVS     R6,#+0
    725                     for (char i=0; i<sizeof(AT_NCTCP); i++)  {Buff_TX[i]=AT_NCTCP[i];   BTS++;}
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   08E0               B        ??WizFiCommand_AT_NCTCP_4
   \                     ??WizFiCommand_AT_NCTCP_5:
   \   0000006C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \   00000070   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000072   000E               LSRS     R0,R0,#+24
   \   00000074   4649               LDR      R1,??WizFiCommand_AT_NCTCP_3+0x8  ;; AT_NCTCP
   \   00000076   095C               LDRB     R1,[R1, R0]
   \   00000078   2154               STRB     R1,[R4, R0]
   \   0000007A   761C               ADDS     R6,R6,#+1
   \   0000007C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiCommand_AT_NCTCP_4:
   \   0000007E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000080   000E               LSRS     R0,R0,#+24
   \   00000082   0A28               CMP      R0,#+10
   \   00000084   F2D3               BCC      ??WizFiCommand_AT_NCTCP_5
    726                     BTS--;
   \   00000086   761E               SUBS     R6,R6,#+1
    727                     char PN=0;
   \   00000088   0027               MOVS     R7,#+0
    728                     if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) 
   \   0000008A   CC20               MOVS     R0,#+204
   \   0000008C   285C               LDRB     R0,[R5, R0]
   \   0000008E   3028               CMP      R0,#+48
   \   00000090   22D3               BCC      ??WizFiCommand_AT_NCTCP_6
   \   00000092   CC20               MOVS     R0,#+204
   \   00000094   285C               LDRB     R0,[R5, R0]
   \   00000096   7B28               CMP      R0,#+123
   \   00000098   1ED2               BCS      ??WizFiCommand_AT_NCTCP_6
   \   0000009A   0BE0               B        ??WizFiCommand_AT_NCTCP_7
    729                     {
    730                       while ((Net->WiFi.Subdomena[PN]>0) && (PN<=15)) {Buff_TX[BTS+PN]=Net->WiFi.Subdomena[PN]; PN++;}
   \                     ??WizFiCommand_AT_NCTCP_8:
   \   0000009C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000009E   360E               LSRS     R6,R6,#+24
   \   000000A0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000A2   3F0E               LSRS     R7,R7,#+24
   \   000000A4   F019               ADDS     R0,R6,R7
   \   000000A6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000A8   3F0E               LSRS     R7,R7,#+24
   \   000000AA   E919               ADDS     R1,R5,R7
   \   000000AC   CC31               ADDS     R1,R1,#+204
   \   000000AE   0978               LDRB     R1,[R1, #+0]
   \   000000B0   2154               STRB     R1,[R4, R0]
   \   000000B2   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_NCTCP_7:
   \   000000B4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000B6   3F0E               LSRS     R7,R7,#+24
   \   000000B8   E819               ADDS     R0,R5,R7
   \   000000BA   CC30               ADDS     R0,R0,#+204
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   0128               CMP      R0,#+1
   \   000000C0   03D3               BCC      ??WizFiCommand_AT_NCTCP_9
   \   000000C2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000C4   3F0E               LSRS     R7,R7,#+24
   \   000000C6   102F               CMP      R7,#+16
   \   000000C8   E8D3               BCC      ??WizFiCommand_AT_NCTCP_8
    731                       Buff_TX[BTS+PN]='.';
   \                     ??WizFiCommand_AT_NCTCP_9:
   \   000000CA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000CC   360E               LSRS     R6,R6,#+24
   \   000000CE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000D0   3F0E               LSRS     R7,R7,#+24
   \   000000D2   F019               ADDS     R0,R6,R7
   \   000000D4   2E21               MOVS     R1,#+46
   \   000000D6   2154               STRB     R1,[R4, R0]
    732                     }
    733                     PN=0;
   \                     ??WizFiCommand_AT_NCTCP_6:
   \   000000D8   0027               MOVS     R7,#+0
   \   000000DA   0AE0               B        ??WizFiCommand_AT_NCTCP_10
    734                     while ((Net->Status.DomenaIP[PN]>0) && (PN<=15)) {Buff_TX[BTS+PN]=Net->Status.DomenaIP[PN]; PN++;}
   \                     ??WizFiCommand_AT_NCTCP_11:
   \   000000DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \   000000E0   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000E2   3F0E               LSRS     R7,R7,#+24
   \   000000E4   F019               ADDS     R0,R6,R7
   \   000000E6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000E8   3F0E               LSRS     R7,R7,#+24
   \   000000EA   E919               ADDS     R1,R5,R7
   \   000000EC   8979               LDRB     R1,[R1, #+6]
   \   000000EE   2154               STRB     R1,[R4, R0]
   \   000000F0   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiCommand_AT_NCTCP_10:
   \   000000F2   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000F4   3F0E               LSRS     R7,R7,#+24
   \   000000F6   E819               ADDS     R0,R5,R7
   \   000000F8   8079               LDRB     R0,[R0, #+6]
   \   000000FA   0128               CMP      R0,#+1
   \   000000FC   03D3               BCC      ??WizFiCommand_AT_NCTCP_12
   \   000000FE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000100   3F0E               LSRS     R7,R7,#+24
   \   00000102   102F               CMP      R7,#+16
   \   00000104   EAD3               BCC      ??WizFiCommand_AT_NCTCP_11
    735                     Buff_TX[BTS+PN++]=',';
   \                     ??WizFiCommand_AT_NCTCP_12:
   \   00000106   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000108   360E               LSRS     R6,R6,#+24
   \   0000010A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000010C   3F0E               LSRS     R7,R7,#+24
   \   0000010E   F019               ADDS     R0,R6,R7
   \   00000110   2C21               MOVS     R1,#+44
   \   00000112   2154               STRB     R1,[R4, R0]
   \   00000114   7F1C               ADDS     R7,R7,#+1
    736                     Buff_TX[BTS+PN++]='8';
   \   00000116   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000118   360E               LSRS     R6,R6,#+24
   \   0000011A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000011C   3F0E               LSRS     R7,R7,#+24
   \   0000011E   F019               ADDS     R0,R6,R7
   \   00000120   3821               MOVS     R1,#+56
   \   00000122   2154               STRB     R1,[R4, R0]
   \   00000124   7F1C               ADDS     R7,R7,#+1
    737                     Buff_TX[BTS+PN++]='0';
   \   00000126   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000128   360E               LSRS     R6,R6,#+24
   \   0000012A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000012C   3F0E               LSRS     R7,R7,#+24
   \   0000012E   F019               ADDS     R0,R6,R7
   \   00000130   3021               MOVS     R1,#+48
   \   00000132   2154               STRB     R1,[R4, R0]
   \   00000134   7F1C               ADDS     R7,R7,#+1
    738                     Buff_TX[BTS+PN++]=0x0d;
   \   00000136   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000138   360E               LSRS     R6,R6,#+24
   \   0000013A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000013C   3F0E               LSRS     R7,R7,#+24
   \   0000013E   F019               ADDS     R0,R6,R7
   \   00000140   0D21               MOVS     R1,#+13
   \   00000142   2154               STRB     R1,[R4, R0]
   \   00000144   7F1C               ADDS     R7,R7,#+1
    739                    
    740                     
    741          
    742                      
    743                      if (WiFiDebug) SendViaUSB(Buff_RX, BTS+PN);  
                                                       ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000146   1348               LDR      R0,??WizFiCommand_AT_NCTCP_3+0xC  ;; WiFiDebug
   \   00000148   0078               LDRB     R0,[R0, #+0]
   \   0000014A   0028               CMP      R0,#+0
   \   0000014C   09D0               BEQ      ??WizFiCommand_AT_NCTCP_13
   \   0000014E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000150   360E               LSRS     R6,R6,#+24
   \   00000152   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000154   3F0E               LSRS     R7,R7,#+24
   \   00000156   F119               ADDS     R1,R6,R7
   \   00000158   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000015A   090C               LSRS     R1,R1,#+16
   \   0000015C   0198               LDR      R0,[SP, #+4]
   \   0000015E   ........           BL       SendViaUSB
    744                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PN,0, 0);                        //Wysyla ramke  otwieraj¹c¹ po³¹czenie 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NCTCP_13:
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0020               MOVS     R0,#+0
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   0023               MOVS     R3,#+0
   \   0000016A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000016C   360E               LSRS     R6,R6,#+24
   \   0000016E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000170   3F0E               LSRS     R7,R7,#+24
   \   00000172   F219               ADDS     R2,R6,R7
   \   00000174   2100               MOVS     R1,R4
   \   00000176   0498               LDR      R0,[SP, #+16]
   \   00000178   ........           BL       AT91F_US_SendFrame
   \   0000017C   02B0               ADD      SP,SP,#+8
    745                     
    746                    
    747               }
    748          }
   \                     ??WizFiCommand_AT_NCTCP_0:
   \   0000017E   03B0               ADD      SP,SP,#+12
   \   00000180   F0BC               POP      {R4-R7}
   \   00000182   01BC               POP      {R0}
   \   00000184   0047               BX       R0               ;; return
   \   00000186   C046               Nop      
   \                     ??WizFiCommand_AT_NCTCP_3:
   \   00000188   ........           DC32     g_counter
   \   0000018C   10270000           DC32     0x2710
   \   00000190   ........           DC32     AT_NCTCP
   \   00000194   ........           DC32     WiFiDebug
    749          
    750          
    751          

   \                                 In section Debug.txt, align 4, keep-with-next
    752          char WizFiResponseCommand_AT_NCTCP(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    753          {
   \                     WizFiResponseCommand_AT_NCTCP:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0E00               MOVS     R6,R1
   \   00000006   1C00               MOVS     R4,R3
    754             char odp=0;
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0170               STRB     R1,[R0, #+0]
    755             char *pTxt;
    756             
    757             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000E   8448               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   00000010   0078               LDRB     R0,[R0, #+0]
   \   00000012   0028               CMP      R0,#+0
   \   00000014   08D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_1
   \   00000016   0198               LDR      R0,[SP, #+4]
   \   00000018   ........           BL       strlen
   \   0000001C   0100               MOVS     R1,R0
   \   0000001E   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   00000020   090C               LSRS     R1,R1,#+16
   \   00000022   0198               LDR      R0,[SP, #+4]
   \   00000024   ........           BL       SendViaUSB
    758             pTxt=strstr(Buff_RX, "[CONNECT");
   \                     ??WizFiResponseCommand_AT_NCTCP_1:
   \   00000028   7E49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x4  ;; `?<Constant "[CONNECT">`
   \   0000002A   0198               LDR      R0,[SP, #+4]
   \   0000002C   ........           BL       strstr
   \   00000030   0500               MOVS     R5,R0
    759             if ((pTxt!=NULL) && (pTxt[9]!='9')&& (pTxt[9]!='A'))
   \   00000032   002D               CMP      R5,#+0
   \   00000034   00D1               BNE      .+4
   \   00000036   A8E0               B        ??WizFiResponseCommand_AT_NCTCP_2
   \   00000038   687A               LDRB     R0,[R5, #+9]
   \   0000003A   3928               CMP      R0,#+57
   \   0000003C   00D1               BNE      .+4
   \   0000003E   A4E0               B        ??WizFiResponseCommand_AT_NCTCP_2
   \   00000040   687A               LDRB     R0,[R5, #+9]
   \   00000042   4128               CMP      R0,#+65
   \   00000044   00D1               BNE      .+4
   \   00000046   A0E0               B        ??WizFiResponseCommand_AT_NCTCP_2
    760                  {
    761                    odp=1;  //ok 
   \   00000048   6846               MOV      R0,SP
   \   0000004A   0121               MOVS     R1,#+1
   \   0000004C   0170               STRB     R1,[R0, #+0]
    762                    pTxt+=9;
   \   0000004E   0935               ADDS     R5,R5,#+9
    763                    Net->Status.HostChannel=*pTxt;
   \   00000050   2878               LDRB     R0,[R5, #+0]
   \   00000052   A075               STRB     R0,[R4, #+22]
    764                    Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   A070               STRB     R0,[R4, #+2]
    765                    
    766                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000058   2700               MOVS     R7,R4
   \   0000005A   3837               ADDS     R7,R7,#+56
   \   0000005C   7248               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x8  ;; g_counter
   \   0000005E   03C8               LDM      R0!,{R0,R1}
   \   00000060   0200               MOVS     R2,R0
   \   00000062   0B00               MOVS     R3,R1
   \   00000064   7148               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0xC  ;; 0x2710
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   8018               ADDS     R0,R0,R2
   \   0000006A   5941               ADCS     R1,R1,R3
   \   0000006C   03C7               STM      R7!,{R0,R1}
   \   0000006E   083F               SUBS     R7,R7,#+8
    767                    
    768          
    769               
    770                    if ((pTxt[0]-48)==6)
   \   00000070   2878               LDRB     R0,[R5, #+0]
   \   00000072   3038               SUBS     R0,R0,#+48
   \   00000074   0628               CMP      R0,#+6
   \   00000076   32D1               BNE      ??WizFiResponseCommand_AT_NCTCP_3
    771                    {
    772                     char BTS=0;
   \   00000078   0027               MOVS     R7,#+0
    773                     for (char i=0; i<sizeof(AT_NCLOSE); i++)  {Buff_TX[i]=AT_NCLOSE[i];   BTS++;}
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   08E0               B        ??WizFiResponseCommand_AT_NCTCP_4
   \                     ??WizFiResponseCommand_AT_NCTCP_5:
   \   0000007E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000080   000E               LSRS     R0,R0,#+24
   \   00000082   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000084   000E               LSRS     R0,R0,#+24
   \   00000086   6A49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x10  ;; AT_NCLOSE
   \   00000088   095C               LDRB     R1,[R1, R0]
   \   0000008A   3154               STRB     R1,[R6, R0]
   \   0000008C   7F1C               ADDS     R7,R7,#+1
   \   0000008E   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NCTCP_4:
   \   00000090   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000092   000E               LSRS     R0,R0,#+24
   \   00000094   0B28               CMP      R0,#+11
   \   00000096   F2D3               BCC      ??WizFiResponseCommand_AT_NCTCP_5
    774                     BTS--;
   \   00000098   7F1E               SUBS     R7,R7,#+1
    775                     Buff_TX[BTS++]='0';
   \   0000009A   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000009C   3F0E               LSRS     R7,R7,#+24
   \   0000009E   3020               MOVS     R0,#+48
   \   000000A0   F055               STRB     R0,[R6, R7]
   \   000000A2   7F1C               ADDS     R7,R7,#+1
    776                     Buff_TX[BTS++]=0x0d; 
   \   000000A4   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000A6   3F0E               LSRS     R7,R7,#+24
   \   000000A8   0D20               MOVS     R0,#+13
   \   000000AA   F055               STRB     R0,[R6, R7]
   \   000000AC   7F1C               ADDS     R7,R7,#+1
    777                     if (WiFiDebug) SendViaUSB(Buff_RX, BTS); 
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000000AE   5C48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   000000B0   0078               LDRB     R0,[R0, #+0]
   \   000000B2   0028               CMP      R0,#+0
   \   000000B4   07D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_6
   \   000000B6   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000B8   3F0E               LSRS     R7,R7,#+24
   \   000000BA   3900               MOVS     R1,R7
   \   000000BC   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   000000BE   090C               LSRS     R1,R1,#+16
   \   000000C0   0198               LDR      R0,[SP, #+4]
   \   000000C2   ........           BL       SendViaUSB
    778                     AT91F_US_SendFrame(USART,Buff_TX,BTS,0, 0);                        //Wysyla ramke  otwieraj¹c¹ po³¹czenie 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiResponseCommand_AT_NCTCP_6:
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0020               MOVS     R0,#+0
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   0023               MOVS     R3,#+0
   \   000000CE   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   000000D0   3F0E               LSRS     R7,R7,#+24
   \   000000D2   3A00               MOVS     R2,R7
   \   000000D4   3100               MOVS     R1,R6
   \   000000D6   0498               LDR      R0,[SP, #+16]
   \   000000D8   ........           BL       AT91F_US_SendFrame
   \   000000DC   02B0               ADD      SP,SP,#+8
    779                    
    780                    }
    781                    if ((pTxt[0]-48)>6)
   \                     ??WizFiResponseCommand_AT_NCTCP_3:
   \   000000DE   2878               LDRB     R0,[R5, #+0]
   \   000000E0   3038               SUBS     R0,R0,#+48
   \   000000E2   0728               CMP      R0,#+7
   \   000000E4   33DB               BLT      ??WizFiResponseCommand_AT_NCTCP_7
    782                    {
    783                     char BTS=0;
   \   000000E6   0027               MOVS     R7,#+0
    784                     for (char i=0; i<sizeof(AT_NCLOSE); i++)  {Buff_TX[i]=AT_NCLOSE[i];   BTS++;}
   \   000000E8   0020               MOVS     R0,#+0
   \   000000EA   08E0               B        ??WizFiResponseCommand_AT_NCTCP_8
   \                     ??WizFiResponseCommand_AT_NCTCP_9:
   \   000000EC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000EE   000E               LSRS     R0,R0,#+24
   \   000000F0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000F2   000E               LSRS     R0,R0,#+24
   \   000000F4   4E49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x10  ;; AT_NCLOSE
   \   000000F6   095C               LDRB     R1,[R1, R0]
   \   000000F8   3154               STRB     R1,[R6, R0]
   \   000000FA   7F1C               ADDS     R7,R7,#+1
   \   000000FC   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NCTCP_8:
   \   000000FE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000100   000E               LSRS     R0,R0,#+24
   \   00000102   0B28               CMP      R0,#+11
   \   00000104   F2D3               BCC      ??WizFiResponseCommand_AT_NCTCP_9
    785                     BTS--;
   \   00000106   7F1E               SUBS     R7,R7,#+1
    786                     Buff_TX[BTS++]=pTxt[0]-1;
   \   00000108   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   0000010A   3F0E               LSRS     R7,R7,#+24
   \   0000010C   2878               LDRB     R0,[R5, #+0]
   \   0000010E   401E               SUBS     R0,R0,#+1
   \   00000110   F055               STRB     R0,[R6, R7]
   \   00000112   7F1C               ADDS     R7,R7,#+1
    787                     Buff_TX[BTS++]=0x0d; 
   \   00000114   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000116   3F0E               LSRS     R7,R7,#+24
   \   00000118   0D20               MOVS     R0,#+13
   \   0000011A   F055               STRB     R0,[R6, R7]
   \   0000011C   7F1C               ADDS     R7,R7,#+1
    788                     
    789                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000011E   4048               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   00000120   0078               LDRB     R0,[R0, #+0]
   \   00000122   0028               CMP      R0,#+0
   \   00000124   07D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_10
   \   00000126   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000128   3F0E               LSRS     R7,R7,#+24
   \   0000012A   3900               MOVS     R1,R7
   \   0000012C   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   0000012E   090C               LSRS     R1,R1,#+16
   \   00000130   3000               MOVS     R0,R6
   \   00000132   ........           BL       SendViaUSB
    790                     AT91F_US_SendFrame(USART,Buff_TX,BTS,0, 0);                        //Wysyla ramke  otwieraj¹c¹ po³¹czenie 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiResponseCommand_AT_NCTCP_10:
   \   00000136   82B0               SUB      SP,SP,#+8
   \   00000138   0020               MOVS     R0,#+0
   \   0000013A   0090               STR      R0,[SP, #+0]
   \   0000013C   0023               MOVS     R3,#+0
   \   0000013E   3F06               LSLS     R7,R7,#+24       ;; ZeroExtS R7,R7,#+24,#+24
   \   00000140   3F0E               LSRS     R7,R7,#+24
   \   00000142   3A00               MOVS     R2,R7
   \   00000144   3100               MOVS     R1,R6
   \   00000146   0498               LDR      R0,[SP, #+16]
   \   00000148   ........           BL       AT91F_US_SendFrame
   \   0000014C   02B0               ADD      SP,SP,#+8
    791          
    792                    }
    793                
    794                    
    795                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \                     ??WizFiResponseCommand_AT_NCTCP_7:
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   05E0               B        ??WizFiResponseCommand_AT_NCTCP_11
   \                     ??WizFiResponseCommand_AT_NCTCP_12:
   \   00000152   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000154   000E               LSRS     R0,R0,#+24
   \   00000156   0199               LDR      R1,[SP, #+4]
   \   00000158   0022               MOVS     R2,#+0
   \   0000015A   0A54               STRB     R2,[R1, R0]
   \   0000015C   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NCTCP_11:
   \   0000015E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000160   000E               LSRS     R0,R0,#+24
   \   00000162   3228               CMP      R0,#+50
   \   00000164   F5D3               BCC      ??WizFiResponseCommand_AT_NCTCP_12
    796                    
    797                    
    798                    Net->Status.HostLink=CONNECTED;
   \   00000166   0320               MOVS     R0,#+3
   \   00000168   6070               STRB     R0,[R4, #+1]
    799                    Net->Status.HttpNextQueryTime=g_counter+100;
   \   0000016A   2200               MOVS     R2,R4
   \   0000016C   3032               ADDS     R2,R2,#+48
   \   0000016E   2E48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x8  ;; g_counter
   \   00000170   03C8               LDM      R0!,{R0,R1}
   \   00000172   0023               MOVS     R3,#+0
   \   00000174   6430               ADDS     R0,R0,#+100
   \   00000176   5941               ADCS     R1,R1,R3
   \   00000178   03C2               STM      R2!,{R0,R1}
   \   0000017A   083A               SUBS     R2,R2,#+8
    800                    Net->Status.FreezTime=0;
   \   0000017C   0020               MOVS     R0,#+0
   \   0000017E   0021               MOVS     R1,#+0
   \   00000180   2064               STR      R0,[R4, #+64]
   \   00000182   6164               STR      R1,[R4, #+68]
    801                    Net->Status.Error=0;
   \   00000184   0020               MOVS     R0,#+0
   \   00000186   6075               STRB     R0,[R4, #+21]
   \   00000188   43E0               B        ??WizFiResponseCommand_AT_NCTCP_13
    802                    
    803          
    804                    
    805                  
    806                    
    807                  }else if (strstr(Buff_RX, "[ERROR")!=NULL)
   \                     ??WizFiResponseCommand_AT_NCTCP_2:
   \   0000018A   2A49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x14  ;; `?<Constant "[ERROR">`
   \   0000018C   0198               LDR      R0,[SP, #+4]
   \   0000018E   ........           BL       strstr
   \   00000192   0028               CMP      R0,#+0
   \   00000194   3DD0               BEQ      ??WizFiResponseCommand_AT_NCTCP_13
    808                  {
    809                    if (strstr(Buff_RX, "NO CID]")!=NULL)
   \   00000196   2849               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x18  ;; `?<Constant "NO CID]">`
   \   00000198   0198               LDR      R0,[SP, #+4]
   \   0000019A   ........           BL       strstr
   \   0000019E   0028               CMP      R0,#+0
   \   000001A0   1FD0               BEQ      ??WizFiResponseCommand_AT_NCTCP_14
    810                    {
    811                      
    812                      odp=0;
   \   000001A2   6846               MOV      R0,SP
   \   000001A4   0021               MOVS     R1,#+0
   \   000001A6   0170               STRB     R1,[R0, #+0]
    813                      
    814                      //radykalne zabezpieczenie - tymczasowe(prawdopodobnie :-)  )
    815                      //AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;   //restart sterownika    
    816                      
    817                       if (WiFiDebug) SendViaUSB((char*)AT_XRESET, sizeof(AT_XRESET)-1);
                                                        ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000001A8   1D48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   000001AA   0078               LDRB     R0,[R0, #+0]
   \   000001AC   0028               CMP      R0,#+0
   \   000001AE   03D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_15
   \   000001B0   0A21               MOVS     R1,#+10
   \   000001B2   2248               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x1C  ;; AT_XRESET
   \   000001B4   ........           BL       SendViaUSB
    818                      AT91F_US_SendFrame(USART,(char*)AT_XRESET,sizeof(AT_XRESET)-1,0, 0);                        //Wysyla ramke resetuj¹c¹ modu³ WiFi 
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiResponseCommand_AT_NCTCP_15:
   \   000001B8   82B0               SUB      SP,SP,#+8
   \   000001BA   0020               MOVS     R0,#+0
   \   000001BC   0090               STR      R0,[SP, #+0]
   \   000001BE   0023               MOVS     R3,#+0
   \   000001C0   0A22               MOVS     R2,#+10
   \   000001C2   1E49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x1C  ;; AT_XRESET
   \   000001C4   0498               LDR      R0,[SP, #+16]
   \   000001C6   ........           BL       AT91F_US_SendFrame
   \   000001CA   02B0               ADD      SP,SP,#+8
    819                      
    820                    #ifdef _ADMINISTRATOR_
    821                                Message_Paint(2,"Reset","WiFi",""," ","");   
   \   000001CC   1CA1               ADR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x20  ;; 0x00, 0x00, 0x00, 0x00
   \   000001CE   1DA0               ADR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x24  ;; 0x20, 0x00, 0x00, 0x00
   \   000001D0   03B4               PUSH     {R0,R1}
   \   000001D2   1BA3               ADR      R3,??WizFiResponseCommand_AT_NCTCP_0+0x20  ;; 0x00, 0x00, 0x00, 0x00
   \   000001D4   1C4A               LDR      R2,??WizFiResponseCommand_AT_NCTCP_0+0x28  ;; `?<Constant "WiFi">`
   \   000001D6   1D49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x2C  ;; `?<Constant "Reset">`
   \   000001D8   0220               MOVS     R0,#+2
   \   000001DA   ........           BL       Message_Paint
   \   000001DE   02B0               ADD      SP,SP,#+8
   \   000001E0   17E0               B        ??WizFiResponseCommand_AT_NCTCP_13
    822                    #endif            
    823                    }else{
    824                      odp=0;
   \                     ??WizFiResponseCommand_AT_NCTCP_14:
   \   000001E2   6846               MOV      R0,SP
   \   000001E4   0021               MOVS     R1,#+0
   \   000001E6   0170               STRB     R1,[R0, #+0]
    825                      for (char i=0; i<50; i++) Buff_RX[i]=0;                    
   \   000001E8   0020               MOVS     R0,#+0
   \   000001EA   05E0               B        ??WizFiResponseCommand_AT_NCTCP_16
   \                     ??WizFiResponseCommand_AT_NCTCP_17:
   \   000001EC   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001EE   000E               LSRS     R0,R0,#+24
   \   000001F0   0199               LDR      R1,[SP, #+4]
   \   000001F2   0022               MOVS     R2,#+0
   \   000001F4   0A54               STRB     R2,[R1, R0]
   \   000001F6   401C               ADDS     R0,R0,#+1
   \                     ??WizFiResponseCommand_AT_NCTCP_16:
   \   000001F8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000001FA   000E               LSRS     R0,R0,#+24
   \   000001FC   3228               CMP      R0,#+50
   \   000001FE   F5D3               BCC      ??WizFiResponseCommand_AT_NCTCP_17
    826                      Net->Status.HostLink=DISCONNECTED;
   \   00000200   0020               MOVS     R0,#+0
   \   00000202   6070               STRB     R0,[R4, #+1]
    827                      Net->Status.FreezTime=0;
   \   00000204   0020               MOVS     R0,#+0
   \   00000206   0021               MOVS     R1,#+0
   \   00000208   2064               STR      R0,[R4, #+64]
   \   0000020A   6164               STR      R1,[R4, #+68]
    828                      
    829                      Net->Status.Error++;
   \   0000020C   607D               LDRB     R0,[R4, #+21]
   \   0000020E   401C               ADDS     R0,R0,#+1
   \   00000210   6075               STRB     R0,[R4, #+21]
    830                    }
    831                    
    832                  }
    833                    
    834          
    835             return odp;
   \                     ??WizFiResponseCommand_AT_NCTCP_13:
   \   00000212   6846               MOV      R0,SP
   \   00000214   0078               LDRB     R0,[R0, #+0]
   \   00000216   03B0               ADD      SP,SP,#+12
   \   00000218   F0BC               POP      {R4-R7}
   \   0000021A   02BC               POP      {R1}
   \   0000021C   0847               BX       R1               ;; return
   \   0000021E   C046               Nop      
   \                     ??WizFiResponseCommand_AT_NCTCP_0:
   \   00000220   ........           DC32     WiFiDebug
   \   00000224   ........           DC32     `?<Constant "[CONNECT">`
   \   00000228   ........           DC32     g_counter
   \   0000022C   10270000           DC32     0x2710
   \   00000230   ........           DC32     AT_NCLOSE
   \   00000234   ........           DC32     `?<Constant "[ERROR">`
   \   00000238   ........           DC32     `?<Constant "NO CID]">`
   \   0000023C   ........           DC32     AT_XRESET
   \   00000240   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000244   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000248   ........           DC32     `?<Constant "WiFi">`
   \   0000024C   ........           DC32     `?<Constant "Reset">`
    836          }
    837          
    838          
    839          
    840          
    841           
    842          
    843          
    844          
    845          //funkcja konwertuje napis na wartoæ short int --------------------------------
    846          // Txt  -wskanik na ci¹g
    847          // Cyfr -funkcja zwraca iloæ cyfr w ci¹gu
    848          // funkcja zwraca wartoæ short int

   \                                 In section Debug.txt, align 4, keep-with-next
    849          signed short int StrToWord(char *String, char *Cyfr)
    850          {
   \                     StrToWord:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
    851             char *Txt=String;
    852             char LiczbaTab[5];
    853             char IlCyfr=0;
   \   00000002   0023               MOVS     R3,#+0
    854             signed char Min=1;
   \   00000004   0122               MOVS     R2,#+1
   \   00000006   07E0               B        ??StrToWord_0
    855             
    856             while ((((*Txt>='0') && (*Txt<='9')) || (*Txt=='-')) && (IlCyfr<5))
    857             {
    858                if (*Txt=='-')
    859                {
    860                   Min=-1;
    861                }else{
    862                   LiczbaTab[IlCyfr++]=*Txt-48;
   \                     ??StrToWord_1:
   \   00000008   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000000A   1B0E               LSRS     R3,R3,#+24
   \   0000000C   6C46               MOV      R4,SP
   \   0000000E   0578               LDRB     R5,[R0, #+0]
   \   00000010   303D               SUBS     R5,R5,#+48
   \   00000012   E554               STRB     R5,[R4, R3]
   \   00000014   5B1C               ADDS     R3,R3,#+1
    863                }
    864                *Txt++;
   \                     ??StrToWord_2:
   \   00000016   401C               ADDS     R0,R0,#+1
   \                     ??StrToWord_0:
   \   00000018   0478               LDRB     R4,[R0, #+0]
   \   0000001A   302C               CMP      R4,#+48
   \   0000001C   02D3               BCC      ??StrToWord_3
   \   0000001E   0478               LDRB     R4,[R0, #+0]
   \   00000020   3A2C               CMP      R4,#+58
   \   00000022   02D3               BCC      ??StrToWord_4
   \                     ??StrToWord_3:
   \   00000024   0478               LDRB     R4,[R0, #+0]
   \   00000026   2D2C               CMP      R4,#+45
   \   00000028   09D1               BNE      ??StrToWord_5
   \                     ??StrToWord_4:
   \   0000002A   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   0000002C   1B0E               LSRS     R3,R3,#+24
   \   0000002E   052B               CMP      R3,#+5
   \   00000030   05D2               BCS      ??StrToWord_5
   \   00000032   0478               LDRB     R4,[R0, #+0]
   \   00000034   2D2C               CMP      R4,#+45
   \   00000036   E7D1               BNE      ??StrToWord_1
   \   00000038   0022               MOVS     R2,#+0
   \   0000003A   D243               MVNS     R2,R2            ;; #-1
   \   0000003C   EBE7               B        ??StrToWord_2
    865             }
    866             *Cyfr=IlCyfr;
   \                     ??StrToWord_5:
   \   0000003E   0B70               STRB     R3,[R1, #+0]
    867             
    868             int Mnoz=1;
   \   00000040   0121               MOVS     R1,#+1
    869             signed short int Wartosc=0; 
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   0BE0               B        ??StrToWord_6
    870             while (IlCyfr>0)
    871             {
    872                 Wartosc+=LiczbaTab[--IlCyfr]*Mnoz;
   \                     ??StrToWord_7:
   \   00000046   5B1E               SUBS     R3,R3,#+1
   \   00000048   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000004A   0014               ASRS     R0,R0,#+16
   \   0000004C   1C00               MOVS     R4,R3
   \   0000004E   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   00000050   240E               LSRS     R4,R4,#+24
   \   00000052   6D46               MOV      R5,SP
   \   00000054   2C5D               LDRB     R4,[R5, R4]
   \   00000056   4C43               MULS     R4,R1,R4
   \   00000058   0019               ADDS     R0,R0,R4
    873                 Mnoz*=10;
   \   0000005A   0A24               MOVS     R4,#+10
   \   0000005C   6143               MULS     R1,R4,R1
    874             }
   \                     ??StrToWord_6:
   \   0000005E   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   00000060   1B0E               LSRS     R3,R3,#+24
   \   00000062   012B               CMP      R3,#+1
   \   00000064   EFD2               BCS      ??StrToWord_7
    875             Wartosc*=Min;
   \   00000066   1206               LSLS     R2,R2,#+24       ;; SignExtS R2,R2,#+24,#+24
   \   00000068   1216               ASRS     R2,R2,#+24
   \   0000006A   5043               MULS     R0,R2,R0
    876             
    877             return Wartosc;
   \   0000006C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000006E   0014               ASRS     R0,R0,#+16
   \   00000070   03B0               ADD      SP,SP,#+12
   \   00000072   30BC               POP      {R4,R5}
   \   00000074   02BC               POP      {R1}
   \   00000076   0847               BX       R1               ;; return
    878          }//_____________________________________________________________________________
    879          
    880          

   \                                 In section Debug.txt, align 4, keep-with-next
    881          unsigned short GetSpecialAnalogVar(char ZmSp)
    882          {
   \                     GetSpecialAnalogVar:
   \   00000000   10B5               PUSH     {R4,LR}
    883             char sc;
    884             
    885             if (ZmSp<ScreenNr)       //zmienne czujnika termostatu
   \   00000002   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000004   000E               LSRS     R0,R0,#+24
   \   00000006   0828               CMP      R0,#+8
   \   00000008   34D2               BCS      ??GetSpecialAnalogVar_0
    886             {
    887                  sc=ZmSp;
    888                  if (gProg.Screen[sc].Thermo.SensorNode<0) //je¿eli zmienna
   \   0000000A   2649               LDR      R1,??GetSpecialAnalogVar_1  ;; 0xbc27
   \   0000000C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000E   000E               LSRS     R0,R0,#+24
   \   00000010   A022               MOVS     R2,#+160
   \   00000012   4243               MULS     R2,R0,R2
   \   00000014   244B               LDR      R3,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   00000016   9A18               ADDS     R2,R3,R2
   \   00000018   5156               LDRSB    R1,[R2, R1]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   0ED5               BPL      ??GetSpecialAnalogVar_2
    889                     {
    890                       return VariablesAnal[gProg.Screen[sc].Thermo.SensorReg];
   \   0000001E   2349               LDR      R1,??GetSpecialAnalogVar_1+0x8  ;; 0xbc28
   \   00000020   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000022   000E               LSRS     R0,R0,#+24
   \   00000024   A022               MOVS     R2,#+160
   \   00000026   5043               MULS     R0,R2,R0
   \   00000028   1F4A               LDR      R2,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   0000002A   1018               ADDS     R0,R2,R0
   \   0000002C   405C               LDRB     R0,[R0, R1]
   \   0000002E   0221               MOVS     R1,#+2
   \   00000030   4843               MULS     R0,R1,R0
   \   00000032   1F49               LDR      R1,??GetSpecialAnalogVar_1+0xC  ;; VariablesAnal
   \   00000034   085E               LDRSH    R0,[R1, R0]
   \   00000036   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000038   000C               LSRS     R0,R0,#+16
   \   0000003A   30E0               B        ??GetSpecialAnalogVar_3
    891                     }else{
    892                       return MainStage.StageI[gProg.Screen[sc].Thermo.SensorNode].Value[gProg.Screen[sc].Thermo.SensorReg];
   \                     ??GetSpecialAnalogVar_2:
   \   0000003C   A021               MOVS     R1,#+160
   \   0000003E   1B4A               LDR      R2,??GetSpecialAnalogVar_1+0x8  ;; 0xbc28
   \   00000040   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000042   000E               LSRS     R0,R0,#+24
   \   00000044   A023               MOVS     R3,#+160
   \   00000046   4343               MULS     R3,R0,R3
   \   00000048   174C               LDR      R4,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   0000004A   E318               ADDS     R3,R4,R3
   \   0000004C   9A5C               LDRB     R2,[R3, R2]
   \   0000004E   0223               MOVS     R3,#+2
   \   00000050   5A43               MULS     R2,R3,R2
   \   00000052   144B               LDR      R3,??GetSpecialAnalogVar_1  ;; 0xbc27
   \   00000054   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   A024               MOVS     R4,#+160
   \   0000005A   6043               MULS     R0,R4,R0
   \   0000005C   124C               LDR      R4,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   0000005E   2018               ADDS     R0,R4,R0
   \   00000060   C056               LDRSB    R0,[R0, R3]
   \   00000062   1623               MOVS     R3,#+22
   \   00000064   5843               MULS     R0,R3,R0
   \   00000066   134B               LDR      R3,??GetSpecialAnalogVar_1+0x10  ;; MainStage
   \   00000068   1818               ADDS     R0,R3,R0
   \   0000006A   8018               ADDS     R0,R0,R2
   \   0000006C   405E               LDRSH    R0,[R0, R1]
   \   0000006E   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000070   000C               LSRS     R0,R0,#+16
   \   00000072   14E0               B        ??GetSpecialAnalogVar_3
    893                     }
    894             }
    895             else if ((ZmSp>=10) && (ZmSp<10+ScreenNr))       //zmienne czujnika termostatu
   \                     ??GetSpecialAnalogVar_0:
   \   00000074   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000076   000E               LSRS     R0,R0,#+24
   \   00000078   0A28               CMP      R0,#+10
   \   0000007A   0FD3               BCC      ??GetSpecialAnalogVar_4
   \   0000007C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000007E   000E               LSRS     R0,R0,#+24
   \   00000080   1228               CMP      R0,#+18
   \   00000082   0BD2               BCS      ??GetSpecialAnalogVar_4
    896             {
    897                     sc=ZmSp-10;
   \   00000084   0A38               SUBS     R0,R0,#+10
    898                     return gProg.Screen[sc].Thermo.SetTemperature;
   \   00000086   0C49               LDR      R1,??GetSpecialAnalogVar_1+0x14  ;; 0xbc2e
   \   00000088   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000008A   000E               LSRS     R0,R0,#+24
   \   0000008C   A022               MOVS     R2,#+160
   \   0000008E   5043               MULS     R0,R2,R0
   \   00000090   054A               LDR      R2,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   00000092   1018               ADDS     R0,R2,R0
   \   00000094   405E               LDRSH    R0,[R0, R1]
   \   00000096   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000098   000C               LSRS     R0,R0,#+16
   \   0000009A   00E0               B        ??GetSpecialAnalogVar_3
    899              
    900             }
    901             return 0;
   \                     ??GetSpecialAnalogVar_4:
   \   0000009C   0020               MOVS     R0,#+0
   \                     ??GetSpecialAnalogVar_3:
   \   0000009E   10BC               POP      {R4}
   \   000000A0   02BC               POP      {R1}
   \   000000A2   0847               BX       R1               ;; return
   \                     ??GetSpecialAnalogVar_1:
   \   000000A4   27BC0000           DC32     0xbc27
   \   000000A8   ........           DC32     gProg
   \   000000AC   28BC0000           DC32     0xbc28
   \   000000B0   ........           DC32     VariablesAnal
   \   000000B4   ........           DC32     MainStage
   \   000000B8   2EBC0000           DC32     0xbc2e
    902            
    903          }
    904          
    905          

   \                                 In section Debug.txt, align 4, keep-with-next
    906          char GetSpecialBinarVar(char ZmSp)
    907          {
   \                     GetSpecialBinarVar:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    908             char sc;
    909            
    910             if (ZmSp<ScreenNr)       //zmienne  termostatu  AutoOn
   \   00000002   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000004   000E               LSRS     R0,R0,#+24
   \   00000006   0828               CMP      R0,#+8
   \   00000008   08D2               BCS      ??GetSpecialBinarVar_0
    911             {
    912                  return gProg.Screen[ZmSp].Thermo.AutoOn;
   \   0000000A   4F49               LDR      R1,??GetSpecialBinarVar_1  ;; 0xbc26
   \   0000000C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000E   000E               LSRS     R0,R0,#+24
   \   00000010   A022               MOVS     R2,#+160
   \   00000012   5043               MULS     R0,R2,R0
   \   00000014   4D4A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000016   1018               ADDS     R0,R2,R0
   \   00000018   405C               LDRB     R0,[R0, R1]
   \   0000001A   92E0               B        ??GetSpecialBinarVar_2
    913             }
    914             else if ((ZmSp>=10) && (ZmSp<10+ScreenNr))       //zmienne  termostatu Temp. zad w AutoOn
   \                     ??GetSpecialBinarVar_0:
   \   0000001C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000001E   000E               LSRS     R0,R0,#+24
   \   00000020   0A28               CMP      R0,#+10
   \   00000022   3AD3               BCC      ??GetSpecialBinarVar_3
   \   00000024   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000026   000E               LSRS     R0,R0,#+24
   \   00000028   1228               CMP      R0,#+18
   \   0000002A   36D2               BCS      ??GetSpecialBinarVar_3
    915             {
    916                 sc=ZmSp-10;
   \   0000002C   0A38               SUBS     R0,R0,#+10
   \   0000002E   0500               MOVS     R5,R0
    917                char MaxTmp;
    918                if (gProg.Screen[sc].Thermo.Temperature[0]>gProg.Screen[sc].Thermo.Temperature[1])
   \   00000030   4748               LDR      R0,??GetSpecialBinarVar_1+0x8  ;; 0xbc2c
   \   00000032   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000034   2D0E               LSRS     R5,R5,#+24
   \   00000036   A021               MOVS     R1,#+160
   \   00000038   6943               MULS     R1,R5,R1
   \   0000003A   444A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   0000003C   5118               ADDS     R1,R2,R1
   \   0000003E   085E               LDRSH    R0,[R1, R0]
   \   00000040   4449               LDR      R1,??GetSpecialBinarVar_1+0xC  ;; 0xbc2a
   \   00000042   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000044   2D0E               LSRS     R5,R5,#+24
   \   00000046   A022               MOVS     R2,#+160
   \   00000048   6A43               MULS     R2,R5,R2
   \   0000004A   404B               LDR      R3,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   0000004C   9A18               ADDS     R2,R3,R2
   \   0000004E   515E               LDRSH    R1,[R2, R1]
   \   00000050   8842               CMP      R0,R1
   \   00000052   08DA               BGE      ??GetSpecialBinarVar_4
    919                {
    920                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[0]; 
   \   00000054   3F48               LDR      R0,??GetSpecialBinarVar_1+0xC  ;; 0xbc2a
   \   00000056   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000058   2D0E               LSRS     R5,R5,#+24
   \   0000005A   A021               MOVS     R1,#+160
   \   0000005C   6943               MULS     R1,R5,R1
   \   0000005E   3B4A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000060   5118               ADDS     R1,R2,R1
   \   00000062   085A               LDRH     R0,[R1, R0]
   \   00000064   07E0               B        ??GetSpecialBinarVar_5
    921                }else{
    922                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[1];
   \                     ??GetSpecialBinarVar_4:
   \   00000066   3A48               LDR      R0,??GetSpecialBinarVar_1+0x8  ;; 0xbc2c
   \   00000068   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000006A   2D0E               LSRS     R5,R5,#+24
   \   0000006C   A021               MOVS     R1,#+160
   \   0000006E   6943               MULS     R1,R5,R1
   \   00000070   364A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000072   5118               ADDS     R1,R2,R1
   \   00000074   085A               LDRH     R0,[R1, R0]
    923                }
    924                
    925                if (gProg.Screen[sc].Thermo.SetTemperature==MaxTmp)
   \                     ??GetSpecialBinarVar_5:
   \   00000076   3849               LDR      R1,??GetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   00000078   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000007A   2D0E               LSRS     R5,R5,#+24
   \   0000007C   A022               MOVS     R2,#+160
   \   0000007E   5543               MULS     R5,R2,R5
   \   00000080   324A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000082   5219               ADDS     R2,R2,R5
   \   00000084   515E               LDRSH    R1,[R2, R1]
   \   00000086   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000008C   0014               ASRS     R0,R0,#+16
   \   0000008E   8142               CMP      R1,R0
   \   00000090   01D1               BNE      ??GetSpecialBinarVar_6
    926                {
    927                 return 1;  
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   55E0               B        ??GetSpecialBinarVar_2
    928                }else{
    929                 return 0;      
   \                     ??GetSpecialBinarVar_6:
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   53E0               B        ??GetSpecialBinarVar_2
    930                }     
    931                    
    932                  
    933             }
    934             else if ((ZmSp>=40) && (ZmSp<40+ScreenNr))       //zmienne  termostatu Temp. zad w AutoOn
   \                     ??GetSpecialBinarVar_3:
   \   0000009A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009C   000E               LSRS     R0,R0,#+24
   \   0000009E   2828               CMP      R0,#+40
   \   000000A0   4ED3               BCC      ??GetSpecialBinarVar_7
   \   000000A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000A4   000E               LSRS     R0,R0,#+24
   \   000000A6   3028               CMP      R0,#+48
   \   000000A8   4AD2               BCS      ??GetSpecialBinarVar_7
    935             {
    936                sc=ZmSp-40;
   \   000000AA   2838               SUBS     R0,R0,#+40
   \   000000AC   0500               MOVS     R5,R0
    937                
    938                char res=0;
   \   000000AE   0024               MOVS     R4,#+0
    939                
    940                  if ((gProg.Screen[sc].Thermo.ActorNode<0xFF) && (gProg.Screen[sc].Thermo.ActorNode>=0))   //je¿eli wêze³
   \   000000B0   2A48               LDR      R0,??GetSpecialBinarVar_1+0x14  ;; 0xbc24
   \   000000B2   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000B4   2D0E               LSRS     R5,R5,#+24
   \   000000B6   A021               MOVS     R1,#+160
   \   000000B8   6943               MULS     R1,R5,R1
   \   000000BA   244A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   000000BC   5118               ADDS     R1,R2,R1
   \   000000BE   0856               LDRSB    R0,[R1, R0]
   \   000000C0   0028               CMP      R0,#+0
   \   000000C2   1DD4               BMI      ??GetSpecialBinarVar_8
    941                  {
    942                    if ((PortStageRead(MainStage.StageQ[gProg.Screen[sc].Thermo.ActorNode].Port , gProg.Screen[sc].Thermo.ActorPort))==1) res=1;
   \   000000C4   2648               LDR      R0,??GetSpecialBinarVar_1+0x18  ;; 0xbc25
   \   000000C6   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000C8   2D0E               LSRS     R5,R5,#+24
   \   000000CA   A021               MOVS     R1,#+160
   \   000000CC   6943               MULS     R1,R5,R1
   \   000000CE   1F4A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   000000D0   5118               ADDS     R1,R2,R1
   \   000000D2   095C               LDRB     R1,[R1, R0]
   \   000000D4   2348               LDR      R0,??GetSpecialBinarVar_1+0x1C  ;; 0x3a2
   \   000000D6   214A               LDR      R2,??GetSpecialBinarVar_1+0x14  ;; 0xbc24
   \   000000D8   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   000000DA   2D0E               LSRS     R5,R5,#+24
   \   000000DC   A023               MOVS     R3,#+160
   \   000000DE   5D43               MULS     R5,R3,R5
   \   000000E0   1A4B               LDR      R3,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   000000E2   5B19               ADDS     R3,R3,R5
   \   000000E4   9A56               LDRSB    R2,[R3, R2]
   \   000000E6   1623               MOVS     R3,#+22
   \   000000E8   5A43               MULS     R2,R3,R2
   \   000000EA   1F4B               LDR      R3,??GetSpecialBinarVar_1+0x20  ;; MainStage
   \   000000EC   9A18               ADDS     R2,R3,R2
   \   000000EE   105A               LDRH     R0,[R2, R0]
   \   000000F0   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000000F2   0014               ASRS     R0,R0,#+16
   \   000000F4   ........           BL       PortStageRead
   \   000000F8   0128               CMP      R0,#+1
   \   000000FA   1DD1               BNE      ??GetSpecialBinarVar_9
   \   000000FC   0124               MOVS     R4,#+1
   \   000000FE   1BE0               B        ??GetSpecialBinarVar_9
    943                  }else{  //Je¿eli zmienna
    944                    if(((Variables[gProg.Screen[sc].Thermo.ActorPort/8]>> (gProg.Screen[sc].Thermo.ActorPort%8))&0x1)==1) res=1;
   \                     ??GetSpecialBinarVar_8:
   \   00000100   1748               LDR      R0,??GetSpecialBinarVar_1+0x18  ;; 0xbc25
   \   00000102   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   00000104   2D0E               LSRS     R5,R5,#+24
   \   00000106   A021               MOVS     R1,#+160
   \   00000108   6943               MULS     R1,R5,R1
   \   0000010A   104A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   0000010C   5118               ADDS     R1,R2,R1
   \   0000010E   085C               LDRB     R0,[R1, R0]
   \   00000110   0821               MOVS     R1,#+8
   \   00000112   ........           BL       __aeabi_idivmod
   \   00000116   1549               LDR      R1,??GetSpecialBinarVar_1+0x24  ;; Variables
   \   00000118   0E5C               LDRB     R6,[R1, R0]
   \   0000011A   1148               LDR      R0,??GetSpecialBinarVar_1+0x18  ;; 0xbc25
   \   0000011C   2D06               LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
   \   0000011E   2D0E               LSRS     R5,R5,#+24
   \   00000120   A021               MOVS     R1,#+160
   \   00000122   4D43               MULS     R5,R1,R5
   \   00000124   0949               LDR      R1,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000126   4919               ADDS     R1,R1,R5
   \   00000128   085C               LDRB     R0,[R1, R0]
   \   0000012A   0821               MOVS     R1,#+8
   \   0000012C   ........           BL       __aeabi_idivmod
   \   00000130   0E41               ASRS     R6,R6,R1
   \   00000132   F007               LSLS     R0,R6,#+31
   \   00000134   00D5               BPL      ??GetSpecialBinarVar_9
   \   00000136   0124               MOVS     R4,#+1
    945                  }
    946                
    947                
    948                return res;
   \                     ??GetSpecialBinarVar_9:
   \   00000138   2000               MOVS     R0,R4
   \   0000013A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000013C   000E               LSRS     R0,R0,#+24
   \   0000013E   00E0               B        ??GetSpecialBinarVar_2
    949             }
    950             
    951             return 0;
   \                     ??GetSpecialBinarVar_7:
   \   00000140   0020               MOVS     R0,#+0
   \                     ??GetSpecialBinarVar_2:
   \   00000142   70BC               POP      {R4-R6}
   \   00000144   02BC               POP      {R1}
   \   00000146   0847               BX       R1               ;; return
   \                     ??GetSpecialBinarVar_1:
   \   00000148   26BC0000           DC32     0xbc26
   \   0000014C   ........           DC32     gProg
   \   00000150   2CBC0000           DC32     0xbc2c
   \   00000154   2ABC0000           DC32     0xbc2a
   \   00000158   2EBC0000           DC32     0xbc2e
   \   0000015C   24BC0000           DC32     0xbc24
   \   00000160   25BC0000           DC32     0xbc25
   \   00000164   A2030000           DC32     0x3a2
   \   00000168   ........           DC32     MainStage
   \   0000016C   ........           DC32     Variables
    952          }  
    953            
    954          
    955          
    956          
    957          

   \                                 In section Debug.txt, align 4, keep-with-next
    958          void SetSpecialBinarVar(char ZmSp, char Val, _Net *Net)
    959          {
   \                     SetSpecialBinarVar:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    960             char sc;
    961            
    962             if (ZmSp<ScreenNr)       //zmienne  termostatu  AutoOn
   \   00000002   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000004   000E               LSRS     R0,R0,#+24
   \   00000006   0828               CMP      R0,#+8
   \   00000008   19D2               BCS      ??SetSpecialBinarVar_0
    963             {
    964                 
    965                if (Val) gProg.Screen[ZmSp].Thermo.AutoOn=1; else gProg.Screen[ZmSp].Thermo.AutoOn=0;
   \   0000000A   6E4B               LDR      R3,??SetSpecialBinarVar_1  ;; 0xbc26
   \   0000000C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000E   000E               LSRS     R0,R0,#+24
   \   00000010   A024               MOVS     R4,#+160
   \   00000012   6043               MULS     R0,R4,R0
   \   00000014   6C4C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000016   2018               ADDS     R0,R4,R0
   \   00000018   0C00               MOVS     R4,R1
   \   0000001A   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   0000001C   240E               LSRS     R4,R4,#+24
   \   0000001E   641E               SUBS     R4,R4,#+1
   \   00000020   A441               SBCS     R4,R4,R4
   \   00000022   E443               MVNS     R4,R4
   \   00000024   E40F               LSRS     R4,R4,#+31
   \   00000026   C454               STRB     R4,[R0, R3]
    966                Net->Status.NextHttpOrder=HTTP_POST;
   \   00000028   1220               MOVS     R0,#+18
   \   0000002A   D070               STRB     R0,[R2, #+3]
    967                ThermostatsTimeChartExecute(); 
   \   0000002C   ........           BL       ThermostatsTimeChartExecute
    968                ThermostatsExecute();
   \   00000030   ........           BL       ThermostatsExecute
    969                MenuPaint();
   \   00000034   ........           BL       MenuPaint
    970                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   \   00000038   ........           BL       ExecuteSpecialThermVar
   \   0000003C   BEE0               B        ??SetSpecialBinarVar_2
    971                 
    972             }
    973             else if ((ZmSp>=10) && (ZmSp<10+ScreenNr))       //zmienne  termostatu Temp. zad w AutoOn
   \                     ??SetSpecialBinarVar_0:
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   0A28               CMP      R0,#+10
   \   00000044   5BD3               BCC      ??SetSpecialBinarVar_3
   \   00000046   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   1228               CMP      R0,#+18
   \   0000004C   57D2               BCS      ??SetSpecialBinarVar_3
    974             {
    975                sc=ZmSp-10;
   \   0000004E   0A38               SUBS     R0,R0,#+10
    976                char MaxTmp;
    977                char MinTmp;
    978                if (gProg.Screen[sc].Thermo.Temperature[0]>gProg.Screen[sc].Thermo.Temperature[1])
   \   00000050   5E4B               LDR      R3,??SetSpecialBinarVar_1+0x8  ;; 0xbc2c
   \   00000052   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000054   000E               LSRS     R0,R0,#+24
   \   00000056   A024               MOVS     R4,#+160
   \   00000058   4443               MULS     R4,R0,R4
   \   0000005A   5B4D               LDR      R5,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   0000005C   2C19               ADDS     R4,R5,R4
   \   0000005E   E35E               LDRSH    R3,[R4, R3]
   \   00000060   5B4C               LDR      R4,??SetSpecialBinarVar_1+0xC  ;; 0xbc2a
   \   00000062   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   A025               MOVS     R5,#+160
   \   00000068   4543               MULS     R5,R0,R5
   \   0000006A   574E               LDR      R6,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   0000006C   7519               ADDS     R5,R6,R5
   \   0000006E   2C5F               LDRSH    R4,[R5, R4]
   \   00000070   A342               CMP      R3,R4
   \   00000072   10DA               BGE      ??SetSpecialBinarVar_4
    979                {
    980                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[0]; 
   \   00000074   564B               LDR      R3,??SetSpecialBinarVar_1+0xC  ;; 0xbc2a
   \   00000076   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000078   000E               LSRS     R0,R0,#+24
   \   0000007A   A024               MOVS     R4,#+160
   \   0000007C   4443               MULS     R4,R0,R4
   \   0000007E   524D               LDR      R5,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000080   2C19               ADDS     R4,R5,R4
   \   00000082   E35A               LDRH     R3,[R4, R3]
    981                  MinTmp=gProg.Screen[sc].Thermo.Temperature[1];
   \   00000084   514C               LDR      R4,??SetSpecialBinarVar_1+0x8  ;; 0xbc2c
   \   00000086   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   A025               MOVS     R5,#+160
   \   0000008C   4543               MULS     R5,R0,R5
   \   0000008E   4E4E               LDR      R6,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000090   7519               ADDS     R5,R6,R5
   \   00000092   2C5B               LDRH     R4,[R5, R4]
   \   00000094   0FE0               B        ??SetSpecialBinarVar_5
    982                }else{
    983                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[1];
   \                     ??SetSpecialBinarVar_4:
   \   00000096   4D4B               LDR      R3,??SetSpecialBinarVar_1+0x8  ;; 0xbc2c
   \   00000098   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   A024               MOVS     R4,#+160
   \   0000009E   4443               MULS     R4,R0,R4
   \   000000A0   494D               LDR      R5,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   000000A2   2C19               ADDS     R4,R5,R4
   \   000000A4   E35A               LDRH     R3,[R4, R3]
    984                  MinTmp=gProg.Screen[sc].Thermo.Temperature[0];
   \   000000A6   4A4C               LDR      R4,??SetSpecialBinarVar_1+0xC  ;; 0xbc2a
   \   000000A8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   A025               MOVS     R5,#+160
   \   000000AE   4543               MULS     R5,R0,R5
   \   000000B0   454E               LDR      R6,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   000000B2   7519               ADDS     R5,R6,R5
   \   000000B4   2C5B               LDRH     R4,[R5, R4]
    985                }
    986                
    987                if (Val)
   \                     ??SetSpecialBinarVar_5:
   \   000000B6   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000000B8   090E               LSRS     R1,R1,#+24
   \   000000BA   0029               CMP      R1,#+0
   \   000000BC   0AD0               BEQ      ??SetSpecialBinarVar_6
    988                {
    989                    gProg.Screen[sc].Thermo.SetTemperature=MaxTmp;
   \   000000BE   4549               LDR      R1,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   000000C0   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000C2   000E               LSRS     R0,R0,#+24
   \   000000C4   A024               MOVS     R4,#+160
   \   000000C6   6043               MULS     R0,R4,R0
   \   000000C8   3F4C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   000000CA   2018               ADDS     R0,R4,R0
   \   000000CC   1B06               LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
   \   000000CE   1B0E               LSRS     R3,R3,#+24
   \   000000D0   4352               STRH     R3,[R0, R1]
   \   000000D2   09E0               B        ??SetSpecialBinarVar_7
    990                }else{
    991                    gProg.Screen[sc].Thermo.SetTemperature=MinTmp; 
   \                     ??SetSpecialBinarVar_6:
   \   000000D4   3F49               LDR      R1,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   000000D6   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000D8   000E               LSRS     R0,R0,#+24
   \   000000DA   A023               MOVS     R3,#+160
   \   000000DC   5843               MULS     R0,R3,R0
   \   000000DE   3A4B               LDR      R3,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   000000E0   1818               ADDS     R0,R3,R0
   \   000000E2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000E4   240E               LSRS     R4,R4,#+24
   \   000000E6   4452               STRH     R4,[R0, R1]
    992                }
    993                Net->Status.NextHttpOrder=HTTP_POST;
   \                     ??SetSpecialBinarVar_7:
   \   000000E8   1220               MOVS     R0,#+18
   \   000000EA   D070               STRB     R0,[R2, #+3]
    994                ThermostatsTimeChartExecute(); 
   \   000000EC   ........           BL       ThermostatsTimeChartExecute
    995                ThermostatsExecute();
   \   000000F0   ........           BL       ThermostatsExecute
    996                MenuPaint();
   \   000000F4   ........           BL       MenuPaint
    997                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   \   000000F8   ........           BL       ExecuteSpecialThermVar
   \   000000FC   5EE0               B        ??SetSpecialBinarVar_2
    998             }else if ((ZmSp>=20) && (ZmSp<20+ScreenNr))       //zmienne  termostatu temp+ w trybie Auto
   \                     ??SetSpecialBinarVar_3:
   \   000000FE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000100   000E               LSRS     R0,R0,#+24
   \   00000102   1428               CMP      R0,#+20
   \   00000104   2CD3               BCC      ??SetSpecialBinarVar_8
   \   00000106   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000108   000E               LSRS     R0,R0,#+24
   \   0000010A   1C28               CMP      R0,#+28
   \   0000010C   28D2               BCS      ??SetSpecialBinarVar_8
    999             {
   1000                sc=ZmSp-20;
   \   0000010E   1438               SUBS     R0,R0,#+20
   1001                if ((gProg.Screen[sc].Thermo.SetTemperature)<500) {gProg.Screen[sc].Thermo.SetTemperature++;}
   \   00000110   3049               LDR      R1,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   00000112   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000114   000E               LSRS     R0,R0,#+24
   \   00000116   A023               MOVS     R3,#+160
   \   00000118   4343               MULS     R3,R0,R3
   \   0000011A   2B4C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   0000011C   E318               ADDS     R3,R4,R3
   \   0000011E   595E               LDRSH    R1,[R3, R1]
   \   00000120   FA23               MOVS     R3,#+250
   \   00000122   5B00               LSLS     R3,R3,#+1        ;; #+500
   \   00000124   9942               CMP      R1,R3
   \   00000126   10DA               BGE      ??SetSpecialBinarVar_9
   \   00000128   2A49               LDR      R1,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   0000012A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000012C   000E               LSRS     R0,R0,#+24
   \   0000012E   A023               MOVS     R3,#+160
   \   00000130   4343               MULS     R3,R0,R3
   \   00000132   254C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000134   E318               ADDS     R3,R4,R3
   \   00000136   274C               LDR      R4,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   00000138   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000013A   000E               LSRS     R0,R0,#+24
   \   0000013C   A025               MOVS     R5,#+160
   \   0000013E   6843               MULS     R0,R5,R0
   \   00000140   214D               LDR      R5,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000142   2818               ADDS     R0,R5,R0
   \   00000144   005F               LDRSH    R0,[R0, R4]
   \   00000146   401C               ADDS     R0,R0,#+1
   \   00000148   5852               STRH     R0,[R3, R1]
   1002                Net->Status.NextHttpOrder=HTTP_POST;
   \                     ??SetSpecialBinarVar_9:
   \   0000014A   1220               MOVS     R0,#+18
   \   0000014C   D070               STRB     R0,[R2, #+3]
   1003                ThermostatsTimeChartExecute(); 
   \   0000014E   ........           BL       ThermostatsTimeChartExecute
   1004                ThermostatsExecute();
   \   00000152   ........           BL       ThermostatsExecute
   1005                MenuPaint();
   \   00000156   ........           BL       MenuPaint
   1006                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   \   0000015A   ........           BL       ExecuteSpecialThermVar
   \   0000015E   2DE0               B        ??SetSpecialBinarVar_2
   1007             }else if ((ZmSp>=30) && (ZmSp<30+ScreenNr))       //zmienne  termostatu temp+ w trybie Auto
   \                     ??SetSpecialBinarVar_8:
   \   00000160   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000162   000E               LSRS     R0,R0,#+24
   \   00000164   1E28               CMP      R0,#+30
   \   00000166   29D3               BCC      ??SetSpecialBinarVar_2
   \   00000168   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000016A   000E               LSRS     R0,R0,#+24
   \   0000016C   2628               CMP      R0,#+38
   \   0000016E   25D2               BCS      ??SetSpecialBinarVar_2
   1008             {
   1009                sc=ZmSp-30;
   \   00000170   1E38               SUBS     R0,R0,#+30
   1010                if ((gProg.Screen[sc].Thermo.SetTemperature)>0) {gProg.Screen[sc].Thermo.SetTemperature--;}
   \   00000172   1849               LDR      R1,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   00000174   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000176   000E               LSRS     R0,R0,#+24
   \   00000178   A023               MOVS     R3,#+160
   \   0000017A   4343               MULS     R3,R0,R3
   \   0000017C   124C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   0000017E   E318               ADDS     R3,R4,R3
   \   00000180   595E               LDRSH    R1,[R3, R1]
   \   00000182   0129               CMP      R1,#+1
   \   00000184   10DB               BLT      ??SetSpecialBinarVar_10
   \   00000186   1349               LDR      R1,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   00000188   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000018A   000E               LSRS     R0,R0,#+24
   \   0000018C   A023               MOVS     R3,#+160
   \   0000018E   4343               MULS     R3,R0,R3
   \   00000190   0D4C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000192   E318               ADDS     R3,R4,R3
   \   00000194   0F4C               LDR      R4,??SetSpecialBinarVar_1+0x10  ;; 0xbc2e
   \   00000196   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000198   000E               LSRS     R0,R0,#+24
   \   0000019A   A025               MOVS     R5,#+160
   \   0000019C   6843               MULS     R0,R5,R0
   \   0000019E   0A4D               LDR      R5,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   000001A0   2818               ADDS     R0,R5,R0
   \   000001A2   005F               LDRSH    R0,[R0, R4]
   \   000001A4   401E               SUBS     R0,R0,#+1
   \   000001A6   5852               STRH     R0,[R3, R1]
   1011                Net->Status.NextHttpOrder=HTTP_POST;
   \                     ??SetSpecialBinarVar_10:
   \   000001A8   1220               MOVS     R0,#+18
   \   000001AA   D070               STRB     R0,[R2, #+3]
   1012                ThermostatsTimeChartExecute(); 
   \   000001AC   ........           BL       ThermostatsTimeChartExecute
   1013                ThermostatsExecute();
   \   000001B0   ........           BL       ThermostatsExecute
   1014                MenuPaint();
   \   000001B4   ........           BL       MenuPaint
   1015                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   \   000001B8   ........           BL       ExecuteSpecialThermVar
   1016             }
   1017          
   1018          }  
   \                     ??SetSpecialBinarVar_2:
   \   000001BC   70BC               POP      {R4-R6}
   \   000001BE   01BC               POP      {R0}
   \   000001C0   0047               BX       R0               ;; return
   \   000001C2   C046               Nop      
   \                     ??SetSpecialBinarVar_1:
   \   000001C4   26BC0000           DC32     0xbc26
   \   000001C8   ........           DC32     gProg
   \   000001CC   2CBC0000           DC32     0xbc2c
   \   000001D0   2ABC0000           DC32     0xbc2a
   \   000001D4   2EBC0000           DC32     0xbc2e
   1019            
   1020          
   1021          
   1022          //Funkcja wys³ania zadania HTTP

   \                                 In section Debug.txt, align 4, keep-with-next
   1023          void HTTP_Query(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
   1024          {
   \                     HTTP_Query:
   \   00000000   FDB5               PUSH     {R0,R2-R7,LR}
   \   00000002   88B0               SUB      SP,SP,#+32
   \   00000004   0C00               MOVS     R4,R1
   1025          
   1026                          
   1027                     //wysy³anie danych ------------------------------------
   1028                     
   1029                     short BTS=0;
   \   00000006   0025               MOVS     R5,#+0
   1030                     for (short i=0; i<sizeof(Buff_TX); i++) Buff_TX[i]=0;
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   04E0               B        ??HTTP_Query_0
   \                     ??HTTP_Query_1:
   \   0000000C   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000000E   0014               ASRS     R0,R0,#+16
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   2154               STRB     R1,[R4, R0]
   \   00000014   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_Query_0:
   \   00000016   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000018   000C               LSRS     R0,R0,#+16
   \   0000001A   0428               CMP      R0,#+4
   \   0000001C   F6D3               BCC      ??HTTP_Query_1
   1031                     Buff_TX[BTS++]=0x1B;
   \   0000001E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000020   2D14               ASRS     R5,R5,#+16
   \   00000022   1B20               MOVS     R0,#+27
   \   00000024   6055               STRB     R0,[R4, R5]
   \   00000026   6D1C               ADDS     R5,R5,#+1
   1032                     Buff_TX[BTS++]='S';
   \   00000028   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000002A   2D14               ASRS     R5,R5,#+16
   \   0000002C   5320               MOVS     R0,#+83
   \   0000002E   6055               STRB     R0,[R4, R5]
   \   00000030   6D1C               ADDS     R5,R5,#+1
   1033                     Buff_TX[BTS++]=Net->Status.HostChannel;     //numer kana³u [przydzielony przez serwer
   \   00000032   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000034   2D14               ASRS     R5,R5,#+16
   \   00000036   0A98               LDR      R0,[SP, #+40]
   \   00000038   807D               LDRB     R0,[R0, #+22]
   \   0000003A   6055               STRB     R0,[R4, R5]
   \   0000003C   6D1C               ADDS     R5,R5,#+1
   1034                     
   1035                                               
   1036                     char Send=0; 
   \   0000003E   0026               MOVS     R6,#+0
   1037                     char txt[16]; 
   1038                     //czyszczenie bufora nadawczego
   1039                     char *PozIlByte;
   1040                     switch (Net->Status.CurrentOrder)     
   \   00000040   0A98               LDR      R0,[SP, #+40]
   \   00000042   8078               LDRB     R0,[R0, #+2]
   \   00000044   1228               CMP      R0,#+18
   \   00000046   00D1               BNE      .+4
   \   00000048   99E0               B        ??HTTP_Query_2
   \   0000004A   1328               CMP      R0,#+19
   \   0000004C   4DD0               BEQ      ??HTTP_Query_3
   \   0000004E   1428               CMP      R0,#+20
   \   00000050   01D0               BEQ      .+6
   \   00000052   00F0A8FD           BL       ??HTTP_Query_4
   1041                     {
   1042                        case HTTP_GET_Config:              //proba o podanie konfiguracji zestawu zmiennych
   1043                              strcat(Buff_TX,"GET ");
   \                     ??HTTP_Query_5:
   \   00000056   E449               LDR      R1,??HTTP_Query_6  ;; `?<Constant "GET ">`
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   ........           BL       strcat
   1044                              strcat(Buff_TX,Net->WiFi.Path);
   \   0000005E   0A99               LDR      R1,[SP, #+40]
   \   00000060   DB31               ADDS     R1,R1,#+219
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       strcat
   1045                              strcat(Buff_TX,"/dc");
   \   00000068   E0A1               ADR      R1,??HTTP_Query_6+0x4  ;; "/dc"
   \   0000006A   2000               MOVS     R0,R4
   \   0000006C   ........           BL       strcat
   1046                              sprintf(txt, "%d",RF_Status.RF_ID_R);
                                     ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000070   DF48               LDR      R0,??HTTP_Query_6+0x8  ;; RF_Status + 28
   \   00000072   0268               LDR      R2,[R0, #+0]
   \   00000074   DFA1               ADR      R1,??HTTP_Query_6+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   00000076   03A8               ADD      R0,SP,#+12
   \   00000078   ........           BL       sprintf
   1047                              strcat(Buff_TX,txt);
   \   0000007C   03A9               ADD      R1,SP,#+12
   \   0000007E   2000               MOVS     R0,R4
   \   00000080   ........           BL       strcat
   1048                              strcat(Buff_TX,".csv HTTP/1.1\r\n");
   \   00000084   DC49               LDR      R1,??HTTP_Query_6+0x10  ;; `?<Constant ".csv HTTP/1.1\\r\\n">`
   \   00000086   2000               MOVS     R0,R4
   \   00000088   ........           BL       strcat
   1049                              strcat(Buff_TX,"User-Agent: CEURON\r\nHost: ");
   \   0000008C   DB49               LDR      R1,??HTTP_Query_6+0x14  ;; `?<Constant "User-Agent: CEURON\\r\\nH...">`
   \   0000008E   2000               MOVS     R0,R4
   \   00000090   ........           BL       strcat
   1050                              if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) {strcat(Buff_TX,Net->WiFi.Subdomena); strcat(Buff_TX,".");}
   \   00000094   0A98               LDR      R0,[SP, #+40]
   \   00000096   CC30               ADDS     R0,R0,#+204
   \   00000098   0078               LDRB     R0,[R0, #+0]
   \   0000009A   3028               CMP      R0,#+48
   \   0000009C   0DD3               BCC      ??HTTP_Query_7
   \   0000009E   0A98               LDR      R0,[SP, #+40]
   \   000000A0   CC30               ADDS     R0,R0,#+204
   \   000000A2   0078               LDRB     R0,[R0, #+0]
   \   000000A4   7B28               CMP      R0,#+123
   \   000000A6   08D2               BCS      ??HTTP_Query_7
   \   000000A8   0A99               LDR      R1,[SP, #+40]
   \   000000AA   CC31               ADDS     R1,R1,#+204
   \   000000AC   2000               MOVS     R0,R4
   \   000000AE   ........           BL       strcat
   \   000000B2   D3A1               ADR      R1,??HTTP_Query_6+0x18  ;; 0x2E, 0x00, 0x00, 0x00
   \   000000B4   2000               MOVS     R0,R4
   \   000000B6   ........           BL       strcat
   1051                              strcat(Buff_TX,Net->WiFi.Domena);
   \                     ??HTTP_Query_7:
   \   000000BA   0A99               LDR      R1,[SP, #+40]
   \   000000BC   BD31               ADDS     R1,R1,#+189
   \   000000BE   2000               MOVS     R0,R4
   \   000000C0   ........           BL       strcat
   1052                              strcat(Buff_TX,"\r\n");
   \   000000C4   CFA1               ADR      R1,??HTTP_Query_6+0x1C  ;; 0x0D, 0x0A, 0x00, 0x00
   \   000000C6   2000               MOVS     R0,R4
   \   000000C8   ........           BL       strcat
   1053                              strcat(Buff_TX,"Connection: keep-alive\r\n");
   \   000000CC   CE49               LDR      R1,??HTTP_Query_6+0x20  ;; `?<Constant "Connection: keep-alive\\r\\n">`
   \   000000CE   2000               MOVS     R0,R4
   \   000000D0   ........           BL       strcat
   1054                              strcat(Buff_TX,"\r\n\r\n");
   \   000000D4   CD49               LDR      R1,??HTTP_Query_6+0x24  ;; `?<Constant "\\r\\n\\r\\n">`
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   ........           BL       strcat
   1055                              BTS=strlen(Buff_TX);
   \   000000DC   2000               MOVS     R0,R4
   \   000000DE   ........           BL       strlen
   \   000000E2   0500               MOVS     R5,R0
   1056                              Send=1;
   \   000000E4   0126               MOVS     R6,#+1
   \   000000E6   00F05EFD           BL       ??HTTP_Query_4
   1057          
   1058                        break; 
   1059                        
   1060                        case HTTP_GET:              //proba o podanie konfiguracji zestawu zmiennych
   1061                              strcat(Buff_TX,"GET ");
   \                     ??HTTP_Query_3:
   \   000000EA   BF49               LDR      R1,??HTTP_Query_6  ;; `?<Constant "GET ">`
   \   000000EC   2000               MOVS     R0,R4
   \   000000EE   ........           BL       strcat
   1062                              strcat(Buff_TX,Net->WiFi.Path);
   \   000000F2   0A99               LDR      R1,[SP, #+40]
   \   000000F4   DB31               ADDS     R1,R1,#+219
   \   000000F6   2000               MOVS     R0,R4
   \   000000F8   ........           BL       strcat
   1063                              strcat(Buff_TX,"/do");
   \   000000FC   C4A1               ADR      R1,??HTTP_Query_6+0x28  ;; "/do"
   \   000000FE   2000               MOVS     R0,R4
   \   00000100   ........           BL       strcat
   1064                              sprintf(txt, "%d",RF_Status.RF_ID_R);
   \   00000104   BA48               LDR      R0,??HTTP_Query_6+0x8  ;; RF_Status + 28
   \   00000106   0268               LDR      R2,[R0, #+0]
   \   00000108   BAA1               ADR      R1,??HTTP_Query_6+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   0000010A   03A8               ADD      R0,SP,#+12
   \   0000010C   ........           BL       sprintf
   1065                              strcat(Buff_TX,txt);
   \   00000110   03A9               ADD      R1,SP,#+12
   \   00000112   2000               MOVS     R0,R4
   \   00000114   ........           BL       strcat
   1066                              strcat(Buff_TX,".csv HTTP/1.1\r\n");
   \   00000118   B749               LDR      R1,??HTTP_Query_6+0x10  ;; `?<Constant ".csv HTTP/1.1\\r\\n">`
   \   0000011A   2000               MOVS     R0,R4
   \   0000011C   ........           BL       strcat
   1067                              strcat(Buff_TX,"User-Agent: CEURON\r\nHost: ");
   \   00000120   B649               LDR      R1,??HTTP_Query_6+0x14  ;; `?<Constant "User-Agent: CEURON\\r\\nH...">`
   \   00000122   2000               MOVS     R0,R4
   \   00000124   ........           BL       strcat
   1068                              if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) {strcat(Buff_TX,Net->WiFi.Subdomena); strcat(Buff_TX,".");}
   \   00000128   0A98               LDR      R0,[SP, #+40]
   \   0000012A   CC30               ADDS     R0,R0,#+204
   \   0000012C   0078               LDRB     R0,[R0, #+0]
   \   0000012E   3028               CMP      R0,#+48
   \   00000130   0DD3               BCC      ??HTTP_Query_8
   \   00000132   0A98               LDR      R0,[SP, #+40]
   \   00000134   CC30               ADDS     R0,R0,#+204
   \   00000136   0078               LDRB     R0,[R0, #+0]
   \   00000138   7B28               CMP      R0,#+123
   \   0000013A   08D2               BCS      ??HTTP_Query_8
   \   0000013C   0A99               LDR      R1,[SP, #+40]
   \   0000013E   CC31               ADDS     R1,R1,#+204
   \   00000140   2000               MOVS     R0,R4
   \   00000142   ........           BL       strcat
   \   00000146   AEA1               ADR      R1,??HTTP_Query_6+0x18  ;; 0x2E, 0x00, 0x00, 0x00
   \   00000148   2000               MOVS     R0,R4
   \   0000014A   ........           BL       strcat
   1069                              strcat(Buff_TX,Net->WiFi.Domena);
   \                     ??HTTP_Query_8:
   \   0000014E   0A99               LDR      R1,[SP, #+40]
   \   00000150   BD31               ADDS     R1,R1,#+189
   \   00000152   2000               MOVS     R0,R4
   \   00000154   ........           BL       strcat
   1070                              strcat(Buff_TX,"\r\n");
   \   00000158   AAA1               ADR      R1,??HTTP_Query_6+0x1C  ;; 0x0D, 0x0A, 0x00, 0x00
   \   0000015A   2000               MOVS     R0,R4
   \   0000015C   ........           BL       strcat
   1071                              strcat(Buff_TX,"Connection: keep-alive\r\n");
   \   00000160   A949               LDR      R1,??HTTP_Query_6+0x20  ;; `?<Constant "Connection: keep-alive\\r\\n">`
   \   00000162   2000               MOVS     R0,R4
   \   00000164   ........           BL       strcat
   1072                              strcat(Buff_TX,"\r\n\r\n");
   \   00000168   A849               LDR      R1,??HTTP_Query_6+0x24  ;; `?<Constant "\\r\\n\\r\\n">`
   \   0000016A   2000               MOVS     R0,R4
   \   0000016C   ........           BL       strcat
   1073                              BTS=strlen(Buff_TX);
   \   00000170   2000               MOVS     R0,R4
   \   00000172   ........           BL       strlen
   \   00000176   0500               MOVS     R5,R0
   1074                               Send=1;
   \   00000178   0126               MOVS     R6,#+1
   \   0000017A   00F014FD           BL       ??HTTP_Query_4
   1075                              
   1076                              
   1077                        break; 
   1078                        
   1079                        case HTTP_POST:                   //wys³anie zmiennych
   1080                              
   1081                              //obliczenie max iloci wysy³anych danych
   1082                              //151B(Nag³ówek i stopka) + 45B(Path,Subdomena,Domena) + 40(10B x VAR_SET_AMOUNT lub 7B x VAR_SET_AMOUNT dla dwustanów)  = max 596B. Przy samych dwustanach 476B
   1083                              strcat(Buff_TX,"POST ");
   \                     ??HTTP_Query_2:
   \   0000017E   A549               LDR      R1,??HTTP_Query_6+0x2C  ;; `?<Constant "POST ">`
   \   00000180   2000               MOVS     R0,R4
   \   00000182   ........           BL       strcat
   1084                              strcat(Buff_TX,Net->WiFi.Path);
   \   00000186   0A99               LDR      R1,[SP, #+40]
   \   00000188   DB31               ADDS     R1,R1,#+219
   \   0000018A   2000               MOVS     R0,R4
   \   0000018C   ........           BL       strcat
   1085                              strcat(Buff_TX,"/putgate.php HTTP/1.1\r\nUser-Agent: CEURON\r\nHost: ");
   \   00000190   A149               LDR      R1,??HTTP_Query_6+0x30  ;; `?<Constant "/putgate.php HTTP/1.1...">`
   \   00000192   2000               MOVS     R0,R4
   \   00000194   ........           BL       strcat
   1086                              if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) {strcat(Buff_TX,Net->WiFi.Subdomena); strcat(Buff_TX,".");}
   \   00000198   0A98               LDR      R0,[SP, #+40]
   \   0000019A   CC30               ADDS     R0,R0,#+204
   \   0000019C   0078               LDRB     R0,[R0, #+0]
   \   0000019E   3028               CMP      R0,#+48
   \   000001A0   0DD3               BCC      ??HTTP_Query_9
   \   000001A2   0A98               LDR      R0,[SP, #+40]
   \   000001A4   CC30               ADDS     R0,R0,#+204
   \   000001A6   0078               LDRB     R0,[R0, #+0]
   \   000001A8   7B28               CMP      R0,#+123
   \   000001AA   08D2               BCS      ??HTTP_Query_9
   \   000001AC   0A99               LDR      R1,[SP, #+40]
   \   000001AE   CC31               ADDS     R1,R1,#+204
   \   000001B0   2000               MOVS     R0,R4
   \   000001B2   ........           BL       strcat
   \   000001B6   92A1               ADR      R1,??HTTP_Query_6+0x18  ;; 0x2E, 0x00, 0x00, 0x00
   \   000001B8   2000               MOVS     R0,R4
   \   000001BA   ........           BL       strcat
   1087                              strcat(Buff_TX,Net->WiFi.Domena);
   \                     ??HTTP_Query_9:
   \   000001BE   0A99               LDR      R1,[SP, #+40]
   \   000001C0   BD31               ADDS     R1,R1,#+189
   \   000001C2   2000               MOVS     R0,R4
   \   000001C4   ........           BL       strcat
   1088                              strcat(Buff_TX,"\r\nContent-Length: ");
   \   000001C8   9449               LDR      R1,??HTTP_Query_6+0x34  ;; `?<Constant "\\r\\nContent-Length: ">`
   \   000001CA   2000               MOVS     R0,R4
   \   000001CC   ........           BL       strcat
   1089                              char PozLength=strlen(Buff_TX);
   \   000001D0   2000               MOVS     R0,R4
   \   000001D2   ........           BL       strlen
   \   000001D6   6946               MOV      R1,SP
   \   000001D8   0870               STRB     R0,[R1, #+0]
   1090                      
   1091                              strcat(Buff_TX,"   ");
   \   000001DA   91A1               ADR      R1,??HTTP_Query_6+0x38  ;; "   "
   \   000001DC   2000               MOVS     R0,R4
   \   000001DE   ........           BL       strcat
   1092                              strcat(Buff_TX,"\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\nNodeID=");
   \   000001E2   9049               LDR      R1,??HTTP_Query_6+0x3C  ;; `?<Constant "\\r\\nContent-Type: appli...">`
   \   000001E4   2000               MOVS     R0,R4
   \   000001E6   ........           BL       strcat
   1093                              int NAG=strlen(Buff_TX)-7;
   \   000001EA   2000               MOVS     R0,R4
   \   000001EC   ........           BL       strlen
   \   000001F0   C01F               SUBS     R0,R0,#+7
   \   000001F2   0190               STR      R0,[SP, #+4]
   1094                              sprintf(txt, "%d",RF_Status.RF_ID_R);
   \   000001F4   7E48               LDR      R0,??HTTP_Query_6+0x8  ;; RF_Status + 28
   \   000001F6   0268               LDR      R2,[R0, #+0]
   \   000001F8   7EA1               ADR      R1,??HTTP_Query_6+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   000001FA   03A8               ADD      R0,SP,#+12
   \   000001FC   ........           BL       sprintf
   1095                              strcat(Buff_TX,txt);
   \   00000200   03A9               ADD      R1,SP,#+12
   \   00000202   2000               MOVS     R0,R4
   \   00000204   ........           BL       strcat
   1096                              
   1097                              strcat(Buff_TX,"&Order=1&Content=;\r\n");
   \   00000208   8749               LDR      R1,??HTTP_Query_6+0x40  ;; `?<Constant "&Order=1&Content=;\\r\\n">`
   \   0000020A   2000               MOVS     R0,R4
   \   0000020C   ........           BL       strcat
   1098                              BTS=strlen(Buff_TX);
   \   00000210   2000               MOVS     R0,R4
   \   00000212   ........           BL       strlen
   \   00000216   0500               MOVS     R5,R0
   1099                              //oko³o 179 byte do tej pory
   1100                              short ContentLength=34;
   \   00000218   2227               MOVS     R7,#+34
   1101                              char ilLit=0;
   \   0000021A   0020               MOVS     R0,#+0
   1102                              
   1103                              for (char VSN=0; VSN<Net->HTTP.VarSetCount; VSN++)
   \   0000021C   0026               MOVS     R6,#+0
   \   0000021E   15E0               B        ??HTTP_Query_10
   1104                              {
   1105                                switch (Net->HTTP.NetNodeSet[VSN].NetDataType)
   1106                                {
   1107                                  case 'a':  //jezeli zmienna analogowa
   1108                                        
   1109                                        Buff_TX[BTS++]='a';
   1110                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   1111                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   1112                                        Buff_TX[BTS++]=';';
   1113                                        
   1114                                        if (VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr]==(signed short)0x8000)
   1115                                        {
   1116                                           Buff_TX[BTS++]='B';
   1117                                           Buff_TX[BTS++]='A';
   1118                                           Buff_TX[BTS++]='T';
   1119                                        }else{  
   1120                                         
   1121                                          if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])>999)
   1122                                          {
   1123                                            Buff_TX[BTS++]='>';
   1124                                            Buff_TX[BTS++]='M';
   1125                                            Buff_TX[BTS++]='A';
   1126                                            Buff_TX[BTS++]='X';
   1127                                          }
   1128                                          else if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])<-999)
   1129                                          {
   1130                                            Buff_TX[BTS++]='-';
   1131                                            Buff_TX[BTS++]='M';
   1132                                            Buff_TX[BTS++]='I';
   1133                                            Buff_TX[BTS++]='N';
   1134                                          }else{
   1135                                            ilLit=sIntToStr(VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr],&Buff_TX[BTS]);
   1136                                            BTS+=ilLit;
   1137             
   1138                                          for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   1139                                          }
   1140                                        }
   1141                                        
   1142                                        Buff_TX[BTS++]=0xd;
   1143                                        Buff_TX[BTS++]=0xa;
   1144                                        ContentLength+=10;
   1145                                          
   1146                                  break;
   1147                                  
   1148                                  case 'b':  //jezeli zmienna dwustanowa
   1149                                        Buff_TX[BTS++]='b';
   1150                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   1151                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   1152                                        Buff_TX[BTS++]=';';
   1153                                        Net->HTTP.NetNodeSet[VSN].Value=((Variables[Net->HTTP.NetNodeSet[VSN].VarNr/8]>>(Net->HTTP.NetNodeSet[VSN].VarNr%8))&0x1);
   1154                                        Buff_TX[BTS++]=Net->HTTP.NetNodeSet[VSN].Value+48;
   1155                                        Buff_TX[BTS++]=0xd;
   1156                                        Buff_TX[BTS++]=0xa;
   1157                                        ContentLength+=7;
   1158                                  break;
   1159                                  
   1160                                  case 'c':  //jezeli zmienna analogowa specjalna
   1161                                        
   1162                                        Buff_TX[BTS++]='c';
   1163                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   1164                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   1165                                        Buff_TX[BTS++]=';';
   1166                                        if (Net->HTTP.NetNodeSet[VSN].VarNr==99)   //je¿eli propa o podanie czsu
   1167                                        {
   1168                                          Buff_TX[BTS++]=(DateTime.Hour/10)+48;
   1169                                          Buff_TX[BTS++]=(DateTime.Hour%10)+48;
   1170                                          Buff_TX[BTS++]=':';
   1171                                          Buff_TX[BTS++]=(DateTime.Minute/10)+48;
   1172                                          Buff_TX[BTS++]=(DateTime.Minute%10)+48;
   1173                                          //for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   1174                                          Buff_TX[BTS++]=0xd;
   1175                                          Buff_TX[BTS++]=0xa;
   1176                                          ContentLength+=11;
   1177                                        }else{
   1178                                          ilLit=sIntToStr(GetSpecialAnalogVar(Net->HTTP.NetNodeSet[VSN].VarNr),&Buff_TX[BTS]);
   1179                                          BTS+=ilLit;
   1180                                          for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   1181                                          Buff_TX[BTS++]=0xd;
   1182                                          Buff_TX[BTS++]=0xa;
   1183                                          ContentLength+=10;
   1184                                        }
   1185                                  break;
   1186                                  
   1187                                   case 'd':  //jezeli zmienna dwustanowa specjalna
   1188                                    
   1189                                        Buff_TX[BTS++]='d';
   1190                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   1191                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   1192                                        Buff_TX[BTS++]=';';
   1193                                        Buff_TX[BTS++]=GetSpecialBinarVar(Net->HTTP.NetNodeSet[VSN].VarNr)+48;
   1194                                        Buff_TX[BTS++]=0xd;
   1195                                        Buff_TX[BTS++]=0xa;
   1196                                        Net->HTTP.NetNodeSet[VSN].Value=GetSpecialBinarVar(Net->HTTP.NetNodeSet[VSN].VarNr);
   1197                                          
   1198                                   
   1199                                        ContentLength+=7;
   1200                                  break;
   1201                                  
   1202                                  
   1203                                  case 'i':  //jezeli wejcie dwustanowe
   1204                                        Buff_TX[BTS++]='i';
   1205                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr/10)+48;
   1206                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr%10)+48;
   1207                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr/10)+48;
   1208                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr%10)+48;
   1209                                        Buff_TX[BTS++]=';';
   1210                                        Net->HTTP.NetNodeSet[VSN].Value=PortStageRead(MainStage.StageI[Net->HTTP.NetNodeSet[VSN].NodeNr].Port, Net->HTTP.NetNodeSet[VSN].PortNr); 
   1211                                        Buff_TX[BTS++]=Net->HTTP.NetNodeSet[VSN].Value+48;
   1212                                        Buff_TX[BTS++]=0xd;
   1213                                        Buff_TX[BTS++]=0xa;
   1214                                        ContentLength+=9;
   1215                                  break;
   1216                                  
   1217                                  case 'q':  //jezeli wejcie dwustanowe
   1218                                        Buff_TX[BTS++]='q';
   1219                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr/10)+48;
   1220                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr%10)+48;
   1221                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr/10)+48;
   1222                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr%10)+48;
   1223                                        Buff_TX[BTS++]=';';
   1224                                        Net->HTTP.NetNodeSet[VSN].Value=PortStageRead(MainStage.StageQ[Net->HTTP.NetNodeSet[VSN].NodeNr].Port, Net->HTTP.NetNodeSet[VSN].PortNr); 
   1225                                        Buff_TX[BTS++]=Net->HTTP.NetNodeSet[VSN].Value+48;
   1226                                        Buff_TX[BTS++]=0xd;
   1227                                        Buff_TX[BTS++]=0xa;
   1228                                        ContentLength+=9;
   1229                                  break;
   1230                                  
   1231                                  case 'r':  //jezeli rejestr wejciowy wêz³a
   1232                                        
   1233                                        Buff_TX[BTS++]='r';
   1234                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr/10)+48;
   1235                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr%10)+48;
   1236                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].RegNr/10)+48;
   1237                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].RegNr%10)+48;
   1238                                        Buff_TX[BTS++]=';';
   1239                                        
   1240                                        
   1241                                        if ((MainStage.StageI[Net->HTTP.NetNodeSet[VSN].NodeNr].Value[Net->HTTP.NetNodeSet[VSN].RegNr]==(signed short)0x8000) && (Net->HTTP.NetNodeSet[VSN].RegNr>0))
   1242                                        {
   1243                                           Buff_TX[BTS++]='B';
   1244                                           Buff_TX[BTS++]='A';
   1245                                           Buff_TX[BTS++]='T';
   1246                                        }else{  
   1247                                         
   1248                                          if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])>999)
   1249                                          {
   1250                                            Buff_TX[BTS++]='>';
   1251                                            Buff_TX[BTS++]='M';
   1252                                            Buff_TX[BTS++]='A';
   1253                                            Buff_TX[BTS++]='X';
   1254                                          }
   1255                                          else if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])<-999)
   1256                                          {
   1257                                            Buff_TX[BTS++]='-';
   1258                                            Buff_TX[BTS++]='M';
   1259                                            Buff_TX[BTS++]='I';
   1260                                            Buff_TX[BTS++]='N';
   1261                                          }else{
   1262                                            ilLit=sIntToStr(MainStage.StageI[Net->HTTP.NetNodeSet[VSN].NodeNr].Value[Net->HTTP.NetNodeSet[VSN].RegNr],&Buff_TX[BTS]);
   1263                                            BTS+=ilLit;
   1264             
   1265                                          for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   \                     ??HTTP_Query_11:
   \   00000220   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000222   2D14               ASRS     R5,R5,#+16
   \   00000224   2021               MOVS     R1,#+32
   \   00000226   6155               STRB     R1,[R4, R5]
   \   00000228   6D1C               ADDS     R5,R5,#+1
   \   0000022A   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_Query_12:
   \   0000022C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000022E   000E               LSRS     R0,R0,#+24
   \   00000230   0428               CMP      R0,#+4
   \   00000232   F5D3               BCC      ??HTTP_Query_11
   1266                                          }
   1267                                        }
   1268                                        
   1269                                        Buff_TX[BTS++]=0xd;
   \                     ??HTTP_Query_13:
   \   00000234   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000236   2D14               ASRS     R5,R5,#+16
   \   00000238   0D20               MOVS     R0,#+13
   \   0000023A   6055               STRB     R0,[R4, R5]
   \   0000023C   6D1C               ADDS     R5,R5,#+1
   1270                                        Buff_TX[BTS++]=0xa;
   \   0000023E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000240   2D14               ASRS     R5,R5,#+16
   \   00000242   0A20               MOVS     R0,#+10
   \   00000244   6055               STRB     R0,[R4, R5]
   \   00000246   6D1C               ADDS     R5,R5,#+1
   1271                                        ContentLength+=12;
   \   00000248   0C37               ADDS     R7,R7,#+12
   \                     ??HTTP_Query_14:
   \   0000024A   761C               ADDS     R6,R6,#+1
   \                     ??HTTP_Query_10:
   \   0000024C   0A98               LDR      R0,[SP, #+40]
   \   0000024E   F230               ADDS     R0,R0,#+242
   \   00000250   0078               LDRB     R0,[R0, #+0]
   \   00000252   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000254   360E               LSRS     R6,R6,#+24
   \   00000256   8642               CMP      R6,R0
   \   00000258   01D3               BCC      .+6
   \   0000025A   00F07BFC           BL       ??HTTP_Query_15
   \   0000025E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000260   360E               LSRS     R6,R6,#+24
   \   00000262   0520               MOVS     R0,#+5
   \   00000264   7043               MULS     R0,R6,R0
   \   00000266   0A99               LDR      R1,[SP, #+40]
   \   00000268   0818               ADDS     R0,R1,R0
   \   0000026A   F630               ADDS     R0,R0,#+246
   \   0000026C   0078               LDRB     R0,[R0, #+0]
   \   0000026E   6128               CMP      R0,#+97
   \   00000270   12D0               BEQ      ??HTTP_Query_16
   \   00000272   6228               CMP      R0,#+98
   \   00000274   00D1               BNE      .+4
   \   00000276   F5E0               B        ??HTTP_Query_17
   \   00000278   6328               CMP      R0,#+99
   \   0000027A   00D1               BNE      .+4
   \   0000027C   63E1               B        ??HTTP_Query_18
   \   0000027E   6428               CMP      R0,#+100
   \   00000280   00D1               BNE      .+4
   \   00000282   F8E1               B        ??HTTP_Query_19
   \   00000284   6928               CMP      R0,#+105
   \   00000286   00D1               BNE      .+4
   \   00000288   50E2               B        ??HTTP_Query_20
   \   0000028A   7128               CMP      R0,#+113
   \   0000028C   00D1               BNE      .+4
   \   0000028E   E3E2               B        ??HTTP_Query_21
   \   00000290   7228               CMP      R0,#+114
   \   00000292   00D1               BNE      .+4
   \   00000294   6DE3               B        ??HTTP_Query_22
   \   00000296   D8E7               B        ??HTTP_Query_14
   \                     ??HTTP_Query_16:
   \   00000298   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000029A   2D14               ASRS     R5,R5,#+16
   \   0000029C   6120               MOVS     R0,#+97
   \   0000029E   6055               STRB     R0,[R4, R5]
   \   000002A0   6D1C               ADDS     R5,R5,#+1
   \   000002A2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002A4   360E               LSRS     R6,R6,#+24
   \   000002A6   0520               MOVS     R0,#+5
   \   000002A8   7043               MULS     R0,R6,R0
   \   000002AA   0A99               LDR      R1,[SP, #+40]
   \   000002AC   0818               ADDS     R0,R1,R0
   \   000002AE   F730               ADDS     R0,R0,#+247
   \   000002B0   0078               LDRB     R0,[R0, #+0]
   \   000002B2   0A21               MOVS     R1,#+10
   \   000002B4   ........           BL       __aeabi_idivmod
   \   000002B8   3030               ADDS     R0,R0,#+48
   \   000002BA   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000002BC   2D14               ASRS     R5,R5,#+16
   \   000002BE   6055               STRB     R0,[R4, R5]
   \   000002C0   6D1C               ADDS     R5,R5,#+1
   \   000002C2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000002C4   2D14               ASRS     R5,R5,#+16
   \   000002C6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002C8   360E               LSRS     R6,R6,#+24
   \   000002CA   0520               MOVS     R0,#+5
   \   000002CC   7043               MULS     R0,R6,R0
   \   000002CE   0A99               LDR      R1,[SP, #+40]
   \   000002D0   0818               ADDS     R0,R1,R0
   \   000002D2   F730               ADDS     R0,R0,#+247
   \   000002D4   0078               LDRB     R0,[R0, #+0]
   \   000002D6   0A21               MOVS     R1,#+10
   \   000002D8   ........           BL       __aeabi_idivmod
   \   000002DC   3031               ADDS     R1,R1,#+48
   \   000002DE   6155               STRB     R1,[R4, R5]
   \   000002E0   6D1C               ADDS     R5,R5,#+1
   \   000002E2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000002E4   2D14               ASRS     R5,R5,#+16
   \   000002E6   3B20               MOVS     R0,#+59
   \   000002E8   6055               STRB     R0,[R4, R5]
   \   000002EA   6D1C               ADDS     R5,R5,#+1
   \   000002EC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000002EE   360E               LSRS     R6,R6,#+24
   \   000002F0   0520               MOVS     R0,#+5
   \   000002F2   7043               MULS     R0,R6,R0
   \   000002F4   0A99               LDR      R1,[SP, #+40]
   \   000002F6   0818               ADDS     R0,R1,R0
   \   000002F8   F730               ADDS     R0,R0,#+247
   \   000002FA   0078               LDRB     R0,[R0, #+0]
   \   000002FC   0221               MOVS     R1,#+2
   \   000002FE   4843               MULS     R0,R1,R0
   \   00000300   4A49               LDR      R1,??HTTP_Query_6+0x44  ;; VariablesAnal
   \   00000302   085E               LDRSH    R0,[R1, R0]
   \   00000304   4A49               LDR      R1,??HTTP_Query_6+0x48  ;; 0xffff8000
   \   00000306   8842               CMP      R0,R1
   \   00000308   0FD1               BNE      ??HTTP_Query_23
   \   0000030A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000030C   2D14               ASRS     R5,R5,#+16
   \   0000030E   4220               MOVS     R0,#+66
   \   00000310   6055               STRB     R0,[R4, R5]
   \   00000312   6D1C               ADDS     R5,R5,#+1
   \   00000314   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000316   2D14               ASRS     R5,R5,#+16
   \   00000318   4120               MOVS     R0,#+65
   \   0000031A   6055               STRB     R0,[R4, R5]
   \   0000031C   6D1C               ADDS     R5,R5,#+1
   \   0000031E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000320   2D14               ASRS     R5,R5,#+16
   \   00000322   5420               MOVS     R0,#+84
   \   00000324   6055               STRB     R0,[R4, R5]
   \   00000326   6D1C               ADDS     R5,R5,#+1
   \   00000328   90E0               B        ??HTTP_Query_24
   \                     ??HTTP_Query_23:
   \   0000032A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000032C   360E               LSRS     R6,R6,#+24
   \   0000032E   0520               MOVS     R0,#+5
   \   00000330   7043               MULS     R0,R6,R0
   \   00000332   0A99               LDR      R1,[SP, #+40]
   \   00000334   0818               ADDS     R0,R1,R0
   \   00000336   F730               ADDS     R0,R0,#+247
   \   00000338   0078               LDRB     R0,[R0, #+0]
   \   0000033A   0221               MOVS     R1,#+2
   \   0000033C   4843               MULS     R0,R1,R0
   \   0000033E   3B49               LDR      R1,??HTTP_Query_6+0x44  ;; VariablesAnal
   \   00000340   085E               LDRSH    R0,[R1, R0]
   \   00000342   FA21               MOVS     R1,#+250
   \   00000344   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   00000346   8842               CMP      R0,R1
   \   00000348   14DB               BLT      ??HTTP_Query_25
   \   0000034A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000034C   2D14               ASRS     R5,R5,#+16
   \   0000034E   3E20               MOVS     R0,#+62
   \   00000350   6055               STRB     R0,[R4, R5]
   \   00000352   6D1C               ADDS     R5,R5,#+1
   \   00000354   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000356   2D14               ASRS     R5,R5,#+16
   \   00000358   4D20               MOVS     R0,#+77
   \   0000035A   6055               STRB     R0,[R4, R5]
   \   0000035C   6D1C               ADDS     R5,R5,#+1
   \   0000035E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000360   2D14               ASRS     R5,R5,#+16
   \   00000362   4120               MOVS     R0,#+65
   \   00000364   6055               STRB     R0,[R4, R5]
   \   00000366   6D1C               ADDS     R5,R5,#+1
   \   00000368   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000036A   2D14               ASRS     R5,R5,#+16
   \   0000036C   5820               MOVS     R0,#+88
   \   0000036E   6055               STRB     R0,[R4, R5]
   \   00000370   6D1C               ADDS     R5,R5,#+1
   \   00000372   6BE0               B        ??HTTP_Query_24
   \                     ??HTTP_Query_25:
   \   00000374   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000376   360E               LSRS     R6,R6,#+24
   \   00000378   0520               MOVS     R0,#+5
   \   0000037A   7043               MULS     R0,R6,R0
   \   0000037C   0A99               LDR      R1,[SP, #+40]
   \   0000037E   0818               ADDS     R0,R1,R0
   \   00000380   F730               ADDS     R0,R0,#+247
   \   00000382   0078               LDRB     R0,[R0, #+0]
   \   00000384   0221               MOVS     R1,#+2
   \   00000386   4843               MULS     R0,R1,R0
   \   00000388   2849               LDR      R1,??HTTP_Query_6+0x44  ;; VariablesAnal
   \   0000038A   085E               LDRSH    R0,[R1, R0]
   \   0000038C   2949               LDR      R1,??HTTP_Query_6+0x4C  ;; 0xfffffc19
   \   0000038E   8842               CMP      R0,R1
   \   00000390   14DA               BGE      ??HTTP_Query_26
   \   00000392   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000394   2D14               ASRS     R5,R5,#+16
   \   00000396   2D20               MOVS     R0,#+45
   \   00000398   6055               STRB     R0,[R4, R5]
   \   0000039A   6D1C               ADDS     R5,R5,#+1
   \   0000039C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000039E   2D14               ASRS     R5,R5,#+16
   \   000003A0   4D20               MOVS     R0,#+77
   \   000003A2   6055               STRB     R0,[R4, R5]
   \   000003A4   6D1C               ADDS     R5,R5,#+1
   \   000003A6   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000003A8   2D14               ASRS     R5,R5,#+16
   \   000003AA   4920               MOVS     R0,#+73
   \   000003AC   6055               STRB     R0,[R4, R5]
   \   000003AE   6D1C               ADDS     R5,R5,#+1
   \   000003B0   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000003B2   2D14               ASRS     R5,R5,#+16
   \   000003B4   4E20               MOVS     R0,#+78
   \   000003B6   6055               STRB     R0,[R4, R5]
   \   000003B8   6D1C               ADDS     R5,R5,#+1
   \   000003BA   47E0               B        ??HTTP_Query_24
   \                     ??HTTP_Query_26:
   \   000003BC   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000003BE   2D14               ASRS     R5,R5,#+16
   \   000003C0   6119               ADDS     R1,R4,R5
   \   000003C2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003C4   360E               LSRS     R6,R6,#+24
   \   000003C6   0520               MOVS     R0,#+5
   \   000003C8   7043               MULS     R0,R6,R0
   \   000003CA   0A9A               LDR      R2,[SP, #+40]
   \   000003CC   1018               ADDS     R0,R2,R0
   \   000003CE   F730               ADDS     R0,R0,#+247
   \   000003D0   0078               LDRB     R0,[R0, #+0]
   \   000003D2   0222               MOVS     R2,#+2
   \   000003D4   5043               MULS     R0,R2,R0
   \   000003D6   154A               LDR      R2,??HTTP_Query_6+0x44  ;; VariablesAnal
   \   000003D8   105E               LDRSH    R0,[R2, R0]
   \   000003DA   ........           BL       sIntToStr
   \   000003DE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000003E0   000E               LSRS     R0,R0,#+24
   \   000003E2   2D18               ADDS     R5,R5,R0
   \   000003E4   2EE0               B        ??HTTP_Query_27
   \   000003E6   C046               Nop      
   \                     ??HTTP_Query_6:
   \   000003E8   ........           DC32     `?<Constant "GET ">`
   \   000003EC   2F646300           DC8      "/dc"
   \   000003F0   ........           DC32     RF_Status + 28
   \   000003F4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000003F8   ........           DC32     `?<Constant ".csv HTTP/1.1\\r\\n">`
   \   000003FC   ........           DC32     `?<Constant "User-Agent: CEURON\\r\\nH...">`
   \   00000400   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000404   0D0A0000           DC8      0x0D, 0x0A, 0x00, 0x00
   \   00000408   ........           DC32     `?<Constant "Connection: keep-alive\\r\\n">`
   \   0000040C   ........           DC32     `?<Constant "\\r\\n\\r\\n">`
   \   00000410   2F646F00           DC8      "/do"
   \   00000414   ........           DC32     `?<Constant "POST ">`
   \   00000418   ........           DC32     `?<Constant "/putgate.php HTTP/1.1...">`
   \   0000041C   ........           DC32     `?<Constant "\\r\\nContent-Length: ">`
   \   00000420   20202000           DC8      "   "
   \   00000424   ........           DC32     `?<Constant "\\r\\nContent-Type: appli...">`
   \   00000428   ........           DC32     `?<Constant "&Order=1&Content=;\\r\\n">`
   \   0000042C   ........           DC32     VariablesAnal
   \   00000430   0080FFFF           DC32     0xffff8000
   \   00000434   19FCFFFF           DC32     0xfffffc19
   \                     ??HTTP_Query_28:
   \   00000438   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000043A   2D14               ASRS     R5,R5,#+16
   \   0000043C   2021               MOVS     R1,#+32
   \   0000043E   6155               STRB     R1,[R4, R5]
   \   00000440   6D1C               ADDS     R5,R5,#+1
   \   00000442   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_Query_27:
   \   00000444   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000446   000E               LSRS     R0,R0,#+24
   \   00000448   0428               CMP      R0,#+4
   \   0000044A   F5D3               BCC      ??HTTP_Query_28
   \                     ??HTTP_Query_24:
   \   0000044C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000044E   2D14               ASRS     R5,R5,#+16
   \   00000450   0D20               MOVS     R0,#+13
   \   00000452   6055               STRB     R0,[R4, R5]
   \   00000454   6D1C               ADDS     R5,R5,#+1
   \   00000456   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000458   2D14               ASRS     R5,R5,#+16
   \   0000045A   0A20               MOVS     R0,#+10
   \   0000045C   6055               STRB     R0,[R4, R5]
   \   0000045E   6D1C               ADDS     R5,R5,#+1
   \   00000460   0A37               ADDS     R7,R7,#+10
   \   00000462   F2E6               B        ??HTTP_Query_14
   \                     ??HTTP_Query_17:
   \   00000464   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000466   2D14               ASRS     R5,R5,#+16
   \   00000468   6220               MOVS     R0,#+98
   \   0000046A   6055               STRB     R0,[R4, R5]
   \   0000046C   6D1C               ADDS     R5,R5,#+1
   \   0000046E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000470   360E               LSRS     R6,R6,#+24
   \   00000472   0520               MOVS     R0,#+5
   \   00000474   7043               MULS     R0,R6,R0
   \   00000476   0A99               LDR      R1,[SP, #+40]
   \   00000478   0818               ADDS     R0,R1,R0
   \   0000047A   F730               ADDS     R0,R0,#+247
   \   0000047C   0078               LDRB     R0,[R0, #+0]
   \   0000047E   0A21               MOVS     R1,#+10
   \   00000480   ........           BL       __aeabi_idivmod
   \   00000484   3030               ADDS     R0,R0,#+48
   \   00000486   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000488   2D14               ASRS     R5,R5,#+16
   \   0000048A   6055               STRB     R0,[R4, R5]
   \   0000048C   6D1C               ADDS     R5,R5,#+1
   \   0000048E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000490   2D14               ASRS     R5,R5,#+16
   \   00000492   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000494   360E               LSRS     R6,R6,#+24
   \   00000496   0520               MOVS     R0,#+5
   \   00000498   7043               MULS     R0,R6,R0
   \   0000049A   0A99               LDR      R1,[SP, #+40]
   \   0000049C   0818               ADDS     R0,R1,R0
   \   0000049E   F730               ADDS     R0,R0,#+247
   \   000004A0   0078               LDRB     R0,[R0, #+0]
   \   000004A2   0A21               MOVS     R1,#+10
   \   000004A4   ........           BL       __aeabi_idivmod
   \   000004A8   3031               ADDS     R1,R1,#+48
   \   000004AA   6155               STRB     R1,[R4, R5]
   \   000004AC   6D1C               ADDS     R5,R5,#+1
   \   000004AE   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000004B0   2D14               ASRS     R5,R5,#+16
   \   000004B2   3B20               MOVS     R0,#+59
   \   000004B4   6055               STRB     R0,[R4, R5]
   \   000004B6   6D1C               ADDS     R5,R5,#+1
   \   000004B8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004BA   360E               LSRS     R6,R6,#+24
   \   000004BC   0520               MOVS     R0,#+5
   \   000004BE   7043               MULS     R0,R6,R0
   \   000004C0   0A99               LDR      R1,[SP, #+40]
   \   000004C2   0818               ADDS     R0,R1,R0
   \   000004C4   F930               ADDS     R0,R0,#+249
   \   000004C6   01B5               PUSH     {R0,LR}
   \   000004C8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004CA   360E               LSRS     R6,R6,#+24
   \   000004CC   0520               MOVS     R0,#+5
   \   000004CE   7043               MULS     R0,R6,R0
   \   000004D0   0C99               LDR      R1,[SP, #+48]
   \   000004D2   0818               ADDS     R0,R1,R0
   \   000004D4   F730               ADDS     R0,R0,#+247
   \   000004D6   0078               LDRB     R0,[R0, #+0]
   \   000004D8   0821               MOVS     R1,#+8
   \   000004DA   ........           BL       __aeabi_idivmod
   \   000004DE   DA49               LDR      R1,??HTTP_Query_29  ;; Variables
   \   000004E0   085C               LDRB     R0,[R1, R0]
   \   000004E2   0190               STR      R0,[SP, #+4]
   \   000004E4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004E6   360E               LSRS     R6,R6,#+24
   \   000004E8   0520               MOVS     R0,#+5
   \   000004EA   7043               MULS     R0,R6,R0
   \   000004EC   0C99               LDR      R1,[SP, #+48]
   \   000004EE   0818               ADDS     R0,R1,R0
   \   000004F0   F730               ADDS     R0,R0,#+247
   \   000004F2   0078               LDRB     R0,[R0, #+0]
   \   000004F4   0821               MOVS     R1,#+8
   \   000004F6   ........           BL       __aeabi_idivmod
   \   000004FA   0198               LDR      R0,[SP, #+4]
   \   000004FC   0841               ASRS     R0,R0,R1
   \   000004FE   0121               MOVS     R1,#+1
   \   00000500   0140               ANDS     R1,R1,R0
   \   00000502   0098               LDR      R0,[SP, #0]
   \   00000504   02B0               ADD      SP,SP,#+8
   \   00000506   0170               STRB     R1,[R0, #+0]
   \   00000508   090A               LSRS     R1,R1,#+8
   \   0000050A   4170               STRB     R1,[R0, #+1]
   \   0000050C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000050E   2D14               ASRS     R5,R5,#+16
   \   00000510   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000512   360E               LSRS     R6,R6,#+24
   \   00000514   0520               MOVS     R0,#+5
   \   00000516   7043               MULS     R0,R6,R0
   \   00000518   0A99               LDR      R1,[SP, #+40]
   \   0000051A   0818               ADDS     R0,R1,R0
   \   0000051C   F930               ADDS     R0,R0,#+249
   \   0000051E   0278               LDRB     R2,[R0, #+0]
   \   00000520   4178               LDRB     R1,[R0, #+1]
   \   00000522   0906               LSLS     R1,R1,#+24       ;; SignExtS R1,R1,#+24,#+16
   \   00000524   0914               ASRS     R1,R1,#+16
   \   00000526   0A43               ORRS     R2,R2,R1
   \   00000528   3032               ADDS     R2,R2,#+48
   \   0000052A   6255               STRB     R2,[R4, R5]
   \   0000052C   6D1C               ADDS     R5,R5,#+1
   \   0000052E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000530   2D14               ASRS     R5,R5,#+16
   \   00000532   0D20               MOVS     R0,#+13
   \   00000534   6055               STRB     R0,[R4, R5]
   \   00000536   6D1C               ADDS     R5,R5,#+1
   \   00000538   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000053A   2D14               ASRS     R5,R5,#+16
   \   0000053C   0A20               MOVS     R0,#+10
   \   0000053E   6055               STRB     R0,[R4, R5]
   \   00000540   6D1C               ADDS     R5,R5,#+1
   \   00000542   FF1D               ADDS     R7,R7,#+7
   \   00000544   81E6               B        ??HTTP_Query_14
   \                     ??HTTP_Query_18:
   \   00000546   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000548   2D14               ASRS     R5,R5,#+16
   \   0000054A   6320               MOVS     R0,#+99
   \   0000054C   6055               STRB     R0,[R4, R5]
   \   0000054E   6D1C               ADDS     R5,R5,#+1
   \   00000550   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000552   360E               LSRS     R6,R6,#+24
   \   00000554   0520               MOVS     R0,#+5
   \   00000556   7043               MULS     R0,R6,R0
   \   00000558   0A99               LDR      R1,[SP, #+40]
   \   0000055A   0818               ADDS     R0,R1,R0
   \   0000055C   F730               ADDS     R0,R0,#+247
   \   0000055E   0078               LDRB     R0,[R0, #+0]
   \   00000560   0A21               MOVS     R1,#+10
   \   00000562   ........           BL       __aeabi_idivmod
   \   00000566   3030               ADDS     R0,R0,#+48
   \   00000568   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000056A   2D14               ASRS     R5,R5,#+16
   \   0000056C   6055               STRB     R0,[R4, R5]
   \   0000056E   6D1C               ADDS     R5,R5,#+1
   \   00000570   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000572   2D14               ASRS     R5,R5,#+16
   \   00000574   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000576   360E               LSRS     R6,R6,#+24
   \   00000578   0520               MOVS     R0,#+5
   \   0000057A   7043               MULS     R0,R6,R0
   \   0000057C   0A99               LDR      R1,[SP, #+40]
   \   0000057E   0818               ADDS     R0,R1,R0
   \   00000580   F730               ADDS     R0,R0,#+247
   \   00000582   0078               LDRB     R0,[R0, #+0]
   \   00000584   0A21               MOVS     R1,#+10
   \   00000586   ........           BL       __aeabi_idivmod
   \   0000058A   3031               ADDS     R1,R1,#+48
   \   0000058C   6155               STRB     R1,[R4, R5]
   \   0000058E   6D1C               ADDS     R5,R5,#+1
   \   00000590   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000592   2D14               ASRS     R5,R5,#+16
   \   00000594   3B20               MOVS     R0,#+59
   \   00000596   6055               STRB     R0,[R4, R5]
   \   00000598   6D1C               ADDS     R5,R5,#+1
   \   0000059A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000059C   360E               LSRS     R6,R6,#+24
   \   0000059E   0520               MOVS     R0,#+5
   \   000005A0   7043               MULS     R0,R6,R0
   \   000005A2   0A99               LDR      R1,[SP, #+40]
   \   000005A4   0818               ADDS     R0,R1,R0
   \   000005A6   F730               ADDS     R0,R0,#+247
   \   000005A8   0078               LDRB     R0,[R0, #+0]
   \   000005AA   6328               CMP      R0,#+99
   \   000005AC   38D1               BNE      ??HTTP_Query_30
   \   000005AE   A748               LDR      R0,??HTTP_Query_29+0x4  ;; DateTime + 3
   \   000005B0   0078               LDRB     R0,[R0, #+0]
   \   000005B2   0A21               MOVS     R1,#+10
   \   000005B4   ........           BL       __aeabi_idivmod
   \   000005B8   3030               ADDS     R0,R0,#+48
   \   000005BA   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000005BC   2D14               ASRS     R5,R5,#+16
   \   000005BE   6055               STRB     R0,[R4, R5]
   \   000005C0   6D1C               ADDS     R5,R5,#+1
   \   000005C2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000005C4   2D14               ASRS     R5,R5,#+16
   \   000005C6   A148               LDR      R0,??HTTP_Query_29+0x4  ;; DateTime + 3
   \   000005C8   0078               LDRB     R0,[R0, #+0]
   \   000005CA   0A21               MOVS     R1,#+10
   \   000005CC   ........           BL       __aeabi_idivmod
   \   000005D0   3031               ADDS     R1,R1,#+48
   \   000005D2   6155               STRB     R1,[R4, R5]
   \   000005D4   6D1C               ADDS     R5,R5,#+1
   \   000005D6   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000005D8   2D14               ASRS     R5,R5,#+16
   \   000005DA   3A20               MOVS     R0,#+58
   \   000005DC   6055               STRB     R0,[R4, R5]
   \   000005DE   6D1C               ADDS     R5,R5,#+1
   \   000005E0   9B48               LDR      R0,??HTTP_Query_29+0x8  ;; DateTime + 4
   \   000005E2   0078               LDRB     R0,[R0, #+0]
   \   000005E4   0A21               MOVS     R1,#+10
   \   000005E6   ........           BL       __aeabi_idivmod
   \   000005EA   3030               ADDS     R0,R0,#+48
   \   000005EC   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000005EE   2D14               ASRS     R5,R5,#+16
   \   000005F0   6055               STRB     R0,[R4, R5]
   \   000005F2   6D1C               ADDS     R5,R5,#+1
   \   000005F4   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000005F6   2D14               ASRS     R5,R5,#+16
   \   000005F8   9548               LDR      R0,??HTTP_Query_29+0x8  ;; DateTime + 4
   \   000005FA   0078               LDRB     R0,[R0, #+0]
   \   000005FC   0A21               MOVS     R1,#+10
   \   000005FE   ........           BL       __aeabi_idivmod
   \   00000602   3031               ADDS     R1,R1,#+48
   \   00000604   6155               STRB     R1,[R4, R5]
   \   00000606   6D1C               ADDS     R5,R5,#+1
   \   00000608   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000060A   2D14               ASRS     R5,R5,#+16
   \   0000060C   0D20               MOVS     R0,#+13
   \   0000060E   6055               STRB     R0,[R4, R5]
   \   00000610   6D1C               ADDS     R5,R5,#+1
   \   00000612   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000614   2D14               ASRS     R5,R5,#+16
   \   00000616   0A20               MOVS     R0,#+10
   \   00000618   6055               STRB     R0,[R4, R5]
   \   0000061A   6D1C               ADDS     R5,R5,#+1
   \   0000061C   0B37               ADDS     R7,R7,#+11
   \   0000061E   14E6               B        ??HTTP_Query_14
   \                     ??HTTP_Query_30:
   \   00000620   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000622   360E               LSRS     R6,R6,#+24
   \   00000624   0520               MOVS     R0,#+5
   \   00000626   7043               MULS     R0,R6,R0
   \   00000628   0A99               LDR      R1,[SP, #+40]
   \   0000062A   0818               ADDS     R0,R1,R0
   \   0000062C   F730               ADDS     R0,R0,#+247
   \   0000062E   0078               LDRB     R0,[R0, #+0]
   \   00000630   ........           BL       GetSpecialAnalogVar
   \   00000634   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000636   2D14               ASRS     R5,R5,#+16
   \   00000638   6119               ADDS     R1,R4,R5
   \   0000063A   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000063C   0014               ASRS     R0,R0,#+16
   \   0000063E   ........           BL       sIntToStr
   \   00000642   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000644   000E               LSRS     R0,R0,#+24
   \   00000646   2D18               ADDS     R5,R5,R0
   \   00000648   05E0               B        ??HTTP_Query_31
   \                     ??HTTP_Query_32:
   \   0000064A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000064C   2D14               ASRS     R5,R5,#+16
   \   0000064E   2021               MOVS     R1,#+32
   \   00000650   6155               STRB     R1,[R4, R5]
   \   00000652   6D1C               ADDS     R5,R5,#+1
   \   00000654   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_Query_31:
   \   00000656   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000658   000E               LSRS     R0,R0,#+24
   \   0000065A   0428               CMP      R0,#+4
   \   0000065C   F5D3               BCC      ??HTTP_Query_32
   \   0000065E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000660   2D14               ASRS     R5,R5,#+16
   \   00000662   0D20               MOVS     R0,#+13
   \   00000664   6055               STRB     R0,[R4, R5]
   \   00000666   6D1C               ADDS     R5,R5,#+1
   \   00000668   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000066A   2D14               ASRS     R5,R5,#+16
   \   0000066C   0A20               MOVS     R0,#+10
   \   0000066E   6055               STRB     R0,[R4, R5]
   \   00000670   6D1C               ADDS     R5,R5,#+1
   \   00000672   0A37               ADDS     R7,R7,#+10
   \   00000674   E9E5               B        ??HTTP_Query_14
   \                     ??HTTP_Query_19:
   \   00000676   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000678   2D14               ASRS     R5,R5,#+16
   \   0000067A   6420               MOVS     R0,#+100
   \   0000067C   6055               STRB     R0,[R4, R5]
   \   0000067E   6D1C               ADDS     R5,R5,#+1
   \   00000680   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000682   360E               LSRS     R6,R6,#+24
   \   00000684   0520               MOVS     R0,#+5
   \   00000686   7043               MULS     R0,R6,R0
   \   00000688   0A99               LDR      R1,[SP, #+40]
   \   0000068A   0818               ADDS     R0,R1,R0
   \   0000068C   F730               ADDS     R0,R0,#+247
   \   0000068E   0078               LDRB     R0,[R0, #+0]
   \   00000690   0A21               MOVS     R1,#+10
   \   00000692   ........           BL       __aeabi_idivmod
   \   00000696   3030               ADDS     R0,R0,#+48
   \   00000698   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000069A   2D14               ASRS     R5,R5,#+16
   \   0000069C   6055               STRB     R0,[R4, R5]
   \   0000069E   6D1C               ADDS     R5,R5,#+1
   \   000006A0   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000006A2   2D14               ASRS     R5,R5,#+16
   \   000006A4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000006A6   360E               LSRS     R6,R6,#+24
   \   000006A8   0520               MOVS     R0,#+5
   \   000006AA   7043               MULS     R0,R6,R0
   \   000006AC   0A99               LDR      R1,[SP, #+40]
   \   000006AE   0818               ADDS     R0,R1,R0
   \   000006B0   F730               ADDS     R0,R0,#+247
   \   000006B2   0078               LDRB     R0,[R0, #+0]
   \   000006B4   0A21               MOVS     R1,#+10
   \   000006B6   ........           BL       __aeabi_idivmod
   \   000006BA   3031               ADDS     R1,R1,#+48
   \   000006BC   6155               STRB     R1,[R4, R5]
   \   000006BE   6D1C               ADDS     R5,R5,#+1
   \   000006C0   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000006C2   2D14               ASRS     R5,R5,#+16
   \   000006C4   3B20               MOVS     R0,#+59
   \   000006C6   6055               STRB     R0,[R4, R5]
   \   000006C8   6D1C               ADDS     R5,R5,#+1
   \   000006CA   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000006CC   360E               LSRS     R6,R6,#+24
   \   000006CE   0520               MOVS     R0,#+5
   \   000006D0   7043               MULS     R0,R6,R0
   \   000006D2   0A99               LDR      R1,[SP, #+40]
   \   000006D4   0818               ADDS     R0,R1,R0
   \   000006D6   F730               ADDS     R0,R0,#+247
   \   000006D8   0078               LDRB     R0,[R0, #+0]
   \   000006DA   ........           BL       GetSpecialBinarVar
   \   000006DE   3030               ADDS     R0,R0,#+48
   \   000006E0   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000006E2   2D14               ASRS     R5,R5,#+16
   \   000006E4   6055               STRB     R0,[R4, R5]
   \   000006E6   6D1C               ADDS     R5,R5,#+1
   \   000006E8   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000006EA   2D14               ASRS     R5,R5,#+16
   \   000006EC   0D20               MOVS     R0,#+13
   \   000006EE   6055               STRB     R0,[R4, R5]
   \   000006F0   6D1C               ADDS     R5,R5,#+1
   \   000006F2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000006F4   2D14               ASRS     R5,R5,#+16
   \   000006F6   0A20               MOVS     R0,#+10
   \   000006F8   6055               STRB     R0,[R4, R5]
   \   000006FA   6D1C               ADDS     R5,R5,#+1
   \   000006FC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000006FE   360E               LSRS     R6,R6,#+24
   \   00000700   0520               MOVS     R0,#+5
   \   00000702   7043               MULS     R0,R6,R0
   \   00000704   0A99               LDR      R1,[SP, #+40]
   \   00000706   0818               ADDS     R0,R1,R0
   \   00000708   F730               ADDS     R0,R0,#+247
   \   0000070A   0078               LDRB     R0,[R0, #+0]
   \   0000070C   ........           BL       GetSpecialBinarVar
   \   00000710   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000712   360E               LSRS     R6,R6,#+24
   \   00000714   0521               MOVS     R1,#+5
   \   00000716   7143               MULS     R1,R6,R1
   \   00000718   0A9A               LDR      R2,[SP, #+40]
   \   0000071A   5118               ADDS     R1,R2,R1
   \   0000071C   F931               ADDS     R1,R1,#+249
   \   0000071E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000720   000E               LSRS     R0,R0,#+24
   \   00000722   0870               STRB     R0,[R1, #+0]
   \   00000724   000A               LSRS     R0,R0,#+8
   \   00000726   4870               STRB     R0,[R1, #+1]
   \   00000728   FF1D               ADDS     R7,R7,#+7
   \   0000072A   8EE5               B        ??HTTP_Query_14
   \                     ??HTTP_Query_20:
   \   0000072C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000072E   2D14               ASRS     R5,R5,#+16
   \   00000730   6920               MOVS     R0,#+105
   \   00000732   6055               STRB     R0,[R4, R5]
   \   00000734   6D1C               ADDS     R5,R5,#+1
   \   00000736   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000738   360E               LSRS     R6,R6,#+24
   \   0000073A   0520               MOVS     R0,#+5
   \   0000073C   7043               MULS     R0,R6,R0
   \   0000073E   0A99               LDR      R1,[SP, #+40]
   \   00000740   0818               ADDS     R0,R1,R0
   \   00000742   F730               ADDS     R0,R0,#+247
   \   00000744   0078               LDRB     R0,[R0, #+0]
   \   00000746   0A21               MOVS     R1,#+10
   \   00000748   ........           BL       __aeabi_idivmod
   \   0000074C   3030               ADDS     R0,R0,#+48
   \   0000074E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000750   2D14               ASRS     R5,R5,#+16
   \   00000752   6055               STRB     R0,[R4, R5]
   \   00000754   6D1C               ADDS     R5,R5,#+1
   \   00000756   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000758   2D14               ASRS     R5,R5,#+16
   \   0000075A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000075C   360E               LSRS     R6,R6,#+24
   \   0000075E   0520               MOVS     R0,#+5
   \   00000760   7043               MULS     R0,R6,R0
   \   00000762   0A99               LDR      R1,[SP, #+40]
   \   00000764   0818               ADDS     R0,R1,R0
   \   00000766   F730               ADDS     R0,R0,#+247
   \   00000768   0078               LDRB     R0,[R0, #+0]
   \   0000076A   0A21               MOVS     R1,#+10
   \   0000076C   ........           BL       __aeabi_idivmod
   \   00000770   3031               ADDS     R1,R1,#+48
   \   00000772   6155               STRB     R1,[R4, R5]
   \   00000774   6D1C               ADDS     R5,R5,#+1
   \   00000776   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000778   360E               LSRS     R6,R6,#+24
   \   0000077A   0520               MOVS     R0,#+5
   \   0000077C   7043               MULS     R0,R6,R0
   \   0000077E   0A99               LDR      R1,[SP, #+40]
   \   00000780   0818               ADDS     R0,R1,R0
   \   00000782   F830               ADDS     R0,R0,#+248
   \   00000784   0078               LDRB     R0,[R0, #+0]
   \   00000786   0A21               MOVS     R1,#+10
   \   00000788   ........           BL       __aeabi_idivmod
   \   0000078C   3030               ADDS     R0,R0,#+48
   \   0000078E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000790   2D14               ASRS     R5,R5,#+16
   \   00000792   6055               STRB     R0,[R4, R5]
   \   00000794   6D1C               ADDS     R5,R5,#+1
   \   00000796   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000798   2D14               ASRS     R5,R5,#+16
   \   0000079A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000079C   360E               LSRS     R6,R6,#+24
   \   0000079E   0520               MOVS     R0,#+5
   \   000007A0   7043               MULS     R0,R6,R0
   \   000007A2   0A99               LDR      R1,[SP, #+40]
   \   000007A4   0818               ADDS     R0,R1,R0
   \   000007A6   F830               ADDS     R0,R0,#+248
   \   000007A8   0078               LDRB     R0,[R0, #+0]
   \   000007AA   0A21               MOVS     R1,#+10
   \   000007AC   ........           BL       __aeabi_idivmod
   \   000007B0   3031               ADDS     R1,R1,#+48
   \   000007B2   6155               STRB     R1,[R4, R5]
   \   000007B4   6D1C               ADDS     R5,R5,#+1
   \   000007B6   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000007B8   2D14               ASRS     R5,R5,#+16
   \   000007BA   3B20               MOVS     R0,#+59
   \   000007BC   6055               STRB     R0,[R4, R5]
   \   000007BE   6D1C               ADDS     R5,R5,#+1
   \   000007C0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007C2   360E               LSRS     R6,R6,#+24
   \   000007C4   0520               MOVS     R0,#+5
   \   000007C6   7043               MULS     R0,R6,R0
   \   000007C8   0A99               LDR      R1,[SP, #+40]
   \   000007CA   0818               ADDS     R0,R1,R0
   \   000007CC   F830               ADDS     R0,R0,#+248
   \   000007CE   0178               LDRB     R1,[R0, #+0]
   \   000007D0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007D2   360E               LSRS     R6,R6,#+24
   \   000007D4   0520               MOVS     R0,#+5
   \   000007D6   7043               MULS     R0,R6,R0
   \   000007D8   0A9A               LDR      R2,[SP, #+40]
   \   000007DA   1018               ADDS     R0,R2,R0
   \   000007DC   F730               ADDS     R0,R0,#+247
   \   000007DE   0078               LDRB     R0,[R0, #+0]
   \   000007E0   1622               MOVS     R2,#+22
   \   000007E2   5043               MULS     R0,R2,R0
   \   000007E4   1B4A               LDR      R2,??HTTP_Query_29+0xC  ;; MainStage
   \   000007E6   1018               ADDS     R0,R2,R0
   \   000007E8   A030               ADDS     R0,R0,#+160
   \   000007EA   0088               LDRH     R0,[R0, #+0]
   \   000007EC   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000007EE   0014               ASRS     R0,R0,#+16
   \   000007F0   ........           BL       PortStageRead
   \   000007F4   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000007F6   360E               LSRS     R6,R6,#+24
   \   000007F8   0521               MOVS     R1,#+5
   \   000007FA   7143               MULS     R1,R6,R1
   \   000007FC   0A9A               LDR      R2,[SP, #+40]
   \   000007FE   5118               ADDS     R1,R2,R1
   \   00000800   F931               ADDS     R1,R1,#+249
   \   00000802   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000804   000E               LSRS     R0,R0,#+24
   \   00000806   0870               STRB     R0,[R1, #+0]
   \   00000808   000A               LSRS     R0,R0,#+8
   \   0000080A   4870               STRB     R0,[R1, #+1]
   \   0000080C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000080E   2D14               ASRS     R5,R5,#+16
   \   00000810   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000812   360E               LSRS     R6,R6,#+24
   \   00000814   0520               MOVS     R0,#+5
   \   00000816   7043               MULS     R0,R6,R0
   \   00000818   0A99               LDR      R1,[SP, #+40]
   \   0000081A   0818               ADDS     R0,R1,R0
   \   0000081C   F930               ADDS     R0,R0,#+249
   \   0000081E   0278               LDRB     R2,[R0, #+0]
   \   00000820   4178               LDRB     R1,[R0, #+1]
   \   00000822   0906               LSLS     R1,R1,#+24       ;; SignExtS R1,R1,#+24,#+16
   \   00000824   0914               ASRS     R1,R1,#+16
   \   00000826   0A43               ORRS     R2,R2,R1
   \   00000828   3032               ADDS     R2,R2,#+48
   \   0000082A   6255               STRB     R2,[R4, R5]
   \   0000082C   6D1C               ADDS     R5,R5,#+1
   \   0000082E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000830   2D14               ASRS     R5,R5,#+16
   \   00000832   0D20               MOVS     R0,#+13
   \   00000834   6055               STRB     R0,[R4, R5]
   \   00000836   6D1C               ADDS     R5,R5,#+1
   \   00000838   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000083A   2D14               ASRS     R5,R5,#+16
   \   0000083C   0A20               MOVS     R0,#+10
   \   0000083E   6055               STRB     R0,[R4, R5]
   \   00000840   6D1C               ADDS     R5,R5,#+1
   \   00000842   0937               ADDS     R7,R7,#+9
   \   00000844   01E5               B        ??HTTP_Query_14
   \   00000846   C046               Nop      
   \                     ??HTTP_Query_29:
   \   00000848   ........           DC32     Variables
   \   0000084C   ........           DC32     DateTime + 3
   \   00000850   ........           DC32     DateTime + 4
   \   00000854   ........           DC32     MainStage
   \                     ??HTTP_Query_21:
   \   00000858   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000085A   2D14               ASRS     R5,R5,#+16
   \   0000085C   7120               MOVS     R0,#+113
   \   0000085E   6055               STRB     R0,[R4, R5]
   \   00000860   6D1C               ADDS     R5,R5,#+1
   \   00000862   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000864   360E               LSRS     R6,R6,#+24
   \   00000866   0520               MOVS     R0,#+5
   \   00000868   7043               MULS     R0,R6,R0
   \   0000086A   0A99               LDR      R1,[SP, #+40]
   \   0000086C   0818               ADDS     R0,R1,R0
   \   0000086E   F730               ADDS     R0,R0,#+247
   \   00000870   0078               LDRB     R0,[R0, #+0]
   \   00000872   0A21               MOVS     R1,#+10
   \   00000874   ........           BL       __aeabi_idivmod
   \   00000878   3030               ADDS     R0,R0,#+48
   \   0000087A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000087C   2D14               ASRS     R5,R5,#+16
   \   0000087E   6055               STRB     R0,[R4, R5]
   \   00000880   6D1C               ADDS     R5,R5,#+1
   \   00000882   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000884   2D14               ASRS     R5,R5,#+16
   \   00000886   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000888   360E               LSRS     R6,R6,#+24
   \   0000088A   0520               MOVS     R0,#+5
   \   0000088C   7043               MULS     R0,R6,R0
   \   0000088E   0A99               LDR      R1,[SP, #+40]
   \   00000890   0818               ADDS     R0,R1,R0
   \   00000892   F730               ADDS     R0,R0,#+247
   \   00000894   0078               LDRB     R0,[R0, #+0]
   \   00000896   0A21               MOVS     R1,#+10
   \   00000898   ........           BL       __aeabi_idivmod
   \   0000089C   3031               ADDS     R1,R1,#+48
   \   0000089E   6155               STRB     R1,[R4, R5]
   \   000008A0   6D1C               ADDS     R5,R5,#+1
   \   000008A2   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000008A4   360E               LSRS     R6,R6,#+24
   \   000008A6   0520               MOVS     R0,#+5
   \   000008A8   7043               MULS     R0,R6,R0
   \   000008AA   0A99               LDR      R1,[SP, #+40]
   \   000008AC   0818               ADDS     R0,R1,R0
   \   000008AE   F830               ADDS     R0,R0,#+248
   \   000008B0   0078               LDRB     R0,[R0, #+0]
   \   000008B2   0A21               MOVS     R1,#+10
   \   000008B4   ........           BL       __aeabi_idivmod
   \   000008B8   3030               ADDS     R0,R0,#+48
   \   000008BA   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000008BC   2D14               ASRS     R5,R5,#+16
   \   000008BE   6055               STRB     R0,[R4, R5]
   \   000008C0   6D1C               ADDS     R5,R5,#+1
   \   000008C2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000008C4   2D14               ASRS     R5,R5,#+16
   \   000008C6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000008C8   360E               LSRS     R6,R6,#+24
   \   000008CA   0520               MOVS     R0,#+5
   \   000008CC   7043               MULS     R0,R6,R0
   \   000008CE   0A99               LDR      R1,[SP, #+40]
   \   000008D0   0818               ADDS     R0,R1,R0
   \   000008D2   F830               ADDS     R0,R0,#+248
   \   000008D4   0078               LDRB     R0,[R0, #+0]
   \   000008D6   0A21               MOVS     R1,#+10
   \   000008D8   ........           BL       __aeabi_idivmod
   \   000008DC   3031               ADDS     R1,R1,#+48
   \   000008DE   6155               STRB     R1,[R4, R5]
   \   000008E0   6D1C               ADDS     R5,R5,#+1
   \   000008E2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000008E4   2D14               ASRS     R5,R5,#+16
   \   000008E6   3B20               MOVS     R0,#+59
   \   000008E8   6055               STRB     R0,[R4, R5]
   \   000008EA   6D1C               ADDS     R5,R5,#+1
   \   000008EC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000008EE   360E               LSRS     R6,R6,#+24
   \   000008F0   0520               MOVS     R0,#+5
   \   000008F2   7043               MULS     R0,R6,R0
   \   000008F4   0A99               LDR      R1,[SP, #+40]
   \   000008F6   0818               ADDS     R0,R1,R0
   \   000008F8   F830               ADDS     R0,R0,#+248
   \   000008FA   0178               LDRB     R1,[R0, #+0]
   \   000008FC   D648               LDR      R0,??HTTP_Query_33  ;; 0x3a2
   \   000008FE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000900   360E               LSRS     R6,R6,#+24
   \   00000902   0522               MOVS     R2,#+5
   \   00000904   7243               MULS     R2,R6,R2
   \   00000906   0A9B               LDR      R3,[SP, #+40]
   \   00000908   9A18               ADDS     R2,R3,R2
   \   0000090A   F732               ADDS     R2,R2,#+247
   \   0000090C   1278               LDRB     R2,[R2, #+0]
   \   0000090E   1623               MOVS     R3,#+22
   \   00000910   5A43               MULS     R2,R3,R2
   \   00000912   D24B               LDR      R3,??HTTP_Query_33+0x4  ;; MainStage
   \   00000914   9A18               ADDS     R2,R3,R2
   \   00000916   105A               LDRH     R0,[R2, R0]
   \   00000918   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   0000091A   0014               ASRS     R0,R0,#+16
   \   0000091C   ........           BL       PortStageRead
   \   00000920   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000922   360E               LSRS     R6,R6,#+24
   \   00000924   0521               MOVS     R1,#+5
   \   00000926   7143               MULS     R1,R6,R1
   \   00000928   0A9A               LDR      R2,[SP, #+40]
   \   0000092A   5118               ADDS     R1,R2,R1
   \   0000092C   F931               ADDS     R1,R1,#+249
   \   0000092E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000930   000E               LSRS     R0,R0,#+24
   \   00000932   0870               STRB     R0,[R1, #+0]
   \   00000934   000A               LSRS     R0,R0,#+8
   \   00000936   4870               STRB     R0,[R1, #+1]
   \   00000938   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000093A   2D14               ASRS     R5,R5,#+16
   \   0000093C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000093E   360E               LSRS     R6,R6,#+24
   \   00000940   0520               MOVS     R0,#+5
   \   00000942   7043               MULS     R0,R6,R0
   \   00000944   0A99               LDR      R1,[SP, #+40]
   \   00000946   0818               ADDS     R0,R1,R0
   \   00000948   F930               ADDS     R0,R0,#+249
   \   0000094A   0278               LDRB     R2,[R0, #+0]
   \   0000094C   4178               LDRB     R1,[R0, #+1]
   \   0000094E   0906               LSLS     R1,R1,#+24       ;; SignExtS R1,R1,#+24,#+16
   \   00000950   0914               ASRS     R1,R1,#+16
   \   00000952   0A43               ORRS     R2,R2,R1
   \   00000954   3032               ADDS     R2,R2,#+48
   \   00000956   6255               STRB     R2,[R4, R5]
   \   00000958   6D1C               ADDS     R5,R5,#+1
   \   0000095A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000095C   2D14               ASRS     R5,R5,#+16
   \   0000095E   0D20               MOVS     R0,#+13
   \   00000960   6055               STRB     R0,[R4, R5]
   \   00000962   6D1C               ADDS     R5,R5,#+1
   \   00000964   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000966   2D14               ASRS     R5,R5,#+16
   \   00000968   0A20               MOVS     R0,#+10
   \   0000096A   6055               STRB     R0,[R4, R5]
   \   0000096C   6D1C               ADDS     R5,R5,#+1
   \   0000096E   0937               ADDS     R7,R7,#+9
   \   00000970   6BE4               B        ??HTTP_Query_14
   \                     ??HTTP_Query_22:
   \   00000972   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000974   2D14               ASRS     R5,R5,#+16
   \   00000976   7220               MOVS     R0,#+114
   \   00000978   6055               STRB     R0,[R4, R5]
   \   0000097A   6D1C               ADDS     R5,R5,#+1
   \   0000097C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000097E   360E               LSRS     R6,R6,#+24
   \   00000980   0520               MOVS     R0,#+5
   \   00000982   7043               MULS     R0,R6,R0
   \   00000984   0A99               LDR      R1,[SP, #+40]
   \   00000986   0818               ADDS     R0,R1,R0
   \   00000988   F730               ADDS     R0,R0,#+247
   \   0000098A   0078               LDRB     R0,[R0, #+0]
   \   0000098C   0A21               MOVS     R1,#+10
   \   0000098E   ........           BL       __aeabi_idivmod
   \   00000992   3030               ADDS     R0,R0,#+48
   \   00000994   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000996   2D14               ASRS     R5,R5,#+16
   \   00000998   6055               STRB     R0,[R4, R5]
   \   0000099A   6D1C               ADDS     R5,R5,#+1
   \   0000099C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   0000099E   2D14               ASRS     R5,R5,#+16
   \   000009A0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000009A2   360E               LSRS     R6,R6,#+24
   \   000009A4   0520               MOVS     R0,#+5
   \   000009A6   7043               MULS     R0,R6,R0
   \   000009A8   0A99               LDR      R1,[SP, #+40]
   \   000009AA   0818               ADDS     R0,R1,R0
   \   000009AC   F730               ADDS     R0,R0,#+247
   \   000009AE   0078               LDRB     R0,[R0, #+0]
   \   000009B0   0A21               MOVS     R1,#+10
   \   000009B2   ........           BL       __aeabi_idivmod
   \   000009B6   3031               ADDS     R1,R1,#+48
   \   000009B8   6155               STRB     R1,[R4, R5]
   \   000009BA   6D1C               ADDS     R5,R5,#+1
   \   000009BC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000009BE   360E               LSRS     R6,R6,#+24
   \   000009C0   0520               MOVS     R0,#+5
   \   000009C2   7043               MULS     R0,R6,R0
   \   000009C4   0A99               LDR      R1,[SP, #+40]
   \   000009C6   0818               ADDS     R0,R1,R0
   \   000009C8   F830               ADDS     R0,R0,#+248
   \   000009CA   0078               LDRB     R0,[R0, #+0]
   \   000009CC   0A21               MOVS     R1,#+10
   \   000009CE   ........           BL       __aeabi_idivmod
   \   000009D2   3030               ADDS     R0,R0,#+48
   \   000009D4   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000009D6   2D14               ASRS     R5,R5,#+16
   \   000009D8   6055               STRB     R0,[R4, R5]
   \   000009DA   6D1C               ADDS     R5,R5,#+1
   \   000009DC   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000009DE   2D14               ASRS     R5,R5,#+16
   \   000009E0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000009E2   360E               LSRS     R6,R6,#+24
   \   000009E4   0520               MOVS     R0,#+5
   \   000009E6   7043               MULS     R0,R6,R0
   \   000009E8   0A99               LDR      R1,[SP, #+40]
   \   000009EA   0818               ADDS     R0,R1,R0
   \   000009EC   F830               ADDS     R0,R0,#+248
   \   000009EE   0078               LDRB     R0,[R0, #+0]
   \   000009F0   0A21               MOVS     R1,#+10
   \   000009F2   ........           BL       __aeabi_idivmod
   \   000009F6   3031               ADDS     R1,R1,#+48
   \   000009F8   6155               STRB     R1,[R4, R5]
   \   000009FA   6D1C               ADDS     R5,R5,#+1
   \   000009FC   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   000009FE   2D14               ASRS     R5,R5,#+16
   \   00000A00   3B20               MOVS     R0,#+59
   \   00000A02   6055               STRB     R0,[R4, R5]
   \   00000A04   6D1C               ADDS     R5,R5,#+1
   \   00000A06   A021               MOVS     R1,#+160
   \   00000A08   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000A0A   360E               LSRS     R6,R6,#+24
   \   00000A0C   0520               MOVS     R0,#+5
   \   00000A0E   7043               MULS     R0,R6,R0
   \   00000A10   0A9A               LDR      R2,[SP, #+40]
   \   00000A12   1018               ADDS     R0,R2,R0
   \   00000A14   F830               ADDS     R0,R0,#+248
   \   00000A16   0078               LDRB     R0,[R0, #+0]
   \   00000A18   0222               MOVS     R2,#+2
   \   00000A1A   5043               MULS     R0,R2,R0
   \   00000A1C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000A1E   360E               LSRS     R6,R6,#+24
   \   00000A20   0522               MOVS     R2,#+5
   \   00000A22   7243               MULS     R2,R6,R2
   \   00000A24   0A9B               LDR      R3,[SP, #+40]
   \   00000A26   9A18               ADDS     R2,R3,R2
   \   00000A28   F732               ADDS     R2,R2,#+247
   \   00000A2A   1278               LDRB     R2,[R2, #+0]
   \   00000A2C   1623               MOVS     R3,#+22
   \   00000A2E   5A43               MULS     R2,R3,R2
   \   00000A30   8A4B               LDR      R3,??HTTP_Query_33+0x4  ;; MainStage
   \   00000A32   9A18               ADDS     R2,R3,R2
   \   00000A34   1018               ADDS     R0,R2,R0
   \   00000A36   405E               LDRSH    R0,[R0, R1]
   \   00000A38   8949               LDR      R1,??HTTP_Query_33+0x8  ;; 0xffff8000
   \   00000A3A   8842               CMP      R0,R1
   \   00000A3C   1AD1               BNE      ??HTTP_Query_34
   \   00000A3E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000A40   360E               LSRS     R6,R6,#+24
   \   00000A42   0520               MOVS     R0,#+5
   \   00000A44   7043               MULS     R0,R6,R0
   \   00000A46   0A99               LDR      R1,[SP, #+40]
   \   00000A48   0818               ADDS     R0,R1,R0
   \   00000A4A   F830               ADDS     R0,R0,#+248
   \   00000A4C   0078               LDRB     R0,[R0, #+0]
   \   00000A4E   0128               CMP      R0,#+1
   \   00000A50   10D3               BCC      ??HTTP_Query_34
   \   00000A52   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000A54   2D14               ASRS     R5,R5,#+16
   \   00000A56   4220               MOVS     R0,#+66
   \   00000A58   6055               STRB     R0,[R4, R5]
   \   00000A5A   6D1C               ADDS     R5,R5,#+1
   \   00000A5C   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000A5E   2D14               ASRS     R5,R5,#+16
   \   00000A60   4120               MOVS     R0,#+65
   \   00000A62   6055               STRB     R0,[R4, R5]
   \   00000A64   6D1C               ADDS     R5,R5,#+1
   \   00000A66   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000A68   2D14               ASRS     R5,R5,#+16
   \   00000A6A   5420               MOVS     R0,#+84
   \   00000A6C   6055               STRB     R0,[R4, R5]
   \   00000A6E   6D1C               ADDS     R5,R5,#+1
   \   00000A70   FFF7E0FB           BL       ??HTTP_Query_13
   \                     ??HTTP_Query_34:
   \   00000A74   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000A76   360E               LSRS     R6,R6,#+24
   \   00000A78   0520               MOVS     R0,#+5
   \   00000A7A   7043               MULS     R0,R6,R0
   \   00000A7C   0A99               LDR      R1,[SP, #+40]
   \   00000A7E   0818               ADDS     R0,R1,R0
   \   00000A80   F730               ADDS     R0,R0,#+247
   \   00000A82   0078               LDRB     R0,[R0, #+0]
   \   00000A84   0221               MOVS     R1,#+2
   \   00000A86   4843               MULS     R0,R1,R0
   \   00000A88   7649               LDR      R1,??HTTP_Query_33+0xC  ;; VariablesAnal
   \   00000A8A   085E               LDRSH    R0,[R1, R0]
   \   00000A8C   FA21               MOVS     R1,#+250
   \   00000A8E   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   00000A90   8842               CMP      R0,R1
   \   00000A92   15DB               BLT      ??HTTP_Query_35
   \   00000A94   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000A96   2D14               ASRS     R5,R5,#+16
   \   00000A98   3E20               MOVS     R0,#+62
   \   00000A9A   6055               STRB     R0,[R4, R5]
   \   00000A9C   6D1C               ADDS     R5,R5,#+1
   \   00000A9E   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AA0   2D14               ASRS     R5,R5,#+16
   \   00000AA2   4D20               MOVS     R0,#+77
   \   00000AA4   6055               STRB     R0,[R4, R5]
   \   00000AA6   6D1C               ADDS     R5,R5,#+1
   \   00000AA8   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AAA   2D14               ASRS     R5,R5,#+16
   \   00000AAC   4120               MOVS     R0,#+65
   \   00000AAE   6055               STRB     R0,[R4, R5]
   \   00000AB0   6D1C               ADDS     R5,R5,#+1
   \   00000AB2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AB4   2D14               ASRS     R5,R5,#+16
   \   00000AB6   5820               MOVS     R0,#+88
   \   00000AB8   6055               STRB     R0,[R4, R5]
   \   00000ABA   6D1C               ADDS     R5,R5,#+1
   \   00000ABC   FFF7BAFB           BL       ??HTTP_Query_13
   \                     ??HTTP_Query_35:
   \   00000AC0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000AC2   360E               LSRS     R6,R6,#+24
   \   00000AC4   0520               MOVS     R0,#+5
   \   00000AC6   7043               MULS     R0,R6,R0
   \   00000AC8   0A99               LDR      R1,[SP, #+40]
   \   00000ACA   0818               ADDS     R0,R1,R0
   \   00000ACC   F730               ADDS     R0,R0,#+247
   \   00000ACE   0078               LDRB     R0,[R0, #+0]
   \   00000AD0   0221               MOVS     R1,#+2
   \   00000AD2   4843               MULS     R0,R1,R0
   \   00000AD4   6349               LDR      R1,??HTTP_Query_33+0xC  ;; VariablesAnal
   \   00000AD6   085E               LDRSH    R0,[R1, R0]
   \   00000AD8   6349               LDR      R1,??HTTP_Query_33+0x10  ;; 0xfffffc19
   \   00000ADA   8842               CMP      R0,R1
   \   00000ADC   15DA               BGE      ??HTTP_Query_36
   \   00000ADE   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AE0   2D14               ASRS     R5,R5,#+16
   \   00000AE2   2D20               MOVS     R0,#+45
   \   00000AE4   6055               STRB     R0,[R4, R5]
   \   00000AE6   6D1C               ADDS     R5,R5,#+1
   \   00000AE8   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AEA   2D14               ASRS     R5,R5,#+16
   \   00000AEC   4D20               MOVS     R0,#+77
   \   00000AEE   6055               STRB     R0,[R4, R5]
   \   00000AF0   6D1C               ADDS     R5,R5,#+1
   \   00000AF2   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AF4   2D14               ASRS     R5,R5,#+16
   \   00000AF6   4920               MOVS     R0,#+73
   \   00000AF8   6055               STRB     R0,[R4, R5]
   \   00000AFA   6D1C               ADDS     R5,R5,#+1
   \   00000AFC   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000AFE   2D14               ASRS     R5,R5,#+16
   \   00000B00   4E20               MOVS     R0,#+78
   \   00000B02   6055               STRB     R0,[R4, R5]
   \   00000B04   6D1C               ADDS     R5,R5,#+1
   \   00000B06   FFF795FB           BL       ??HTTP_Query_13
   \                     ??HTTP_Query_36:
   \   00000B0A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000B0C   2D14               ASRS     R5,R5,#+16
   \   00000B0E   6119               ADDS     R1,R4,R5
   \   00000B10   8C46               MOV      R12,R1
   \   00000B12   A021               MOVS     R1,#+160
   \   00000B14   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000B16   360E               LSRS     R6,R6,#+24
   \   00000B18   0520               MOVS     R0,#+5
   \   00000B1A   7043               MULS     R0,R6,R0
   \   00000B1C   0A9A               LDR      R2,[SP, #+40]
   \   00000B1E   1018               ADDS     R0,R2,R0
   \   00000B20   F830               ADDS     R0,R0,#+248
   \   00000B22   0278               LDRB     R2,[R0, #+0]
   \   00000B24   0220               MOVS     R0,#+2
   \   00000B26   4243               MULS     R2,R0,R2
   \   00000B28   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000B2A   360E               LSRS     R6,R6,#+24
   \   00000B2C   0523               MOVS     R3,#+5
   \   00000B2E   7343               MULS     R3,R6,R3
   \   00000B30   0A98               LDR      R0,[SP, #+40]
   \   00000B32   C018               ADDS     R0,R0,R3
   \   00000B34   F730               ADDS     R0,R0,#+247
   \   00000B36   0078               LDRB     R0,[R0, #+0]
   \   00000B38   1623               MOVS     R3,#+22
   \   00000B3A   5843               MULS     R0,R3,R0
   \   00000B3C   474B               LDR      R3,??HTTP_Query_33+0x4  ;; MainStage
   \   00000B3E   1818               ADDS     R0,R3,R0
   \   00000B40   8018               ADDS     R0,R0,R2
   \   00000B42   405E               LDRSH    R0,[R0, R1]
   \   00000B44   6146               MOV      R1,R12
   \   00000B46   ........           BL       sIntToStr
   \   00000B4A   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000B4C   000E               LSRS     R0,R0,#+24
   \   00000B4E   2D18               ADDS     R5,R5,R0
   \   00000B50   FFF76CFB           BL       ??HTTP_Query_12
   1272                                          
   1273                                  break;
   1274                                  
   1275                                }
   1276                              }
   1277                         
   1278                              ContentLength=BTS-NAG;
   \                     ??HTTP_Query_15:
   \   00000B54   0198               LDR      R0,[SP, #+4]
   \   00000B56   2F1A               SUBS     R7,R5,R0
   1279                              
   1280                               Send=1;
   \   00000B58   0126               MOVS     R6,#+1
   1281                              char LengthTxt[4];
   1282                              //char IlLiczb=CharToStr(ContentLength,LengthTxt,3);    //(char Value, char *Vstring, char ill) 
   1283                              char IlLiczb=sprintf(LengthTxt, "%d",ContentLength);
   \   00000B5A   3F04               LSLS     R7,R7,#+16       ;; SignExtS R7,R7,#+16,#+16
   \   00000B5C   3F14               ASRS     R7,R7,#+16
   \   00000B5E   3A00               MOVS     R2,R7
   \   00000B60   42A1               ADR      R1,??HTTP_Query_33+0x14  ;; 0x25, 0x64, 0x00, 0x00
   \   00000B62   02A8               ADD      R0,SP,#+8
   \   00000B64   ........           BL       sprintf
   1284                              
   1285                              
   1286                              for (char i=0; i<IlLiczb; i++)
   \   00000B68   0021               MOVS     R1,#+0
   \   00000B6A   0AE0               B        ??HTTP_Query_37
   1287                              {
   1288                                Buff_TX[PozLength+i]=LengthTxt[i];
   \                     ??HTTP_Query_38:
   \   00000B6C   6A46               MOV      R2,SP
   \   00000B6E   1278               LDRB     R2,[R2, #+0]
   \   00000B70   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000B72   090E               LSRS     R1,R1,#+24
   \   00000B74   5218               ADDS     R2,R2,R1
   \   00000B76   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000B78   090E               LSRS     R1,R1,#+24
   \   00000B7A   02AB               ADD      R3,SP,#+8
   \   00000B7C   5B5C               LDRB     R3,[R3, R1]
   \   00000B7E   A354               STRB     R3,[R4, R2]
   1289                              }
   \   00000B80   491C               ADDS     R1,R1,#+1
   \                     ??HTTP_Query_37:
   \   00000B82   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000B84   090E               LSRS     R1,R1,#+24
   \   00000B86   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000B88   000E               LSRS     R0,R0,#+24
   \   00000B8A   8142               CMP      R1,R0
   \   00000B8C   EED3               BCC      ??HTTP_Query_38
   1290                              
   1291                    
   1292                            Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000B8E   0A9F               LDR      R7,[SP, #+40]
   \   00000B90   3837               ADDS     R7,R7,#+56
   \   00000B92   3748               LDR      R0,??HTTP_Query_33+0x18  ;; g_counter
   \   00000B94   03C8               LDM      R0!,{R0,R1}
   \   00000B96   0200               MOVS     R2,R0
   \   00000B98   0B00               MOVS     R3,R1
   \   00000B9A   3648               LDR      R0,??HTTP_Query_33+0x1C  ;; 0x2710
   \   00000B9C   0021               MOVS     R1,#+0
   \   00000B9E   8018               ADDS     R0,R0,R2
   \   00000BA0   5941               ADCS     R1,R1,R3
   \   00000BA2   03C7               STM      R7!,{R0,R1}
   \   00000BA4   083F               SUBS     R7,R7,#+8
   1293                      break;              
   1294                    }
   1295                     
   1296                      if (Send)
   \                     ??HTTP_Query_4:
   \   00000BA6   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000BA8   360E               LSRS     R6,R6,#+24
   \   00000BAA   002E               CMP      R6,#+0
   \   00000BAC   4FD0               BEQ      ??HTTP_Query_39
   1297                      {
   1298                        
   1299                        Buff_TX[BTS++]=0x1B;
   \   00000BAE   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000BB0   2D14               ASRS     R5,R5,#+16
   \   00000BB2   1B20               MOVS     R0,#+27
   \   00000BB4   6055               STRB     R0,[R4, R5]
   \   00000BB6   6D1C               ADDS     R5,R5,#+1
   1300                        Buff_TX[BTS++]='E';
   \   00000BB8   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000BBA   2D14               ASRS     R5,R5,#+16
   \   00000BBC   4520               MOVS     R0,#+69
   \   00000BBE   6055               STRB     R0,[R4, R5]
   \   00000BC0   6D1C               ADDS     R5,R5,#+1
   1301                        for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000BC2   0020               MOVS     R0,#+0
   \   00000BC4   05E0               B        ??HTTP_Query_40
   \                     ??HTTP_Query_41:
   \   00000BC6   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000BC8   0014               ASRS     R0,R0,#+16
   \   00000BCA   0899               LDR      R1,[SP, #+32]
   \   00000BCC   0022               MOVS     R2,#+0
   \   00000BCE   0A54               STRB     R2,[R1, R0]
   \   00000BD0   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_Query_40:
   \   00000BD2   9121               MOVS     R1,#+145
   \   00000BD4   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000BD6   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   00000BD8   0014               ASRS     R0,R0,#+16
   \   00000BDA   8842               CMP      R0,R1
   \   00000BDC   F3DB               BLT      ??HTTP_Query_41
   1302                        if (Net->Status.HostLink==CONNECTED)
   \   00000BDE   0A98               LDR      R0,[SP, #+40]
   \   00000BE0   4078               LDRB     R0,[R0, #+1]
   \   00000BE2   0328               CMP      R0,#+3
   \   00000BE4   29D1               BNE      ??HTTP_Query_42
   1303                        {
   1304                            
   1305                            Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000BE6   0A9E               LDR      R6,[SP, #+40]
   \   00000BE8   3836               ADDS     R6,R6,#+56
   \   00000BEA   2148               LDR      R0,??HTTP_Query_33+0x18  ;; g_counter
   \   00000BEC   0CC8               LDM      R0!,{R2,R3}
   \   00000BEE   0838               SUBS     R0,R0,#+8
   \   00000BF0   2048               LDR      R0,??HTTP_Query_33+0x1C  ;; 0x2710
   \   00000BF2   0021               MOVS     R1,#+0
   \   00000BF4   8018               ADDS     R0,R0,R2
   \   00000BF6   5941               ADCS     R1,R1,R3
   \   00000BF8   03C6               STM      R6!,{R0,R1}
   \   00000BFA   083E               SUBS     R6,R6,#+8
   1306                            Net->Status.HttpNextQueryTime=g_counter+HTTP_QUERY_MAX_TIME;   //restart czasu pomiêdzy odpytaniami HTTP. Ustawienie Maksymalnego czasu na odpowied
   \   00000BFC   0A9E               LDR      R6,[SP, #+40]
   \   00000BFE   3036               ADDS     R6,R6,#+48
   \   00000C00   1B48               LDR      R0,??HTTP_Query_33+0x18  ;; g_counter
   \   00000C02   0CC8               LDM      R0!,{R2,R3}
   \   00000C04   0838               SUBS     R0,R0,#+8
   \   00000C06   1C48               LDR      R0,??HTTP_Query_33+0x20  ;; 0x1388
   \   00000C08   0021               MOVS     R1,#+0
   \   00000C0A   8018               ADDS     R0,R0,R2
   \   00000C0C   5941               ADCS     R1,R1,R3
   \   00000C0E   03C6               STM      R6!,{R0,R1}
   \   00000C10   083E               SUBS     R6,R6,#+8
   1307                            
   1308                            
   1309                            AT91F_US_SendFrame(USART,Buff_TX,BTS,0, 0);                        //Wysyla ramke 
                                                            ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000C12   82B0               SUB      SP,SP,#+8
   \   00000C14   0020               MOVS     R0,#+0
   \   00000C16   0090               STR      R0,[SP, #+0]
   \   00000C18   0023               MOVS     R3,#+0
   \   00000C1A   2D04               LSLS     R5,R5,#+16       ;; SignExtS R5,R5,#+16,#+16
   \   00000C1C   2D14               ASRS     R5,R5,#+16
   \   00000C1E   2A00               MOVS     R2,R5
   \   00000C20   2100               MOVS     R1,R4
   \   00000C22   0B98               LDR      R0,[SP, #+44]
   \   00000C24   ........           BL       AT91F_US_SendFrame
   \   00000C28   02B0               ADD      SP,SP,#+8
   1310                            
   1311                            Net->Status.SendPacketTime=g_counter;
   \   00000C2A   0A9A               LDR      R2,[SP, #+40]
   \   00000C2C   2032               ADDS     R2,R2,#+32
   \   00000C2E   1048               LDR      R0,??HTTP_Query_33+0x18  ;; g_counter
   \   00000C30   03C8               LDM      R0!,{R0,R1}
   \   00000C32   03C2               STM      R2!,{R0,R1}
   \   00000C34   083A               SUBS     R2,R2,#+8
   1312                            Net->Status.SendBytes=BTS;
   \   00000C36   0A98               LDR      R0,[SP, #+40]
   \   00000C38   0583               STRH     R5,[R0, #+24]
   1313                            
   1314                        }
   1315                        
   1316                        if (WiFiDebug) 
   \                     ??HTTP_Query_42:
   \   00000C3A   1048               LDR      R0,??HTTP_Query_33+0x24  ;; WiFiDebug
   \   00000C3C   0078               LDRB     R0,[R0, #+0]
   \   00000C3E   0028               CMP      R0,#+0
   \   00000C40   05D0               BEQ      ??HTTP_Query_39
   1317                        {
   1318                          SendViaUSB(Buff_TX, BTS);
                                            ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"

             char *PozIlByte;
                   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c",1039  Warning[Pe177]: 
          variable "PozIlByte" was declared but never referenced
   \   00000C42   2900               MOVS     R1,R5
   \   00000C44   0904               LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
   \   00000C46   090C               LSRS     R1,R1,#+16
   \   00000C48   2000               MOVS     R0,R4
   \   00000C4A   ........           BL       SendViaUSB
   1319                          /*
   1320                          if (BTS>255)
   1321                          {
   1322                           SendViaUSB(Buff_TX, 255);
   1323                           //SendViaUSB(Buff_TX+255, BTS-255);
   1324                          }else{
   1325                           SendViaUSB(Buff_TX, BTS); 
   1326                          }
   1327                          */
   1328                        }
   1329                      }
   1330            
   1331          }
   \                     ??HTTP_Query_39:
   \   00000C4E   0BB0               ADD      SP,SP,#+44
   \   00000C50   F0BC               POP      {R4-R7}
   \   00000C52   01BC               POP      {R0}
   \   00000C54   0047               BX       R0               ;; return
   \   00000C56   C046               Nop      
   \                     ??HTTP_Query_33:
   \   00000C58   A2030000           DC32     0x3a2
   \   00000C5C   ........           DC32     MainStage
   \   00000C60   0080FFFF           DC32     0xffff8000
   \   00000C64   ........           DC32     VariablesAnal
   \   00000C68   19FCFFFF           DC32     0xfffffc19
   \   00000C6C   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000C70   ........           DC32     g_counter
   \   00000C74   10270000           DC32     0x2710
   \   00000C78   88130000           DC32     0x1388
   \   00000C7C   ........           DC32     WiFiDebug
   1332          
   1333          
   1334          
   1335            
   1336          
   1337          
   1338          
   1339          

   \                                 In section Debug.txt, align 4, keep-with-next
   1340          char HTTP_QueryResponse(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
   1341          {
   \                     HTTP_QueryResponse:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   1C00               MOVS     R4,R3
   1342          
   1343                   char *pTxt;
   1344              
   1345                   //if (WiFiDebug) SendViaUSB(Buff_RX, 580); 
   1346                   
   1347                   if ((Buff_RX[3]=='H') && (Buff_RX[4]=='T')&& (Buff_RX[5]=='T') && (Buff_RX[6]=='P')  ) //(strstr(Buff_RX, "HTTP")!=NULL)
   \   00000006   0298               LDR      R0,[SP, #+8]
   \   00000008   C078               LDRB     R0,[R0, #+3]
   \   0000000A   4828               CMP      R0,#+72
   \   0000000C   00D0               BEQ      .+4
   \   0000000E   FFE2               B        ??HTTP_QueryResponse_0
   \   00000010   0298               LDR      R0,[SP, #+8]
   \   00000012   0079               LDRB     R0,[R0, #+4]
   \   00000014   5428               CMP      R0,#+84
   \   00000016   00D0               BEQ      .+4
   \   00000018   FAE2               B        ??HTTP_QueryResponse_0
   \   0000001A   0298               LDR      R0,[SP, #+8]
   \   0000001C   4079               LDRB     R0,[R0, #+5]
   \   0000001E   5428               CMP      R0,#+84
   \   00000020   00D0               BEQ      .+4
   \   00000022   F5E2               B        ??HTTP_QueryResponse_0
   \   00000024   0298               LDR      R0,[SP, #+8]
   \   00000026   8079               LDRB     R0,[R0, #+6]
   \   00000028   5028               CMP      R0,#+80
   \   0000002A   00D0               BEQ      .+4
   \   0000002C   F0E2               B        ??HTTP_QueryResponse_0
   1348                   {
   1349          
   1350                         Net->Status.ResPacketTime=g_counter;
   \   0000002E   2200               MOVS     R2,R4
   \   00000030   2832               ADDS     R2,R2,#+40
   \   00000032   CF48               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   03C2               STM      R2!,{R0,R1}
   \   00000038   083A               SUBS     R2,R2,#+8
   1351                        
   1352                         Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100); 
   \   0000003A   2500               MOVS     R5,R4
   \   0000003C   3035               ADDS     R5,R5,#+48
   \   0000003E   CC48               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   00000040   0CC8               LDM      R0!,{R2,R3}
   \   00000042   0838               SUBS     R0,R0,#+8
   \   00000044   EE20               MOVS     R0,#+238
   \   00000046   205E               LDRSH    R0,[R4, R0]
   \   00000048   6421               MOVS     R1,#+100
   \   0000004A   4843               MULS     R0,R1,R0
   \   0000004C   C117               ASRS     R1,R0,#+31
   \   0000004E   8018               ADDS     R0,R0,R2
   \   00000050   5941               ADCS     R1,R1,R3
   \   00000052   03C5               STM      R5!,{R0,R1}
   \   00000054   083D               SUBS     R5,R5,#+8
   1353                         pTxt=strstr(Buff_RX, "\r\n\r\n");
   \   00000056   C749               LDR      R1,??HTTP_QueryResponse_1+0x4  ;; `?<Constant "\\r\\n\\r\\n">`
   \   00000058   0298               LDR      R0,[SP, #+8]
   \   0000005A   ........           BL       strstr
   \   0000005E   0500               MOVS     R5,R0
   1354                         if ((pTxt!=NULL) && (strstr(Buff_RX, "OK")!=NULL))
   \   00000060   002D               CMP      R5,#+0
   \   00000062   00D1               BNE      .+4
   \   00000064   D4E2               B        ??HTTP_QueryResponse_0
   \   00000066   C4A1               ADR      R1,??HTTP_QueryResponse_1+0x8  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000068   0298               LDR      R0,[SP, #+8]
   \   0000006A   ........           BL       strstr
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   00D1               BNE      .+4
   \   00000072   CDE2               B        ??HTTP_QueryResponse_0
   1355                         {  
   1356                           pTxt+=4;
   \   00000074   2D1D               ADDS     R5,R5,#+4
   1357                           switch (Net->Status.CurrentOrder)     
   \   00000076   A078               LDRB     R0,[R4, #+2]
   \   00000078   1228               CMP      R0,#+18
   \   0000007A   00D1               BNE      .+4
   \   0000007C   8FE2               B        ??HTTP_QueryResponse_2
   \   0000007E   1328               CMP      R0,#+19
   \   00000080   00D1               BNE      .+4
   \   00000082   A6E0               B        ??HTTP_QueryResponse_3
   \   00000084   1428               CMP      R0,#+20
   \   00000086   00D0               BEQ      .+4
   \   00000088   B0E2               B        ??HTTP_QueryResponse_4
   1358                                 {
   1359                                    case HTTP_GET_Config:
   1360                                         pTxt+=3;
   \                     ??HTTP_QueryResponse_5:
   \   0000008A   ED1C               ADDS     R5,R5,#+3
   1361                                         Net->HTTP.VarSetCount=0;    
   \   0000008C   F220               MOVS     R0,#+242
   \   0000008E   0021               MOVS     R1,#+0
   \   00000090   2154               STRB     R1,[R4, R0]
   1362                                         for (char i=0; i<VAR_SET_AMOUNT; i++) {Net->HTTP.NetNodeSet[i].NetDataType=NO_Var;}  //wyczyszczenie tablicy 
   \   00000092   0020               MOVS     R0,#+0
   \   00000094   08E0               B        ??HTTP_QueryResponse_6
   \                     ??HTTP_QueryResponse_7:
   \   00000096   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   0521               MOVS     R1,#+5
   \   0000009C   4143               MULS     R1,R0,R1
   \   0000009E   6118               ADDS     R1,R4,R1
   \   000000A0   F631               ADDS     R1,R1,#+246
   \   000000A2   0022               MOVS     R2,#+0
   \   000000A4   0A70               STRB     R2,[R1, #+0]
   \   000000A6   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_QueryResponse_6:
   \   000000A8   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   2828               CMP      R0,#+40
   \   000000AE   F2D3               BCC      ??HTTP_QueryResponse_7
   1363                                         //przepisanie konfiguracji do tabeli VarSet  
   1364                                          while (((pTxt[0]=='a') || (pTxt[0]=='b') || (pTxt[0]=='c') || (pTxt[0]=='d') || (pTxt[0]=='i') || (pTxt[0]=='q') || (pTxt[0]=='r')) && (Net->HTTP.VarSetCount<VAR_SET_AMOUNT))
   \                     ??HTTP_QueryResponse_8:
   \   000000B0   2878               LDRB     R0,[R5, #+0]
   \   000000B2   6128               CMP      R0,#+97
   \   000000B4   11D0               BEQ      ??HTTP_QueryResponse_9
   \   000000B6   2878               LDRB     R0,[R5, #+0]
   \   000000B8   6228               CMP      R0,#+98
   \   000000BA   0ED0               BEQ      ??HTTP_QueryResponse_9
   \   000000BC   2878               LDRB     R0,[R5, #+0]
   \   000000BE   6328               CMP      R0,#+99
   \   000000C0   0BD0               BEQ      ??HTTP_QueryResponse_9
   \   000000C2   2878               LDRB     R0,[R5, #+0]
   \   000000C4   6428               CMP      R0,#+100
   \   000000C6   08D0               BEQ      ??HTTP_QueryResponse_9
   \   000000C8   2878               LDRB     R0,[R5, #+0]
   \   000000CA   6928               CMP      R0,#+105
   \   000000CC   05D0               BEQ      ??HTTP_QueryResponse_9
   \   000000CE   2878               LDRB     R0,[R5, #+0]
   \   000000D0   7128               CMP      R0,#+113
   \   000000D2   02D0               BEQ      ??HTTP_QueryResponse_9
   \   000000D4   2878               LDRB     R0,[R5, #+0]
   \   000000D6   7228               CMP      R0,#+114
   \   000000D8   51D1               BNE      ??HTTP_QueryResponse_10
   \                     ??HTTP_QueryResponse_9:
   \   000000DA   F220               MOVS     R0,#+242
   \   000000DC   205C               LDRB     R0,[R4, R0]
   \   000000DE   2828               CMP      R0,#+40
   \   000000E0   4DD2               BCS      ??HTTP_QueryResponse_10
   1365                                          {
   1366                                             if ((pTxt[0]=='i') || (pTxt[0]=='q') || (pTxt[0]=='r'))  //je¿eli wejcie lub wyjcie wêz³a lub sensor
   \   000000E2   2878               LDRB     R0,[R5, #+0]
   \   000000E4   6928               CMP      R0,#+105
   \   000000E6   05D0               BEQ      ??HTTP_QueryResponse_11
   \   000000E8   2878               LDRB     R0,[R5, #+0]
   \   000000EA   7128               CMP      R0,#+113
   \   000000EC   02D0               BEQ      ??HTTP_QueryResponse_11
   \   000000EE   2878               LDRB     R0,[R5, #+0]
   \   000000F0   7228               CMP      R0,#+114
   \   000000F2   28D1               BNE      ??HTTP_QueryResponse_12
   1367                                             {
   1368                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].NetDataType=pTxt[0];
                                                                                                             ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??HTTP_QueryResponse_11:
   \   000000F4   F220               MOVS     R0,#+242
   \   000000F6   205C               LDRB     R0,[R4, R0]
   \   000000F8   0521               MOVS     R1,#+5
   \   000000FA   4843               MULS     R0,R1,R0
   \   000000FC   2018               ADDS     R0,R4,R0
   \   000000FE   F630               ADDS     R0,R0,#+246
   \   00000100   2978               LDRB     R1,[R5, #+0]
   \   00000102   0170               STRB     R1,[R0, #+0]
   1369                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].NodeNr=(pTxt[1]-48)*10+(pTxt[2]-48);
   \   00000104   F220               MOVS     R0,#+242
   \   00000106   205C               LDRB     R0,[R4, R0]
   \   00000108   0521               MOVS     R1,#+5
   \   0000010A   4843               MULS     R0,R1,R0
   \   0000010C   2018               ADDS     R0,R4,R0
   \   0000010E   F730               ADDS     R0,R0,#+247
   \   00000110   6978               LDRB     R1,[R5, #+1]
   \   00000112   0A22               MOVS     R2,#+10
   \   00000114   5143               MULS     R1,R2,R1
   \   00000116   AA78               LDRB     R2,[R5, #+2]
   \   00000118   8918               ADDS     R1,R1,R2
   \   0000011A   1039               SUBS     R1,R1,#+16
   \   0000011C   0170               STRB     R1,[R0, #+0]
   1370                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].PortNr=(pTxt[3]-48)*10+(pTxt[4]-48);
   \   0000011E   F220               MOVS     R0,#+242
   \   00000120   205C               LDRB     R0,[R4, R0]
   \   00000122   0521               MOVS     R1,#+5
   \   00000124   4843               MULS     R0,R1,R0
   \   00000126   2018               ADDS     R0,R4,R0
   \   00000128   F830               ADDS     R0,R0,#+248
   \   0000012A   E978               LDRB     R1,[R5, #+3]
   \   0000012C   0A22               MOVS     R2,#+10
   \   0000012E   5143               MULS     R1,R2,R1
   \   00000130   2A79               LDRB     R2,[R5, #+4]
   \   00000132   8918               ADDS     R1,R1,R2
   \   00000134   1039               SUBS     R1,R1,#+16
   \   00000136   0170               STRB     R1,[R0, #+0]
   1371                                               Net->HTTP.VarSetCount++;
   \   00000138   F220               MOVS     R0,#+242
   \   0000013A   F221               MOVS     R1,#+242
   \   0000013C   615C               LDRB     R1,[R4, R1]
   \   0000013E   491C               ADDS     R1,R1,#+1
   \   00000140   2154               STRB     R1,[R4, R0]
   1372                                               pTxt+=9;
   \   00000142   0935               ADDS     R5,R5,#+9
   \   00000144   B4E7               B        ??HTTP_QueryResponse_8
   1373                                             }else{
   1374                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].NetDataType=pTxt[0];
                                                                                                             ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??HTTP_QueryResponse_12:
   \   00000146   F220               MOVS     R0,#+242
   \   00000148   205C               LDRB     R0,[R4, R0]
   \   0000014A   0521               MOVS     R1,#+5
   \   0000014C   4843               MULS     R0,R1,R0
   \   0000014E   2018               ADDS     R0,R4,R0
   \   00000150   F630               ADDS     R0,R0,#+246
   \   00000152   2978               LDRB     R1,[R5, #+0]
   \   00000154   0170               STRB     R1,[R0, #+0]
   1375                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].VarNr=(pTxt[1]-48)*10+(pTxt[2]-48);
   \   00000156   F220               MOVS     R0,#+242
   \   00000158   205C               LDRB     R0,[R4, R0]
   \   0000015A   0521               MOVS     R1,#+5
   \   0000015C   4843               MULS     R0,R1,R0
   \   0000015E   2018               ADDS     R0,R4,R0
   \   00000160   F730               ADDS     R0,R0,#+247
   \   00000162   6978               LDRB     R1,[R5, #+1]
   \   00000164   0A22               MOVS     R2,#+10
   \   00000166   5143               MULS     R1,R2,R1
   \   00000168   AA78               LDRB     R2,[R5, #+2]
   \   0000016A   8918               ADDS     R1,R1,R2
   \   0000016C   1039               SUBS     R1,R1,#+16
   \   0000016E   0170               STRB     R1,[R0, #+0]
   1376                                               Net->HTTP.VarSetCount++;
   \   00000170   F220               MOVS     R0,#+242
   \   00000172   F221               MOVS     R1,#+242
   \   00000174   615C               LDRB     R1,[R4, R1]
   \   00000176   491C               ADDS     R1,R1,#+1
   \   00000178   2154               STRB     R1,[R4, R0]
   1377                                               pTxt+=7;
   \   0000017A   ED1D               ADDS     R5,R5,#+7
   \   0000017C   98E7               B        ??HTTP_QueryResponse_8
   1378                                             }
   1379                                          }
   1380          
   1381                                         for (char i=0; i<20; i++) Buff_RX[i]=0;
   \                     ??HTTP_QueryResponse_10:
   \   0000017E   0020               MOVS     R0,#+0
   \   00000180   05E0               B        ??HTTP_QueryResponse_13
   \                     ??HTTP_QueryResponse_14:
   \   00000182   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000184   000E               LSRS     R0,R0,#+24
   \   00000186   0299               LDR      R1,[SP, #+8]
   \   00000188   0022               MOVS     R2,#+0
   \   0000018A   0A54               STRB     R2,[R1, R0]
   \   0000018C   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_QueryResponse_13:
   \   0000018E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000190   000E               LSRS     R0,R0,#+24
   \   00000192   1428               CMP      R0,#+20
   \   00000194   F5D3               BCC      ??HTTP_QueryResponse_14
   1382                                         Net->Status.NextHttpOrder=HTTP_POST;
   \   00000196   1220               MOVS     R0,#+18
   \   00000198   E070               STRB     R0,[R4, #+3]
   1383                                         Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   0000019A   0020               MOVS     R0,#+0
   \   0000019C   A070               STRB     R0,[R4, #+2]
   1384                                         Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000019E   2600               MOVS     R6,R4
   \   000001A0   3836               ADDS     R6,R6,#+56
   \   000001A2   7348               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   000001A4   0CC8               LDM      R0!,{R2,R3}
   \   000001A6   0838               SUBS     R0,R0,#+8
   \   000001A8   7448               LDR      R0,??HTTP_QueryResponse_1+0xC  ;; 0x2710
   \   000001AA   0021               MOVS     R1,#+0
   \   000001AC   8018               ADDS     R0,R0,R2
   \   000001AE   5941               ADCS     R1,R1,R3
   \   000001B0   03C6               STM      R6!,{R0,R1}
   \   000001B2   083E               SUBS     R6,R6,#+8
   1385                                         Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100);   //restart czasu pomiêdzy odpytaniami HTTP.
   \   000001B4   2600               MOVS     R6,R4
   \   000001B6   3036               ADDS     R6,R6,#+48
   \   000001B8   6D48               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   000001BA   0CC8               LDM      R0!,{R2,R3}
   \   000001BC   0838               SUBS     R0,R0,#+8
   \   000001BE   EE20               MOVS     R0,#+238
   \   000001C0   205E               LDRSH    R0,[R4, R0]
   \   000001C2   6421               MOVS     R1,#+100
   \   000001C4   4843               MULS     R0,R1,R0
   \   000001C6   C117               ASRS     R1,R0,#+31
   \   000001C8   8018               ADDS     R0,R0,R2
   \   000001CA   5941               ADCS     R1,R1,R3
   \   000001CC   03C6               STM      R6!,{R0,R1}
   \   000001CE   083E               SUBS     R6,R6,#+8
   \   000001D0   0CE2               B        ??HTTP_QueryResponse_4
   1386                                         
   1387                                    break; 
   1388                                    
   1389                                    case HTTP_GET: 
   1390                               
   1391                                          pTxt=pTxt;
   1392                                          char ZmType=0;
   \                     ??HTTP_QueryResponse_3:
   \   000001D2   6846               MOV      R0,SP
   \   000001D4   0021               MOVS     R1,#+0
   \   000001D6   0170               STRB     R1,[R0, #+0]
   1393                                          char ZmNr=0;      //numer zmiennej lub wêz³a
   \   000001D8   0026               MOVS     R6,#+0
   1394                                          char PortNr=0;
   \   000001DA   0027               MOVS     R7,#+0
   1395                                          char IlCyfr;
   1396                                          short int NNW=StrToWord(pTxt, &IlCyfr);         //numer najnowszego wpisu
   \   000001DC   00A9               ADD      R1,SP,#+0
   \   000001DE   491C               ADDS     R1,R1,#+1
   \   000001E0   2800               MOVS     R0,R5
   \   000001E2   ........           BL       StrToWord
   \   000001E6   6946               MOV      R1,SP
   \   000001E8   4880               STRH     R0,[R1, #+2]
   1397                                          short int NW=NNW;
   \   000001EA   6946               MOV      R1,SP
   \   000001EC   0220               MOVS     R0,#+2
   \   000001EE   085E               LDRSH    R0,[R1, R0]
   1398                                          pTxt+=IlCyfr+1;
   \   000001F0   6946               MOV      R1,SP
   \   000001F2   4978               LDRB     R1,[R1, #+1]
   \   000001F4   6D18               ADDS     R5,R5,R1
   \   000001F6   6D1C               ADDS     R5,R5,#+1
   1399                                          ZmType=*pTxt; pTxt++;
   \   000001F8   6946               MOV      R1,SP
   \   000001FA   2A78               LDRB     R2,[R5, #+0]
   \   000001FC   0A70               STRB     R2,[R1, #+0]
   \   000001FE   6D1C               ADDS     R5,R5,#+1
   1400                                          ZmNr=(pTxt[0]-48)*10+pTxt[1]-48;
   \   00000200   2978               LDRB     R1,[R5, #+0]
   \   00000202   0A22               MOVS     R2,#+10
   \   00000204   5143               MULS     R1,R2,R1
   \   00000206   6A78               LDRB     R2,[R5, #+1]
   \   00000208   8918               ADDS     R1,R1,R2
   \   0000020A   1039               SUBS     R1,R1,#+16
   \   0000020C   0E00               MOVS     R6,R1
   1401                                          PortNr=(pTxt[2]-48)*10+pTxt[3]-48;
   \   0000020E   A978               LDRB     R1,[R5, #+2]
   \   00000210   0A22               MOVS     R2,#+10
   \   00000212   5143               MULS     R1,R2,R1
   \   00000214   EA78               LDRB     R2,[R5, #+3]
   \   00000216   8918               ADDS     R1,R1,R2
   \   00000218   1039               SUBS     R1,R1,#+16
   \   0000021A   0F00               MOVS     R7,R1
   1402                                          pTxt+=3;
   \   0000021C   ED1C               ADDS     R5,R5,#+3
   \   0000021E   39E0               B        ??HTTP_QueryResponse_15
   1403                                          while (((ZmType=='a') || (ZmType=='b') || (ZmType=='c') || (ZmType=='d') || (ZmType=='e') || (ZmType=='q')) && (NW>Net->HTTP.LastForseOrderNr) && (Net->HTTP.LastForseOrderNr!=0) )
   1404                                          {
   1405                                            switch (ZmType) 
   1406                                            {
   1407                                              case 'a': ////zmienne analogowe
   1408                                                  VariablesAnal[ZmNr]=StrToWord(pTxt, &IlCyfr);
   1409                                                  pTxt+=IlCyfr+2;
   1410                                              break;
   1411                                                
   1412                                              case 'b':  //zmienne dwustanowe 
   1413                                                   
   1414                                                if ((*pTxt=='1'))
   1415                                                 {
   1416                                                   Variables[ZmNr/8] |= 1<<(ZmNr%8);
   1417                                                 }
   1418                                                else if ((*pTxt=='2'))
   1419                                                 {
   1420                                                   Variables[ZmNr/8] |= 1<<(ZmNr%8);
   1421                                                   VariablesImpulse[ZmNr/8] |= 1<<(ZmNr%8);
   1422                                                 }
   1423                                                 else
   1424                                                 { 
   1425                                                   Variables[ZmNr/8]&= ~(1<<(ZmNr%8));
   1426                                                 }
   1427                                                   pTxt+=3;
   1428                                              break;  
   1429                                              
   1430                                              case 'c': //zmienne specjalne analogowe
   1431                       
   1432                                                  pTxt+=IlCyfr+2;
   1433                                              break;
   1434                                                
   1435                                              case 'd': //zmienne specjalne dwustanowe
   1436                                                   if (*pTxt=='0') SetSpecialBinarVar(ZmNr, 0, Net); else SetSpecialBinarVar(ZmNr, 1, Net);   
   1437                                                   pTxt+=3;
   1438                                              break;
   1439                                              
   1440                                              case 'e': //konfiguracja
   1441                                                if (ZmNr==1)    //serwer ¿¹da pobrania nowej konfiguracji 
   1442                                                  {
   1443                                                    if (*pTxt=='0') Net->Status.NextHttpOrder=HTTP_GET_Config;
   1444                                                  }                               
   1445                                                   pTxt+=3;
   1446                                              break;
   1447                                              
   1448                                              case 'q':  //zmienne dwustanowe 
   1449                                                pTxt+=2;   
   1450                                                if ((*pTxt=='1'))
   1451                                                 {
   1452                                                    PortStageSet((&(MainStage.StageQ[ZmNr].Port)),PortNr,1);
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   1453                                                 } 
   1454                                                else if ((*pTxt=='2'))
   1455                                                 {
   1456                                                    PortStageSet((&(MainStage.StageQ[ZmNr].Port)),PortNr,1);
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   1457                                                    PortStageSet((&(MainStage.StageQImpulse[ZmNr])),PortNr,1);   //ustawienie flagi impuls
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   1458                                                 }
   1459                                                 else
   1460                                                 { 
   1461                                                    PortStageSet((&(MainStage.StageQ[ZmNr].Port)),PortNr,0);
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"

                   switch (Net->Status.CurrentOrder)     
                   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c",1357  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "ZmType" (declared at line 1392 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "ZmNr" (declared at line 1393 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "PortNr" (declared at line 1394 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "NNW" (declared at line 1396 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "NW" (declared at line 1397 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
   \                     ??HTTP_QueryResponse_16:
   \   00000220   0022               MOVS     R2,#+0
   \   00000222   3900               MOVS     R1,R7
   \   00000224   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000226   090E               LSRS     R1,R1,#+24
   \   00000228   5548               LDR      R0,??HTTP_QueryResponse_1+0x10  ;; 0x3a2
   \   0000022A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000022C   360E               LSRS     R6,R6,#+24
   \   0000022E   1623               MOVS     R3,#+22
   \   00000230   7343               MULS     R3,R6,R3
   \   00000232   544F               LDR      R7,??HTTP_QueryResponse_1+0x14  ;; MainStage
   \   00000234   FB18               ADDS     R3,R7,R3
   \   00000236   1818               ADDS     R0,R3,R0
   \   00000238   ........           BL       PortStageSet
   1462                                                 }
   1463                                                 if (TransQuality.Mensur[ZmNr-1]>0)  MainStage.SendStageChange[ZmNr]=ChangeStageFlag;
   \                     ??HTTP_QueryResponse_17:
   \   0000023C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000023E   360E               LSRS     R6,R6,#+24
   \   00000240   0420               MOVS     R0,#+4
   \   00000242   7043               MULS     R0,R6,R0
   \   00000244   5049               LDR      R1,??HTTP_QueryResponse_1+0x18  ;; TransQuality
   \   00000246   0818               ADDS     R0,R1,R0
   \   00000248   806C               LDR      R0,[R0, #+72]
   \   0000024A   0028               CMP      R0,#+0
   \   0000024C   07D0               BEQ      ??HTTP_QueryResponse_18
   \   0000024E   4F48               LDR      R0,??HTTP_QueryResponse_1+0x1C  ;; 0x6eb
   \   00000250   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000252   360E               LSRS     R6,R6,#+24
   \   00000254   4B49               LDR      R1,??HTTP_QueryResponse_1+0x14  ;; MainStage
   \   00000256   8919               ADDS     R1,R1,R6
   \   00000258   4D4A               LDR      R2,??HTTP_QueryResponse_1+0x20  ;; ChangeStageFlag
   \   0000025A   1278               LDRB     R2,[R2, #+0]
   \   0000025C   0A54               STRB     R2,[R1, R0]
   1464                                                 pTxt+=3;
   \                     ??HTTP_QueryResponse_18:
   \   0000025E   ED1C               ADDS     R5,R5,#+3
   1465                                              break;  
   1466                                            }
   1467                                            
   1468                                            
   1469                                            NW=StrToWord(pTxt, &IlCyfr);
   \                     ??HTTP_QueryResponse_19:
   \   00000260   00A9               ADD      R1,SP,#+0
   \   00000262   491C               ADDS     R1,R1,#+1
   \   00000264   2800               MOVS     R0,R5
   \   00000266   ........           BL       StrToWord
   1470                                            pTxt+=IlCyfr+1;
   \   0000026A   6946               MOV      R1,SP
   \   0000026C   4978               LDRB     R1,[R1, #+1]
   \   0000026E   6D18               ADDS     R5,R5,R1
   \   00000270   6D1C               ADDS     R5,R5,#+1
   1471                                            ZmType=*pTxt; pTxt++;
   \   00000272   6946               MOV      R1,SP
   \   00000274   2A78               LDRB     R2,[R5, #+0]
   \   00000276   0A70               STRB     R2,[R1, #+0]
   \   00000278   6D1C               ADDS     R5,R5,#+1
   1472                                            ZmNr=(pTxt[0]-48)*10+pTxt[1]-48;
   \   0000027A   2978               LDRB     R1,[R5, #+0]
   \   0000027C   0A22               MOVS     R2,#+10
   \   0000027E   5143               MULS     R1,R2,R1
   \   00000280   6A78               LDRB     R2,[R5, #+1]
   \   00000282   8E18               ADDS     R6,R1,R2
   \   00000284   103E               SUBS     R6,R6,#+16
   1473                                            PortNr=(pTxt[2]-48)*10+pTxt[2]-48;
   \   00000286   A978               LDRB     R1,[R5, #+2]
   \   00000288   0A22               MOVS     R2,#+10
   \   0000028A   5143               MULS     R1,R2,R1
   \   0000028C   AA78               LDRB     R2,[R5, #+2]
   \   0000028E   8F18               ADDS     R7,R1,R2
   \   00000290   103F               SUBS     R7,R7,#+16
   1474                                            pTxt+=3;
   \   00000292   ED1C               ADDS     R5,R5,#+3
   \                     ??HTTP_QueryResponse_15:
   \   00000294   6946               MOV      R1,SP
   \   00000296   0978               LDRB     R1,[R1, #+0]
   \   00000298   6129               CMP      R1,#+97
   \   0000029A   14D0               BEQ      ??HTTP_QueryResponse_20
   \   0000029C   6946               MOV      R1,SP
   \   0000029E   0978               LDRB     R1,[R1, #+0]
   \   000002A0   6229               CMP      R1,#+98
   \   000002A2   10D0               BEQ      ??HTTP_QueryResponse_20
   \   000002A4   6946               MOV      R1,SP
   \   000002A6   0978               LDRB     R1,[R1, #+0]
   \   000002A8   6329               CMP      R1,#+99
   \   000002AA   0CD0               BEQ      ??HTTP_QueryResponse_20
   \   000002AC   6946               MOV      R1,SP
   \   000002AE   0978               LDRB     R1,[R1, #+0]
   \   000002B0   6429               CMP      R1,#+100
   \   000002B2   08D0               BEQ      ??HTTP_QueryResponse_20
   \   000002B4   6946               MOV      R1,SP
   \   000002B6   0978               LDRB     R1,[R1, #+0]
   \   000002B8   6529               CMP      R1,#+101
   \   000002BA   04D0               BEQ      ??HTTP_QueryResponse_20
   \   000002BC   6946               MOV      R1,SP
   \   000002BE   0978               LDRB     R1,[R1, #+0]
   \   000002C0   7129               CMP      R1,#+113
   \   000002C2   00D0               BEQ      .+4
   \   000002C4   29E1               B        ??HTTP_QueryResponse_21
   \                     ??HTTP_QueryResponse_20:
   \   000002C6   F421               MOVS     R1,#+244
   \   000002C8   615E               LDRSH    R1,[R4, R1]
   \   000002CA   0004               LSLS     R0,R0,#+16       ;; SignExtS R0,R0,#+16,#+16
   \   000002CC   0014               ASRS     R0,R0,#+16
   \   000002CE   8142               CMP      R1,R0
   \   000002D0   00DB               BLT      .+4
   \   000002D2   22E1               B        ??HTTP_QueryResponse_21
   \   000002D4   F420               MOVS     R0,#+244
   \   000002D6   205E               LDRSH    R0,[R4, R0]
   \   000002D8   0028               CMP      R0,#+0
   \   000002DA   00D1               BNE      .+4
   \   000002DC   1DE1               B        ??HTTP_QueryResponse_21
   \   000002DE   6846               MOV      R0,SP
   \   000002E0   0078               LDRB     R0,[R0, #+0]
   \   000002E2   6128               CMP      R0,#+97
   \   000002E4   0ED0               BEQ      ??HTTP_QueryResponse_22
   \   000002E6   6228               CMP      R0,#+98
   \   000002E8   1CD0               BEQ      ??HTTP_QueryResponse_23
   \   000002EA   6328               CMP      R0,#+99
   \   000002EC   00D1               BNE      .+4
   \   000002EE   BAE0               B        ??HTTP_QueryResponse_24
   \   000002F0   6428               CMP      R0,#+100
   \   000002F2   00D1               BNE      .+4
   \   000002F4   BCE0               B        ??HTTP_QueryResponse_25
   \   000002F6   6528               CMP      R0,#+101
   \   000002F8   00D1               BNE      .+4
   \   000002FA   CDE0               B        ??HTTP_QueryResponse_26
   \   000002FC   7128               CMP      R0,#+113
   \   000002FE   00D1               BNE      .+4
   \   00000300   D5E0               B        ??HTTP_QueryResponse_27
   \   00000302   ADE7               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_22:
   \   00000304   00A9               ADD      R1,SP,#+0
   \   00000306   491C               ADDS     R1,R1,#+1
   \   00000308   2800               MOVS     R0,R5
   \   0000030A   ........           BL       StrToWord
   \   0000030E   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000310   360E               LSRS     R6,R6,#+24
   \   00000312   0221               MOVS     R1,#+2
   \   00000314   4E43               MULS     R6,R1,R6
   \   00000316   C049               LDR      R1,??HTTP_QueryResponse_28  ;; VariablesAnal
   \   00000318   8853               STRH     R0,[R1, R6]
   \   0000031A   6846               MOV      R0,SP
   \   0000031C   4078               LDRB     R0,[R0, #+1]
   \   0000031E   2D18               ADDS     R5,R5,R0
   \   00000320   AD1C               ADDS     R5,R5,#+2
   \   00000322   9DE7               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_23:
   \   00000324   2878               LDRB     R0,[R5, #+0]
   \   00000326   3128               CMP      R0,#+49
   \   00000328   34D1               BNE      ??HTTP_QueryResponse_29
   \   0000032A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000032C   360E               LSRS     R6,R6,#+24
   \   0000032E   3000               MOVS     R0,R6
   \   00000330   0821               MOVS     R1,#+8
   \   00000332   ........           BL       __aeabi_idivmod
   \   00000336   B949               LDR      R1,??HTTP_QueryResponse_28+0x4  ;; Variables
   \   00000338   01B5               PUSH     {R0,LR}
   \   0000033A   0191               STR      R1,[SP, #+4]
   \   0000033C   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000033E   360E               LSRS     R6,R6,#+24
   \   00000340   3000               MOVS     R0,R6
   \   00000342   0821               MOVS     R1,#+8
   \   00000344   ........           BL       __aeabi_idivmod
   \   00000348   B449               LDR      R1,??HTTP_QueryResponse_28+0x4  ;; Variables
   \   0000034A   085C               LDRB     R0,[R1, R0]
   \   0000034C   01B5               PUSH     {R0,LR}
   \   0000034E   0127               MOVS     R7,#+1
   \   00000350   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000352   360E               LSRS     R6,R6,#+24
   \   00000354   3000               MOVS     R0,R6
   \   00000356   0821               MOVS     R1,#+8
   \   00000358   ........           BL       __aeabi_idivmod
   \   0000035C   8F40               LSLS     R7,R7,R1
   \   0000035E   0098               LDR      R0,[SP, #0]
   \   00000360   02B0               ADD      SP,SP,#+8
   \   00000362   0743               ORRS     R7,R7,R0
   \   00000364   0199               LDR      R1,[SP, #+4]
   \   00000366   0098               LDR      R0,[SP, #0]
   \   00000368   02B0               ADD      SP,SP,#+8
   \   0000036A   0F54               STRB     R7,[R1, R0]
   \   0000036C   79E0               B        ??HTTP_QueryResponse_30
   \   0000036E   C046               Nop      
   \                     ??HTTP_QueryResponse_1:
   \   00000370   ........           DC32     g_counter
   \   00000374   ........           DC32     `?<Constant "\\r\\n\\r\\n">`
   \   00000378   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   0000037C   10270000           DC32     0x2710
   \   00000380   A2030000           DC32     0x3a2
   \   00000384   ........           DC32     MainStage
   \   00000388   ........           DC32     TransQuality
   \   0000038C   EB060000           DC32     0x6eb
   \   00000390   ........           DC32     ChangeStageFlag
   \                     ??HTTP_QueryResponse_29:
   \   00000394   2878               LDRB     R0,[R5, #+0]
   \   00000396   3228               CMP      R0,#+50
   \   00000398   42D1               BNE      ??HTTP_QueryResponse_31
   \   0000039A   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000039C   360E               LSRS     R6,R6,#+24
   \   0000039E   3000               MOVS     R0,R6
   \   000003A0   0821               MOVS     R1,#+8
   \   000003A2   ........           BL       __aeabi_idivmod
   \   000003A6   9D49               LDR      R1,??HTTP_QueryResponse_28+0x4  ;; Variables
   \   000003A8   01B5               PUSH     {R0,LR}
   \   000003AA   0191               STR      R1,[SP, #+4]
   \   000003AC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003AE   360E               LSRS     R6,R6,#+24
   \   000003B0   3000               MOVS     R0,R6
   \   000003B2   0821               MOVS     R1,#+8
   \   000003B4   ........           BL       __aeabi_idivmod
   \   000003B8   9849               LDR      R1,??HTTP_QueryResponse_28+0x4  ;; Variables
   \   000003BA   085C               LDRB     R0,[R1, R0]
   \   000003BC   01B5               PUSH     {R0,LR}
   \   000003BE   0127               MOVS     R7,#+1
   \   000003C0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003C2   360E               LSRS     R6,R6,#+24
   \   000003C4   3000               MOVS     R0,R6
   \   000003C6   0821               MOVS     R1,#+8
   \   000003C8   ........           BL       __aeabi_idivmod
   \   000003CC   8F40               LSLS     R7,R7,R1
   \   000003CE   0098               LDR      R0,[SP, #0]
   \   000003D0   02B0               ADD      SP,SP,#+8
   \   000003D2   0743               ORRS     R7,R7,R0
   \   000003D4   0199               LDR      R1,[SP, #+4]
   \   000003D6   0098               LDR      R0,[SP, #0]
   \   000003D8   02B0               ADD      SP,SP,#+8
   \   000003DA   0F54               STRB     R7,[R1, R0]
   \   000003DC   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003DE   360E               LSRS     R6,R6,#+24
   \   000003E0   3000               MOVS     R0,R6
   \   000003E2   0821               MOVS     R1,#+8
   \   000003E4   ........           BL       __aeabi_idivmod
   \   000003E8   8D49               LDR      R1,??HTTP_QueryResponse_28+0x8  ;; VariablesImpulse
   \   000003EA   01B5               PUSH     {R0,LR}
   \   000003EC   0191               STR      R1,[SP, #+4]
   \   000003EE   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000003F0   360E               LSRS     R6,R6,#+24
   \   000003F2   3000               MOVS     R0,R6
   \   000003F4   0821               MOVS     R1,#+8
   \   000003F6   ........           BL       __aeabi_idivmod
   \   000003FA   8949               LDR      R1,??HTTP_QueryResponse_28+0x8  ;; VariablesImpulse
   \   000003FC   085C               LDRB     R0,[R1, R0]
   \   000003FE   01B5               PUSH     {R0,LR}
   \   00000400   0127               MOVS     R7,#+1
   \   00000402   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000404   360E               LSRS     R6,R6,#+24
   \   00000406   3000               MOVS     R0,R6
   \   00000408   0821               MOVS     R1,#+8
   \   0000040A   ........           BL       __aeabi_idivmod
   \   0000040E   8F40               LSLS     R7,R7,R1
   \   00000410   0098               LDR      R0,[SP, #0]
   \   00000412   02B0               ADD      SP,SP,#+8
   \   00000414   0743               ORRS     R7,R7,R0
   \   00000416   0199               LDR      R1,[SP, #+4]
   \   00000418   0098               LDR      R0,[SP, #0]
   \   0000041A   02B0               ADD      SP,SP,#+8
   \   0000041C   0F54               STRB     R7,[R1, R0]
   \   0000041E   20E0               B        ??HTTP_QueryResponse_30
   \                     ??HTTP_QueryResponse_31:
   \   00000420   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000422   360E               LSRS     R6,R6,#+24
   \   00000424   3000               MOVS     R0,R6
   \   00000426   0821               MOVS     R1,#+8
   \   00000428   ........           BL       __aeabi_idivmod
   \   0000042C   7B4A               LDR      R2,??HTTP_QueryResponse_28+0x4  ;; Variables
   \   0000042E   01B5               PUSH     {R0,LR}
   \   00000430   0192               STR      R2,[SP, #+4]
   \   00000432   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000434   360E               LSRS     R6,R6,#+24
   \   00000436   3000               MOVS     R0,R6
   \   00000438   0821               MOVS     R1,#+8
   \   0000043A   ........           BL       __aeabi_idivmod
   \   0000043E   7749               LDR      R1,??HTTP_QueryResponse_28+0x4  ;; Variables
   \   00000440   095C               LDRB     R1,[R1, R0]
   \   00000442   02B5               PUSH     {R1,LR}
   \   00000444   0127               MOVS     R7,#+1
   \   00000446   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000448   360E               LSRS     R6,R6,#+24
   \   0000044A   3000               MOVS     R0,R6
   \   0000044C   0821               MOVS     R1,#+8
   \   0000044E   ........           BL       __aeabi_idivmod
   \   00000452   8F40               LSLS     R7,R7,R1
   \   00000454   0099               LDR      R1,[SP, #0]
   \   00000456   02B0               ADD      SP,SP,#+8
   \   00000458   B943               BICS     R1,R1,R7
   \   0000045A   019A               LDR      R2,[SP, #+4]
   \   0000045C   0098               LDR      R0,[SP, #0]
   \   0000045E   02B0               ADD      SP,SP,#+8
   \   00000460   1154               STRB     R1,[R2, R0]
   \                     ??HTTP_QueryResponse_30:
   \   00000462   ED1C               ADDS     R5,R5,#+3
   \   00000464   FCE6               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_24:
   \   00000466   6846               MOV      R0,SP
   \   00000468   4078               LDRB     R0,[R0, #+1]
   \   0000046A   2D18               ADDS     R5,R5,R0
   \   0000046C   AD1C               ADDS     R5,R5,#+2
   \   0000046E   F7E6               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_25:
   \   00000470   2878               LDRB     R0,[R5, #+0]
   \   00000472   3028               CMP      R0,#+48
   \   00000474   07D1               BNE      ??HTTP_QueryResponse_32
   \   00000476   2200               MOVS     R2,R4
   \   00000478   0021               MOVS     R1,#+0
   \   0000047A   3000               MOVS     R0,R6
   \   0000047C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000047E   000E               LSRS     R0,R0,#+24
   \   00000480   ........           BL       SetSpecialBinarVar
   \   00000484   06E0               B        ??HTTP_QueryResponse_33
   \                     ??HTTP_QueryResponse_32:
   \   00000486   2200               MOVS     R2,R4
   \   00000488   0121               MOVS     R1,#+1
   \   0000048A   3000               MOVS     R0,R6
   \   0000048C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000048E   000E               LSRS     R0,R0,#+24
   \   00000490   ........           BL       SetSpecialBinarVar
   \                     ??HTTP_QueryResponse_33:
   \   00000494   ED1C               ADDS     R5,R5,#+3
   \   00000496   E3E6               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_26:
   \   00000498   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   0000049A   360E               LSRS     R6,R6,#+24
   \   0000049C   012E               CMP      R6,#+1
   \   0000049E   04D1               BNE      ??HTTP_QueryResponse_34
   \   000004A0   2878               LDRB     R0,[R5, #+0]
   \   000004A2   3028               CMP      R0,#+48
   \   000004A4   01D1               BNE      ??HTTP_QueryResponse_34
   \   000004A6   1420               MOVS     R0,#+20
   \   000004A8   E070               STRB     R0,[R4, #+3]
   \                     ??HTTP_QueryResponse_34:
   \   000004AA   ED1C               ADDS     R5,R5,#+3
   \   000004AC   D8E6               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_27:
   \   000004AE   AD1C               ADDS     R5,R5,#+2
   \   000004B0   2878               LDRB     R0,[R5, #+0]
   \   000004B2   3128               CMP      R0,#+49
   \   000004B4   0ED1               BNE      ??HTTP_QueryResponse_35
   \   000004B6   0122               MOVS     R2,#+1
   \   000004B8   3900               MOVS     R1,R7
   \   000004BA   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000004BC   090E               LSRS     R1,R1,#+24
   \   000004BE   5948               LDR      R0,??HTTP_QueryResponse_28+0xC  ;; 0x3a2
   \   000004C0   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004C2   360E               LSRS     R6,R6,#+24
   \   000004C4   1623               MOVS     R3,#+22
   \   000004C6   7343               MULS     R3,R6,R3
   \   000004C8   574F               LDR      R7,??HTTP_QueryResponse_28+0x10  ;; MainStage
   \   000004CA   FB18               ADDS     R3,R7,R3
   \   000004CC   1818               ADDS     R0,R3,R0
   \   000004CE   ........           BL       PortStageSet
   \   000004D2   B3E6               B        ??HTTP_QueryResponse_17
   \                     ??HTTP_QueryResponse_35:
   \   000004D4   2878               LDRB     R0,[R5, #+0]
   \   000004D6   3228               CMP      R0,#+50
   \   000004D8   00D0               BEQ      .+4
   \   000004DA   A1E6               B        ??HTTP_QueryResponse_16
   \   000004DC   0122               MOVS     R2,#+1
   \   000004DE   3900               MOVS     R1,R7
   \   000004E0   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   000004E2   090E               LSRS     R1,R1,#+24
   \   000004E4   4F4B               LDR      R3,??HTTP_QueryResponse_28+0xC  ;; 0x3a2
   \   000004E6   9C46               MOV      R12,R3
   \   000004E8   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   000004EA   360E               LSRS     R6,R6,#+24
   \   000004EC   1623               MOVS     R3,#+22
   \   000004EE   7343               MULS     R3,R6,R3
   \   000004F0   4D48               LDR      R0,??HTTP_QueryResponse_28+0x10  ;; MainStage
   \   000004F2   C018               ADDS     R0,R0,R3
   \   000004F4   6346               MOV      R3,R12
   \   000004F6   C018               ADDS     R0,R0,R3
   \   000004F8   ........           BL       PortStageSet
   \   000004FC   0122               MOVS     R2,#+1
   \   000004FE   3900               MOVS     R1,R7
   \   00000500   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000502   090E               LSRS     R1,R1,#+24
   \   00000504   4948               LDR      R0,??HTTP_QueryResponse_28+0x14  ;; 0x6a4
   \   00000506   3606               LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
   \   00000508   360E               LSRS     R6,R6,#+24
   \   0000050A   0223               MOVS     R3,#+2
   \   0000050C   7343               MULS     R3,R6,R3
   \   0000050E   464F               LDR      R7,??HTTP_QueryResponse_28+0x10  ;; MainStage
   \   00000510   FB18               ADDS     R3,R7,R3
   \   00000512   1818               ADDS     R0,R3,R0
   \   00000514   ........           BL       PortStageSet
   \   00000518   90E6               B        ??HTTP_QueryResponse_17
   1475                                          
   1476                                        }
   1477                                        
   1478                                        if (NNW>Net->HTTP.LastForseOrderNr) 
   \                     ??HTTP_QueryResponse_21:
   \   0000051A   F420               MOVS     R0,#+244
   \   0000051C   205E               LDRSH    R0,[R4, R0]
   \   0000051E   6A46               MOV      R2,SP
   \   00000520   0221               MOVS     R1,#+2
   \   00000522   515E               LDRSH    R1,[R2, R1]
   \   00000524   8842               CMP      R0,R1
   \   00000526   04DA               BGE      ??HTTP_QueryResponse_36
   1479                                        {
   1480                                          Net->HTTP.LastForseOrderNr=NNW;
   \   00000528   F420               MOVS     R0,#+244
   \   0000052A   6946               MOV      R1,SP
   \   0000052C   4988               LDRH     R1,[R1, #+2]
   \   0000052E   2152               STRH     R1,[R4, R0]
   \   00000530   0DE0               B        ??HTTP_QueryResponse_37
   1481                                        }else if ((NNW==0) && (Net->HTTP.LastForseOrderNr>0))
   \                     ??HTTP_QueryResponse_36:
   \   00000532   6946               MOV      R1,SP
   \   00000534   0220               MOVS     R0,#+2
   \   00000536   085E               LDRSH    R0,[R1, R0]
   \   00000538   0028               CMP      R0,#+0
   \   0000053A   08D1               BNE      ??HTTP_QueryResponse_37
   \   0000053C   F420               MOVS     R0,#+244
   \   0000053E   205E               LDRSH    R0,[R4, R0]
   \   00000540   0128               CMP      R0,#+1
   \   00000542   04DB               BLT      ??HTTP_QueryResponse_37
   1482                                        {
   1483                                          Net->HTTP.LastForseOrderNr=0;
   \   00000544   F420               MOVS     R0,#+244
   \   00000546   0021               MOVS     R1,#+0
   \   00000548   2152               STRH     R1,[R4, R0]
   1484                                          Net->Status.NextHttpOrder=HTTP_GET_Config;
   \   0000054A   1420               MOVS     R0,#+20
   \   0000054C   E070               STRB     R0,[R4, #+3]
   1485                                        }
   1486                                       
   1487                                        for (char i=0; i<20; i++) Buff_RX[i]=0;
   \                     ??HTTP_QueryResponse_37:
   \   0000054E   0020               MOVS     R0,#+0
   \   00000550   05E0               B        ??HTTP_QueryResponse_38
   \                     ??HTTP_QueryResponse_39:
   \   00000552   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000554   000E               LSRS     R0,R0,#+24
   \   00000556   0299               LDR      R1,[SP, #+8]
   \   00000558   0022               MOVS     R2,#+0
   \   0000055A   0A54               STRB     R2,[R1, R0]
   \   0000055C   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_QueryResponse_38:
   \   0000055E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000560   000E               LSRS     R0,R0,#+24
   \   00000562   1428               CMP      R0,#+20
   \   00000564   F5D3               BCC      ??HTTP_QueryResponse_39
   1488                                        Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   00000566   0020               MOVS     R0,#+0
   \   00000568   A070               STRB     R0,[R4, #+2]
   1489                                        Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000056A   2600               MOVS     R6,R4
   \   0000056C   3836               ADDS     R6,R6,#+56
   \   0000056E   3048               LDR      R0,??HTTP_QueryResponse_28+0x18  ;; g_counter
   \   00000570   0CC8               LDM      R0!,{R2,R3}
   \   00000572   0838               SUBS     R0,R0,#+8
   \   00000574   2F48               LDR      R0,??HTTP_QueryResponse_28+0x1C  ;; 0x2710
   \   00000576   0021               MOVS     R1,#+0
   \   00000578   8018               ADDS     R0,R0,R2
   \   0000057A   5941               ADCS     R1,R1,R3
   \   0000057C   03C6               STM      R6!,{R0,R1}
   \   0000057E   083E               SUBS     R6,R6,#+8
   1490                                        Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100);   //restart czasu pomiêdzy odpytaniami HTTP.
   \   00000580   2600               MOVS     R6,R4
   \   00000582   3036               ADDS     R6,R6,#+48
   \   00000584   2A48               LDR      R0,??HTTP_QueryResponse_28+0x18  ;; g_counter
   \   00000586   0CC8               LDM      R0!,{R2,R3}
   \   00000588   0838               SUBS     R0,R0,#+8
   \   0000058A   EE20               MOVS     R0,#+238
   \   0000058C   205E               LDRSH    R0,[R4, R0]
   \   0000058E   6421               MOVS     R1,#+100
   \   00000590   4843               MULS     R0,R1,R0
   \   00000592   C117               ASRS     R1,R0,#+31
   \   00000594   8018               ADDS     R0,R0,R2
   \   00000596   5941               ADCS     R1,R1,R3
   \   00000598   03C6               STM      R6!,{R0,R1}
   \   0000059A   083E               SUBS     R6,R6,#+8
   \   0000059C   26E0               B        ??HTTP_QueryResponse_4
   1491                                    break; 
   1492                                    
   1493                                    case HTTP_POST:
   1494          
   1495                                        for (char i=0; i<20; i++) Buff_RX[i]=0;
   \                     ??HTTP_QueryResponse_2:
   \   0000059E   0020               MOVS     R0,#+0
   \   000005A0   05E0               B        ??HTTP_QueryResponse_40
   \                     ??HTTP_QueryResponse_41:
   \   000005A2   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005A4   000E               LSRS     R0,R0,#+24
   \   000005A6   0299               LDR      R1,[SP, #+8]
   \   000005A8   0022               MOVS     R2,#+0
   \   000005AA   0A54               STRB     R2,[R1, R0]
   \   000005AC   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_QueryResponse_40:
   \   000005AE   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000005B0   000E               LSRS     R0,R0,#+24
   \   000005B2   1428               CMP      R0,#+20
   \   000005B4   F5D3               BCC      ??HTTP_QueryResponse_41
   1496                                        Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   000005B6   0020               MOVS     R0,#+0
   \   000005B8   A070               STRB     R0,[R4, #+2]
   1497                                        Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000005BA   2600               MOVS     R6,R4
   \   000005BC   3836               ADDS     R6,R6,#+56
   \   000005BE   1C48               LDR      R0,??HTTP_QueryResponse_28+0x18  ;; g_counter
   \   000005C0   0CC8               LDM      R0!,{R2,R3}
   \   000005C2   0838               SUBS     R0,R0,#+8
   \   000005C4   1B48               LDR      R0,??HTTP_QueryResponse_28+0x1C  ;; 0x2710
   \   000005C6   0021               MOVS     R1,#+0
   \   000005C8   8018               ADDS     R0,R0,R2
   \   000005CA   5941               ADCS     R1,R1,R3
   \   000005CC   03C6               STM      R6!,{R0,R1}
   \   000005CE   083E               SUBS     R6,R6,#+8
   1498                                        Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100);   //restart czasu pomiêdzy odpytaniami HTTP.
   \   000005D0   2600               MOVS     R6,R4
   \   000005D2   3036               ADDS     R6,R6,#+48
   \   000005D4   1648               LDR      R0,??HTTP_QueryResponse_28+0x18  ;; g_counter
   \   000005D6   0CC8               LDM      R0!,{R2,R3}
   \   000005D8   0838               SUBS     R0,R0,#+8
   \   000005DA   EE20               MOVS     R0,#+238
   \   000005DC   205E               LDRSH    R0,[R4, R0]
   \   000005DE   6421               MOVS     R1,#+100
   \   000005E0   4843               MULS     R0,R1,R0
   \   000005E2   C117               ASRS     R1,R0,#+31
   \   000005E4   8018               ADDS     R0,R0,R2
   \   000005E6   5941               ADCS     R1,R1,R3
   \   000005E8   03C6               STM      R6!,{R0,R1}
   \   000005EA   083E               SUBS     R6,R6,#+8
   1499                                   break;
   1500                                   
   1501                                   
   1502                               } //koniec switch (Net->Status.CurrentOrder)
   1503                           
   1504                            
   1505                              //Zg³oszone zamkniête po³¹czenie
   1506                           
   1507                              if ((strstr(Buff_RX, "Connection: close")!=NULL) /*&& (Net->Status.HostLink==CONNECTED)*/) 
   \                     ??HTTP_QueryResponse_4:
   \   000005EC   1249               LDR      R1,??HTTP_QueryResponse_28+0x20  ;; `?<Constant "Connection: close">`
   \   000005EE   0298               LDR      R0,[SP, #+8]
   \   000005F0   ........           BL       strstr
   \   000005F4   0028               CMP      R0,#+0
   \   000005F6   08D0               BEQ      ??HTTP_QueryResponse_42
   1508                              {
   1509                                Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   000005F8   0D48               LDR      R0,??HTTP_QueryResponse_28+0x18  ;; g_counter
   \   000005FA   03C8               LDM      R0!,{R0,R1}
   \   000005FC   0022               MOVS     R2,#+0
   \   000005FE   3230               ADDS     R0,R0,#+50
   \   00000600   5141               ADCS     R1,R1,R2
   \   00000602   2064               STR      R0,[R4, #+64]
   \   00000604   6164               STR      R1,[R4, #+68]
   1510                                 Net->Status.HostLink=DISCONNECTING;                             //Roz³¹czenie
   \   00000606   0120               MOVS     R0,#+1
   \   00000608   6070               STRB     R0,[R4, #+1]
   1511                              }
   1512                          
   1513                           
   1514                           
   1515                           Net->Status.ResBytes=(int)pTxt -(int)Buff_RX;
   \                     ??HTTP_QueryResponse_42:
   \   0000060A   0298               LDR      R0,[SP, #+8]
   \   0000060C   281A               SUBS     R0,R5,R0
   \   0000060E   6083               STRH     R0,[R4, #+26]
   1516                         } //koniec if(pTxt!=NULL)
   1517                         
   1518          
   1519                   
   1520                   } 
   1521                   
   1522                
   1523            
   1524          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "HTTP_QueryResponse"
   \                     ??HTTP_QueryResponse_0:
   \   00000610   03B0               ADD      SP,SP,#+12
   \   00000612   F0BC               POP      {R4-R7}
   \   00000614   01BC               POP      {R0}
   \   00000616   0047               BX       R0               ;; return
   \                     ??HTTP_QueryResponse_28:
   \   00000618   ........           DC32     VariablesAnal
   \   0000061C   ........           DC32     Variables
   \   00000620   ........           DC32     VariablesImpulse
   \   00000624   A2030000           DC32     0x3a2
   \   00000628   ........           DC32     MainStage
   \   0000062C   A4060000           DC32     0x6a4
   \   00000630   ........           DC32     g_counter
   \   00000634   10270000           DC32     0x2710
   \   00000638   ........           DC32     `?<Constant "Connection: close">`
   1525          
   1526          
   1527          

   \                                 In section Debug.txt, align 4, keep-with-next
   1528          void HTTP_CheckConnection(char *Buff_TX, AT91PS_USART USART, _Net *Net)
   1529          {
   \                     HTTP_CheckConnection:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0800               MOVS     R0,R1
   \   00000004   1400               MOVS     R4,R2
   1530             Net->Status.FreezTime=g_counter+FREEZ_TIME; //rezerwowanie czasu
   \   00000006   1049               LDR      R1,??HTTP_CheckConnection_0  ;; g_counter
   \   00000008   0CC9               LDM      R1!,{R2,R3}
   \   0000000A   0839               SUBS     R1,R1,#+8
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   3232               ADDS     R2,R2,#+50
   \   00000010   4B41               ADCS     R3,R3,R1
   \   00000012   2264               STR      R2,[R4, #+64]
   \   00000014   6364               STR      R3,[R4, #+68]
   1531             Net->Status.CurrentOrder=WizFi_AT_CID;     
   \   00000016   1121               MOVS     R1,#+17
   \   00000018   A170               STRB     R1,[R4, #+2]
   1532             AT91F_US_SendFrame(USART,(char*)AT_CID,sizeof(AT_CID)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000001A   82B0               SUB      SP,SP,#+8
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   0091               STR      R1,[SP, #+0]
   \   00000020   0023               MOVS     R3,#+0
   \   00000022   0922               MOVS     R2,#+9
   \   00000024   0949               LDR      R1,??HTTP_CheckConnection_0+0x4  ;; AT_CID
   \   00000026   ........           BL       AT91F_US_SendFrame
   \   0000002A   02B0               ADD      SP,SP,#+8
   1533             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000002C   3834               ADDS     R4,R4,#+56
   \   0000002E   0648               LDR      R0,??HTTP_CheckConnection_0  ;; g_counter
   \   00000030   0CC8               LDM      R0!,{R2,R3}
   \   00000032   0838               SUBS     R0,R0,#+8
   \   00000034   0648               LDR      R0,??HTTP_CheckConnection_0+0x8  ;; 0x2710
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   8018               ADDS     R0,R0,R2
   \   0000003A   5941               ADCS     R1,R1,R3
   \   0000003C   03C4               STM      R4!,{R0,R1}
   \   0000003E   083C               SUBS     R4,R4,#+8
   1534             
   1535          }
   \   00000040   10BC               POP      {R4}
   \   00000042   01BC               POP      {R0}
   \   00000044   0047               BX       R0               ;; return
   \   00000046   C046               Nop      
   \                     ??HTTP_CheckConnection_0:
   \   00000048   ........           DC32     g_counter
   \   0000004C   ........           DC32     AT_CID
   \   00000050   10270000           DC32     0x2710
   1536          

   \                                 In section Debug.txt, align 4, keep-with-next
   1537          char HTTP_CheckConnectionResponse(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
   1538          {
   \                     HTTP_CheckConnectionResponse:
   \   00000000   F2B5               PUSH     {R1,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1700               MOVS     R7,R2
   \   00000006   1D00               MOVS     R5,R3
   1539             char odp=0;
   \   00000008   0026               MOVS     R6,#+0
   1540          
   1541          
   1542                  if ((strstr(Buff_RX, "[ERROR")!=NULL) || (strstr(Buff_RX, "No valid Cids")!=NULL))    //((Buff_RX, "[ERROR")!=NULL) ||       strstr(Buff_RX, "No valid Cids")!=NULL)
   \   0000000A   2F49               LDR      R1,??HTTP_CheckConnectionResponse_0  ;; `?<Constant "[ERROR">`
   \   0000000C   2000               MOVS     R0,R4
   \   0000000E   ........           BL       strstr
   \   00000012   0028               CMP      R0,#+0
   \   00000014   05D1               BNE      ??HTTP_CheckConnectionResponse_1
   \   00000016   2D49               LDR      R1,??HTTP_CheckConnectionResponse_0+0x4  ;; `?<Constant "No valid Cids">`
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       strstr
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   1ED0               BEQ      ??HTTP_CheckConnectionResponse_2
   1543                  {
   1544                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \                     ??HTTP_CheckConnectionResponse_1:
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   04E0               B        ??HTTP_CheckConnectionResponse_3
   \                     ??HTTP_CheckConnectionResponse_4:
   \   00000026   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000028   000E               LSRS     R0,R0,#+24
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   2154               STRB     R1,[R4, R0]
   \   0000002E   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_CheckConnectionResponse_3:
   \   00000030   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000032   000E               LSRS     R0,R0,#+24
   \   00000034   3228               CMP      R0,#+50
   \   00000036   F6D3               BCC      ??HTTP_CheckConnectionResponse_4
   1545                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000038   2C00               MOVS     R4,R5
   \   0000003A   3834               ADDS     R4,R4,#+56
   \   0000003C   2448               LDR      R0,??HTTP_CheckConnectionResponse_0+0x8  ;; g_counter
   \   0000003E   0CC8               LDM      R0!,{R2,R3}
   \   00000040   0838               SUBS     R0,R0,#+8
   \   00000042   2448               LDR      R0,??HTTP_CheckConnectionResponse_0+0xC  ;; 0x2710
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   8018               ADDS     R0,R0,R2
   \   00000048   5941               ADCS     R1,R1,R3
   \   0000004A   03C4               STM      R4!,{R0,R1}
   \   0000004C   083C               SUBS     R4,R4,#+8
   1546                    Net->Status.FreezTime=0;
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   2864               STR      R0,[R5, #+64]
   \   00000054   6964               STR      R1,[R5, #+68]
   1547                    Net->Status.HostLink=DISCONNECTED;
   \   00000056   0020               MOVS     R0,#+0
   \   00000058   6870               STRB     R0,[R5, #+1]
   1548                    Net->Status.CurrentOrder=WizFi_NC;
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   A870               STRB     R0,[R5, #+2]
   \   0000005E   2BE0               B        ??HTTP_CheckConnectionResponse_5
   1549                  }else if(strstr(Buff_RX, "[OK")!=NULL)
   \                     ??HTTP_CheckConnectionResponse_2:
   \   00000060   1DA1               ADR      R1,??HTTP_CheckConnectionResponse_0+0x10  ;; "[OK"
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       strstr
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   25D0               BEQ      ??HTTP_CheckConnectionResponse_5
   1550                  {
   1551                    odp=1;  //ok 
   \   0000006C   0126               MOVS     R6,#+1
   1552                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   04E0               B        ??HTTP_CheckConnectionResponse_6
   \                     ??HTTP_CheckConnectionResponse_7:
   \   00000072   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000074   000E               LSRS     R0,R0,#+24
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   2154               STRB     R1,[R4, R0]
   \   0000007A   401C               ADDS     R0,R0,#+1
   \                     ??HTTP_CheckConnectionResponse_6:
   \   0000007C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000007E   000E               LSRS     R0,R0,#+24
   \   00000080   3228               CMP      R0,#+50
   \   00000082   F6D3               BCC      ??HTTP_CheckConnectionResponse_7
   1553                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000084   2A00               MOVS     R2,R5
   \   00000086   3832               ADDS     R2,R2,#+56
   \   00000088   9446               MOV      R12,R2
   \   0000008A   1148               LDR      R0,??HTTP_CheckConnectionResponse_0+0x8  ;; g_counter
   \   0000008C   0CC8               LDM      R0!,{R2,R3}
   \   0000008E   0838               SUBS     R0,R0,#+8
   \   00000090   1048               LDR      R0,??HTTP_CheckConnectionResponse_0+0xC  ;; 0x2710
   \   00000092   0021               MOVS     R1,#+0
   \   00000094   8018               ADDS     R0,R0,R2
   \   00000096   5941               ADCS     R1,R1,R3
   \   00000098   6246               MOV      R2,R12
   \   0000009A   03C2               STM      R2!,{R0,R1}
   \   0000009C   083A               SUBS     R2,R2,#+8
   1554                    Net->Status.CurrentOrder=WizFi_NC;
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   A870               STRB     R0,[R5, #+2]
   1555                    HTTP_Task(Buff_RX, Buff_TX,USART, Net);                                //wykonaj kolejne zadanie HTTP
   \   000000A2   2B00               MOVS     R3,R5
   \   000000A4   3A00               MOVS     R2,R7
   \   000000A6   0099               LDR      R1,[SP, #+0]
   \   000000A8   2000               MOVS     R0,R4
   \   000000AA   ........           BL       HTTP_Task
   1556                    Net->Status.FreezTime=0;
   \   000000AE   4035               ADDS     R5,R5,#+64
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   03C5               STM      R5!,{R0,R1}
   \   000000B6   083D               SUBS     R5,R5,#+8
   1557                  }
   1558                    
   1559            
   1560             return odp;
   \                     ??HTTP_CheckConnectionResponse_5:
   \   000000B8   3000               MOVS     R0,R6
   \   000000BA   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   01B0               ADD      SP,SP,#+4
   \   000000C0   F0BC               POP      {R4-R7}
   \   000000C2   02BC               POP      {R1}
   \   000000C4   0847               BX       R1               ;; return
   \   000000C6   C046               Nop      
   \                     ??HTTP_CheckConnectionResponse_0:
   \   000000C8   ........           DC32     `?<Constant "[ERROR">`
   \   000000CC   ........           DC32     `?<Constant "No valid Cids">`
   \   000000D0   ........           DC32     g_counter
   \   000000D4   10270000           DC32     0x2710
   \   000000D8   5B4F4B00           DC8      "[OK"
   1561          }

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     WiFiDebug

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   10270000           DC32     0x2710

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   10270000           DC32     0x2710

   \                                 In section .rodata, align 4
   \   00000000   4F4B00             DC8 "OK"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   49503A00           DC8 "IP:"

   \                                 In section .rodata, align 4
   \                     `?<Constant "[CONNECT">`:
   \   00000000   5B434F4E4E45       DC8 "[CONNECT"
   \              435400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Reset">`:
   \   00000000   526573657400       DC8 "Reset"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "WiFi">`:
   \   00000000   5769466900         DC8 "WiFi"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   00                 DC8 ""
   \   00000001   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2000               DC8 " "
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "NO CID]">`:
   \   00000000   4E4F20434944       DC8 "NO CID]"
   \              5D00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "[ERROR">`:
   \   00000000   5B4552524F52       DC8 "[ERROR"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GET ">`:
   \   00000000   4745542000         DC8 "GET "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2F646300           DC8 "/dc"

   \                                 In section .rodata, align 4
   \   00000000   256400             DC8 "%d"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant ".csv HTTP/1.1\\r\\n">`:
   \   00000000   2E6373762048       DC8 ".csv HTTP/1.1\015\012"
   \              5454502F312E
   \              310D0A00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "User-Agent: CEURON\\r\\nH...">`:
   \   00000000   557365722D41       DC8 "User-Agent: CEURON\015\012Host: "
   \              67656E743A20
   \              434555524F4E
   \              0D0A486F7374
   \              3A2000      
   \   0000001B   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2E00               DC8 "."
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0D0A00             DC8 "\015\012"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connection: keep-alive\\r\\n">`:
   \   00000000   436F6E6E6563       DC8 "Connection: keep-alive\015\012"
   \              74696F6E3A20
   \              6B6565702D61
   \              6C6976650D0A
   \              00          
   \   00000019   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\n\\r\\n">`:
   \   00000000   0D0A0D0A00         DC8 "\015\012\015\012"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2F646F00           DC8 "/do"

   \                                 In section .rodata, align 4
   \                     `?<Constant "POST ">`:
   \   00000000   504F53542000       DC8 "POST "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "/putgate.php HTTP/1.1...">`:
   \   00000000   2F7075746761       DC8 "/putgate.php HTTP/1.1\015\012User-Agent: CEURON\015\012Host: "
   \              74652E706870
   \              20485454502F
   \              312E310D0A55
   \              7365722D4167
   \              656E743A2043
   \              4555524F4E0D
   \              0A486F73743A
   \              2000        
   \   00000032   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\nContent-Length: ">`:
   \   00000000   0D0A436F6E74       DC8 "\015\012Content-Length: "
   \              656E742D4C65
   \              6E6774683A20
   \              00          
   \   00000013   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   20202000           DC8 "   "

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\r\\nContent-Type: appli...">`:
   \   00000000   0D0A436F6E74       DC8 0DH, 0AH, 43H, 6FH, 6EH, 74H, 65H, 6EH
   \              656E        
   \   00000008   742D54797065       DC8 74H, 2DH, 54H, 79H, 70H, 65H, 3AH, 20H
   \              3A20        
   \   00000010   6170706C6963       DC8 61H, 70H, 70H, 6CH, 69H, 63H, 61H, 74H
   \              6174        
   \   00000018   696F6E2F782D       DC8 69H, 6FH, 6EH, 2FH, 78H, 2DH, 77H, 77H
   \              7777        
   \   00000020   772D666F726D       DC8 77H, 2DH, 66H, 6FH, 72H, 6DH, 2DH, 75H
   \              2D75        
   \   00000028   726C656E636F       DC8 72H, 6CH, 65H, 6EH, 63H, 6FH, 64H, 65H
   \              6465        
   \   00000030   640D0A0D0A4E       DC8 64H, 0DH, 0AH, 0DH, 0AH, 4EH, 6FH, 64H
   \              6F64        
   \   00000038   6549443D00         DC8 65H, 49H, 44H, 3DH, 0
   \   0000003D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "&Order=1&Content=;\\r\\n">`:
   \   00000000   264F72646572       DC8 "&Order=1&Content=;\015\012"
   \              3D3126436F6E
   \              74656E743D3B
   \              0D0A00      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Connection: close">`:
   \   00000000   436F6E6E6563       DC8 "Connection: close"
   \              74696F6E3A20
   \              636C6F736500
   \   00000012   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   5B4F4B00           DC8 "[OK"

   \                                 In section .rodata, align 4
   \                     `?<Constant "No valid Cids">`:
   \   00000000   4E6F2076616C       DC8 "No valid Cids"
   \              696420436964
   \              7300        
   \   0000000E   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AT91F_PDC_IsNextTxEmpty             0
     AT91F_PDC_IsTxEmpty                 0
     AT91F_PDC_SendFrame                24
     AT91F_PDC_SetNextTx                 0
     AT91F_PDC_SetTx                     0
     AT91F_US_SendFrame                 16
     AsciToHexStr                       24
     CheckExistDomenaIP                 16
     GetSpecialAnalogVar                 8
     GetSpecialBinarVar                 16
     HTTP_CheckConnection               16
     HTTP_CheckConnectionResponse       24
     HTTP_Query                         72
     HTTP_QueryResponse                 48
     SetSpecialBinarVar                 16
     StrToWord                          24
     WizFiCommand_AT                    24
     WizFiCommand_ATI2                  24
     WizFiCommand_AT_DNSLOOKUP          40
     WizFiCommand_AT_NCLOSEALL          24
     WizFiCommand_AT_NCTCP              40
     WizFiCommand_AT_NDHCP              24
     WizFiCommand_AT_NSET               32
     WizFiCommand_AT_VER                24
     WizFiCommand_AT_WA                 32
     WizFiCommand_AT_WAUTH_1            24
     WizFiCommand_AT_WD                 24
     WizFiCommand_AT_WWEP1              32
     WizFiCommand_AT_WWPA               32
     WizFiCommand_AT_XDUM0              24
     WizFiResponseCommand_AT            16
     WizFiResponseCommand_ATI2          16
     WizFiResponseCommand_AT_DNSLOOKUP
                                        24
     WizFiResponseCommand_AT_NCLOSEALL0
                                        16
     WizFiResponseCommand_AT_NCTCP      40
     WizFiResponseCommand_AT_NDHCP      16
     WizFiResponseCommand_AT_NSET       16
     WizFiResponseCommand_AT_VER        16
     WizFiResponseCommand_AT_WA         16
     WizFiResponseCommand_AT_WAUTH_1
                                        16
     WizFiResponseCommand_AT_WD         16
     WizFiResponseCommand_AT_WWEP1      16
     WizFiResponseCommand_AT_WWPA       16
     WizFiResponseCommand_AT_XDUM0      16
     strstr                              8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     AT91F_PDC_SetNextTx               6
     AT91F_PDC_SetTx                   6
     AT91F_PDC_IsTxEmpty              14
     AT91F_PDC_IsNextTxEmpty          14
     AT91F_PDC_SendFrame              78
     AT91F_US_SendFrame               26
     strstr                           12
     AT                                4
     ATI2                              8
     AT_VER                           12
     AT_XDUM0                         12
     AT_WD                             8
     AT_NDHCP_0                       12
     AT_NDHCP_1                       12
     AT_NSET                          12
     AT_WAUTH_1                       12
     AT_WWEP1                         12
     AT_WWPA                          12
     AT_WA                             8
     AT_DNSLOOKUP                     16
     AT_NCTCP                         12
     AT_NCLOSE                        12
     AT_NCLOSEALL                     16
     AT_WS                             8
     AT_CID                           12
     AT_XRESET                        12
     WizFiCommand_AT                 170
     WizFiResponseCommand_AT         112
     WizFiCommand_AT_VER             104
     WizFiResponseCommand_AT_VER     112
     WizFiCommand_ATI2               104
     WizFiResponseCommand_ATI2       112
     WizFiCommand_AT_XDUM0           108
     WizFiResponseCommand_AT_XDUM0   124
     WizFiCommand_AT_NCLOSEALL        92
     WizFiResponseCommand_AT_NCLOSEALL0
                                     116
     WizFiCommand_AT_WD              116
     WizFiResponseCommand_AT_WD      124
     WizFiCommand_AT_NDHCP           168
     WizFiResponseCommand_AT_NDHCP   124
     WizFiCommand_AT_NSET            364
     WizFiResponseCommand_AT_NSET    124
     WizFiCommand_AT_WAUTH_1         116
     WizFiResponseCommand_AT_WAUTH_1
                                     124
     AsciToHexStr                    102
     WizFiCommand_AT_WWEP1           340
     WizFiResponseCommand_AT_WWEP1   124
     WizFiCommand_AT_WWPA            252
     WizFiResponseCommand_AT_WWPA    124
     WizFiCommand_AT_WA              244
     WizFiResponseCommand_AT_WA      128
     CheckExistDomenaIP              214
     WizFiCommand_AT_DNSLOOKUP       296
     WizFiResponseCommand_AT_DNSLOOKUP
                                     188
     WizFiCommand_AT_NCTCP           408
     WizFiResponseCommand_AT_NCTCP   592
     StrToWord                       120
     GetSpecialAnalogVar             188
     GetSpecialBinarVar              368
     SetSpecialBinarVar              472
     HTTP_Query                     3200
     HTTP_QueryResponse             1596
     HTTP_CheckConnection             84
     HTTP_CheckConnectionResponse    220
     ??DataTable18                     4
     ??DataTable19                     4
     ??DataTable20                     4
     ??DataTable21                     4
     ??DataTable22                     4
     ?<Constant "OK">                  4
     ?<Constant "IP:">                 4
     ?<Constant "[CONNECT">           12
     ?<Constant "Reset">               8
     ?<Constant "WiFi">                8
     ?<Constant "">                    4
     ?<Constant " ">                   4
     ?<Constant "NO CID]">             8
     ?<Constant "[ERROR">              8
     ?<Constant "GET ">                8
     ?<Constant "/dc">                 4
     ?<Constant "%d">                  4
     ?<Constant ".csv HTTP/1.1\r\n">
                                      16
     ?<Constant "User-Agent: CEURON\r\nH...">
                                      28
     ?<Constant ".">                   4
     ?<Constant "\r\n">                4
     ?<Constant "Connection: keep-alive\r\n">
                                      28
     ?<Constant "\r\n\r\n">            8
     ?<Constant "/do">                 4
     ?<Constant "POST ">               8
     ?<Constant "/putgate.php HTTP/1.1...">
                                      52
     ?<Constant "\r\nContent-Length: ">
                                      20
     ?<Constant "   ">                 4
     ?<Constant "\r\nContent-Type: appli...">
                                      64
     ?<Constant "&Order=1&Content=;\r\n">
                                      24
     ?<Constant "Connection: close">
                                      20
     ?<Constant "[OK">                 4
     ?<Constant "No valid Cids">      16

 
    592 bytes in section .rodata
 11 850 bytes in section Debug.txt
 
 11 694 bytes of CODE  memory (+ 156 bytes shared)
    592 bytes of CONST memory

Errors: none
Warnings: 70
