###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           12/Jun/2013  19:50:45 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\core\board.c                                  #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\core\board.c" -D AT91SAM7S256 -D AT91SAM7SEK  #
#                    -D iH -D _LCD_NEGATIV_OLD_ -D __ALARM -D __WIFI_MODULE   #
#                    -D _DEBUG_ -D S300iOld -D _TESTER_ -lC                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\TESTER S300X (Old)\List\" --diag_suppress     #
#                    Pa082 -o "D:\Zeuron\Projekty\S300\S300-program v1.4 -    #
#                    12.06.2013\TESTER S300X (Old)\Obj\" --no_unroll          #
#                    --no_inline --no_tbaa --no_scheduling --debug --endian   #
#                    little --cpu ARM7TDMI -e --fpu None --dlib_config        #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.4 - 12.06.2013\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v1.4 - 12.06.2013\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v1.4 - 12.06.2013\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\Configuration\" -I "C:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.0\ARM\INC\" --section .text=Debug.txt --interwork      #
#                    --cpu_mode thumb -Om                                     #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\TESTER S300X (Old)\List\board.lst             #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\TESTER S300X (Old)\Obj\board.o                #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\core\board.c
      1          /* ----------------------------------------------------------------------------
      2           *         ATMEL Microcontroller Software Support  -  ROUSSET  -
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2006, Atmel Corporation
      5          
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaiimer below.
     13           *
     14           * - Redistributions in binary form must reproduce the above copyright notice,
     15           * this list of conditions and the disclaimer below in the documentation and/or
     16           * other materials provided with the distribution.
     17           *
     18           * Atmel's name may not be used to endorse or promote products derived from
     19           * this software without specific prior written permission.
     20           *
     21           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     22           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     23           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     24           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     25           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     26           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     27           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     28           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     29           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     30           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     31           * ----------------------------------------------------------------------------
     32           */
     33          
     34          /*
     35          $Id: board.c,v 1.1.2.1 2006/12/05 08:33:25 danielru Exp $
     36          */
     37          
     38          //------------------------------------------------------------------------------
     39          //      Includes
     40          //------------------------------------------------------------------------------
     41          
     42          #include "common.h"
     43          #include "device.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_CfgOutput(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_CfgOutput:
   \   00000000   0160               STR      R1,[R0, #+0]
   \   00000002   0161               STR      R1,[R0, #+16]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_CfgInput(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_CfgInput:
   \   00000000   4161               STR      R1,[R0, #+20]
   \   00000002   0160               STR      R1,[R0, #+0]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_CfgPullup(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_CfgPullup:
   \   00000000   CA43               MVNS     R2,R1
   \   00000002   0266               STR      R2,[R0, #+96]
   \   00000004   4166               STR      R1,[R0, #+100]
   \   00000006   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_PIO_GetInput(AT91PS_PIO)
   \                     AT91F_PIO_GetInput:
   \   00000000   C06B               LDR      R0,[R0, #+60]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_SetOutput(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_SetOutput:
   \   00000000   0163               STR      R1,[R0, #+48]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_ClearOutput(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_ClearOutput:
   \   00000000   4163               STR      R1,[R0, #+52]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PMC_EnablePeriphClock(AT91PS_PMC, unsigned int)
   \                     AT91F_PMC_EnablePeriphClock:
   \   00000000   0161               STR      R1,[R0, #+16]
   \   00000002   7047               BX       LR               ;; return
     44          #include "board.h"
     45          
     46          //------------------------------------------------------------------------------
     47          // \brief   Indicates the state of the VBus power line associated with the
     48          //          specified interface.
     49          // \param   pInterface Pointer to an USB controller interface
     50          // \return  true if VBus is detected, false otherwise
     51          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     52          bool BRD_IsVBusConnected(void *pInterface)
     53          {
   \                     BRD_IsVBusConnected:
   \   00000000   01B5               PUSH     {R0,LR}
     54          #ifdef USB_BUS_POWERED
     55              return true;
     56          #else
     57              if (ISSET(AT91F_PIO_GetInput(AT91C_PIO_VBUS), AT91C_VBUS)) {
   \   00000002   ....               LDR      R0,??DataTable9  ;; 0xfffff400
   \   00000004   ........           BL       AT91F_PIO_GetInput
   \   00000008   0221               MOVS     R1,#+2
   \   0000000A   0140               ANDS     R1,R1,R0
   \   0000000C   481E               SUBS     R0,R1,#+1
   \   0000000E   8041               SBCS     R0,R0,R0
   \   00000010   C043               MVNS     R0,R0
   \   00000012   C00F               LSRS     R0,R0,#+31
     58          
     59                  return true;
     60              }
     61              else {
     62          
     63                  return false;
   \   00000014   08BC               POP      {R3}
   \   00000016   02BC               POP      {R1}
   \   00000018   0847               BX       R1               ;; return
     64              }
     65          #endif
     66          }
     67          
     68          //------------------------------------------------------------------------------
     69          // \brief   Enables the external pull-up on D+ associated with the specified
     70          //          USB controller
     71          // \param   pInterface Pointer to an USB controller interface
     72          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     73          void BRD_ConnectPullUp(void *pInterface)
     74          {
   \                     BRD_ConnectPullUp:
   \   00000000   01B5               PUSH     {R0,LR}
     75          #if defined(AT91SAM7SEK) || (defined(AT91SAM7A3EK) && (REVISION == REV_B))
     76              AT91F_PIO_ClearOutput(AT91C_PIO_PULLUP, AT91C_PULLUP);
   \   00000002   8021               MOVS     R1,#+128
   \   00000004   4902               LSLS     R1,R1,#+9        ;; #+65536
   \   00000006   ....               LDR      R0,??DataTable9  ;; 0xfffff400
   \   00000008   ........           BL       AT91F_PIO_ClearOutput
     77          
     78          #elif (defined(AT91SAM7A3EK) && (REVISION == REV_A)) || defined(AT91RM9200)
     79              AT91F_PIO_SetOutput(AT91C_PIO_PULLUP, AT91C_PULLUP);
     80          #endif
     81          }
   \   0000000C   08BC               POP      {R3}
   \   0000000E   01BC               POP      {R0}
   \   00000010   0047               BX       R0               ;; return
     82          
     83          //------------------------------------------------------------------------------
     84          // \brief   Disables the external pull-up on D+ associated with the specified
     85          //          USB controller
     86          // \param   pInterface Pointer to an USB controller interface
     87          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     88          void BRD_DisconnectPullUp(void *pInterface)
     89          {
   \                     BRD_DisconnectPullUp:
   \   00000000   01B5               PUSH     {R0,LR}
     90          #if defined(AT91SAM7SEK) || (defined(AT91SAM7A3EK) && (REVISION == REV_B))
     91              AT91F_PIO_SetOutput(AT91C_PIO_PULLUP, AT91C_PULLUP);
   \   00000002   8021               MOVS     R1,#+128
   \   00000004   4902               LSLS     R1,R1,#+9        ;; #+65536
   \   00000006   ....               LDR      R0,??DataTable9  ;; 0xfffff400
   \   00000008   ........           BL       AT91F_PIO_SetOutput
     92          
     93          #elif (defined(AT91SAM7A3EK) && (REVISION == REV_A)) || defined(AT91RM9200)
     94              AT91F_PIO_ClearOutput(AT91C_PIO_PULLUP, AT91C_PULLUP);
     95          #endif
     96          }
   \   0000000C   08BC               POP      {R3}
   \   0000000E   01BC               POP      {R0}
   \   00000010   0047               BX       R0               ;; return
     97          
     98          //------------------------------------------------------------------------------
     99          // \brief   Indicates the state of the external pull-up associated with the
    100          //          specified interface.
    101          // \param   pInterface Pointer to an USB controller interface
    102          // \return  true if the pull-up is currently connected, false otherwise.
    103          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    104          bool BRD_IsPullUpConnected(void *pInterface)
    105          {
   \                     BRD_IsPullUpConnected:
   \   00000000   01B5               PUSH     {R0,LR}
    106          #if defined(AT91SAM7SEK) || (defined(AT91SAM7A3EK) && (REVISION == REV_B))
    107              if (ISSET(AT91F_PIO_GetInput(AT91C_PIO_PULLUP), AT91C_PULLUP)) {
   \   00000002   ....               LDR      R0,??DataTable9  ;; 0xfffff400
   \   00000004   ........           BL       AT91F_PIO_GetInput
   \   00000008   8021               MOVS     R1,#+128
   \   0000000A   4902               LSLS     R1,R1,#+9        ;; #+65536
   \   0000000C   0140               ANDS     R1,R1,R0
   \   0000000E   481E               SUBS     R0,R1,#+1
   \   00000010   8041               SBCS     R0,R0,R0
   \   00000012   C00F               LSRS     R0,R0,#+31
    108          #elif (defined(AT91SAM7A3EK) && (REVISION == REV_A)) || defined(AT91RM9200)
    109          
    110              if (!ISSET(AT91F_PIO_GetInput(AT91C_PIO_PULLUP), AT91C_PULLUP)) {
    111          #else
    112              if (false) {
    113          #endif
    114                  return false;
    115              }
    116              else {
    117          
    118                  return true;
   \   00000014   08BC               POP      {R3}
   \   00000016   02BC               POP      {R1}
   \   00000018   0847               BX       R1               ;; return
    119              }
    120          }
    121          
    122          //------------------------------------------------------------------------------
    123          // \brief   Configures the external pull-up on the D+ line associated with
    124          //          the specified USB controller.
    125          // \param   pInterface Pointer to the USB controller interface
    126          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    127          void BRD_ConfigurePullUp(void *pInterface)
    128          {
   \                     BRD_ConfigurePullUp:
   \   00000000   01B5               PUSH     {R0,LR}
    129          #if defined(AT91SAM7SEK) || defined(AT91SAM7A3EK) || defined(AT91RM9200)
    130              AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << AT91C_ID_PULLUP);
   \   00000002   0421               MOVS     R1,#+4
   \   00000004   ....               LDR      R0,??DataTable8  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
    131              AT91F_PIO_CfgOutput(AT91C_PIO_PULLUP, AT91C_PULLUP);
   \   0000000A   8021               MOVS     R1,#+128
   \   0000000C   4902               LSLS     R1,R1,#+9        ;; #+65536
   \   0000000E   ....               LDR      R0,??DataTable9  ;; 0xfffff400
   \   00000010   ........           BL       AT91F_PIO_CfgOutput
    132          #endif
    133          }
   \   00000014   08BC               POP      {R3}
   \   00000016   01BC               POP      {R0}
   \   00000018   0047               BX       R0               ;; return
    134          
    135          //------------------------------------------------------------------------------
    136          // \brief   Configures the VBus monitoring PIO associated with the specified
    137          //          USB controller.
    138          // \param   pInterface Pointer to the USB controller interface
    139          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    140          void BRD_ConfigureVBus(void *pInterface)
    141          {
   \                     BRD_ConfigureVBus:
   \   00000000   10B5               PUSH     {R4,LR}
    142          #if !defined(USB_BUS_POWERED)
    143              AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << AT91C_ID_VBUS);
   \   00000002   0421               MOVS     R1,#+4
   \   00000004   ....               LDR      R0,??DataTable8  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
    144              AT91F_PIO_CfgPullup(AT91C_PIO_VBUS, ~AT91C_VBUS);
   \   0000000A   ....               LDR      R4,??DataTable9  ;; 0xfffff400
   \   0000000C   0221               MOVS     R1,#+2
   \   0000000E   C943               MVNS     R1,R1            ;; #-3
   \   00000010   2000               MOVS     R0,R4
   \   00000012   ........           BL       AT91F_PIO_CfgPullup
    145              AT91F_PIO_CfgInput(AT91C_PIO_VBUS, AT91C_VBUS);
   \   00000016   0221               MOVS     R1,#+2
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       AT91F_PIO_CfgInput
    146          #endif
    147          }
   \   0000001E   10BC               POP      {R4}
   \   00000020   01BC               POP      {R0}
   \   00000022   0047               BX       R0               ;; return
    148          
    149          
    150          

   \                                 In section Debug.txt, align 4, keep-with-next
    151          void ConfigureIrBus(void)
    152          {
   \                     ConfigureIrBus:
   \   00000000   10B5               PUSH     {R4,LR}
    153          #if !defined(IR_BUS_DEF)
    154              AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << IR_ID_BUS);
   \   00000002   0421               MOVS     R1,#+4
   \   00000004   ....               LDR      R0,??DataTable8  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
    155              AT91F_PIO_CfgPullup(IR_PIO_BUS, ~IR_BUS);
   \   0000000A   ....               LDR      R4,??DataTable9  ;; 0xfffff400
   \   0000000C   0549               LDR      R1,??ConfigureIrBus_0  ;; 0xffff7fff
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   ........           BL       AT91F_PIO_CfgPullup
    156              AT91F_PIO_CfgInput(IR_PIO_BUS, IR_BUS);
   \   00000014   8021               MOVS     R1,#+128
   \   00000016   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       AT91F_PIO_CfgInput
    157          #endif
    158          }
   \   0000001E   10BC               POP      {R4}
   \   00000020   01BC               POP      {R0}
   \   00000022   0047               BX       R0               ;; return
   \                     ??ConfigureIrBus_0:
   \   00000024   FF7FFFFF           DC32     0xffff7fff

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   00FCFFFF           DC32     0xfffffc00

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   00F4FFFF           DC32     0xfffff400

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     AT91F_PIO_CfgInput               0
     AT91F_PIO_CfgOutput              0
     AT91F_PIO_CfgPullup              0
     AT91F_PIO_ClearOutput            0
     AT91F_PIO_GetInput               0
     AT91F_PIO_SetOutput              0
     AT91F_PMC_EnablePeriphClock      0
     BRD_ConfigurePullUp              8
     BRD_ConfigureVBus                8
     BRD_ConnectPullUp                8
     BRD_DisconnectPullUp             8
     BRD_IsPullUpConnected            8
     BRD_IsVBusConnected              8
     ConfigureIrBus                   8


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     AT91F_PIO_CfgOutput            6
     AT91F_PIO_CfgInput             6
     AT91F_PIO_CfgPullup            8
     AT91F_PIO_GetInput             4
     AT91F_PIO_SetOutput            4
     AT91F_PIO_ClearOutput          4
     AT91F_PMC_EnablePeriphClock    4
     BRD_IsVBusConnected           26
     BRD_ConnectPullUp             18
     BRD_DisconnectPullUp          18
     BRD_IsPullUpConnected         26
     BRD_ConfigurePullUp           26
     BRD_ConfigureVBus             36
     ConfigureIrBus                40
     ??DataTable8                   4
     ??DataTable9                   4

 
 234 bytes in section Debug.txt
 
 198 bytes of CODE memory (+ 36 bytes shared)

Errors: none
Warnings: none
